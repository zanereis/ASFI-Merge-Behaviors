[{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1546725404","html_url":"https://github.com/apache/lucenenet/issues/723#issuecomment-1546725404","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/723","id":1546725404,"node_id":"IC_kwDOAAJ06c5cMSgc","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-13T18:25:26Z","updated_at":"2023-05-13T18:25:26Z","author_association":"CONTRIBUTOR","body":"Closing for inactivity.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1546725404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1549857470","html_url":"https://github.com/apache/lucenenet/pull/852#issuecomment-1549857470","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/852","id":1549857470,"node_id":"IC_kwDOAAJ06c5cYPK-","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-16T15:06:07Z","updated_at":"2023-05-16T15:06:07Z","author_association":"CONTRIBUTOR","body":"@laimis - I have fixed the dependency conflict. But this still doesn't include the changes for  `<MavenReference>`. Since that basically builds on this, I will create a branch of this branch to add those changes. If it doesn't work, we can merge this branch instead.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1549857470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1550331398","html_url":"https://github.com/apache/lucenenet/pull/852#issuecomment-1550331398","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/852","id":1550331398,"node_id":"IC_kwDOAAJ06c5caC4G","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-16T20:40:58Z","updated_at":"2023-05-16T20:40:58Z","author_association":"CONTRIBUTOR","body":"Okay, looks like MavenReference is a bust for now: https://github.com/ikvmnet/ikvm-maven/issues/10#issuecomment-1550300017.\r\n\r\nThe fix for that is similar to how we do the file locking in Lucene.NET on macOS in the [NativeFSLockFactory](https://github.com/apache/lucenenet/blob/19cb0c1d806462aad2b6297e0885491062887456/src/Lucene.Net/Store/NativeFSLockFactory.cs). Unfortunately, IKVM requires nearly 100 GB to build, and I don't have that kind of disk space to spare. But if you want to have a go at it, you are welcome.\r\n\r\nWe have yet another issue with this addition - referencing IKVM adds about 4 minutes of build time to Azure DevOps and will almost certainly slow down the GitHub Actions builds as well. Unfortunately, the size of the IKVM NuGet package and dependencies has exploded. In both Azure DevOps and GitHub Actions, there are options for caching NuGet packages so they don't have to be downloaded per build. We used to have it set up on Azure DevOps, but it wasn't set up to invalidate the cache when `.build/dependencies.props` changes and I couldn't figure out how to get it cleared after versions of dependencies were updated. So, we will need to investigate this, also. The cache key we need to use should include all `*.props`, `*.targets` and `*.csproj` files.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1550331398/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1551906172","html_url":"https://github.com/apache/lucenenet/issues/851#issuecomment-1551906172","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/851","id":1551906172,"node_id":"IC_kwDOAAJ06c5cgDV8","user":{"login":"laimis","id":911757,"node_id":"MDQ6VXNlcjkxMTc1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/911757?v=4","gravatar_id":"","url":"https://api.github.com/users/laimis","html_url":"https://github.com/laimis","followers_url":"https://api.github.com/users/laimis/followers","following_url":"https://api.github.com/users/laimis/following{/other_user}","gists_url":"https://api.github.com/users/laimis/gists{/gist_id}","starred_url":"https://api.github.com/users/laimis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/laimis/subscriptions","organizations_url":"https://api.github.com/users/laimis/orgs","repos_url":"https://api.github.com/users/laimis/repos","events_url":"https://api.github.com/users/laimis/events{/privacy}","received_events_url":"https://api.github.com/users/laimis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-17T18:59:39Z","updated_at":"2023-05-17T18:59:39Z","author_association":"CONTRIBUTOR","body":"Oh snap, sorry about that, I thought I checked but somehow missed the previous issue. I will close this one, and we can go back to #460 for the conversations.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1551906172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1555009379","html_url":"https://github.com/apache/lucenenet/pull/852#issuecomment-1555009379","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/852","id":1555009379,"node_id":"IC_kwDOAAJ06c5cr49j","user":{"login":"laimis","id":911757,"node_id":"MDQ6VXNlcjkxMTc1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/911757?v=4","gravatar_id":"","url":"https://api.github.com/users/laimis","html_url":"https://github.com/laimis","followers_url":"https://api.github.com/users/laimis/followers","following_url":"https://api.github.com/users/laimis/following{/other_user}","gists_url":"https://api.github.com/users/laimis/gists{/gist_id}","starred_url":"https://api.github.com/users/laimis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/laimis/subscriptions","organizations_url":"https://api.github.com/users/laimis/orgs","repos_url":"https://api.github.com/users/laimis/repos","events_url":"https://api.github.com/users/laimis/events{/privacy}","received_events_url":"https://api.github.com/users/laimis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-19T17:29:55Z","updated_at":"2023-05-19T17:29:55Z","author_association":"CONTRIBUTOR","body":"Nice, thanks for the changes there, it looks like it successfully completed on azure:\r\n\r\nhttps://dev.azure.com/lucene-net-temp4/Main/_build?definitionId=1\r\n\r\nCould we use the changes made in this branch as is to release Analysis.OpenNLP? I am not following why is IKVM needed. I definitely have the space/resources to build it, just not sure what is needed.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1555009379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1567711548","html_url":"https://github.com/apache/lucenenet/issues/772#issuecomment-1567711548","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/772","id":1567711548,"node_id":"IC_kwDOAAJ06c5dcWE8","user":{"login":"mpdunlop","id":1008468,"node_id":"MDQ6VXNlcjEwMDg0Njg=","avatar_url":"https://avatars.githubusercontent.com/u/1008468?v=4","gravatar_id":"","url":"https://api.github.com/users/mpdunlop","html_url":"https://github.com/mpdunlop","followers_url":"https://api.github.com/users/mpdunlop/followers","following_url":"https://api.github.com/users/mpdunlop/following{/other_user}","gists_url":"https://api.github.com/users/mpdunlop/gists{/gist_id}","starred_url":"https://api.github.com/users/mpdunlop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mpdunlop/subscriptions","organizations_url":"https://api.github.com/users/mpdunlop/orgs","repos_url":"https://api.github.com/users/mpdunlop/repos","events_url":"https://api.github.com/users/mpdunlop/events{/privacy}","received_events_url":"https://api.github.com/users/mpdunlop/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-30T03:30:58Z","updated_at":"2023-05-30T03:30:58Z","author_association":"NONE","body":"Looks like a clean solution 🙂 Thank you very much! ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1567711548/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1587329711","html_url":"https://github.com/apache/lucenenet/issues/860#issuecomment-1587329711","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/860","id":1587329711,"node_id":"IC_kwDOAAJ06c5enLqv","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-06-12T13:18:21Z","updated_at":"2023-06-12T13:18:21Z","author_association":"CONTRIBUTOR","body":"https://lucenenet.apache.org/docs/4.8.0-beta00005/api/Lucene.Net.Analysis/Lucene.Net.Analysis.Standard.StandardAnalyzer.html\r\n\r\n// Filters [StandardTokenizer](https://lucenenet.apache.org/docs/4.8.0-beta00005/api/Lucene.Net.Analysis/Lucene.Net.Analysis.Standard.StandardTokenizer.html) with [StandardFilter](https://lucenenet.apache.org/docs/4.8.0-beta00005/api/Lucene.Net.Analysis/Lucene.Net.Analysis.Standard.StandardFilter.html), [LowerCaseFilter](https://lucenenet.apache.org/docs/4.8.0-beta00005/api/Lucene.Net.Analysis/Lucene.Net.Analysis.Core.LowerCaseFilter.html) and [StopFilter](https://lucenenet.apache.org/docs/4.8.0-beta00005/api/Lucene.Net.Analysis/Lucene.Net.Analysis.Core.StopFilter.html), using a list of English stop words.\r\n\r\nI am quite sure that \"on\" is in the list of common english stopwords, so if you wish to index that you should pass an empty list of stop words or the list you would like it to filter away.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1587329711/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1587409698","html_url":"https://github.com/apache/lucenenet/issues/860#issuecomment-1587409698","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/860","id":1587409698,"node_id":"IC_kwDOAAJ06c5enfMi","user":{"login":"emrakin","id":40882173,"node_id":"MDQ6VXNlcjQwODgyMTcz","avatar_url":"https://avatars.githubusercontent.com/u/40882173?v=4","gravatar_id":"","url":"https://api.github.com/users/emrakin","html_url":"https://github.com/emrakin","followers_url":"https://api.github.com/users/emrakin/followers","following_url":"https://api.github.com/users/emrakin/following{/other_user}","gists_url":"https://api.github.com/users/emrakin/gists{/gist_id}","starred_url":"https://api.github.com/users/emrakin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/emrakin/subscriptions","organizations_url":"https://api.github.com/users/emrakin/orgs","repos_url":"https://api.github.com/users/emrakin/repos","events_url":"https://api.github.com/users/emrakin/events{/privacy}","received_events_url":"https://api.github.com/users/emrakin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-06-12T14:04:37Z","updated_at":"2023-06-12T14:04:37Z","author_association":"NONE","body":" var defaultStopWords = StopAnalyzer.ENGLISH_STOP_WORDS_SET;\r\n \r\n {[but, be, with, such, then, for, no, will, not, are, and, their, if, this, on, into, a, or, there, in, that, they, was, is, it, an, the, as, at, these, by, to, of]}\r\n \r\n thanks @jeme ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1587409698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1592932217","html_url":"https://github.com/apache/lucenenet/pull/863#issuecomment-1592932217","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/863","id":1592932217,"node_id":"IC_kwDOAAJ06c5e8jd5","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-06-15T12:15:54Z","updated_at":"2023-06-15T12:15:54Z","author_association":"CONTRIBUTOR","body":"Thanks for these fixes.  They look good.  I wish merging them in were easier.  \r\n\r\nCommitting the PR is easy, of course, but the process to get the committed file published to the website is currently manual, and it always takes me a bit of studying to remember how to make that happen.  I don't have the time to dig into that right now, so it could be a few weeks before I can look into that.  \r\n\r\nThen again, someone else on the committer team may jump in and handle it.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1592932217/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1593517401","html_url":"https://github.com/apache/lucenenet/pull/863#issuecomment-1593517401","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/863","id":1593517401,"node_id":"IC_kwDOAAJ06c5e-yVZ","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-06-15T18:07:45Z","updated_at":"2023-06-15T18:07:45Z","author_association":"CONTRIBUTOR","body":"I thought the website build would be automatic for any commit to this path: https://github.com/apache/lucenenet/blob/51cc7418adf9da96cd37dd64ff5085d752a54074/.github/workflows/Lucene-Net-Website.yml#L37\r\n\r\nBut maybe, it is only automatic in combination with a release tag when we publish a release.\r\n\r\nIn any case, more docs are here https://github.com/apache/lucenenet-site\r\n\r\nBut I think for non-release site changes we can just manually run this Action against main branch: https://github.com/apache/lucenenet/actions/workflows/Lucene-Net-Website.yml","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1593517401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1593696539","html_url":"https://github.com/apache/lucenenet/pull/863#issuecomment-1593696539","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/863","id":1593696539,"node_id":"IC_kwDOAAJ06c5e_eEb","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-06-15T20:39:40Z","updated_at":"2023-06-15T20:39:40Z","author_association":"CONTRIBUTOR","body":"Thanks @Shazwazza \r\n\r\n Yah, I put some docs here too: https://github.com/apache/lucenenet-site \r\n\r\n> I thought the website build would be automatic for any commit to this path: 'websites/site/**/*' \r\n\r\nI don't know, it hasn't been working that way. I've been having to do a manual PR to get the files over to https://github.com/apache/lucenenet-site/tree/asf-site and it always takes me a bit to research and re-remember the flow and how to run DocFX locally on my machine to try things out first.\r\n\r\n> But maybe, it is only automatic in combination with a release tag when we publish a release.\r\n\r\nHmmm. That's an interesting clue.  Maybe.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1593696539/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1606176526","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1606176526","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1606176526,"node_id":"IC_kwDOAAJ06c5fvE8O","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-06-25T17:32:32Z","updated_at":"2023-06-25T17:32:32Z","author_association":"CONTRIBUTOR","body":"I think we're ready, \r\n@NightOwl888 what's your opinion? maybe RC? ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1606176526/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1635760651","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1635760651","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1635760651,"node_id":"IC_kwDOAAJ06c5hf7oL","user":{"login":"laimis","id":911757,"node_id":"MDQ6VXNlcjkxMTc1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/911757?v=4","gravatar_id":"","url":"https://api.github.com/users/laimis","html_url":"https://github.com/laimis","followers_url":"https://api.github.com/users/laimis/followers","following_url":"https://api.github.com/users/laimis/following{/other_user}","gists_url":"https://api.github.com/users/laimis/gists{/gist_id}","starred_url":"https://api.github.com/users/laimis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/laimis/subscriptions","organizations_url":"https://api.github.com/users/laimis/orgs","repos_url":"https://api.github.com/users/laimis/repos","events_url":"https://api.github.com/users/laimis/events{/privacy}","received_events_url":"https://api.github.com/users/laimis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-14T12:00:06Z","updated_at":"2023-07-14T12:00:06Z","author_association":"CONTRIBUTOR","body":"I had to go on a month+ trip but back now. I haven't heard much from @NightOwl888 recently, he must be busy with some other commitments. The last piece of work I pushed before taking off was this #852 . It's not entirely clear if I can pull into main what we have there or if Shad was considering more changes to the approach.\r\n\r\nHaving re-familiarized myself with the project and talking with Shad more about why it's been difficult to make a production release, I think I can give this explanation for it:\r\n\r\n- The goal for the Lucene.NET is to have production releases map one-to-one to Lucene releases as much as possible. It makes sense. We want people that find java docs or examples online for 4.8.1 version to be compatible with .NET version with minor language based tweaks. The API surface and functionality should remain the same. We do break API equivalency here and there, but we try to do so as little as possible.\r\n\r\nThe difficulty lies in what to do if we release 4.8.1 and find a bug. OK, we make a patch release, 4.8.2 that fixes that bug. But now, Java Lucene does not have 4.8.2 version. Worse, what if the issue we discover requires a change that's a breaking change, and we in theory would increment the minor version, end up with 4.9.x release which would have API/changes that are not compatible with Java Lucene 4.9.x releases that exist. And with fixes to those we would have releases that don't exist in Java world once again, e.g. 4.9.3.\r\n\r\nAnd I think that's the main issue why Shad has been extremely careful and reluctant to do production releases of the project. We know that bugs are lurking in the code base, but with each pass they are more and more difficult to find, and we can't guarantee that 4.8.1 we release will not require changes.\r\n\r\nA careful discussion and consideration is needed here, but one way forward would be to come as a group with the remaining committers that still at least chime in and perhaps draw a line in the sand and say ok, 4.8.1 prod release we are making attempts to be as close as possible to Lucene 4.8.1 release. All releases going forward from that will attempt to stay close at the \"major\" version but all the minor/patch releases can and will deviate greatly.\r\n\r\nI am not proposing this lightly, but it does seem to offer some sort of way forward with making a production release and potentially allowing for a more frequent prod update cadence without keeping ourselves accountable for those versions to be one-to-one mapped to Java world.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1635760651/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1635918971","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1635918971","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1635918971,"node_id":"IC_kwDOAAJ06c5hgiR7","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-14T14:08:30Z","updated_at":"2023-07-14T14:08:30Z","author_association":"CONTRIBUTOR","body":"@laimis I think that makes a lot of sense.  Given that we haven't previously had an approach for versioning when rolling bug fixes or breaking changes once Lucene.NET 4.8 is released it's very understandable that we have held a very high bar to what needs to be achieved before doing a production release.  \r\n\r\nI personally think that what you propose as a solution seems reasonable.  And who knows, perhaps someone will offer up other solutions that may be even better.  But I think as a dev community we need to rally around some versioning approach whatever it is.  Having a versioning approach and an understanding of what versions align with Java Lucene and which ones don't will give us the freedom to get Lucene.NET released.  \r\n\r\nDoing a production release of the library will untie the hands of developers that would love to use it but who are restricted from doing so due to company policies not allowing pre-release software into production environments.  Releasing the software will thus grow our developer community and hopefully our committer pool as well.  Also, releasing the software will grow the use cases that are actively being utilized and provide valuable feedback on where the library can be improved.\r\n\r\nWhat you propose seems reasonable however it's a bit challenging that this is a release of 4.8.1 rather than 4.0.  As such we only have 4.9 as a potential breaking change release, then we hit a major version 5.0.  This could cause us to be forced to release a braking change as a point release, say 4.9.1.  This challenge of course goes away in the future if the next major release of Lucene.NET has a low minor release number.  e.g. 10.3 but we have the same issue in the future if the next major release of Lucene.NET has a high minor release number like 9.7 (the current version of Java Lucene).  It's a bit challenging I guess, but we may just have to get comfortable with the idea of a breaking change in a point release.  ie. 4.91. (shrug)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1635918971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1646599118","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1646599118","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1646599118,"node_id":"IC_kwDOAAJ06c5iJRvO","user":{"login":"laimis","id":911757,"node_id":"MDQ6VXNlcjkxMTc1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/911757?v=4","gravatar_id":"","url":"https://api.github.com/users/laimis","html_url":"https://github.com/laimis","followers_url":"https://api.github.com/users/laimis/followers","following_url":"https://api.github.com/users/laimis/following{/other_user}","gists_url":"https://api.github.com/users/laimis/gists{/gist_id}","starred_url":"https://api.github.com/users/laimis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/laimis/subscriptions","organizations_url":"https://api.github.com/users/laimis/orgs","repos_url":"https://api.github.com/users/laimis/repos","events_url":"https://api.github.com/users/laimis/events{/privacy}","received_events_url":"https://api.github.com/users/laimis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-22T14:44:29Z","updated_at":"2023-07-22T14:44:29Z","author_association":"CONTRIBUTOR","body":"@rclabo thank you for chiming in. Curious about this part that you mention:\r\n\r\n> What you propose seems reasonable however it's a bit challenging that this is a release of 4.8.1 rather than 4.0. As such we only have 4.9 as a potential breaking change release, then we hit a major version 5.0\r\n\r\nAfter 4.9, wouldn't we have 4.10.x as an option? 4.11.x after, etc?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1646599118/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1647838572","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1647838572","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1647838572,"node_id":"IC_kwDOAAJ06c5iOAVs","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-24T12:40:58Z","updated_at":"2023-07-24T12:40:58Z","author_association":"CONTRIBUTOR","body":"@laimis That really made me laugh (at myself).  You are totally right.  For some reason when I wrote that it didn't even occur to me that we could have a 4.10.x!  That's pretty funny.  Definitely, after 4.9 we can have 4.10.x as an option, and after that 4.11.x.  Thanks for being gracious in your question. ;-)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1647838572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1656728073","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1656728073","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1656728073,"node_id":"IC_kwDOAAJ06c5iv6oJ","user":{"login":"nikcio","id":24605285,"node_id":"MDQ6VXNlcjI0NjA1Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/24605285?v=4","gravatar_id":"","url":"https://api.github.com/users/nikcio","html_url":"https://github.com/nikcio","followers_url":"https://api.github.com/users/nikcio/followers","following_url":"https://api.github.com/users/nikcio/following{/other_user}","gists_url":"https://api.github.com/users/nikcio/gists{/gist_id}","starred_url":"https://api.github.com/users/nikcio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikcio/subscriptions","organizations_url":"https://api.github.com/users/nikcio/orgs","repos_url":"https://api.github.com/users/nikcio/repos","events_url":"https://api.github.com/users/nikcio/events{/privacy}","received_events_url":"https://api.github.com/users/nikcio/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-29T13:15:32Z","updated_at":"2023-07-29T13:15:32Z","author_association":"CONTRIBUTOR","body":"I've been reading your latest comments about the problems with versioning and a production release and think I have an idea to solve this problem. What if we use the Lucene version as is and then add an extra number to the end to signal the current iteration of the version? That way you still have the consistency of matching the Lucene Java version and .Net version but can still make improvements like bug fixes that weren't caught in a preview/beta phase. (See this image for an example)\r\n\r\n![Group 2](https://github.com/apache/lucenenet/assets/24605285/754c5947-9a4b-4672-bba3-d1cb0d9342e8)\r\n\r\nWe also have to remember that no one can be sure that they have bug-free software and that unforeseen problems do come up no matter how long we work on something. So I think it would be better to use iterations instead of neverending beta releases like there have been for a while now with the current 4.8.0 release. This also gives a better signal of when you can use Lucene in production as has been mentioned time and time again that many people do even though it's in beta.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1656728073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1658375039","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1658375039","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1658375039,"node_id":"IC_kwDOAAJ06c5i2Mt_","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-31T13:29:06Z","updated_at":"2023-07-31T13:29:06Z","author_association":"CONTRIBUTOR","body":"@nikcio - I think this is a fine proposal and in some ways, I like this approach better because it makes it more clear which version LuceneNET is in rough alignment with,  The one thing lost with this approach is the ability to tell, via the version number, if an iteration of a version is a breaking change.  But honestly, that doesn't bother me personally a bit.  In my case, if I'm upgrading to a newer version of LuceneNET for my project, then I'm probably reading the release notes to see what new goodies it includes.  And in that process, I'd be made aware of any breaking changes and the nature of those changes.  That's sufficient for me and probably for a lot of devs.  However, I know versioning can be an opinionated topic so it will be interesting to see how others on the dev mailing list feel.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1658375039/reactions","total_count":3,"+1":2,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1658934895","html_url":"https://github.com/apache/lucenenet/pull/868#issuecomment-1658934895","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/868","id":1658934895,"node_id":"IC_kwDOAAJ06c5i4VZv","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-31T18:31:36Z","updated_at":"2023-07-31T18:31:36Z","author_association":"CONTRIBUTOR","body":"Thanks for the PR.\r\n\r\nHowever, this does not comply with [Apache's licensing policy](https://www.apache.org/legal/release-policy.html#licensing).\r\n\r\n1. For source packages, LICENSE and NOTICE MUST be located at the root of the distribution. For additional packages, they MUST be located in the distribution format's customary location for licensing materials, such as the META-INF directory of Java \"jar\" files.\r\n2. When a package bundles code under several licenses, the LICENSE file MUST contain details of all these licenses. For each component which is not Apache licensed, details of the component MUST be appended to the LICENSE file. The component license itself MUST either be appended or else stored elsewhere in the package with a pointer to it from the LICENSE file, e.g. if the license is long.\r\n\r\nAs parts of Lucene.NET are covered by more than once license, this licensing expression doesn't meet our needs. See: https://github.com/apache/lucenenet/blob/51cc7418adf9da96cd37dd64ff5085d752a54074/LICENSE.txt#L206-L751","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1658934895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1667790936","html_url":"https://github.com/apache/lucenenet/issues/869#issuecomment-1667790936","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/869","id":1667790936,"node_id":"IC_kwDOAAJ06c5jaHhY","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-07T12:45:25Z","updated_at":"2023-08-07T12:45:25Z","author_association":"CONTRIBUTOR","body":"`StandardAnalyzer` is the wrong tool for the job. See: https://stackoverflow.com/questions/3612761/searching-hyphenated-words-with-lucene\r\n\r\nNote that we don't use jflex or any other form of generation in .NET, so if you need to modify the `StandardAnalyzer` behavior, you will either have to do the `StandardTokenizer` code generation in Java and then port it to C# or analyze and modify the C# code directly of `StandardTokenizer.cs`. Or simply use `WhiteSpaceTokenizer` with a `LowercaseFilter` as suggested in the comments.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1667790936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1674168292","html_url":"https://github.com/apache/lucenenet/issues/865#issuecomment-1674168292","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/865","id":1674168292,"node_id":"IC_kwDOAAJ06c5jycfk","user":{"login":"Jeevananthan-23","id":71455761,"node_id":"MDQ6VXNlcjcxNDU1NzYx","avatar_url":"https://avatars.githubusercontent.com/u/71455761?v=4","gravatar_id":"","url":"https://api.github.com/users/Jeevananthan-23","html_url":"https://github.com/Jeevananthan-23","followers_url":"https://api.github.com/users/Jeevananthan-23/followers","following_url":"https://api.github.com/users/Jeevananthan-23/following{/other_user}","gists_url":"https://api.github.com/users/Jeevananthan-23/gists{/gist_id}","starred_url":"https://api.github.com/users/Jeevananthan-23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jeevananthan-23/subscriptions","organizations_url":"https://api.github.com/users/Jeevananthan-23/orgs","repos_url":"https://api.github.com/users/Jeevananthan-23/repos","events_url":"https://api.github.com/users/Jeevananthan-23/events{/privacy}","received_events_url":"https://api.github.com/users/Jeevananthan-23/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-11T03:25:32Z","updated_at":"2023-08-11T03:25:32Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1674168292/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1684912186","html_url":"https://github.com/apache/lucenenet/issues/763#issuecomment-1684912186","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/763","id":1684912186,"node_id":"IC_kwDOAAJ06c5kbbg6","user":{"login":"mikemccand","id":796508,"node_id":"MDQ6VXNlcjc5NjUwOA==","avatar_url":"https://avatars.githubusercontent.com/u/796508?v=4","gravatar_id":"","url":"https://api.github.com/users/mikemccand","html_url":"https://github.com/mikemccand","followers_url":"https://api.github.com/users/mikemccand/followers","following_url":"https://api.github.com/users/mikemccand/following{/other_user}","gists_url":"https://api.github.com/users/mikemccand/gists{/gist_id}","starred_url":"https://api.github.com/users/mikemccand/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikemccand/subscriptions","organizations_url":"https://api.github.com/users/mikemccand/orgs","repos_url":"https://api.github.com/users/mikemccand/repos","events_url":"https://api.github.com/users/mikemccand/events{/privacy}","received_events_url":"https://api.github.com/users/mikemccand/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-19T10:18:27Z","updated_at":"2023-08-19T10:18:27Z","author_association":"MEMBER","body":"Has anyone opened a Lucene java issue with the ideas here?  I am no expert on async/await but I do think this is a gap in Lucene java.  Search is often IO bound and it's crazy that Lucene java's design must stall a whole thread waiting from the IO reads, blocking getting the other IO requests shortly necessary to continue the search.  Maybe the new virtual threads (in JDK 21) somehow helps here, not sure.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1684912186/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1685294114","html_url":"https://github.com/apache/lucenenet/issues/763#issuecomment-1685294114","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/763","id":1685294114,"node_id":"IC_kwDOAAJ06c5kc4wi","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-20T14:05:05Z","updated_at":"2023-08-20T14:05:05Z","author_association":"CONTRIBUTOR","body":"> Has anyone opened a Lucene java issue with the ideas here? I am no expert on async/await but I do think this is a gap in Lucene java. Search is often IO bound and it's crazy that Lucene java's design must stall a whole thread waiting from the IO reads, blocking getting the other IO requests shortly necessary to continue the search. Maybe the new virtual threads (in JDK 21) somehow helps here, not sure.\r\n\r\nThere is no open issue that I am aware of. However, I agree it would be a great addition. ASP.NET Core and other common UI frameworks tend to use async/await support throughout and fitting Lucene into the picture requires blocking IO. Being able to do an async search would be a nicer fit for these UI frameworks. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1685294114/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1691442148","html_url":"https://github.com/apache/lucenenet/issues/763#issuecomment-1691442148","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/763","id":1691442148,"node_id":"IC_kwDOAAJ06c5k0Vvk","user":{"login":"Jeevananthan-23","id":71455761,"node_id":"MDQ6VXNlcjcxNDU1NzYx","avatar_url":"https://avatars.githubusercontent.com/u/71455761?v=4","gravatar_id":"","url":"https://api.github.com/users/Jeevananthan-23","html_url":"https://github.com/Jeevananthan-23","followers_url":"https://api.github.com/users/Jeevananthan-23/followers","following_url":"https://api.github.com/users/Jeevananthan-23/following{/other_user}","gists_url":"https://api.github.com/users/Jeevananthan-23/gists{/gist_id}","starred_url":"https://api.github.com/users/Jeevananthan-23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jeevananthan-23/subscriptions","organizations_url":"https://api.github.com/users/Jeevananthan-23/orgs","repos_url":"https://api.github.com/users/Jeevananthan-23/repos","events_url":"https://api.github.com/users/Jeevananthan-23/events{/privacy}","received_events_url":"https://api.github.com/users/Jeevananthan-23/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-24T10:43:05Z","updated_at":"2023-08-24T10:43:05Z","author_association":"CONTRIBUTOR","body":"Hi @mikemccand / @NightOwl888, supporting async for **Lucene** really great idea because in recent-day talks about scalability, how to write high-performance code matters, and the landscape for search engines(Vector search engines) gradually increased. I feel that Lucene's legacy code base had many improvements over the period of time but lags with web-scale capability meaning that Lucene is not used in search engines like Google Search(BigTable)/Bing Search (RocksDb) [_That's a separate rant 🤣_].\r\n\r\nAdding async/await in **Lucene(java)** by using _**Virtual Threads(in JDK21**_) is still in preview/beta and may be changed in the near future. Lucene(java) already implemented using the `ThreadPoolExector ` which is similar to `TaskScheduler` and uses ThreadPools to run the threads. \r\n\r\nOn the other hand, **Lucenenet(C#)** current code base lags behind compared to Lucene(java) V9.x.x. but `C#` is already very mature in the grade of supporting async/await from low-level APIs like **async I/O bound operations**. IMO we can implement and test the performance of **async operations in Lucenenet at first** and move to the Java version if virtual threads become stable. \r\n\r\n_Note: Also will work on removing J2N overhead if possible_ ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1691442148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1750417245","html_url":"https://github.com/apache/lucenenet/issues/872#issuecomment-1750417245","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/872","id":1750417245,"node_id":"IC_kwDOAAJ06c5oVT9d","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-06T11:04:32Z","updated_at":"2023-10-06T11:04:32Z","author_association":"CONTRIBUTOR","body":"That's unfortunate.  We appreciate the heads up.  Seems like the suggestion to copy the older Weak Conditional Table code (under the prior license) might be the way to go?  \r\n\r\nWhat do other's think?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1750417245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1752122329","html_url":"https://github.com/apache/lucenenet/issues/872#issuecomment-1752122329","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/872","id":1752122329,"node_id":"IC_kwDOAAJ06c5ob0PZ","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-08T18:19:26Z","updated_at":"2023-10-09T04:18:24Z","author_association":"CONTRIBUTOR","body":"This will only affect .NET Framework/.NET Standard 2.0 users - so this is all legacy. Previously the code was under MIT and now it has either a Community or Commercial license.\r\n\r\nConditionalWeakTable is missing the enumerator prior to .NET Standard 2.1 and newer versions cannot be back ported because it ties directly into the GC in native code. This is the reason why we went with weak events in the first place. See #613. Porting it is a dead end.\r\n\r\nThere are at least 3 options:\r\n\r\n1. Leave the current dependency. If someone wants to upgrade, let them deal with the licensing. Presumably, they won't be upgrading unless they have a license, anyway.\r\n2. Go to a commit in Prism that had an MIT license and copy the weak event code into the Support/Util/Events folder (in the namespace Lucene.Net.Util.Events) and add the headers as specified in the [prior license](https://github.com/PrismLibrary/Prism/blob/7ca126dcddbad026d087b42f8c16914af12d7fcd/LICENSE). There are only a few types that we depend on and it is all pure C# code. All of the types should be made internal.\r\n3. Adapt the weak events to use [WeakEventManager](https://learn.microsoft.com/en-us/dotnet/api/system.windows.weakeventmanager?view=windowsdesktop-7.0) in .NET Framework (See [Weak event patterns](https://learn.microsoft.com/en-us/dotnet/desktop/wpf/events/weak-event-patterns?view=netdesktop-7.0)) and remove the dependency on the Prism.Core package. This would require us to drop support for .NET Standard 2.0, but this is something we are considering doing anyway.\r\n\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1752122329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1752153588","html_url":"https://github.com/apache/lucenenet/issues/872#issuecomment-1752153588","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/872","id":1752153588,"node_id":"IC_kwDOAAJ06c5ob730","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-08T20:23:54Z","updated_at":"2023-10-08T20:23:54Z","author_association":"CONTRIBUTOR","body":"Thanks @NightOwl888  for the detailed response and options,\r\nAFAIK most of the users moving anyway from .NET standard 2.0, so its a good bet.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1752153588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1752529714","html_url":"https://github.com/apache/lucenenet/issues/872#issuecomment-1752529714","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/872","id":1752529714,"node_id":"IC_kwDOAAJ06c5odXsy","user":{"login":"rauhs","id":11081351,"node_id":"MDQ6VXNlcjExMDgxMzUx","avatar_url":"https://avatars.githubusercontent.com/u/11081351?v=4","gravatar_id":"","url":"https://api.github.com/users/rauhs","html_url":"https://github.com/rauhs","followers_url":"https://api.github.com/users/rauhs/followers","following_url":"https://api.github.com/users/rauhs/following{/other_user}","gists_url":"https://api.github.com/users/rauhs/gists{/gist_id}","starred_url":"https://api.github.com/users/rauhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rauhs/subscriptions","organizations_url":"https://api.github.com/users/rauhs/orgs","repos_url":"https://api.github.com/users/rauhs/repos","events_url":"https://api.github.com/users/rauhs/events{/privacy}","received_events_url":"https://api.github.com/users/rauhs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-09T08:11:32Z","updated_at":"2023-10-09T08:11:32Z","author_association":"CONTRIBUTOR","body":"I'd not use `WeakEventManager`. It's tied to WPF/WindowsBase, which is something a lot of projects do not want to pull in.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1752529714/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1752590728","html_url":"https://github.com/apache/lucenenet/issues/872#issuecomment-1752590728","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/872","id":1752590728,"node_id":"IC_kwDOAAJ06c5odmmI","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-09T08:55:04Z","updated_at":"2023-10-09T08:55:04Z","author_association":"CONTRIBUTOR","body":"> I'd not use `WeakEventManager`. It's tied to WPF/WindowsBase, which is something a lot of projects do not want to pull in.\r\n\r\nAgreed. WeakEventManager seems over-engineered, anyway. IMO, the best option would be to bring in the types from Prism into our codebase under a commit with the former MIT license. We haven't had any complaints with this solution from .NET Framework users. Removing the dependency on Prism will avoid any \"gotcha\" issues with people upgrading and being out of compliance with the license.\r\n\r\n@rauhs - It is [Hacktoberfest](https://hacktoberfest.com/) month, so if you wish to submit a PR it will apply toward your free swag for participation.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1752590728/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1752822826","html_url":"https://github.com/apache/lucenenet/issues/872#issuecomment-1752822826","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/872","id":1752822826,"node_id":"IC_kwDOAAJ06c5oefQq","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-09T11:22:39Z","updated_at":"2023-10-09T11:22:39Z","author_association":"CONTRIBUTOR","body":"> This will only affect .NET Framework/.NET Standard 2.0 users - so this is all legacy. Previously the code was under MIT and now it has either a Community or Commercial license.\r\n> \r\n> ConditionalWeakTable is missing the enumerator prior to .NET Standard 2.1 and newer versions cannot be back ported because it ties directly into the GC in native code. This is the reason why we went with weak events in the first place. See #613. Porting it is a dead end.\r\n> \r\n> There are at least 3 options:\r\n> \r\n> 1. Leave the current dependency. If someone wants to upgrade, let them deal with the licensing. Presumably, they won't be upgrading unless they have a license, anyway.\r\n> 2. Go to a commit in Prism that had an MIT license and copy the weak event code into the Support/Util/Events folder (in the namespace Lucene.Net.Util.Events) and add the headers as specified in the [prior license](https://github.com/PrismLibrary/Prism/blob/7ca126dcddbad026d087b42f8c16914af12d7fcd/LICENSE). There are only a few types that we depend on and it is all pure C# code. All of the types should be made internal.\r\n> 3. Adapt the weak events to use [WeakEventManager](https://learn.microsoft.com/en-us/dotnet/api/system.windows.weakeventmanager?view=windowsdesktop-7.0) in .NET Framework (See [Weak event patterns](https://learn.microsoft.com/en-us/dotnet/desktop/wpf/events/weak-event-patterns?view=netdesktop-7.0)) and remove the dependency on the Prism.Core package. This would require us to drop support for .NET Standard 2.0, but this is something we are considering doing anyway.\r\n\r\nJust wanted to add my thoughts on the .NET Framework/Standard statement.\r\n\r\nI don't think .NET Framework is as legacy as one would think, that is a really sad fact but it turns out that its more difficult to migrate than what many could hope for :(. So I think there are more allot of projects out there stuck on .NET 4.X that are still maintained.\r\n\r\nWith regards to .NET Standard 2.0, I think there are many cases that one may not be aware of, I was certainly made aware as part of a Castle.Windsor discussion a while back that it's a really useful target for e.g. Library authors or if you where sitting on a \"Core\" version one step prior to a supported one, e.g. if one would choose to support .NET 6, 7 etc but not 5 and down, people on 5 and down could use that. So I would not cut that away so hastily.\r\n\r\nI know I was at least convinced by that discussion that it was to soon to discard support for it, and that perhaps one should discard support for .NET 4.X before that. (It would become supported as part of supporting .NET Standard)\r\n\r\nOfc. this has to be weighed against the burden to maintain it.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1752822826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1752912035","html_url":"https://github.com/apache/lucenenet/issues/872#issuecomment-1752912035","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/872","id":1752912035,"node_id":"IC_kwDOAAJ06c5oe1Cj","user":{"login":"rauhs","id":11081351,"node_id":"MDQ6VXNlcjExMDgxMzUx","avatar_url":"https://avatars.githubusercontent.com/u/11081351?v=4","gravatar_id":"","url":"https://api.github.com/users/rauhs","html_url":"https://github.com/rauhs","followers_url":"https://api.github.com/users/rauhs/followers","following_url":"https://api.github.com/users/rauhs/following{/other_user}","gists_url":"https://api.github.com/users/rauhs/gists{/gist_id}","starred_url":"https://api.github.com/users/rauhs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rauhs/subscriptions","organizations_url":"https://api.github.com/users/rauhs/orgs","repos_url":"https://api.github.com/users/rauhs/repos","events_url":"https://api.github.com/users/rauhs/events{/privacy}","received_events_url":"https://api.github.com/users/rauhs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-09T12:24:12Z","updated_at":"2023-10-09T12:25:14Z","author_association":"CONTRIBUTOR","body":"> @rauhs - It is [Hacktoberfest](https://hacktoberfest.com/) month, so if you wish to submit a PR it will apply toward your free swag for participation.\r\n\r\nI do not plan to create a PR for this. Sorry. The past few contributions (not to this repo) have been too frustrating for me: About 20min for the coding work and then fighting 3-4h with git until the PR was merged... $dayjob is still on SVN :/","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1752912035/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1753157532","html_url":"https://github.com/apache/lucenenet/issues/872#issuecomment-1753157532","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/872","id":1753157532,"node_id":"IC_kwDOAAJ06c5ofw-c","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-09T14:49:28Z","updated_at":"2023-10-09T14:52:58Z","author_association":"CONTRIBUTOR","body":"> Just wanted to add my thoughts on the .NET Framework/Standard statement.\r\n>\r\n> I don't think .NET Framework is as legacy as one would think, that is a really sad fact but it turns out that its more difficult to migrate than what many could hope for :(. So I think there are more allot of projects out there stuck on .NET 4.X that are still maintained.\r\n\r\nPresent company included :).\r\n\r\nBut I wasn't thinking of dropping .NET Framework yet (although many people have suggested it). There were huge investments on .NET Framework and it will be a decade or so until it is no longer in wide use due to problems upgrading (i.e. WPF, ASP.NET WebForms, etc).\r\n\r\n> With regards to .NET Standard 2.0, I think there are many cases that one may not be aware of, I was certainly made aware as part of a Castle.Windsor discussion a while back that it's a really useful target for e.g. Library authors or if you where sitting on a \"Core\" version one step prior to a supported one, e.g. if one would choose to support .NET 6, 7 etc but not 5 and down, people on 5 and down could use that. So I would not cut that away so hastily.\r\n>\r\n> I know I was at least convinced by that discussion that it was to soon to discard support for it, and that perhaps one should discard support for .NET 4.X before that. (It would become supported as part of supporting .NET Standard)\r\n>\r\n> Ofc. this has to be weighed against the burden to maintain it.\r\n\r\nWell you have a point. I just looked at the details and although Xamarin is going out of support very soon, .NET Standard 2.1 doesn't support UWP. So, dropping .NET Standard 2.0 would be a problem for users of that platform.\r\n\r\nWe support .NET Standard 2.1, which will handle any users lagging to upgrade from .NET Core 2.x - .NET 5.x and we have a .NET Framework 4.6.2 target to handle that platform. If we drop .NET Standard 2.0, we would also lose Xamarin.Android < 10.0, Xamarin.iOS < 12.16 which are now [out of support](https://dotnet.microsoft.com/en-us/platform/support/policy/xamarin) and Unity < 2021.2.\r\n\r\n.NET Standard 2.0 is the least efficient platform we support. There are performance advantages for being on a native platform (such as on `net6.0` we call the `System.Numerics.BitOperations` class that calls hardware intrinsics). As a result, 3rd party extensions to Lucene.NET (such as [Lucene.Net.Store.Azure](https://www.nuget.org/packages/Lucene.Net.Store.Azure/4.8.0-beta015)) that target `netstandard2.0` that are consumed by .NET 6.x - .NET 8.x will take a performance hit to use because although a `net6.0` target is available, when referencing the component it will downgrade to `netstandard2.0` and skip the hardware intrinsic code (or at least I think it will - need to test). They would also be stuck with this hacky weak event code to workaround the missing `ConditionalWeakTable` enumerator and would use `ConcurrentDictionary` instead of `Dictionary` in some cases to work around the lack of support for deletes while iterating forward. But I guess that is more of a \"don't do that\" bug that we need to add a note on the README telling NuGet library developers to multi-target to avoid the slower code.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1753157532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1754431922","html_url":"https://github.com/apache/lucenenet/pull/866#issuecomment-1754431922","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/866","id":1754431922,"node_id":"IC_kwDOAAJ06c5okoGy","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-10T05:47:33Z","updated_at":"2023-10-10T05:47:33Z","author_association":"CONTRIBUTOR","body":"Thanks for the PR.\r\n\r\nOne issue we had when we tried this on Azure DevOps was it wasn't set up right to correctly detect an upgrade or change of a dependency and when we did a \"normal\" upgrade of a dependency it failed. The only way I found out of that scenario was to remove the caching and add an explicit download location in NuGet.config.\r\n\r\nI have read somewhere that packages.lock.json isn't consistently generated across machines, which makes them change too often to keep in source control because they show up as changed files even when no dependencies have changes. Also, having these extra files seems a bit odd when we have a dependencies.props file that can be used as part of the cache key (we would also need to include all *.csproj and all *.targets files to get all of the references).\r\n\r\nWhatever the case, we need a solid procedure for upgrading or changing dependencies so we don't shoot ourselves in the foot (again) when upgrading. We are likely going to be juggling dependencies around more often from now until the release than we have done so in the past. If we stick with the packages.lock.json files, it would be nice to know how to update them and when to commit them.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1754431922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1754794614","html_url":"https://github.com/apache/lucenenet/issues/861#issuecomment-1754794614","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/861","id":1754794614,"node_id":"IC_kwDOAAJ06c5omAp2","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-10T09:18:58Z","updated_at":"2023-10-10T09:18:58Z","author_association":"CONTRIBUTOR","body":"Looks like the approach that you are using to pass in the documents won't scale:\r\n\r\nhttps://gist.github.com/ahmadmdabit/a6cf1ad70da3c18c91f433a9da52230c#file-luceneindexer-cs-L183\r\n\r\n`J2N.Collections.Generic.List<T>` requires all documents to be stored in RAM at once when it is passed into this method. To make it scale, you should aim to add the documents in small batches and only load the data for the current batch. You can further reduce memory allocations by reusing the same `Document` instance and adding it over and over with different data in it each time.\r\n\r\nAlso, you have `InitReader()` and `InitWriter()`. You should only ever use one of these at a time (not sure if you are doing that, but this design allows both). If you have an open `IndexWriter` instance, you can get a reader by calling the `IndexWriter.GetReader()` method.\r\n\r\nAnyway, this is not a bug with Lucene.NET so it doesn't belong in GitHub issues. Please refer any usability issues to StackOverflow (be sure to include both the `lucene.net` and `lucene` tags) or the [Lucene.NET user mailing list](https://lucenenet.apache.org/contributing/index.html#ask-a-question) where you are more likely to get a timely answer.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1754794614/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1755083753","html_url":"https://github.com/apache/lucenenet/issues/785#issuecomment-1755083753","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/785","id":1755083753,"node_id":"IC_kwDOAAJ06c5onHPp","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-10T11:10:22Z","updated_at":"2023-10-10T11:10:22Z","author_association":"CONTRIBUTOR","body":"I am closing this because it is not a bug that needs addressing in Lucene.NET. Please direct usability questions to StackOverflow or the [Lucene.NET user mailing list](https://lucenenet.apache.org/contributing/index.html#ask-a-question).","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1755083753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1755101403","html_url":"https://github.com/apache/lucenenet/issues/782#issuecomment-1755101403","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/782","id":1755101403,"node_id":"IC_kwDOAAJ06c5onLjb","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-10T11:16:42Z","updated_at":"2023-10-10T11:16:42Z","author_association":"CONTRIBUTOR","body":"I am closing this because it is not a bug that needs addressing in Lucene.NET. Please direct usability questions to StackOverflow or the [Lucene.NET user mailing list](https://lucenenet.apache.org/contributing/index.html#ask-a-question). You will be much more likely to get an answer to your question on StackOverflow when specifying both `lucene.net` and `lucene` tags.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1755101403/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1755121201","html_url":"https://github.com/apache/lucenenet/issues/788#issuecomment-1755121201","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/788","id":1755121201,"node_id":"IC_kwDOAAJ06c5onQYx","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-10T11:23:53Z","updated_at":"2023-10-10T11:23:53Z","author_association":"CONTRIBUTOR","body":"This sort of decision should probably be left up to the lucene Java team to decide how to handle. This goes beyond porting from Java to .NET and gets into the design of the application itself. You can start a discussion about this on the [lucene dev mailing list or on Slack](https://lucene.apache.org/core/discussion.html).","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1755121201/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1755129526","html_url":"https://github.com/apache/lucenenet/issues/842#issuecomment-1755129526","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/842","id":1755129526,"node_id":"IC_kwDOAAJ06c5onSa2","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-10T11:26:56Z","updated_at":"2023-10-10T11:26:56Z","author_association":"CONTRIBUTOR","body":"I am closing this because it is not a bug that needs addressing in Lucene.NET. Please direct usability questions to StackOverflow or the [Lucene.NET user mailing list](https://lucenenet.apache.org/contributing/index.html#ask-a-question). You will be much more likely to get an answer to your question on StackOverflow when specifying both `lucene.net` and `lucene` tags.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1755129526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1755422293","html_url":"https://github.com/apache/lucenenet/pull/866#issuecomment-1755422293","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/866","id":1755422293,"node_id":"IC_kwDOAAJ06c5ooZ5V","user":{"login":"nikcio","id":24605285,"node_id":"MDQ6VXNlcjI0NjA1Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/24605285?v=4","gravatar_id":"","url":"https://api.github.com/users/nikcio","html_url":"https://github.com/nikcio","followers_url":"https://api.github.com/users/nikcio/followers","following_url":"https://api.github.com/users/nikcio/following{/other_user}","gists_url":"https://api.github.com/users/nikcio/gists{/gist_id}","starred_url":"https://api.github.com/users/nikcio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikcio/subscriptions","organizations_url":"https://api.github.com/users/nikcio/orgs","repos_url":"https://api.github.com/users/nikcio/repos","events_url":"https://api.github.com/users/nikcio/events{/privacy}","received_events_url":"https://api.github.com/users/nikcio/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-10T13:23:22Z","updated_at":"2023-10-10T13:24:22Z","author_association":"CONTRIBUTOR","body":"Hey @NightOwl888 \r\n\r\nI've used `packages.lock.json` for checking the cache of NuGet packages on a few projects over the past 2 years and havn't had any problems with it. But these projects were nowhere near the scale of this project.\r\n\r\nThe `packages.lock.json` are automatically updated on `dotnet build`. So you will need to build the project locally before pushing for it to work.\r\n\r\nDoes this answer you questions?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1755422293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1755518186","html_url":"https://github.com/apache/lucenenet/pull/866#issuecomment-1755518186","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/866","id":1755518186,"node_id":"IC_kwDOAAJ06c5ooxTq","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-10T14:16:00Z","updated_at":"2023-10-10T14:16:00Z","author_association":"CONTRIBUTOR","body":"Actually, what I am looking for is a step-by-step procedure for updating a dependency and making sure the cache gets invalidated so the new dependency version is used. The [blog article about it](https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/) makes it clear what the `packages.lock.json` file is for and how to configure it, but not how to perform a dependency update (which is the important bit). Of course, without 3rd party docs this might boil down to doing experimentation.\r\n\r\nDo note that we have [a condition on the `ContinuousIntegrationBuild` property](https://github.com/apache/lucenenet/blob/51cc7418adf9da96cd37dd64ff5085d752a54074/Directory.Build.props#L81-L83) so it only is set to true in Azure DevOps and GitHub Actions. This property is also used by the [Source Link](https://lucenenet.apache.org/docs/4.8.0-beta00016/api/core/source-stepping.html) functionality and that is the way they recommended to use it.\r\n\r\nMy guess is the procedure is something along the lines of:\r\n\r\n1. Update the dependencies\r\n2. Run the build (in VS? on the command line?)\r\n3. Check the diff of the `packages.lock.json` files for any issues\r\n4. Commit the changes to Git\r\n5. Validate the changes worked in GitHub Actions\r\n6. And after the functionality has been added...validate the changes worked in Azure DevOps\r\n\r\nPutting the procedure here is okay, but ideally we would add it to a new page in the [contrbuting](https://lucenenet.apache.org/contributing/index.html) section. And when Azure DevOps has caching we can add those instructions there as well (if we use `packages.lock.json` chances are there will be some overlap in the procedures).\r\n\r\nThe `packages.lock.json` being flakey may have been due to early buggy build tools that have now been fixed, not sure. I think there were differences in the way the lock file was generated on the command line vs the IDE at some point. At least [this article](https://blog.inedo.com/nuget/manage-dependencies-lockfiles-package-consumers/) recommends using a lock file but also goes into some of the issues with doing so.\r\n\r\nMy hope is to have this whole procedure tested out prior to running it, since there is no way (at least in Azure DevOps) to invalidate the cache. The only option is to give the key a different name (which I know now, but didn't know then). It was a major showstopper having the cache put in place on Azure DevOps without it detecting when there was a change to the dependencies and then having to try to figure out how to work around the problem. We ended up having to remove the cache and then add a `NuGet.config` because for some reason it was no longer looking in NuGet.org for the dependencies.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1755518186/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1762817774","html_url":"https://github.com/apache/lucenenet/pull/863#issuecomment-1762817774","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/863","id":1762817774,"node_id":"IC_kwDOAAJ06c5pEnbu","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-14T10:56:47Z","updated_at":"2023-10-14T10:56:47Z","author_association":"CONTRIBUTOR","body":"The docs build works from GitHub Actions when triggered manually from the control panel. But for some reason it is not triggering automatically with the path: https://github.com/apache/lucenenet/blob/51cc7418adf9da96cd37dd64ff5085d752a54074/.github/workflows/Lucene-Net-Website.yml#L37.\r\n\r\nI haven't been able to work out why that is happening. The path looks right and the pattern matches other workflow files that are working.\r\n\r\nI haven't complained loudly about it because the manual trigger is a simple workaround. @rclabo - there is no need to pull the branch down to your dev box unless you want to debug or preview something.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1762817774/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1762855663","html_url":"https://github.com/apache/lucenenet/pull/867#issuecomment-1762855663","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/867","id":1762855663,"node_id":"IC_kwDOAAJ06c5pEwrv","user":{"login":"nikcio","id":24605285,"node_id":"MDQ6VXNlcjI0NjA1Mjg1","avatar_url":"https://avatars.githubusercontent.com/u/24605285?v=4","gravatar_id":"","url":"https://api.github.com/users/nikcio","html_url":"https://github.com/nikcio","followers_url":"https://api.github.com/users/nikcio/followers","following_url":"https://api.github.com/users/nikcio/following{/other_user}","gists_url":"https://api.github.com/users/nikcio/gists{/gist_id}","starred_url":"https://api.github.com/users/nikcio/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nikcio/subscriptions","organizations_url":"https://api.github.com/users/nikcio/orgs","repos_url":"https://api.github.com/users/nikcio/repos","events_url":"https://api.github.com/users/nikcio/events{/privacy}","received_events_url":"https://api.github.com/users/nikcio/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-14T12:12:30Z","updated_at":"2023-10-14T12:13:04Z","author_association":"CONTRIBUTOR","body":"@NightOwl888 Lets save that for a future update i don't think i'll have time to look at it soon so lets just get these updates in first :wink:","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1762855663/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1763038070","html_url":"https://github.com/apache/lucenenet/pull/867#issuecomment-1763038070","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/867","id":1763038070,"node_id":"IC_kwDOAAJ06c5pFdN2","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-14T16:52:12Z","updated_at":"2023-10-14T16:52:12Z","author_association":"CONTRIBUTOR","body":"@nikcio - Hmm...although the scan shows no errors, the \"Build and Analyze\" step returns an exit code of 1 instead of 0 as it did previously.\r\n\r\n```console\r\n2023-10-14T14:09:59.9972498Z     17280 Warning(s)\r\n2023-10-14T14:09:59.9972901Z     0 Error(s)\r\n2023-10-14T14:09:59.9973138Z \r\n2023-10-14T14:09:59.9973316Z Time Elapsed 00:10:58.10\r\n2023-10-14T14:09:59.9973810Z SonarScanner for MSBuild 5.9.2\r\n2023-10-14T14:09:59.9974486Z Using the .NET Core version of the Scanner for MSBuild\r\n2023-10-14T14:09:59.9975241Z Post-processing started.\r\n2023-10-14T14:10:00.0027392Z ##[error]Process completed with exit code 1.\r\n```\r\n[logs_11749.zip](https://github.com/apache/lucenenet/files/12906857/logs_11749.zip)\r\n\r\nOffhand, I don't see a change that could cause this. But since the scan is scheduled to run every day, it definitely didn't fail before this PR. Thoughts?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1763038070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1767755292","html_url":"https://github.com/apache/lucenenet/issues/873#issuecomment-1767755292","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/873","id":1767755292,"node_id":"IC_kwDOAAJ06c5pXc4c","user":{"login":"farQtech","id":31050786,"node_id":"MDQ6VXNlcjMxMDUwNzg2","avatar_url":"https://avatars.githubusercontent.com/u/31050786?v=4","gravatar_id":"","url":"https://api.github.com/users/farQtech","html_url":"https://github.com/farQtech","followers_url":"https://api.github.com/users/farQtech/followers","following_url":"https://api.github.com/users/farQtech/following{/other_user}","gists_url":"https://api.github.com/users/farQtech/gists{/gist_id}","starred_url":"https://api.github.com/users/farQtech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/farQtech/subscriptions","organizations_url":"https://api.github.com/users/farQtech/orgs","repos_url":"https://api.github.com/users/farQtech/repos","events_url":"https://api.github.com/users/farQtech/events{/privacy}","received_events_url":"https://api.github.com/users/farQtech/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-18T06:26:32Z","updated_at":"2023-10-18T06:26:32Z","author_association":"NONE","body":"Hi @NightOwl888, I am interested in taking up this task. Kindly assign it to me.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1767755292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1767757401","html_url":"https://github.com/apache/lucenenet/issues/827#issuecomment-1767757401","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/827","id":1767757401,"node_id":"IC_kwDOAAJ06c5pXdZZ","user":{"login":"farQtech","id":31050786,"node_id":"MDQ6VXNlcjMxMDUwNzg2","avatar_url":"https://avatars.githubusercontent.com/u/31050786?v=4","gravatar_id":"","url":"https://api.github.com/users/farQtech","html_url":"https://github.com/farQtech","followers_url":"https://api.github.com/users/farQtech/followers","following_url":"https://api.github.com/users/farQtech/following{/other_user}","gists_url":"https://api.github.com/users/farQtech/gists{/gist_id}","starred_url":"https://api.github.com/users/farQtech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/farQtech/subscriptions","organizations_url":"https://api.github.com/users/farQtech/orgs","repos_url":"https://api.github.com/users/farQtech/repos","events_url":"https://api.github.com/users/farQtech/events{/privacy}","received_events_url":"https://api.github.com/users/farQtech/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-18T06:28:13Z","updated_at":"2023-10-18T06:28:13Z","author_association":"NONE","body":"@NightOwl888 I would like to take this up. Please assign it to me.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1767757401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1768087773","html_url":"https://github.com/apache/lucenenet/issues/827#issuecomment-1768087773","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/827","id":1768087773,"node_id":"IC_kwDOAAJ06c5pYuDd","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-18T09:49:58Z","updated_at":"2023-10-18T09:49:58Z","author_association":"CONTRIBUTOR","body":"@jeme - thanks for assigning this one.\r\n\r\n@farQtech - thanks for volunteering.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1768087773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1768543939","html_url":"https://github.com/apache/lucenenet/issues/872#issuecomment-1768543939","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/872","id":1768543939,"node_id":"IC_kwDOAAJ06c5padbD","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-18T14:08:40Z","updated_at":"2023-10-18T14:08:40Z","author_association":"CONTRIBUTOR","body":"Awesome. Thanks Shad!  Much appreciated.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1768543939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1768601546","html_url":"https://github.com/apache/lucenenet/issues/874#issuecomment-1768601546","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/874","id":1768601546,"node_id":"IC_kwDOAAJ06c5parfK","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-18T14:34:09Z","updated_at":"2023-10-18T14:34:09Z","author_association":"CONTRIBUTOR","body":"Thank you for sharing your concerns and for recognizing the importance of Lucene.NET in the .NET community. Your feedback provides valuable insight into the sentiments and aspirations of our user base.\r\n\r\nIt's accurate that Lucene.NET's development pace has been slower compared to its Java counterpart. Our team, comprised of dedicated volunteers, is doing its best with the resources we have.\r\n\r\nRegarding funding and support: The Apache Software Foundation (ASF), which oversees Lucene.NET among many other projects, emphasizes neutrality and independence in all its projects. While the ASF accepts donations, these are channeled into benefiting the broader foundation rather than specific projects. This means individual projects, such as Lucene.NET, do not and cannot directly solicit or receive funds.\r\n\r\nHowever, it's worth mentioning that many Apache committers, across various projects, do receive compensation, but not from the ASF directly. Some, for example, are sponsored by their employers to work on Apache projects, as these projects may align with the company's interests or products.\r\n\r\nDespite many companies utilizing Lucene.NET in commercial products, there's been a noticeable lack of companies supporting their employees to contribute to Lucene.NET compared to the Java ecosystem. We're hopeful this will shift as the .NET landscape increasingly embraces open-source.\r\n\r\nLucene.NET holds an important role in the .NET ecosystem, and we are continuously exploring ways to ensure it remains competitive and relevant. We warmly welcome and encourage collaboration, insights, and any form of contribution that can further the project's growth.\r\n\r\nThank you again for your feedback, if you have any specific suggestions or insights on how to fund more resources for this project while keeping true to the Apache way, we are all ears.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1768601546/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1768790016","html_url":"https://github.com/apache/lucenenet/issues/874#issuecomment-1768790016","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/874","id":1768790016,"node_id":"IC_kwDOAAJ06c5pbZgA","user":{"login":"sgf","id":2557696,"node_id":"MDQ6VXNlcjI1NTc2OTY=","avatar_url":"https://avatars.githubusercontent.com/u/2557696?v=4","gravatar_id":"","url":"https://api.github.com/users/sgf","html_url":"https://github.com/sgf","followers_url":"https://api.github.com/users/sgf/followers","following_url":"https://api.github.com/users/sgf/following{/other_user}","gists_url":"https://api.github.com/users/sgf/gists{/gist_id}","starred_url":"https://api.github.com/users/sgf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sgf/subscriptions","organizations_url":"https://api.github.com/users/sgf/orgs","repos_url":"https://api.github.com/users/sgf/repos","events_url":"https://api.github.com/users/sgf/events{/privacy}","received_events_url":"https://api.github.com/users/sgf/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-18T15:57:36Z","updated_at":"2023-10-18T15:57:36Z","author_association":"NONE","body":"thanks for your reply","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1768790016/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1769013141","html_url":"https://github.com/apache/lucenenet/pull/875#issuecomment-1769013141","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/875","id":1769013141,"node_id":"IC_kwDOAAJ06c5pcP-V","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-18T17:28:50Z","updated_at":"2023-10-18T17:28:50Z","author_association":"CONTRIBUTOR","body":"@NightOwl888 you're simply amazing","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1769013141/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1770798313","html_url":"https://github.com/apache/lucenenet/pull/867#issuecomment-1770798313","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/867","id":1770798313,"node_id":"IC_kwDOAAJ06c5pjDzp","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-19T12:05:55Z","updated_at":"2023-10-19T12:05:55Z","author_association":"CONTRIBUTOR","body":"Okay, I figured out the issue. Somehow updating the cache versions caused something to go out of sync with the cache. This would have probably been fine, but [this line](https://github.com/apache/lucenenet/commit/179356fb485bba1ed94f386d754f8de0e3eb1293) had an incorrect path and 1 of the 2 caches wasn't being generated.\r\n\r\nI also discovered that there is now a simple way to delete the cache via API or in the control panel: https://stackoverflow.com/a/64819132, which is very helpful.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1770798313/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1770845585","html_url":"https://github.com/apache/lucenenet/issues/873#issuecomment-1770845585","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/873","id":1770845585,"node_id":"IC_kwDOAAJ06c5pjPWR","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-19T12:19:03Z","updated_at":"2023-10-19T12:19:03Z","author_association":"CONTRIBUTOR","body":"I have assigned it to you. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1770845585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1771099879","html_url":"https://github.com/apache/lucenenet/issues/860#issuecomment-1771099879","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/860","id":1771099879,"node_id":"IC_kwDOAAJ06c5pkNbn","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-19T14:24:02Z","updated_at":"2023-10-19T14:24:02Z","author_association":"CONTRIBUTOR","body":"This appears to be answered.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1771099879/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1771106042","html_url":"https://github.com/apache/lucenenet/issues/859#issuecomment-1771106042","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/859","id":1771106042,"node_id":"IC_kwDOAAJ06c5pkO76","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-19T14:27:23Z","updated_at":"2023-10-19T14:27:23Z","author_association":"CONTRIBUTOR","body":"The `preserveOriginal` parameter wasn't added until a later version of Lucene than 4.8.1, which is what the `Lucene.Net.Analysis.Common` assembly is based upon. We will eventually be porting the latest version of Lucene, but until then you will need to port over \"future\" features if you need them. Analysis components in particular are easy to implement by end users.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1771106042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1780379864","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1780379864","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1780379864,"node_id":"IC_kwDOAAJ06c5qHnDY","user":{"login":"rickardp","id":167356,"node_id":"MDQ6VXNlcjE2NzM1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/167356?v=4","gravatar_id":"","url":"https://api.github.com/users/rickardp","html_url":"https://github.com/rickardp","followers_url":"https://api.github.com/users/rickardp/followers","following_url":"https://api.github.com/users/rickardp/following{/other_user}","gists_url":"https://api.github.com/users/rickardp/gists{/gist_id}","starred_url":"https://api.github.com/users/rickardp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rickardp/subscriptions","organizations_url":"https://api.github.com/users/rickardp/orgs","repos_url":"https://api.github.com/users/rickardp/repos","events_url":"https://api.github.com/users/rickardp/events{/privacy}","received_events_url":"https://api.github.com/users/rickardp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-26T04:02:40Z","updated_at":"2023-10-26T04:14:13Z","author_association":"NONE","body":"I realize this is a lot bigger topic, but I think the maintainers of this project should seriously consider breaking off from the exact version scheme of the upstream Java Lucene.\n\nAs a consumer of this library, naturally I would like to know what API version of Lucene this corresponds to, but that could easily be solved by a version mapping table in documentation.\n\nExamples such as\n\n> The difficulty lies in what to do if we release 4.8.1 and find a bug. OK, we make a patch release, 4.8.2 that fixes that bug. But now, Java Lucene does not have 4.8.2 version.\n\nindicate just how hard it is to keep the versions of distinct code bases the same. Especially the patch number is troublesome as that typically designates implementation and bug fixes, but I think the same applies to minor and major.\n\nBy releasing yourself from this constraint you would have the flexibility to release stable versions of the functionality that you have implemented without waiting for 100% feature parity with a given upstream Java version.\n\nThis way you may opt to never be 100% feature complete with Java Lucene 4.8 (for example), because the community is more in need for some 7.x features that can then be prioritized over the long tail of rarely used 4.8 features (just as a made up example). By following your own version scheme you can instead document version X as \"compatible with Lucene 4.8 minus features Y and Z\".\n\nIt would also possibly be easier to get contributors, as most consumers of a library would rather contribute a PR that just adds a feature from a later version that they need for their application. Sorry to be blunt, but it's going to be very hard to get contributors chasing the last bits 4.8 compatibility.\n\nThe additional value is that you can now follow semantic versioning more strictly, something I would argue is an industry standard these days. It would sure make maintaining libraries that depend on Lucene.NET easier.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1780379864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1780717782","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1780717782","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1780717782,"node_id":"IC_kwDOAAJ06c5qI5jW","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-26T09:10:19Z","updated_at":"2023-10-26T09:10:19Z","author_association":"CONTRIBUTOR","body":"First of all, the versioning scheme had been decided some time ago and is in fact [documented](https://lucenenet.apache.org/contributing/versioning.html) and made part of the build. At this point I don't see any reason to go back and revisit this scheme which was part of the work that was done during the first 4.8.0 beta.\r\n\r\n> By releasing yourself from this constraint you would have the flexibility to release stable versions of the functionality that you have implemented without waiting for 100% feature parity with a given upstream Java version.\r\n\r\n> This way you may opt to never be 100% feature complete with Java Lucene 4.8 (for example), because the community is more in need for some 7.x features that can then be prioritized over the long tail of rarely used 4.8 features (just as a made up example). By following your own version scheme you can instead document version X as \"compatible with Lucene 4.8 minus features Y and Z\".\r\n\r\nThis assumes usability and API are the entire issue, but they are not.\r\n\r\nLucene.NET is the most difficult application I have ever had the pleasure of debugging in my 25 years as a developer. When we go off the map like this, we literally throw away our best debugging tool, which is to run the *same version* of Lucene and Lucene.NET side by side to see where the execution paths diverge. I don't have an answer for how we could debug if we combine different versions of Lucene. Do you?\r\n\r\nFurthermore, the binary structure of the index does change from one version to the next, making them incompatible and making it literally impossible to bring many Lucene 9.x features back to Lucene.NET 4.x. We had this issue with back-porting the [analyzers-nori](https://github.com/apache/lucenenet/pull/645) package.\r\n\r\nWe have 100% compatibility with creating an index in Lucene and opening it in Lucene.NET with the same version and plan to keep it that way going forward (and it worked once the other way around, but hasn't been tested in quite a while). The index isn't the only binary format that is also kept in sync between versions.\r\n\r\nThere are other problems with disjointed versioning between Lucene and Lucene.NET. Case and point: Lucene.NET 3.0.3. There was no release of Lucene 3.0.3. Despite trying to sleuth an answer I have no idea what commit Lucene.NET 3.0.3 is a port of. I could *guess* that it is a port from 3.0.1 (which actually was released), but I can't be 100% sure. I didn't even know what commit in this repo corresponded to the 3.0.3 release until I found it on an obscure blog (they released 3.0.3 RC2 by renaming it, but didn't make a tag corresponding to the 3.0.3 release). Both of these issues are the primary reason we have never done a maintenance release of Lucene.NET 3.0.3. While we could incorporate the *actual* version number as part of the `InformationalVersion` and make it disjointed, it would be very confusing for users who see numbers that overlap Lucene releases that don't correspond to them or their binary formats. Strict version compatibility avoids getting into this situation again.\r\n\r\nFor usability, there are also issues. Existing Lucene blog posts may not be useful if the API is different than the major version of Lucene the post is about.\r\n\r\nThe bottom line is there is no maintenance plan for making a Frankenstein version of Lucene that incorporates features from different versions. The best way is to try to sync the entire project to a single Git commit. The story goes way beyond keeping the API in sync. It also means keeping the execution paths, binary formats, tests, and documentation in sync.\r\n\r\nWhile we could simply abandon 4.8.0 and start working on the latest version of Lucene now, we would be stuck in a situation where we have all of the same work to finish we do now **plus** an estimated 1800 hours of upgrading work. This upgrade estimate could be off if we run into any major gaps that mean more JDK features we need to find or build replacements for. Right now, we are in a situation where our remaining work still has an undefined scope because of gaps that we may not know about. The plan is to try to close all of the gaps so when we finally do start working on the upgrade we have a mostly well-defined scope of work instead of a fuzzy \"research this and figure out what we need to do here\" situation, where research is often most of the work (meaning to create an issue about it, we need to do most of the work first to define the scope of the issue).\r\n\r\nAlso, seems like a total waste do to that. Most of the work that is remaining is on ICU4N. I have almost convinced myself that we may be able to release ICU4N as stable earlier by not strictly following the [ICU versioning scheme](https://unicode-org.github.io/icu/userguide/icu/design.html#other-icu-design-principles) but instead allowing each major release to have breaking API changes until we stabilize it (we are 13 versions behind so we have some wiggle room, but it does mean we will have to do a full upgrade every time we make a breaking API change). But we should probably still conditionally compile out the \"draft\" APIs and other APIs that are considered unstable in the NuGet package or at least make them invisible to the IDE. There are still other issues to deal with, such as the fact that NuGet doesn't actually deploy resource files for cultures it doesn't recognize. There are many decisions to make like that in ICU4N where there are gaps between Java and .NET. Unfortunately, nobody here seems willing to talk about the *actual* work that remains. Most want to move on to the next version of Lucene and pretend that we don't need to do this work for the upgrade, anyway.\r\n\r\nWe could alternatively move on to 4.8.0 release while keeping the `Lucene.Net.ICU` and components that depend on it unstable, but unfortunately that means either splitting up the `lucene-cli` component or releasing it as stable with unstable dependencies. I would argue we need to focus 100% on the remaining things that could break the API before we do such a thing (such as automated query parser generation), which could still be time-consuming. It also means we won't have a completely stable 4.8.0 release, the first fully stable release might be something like 4.8.0.17. Or else we would need to setup our build to make separate stable and unstable release packages to comply with the Apache [release procedure](https://lucenenet.apache.org/contributing/make-release.html). And we still wouldn't technically be able to start working on upgrading until we have a stable ICU4N, anyway. I don't see how this improves the situation, it only adds more work to do to make it stable and makes the versioning history more difficult to understand.\r\n\r\nIt really sucks for us to have to reject what would ordinarily be good ideas from the community, but unfortunately, most of these ideas never take everything into consideration when providing such advice, only the \"normal stuff\" that most projects deal with.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1780717782/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781023204","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1781023204","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1781023204,"node_id":"IC_kwDOAAJ06c5qKEHk","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-26T12:27:22Z","updated_at":"2023-10-26T12:27:22Z","author_association":"CONTRIBUTOR","body":"Shad, thank you for that.   I feel like it just pulled me back into reality.  \r\n\r\nSo I guess what you are saying is we can't have a \"stable\" Lucene.NET release unless its dependencies are stable and currently [Lucene.NET.ICU](https://lucenenet.apache.org/docs/4.8.0-beta00016/api/icu/overview.html) is a work in progress with a changing API surface.  \r\n\r\nI'm reading into that, [ICU4N](https://github.com/NightOwl888/ICU4N), which Lucene.NET.ICU depends on, is also probably a work in progress.  And it's certainly worth noting that ICU support is something the Java Lucene team got for free in the JDK that unfortunately isn't included in the .NET Framework (full or core).  Hence the need to create ICU4N to provide that support.  A nontrivial endeavor in its own right.\r\n\r\nIn using Lucene.NET to create a search index for an e-commerce marketplace, I've never hit any ICU-related functionality that was missing that I felt I needed.  Unfortunately, I have no prior history with ICU so my only learnings about it have been here on the Lucene.NET project.  So I guess for me, it's often an out-of-sight, out of mind, portion of Lucene.  \r\n\r\nBut when I review the docs for [Lucene.Net.ICU](https://lucenenet.apache.org/docs/4.8.0-beta00016/api/icu/overview.html) and see what's included, it feels very central to a search library and encompasses such basic functionality as finding word boundaries and line break boundaries.  While this seems trivial in languages like English it's anything but trivial in languages like Chinese  要弄清楚如何分解中文單字是很困難的。or Japanese 中国語で単語を区切る方法を理解するのは難しいです.  \r\n\r\nGiven that a great many of the developers using Lucene.NET only use it for English text, or other languages that use the Latin alphabet, it's easy to see how we can sometimes lose sight of what ICU is and why it's so important.  Based on your post, I now better understand why Lucene.NET hasn't had a public release yet.  Still, it seems very unfortunate that such a stable product (at least for indexing Latin languages) has a current version (beta) that doesn't indicate it's production-ready for Latin languages.  \r\n\r\nI'm with you a 100% that doing a Frankenstein version of Lucene that incorporates features from different versions. is a non-starter.  Being able to compare execution paths with a corresponding Java version is too valuable to give up.  ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781023204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781144387","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1781144387","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1781144387,"node_id":"IC_kwDOAAJ06c5qKhtD","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-26T13:36:31Z","updated_at":"2023-10-26T13:36:31Z","author_association":"CONTRIBUTOR","body":"> So I guess what you are saying is we can't have a \"stable\" Lucene.NET release unless its dependencies are stable and currently [Lucene.NET.ICU](https://lucenenet.apache.org/docs/4.8.0-beta00016/api/icu/overview.html) is a work in progress with a changing API surface.\r\n\r\nNot exactly. We could do a release if we go over the API surface of the core and other completed components to finalize it AND build a multi-release scheme so we have 2 different release labels, one for the stable components and one for the unstable components. While the API work is something we have to do anyway, changing the build, release policy, Git labeling scheme, etc. isn't exactly free.\r\n\r\n`Lucene.Net.ICU` will likely change because the `CharacterIterator` still needs to be converted to a .NETified component and put into J2N (right now it exists in `ICU4N.Support`, which is meant to go away from the public API). `CharacterEnumerator` was made for this purpose, but it had to be commented out because I couldn't get it working on Lucene.NET components although it worked fine in ICU4N. This modification will definitely break the public API. I don't think there are any other things that will break it, though.\r\n\r\n> I'm reading into that, [ICU4N](https://github.com/NightOwl888/ICU4N), which Lucene.NET.ICU depends on, is also probably a work in progress. And it's certainly worth noting that ICU support is something the Java Lucene team got for free in the JDK that unfortunately isn't included in the .NET Framework (full or core). Hence the need to create ICU4N to provide that support. A nontrivial endeavor in its own right.\r\n\r\nYes, ICU4N is still a work in progress. There are several tests that either still fail, often due to gaps that we haven't yet covered. There are also some concurrency bugs to track down. Since it is only a partial port, we have lots of tests to go through that might be able to be ported, as well. The intention is not to port any more of the production code (except for perhaps some of the formatters and parsers because that is where most of its funding has come from so far).\r\n\r\nThe ICU4J functionality is not in the JDK. Instead ICU4N is a port of ICU4J. But it is hard to integrate because the gap between Java and ICU4J is not the same as the gap between .NET and ICU4N. Although, it is made easier because ICU is documented pretty well.\r\n\r\nIn short ICU4/J extend the text processing capabilities of .NET and Java by providing rules-based versions of some of the included components (such as the `CompareInfo` .NET class which corresponds to the more powerful `RuleBasedCollator` in ICU4N). These components allow you to control the behavior in custom ways that simply can't be done on the raw .NET or JDK platforms. There are also many other features that are super valuable, such as the `UnicodeSet` which can be used like a regex character class but is much more powerful (it can even be passed a string to match all of the characters in a specific version of Unicode).\r\n\r\nWe use the ICU4N `BreakIterator` in all cases where the JDK `BreakIterator` is required because .NET is totally lacking this feature (even though it depends on ICU now, the API for this is not exposed anywhere). This has also caused some compatibility issues because of differences between how ICU4J and the JDK behave, so we had to patch the `ThaiAnalyzer` and basically write our own tests for some of the highlighters. Unfortunately, the highlighters won't work exactly the same unless we do the research to work out what to recommend as the \"JDK format\" by providing custom rules that correspond to the Java behavior.\r\n\r\n> But when I review the docs for [Lucene.Net.ICU](https://lucenenet.apache.org/docs/4.8.0-beta00016/api/icu/overview.html) and see what's included, it feels very central to a search library and encompasses such basic functionality as finding word boundaries and line break boundaries. While this seems trivial in languages like English it's anything but trivial in languages like Chinese 要弄清楚如何分解中文單字是很困難的。or Japanese 中国語で単語を区切る方法を理解するのは難しいです.\r\n>\r\n> Given that a great many of the developers using Lucene.NET only use it for English text, or other languages that use the Latin alphabet, it's easy to see how we can sometimes lose sight of what ICU is and why it's so important. Based on your post, I now better understand why Lucene.NET hasn't had a public release yet. Still, it seems very unfortunate that such a stable product (at least for indexing Latin languages) has a current version (beta) that doesn't indicate it's production-ready for Latin languages.\r\n\r\nActually, there are several use cases that even make it valuable even to Western European languages. For example, for removing diacritics from words. In .NET, this cannot be done without [a hack](https://stackoverflow.com/questions/249087/how-do-i-remove-diacritics-accents-from-a-string-in-net) because the normalization feature is missing the case fold option that ICU has. I have seen many people post this hack in their questions about Lucene.NET even though they could just use the `ICUFoldingFilter` or `ICUNormalizer2Filter` instead.\r\n\r\nThese make it so words with accent characters such as resume, résumé, and resumé all normalize to the same root word for searches.\r\n\r\nAlthough the components inside of the `Lucene.Net.ICU` assembly are indeed valuable as is, the real value is in using ICU4N to build custom analysis components.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781144387/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781160217","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1781160217","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1781160217,"node_id":"IC_kwDOAAJ06c5qKlkZ","user":{"login":"rickardp","id":167356,"node_id":"MDQ6VXNlcjE2NzM1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/167356?v=4","gravatar_id":"","url":"https://api.github.com/users/rickardp","html_url":"https://github.com/rickardp","followers_url":"https://api.github.com/users/rickardp/followers","following_url":"https://api.github.com/users/rickardp/following{/other_user}","gists_url":"https://api.github.com/users/rickardp/gists{/gist_id}","starred_url":"https://api.github.com/users/rickardp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rickardp/subscriptions","organizations_url":"https://api.github.com/users/rickardp/orgs","repos_url":"https://api.github.com/users/rickardp/repos","events_url":"https://api.github.com/users/rickardp/events{/privacy}","received_events_url":"https://api.github.com/users/rickardp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-26T13:45:23Z","updated_at":"2023-10-26T13:45:23Z","author_association":"NONE","body":"Thank you for the really nice and transparent explanation, @NightOwl888! Ultimately, it is down to a fundamental architectural decision on whether this is a line-by-line, version-by-version port of the Java Lucene or if this is a full-text search *library based* on Java Lucene. This decision is one that would be made by the maintainers, and respected by the users of this library.\r\n\r\n> While we could simply abandon 4.8.0 and start working on the latest version of Lucene now, we would be stuck in a situation where we have all of the same work to finish we do now plus an estimated 1800 hours of upgrading work\r\n\r\nIf I read the entire thread correctly, there was never a suggestion to just abandon 4.8, but instead to decide the API is stable and focus on bug fixes, then release 4.8 and figure out a different way to version the library so that API changes can be done later. This way, going from beta to release would mean the current feature set is stable, but without the guarantees of implementing 100% of the APIs of the Java version.\r\n\r\nJust to give an example, speaking only from my experience with the library, I personally was not aware of the desire to keep on-disk binary formats the same between Java and .NET. We are only using a subset of all this functionality, and we would definitely not be using the Java version, let alone on the same data. We don't care about Java Lucene at all, we just want a really good .NET full text search engine (actually we don't care about on-disk format at all as we are 100% in memory, but that's a different story).\r\n\r\n> The bottom line is there is no maintenance plan for making a Frankenstein version of Lucene that incorporates features from different versions\r\n\r\nI respect the decision to do a line-by-line port of Java Lucene, but I do like to point out that porting the most relevant features would not necessarily lead to a \"Frankenstein\" version. Obviously any feature that goes into the codebase have to be well architected and any technical dependencies for this feature have to be implemented properly. But consider if the goal was just to make the best .NET full text search engine out there, maybe omitting the long tail of rarely used features to not have to spend 1800 hours on version 4.8, instead focusing on the most popular features (again, building on robust foundation) may be serving the community better. This could perhaps lead to a higher engagement from the community (in terms of collaboration/PRs and possibly funding). You could still use Java Lucene as a blueprint for the implementation, but with the additional insight in what turned out well and what did not turn out so well there, without being burdened like they have by keeping compatibility also with less used and less well designed features.\r\n\r\n> We could alternatively move on to 4.8.0 release while keeping the Lucene.Net.ICU and components that depend on it unstable\r\n\r\nTo be blunt, and in all respect, it might get hard to find funding for hundreds or thousands of dev hours fixing the ICU library to support rare scripts and languages, until someone with a clear business case for it turns up. Just for comparison, if some company needed, say, vector valued fields (just as a random example) they might have the resources to fund the maintainers directly or devote professional developers to work with you on implementing this feature. But since I understand it you want to go to 9.something directly after 4.8, maybe we'll see a lot more contributions coming in as the field will be more open for new features.\r\n\r\n> but unfortunately that means either splitting up the lucene-cli component or releasing it as stable with unstable dependencies\r\n\r\nIf you have policies against pre-release libraries this is probably also a no go. I think policies like this are based on the assumption that pre-release means unstable implementation, while you mean unstable API. This is probably the core of this discussion, as it is clear that the code base is very stable from a bugs point of view.\r\n\r\nIt sounds like you have made a well-motivated and conscious decision w.r.t the versioning policy and the way to integrate new features. Your code, your versioning policy. Thank you for an awesome effort!\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781160217/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781314014","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1781314014","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1781314014,"node_id":"IC_kwDOAAJ06c5qLLHe","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-26T15:05:34Z","updated_at":"2023-10-26T15:05:34Z","author_association":"CONTRIBUTOR","body":"> If I read the entire thread correctly, there was never a suggestion to just abandon 4.8, but instead to decide the API is stable and focus on bug fixes, then release 4.8 and figure out a different way to version the library so that API changes can be done later. This way, going from beta to release would mean the current feature set is stable, but without the guarantees of implementing 100% of the APIs of the Java version.\r\n>\r\n> Just to give an example, speaking only from my experience with the library, I personally was not aware of the desire to keep on-disk binary formats the same between Java and .NET. We are only using a subset of all this functionality, and we would definitely not be using the Java version, let alone on the same data. We don't care about Java Lucene at all, we just want a really good .NET full text search engine (actually we don't care about on-disk format at all as we are 100% in memory, but that's a different story).\r\n\r\n> I respect the decision to do a line-by-line port of Java Lucene, but I do like to point out that porting the most relevant features would not necessarily lead to a \"Frankenstein\" version. Obviously any feature that goes into the codebase have to be well architected and any technical dependencies for this feature have to be implemented properly. But consider if the goal was just to make the best .NET full text search engine out there, maybe omitting the long tail of rarely used features to not have to spend 1800 hours on version 4.8, instead focusing on the most popular features (again, building on robust foundation) may be serving the community better. This could perhaps lead to a higher engagement from the community (in terms of collaboration/PRs and possibly funding). You could still use Java Lucene as a blueprint for the implementation, but with the additional insight in what turned out well and what did not turn out so well there, without being burdened like they have by keeping compatibility also with less used and less well designed features.\r\n\r\nYou are making some assumptions that just aren't true here.\r\n\r\n1. You are assuming that we have the high-level knowledge of each component to make such a derivative version.\r\n2. You are assuming that we would have some way to keep the feature set in line with Lucene if it were not a line-by-line port.\r\n3. You are assuming that we know which features our users find most valuable. While it is clear that a component such as `Lucene.Net.Analysis.Nori` (for Korean) will have very limited scope, it isn't so clear for more generalized components such as `Lucene.Net.ICU` that are useful in a lot more scenarios that `Lucene.Net.Analysis.Common` simply doesn't cover.\r\n4. You are assuming that we could get the tests to function the same way in .NET as they do in Java without a line-by-line port. Lucene has a custom test framework that uses repeatable randomized tests. This test framework is upgraded between versions of Lucene along with the tests.\r\n\r\nWithout keeping the binary formats the same, we would have to recreate all of the corrupt indexes for the tests. Arguably, the index format is the one thing that the Lucene team gave the most thought to about making Lucene portable across programming languages. Granted, we could use the documented format and try to reinvent the wheel for the rest, but there are a lot of components that would have to be analyzed at a high level so they could be recreated.\r\n\r\nIn addition, Lucene also has pluggable codecs so a newer version of Lucene can read the binary format from an older version so users can upgrade the software first and then upgrade the index later. Maybe you don't use this feature, but for users of apps with high availability, this feature is a must.\r\n\r\nThere are over 3000 code files in Lucene and it is not documented well - it could easily take years of analysis before we even start writing anything. We wouldn't even have much of an idea which features are important and which are not without tons of analysis and research. And when we are finished, there would be no reasonable way to incorporate features of new versions of Lucene (which is what happened on the NUnit project).\r\n\r\nAs for upgrading a single feature ahead of where it is in Lucene, this is where we run into problems. We have no idea before porting it what other patches it depends upon and whether any of those depend on binary formats that have changed. So we could start off porting to get the \"future\" feature in 4.8.0 only to find out later that it is incompatible and all of the work porting that one feature would go out the window. It would take much longer to port Lucene feature by feature than it would be to port the diff between 2 commits to get to a higher version. And we would always be sure to have a version that works (at least as well as it worked in Java).\r\n\r\n> >    We could alternatively move on to 4.8.0 release while keeping the Lucene.Net.ICU and components that depend on it unstable\r\n\r\n> To be blunt, and in all respect, it might get hard to find funding for hundreds or thousands of dev hours fixing the ICU library to support rare scripts and languages, until someone with a clear business case for it turns up. Just for comparison, if some company needed, say, vector valued fields (just as a random example) they might have the resources to fund the maintainers directly or devote professional developers to work with you on implementing this feature. But since I understand it you want to go to 9.something directly after 4.8, maybe we'll see a lot more contributions coming in as the field will be more open for new features.\r\n\r\nThat is true about funding. But the fact of the matter is that ICU4N has had more funding than Lucene.NET even though it is an alpha with unstable APIs and we still are working out how to properly package it. Maybe it is easier to get people to fund Lucene.NET if ICU4N is a done deal, but Lucene.NET moves on without ICU4N my fear is that ICU4N will never be released.\r\n\r\nIt is a tough sell to \"release\" Lucene.NET 4.8.0 and then ask for funding to \"finish\" it (which is basically to subsidize ICU4N). And it doesn't seem right to sell people on the idea that we are collecting funding for the upgrade only to shift that funding to finish ICU4N. It is far easier to finish ICU4N first, then release it, then release Lucene.NET, then ask for Lucene.NET funding for the 1800 hours to upgrade it (which is a pretty well defined scope).\r\n\r\nYou are right in that doing it in this order means there is less help on Lucene.NET, but that isn't really where the help is needed until the upgrade anyway. We have analyzed this pretty well and this is by far the fastest path (even though it is taking years because of limited funding and help).\r\n\r\n> > but unfortunately that means either splitting up the lucene-cli component or releasing it as stable with unstable dependencies\r\n\r\n> If you have policies against pre-release libraries this is probably also a no go. I think policies like this are based on the assumption that pre-release means unstable implementation, while you mean unstable API. This is probably the core of this discussion, as it is clear that the code base is very stable from a bugs point of view.\r\n\r\nFor the most part, yes. There are a few intermittently failing tests we have yet to track down. We mostly just have several APIs that are likely to break before the release. \r\n\r\nSince `lucene-cli` contains the utilities to maintain the index, it doesn't seem right to make it a prerelease when the rest of the code is a release. But it is a command line app, so it isn't like anyone will depend on it directly. `Lucene.Net.ICU` is another matter, though. I suspect it is the big companies that will require it most and those companies are the ones that are also most likely to have policies against pre-release libraries.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781314014/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781513899","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1781513899","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1781513899,"node_id":"IC_kwDOAAJ06c5qL76r","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-26T17:07:59Z","updated_at":"2023-10-26T17:07:59Z","author_association":"CONTRIBUTOR","body":">You are assuming that we have the high-level knowledge of each component to make such a derivative version.\r\nYou are assuming that we would have some way to keep the feature set in line with Lucene if it were not a line-by-line port.\r\n\r\nThese are excellent points.  Lucene is relatively easy to use as a library so it's easy not to realize just how sophisticated it is under the hood.  It's hands down the most sophisticated software I have ever worked on.  The amount of brilliant propeller head thinking that has gone into this product can't be overstated.  Some of the best minds in search have contributed to Lucene.  It's truly an amazing piece of software. And making changes to its internals is not for the faint-hearted. :-)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781513899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781664834","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1781664834","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1781664834,"node_id":"IC_kwDOAAJ06c5qMgxC","user":{"login":"rickardp","id":167356,"node_id":"MDQ6VXNlcjE2NzM1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/167356?v=4","gravatar_id":"","url":"https://api.github.com/users/rickardp","html_url":"https://github.com/rickardp","followers_url":"https://api.github.com/users/rickardp/followers","following_url":"https://api.github.com/users/rickardp/following{/other_user}","gists_url":"https://api.github.com/users/rickardp/gists{/gist_id}","starred_url":"https://api.github.com/users/rickardp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rickardp/subscriptions","organizations_url":"https://api.github.com/users/rickardp/orgs","repos_url":"https://api.github.com/users/rickardp/repos","events_url":"https://api.github.com/users/rickardp/events{/privacy}","received_events_url":"https://api.github.com/users/rickardp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-26T18:38:04Z","updated_at":"2023-10-26T18:38:04Z","author_association":"NONE","body":"> There are over 3000 code files in Lucene and it is not documented well - it could easily take years of analysis before we even start writing anything.\n\nPoints like these really sold your \"line by line\" approach to me. The (incorrect) assumption that I made was that most/all of the contributors and maintainers are as familiar with the (Java) Lucene codebase as the core Lucene devs, or the degree of communication between the projects. Admittedly, this was an assumption I made without looking it up. If this is not true, then any other approach would fail, agreed.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781664834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781886842","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1781886842","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1781886842,"node_id":"IC_kwDOAAJ06c5qNW96","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-26T20:59:35Z","updated_at":"2023-10-26T20:59:35Z","author_association":"CONTRIBUTOR","body":"Just to clarify, Lucene has a lot of documentation, and Lucene.NET has it's flavor of that documentation as well.  By many standards, it's decent documentation.  But it's one thing to document how developers can use an expansive library like Lucene, and quite another to document why each design choice was made the way it was and how the specific implementation details of that design enable the insanely fast overall indexing and search speeds of Lucene.  \r\n\r\nThere are many small aspects of the system that use such advanced software engineering approaches that a dev could easily spend more than a month if they wanted to understand that aspect of the system deeply.  Lucene's use of automata is one example.  Here is a [video](https://www.youtube.com/watch?v=pd2jvy2IbJE) at a conference that does a high-level overview of how and why Lucene uses automata.  If a dev wants to understand automata they will need to watch videos like that one and ultimately hunt down the whitepapers.  Once those whitepapers have been digested, maybe the dev will have the ability to understand that portion of the code.  Maybe.  We are assuming a very senior dev here.  \r\n\r\nA dev is not going to find deep documentation on automata in Lucene's source code or external documentation. (shrug) There is, of course, the Lucene dev mailing list archive, an archive of completed issues, and PR notes. All three of which contain a fantastic amount of history and insights.  \r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1781886842/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1793723296","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-1793723296","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":1793723296,"node_id":"IC_kwDOAAJ06c5q6gug","user":{"login":"Jeevananthan-23","id":71455761,"node_id":"MDQ6VXNlcjcxNDU1NzYx","avatar_url":"https://avatars.githubusercontent.com/u/71455761?v=4","gravatar_id":"","url":"https://api.github.com/users/Jeevananthan-23","html_url":"https://github.com/Jeevananthan-23","followers_url":"https://api.github.com/users/Jeevananthan-23/followers","following_url":"https://api.github.com/users/Jeevananthan-23/following{/other_user}","gists_url":"https://api.github.com/users/Jeevananthan-23/gists{/gist_id}","starred_url":"https://api.github.com/users/Jeevananthan-23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jeevananthan-23/subscriptions","organizations_url":"https://api.github.com/users/Jeevananthan-23/orgs","repos_url":"https://api.github.com/users/Jeevananthan-23/repos","events_url":"https://api.github.com/users/Jeevananthan-23/events{/privacy}","received_events_url":"https://api.github.com/users/Jeevananthan-23/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-05T12:27:52Z","updated_at":"2023-11-05T19:33:06Z","author_association":"CONTRIBUTOR","body":"> As for upgrading a single feature ahead of where it is in Lucene, this is where we run into problems. We have no idea before porting it what other patches it depends upon and whether any of those depend on binary formats that have changed. So we could start off porting to get the \"future\" feature in 4.8.0 only to find out later that it is incompatible and all of the work porting that one feature would go out the window. It would take much longer to port Lucene feature by feature than it would be to port the diff between 2 commits to get to a higher version. And we would always be sure to have a version that works (at least as well as it worked in Java).\r\n\r\nIndeed explanation, so when I was working on adding the **Sequence Number**  feature found the same issue really **uncertain about the Lucnenet roadmap**. @NightOwl888 / @rclabo  can anyone list the issues where I can work on to me open to contributions focusing on production-grade features.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1793723296/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1810604407","html_url":"https://github.com/apache/lucenenet/issues/715#issuecomment-1810604407","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/715","id":1810604407,"node_id":"IC_kwDOAAJ06c5r66F3","user":{"login":"rishav-karanjit","id":47602642,"node_id":"MDQ6VXNlcjQ3NjAyNjQy","avatar_url":"https://avatars.githubusercontent.com/u/47602642?v=4","gravatar_id":"","url":"https://api.github.com/users/rishav-karanjit","html_url":"https://github.com/rishav-karanjit","followers_url":"https://api.github.com/users/rishav-karanjit/followers","following_url":"https://api.github.com/users/rishav-karanjit/following{/other_user}","gists_url":"https://api.github.com/users/rishav-karanjit/gists{/gist_id}","starred_url":"https://api.github.com/users/rishav-karanjit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rishav-karanjit/subscriptions","organizations_url":"https://api.github.com/users/rishav-karanjit/orgs","repos_url":"https://api.github.com/users/rishav-karanjit/repos","events_url":"https://api.github.com/users/rishav-karanjit/events{/privacy}","received_events_url":"https://api.github.com/users/rishav-karanjit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-14T16:24:22Z","updated_at":"2023-11-14T16:24:22Z","author_association":"NONE","body":"Hello @NightOwl888, can I work on this issue?\r\n\r\nIs this issue all about changing internal to private?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1810604407/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1812835542","html_url":"https://github.com/apache/lucenenet/issues/886#issuecomment-1812835542","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/886","id":1812835542,"node_id":"IC_kwDOAAJ06c5sDazW","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-15T16:13:50Z","updated_at":"2023-11-15T16:13:50Z","author_association":"CONTRIBUTOR","body":"So, this is something we don't want to do. The reason for this is that the DocumentsWriter in Lucene 4.8.0 writes segments concurrently, not sequentially. However, we are getting test failures (I don't recall which tests) when attempting to do the same in .NET, possibly due to a missing lock or very subtle locking behavior in Java that doesn't work with the same syntax in .NET. https://github.com/apache/lucenenet/pull/887/commits/00d3942e750ce2a0be0171205e5c030474370cba is interesting and may help to address the problem, although we almost always strictly follow the way the tests are written in Java unless there is a good reason to change the test (and there may be here).\r\n\r\nhttps://github.com/apache/lucenenet/commit/963e10ca259570451f953331e4a9d62fabaffa32 is the hack that we put in place to make it run sequentially for the time being, but our intention is to fix the bug rather than change the API like this which would render it unfixable.\r\n\r\nThat being said, nobody is currently working on trying to get the concurrent document writing to function and it is considered low priority since it can most likely be addressed without any breaking API change after the release. However, you seem to have a knack for this, so you are welcome to attempt to roll back those changes and work on fixing the concurrency bug.\r\n\r\nDo note that DocumentsWriter is in an inconsistent state somewhere between Lucene 4.8.0 and 4.8.1 which may be contributing to the issue. So it may require upgrading to 4.8.1 in order to properly patch the bug. I ran a diff some time ago and there are less than 100 files that have changes between the two versions (and several of the modules were ported from 4.8.1 so there are fewer changes to deal with than that).\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1812835542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1814545466","html_url":"https://github.com/apache/lucenenet/issues/715#issuecomment-1814545466","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/715","id":1814545466,"node_id":"IC_kwDOAAJ06c5sJ8Q6","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-16T14:31:18Z","updated_at":"2023-11-16T14:31:18Z","author_association":"CONTRIBUTOR","body":"Sure. This is about accessibility of the members of the anonymous classes to make the members unavailable to the calling code (except for the member variables that are initialized in the constructor). It is less of a concern for members that are part of an interface or base class to make the members private (and in the latter case they must be the same accessibility as the base class), but all of the fields should definitely be hidden from the outside world.\r\n\r\nWe have already done some improvements to the naming conventions of the anonymous classes in #426 and #666 so they all end in the suffix `AnonymousClass`, making them easier to find. #666 also has marked them all `private` and `sealed`.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1814545466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1814612699","html_url":"https://github.com/apache/lucenenet/issues/865#issuecomment-1814612699","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/865","id":1814612699,"node_id":"IC_kwDOAAJ06c5sKMrb","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-16T14:53:34Z","updated_at":"2023-11-16T14:53:34Z","author_association":"CONTRIBUTOR","body":"This is virtually impossible to do in Lucene 4.8.0 because it requires binary format changes to the index to support and there is no precedent in Java for layering this functionality on top of Lucene 4.8.0. Not to mention, we lose the ability to debug if we don't have a Lucene version to compare execution paths with and the test framework requires additional support to be built in to support newer versions. The only sensible way to do this is to upgrade the entire project to the entire version, not one feature at a time.\r\n\r\nGiven this functionality already exists in a later version, we will be implementing it when we do the upgrade. I am closing because this isn't an \"issue\" so much as something that is already part of the planned upgrade.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1814612699/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1817578476","html_url":"https://github.com/apache/lucenenet/issues/886#issuecomment-1817578476","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/886","id":1817578476,"node_id":"IC_kwDOAAJ06c5sVgvs","user":{"login":"Jeevananthan-23","id":71455761,"node_id":"MDQ6VXNlcjcxNDU1NzYx","avatar_url":"https://avatars.githubusercontent.com/u/71455761?v=4","gravatar_id":"","url":"https://api.github.com/users/Jeevananthan-23","html_url":"https://github.com/Jeevananthan-23","followers_url":"https://api.github.com/users/Jeevananthan-23/followers","following_url":"https://api.github.com/users/Jeevananthan-23/following{/other_user}","gists_url":"https://api.github.com/users/Jeevananthan-23/gists{/gist_id}","starred_url":"https://api.github.com/users/Jeevananthan-23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jeevananthan-23/subscriptions","organizations_url":"https://api.github.com/users/Jeevananthan-23/orgs","repos_url":"https://api.github.com/users/Jeevananthan-23/repos","events_url":"https://api.github.com/users/Jeevananthan-23/events{/privacy}","received_events_url":"https://api.github.com/users/Jeevananthan-23/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-18T17:35:03Z","updated_at":"2023-11-18T18:18:52Z","author_association":"CONTRIBUTOR","body":"https://github.com/apache/lucenenet/commit/00d3942e750ce2a0be0171205e5c030474370cba , After fixing all the tests, this one failed because the Java version supports `volatile long` but `.NET` doesn't. It is important to note that the returned long can be ignored. Also currently working on NRT feature 02ed5d35631b6fb723c39a019012365f8dec565b kindly take a look.\r\n\r\nI Rant LuceneNet's 4.8 is 10-year-old release. I am eagerly looking forward to seeing more improvements in the project. Recently vector search added for Azure Search but they never leveraged LuceneNet.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1817578476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1817804574","html_url":"https://github.com/apache/lucenenet/issues/858#issuecomment-1817804574","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/858","id":1817804574,"node_id":"IC_kwDOAAJ06c5sWX8e","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-19T09:52:05Z","updated_at":"2023-11-19T09:52:05Z","author_association":"CONTRIBUTOR","body":"First of, your enum and use looks a bit weird to me, I would simply do:\r\n\r\n```\r\n// Dots for 0 as I think it makes it easier to see. Btw, Today you can define enums as bit masks with: 0b_0000_0000, 0b_0000_0001, 0b_0000_0010 etc. Before that we often used bit shifting to make it easier to define: Red = 1, Blue = 1 << 1, Green = 1 << 2 \r\n[Flags]\r\npublic enum Colors\r\n{\r\n   None=0,               // ............\r\n   Red=0x1,              // ...........1\r\n   Blue=0x2,             // ..........1.\r\n   Green=0x4,            // .........1..\r\n   Combination1 = 0x3f,  // ......111111 -> I would not have this one, not like this anyways.\r\n   Yellow = 0x40,        // .....1......\r\n   Orange= 0x80,         // ....1.......\r\n   Violet = 0x100,       // ...1........\r\n   Combination2 = 0xFC0, // 111111...... -> I would not have this one, not like this anyways.\r\n   All = 0xFFF           // 111111111111 -> Having a All can make sense, largely OK although we are setting flags here that is not defined, which is odd to me.\r\n   \r\n   // Instead of Combination1 and Combination2, If i REALLY wanted to define them on the ENUM (which I would often not do), Then I would do this insead:\r\n   \r\n   RedBlueGree = Red|Blue|Green               // .........111\r\n   YellowOrangeViolet = Yellow|Oragen|Violet  // ...111......\r\n\r\n   // However, they are bitwise not the same values as your Combination1 and Combination2, as they set undefined flags, which the context of the issue lacks an explanation off.\r\n}\r\n\r\n//Defining my data i would:\r\nvar temp = new List<Test>();\r\ntemp.Add(new Test{ Name= \"ABC\", Color = Colors.Red});\r\ntemp.Add(new Test{ Name= \"DEF\", Color = Colors.Red | Colors.Blue | Colors.Green });\r\ntemp.Add(new Test{ Name= \"PQR\", Color = Colors.All});\r\ntemp.Add(new Test{ Name= \"XYZ\", Color = Colors.Orange | Colors.Yellow | Colors.Violet});\r\ntemp.Add(new Test{ Name= \"AAA\", Color = Colors.Red | Colors.Blue });\r\ntemp.Add(new Test{ Name= \"BBB\", Color = Colors.Red | Colors.Yellow });\r\n```\r\n\r\nOne simple way of doing this is to add the field for each color. So:\r\n\r\n```CSharp\r\n  foreach(var val in temp)\r\n  {\r\n    var doc = new Document {nameField  };\r\n    nameField.SetStringValue(val.Name);\r\n    if(val.Color == Colors.None) {\r\n      doc.AddField(new StringField(\"Color\", \"None\", Field.Store.YES)\r\n    } \r\n    if(val.Color.HasFlag(Colors.Red)) {\r\n      doc.AddField(new StringField(\"Color\", \"Red\", Field.Store.YES)\r\n    } \r\n    if(val.Color.HasFlag(Colors.Blue)) {\r\n      doc.AddField(new StringField(\"Color\", \"Blue\", Field.Store.YES)\r\n    }\r\n    //... And so on - yes you can add the same field multiple times - obviously this code scales badly for large enums. To do that better you need first to decide what the combinations should add to the index. Then you can look at https://stackoverflow.com/questions/4171140/how-to-iterate-over-values-of-an-enum-having-flags\r\n    writer.AddDocument(doc);\r\n  }\r\n```\r\n\r\nAnother ways is to use the text field, then concat the values so it becomes \"Red, Blue, Green\" and then rely on that the Analyzer you use will make that work for you. (As it will index Red, Blue, Green as separate terms)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1817804574/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1820298557","html_url":"https://github.com/apache/lucenenet/issues/858#issuecomment-1820298557","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/858","id":1820298557,"node_id":"IC_kwDOAAJ06c5sf409","user":{"login":"gkatoch","id":39444347,"node_id":"MDQ6VXNlcjM5NDQ0MzQ3","avatar_url":"https://avatars.githubusercontent.com/u/39444347?v=4","gravatar_id":"","url":"https://api.github.com/users/gkatoch","html_url":"https://github.com/gkatoch","followers_url":"https://api.github.com/users/gkatoch/followers","following_url":"https://api.github.com/users/gkatoch/following{/other_user}","gists_url":"https://api.github.com/users/gkatoch/gists{/gist_id}","starred_url":"https://api.github.com/users/gkatoch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gkatoch/subscriptions","organizations_url":"https://api.github.com/users/gkatoch/orgs","repos_url":"https://api.github.com/users/gkatoch/repos","events_url":"https://api.github.com/users/gkatoch/events{/privacy}","received_events_url":"https://api.github.com/users/gkatoch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-21T06:09:42Z","updated_at":"2023-11-21T06:09:42Z","author_association":"NONE","body":"Thanks for the tip. I have been able to work by storing the values as a string.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1820298557/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1821347968","html_url":"https://github.com/apache/lucenenet/issues/311#issuecomment-1821347968","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/311","id":1821347968,"node_id":"IC_kwDOAAJ06c5sj5CA","user":{"login":"Plexois37","id":17917429,"node_id":"MDQ6VXNlcjE3OTE3NDI5","avatar_url":"https://avatars.githubusercontent.com/u/17917429?v=4","gravatar_id":"","url":"https://api.github.com/users/Plexois37","html_url":"https://github.com/Plexois37","followers_url":"https://api.github.com/users/Plexois37/followers","following_url":"https://api.github.com/users/Plexois37/following{/other_user}","gists_url":"https://api.github.com/users/Plexois37/gists{/gist_id}","starred_url":"https://api.github.com/users/Plexois37/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Plexois37/subscriptions","organizations_url":"https://api.github.com/users/Plexois37/orgs","repos_url":"https://api.github.com/users/Plexois37/repos","events_url":"https://api.github.com/users/Plexois37/events{/privacy}","received_events_url":"https://api.github.com/users/Plexois37/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-21T17:23:02Z","updated_at":"2023-11-21T17:23:02Z","author_association":"NONE","body":"I'm using Beta 16 and it I have the same issue.\r\nI also use the .Net Framework but using version 1.1.2 of Microsoft.Extensions.Configuration and Microsoft.Extensions.Configuration.Abstractions doesn't change anything.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1821347968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1821399607","html_url":"https://github.com/apache/lucenenet/issues/311#issuecomment-1821399607","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/311","id":1821399607,"node_id":"IC_kwDOAAJ06c5skFo3","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-21T17:58:33Z","updated_at":"2023-11-21T17:58:33Z","author_association":"CONTRIBUTOR","body":"Unless you are seeing the same exception, this is probably due to a versioning conflict between Lucene.NET's reference to this package and another library's reference to it. Please review the output of each of your projects and pay close attention to the version of all Microsoft.Extensions.Configuration libraries in each `bin` folder. If it is not consistently outputting the same version for each of your projects, you may need to add a reference to the offending package in order to explicitly force a version upgrade (assuming the conflict is not due to something you own).\r\n\r\nHere is a simple console app to automate the process of checking for conflicts that you can adjust to check your projects.\r\n\r\n```c#\r\n            // Build the project in debug mode before running\r\n\r\n            var configuration = \"Release\";\r\n            var targetFramework = \"net461\";\r\n            var fileToFind = \"Microsoft.Extensions.Configuration.Abstractions.dll\";\r\n            var baseFolder = @\"<path to the root of your source code>\";\r\n\r\n            foreach (string file in Directory.EnumerateFiles(baseFolder, \"*.dll\", SearchOption.AllDirectories)\r\n                .Where(f => Path.GetDirectoryName(f).EndsWith(@$\"bin\\{configuration}\\{targetFramework}\")))\r\n            {\r\n                if (Path.GetFileName(file) == fileToFind)\r\n                {\r\n                    var assemblyName = AssemblyName.GetAssemblyName(file);\r\n\r\n                    Console.WriteLine(assemblyName.ToString() + \" - \" + file);\r\n                }\r\n            }\r\n```\r\n\r\nIf you square up your references and still see an exception, please open a new bug report with a repro project.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1821399607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1822143732","html_url":"https://github.com/apache/lucenenet/issues/886#issuecomment-1822143732","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/886","id":1822143732,"node_id":"IC_kwDOAAJ06c5sm7T0","user":{"login":"Jeevananthan-23","id":71455761,"node_id":"MDQ6VXNlcjcxNDU1NzYx","avatar_url":"https://avatars.githubusercontent.com/u/71455761?v=4","gravatar_id":"","url":"https://api.github.com/users/Jeevananthan-23","html_url":"https://github.com/Jeevananthan-23","followers_url":"https://api.github.com/users/Jeevananthan-23/followers","following_url":"https://api.github.com/users/Jeevananthan-23/following{/other_user}","gists_url":"https://api.github.com/users/Jeevananthan-23/gists{/gist_id}","starred_url":"https://api.github.com/users/Jeevananthan-23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jeevananthan-23/subscriptions","organizations_url":"https://api.github.com/users/Jeevananthan-23/orgs","repos_url":"https://api.github.com/users/Jeevananthan-23/repos","events_url":"https://api.github.com/users/Jeevananthan-23/events{/privacy}","received_events_url":"https://api.github.com/users/Jeevananthan-23/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-22T05:35:44Z","updated_at":"2023-11-22T05:35:44Z","author_association":"CONTRIBUTOR","body":"\r\n> \r\n> [963e10c](https://github.com/apache/lucenenet/commit/963e10ca259570451f953331e4a9d62fabaffa32) is the hack that we put in place to make it run sequentially for the time being, but our intention is to fix the bug rather than change the API like this which would render it unfixable.\r\n> \r\n> That being said, nobody is currently working on trying to get the concurrent document writing to function and it is considered low priority since it can most likely be addressed without any breaking API change after the release. However, you seem to have a knack for this, so you are welcome to attempt to roll back those changes and work on fixing the concurrency bug.\r\n\r\n@NightOwl888  Can you please provide more details about the concurrency issue? This will help me understand the problem better and work on finding a solution.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1822143732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1822964001","html_url":"https://github.com/apache/lucenenet/issues/886#issuecomment-1822964001","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/886","id":1822964001,"node_id":"IC_kwDOAAJ06c5sqDkh","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-11-22T15:14:54Z","updated_at":"2023-11-22T15:14:54Z","author_association":"CONTRIBUTOR","body":"@Jeevananthan-23 - https://github.com/apache/lucenenet/commit/963e10ca259570451f953331e4a9d62fabaffa32 points to #325 where the [original error report](https://github.com/apache/lucenenet/pull/325#issuecomment-671766858) is. I followed up with [another stack trace on the same failing test](https://github.com/apache/lucenenet/pull/325#issuecomment-672154841).\r\n\r\nI have reverted the relevant changes from 963e10ca259570451f953331e4a9d62fabaffa32 in this branch: https://github.com/NightOwl888/lucenenet/tree/fix/documentswriter-concurrency. I ran the tests 30 times on Azure DevOps and ran the `TestMultiThreadedSnapshotting` test locally 30,000 times and couldn't get a failure. That is the good news. The bad news is that another test `TestRollingUpdates.TestUpdateSameDoc` fails, but very rarely. I got it to fail locally on both .NET 5.0 and .NET 6.0, but not on .NET 7.0.\r\n\r\nSo, we cannot merge the patch until we have a fix for the failing test. I am attaching the log from the test failure. I got it to fail on `net5.0` on Windows (the [original failure](https://dev.azure.com/lucene-net-temp2/Lucene.NET/_build/results?buildId=969&view=ms.vss-test-web.build-test-results-tab&runId=642992&resultId=100400&paneView=debug) was on Linux). I used the `[Repeat(1000)]` attribute on the test, and it failed after about 3 runs.\r\n\r\nI also used the assembly attributes as specified in the test failure. This ensures the same random components are plugged into the test during each run, which may help narrow down which component is faulty. On the other hand, these may have nothing to do with the exception at all - it is hard to determine this when the failure happens so rarely. Do note we have our own random class so these will work consistently across target frameworks and operating systems.\r\n\r\n```c#\r\n[assembly: Lucene.Net.Util.RandomSeed(\"0xe6dee1082501680d\")]\r\n[assembly: NUnit.Framework.SetCulture(\"sat-Olck\")]\r\n```\r\n\r\n[TestUpdateSameDoc-638362856625826917.zip](https://github.com/apache/lucenenet/files/13440868/TestUpdateSameDoc-638362856625826917.zip)\r\n\r\nIf you could pull down the branch to investigate why the test is failing, that would be great.\r\n\r\n`TestTargetFramework.props` is where the target framework for the tests can be specified.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1822964001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1862161792","html_url":"https://github.com/apache/lucenenet/issues/832#issuecomment-1862161792","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/832","id":1862161792,"node_id":"IC_kwDOAAJ06c5u_lWA","user":{"login":"ljcollins25","id":857364,"node_id":"MDQ6VXNlcjg1NzM2NA==","avatar_url":"https://avatars.githubusercontent.com/u/857364?v=4","gravatar_id":"","url":"https://api.github.com/users/ljcollins25","html_url":"https://github.com/ljcollins25","followers_url":"https://api.github.com/users/ljcollins25/followers","following_url":"https://api.github.com/users/ljcollins25/following{/other_user}","gists_url":"https://api.github.com/users/ljcollins25/gists{/gist_id}","starred_url":"https://api.github.com/users/ljcollins25/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ljcollins25/subscriptions","organizations_url":"https://api.github.com/users/ljcollins25/orgs","repos_url":"https://api.github.com/users/ljcollins25/repos","events_url":"https://api.github.com/users/ljcollins25/events{/privacy}","received_events_url":"https://api.github.com/users/ljcollins25/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-19T05:48:19Z","updated_at":"2023-12-19T05:48:29Z","author_association":"NONE","body":"@NightOwl888, what do you think creating a new struct type (named 'FilePath') which is implicitly convertible from FileInfo and String, but only implicitly convertible to String? That's a strategy I've used in the past to simplify API migrations like this. It does have the downside of not being runtime compatible, so any consumers of the updated API will need to recompile.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1862161792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1863707573","html_url":"https://github.com/apache/lucenenet/issues/832#issuecomment-1863707573","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/832","id":1863707573,"node_id":"IC_kwDOAAJ06c5vFeu1","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-20T01:39:40Z","updated_at":"2023-12-20T01:39:40Z","author_association":"CONTRIBUTOR","body":"@ljcollins25 \r\n\r\nWe have considered that approach for char sequences. In Java, `String`, `char[]`, and `StringBuilder` all implement the `CharSequence` interface, but in .NET there is no common interface between them (and we should also deal with `ReadOnlySpan<char>`), so it was up for consideration. But ultimately we decided against such an approach due to the confusion it may cause - if an API says it accepts a `CharSequence` struct, it may not be obvious that you can pass in a string. Besides, `ReadOnlySpan<char>` now implicitly converts both `String` and `char[]`, which is far more intuitive to use.\r\n\r\nHowever, being that we are only passing in `FileInfo` and `DirectoryInfo` to match the Java API and they ultimately are just allocations we don't need because `FileStream` and other downstream APIs don't accept them as parameters, we have to read out the strings to concatenate, etc., they aren't really needed in .NET. We only want to keep these overloads around to match Java Lucene.\r\n\r\nThat being said, `FileInfo` and `DirectoryInfo` do more than just allocate memory. When the string is passed into the constructor of  `FileInfo` and `DirectoryInfo`, it is resolved to handle relative paths and symbolic links. However, this logic is also exposed in .NET publicly as static methods, so we still can eliminate the allocations without changing the behavior, it just takes a bit more work analyzing what is going on when `FileInfo` and `DirectoryInfo` are used and duplicating it for the string overloads. Sure, we could handle that in a custom struct to make our job easier, but IMO it makes the end user's job harder, which is not worth the tradeoff.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1863707573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1881903560","html_url":"https://github.com/apache/lucenenet/issues/890#issuecomment-1881903560","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/890","id":1881903560,"node_id":"IC_kwDOAAJ06c5wK5HI","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-08T22:12:42Z","updated_at":"2024-01-08T22:12:42Z","author_association":"CONTRIBUTOR","body":"I haven't used that specific feature of Lucene.NET, but when I bump into similar issues with other features one thing I find helpful is to look at the unit tests for the feature.  Often, that helps me understand the coding pattern for using the feature.  It may be worth a look.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1881903560/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1882918435","html_url":"https://github.com/apache/lucenenet/issues/890#issuecomment-1882918435","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/890","id":1882918435,"node_id":"IC_kwDOAAJ06c5wOw4j","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-09T11:42:51Z","updated_at":"2024-01-09T11:43:45Z","author_association":"CONTRIBUTOR","body":"The OpenNLP project is not ported from Java, instead it uses IKVM to convert the bytecode directly into IL. So, there is nothing we add over and above the Java implementation of OpenNLP 1.9.1.\r\n\r\nThe documentation for [OpenNLP 1.9.1](https://opennlp.apache.org/docs/1.9.1/) is on the [OpenNLP website](https://opennlp.apache.org/).\r\n\r\nAs far as the Lucene TokenStream APIs are concerned, the documentation (which is a bit scant) is in the [Getting Started section](https://lucenenet.apache.org/docs/4.8.0-beta00016/#getting-started). I concur with @rclabo that the best place to see examples are in the [tests](https://github.com/apache/lucenenet/tree/Lucene.Net_4_8_0_beta00016/src/Lucene.Net.Tests.Analysis.OpenNLP). \r\n\r\nFor such a task, I would also recommend using the [test framework package](https://www.nuget.org/packages/Lucene.Net.TestFramework/absoluteLatest) to verify your analyzer implementation is compatible with Lucene.NET. And of course to look at other tests to work out how to use it because the [docs](https://lucenenet.apache.org/docs/4.8.0-beta00016/api/test-framework/Lucene.Net.Analysis.html) are not great.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1882918435/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1883153035","html_url":"https://github.com/apache/lucenenet/issues/890#issuecomment-1883153035","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/890","id":1883153035,"node_id":"IC_kwDOAAJ06c5wPqKL","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-09T14:29:49Z","updated_at":"2024-01-09T14:29:49Z","author_association":"CONTRIBUTOR","body":"Also, if you get it figured out, we'd greatly appreciate you posting some example code here or submitting a few additional unit tests that demonstrate the use more clearly. That will help the next person. Lucene and LuceneNET are really quite amazing but it sometimes takes some research to figure out how to use various aspects.  Contributing back some of that knowhow would be greatly appreciated.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1883153035/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1885922492","html_url":"https://github.com/apache/lucenenet/issues/460#issuecomment-1885922492","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/460","id":1885922492,"node_id":"IC_kwDOAAJ06c5waOS8","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-10T23:31:39Z","updated_at":"2024-01-10T23:31:39Z","author_association":"CONTRIBUTOR","body":"> Unfortunately, while IKVM has been a reasonable go-to way to quickly support Java-based apps in the past, it has been [abandoned by its main contributor](http://weblog.ikvm.net/) in 2017 and has no .NET Core/NET Standard support.\r\n\r\nFYI for everyone that ikvm-revived is now IKVM proper, and has .NET 6+ support as of v8.7. https://github.com/ikvmnet/ikvm/releases/tag/8.7.0","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1885922492/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887394182","html_url":"https://github.com/apache/lucenenet/issues/259#issuecomment-1887394182","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/259","id":1887394182,"node_id":"IC_kwDOAAJ06c5wf1mG","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-11T15:16:07Z","updated_at":"2024-01-18T15:42:27Z","author_association":"CONTRIBUTOR","body":"I have begun reviewing the core T-Z tests. So far I've made it through Automaton and it was all good apart from some very minor formatting that I'll PR once complete. \r\n\r\n- [X] Util.Automaton\r\n- [x] Util.Fst\r\n- [x] Util.Packed\r\n- [x] Util B-TestF\r\n- [x] Util TestI-TestQ\r\n- [x] Util TestR-TestW\r\n\r\nUpdate 1/12: Reviewed Util.Fst, also mostly a few minor formatting changes\r\nUpdate 1/12: Reviewed Util.Packed, same\r\nUpdate 1/15: Reviewed files with names starting with B-TestF in Util\r\nUpdate 1/17: Reviewed through TestQ in Util\r\nUpdate 1/18: Finished last segment of tests, PR coming soon","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887394182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887430095","html_url":"https://github.com/apache/lucenenet/issues/259#issuecomment-1887430095","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/259","id":1887430095,"node_id":"IC_kwDOAAJ06c5wf-XP","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-11T15:35:10Z","updated_at":"2024-01-11T15:35:10Z","author_association":"CONTRIBUTOR","body":"@paulirwin Thank you Paul, much appreciated!  This is such a great project, so I get excited when I see others jumping in to help.  Thank you!","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887430095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887579815","html_url":"https://github.com/apache/lucenenet/issues/259#issuecomment-1887579815","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/259","id":1887579815,"node_id":"IC_kwDOAAJ06c5wgi6n","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-11T16:58:26Z","updated_at":"2024-01-11T16:58:48Z","author_association":"CONTRIBUTOR","body":"@rclabo haha I'm jumping in again after a very long absence. My colleagues and I had done a lot of work to finish getting the core of 4.8 ported about 10 years ago, then another group came along with a branch and that ended up being the current work we see today. We used my branch to create an app that supported ~1B document indexes under heavy load in production, so it was pretty rock solid at the time, but was stuck on .NET Framework so I'm happy to see the state of things today and being able to build this on arm64 macOS in .NET 6! I haven't had a need for Lucene.net in a while so I have been pretty quiet the last several years. Now, though, I have a project that is a [local emulator for Azure Search](https://github.com/feature23/AzureSearchEmulator) which uses 4.8 beta, as well as I'm getting into RAG with LLMs so I'd love to see if I can help move the project along to be able to use the new vector database fields in modern Java Lucene.\r\n\r\nThe tests we ported at the time can be referenced if desired: https://github.com/paulirwin/lucene.net/tree/branch_4x","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887579815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887642714","html_url":"https://github.com/apache/lucenenet/issues/259#issuecomment-1887642714","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/259","id":1887642714,"node_id":"IC_kwDOAAJ06c5wgyRa","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-11T17:32:59Z","updated_at":"2024-01-11T17:32:59Z","author_association":"CONTRIBUTOR","body":"@paulirwin Super cool.  I'm also very interested in LLMs and RAGs.  Well, welcome back.  Lucene and the community have missed you! :-)  ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887642714/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887750929","html_url":"https://github.com/apache/lucenenet/issues/890#issuecomment-1887750929","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/890","id":1887750929,"node_id":"IC_kwDOAAJ06c5whMsR","user":{"login":"GAInTheHouse","id":55328124,"node_id":"MDQ6VXNlcjU1MzI4MTI0","avatar_url":"https://avatars.githubusercontent.com/u/55328124?v=4","gravatar_id":"","url":"https://api.github.com/users/GAInTheHouse","html_url":"https://github.com/GAInTheHouse","followers_url":"https://api.github.com/users/GAInTheHouse/followers","following_url":"https://api.github.com/users/GAInTheHouse/following{/other_user}","gists_url":"https://api.github.com/users/GAInTheHouse/gists{/gist_id}","starred_url":"https://api.github.com/users/GAInTheHouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GAInTheHouse/subscriptions","organizations_url":"https://api.github.com/users/GAInTheHouse/orgs","repos_url":"https://api.github.com/users/GAInTheHouse/repos","events_url":"https://api.github.com/users/GAInTheHouse/events{/privacy}","received_events_url":"https://api.github.com/users/GAInTheHouse/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-11T18:41:04Z","updated_at":"2024-01-11T18:41:04Z","author_association":"NONE","body":"I used @rclabo 's recommendation and tried to utilize the [unit tests](https://github.com/apache/lucenenet/blob/master/src/Lucene.Net.Tests.Analysis.OpenNLP/TestOpenNLPLemmatizerFilterFactory.cs). However I ran into an exception I assume is because I'm not using .Net4.8:\r\n``` System.TypeLoadException: Could not load type 'System.Reflection.Emit.MethodToken' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'```\r\n\r\n\r\nDoes the OpenNLP integration not support .Net6.0?\r\n\r\n@rclabo Lucene.Net is indeed an amazing library and I'd love to contribute to it once I figure it out!","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887750929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887818249","html_url":"https://github.com/apache/lucenenet/pull/852#issuecomment-1887818249","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/852","id":1887818249,"node_id":"IC_kwDOAAJ06c5whdIJ","user":{"login":"GAInTheHouse","id":55328124,"node_id":"MDQ6VXNlcjU1MzI4MTI0","avatar_url":"https://avatars.githubusercontent.com/u/55328124?v=4","gravatar_id":"","url":"https://api.github.com/users/GAInTheHouse","html_url":"https://github.com/GAInTheHouse","followers_url":"https://api.github.com/users/GAInTheHouse/followers","following_url":"https://api.github.com/users/GAInTheHouse/following{/other_user}","gists_url":"https://api.github.com/users/GAInTheHouse/gists{/gist_id}","starred_url":"https://api.github.com/users/GAInTheHouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GAInTheHouse/subscriptions","organizations_url":"https://api.github.com/users/GAInTheHouse/orgs","repos_url":"https://api.github.com/users/GAInTheHouse/repos","events_url":"https://api.github.com/users/GAInTheHouse/events{/privacy}","received_events_url":"https://api.github.com/users/GAInTheHouse/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-11T19:25:51Z","updated_at":"2024-01-11T19:25:51Z","author_association":"NONE","body":"@laimis @NightOwl888 would y'all be able to help me understand what's the road map for OpenNLP to target .Net 6?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887818249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887940071","html_url":"https://github.com/apache/lucenenet/issues/890#issuecomment-1887940071","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/890","id":1887940071,"node_id":"IC_kwDOAAJ06c5wh63n","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-11T20:49:52Z","updated_at":"2024-01-11T20:49:52Z","author_association":"CONTRIBUTOR","body":"The timing of your question couldn't be better.   \r\n\r\nToday @paulirwin mentioned in a [separate issue #460](https://github.com/apache/lucenenet/issues/460#issuecomment-1885922492) the following:\r\n\r\n>Unfortunately, while IKVM has been a reasonable go-to way to quickly support Java-based apps in the past, it has been [abandoned by its main contributor](http://weblog.ikvm.net/) in 2017 and has no .NET Core/NET Standard support.\r\n\r\n>FYI for everyone that ikvm-revived is now IKVM proper, and has .NET 6+ support as of v8.7. https://github.com/ikvmnet/ikvm/releases/tag/8.7.0\r\n\r\n(You are probably already aware that the LuceneNET OpenNLP integration requires IKVM because OpenNLP is a seperate Apache project that is only available as Java. )\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887940071/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887966833","html_url":"https://github.com/apache/lucenenet/issues/890#issuecomment-1887966833","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/890","id":1887966833,"node_id":"IC_kwDOAAJ06c5wiBZx","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-11T21:10:07Z","updated_at":"2024-01-11T21:10:07Z","author_association":"CONTRIBUTOR","body":"Also in a POC console app, I was able to use IKVM 8.7 and the `<IkvmReference>` csproj support to load the opennlp 1.9.4 jar directly without OpenNLP.NET (on an arm64 macOS machine, no less). In case that helps anyone.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1887966833/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1888880033","html_url":"https://github.com/apache/lucenenet/issues/890#issuecomment-1888880033","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/890","id":1888880033,"node_id":"IC_kwDOAAJ06c5wlgWh","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-12T10:56:57Z","updated_at":"2024-01-12T10:57:56Z","author_association":"CONTRIBUTOR","body":"> Also in a POC console app, I was able to use IKVM 8.7 and the `<IkvmReference>` csproj support to load the opennlp 1.9.4 jar directly without OpenNLP.NET (on an arm64 macOS machine, no less). In case that helps anyone.\r\n\r\nYeah, unfortunately, all of the latest versions that have ARM 64 support (and macOS x64) [stopped working on .NET Framework](https://github.com/ikvmnet/ikvm/issues/467). So, there isn't yet a version of IKVM that works everywhere. Support for mac was added in 8.7.0. It also appears that 8.7.0 and higher [will get a type initialization exception](https://github.com/ikvmnet/ikvm/issues/466) if you don't explicitly create an object before using any of the converted libraries.\r\n\r\n`<MavenReference>` is really how we should be handling this so people who depend on `Lucene.Net.Analysis.OpenNLP` can combine it with other Maven packages and it will resolve the IKVM compiled dependency versions so there are no conflicts.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1888880033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1889102544","html_url":"https://github.com/apache/lucenenet/pull/852#issuecomment-1889102544","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/852","id":1889102544,"node_id":"IC_kwDOAAJ06c5wmWrQ","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-12T12:47:56Z","updated_at":"2024-01-12T12:47:56Z","author_association":"CONTRIBUTOR","body":"> @laimis @NightOwl888 would y'all be able to help me understand what's the road map for OpenNLP to target .Net 6?\r\n\r\nUnfortunately, this is blocked by the fact that we don't really want to use OpenNLP.NET for this, but instead use `<MavenReference>`, which will transitively be added to everyone who depends on `Lucene.Net.Analysis.OpenNLP`. Basically, instead of including a compiled DLL in the package for opennlp-tools, it will compile it on your machine when you depend on `Lucene.Net.Analysis.OpenNLP` and it will resolve any other Maven dependencies that you pull into your project to fix versioning conflicts between common dependencies.\r\n\r\nHowever, I have updated this branch (rebased against the master branch) and have built the packages [here](https://dev.azure.com/shad0962/Experiments/_build/results?buildId=2240&view=artifacts&pathAsName=false&type=publishedArtifacts). Download the `nuget` artifact and unzip it, and you can then put the `.nupkg` files into a local directory and add it as a package source. That should at least get you up and running for now.\r\n\r\nThe tests we have for the OpenNLP support work, but I am not sure the entire opennlp-tools package works on macOS or iOS. It won't if there is any file locking in the application, but I haven't checked the opennlp source to determine if they are doing so. It should work on Windows and Linux, though.\r\n\r\nAs for an official release, we will do so as soon as there is a version of IKVM that supports both macOS and .NET Framework, but so far there isn't one and the latest version has some annoying initialization exceptions if you don't explicitly call `new object()` before you call into an IKVM-converted library. IKVM has come a long way in the past 18 months, but it just isn't there yet.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1889102544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1889178169","html_url":"https://github.com/apache/lucenenet/issues/259#issuecomment-1889178169","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/259","id":1889178169,"node_id":"IC_kwDOAAJ06c5wmpI5","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-12T13:15:55Z","updated_at":"2024-01-12T13:15:55Z","author_association":"CONTRIBUTOR","body":"@paulirwin - Thanks for your help on this.\r\n\r\nThis issue is certainly a good place to start after being inactive for awhile. But do note we have set up a [Slack channel #lucenenet-dev](https://the-asf.slack.com/archives/C03FFRQQ2RM) where you can review some (more) of the recent activity or discuss other aspects of the project that are off-topic for a specific GitHub issue. The dev mailing list works, also, but I find it is easier to share code on Slack.\r\n\r\n[Apache docs for Slack](https://infra.apache.org/slack.html)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1889178169/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1890484676","html_url":"https://github.com/apache/lucenenet/pull/852#issuecomment-1890484676","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/852","id":1890484676,"node_id":"IC_kwDOAAJ06c5wroHE","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-13T15:16:33Z","updated_at":"2024-01-13T15:16:33Z","author_association":"CONTRIBUTOR","body":"@GAInTheHouse \r\n\r\nIt turns out it was possible to overcome the issues with `MavenReference` with some due diligence. I have submitted #892, which should resolve this (even on macOS). You can download the latest update with these changes here:\r\n\r\nhttps://dev.azure.com/shad0962/Experiments/_build/results?buildId=2242&view=artifacts&pathAsName=false&type=publishedArtifacts\r\n\r\nA few things to note:\r\n\r\n- Sometimes it may be necessary to physically delete your bin and obj folders in order to fix IKVM build issues, and these build issues (such as type initialization errors) often look like runtime issues.\r\n- IKVM will download several GB of dependencies onto your build machine. So, it is important to ensure there is enough space.\r\n- Nearly all issues you are likely to encounter will either be with [IKVM](https://github.com/ikvmnet/ikvm) or [OpenNLP](https://opennlp.apache.org/get-involved.html) (the Java project), so please report them to the appropriate party.  Of course, there could still be a problem with the Lucene.Net.Analysis.OpenNLP project, and we would like to hear feedback if you do find a problem with it.\r\n- Since there will likely be a learning curve to get into the weeds with OpenNLP, it would be appreciated if you contribute what you learn as documentation back to this project so it can help others get up to speed more easily (as you pointed out in #890, there isn't much to go on). Documentation for OpenNLP can be provided via Markdown in the following file: https://github.com/apache/lucenenet/blob/master/src/Lucene.Net.Analysis.OpenNLP/overview.md. Additional documentation can be provided on class and members via inline XML doc comments. Documents can also be added as Markdown files and then added to the `/websites/apidocs` folder. There is some information about how to build the docs here: https://lucenenet.apache.org/contributing/documentation.html.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1890484676/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1890818807","html_url":"https://github.com/apache/lucenenet/issues/889#issuecomment-1890818807","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/889","id":1890818807,"node_id":"IC_kwDOAAJ06c5ws5r3","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-14T01:48:45Z","updated_at":"2024-01-14T01:48:45Z","author_association":"CONTRIBUTOR","body":"This issue happens when you have a version conflict between the version of [Microsoft.Extensions.Configuration.Abstractions]() that we target and other libraries in your project. Unfortunately, the version resolution on these older packages doesn't work well and manual fixup is often required when you pull in another dependency that depends on Microsoft.Extensions.Configuration.Abstractions or any of the other libraries in Microsoft.Extensions.Configuration.\r\n\r\nThe solution is to go through your project dependencies to determine the lowest version of Microsoft.Extensions.Configuration.Abstractions that can be targeted to resolve the conflict. You may use a higher version than this and it will work (in the master branch we are currently targeting 3.1.6, which seems to solve this).\r\n\r\nYou can then either add a direct reference to Microsoft.Extensions.Configuration.Abstractions and all of the other Microsoft.Extensions.Configuration packages to your project or use [assembly binding redirects](https://learn.microsoft.com/en-us/dotnet/framework/configure-apps/redirect-assembly-versions) to do the same.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1890818807/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1899961979","html_url":"https://github.com/apache/lucenenet/issues/306#issuecomment-1899961979","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/306","id":1899961979,"node_id":"IC_kwDOAAJ06c5xPx57","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-19T08:23:45Z","updated_at":"2024-01-19T08:37:13Z","author_association":"CONTRIBUTOR","body":"Just an update on our NUnit integration.\r\n\r\nWe added the repeatable randomized testing functionality in #547, so now it is much easier to debug random tests. This was done primarily by implementing our own `[TestFixture]` attribute that enables running the functionality. This attribute is placed within `LuceneTestCase` so even if any test file has a `using NUnit.Framework` at the top, the compiler will choose our `[TestFixture]` instead of the one in NUnit as long as it is a subclass of `LuceneTestCase`.\r\n\r\nThe `[SuppressCodecs]` attribute functions inside of the `TestRuleSetupAndRestoreClassEnv`, which is executed by NUnit when it calls our `LuceneTestCase` methods that are decorated with the `[OneTimeSetup]` and `[OneTimeTearDown]` attributes. Unfortunately, this means that a user can disable this functionality by overriding these methods without calling the base class (we probably should address that).\r\n\r\nWe also added `[AwaitsFix]`, `[Nightly]`, `[Weekly]`, and `[Slow]` attributes so we can classify tests accordingly. These attributes extend NUnit interfaces so NUnit will execute them. Some of them still have issues because they run the most time consuming bits of the test before the attribute has a chance to run. See #739.\r\n\r\nWe are still missing the `[BadApple]` attribute, which we don't really have a use for. This was for putting the tests into a \"vault\" in Jenkins if they fail frequently.\r\n\r\nThe `[SuppressTempFileChecks]` attribute still does not function, which we should address at some point. See: #898.\r\n\r\nSo, we are very much integrated with NUnit at this point, and I am not sure there is another test framework that can support all of this functionality (at least not without making our own fork of it).\r\n\r\nThat said, NUnit 4 has already shipped and it is not yet known how much work is involved with supporting it.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1899961979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1900926732","html_url":"https://github.com/apache/lucenenet/issues/792#issuecomment-1900926732","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/792","id":1900926732,"node_id":"IC_kwDOAAJ06c5xTdcM","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-19T18:45:00Z","updated_at":"2024-01-19T18:45:00Z","author_association":"CONTRIBUTOR","body":"So, this doesn't look like an issue at all with Lucene.NET. You are specifying `Encoding.UTF8`.\r\n\r\nIn .NET Framework, when you do that you get `UTF8Encoding(true)` - which emits a BOM.\r\n\r\nhttps://github.com/microsoft/referencesource/blob/master/mscorlib/system/text/encoding.cs#L1549\r\n\r\nIn .NET Core, they changed it to be the same as `Encoding.Default`, which creates a `UTF8Encoding` instance without a BOM. Presumably, this is to match the default behavior of Java.\r\n\r\nhttps://github.com/dotnet/runtime/blob/v6.0.26/src/libraries/System.Private.CoreLib/src/System/Text/Encoding.cs#L1071\r\nhttps://github.com/dotnet/runtime/blob/v6.0.26/src/libraries/System.Private.CoreLib/src/System/Text/Encoding.cs#L80-L83\r\n\r\nIn short, if you want encoding without a BOM, you have to specify it that way. On .NET Framework, you have to call the constructor and pass `false` for the `encoderShouldEmitUTF8Identifier` parameter.\r\n\r\n```c#\r\nvar utf8NoBOM = new UTF8Encoding(encoderShouldEmitUTF8Identifier: false);\r\n```\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.text.utf8encoding.-ctor?view=net-8.0#system-text-utf8encoding-ctor(system-boolean)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1900926732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1900936947","html_url":"https://github.com/apache/lucenenet/issues/792#issuecomment-1900936947","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/792","id":1900936947,"node_id":"IC_kwDOAAJ06c5xTf7z","user":{"login":"xsharper","id":14009277,"node_id":"MDQ6VXNlcjE0MDA5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/14009277?v=4","gravatar_id":"","url":"https://api.github.com/users/xsharper","html_url":"https://github.com/xsharper","followers_url":"https://api.github.com/users/xsharper/followers","following_url":"https://api.github.com/users/xsharper/following{/other_user}","gists_url":"https://api.github.com/users/xsharper/gists{/gist_id}","starred_url":"https://api.github.com/users/xsharper/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xsharper/subscriptions","organizations_url":"https://api.github.com/users/xsharper/orgs","repos_url":"https://api.github.com/users/xsharper/repos","events_url":"https://api.github.com/users/xsharper/events{/privacy}","received_events_url":"https://api.github.com/users/xsharper/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-19T18:50:17Z","updated_at":"2024-01-19T18:50:35Z","author_association":"NONE","body":"The issue different though. Encoding is just used to demonstrate it. \r\n\r\nThe problem is that in .NET 4.8 doing some backend processing, that isn't expected to output _anything_ to the console or network, by merely \r\n\r\n`var qp = new MultiFieldQueryParser(LuceneVersion.LUCENE_48, new[] {\"test\"}, std);`\r\n\r\ndoes write to console as a side effect. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1900936947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1900943629","html_url":"https://github.com/apache/lucenenet/issues/888#issuecomment-1900943629","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/888","id":1900943629,"node_id":"IC_kwDOAAJ06c5xThkN","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-19T18:54:12Z","updated_at":"2024-01-19T18:54:12Z","author_association":"CONTRIBUTOR","body":"I am closing because there is no info provided about how to reproduce the issue.\r\n\r\nIt looks like Examine has provided an update to resolve the issue: https://github.com/Shazwazza/Examine/issues/335.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1900943629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1900987007","html_url":"https://github.com/apache/lucenenet/issues/792#issuecomment-1900987007","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/792","id":1900987007,"node_id":"IC_kwDOAAJ06c5xTsJ_","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-19T19:28:14Z","updated_at":"2024-01-19T19:28:14Z","author_association":"CONTRIBUTOR","body":"Gotcha. Yeah, I see that is in our codebase, now.\r\n\r\nThere are a couple of things wrong here. \r\n\r\n1. This doesn't match the Java source, which only writes to `System.out`. \r\n2. We have created a seam for console writing at `Lucene.Net.Util.SystemConsole` that is not being utilized, but it should be.\r\n\r\nSo, you (will) have the ability to redirect the output that is being written in 2 ways:\r\n\r\n1. Replace `Lucene.Net.Util.SystemConsole.Out` with a no-op `TextWriter`.\r\n2. Call `QueryParserTokenManager.SetDebugStream(TextWriter)` with either a no-op `TextWriter` or a `TextWriter` that has already been disposed.\r\n\r\nIn 4.8.0-beta00016 and prior, the only option you have to disable this is option 2.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1900987007/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1900999250","html_url":"https://github.com/apache/lucenenet/issues/792#issuecomment-1900999250","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/792","id":1900999250,"node_id":"IC_kwDOAAJ06c5xTvJS","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-19T19:37:17Z","updated_at":"2024-01-19T19:37:17Z","author_association":"CONTRIBUTOR","body":"Actually, I am a bit puzzled why this is even here. There is nothing else in the file that writes to this field. \r\n\r\nBut if it were set up like the original Lucene code, initializing the variable to a static instance is very cheap and it wouldn't write anything when calling the `Console.Out` getter to set the field. So, there is little downside in reverting back to the original implementation.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1900999250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]