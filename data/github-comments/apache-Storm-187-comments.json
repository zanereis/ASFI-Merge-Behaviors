[{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612878527","html_url":"https://github.com/apache/storm/issues/5427#issuecomment-2612878527","issue_url":"https://api.github.com/repos/apache/storm/issues/5427","id":2612878527,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Nzg1Mjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-02T18:33:36Z","updated_at":"2025-01-24T16:05:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>I merged this into master</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612878527/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191364958","html_url":"https://github.com/apache/storm/pull/1136#issuecomment-191364958","issue_url":"https://api.github.com/repos/apache/storm/issues/1136","id":191364958,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTM2NDk1OA==","user":{"login":"dan-blanchard","id":976345,"node_id":"MDQ6VXNlcjk3NjM0NQ==","avatar_url":"https://avatars.githubusercontent.com/u/976345?v=4","gravatar_id":"","url":"https://api.github.com/users/dan-blanchard","html_url":"https://github.com/dan-blanchard","followers_url":"https://api.github.com/users/dan-blanchard/followers","following_url":"https://api.github.com/users/dan-blanchard/following{/other_user}","gists_url":"https://api.github.com/users/dan-blanchard/gists{/gist_id}","starred_url":"https://api.github.com/users/dan-blanchard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dan-blanchard/subscriptions","organizations_url":"https://api.github.com/users/dan-blanchard/orgs","repos_url":"https://api.github.com/users/dan-blanchard/repos","events_url":"https://api.github.com/users/dan-blanchard/events{/privacy}","received_events_url":"https://api.github.com/users/dan-blanchard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-02T18:38:11Z","updated_at":"2016-03-02T18:38:11Z","author_association":"CONTRIBUTOR","body":"You may want to look at the [Pyleus project's `MessagePackSerializer`](https://github.com/Yelp/pyleus/blob/64036a8d8ccaa656ddebb3dbd1a7dfb40e15a14a/topology_builder/src/main/java/com/yelp/pyleus/serializer/MessagePackSerializer.java), because I know they had to add some things in to handle weird edge cases.  I'm not really familiar enough with implementing custom serializers to recognize why your approach and theirs look rather different.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191364958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612874742","html_url":"https://github.com/apache/storm/issues/5400#issuecomment-2612874742","issue_url":"https://api.github.com/repos/apache/storm/issues/5400","id":2612874742,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzQ3NDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-02T18:38:12Z","updated_at":"2025-01-24T16:03:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dan-blanchard commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1136#issuecomment-191364958\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1136#issuecomment-191364958</a></p>\n\n<p>    You may want to look at the <span class=\"error\">&#91;Pyleus project&#39;s `MessagePackSerializer`&#93;</span>(<a href=\"https://github.com/Yelp/pyleus/blob/64036a8d8ccaa656ddebb3dbd1a7dfb40e15a14a/topology_builder/src/main/java/com/yelp/pyleus/serializer/MessagePackSerializer.java\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/Yelp/pyleus/blob/64036a8d8ccaa656ddebb3dbd1a7dfb40e15a14a/topology_builder/src/main/java/com/yelp/pyleus/serializer/MessagePackSerializer.java</a>), because I know they had to add some things in to handle weird edge cases.  I'm not really familiar enough with implementing custom serializers to recognize why your approach and theirs look rather different.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612874742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191365530","html_url":"https://github.com/apache/storm/pull/1136#issuecomment-191365530","issue_url":"https://api.github.com/repos/apache/storm/issues/1136","id":191365530,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTM2NTUzMA==","user":{"login":"dan-blanchard","id":976345,"node_id":"MDQ6VXNlcjk3NjM0NQ==","avatar_url":"https://avatars.githubusercontent.com/u/976345?v=4","gravatar_id":"","url":"https://api.github.com/users/dan-blanchard","html_url":"https://github.com/dan-blanchard","followers_url":"https://api.github.com/users/dan-blanchard/followers","following_url":"https://api.github.com/users/dan-blanchard/following{/other_user}","gists_url":"https://api.github.com/users/dan-blanchard/gists{/gist_id}","starred_url":"https://api.github.com/users/dan-blanchard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dan-blanchard/subscriptions","organizations_url":"https://api.github.com/users/dan-blanchard/orgs","repos_url":"https://api.github.com/users/dan-blanchard/repos","events_url":"https://api.github.com/users/dan-blanchard/events{/privacy}","received_events_url":"https://api.github.com/users/dan-blanchard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-02T18:39:09Z","updated_at":"2016-03-02T18:39:09Z","author_association":"CONTRIBUTOR","body":"Also, this would be amazing, as I was trying to convince the Pyleus folks to contribute their serializer to Storm anyway in Yelp/pyleus#159.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191365530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612874749","html_url":"https://github.com/apache/storm/issues/5400#issuecomment-2612874749","issue_url":"https://api.github.com/repos/apache/storm/issues/5400","id":2612874749,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzQ3NDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-02T18:39:10Z","updated_at":"2025-01-24T16:03:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dan-blanchard commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1136#issuecomment-191365530\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1136#issuecomment-191365530</a></p>\n\n<p>    Also, this would be amazing, as I was trying to convince the Pyleus folks to contribute their serializer to Storm anyway in Yelp/pyleus#159.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612874749/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700887","html_url":"https://github.com/apache/storm/issues/5304#issuecomment-2612700887","issue_url":"https://api.github.com/repos/apache/storm/issues/5304","id":2612700887,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDA4ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-02T18:41:36Z","updated_at":"2025-01-24T14:44:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1173#discussion_r54769352\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1173#discussion_r54769352</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/security/auth/AbstractSaslServerCallbackHandler.java &#8212;<br/>\n    @@ -0,0 +1,77 @@<br/>\n    +package org.apache.storm.security.auth;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    added</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612874754","html_url":"https://github.com/apache/storm/issues/5400#issuecomment-2612874754","issue_url":"https://api.github.com/repos/apache/storm/issues/5400","id":2612874754,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzQ3NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-02T18:44:45Z","updated_at":"2025-01-24T16:03:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dan-blanchard commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1136#discussion_r54769764\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1136#discussion_r54769764</a></p>\n\n<p>    &#8212; Diff: conf/defaults.yaml &#8212;<br/>\n    @@ -226,7 +226,7 @@ topology.eventlogger.executors: null<br/>\n     topology.tasks: null</p>\n<ol>\n\t<li>maximum amount of time a message has to complete before it's considered failed<br/>\n     topology.message.timeout.secs: 30<br/>\n    -topology.multilang.serializer: \"org.apache.storm.multilang.JsonSerializer\"<br/>\n    +topology.multilang.serializer: \"org.apache.storm.multilang.MessagePackSerializer\"\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ol>\n\n\n<p>    While having the `MessagePackSeriailzer` built-in would be amazing, changing it to the default serializer would break a lot of multi-lang libraries, so I don't think that's a great idea.  Let people opt in.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612874754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700894","html_url":"https://github.com/apache/storm/issues/5304#issuecomment-2612700894","issue_url":"https://api.github.com/repos/apache/storm/issues/5304","id":2612700894,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDA4OTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-02T19:04:26Z","updated_at":"2025-01-24T14:44:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1173#discussion_r54772909\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1173#discussion_r54772909</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainClientCallbackHandler.java &#8212;<br/>\n    @@ -0,0 +1,31 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.security.auth.plain;<br/>\n    +<br/>\n    +import org.apache.storm.security.auth.AbstractSaslClientCallbackHandler;<br/>\n    +<br/>\n    +public class PlainClientCallbackHandler extends AbstractSaslClientCallbackHandler {<br/>\n    +<br/>\n    +    /*<br/>\n    +     * For plain, using constants for a pair of user name and password.<br/>\n    +     */<br/>\n    +    public PlainClientCallbackHandler() {<br/>\n    +_username = USERNAME;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Fixed by using System.getProperty(\"user.name\").</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191399473","html_url":"https://github.com/apache/storm/pull/1131#issuecomment-191399473","issue_url":"https://api.github.com/repos/apache/storm/issues/1131","id":191399473,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTM5OTQ3Mw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-02T19:55:45Z","updated_at":"2016-03-02T19:55:45Z","author_association":"CONTRIBUTOR","body":"@hmcl I went through the code again.  It looks good.  There are a few issues with activate and deactivate and The APIs for KafkaSpoutStream(s) does not seem as clean as I would like it to be.  Especially if this is an API we want to support long term.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191399473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191407577","html_url":"https://github.com/apache/storm/pull/1173#issuecomment-191407577","issue_url":"https://api.github.com/repos/apache/storm/issues/1173","id":191407577,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTQwNzU3Nw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-02T20:16:00Z","updated_at":"2016-03-02T20:16:00Z","author_association":"CONTRIBUTOR","body":"Looks good to me.  The test failures look unrelated to this.  +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191407577/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700902","html_url":"https://github.com/apache/storm/issues/5304#issuecomment-2612700902","issue_url":"https://api.github.com/repos/apache/storm/issues/5304","id":2612700902,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDA5MDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-02T20:16:03Z","updated_at":"2025-01-24T14:44:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1173#issuecomment-191407577\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1173#issuecomment-191407577</a></p>\n\n<p>    Looks good to me.  The test failures look unrelated to this.  +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191419837","html_url":"https://github.com/apache/storm/pull/1173#issuecomment-191419837","issue_url":"https://api.github.com/repos/apache/storm/issues/1173","id":191419837,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTQxOTgzNw==","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-02T20:39:40Z","updated_at":"2016-03-02T20:39:40Z","author_association":"NONE","body":"Seems good to me. +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191419837/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700907","html_url":"https://github.com/apache/storm/issues/5304#issuecomment-2612700907","issue_url":"https://api.github.com/repos/apache/storm/issues/5304","id":2612700907,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDA5MDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-02T20:39:43Z","updated_at":"2025-01-24T14:44:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1173#issuecomment-191419837\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1173#issuecomment-191419837</a></p>\n\n<p>    Seems good to me. +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879026","html_url":"https://github.com/apache/storm/issues/5431#issuecomment-2612879026","issue_url":"https://api.github.com/repos/apache/storm/issues/5431","id":2612879026,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzkwMjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T00:10:32Z","updated_at":"2025-01-24T16:05:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user kishorvpatil opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1177\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1177</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1596\" title=\"Multiple Subject sharing Kerberos TGT - causes services to fail\" class=\"issue-link\" data-issue-key=\"STORM-1596\"><del>STORM-1596</del></a> Do not single Kerberos TGT instance between multiple threads.</p>\n\n<p>    This needs to be ported to 1.x-branch as well. </p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/kishorvpatil/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kishorvpatil/incubator-storm</a> storm1596</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1177.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1177.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1177</p>\n\n<hr />\n<p>commit 2ab6a84eb8715d2e6a4514bf079b8d893f6d15f7<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-02-12T22:39:57Z</p>\n\n<p>    Fixing Kerberos TGT failure issues caused by  sharing single instance by multiple subjects</p>\n\n<p>    Conflicts:<br/>\n    \tstorm-core/src/jvm/backtype/storm/security/auth/AuthUtils.java<br/>\n    \tstorm-core/src/jvm/backtype/storm/security/auth/kerberos/AutoTGT.java<br/>\n    \tstorm-core/src/jvm/backtype/storm/security/auth/kerberos/AutoTGTKrb5LoginModule.java</p>\n\n<p>commit e6e96a53e26f7a41f61bd13e2112fe0a7a1f1e7a<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-02-13T01:08:13Z</p>\n\n<p>    Fixing auto login module tests</p>\n\n<p>    Conflicts:<br/>\n    \tstorm-core/test/clj/backtype/storm/security/auth/auto_login_module_test.clj</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191508435","html_url":"https://github.com/apache/storm/pull/1177#issuecomment-191508435","issue_url":"https://api.github.com/repos/apache/storm/issues/1177","id":191508435,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTUwODQzNQ==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T00:33:57Z","updated_at":"2016-03-03T00:33:57Z","author_association":"CONTRIBUTOR","body":"The Travis CI test failure seems unrelated to this issue.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191508435/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879032","html_url":"https://github.com/apache/storm/issues/5431#issuecomment-2612879032","issue_url":"https://api.github.com/repos/apache/storm/issues/5431","id":2612879032,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzkwMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T00:33:58Z","updated_at":"2025-01-24T16:05:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1177#issuecomment-191508435\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1177#issuecomment-191508435</a></p>\n\n<p>    The Travis CI test failure seems unrelated to this issue.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879032/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612878903","html_url":"https://github.com/apache/storm/issues/5430#issuecomment-2612878903","issue_url":"https://api.github.com/repos/apache/storm/issues/5430","id":2612878903,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Nzg5MDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T04:59:39Z","updated_at":"2025-01-24T16:05:18Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=abhishek.agarwal\">abhishek.agarwal</a>:</i>\n<p>can you tell us the following configurations in your topology</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>topology.message.timeout.secs</li>\n\t<li>topology.tick.tuple.freq.secs</li>\n\t<li>async flag and batch size for kafka bolt</li>\n</ul>\n\n\n<p>My hunch is that with kafka bolt fails a tuple in a callback which takes some time. In this time, init entry is timed out from acker bolt. when fail entry comes to the acker bolt, it will also get timed out eventually. Tuple will be marked failed after `topology.message.timeout.secs` even though the bolt fails it earlier. Though this hypothesis may be invalid if you are not overriding the topology.tick.tuple.freq.secs.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612878903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700910","html_url":"https://github.com/apache/storm/issues/5304#issuecomment-2612700910","issue_url":"https://api.github.com/repos/apache/storm/issues/5304","id":2612700910,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDA5MTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T06:02:41Z","updated_at":"2025-01-24T14:44:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user kishorvpatil opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1178\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1178</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1469\" title=\"Unable to deploy large topologies on apache storm\" class=\"issue-link\" data-issue-key=\"STORM-1469\"><del>STORM-1469</del></a> Remove SimpleTransportPlugin and configuration</p>\n\n<p>    This pull request awaits merging in #1173 </p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/kishorvpatil/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kishorvpatil/incubator-storm</a> storm1469-removeSimple</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1178.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1178.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1178</p>\n\n<hr />\n<p>commit b1e4c94269dbcf2ba01aee89e468c744887c53de<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-02-29T20:44:52Z</p>\n\n<p>    Adding Plain Sasl Transport Plugin</p>\n\n<p>commit cccb9766eb6b01477b44cd35e836997811464632<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-03-02T06:12:57Z</p>\n\n<p>    Refactoring SaslServerCallbackHandler and SaslClientCallbackHandler</p>\n\n<p>commit 4e04ce8dcdc33d488a3d15f7a47ab8af15136db4<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-03-02T16:27:56Z</p>\n\n<p>    Addressing review comments</p>\n\n<p>commit 5e2d44df8c342d29d723ac4ac90d0e1efb6884bb<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-03-02T18:32:00Z</p>\n\n<p>    Using real user-id in the ReqContext instead of username in PlainSaslTransportPlugin</p>\n\n<p>commit 1dbdfb1769979a8391348b5275bfd4bd2a4edf18<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-03-02T18:48:48Z</p>\n\n<p>    Renaming local variable to camelCase</p>\n\n<p>commit b133d52043a5f97c019d796a27ded81523120428<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-03-03T04:46:48Z</p>\n\n<p>    Remove SimpleTransportPlugin and configurations</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700921","html_url":"https://github.com/apache/storm/issues/5304#issuecomment-2612700921","issue_url":"https://api.github.com/repos/apache/storm/issues/5304","id":2612700921,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDA5MjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T06:02:57Z","updated_at":"2025-01-24T14:44:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user kishorvpatil opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1179\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1179</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1469\" title=\"Unable to deploy large topologies on apache storm\" class=\"issue-link\" data-issue-key=\"STORM-1469\"><del>STORM-1469</del></a> Decommissioning SimpleTransportPlugin and configuration</p>\n\n<p>    This pull request awaits merging in #1173 merged into 1.x-branch as well.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/kishorvpatil/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kishorvpatil/incubator-storm</a> storm1469-simpledecom</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1179.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1179.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1179</p>\n\n<hr />\n<p>commit 59b29b218357aaf39ae70e829ad5ff20e0732431<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-03-03T05:36:32Z</p>\n\n<p>    Decommissioning SimpleTransportPlugin</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191596685","html_url":"https://github.com/apache/storm/pull/1173#issuecomment-191596685","issue_url":"https://api.github.com/repos/apache/storm/issues/1173","id":191596685,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTU5NjY4NQ==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T06:04:20Z","updated_at":"2016-03-03T06:04:20Z","author_association":"CONTRIBUTOR","body":"Created two pull requests as follow-up\n\n#1178  Remove SimpleTransportPlugin and configuration and \n#1179 Decommissioning SimpleTransportPlugin and configuration ( on 1.x-branch.)\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191596685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700925","html_url":"https://github.com/apache/storm/issues/5304#issuecomment-2612700925","issue_url":"https://api.github.com/repos/apache/storm/issues/5304","id":2612700925,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDA5MjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T06:04:22Z","updated_at":"2025-01-24T14:44:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1173#issuecomment-191596685\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1173#issuecomment-191596685</a></p>\n\n<p>    Created two pull requests as follow-up</p>\n\n<p>    #1178  Remove SimpleTransportPlugin and configuration and <br/>\n    #1179 Decommissioning SimpleTransportPlugin and configuration ( on 1.x-branch.)</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191792836","html_url":"https://github.com/apache/storm/pull/1177#issuecomment-191792836","issue_url":"https://api.github.com/repos/apache/storm/issues/1177","id":191792836,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTc5MjgzNg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T14:42:44Z","updated_at":"2016-03-03T14:42:44Z","author_association":"CONTRIBUTOR","body":"+1 we might want to look at porting this to 0.10.x also.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191792836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879036","html_url":"https://github.com/apache/storm/issues/5431#issuecomment-2612879036","issue_url":"https://api.github.com/repos/apache/storm/issues/5431","id":2612879036,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzkwMzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T14:42:46Z","updated_at":"2025-01-24T16:05:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1177#issuecomment-191792836\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1177#issuecomment-191792836</a></p>\n\n<p>    +1 we might want to look at porting this to 0.10.x also.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879036/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191805167","html_url":"https://github.com/apache/storm/pull/1176#issuecomment-191805167","issue_url":"https://api.github.com/repos/apache/storm/issues/1176","id":191805167,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTgwNTE2Nw==","user":{"login":"redsanket","id":8295799,"node_id":"MDQ6VXNlcjgyOTU3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8295799?v=4","gravatar_id":"","url":"https://api.github.com/users/redsanket","html_url":"https://github.com/redsanket","followers_url":"https://api.github.com/users/redsanket/followers","following_url":"https://api.github.com/users/redsanket/following{/other_user}","gists_url":"https://api.github.com/users/redsanket/gists{/gist_id}","starred_url":"https://api.github.com/users/redsanket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redsanket/subscriptions","organizations_url":"https://api.github.com/users/redsanket/orgs","repos_url":"https://api.github.com/users/redsanket/repos","events_url":"https://api.github.com/users/redsanket/events{/privacy}","received_events_url":"https://api.github.com/users/redsanket/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T15:07:52Z","updated_at":"2016-03-03T15:07:52Z","author_association":"NONE","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191805167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657249","html_url":"https://github.com/apache/storm/issues/5119#issuecomment-2612657249","issue_url":"https://api.github.com/repos/apache/storm/issues/5119","id":2612657249,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTcyNDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T15:07:53Z","updated_at":"2025-01-24T14:25:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1176#issuecomment-191805167\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1176#issuecomment-191805167</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879042","html_url":"https://github.com/apache/storm/issues/5431#issuecomment-2612879042","issue_url":"https://api.github.com/repos/apache/storm/issues/5431","id":2612879042,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzkwNDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T15:31:56Z","updated_at":"2025-01-24T16:05:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user kishorvpatil opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1180\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1180</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1596\" title=\"Multiple Subject sharing Kerberos TGT - causes services to fail\" class=\"issue-link\" data-issue-key=\"STORM-1596\"><del>STORM-1596</del></a> Do not use single Kerberos TGT instance between multiple threads 0.10x</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/kishorvpatil/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kishorvpatil/incubator-storm</a> storm1598-010x</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1180.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1180.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1180</p>\n\n<hr />\n<p>commit 6d610744873af3f5fc73317516550d07d825e78b<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-02-12T22:39:57Z</p>\n\n<p>    Fixing Kerberos TGT failure issues caused by  sharing single instance by multiple subjects</p>\n\n<p>    Conflicts:<br/>\n    \tstorm-core/src/jvm/backtype/storm/security/auth/AuthUtils.java</p>\n\n<p>commit b8a3af7a6f0964500942e0c5e4a3960b82ebd289<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-02-13T01:08:13Z</p>\n\n<p>    Fixing auto login module tests</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191816371","html_url":"https://github.com/apache/storm/pull/1177#issuecomment-191816371","issue_url":"https://api.github.com/repos/apache/storm/issues/1177","id":191816371,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTgxNjM3MQ==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T15:33:22Z","updated_at":"2016-03-03T15:33:22Z","author_association":"CONTRIBUTOR","body":"Here #1180  is pull request to port these changes to 0.10.x-branch \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191816371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879045","html_url":"https://github.com/apache/storm/issues/5431#issuecomment-2612879045","issue_url":"https://api.github.com/repos/apache/storm/issues/5431","id":2612879045,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzkwNDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T15:33:27Z","updated_at":"2025-01-24T16:05:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1177#issuecomment-191816371\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1177#issuecomment-191816371</a></p>\n\n<p>    Here #1180  is pull request to port these changes to 0.10.x-branch </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191824439","html_url":"https://github.com/apache/storm/pull/1176#issuecomment-191824439","issue_url":"https://api.github.com/repos/apache/storm/issues/1176","id":191824439,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTgyNDQzOQ==","user":{"login":"unsleepy22","id":631361,"node_id":"MDQ6VXNlcjYzMTM2MQ==","avatar_url":"https://avatars.githubusercontent.com/u/631361?v=4","gravatar_id":"","url":"https://api.github.com/users/unsleepy22","html_url":"https://github.com/unsleepy22","followers_url":"https://api.github.com/users/unsleepy22/followers","following_url":"https://api.github.com/users/unsleepy22/following{/other_user}","gists_url":"https://api.github.com/users/unsleepy22/gists{/gist_id}","starred_url":"https://api.github.com/users/unsleepy22/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/unsleepy22/subscriptions","organizations_url":"https://api.github.com/users/unsleepy22/orgs","repos_url":"https://api.github.com/users/unsleepy22/repos","events_url":"https://api.github.com/users/unsleepy22/events{/privacy}","received_events_url":"https://api.github.com/users/unsleepy22/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T15:53:32Z","updated_at":"2016-03-03T15:53:32Z","author_association":"NONE","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191824439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657256","html_url":"https://github.com/apache/storm/issues/5119#issuecomment-2612657256","issue_url":"https://api.github.com/repos/apache/storm/issues/5119","id":2612657256,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTcyNTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T15:53:33Z","updated_at":"2025-01-24T14:25:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user unsleepy22 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1176#issuecomment-191824439\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1176#issuecomment-191824439</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879678","html_url":"https://github.com/apache/storm/issues/5436#issuecomment-2612879678","issue_url":"https://api.github.com/repos/apache/storm/issues/5436","id":2612879678,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Nzk2Nzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T18:34:33Z","updated_at":"2025-01-24T16:05:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user kishorvpatil opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1181\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1181</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1601\" title=\"Cluster-state must check if znode exists before getting children for storm backpressure\" class=\"issue-link\" data-issue-key=\"STORM-1601\"><del>STORM-1601</del></a> Check if /backpressure/storm-id node exists before requesting children</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/kishorvpatil/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kishorvpatil/incubator-storm</a> storm1601</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1181.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1181.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1181</p>\n\n<hr />\n<p>commit 177a4c3ad269855532edc7c00312c7a79e1a4da7<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-03-03T18:32:19Z</p>\n\n<p>    Check if /backpressure/storm-id before requesting children</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879688","html_url":"https://github.com/apache/storm/issues/5436#issuecomment-2612879688","issue_url":"https://api.github.com/repos/apache/storm/issues/5436","id":2612879688,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Nzk2ODg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T18:39:29Z","updated_at":"2025-01-24T16:05:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user kishorvpatil opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1182\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1182</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1601\" title=\"Cluster-state must check if znode exists before getting children for storm backpressure\" class=\"issue-link\" data-issue-key=\"STORM-1601\"><del>STORM-1601</del></a> Check if /backpressure/storm-id znode  exists before requesting children</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/kishorvpatil/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kishorvpatil/incubator-storm</a> storm1601-1.x-branch</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1182.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1182.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1182</p>\n\n<hr />\n<p>commit 4fdb14a0b24ca52ad6a3f4616965e75613472452<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-03-03T18:38:01Z</p>\n\n<p>    Check if /backpressure/storm-id znode  exists before requesting children</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879688/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621059","html_url":"https://github.com/apache/storm/issues/4978#issuecomment-2612621059","issue_url":"https://api.github.com/repos/apache/storm/issues/4978","id":2612621059,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjEwNTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T19:35:38Z","updated_at":"2025-01-24T14:09:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerrypeng\">jerrypeng</a>:</i>\n<p>dup <a href=\"https://issues.apache.org/jira/browse/STORM-1336\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1336</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621059/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621067","html_url":"https://github.com/apache/storm/issues/4978#issuecomment-2612621067","issue_url":"https://api.github.com/repos/apache/storm/issues/4978","id":2612621067,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjEwNjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T19:35:50Z","updated_at":"2025-01-24T14:09:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerrypeng\">jerrypeng</a>:</i>\n<p>dup <a href=\"https://issues.apache.org/jira/browse/STORM-1336\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1336</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621968","html_url":"https://github.com/apache/storm/issues/4984#issuecomment-2612621968","issue_url":"https://api.github.com/repos/apache/storm/issues/4984","id":2612621968,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjE5Njg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T19:37:07Z","updated_at":"2025-01-24T14:10:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerrypeng\">jerrypeng</a>:</i>\n<p>dup <a href=\"https://issues.apache.org/jira/browse/STORM-1336\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1336</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612621968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191929057","html_url":"https://github.com/apache/storm/pull/1180#issuecomment-191929057","issue_url":"https://api.github.com/repos/apache/storm/issues/1180","id":191929057,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTkyOTA1Nw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T19:37:45Z","updated_at":"2016-03-03T19:37:45Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191929057/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879051","html_url":"https://github.com/apache/storm/issues/5431#issuecomment-2612879051","issue_url":"https://api.github.com/repos/apache/storm/issues/5431","id":2612879051,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzkwNTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T19:37:46Z","updated_at":"2025-01-24T16:05:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1180#issuecomment-191929057\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1180#issuecomment-191929057</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191929292","html_url":"https://github.com/apache/storm/pull/1180#issuecomment-191929292","issue_url":"https://api.github.com/repos/apache/storm/issues/1180","id":191929292,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTkyOTI5Mg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T19:38:30Z","updated_at":"2016-03-03T19:38:30Z","author_association":"CONTRIBUTOR","body":"The code looks more or less identical to #1177 except for the java package names so I think I can merge it in now.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191929292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879054","html_url":"https://github.com/apache/storm/issues/5431#issuecomment-2612879054","issue_url":"https://api.github.com/repos/apache/storm/issues/5431","id":2612879054,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzkwNTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T19:38:31Z","updated_at":"2025-01-24T16:05:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1180#issuecomment-191929292\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1180#issuecomment-191929292</a></p>\n\n<p>    The code looks more or less identical to #1177 except for the java package names so I think I can merge it in now.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879064","html_url":"https://github.com/apache/storm/issues/5431#issuecomment-2612879064","issue_url":"https://api.github.com/repos/apache/storm/issues/5431","id":2612879064,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzkwNjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T20:25:03Z","updated_at":"2025-01-24T16:05:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1177\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1177</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879064/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879066","html_url":"https://github.com/apache/storm/issues/5431#issuecomment-2612879066","issue_url":"https://api.github.com/repos/apache/storm/issues/5431","id":2612879066,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzkwNjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T20:26:02Z","updated_at":"2025-01-24T16:05:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1180\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1180</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879073","html_url":"https://github.com/apache/storm/issues/5431#issuecomment-2612879073","issue_url":"https://api.github.com/repos/apache/storm/issues/5431","id":2612879073,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzkwNzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T20:27:15Z","updated_at":"2025-01-24T16:05:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kishorvpatil\" class=\"user-hover\" rel=\"kishorvpatil\">Kishor Patil</a>,</p>\n\n<p>I merged this into master, 1.x and 0.10.x</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191949144","html_url":"https://github.com/apache/storm/pull/1179#issuecomment-191949144","issue_url":"https://api.github.com/repos/apache/storm/issues/1179","id":191949144,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTk0OTE0NA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T20:28:43Z","updated_at":"2016-03-03T20:28:43Z","author_association":"CONTRIBUTOR","body":"+1 not sure why travis failed.  Didn't even try to build in most cases.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191949144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700927","html_url":"https://github.com/apache/storm/issues/5304#issuecomment-2612700927","issue_url":"https://api.github.com/repos/apache/storm/issues/5304","id":2612700927,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDA5Mjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T20:28:44Z","updated_at":"2025-01-24T14:44:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1179#issuecomment-191949144\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1179#issuecomment-191949144</a></p>\n\n<p>    +1 not sure why travis failed.  Didn't even try to build in most cases.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700927/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191949380","html_url":"https://github.com/apache/storm/pull/1178#issuecomment-191949380","issue_url":"https://api.github.com/repos/apache/storm/issues/1178","id":191949380,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTk0OTM4MA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T20:29:29Z","updated_at":"2016-03-03T20:29:29Z","author_association":"CONTRIBUTOR","body":"Please rebase\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191949380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700934","html_url":"https://github.com/apache/storm/issues/5304#issuecomment-2612700934","issue_url":"https://api.github.com/repos/apache/storm/issues/5304","id":2612700934,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDA5MzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T20:29:30Z","updated_at":"2025-01-24T14:44:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1178#issuecomment-191949380\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1178#issuecomment-191949380</a></p>\n\n<p>    Please rebase</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648377","html_url":"https://github.com/apache/storm/issues/5089#issuecomment-2612648377","issue_url":"https://api.github.com/repos/apache/storm/issues/5089","id":2612648377,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDgzNzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T21:12:11Z","updated_at":"2025-01-24T14:21:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1147#discussion_r54949004\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1147#discussion_r54949004</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/stats/BoltExecutorStats.java &#8212;<br/>\n    @@ -0,0 +1,107 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.stats;<br/>\n    +<br/>\n    +import clojure.lang.PersistentVector;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.Map;<br/>\n    +import org.apache.storm.metric.internal.MultiCountStatAndMetric;<br/>\n    +import org.apache.storm.metric.internal.MultiLatencyStatAndMetric;<br/>\n    +<br/>\n    +@SuppressWarnings(\"unchecked\")<br/>\n    +public class BoltExecutorStats extends CommonStats {<br/>\n    +<br/>\n    +    public static final String ACKED = \"acked\";<br/>\n    +    public static final String FAILED = \"failed\";<br/>\n    +    public static final String EXECUTED = \"executed\";<br/>\n    +    public static final String PROCESS_LATENCIES = \"process-latencies\";<br/>\n    +    public static final String EXECUTE_LATENCIES = \"execute-latencies\";<br/>\n    +<br/>\n    +    public static final String[] BOLT_FIELDS = </p>\n{ACKED, FAILED, EXECUTED, PROCESS_LATENCIES, EXECUTE_LATENCIES}\n<p>;<br/>\n    +<br/>\n    +    public BoltExecutorStats() </p>\n{\n    +super();\n    +\n    +put(ACKED, new MultiCountStatAndMetric(NUM_STAT_BUCKETS));\n    +put(FAILED, new MultiCountStatAndMetric(NUM_STAT_BUCKETS));\n    +put(EXECUTED, new MultiCountStatAndMetric(NUM_STAT_BUCKETS));\n    +put(PROCESS_LATENCIES, new MultiLatencyStatAndMetric(NUM_STAT_BUCKETS));\n    +put(EXECUTE_LATENCIES, new MultiLatencyStatAndMetric(NUM_STAT_BUCKETS));\n    +    }\n<p>    +<br/>\n    +    public MultiCountStatAndMetric getAcked() </p>\n{\n    +return (MultiCountStatAndMetric) this.get(ACKED);\n    +    }\n<p>    +<br/>\n    +    public MultiCountStatAndMetric getFailed() </p>\n{\n    +return (MultiCountStatAndMetric) this.get(FAILED);\n    +    }\n<p>    +<br/>\n    +    public MultiCountStatAndMetric getExecuted() </p>\n{\n    +return (MultiCountStatAndMetric) this.get(EXECUTED);\n    +    }\n<p>    +<br/>\n    +    public MultiLatencyStatAndMetric getProcessLatencies() </p>\n{\n    +return (MultiLatencyStatAndMetric) this.get(PROCESS_LATENCIES);\n    +    }\n<p>    +<br/>\n    +    public MultiLatencyStatAndMetric getExecuteLatencies() </p>\n{\n    +return (MultiLatencyStatAndMetric) this.get(EXECUTE_LATENCIES);\n    +    }\n<p>    +<br/>\n    +    public void boltExecuteTuple(String component, String stream, long latencyMs) </p>\n{\n    +Object key = PersistentVector.create(component, stream);\n    +this.getExecuted().incBy(key, this.rate);\n    +this.getExecuteLatencies().record(key, latencyMs);\n    +    }\n<p>    +<br/>\n    +    public void boltAckedTuple(String component, String stream, long latencyMs) </p>\n{\n    +Object key = PersistentVector.create(component, stream);\n    +this.getAcked().incBy(key, this.rate);\n    +this.getProcessLatencies().record(key, latencyMs);\n    +    }\n<p>    +<br/>\n    +    public void boltFailedTuple(String component, String stream, long latencyMs) </p>\n{\n    +Object key = PersistentVector.create(component, stream);\n    +this.getFailed().incBy(key, this.rate);\n    +\n    +    }\n<p>    +<br/>\n    +    public Map renderStats() {<br/>\n    +cleanupStats();<br/>\n    +Map ret = new HashMap();<br/>\n    +ret.putAll(valueStats(CommonStats.COMMON_FIELDS));<br/>\n    +ret.putAll(valueStats(BoltExecutorStats.BOLT_FIELDS));<br/>\n    +StatsUtil.putRawKV(ret, StatsUtil.TYPE, StatsUtil.KW_BOLT);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    `CommonStats.renderStats` (this function) was originally `stats/render-stats!` it is only called from executor.clj as the implementation of the `render-stats` method in an instance of `RunningExecutor` that it creates.</p>\n\n<p>    <a href=\"https://github.com/apache/storm/blob/cc1f6d77962ec96c69cf5af85e4016a9e08ccdcc/storm-core/src/clj/org/apache/storm/daemon/executor.clj#L408-L409\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/cc1f6d77962ec96c69cf5af85e4016a9e08ccdcc/storm-core/src/clj/org/apache/storm/daemon/executor.clj#L408-L409</a></p>\n\n<p>    This in turn is only called by the `do-executor-heartbeat` function in worker.clj</p>\n\n<p>    <a href=\"https://github.com/apache/storm/blob/cc1f6d77962ec96c69cf5af85e4016a9e08ccdcc/storm-core/src/clj/org/apache/storm/daemon/worker.clj#L65-L81\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/cc1f6d77962ec96c69cf5af85e4016a9e08ccdcc/storm-core/src/clj/org/apache/storm/daemon/worker.clj#L65-L81</a></p>\n\n<p>    The code there takes all of the executors from the worker calls `render-stats` on them, puts them into a map with the key being the executor id and adds that map into `zk-hb` under the `:executor-stats` keyword.</p>\n\n<p>    `zk-hb` is passed into `thriftify-zk-worker-hb` which pulls out `:executor-stats` filters out any executor that does not have stats and passes it to `thriftify-stats`</p>\n\n<p>    <a href=\"https://github.com/apache/storm/blob/cc1f6d77962ec96c69cf5af85e4016a9e08ccdcc/storm-core/src/clj/org/apache/storm/converter.clj#L255\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/cc1f6d77962ec96c69cf5af85e4016a9e08ccdcc/storm-core/src/clj/org/apache/storm/converter.clj#L255</a></p>\n\n<p>    which turns the map keys into `ExecutorInfo` instances and the map values into `ExecutorStats` instances. </p>\n\n<p>    Why go to a clojure specific data structure that no one reads except to turn it into the java class we actually care about.</p>\n\n<p>    If we modify `renderStats` to return an `ExecutorStats` instance.  Then modify `thriftify-stats` to not modify the values in the map, just the keys, we should be good to go.  We will also need to update nimbus_test.clj because it too calls into `thriftify-zk-worker-hb` in a test.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/191986179","html_url":"https://github.com/apache/storm/pull/1147#issuecomment-191986179","issue_url":"https://api.github.com/repos/apache/storm/issues/1147","id":191986179,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MTk4NjE3OQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T22:04:07Z","updated_at":"2016-03-03T22:04:07Z","author_association":"CONTRIBUTOR","body":"I am going through StatsUtil.java and it is more of the same thing everywhere.  The code is a literal translation of the clojure code.  The input APIs in most cases are clojure specific, but many of these functions actually return thrift object already.  For example `stats/agg-comp-execs-stats` returns an instance of `ComponentPageInfo`.  I would prefer to see us have a shim that will translate the clojure maps, etc into java objects that would be a better java API/state when we translate the clojure code that is calling into it.\n\nFor example \n\n```\n(defn agg-comp-execs-stats\n  \"Aggregate various executor statistics for a component from the given\n  heartbeats.\"\n  [exec->host+port\n   task->component\n   beats\n   window\n   include-sys?\n   topology-id\n   topology\n   component-id]\n\n```\n\nwas translated into\n\n```\npublic static TopologyPageInfo aggTopoExecsStats(\n  String topologyId,\n  Map exec2nodePort,\n  Map task2component,\n  Map beats,\n  StormTopology topology,\n  String window,\n  boolean includeSys,\n  IStormClusterState clusterState);\n```\n\nbut if we expand the signature a bit more it really looks like\n\n```\npublic static TopologyPageInfo aggTopoExecsStats(\n  String topologyId,\n  Map<List<Number>/*low exec, high exec*/,List<Object>/*String host, Number port*/ > exec2nodePort,\n  Map<Integer, String> task2component,\n  Map beats<List<Number>/*low exec, high exec*/, Map<Keyword, Object>/*Clojure map keys :stats, :uptime, :time-secs, good luck*/ >,\n  StormTopology topology,\n  String window,\n  boolean includeSys,\n  IStormClusterState clusterState);\n\n```\n\nIf we want a more java like API with classes instead of maps/Lists it should probably be something more like\n\n```\npublic class HostPort {\n    public final String host;\n    public final int port;\n    ...\n};\n\npublic static TopologyPageInfo aggTopoExecsStats(\n    String topologyId, \n    Map<ExecutorInfo, HostPort> exec2nodePort,\n    Map<Integer, String> task2component,\n    Map beats<ExecutorInfo, ExecutorBeat>, \n    StormTopology topology,\n    String window,\n    boolean includeSys,\n    IStormClusterState clusterState);\n```\n\nAll of the public facing APIs need this type of a translation to happen.  If you want me to go through all of them and list what I think they should be I can.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/191986179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648382","html_url":"https://github.com/apache/storm/issues/5089#issuecomment-2612648382","issue_url":"https://api.github.com/repos/apache/storm/issues/5089","id":2612648382,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDgzODI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-03T22:04:08Z","updated_at":"2025-01-24T14:21:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1147#issuecomment-191986179\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1147#issuecomment-191986179</a></p>\n\n<p>    I am going through StatsUtil.java and it is more of the same thing everywhere.  The code is a literal translation of the clojure code.  The input APIs in most cases are clojure specific, but many of these functions actually return thrift object already.  For example `stats/agg-comp-execs-stats` returns an instance of `ComponentPageInfo`.  I would prefer to see us have a shim that will translate the clojure maps, etc into java objects that would be a better java API/state when we translate the clojure code that is calling into it.</p>\n\n<p>    For example <br/>\n    ```<br/>\n    (defn agg-comp-execs-stats<br/>\n      \"Aggregate various executor statistics for a component from the given<br/>\n      heartbeats.\"<br/>\n      [exec->host+port<br/>\n       task->component<br/>\n       beats<br/>\n       window<br/>\n       include-sys?<br/>\n       topology-id<br/>\n       topology<br/>\n       component-id]</p>\n\n<p>    ```</p>\n\n<p>    was translated into</p>\n\n<p>    ```<br/>\n    public static TopologyPageInfo aggTopoExecsStats(<br/>\n      String topologyId,<br/>\n      Map exec2nodePort,<br/>\n      Map task2component,<br/>\n      Map beats,<br/>\n      StormTopology topology,<br/>\n      String window,<br/>\n      boolean includeSys,<br/>\n      IStormClusterState clusterState);<br/>\n    ```</p>\n\n<p>    but if we expand the signature a bit more it really looks like</p>\n\n<p>    ```<br/>\n    public static TopologyPageInfo aggTopoExecsStats(<br/>\n      String topologyId,<br/>\n      Map<List<Number>/<b>low exec, high exec</b>/,List<Object>/<b>String host, Number port</b>/ > exec2nodePort,<br/>\n      Map<Integer, String> task2component,<br/>\n      Map beats<List<Number>/<b>low exec, high exec</b>/, Map<Keyword, Object>/<b>Clojure map keys :stats, :uptime, :time-secs, good luck</b>/ >,<br/>\n      StormTopology topology,<br/>\n      String window,<br/>\n      boolean includeSys,<br/>\n      IStormClusterState clusterState);</p>\n\n<p>    ```</p>\n\n<p>    If we want a more java like API with classes instead of maps/Lists it should probably be something more like</p>\n\n<p>    ```<br/>\n    public class HostPort </p>\n{\npublic final String host;\npublic final int port;\n...\n    }\n<p>;</p>\n\n<p>    public static TopologyPageInfo aggTopoExecsStats(<br/>\nString topologyId, <br/>\nMap<ExecutorInfo, HostPort> exec2nodePort,<br/>\nMap<Integer, String> task2component,<br/>\nMap beats<ExecutorInfo, ExecutorBeat>, <br/>\nStormTopology topology,<br/>\nString window,<br/>\nboolean includeSys,<br/>\nIStormClusterState clusterState);<br/>\n    ```</p>\n\n<p>    All of the public facing APIs need this type of a translation to happen.  If you want me to go through all of them and list what I think they should be I can.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879847","html_url":"https://github.com/apache/storm/issues/5437#issuecomment-2612879847","issue_url":"https://api.github.com/repos/apache/storm/issues/5437","id":2612879847,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Nzk4NDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T00:34:15Z","updated_at":"2025-01-24T16:05:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Actually <a href=\"https://issues.apache.org/jira/browse/STORM-1378\" title=\"Windows File Handling Issues with Blobstore\" class=\"issue-link\" data-issue-key=\"STORM-1378\"><del>STORM-1378</del></a> shouldn't be closed.<br/>\nIn <a href=\"https://issues.apache.org/jira/browse/STORM-1378\" title=\"Windows File Handling Issues with Blobstore\" class=\"issue-link\" data-issue-key=\"STORM-1378\"><del>STORM-1378</del></a>, <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ashnazg\" class=\"user-hover\" rel=\"ashnazg\">Chuck Burgess</a> said he only address file path delimeter and can't handle other error messages.<br/>\nAnd I can see that error messages again.</p>\n\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=redsanket\" class=\"user-hover\" rel=\"redsanket\">Sanket Chintapalli</a> Could we fix this before releasing Storm 1.0.0, or we need to discuss about dropping support for Windows starting at 1.0.0?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700942","html_url":"https://github.com/apache/storm/issues/5304#issuecomment-2612700942","issue_url":"https://api.github.com/repos/apache/storm/issues/5304","id":2612700942,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDA5NDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T00:45:12Z","updated_at":"2025-01-24T14:44:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1179\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1179</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700949","html_url":"https://github.com/apache/storm/issues/5304#issuecomment-2612700949","issue_url":"https://api.github.com/repos/apache/storm/issues/5304","id":2612700949,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDA5NDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T00:45:12Z","updated_at":"2025-01-24T14:44:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user kishorvpatil reopened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1179\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1179</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1469\" title=\"Unable to deploy large topologies on apache storm\" class=\"issue-link\" data-issue-key=\"STORM-1469\"><del>STORM-1469</del></a> Decommissioning SimpleTransportPlugin and configuration</p>\n\n<p>    This pull request awaits merging in #1173 merged into 1.x-branch as well.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/kishorvpatil/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kishorvpatil/incubator-storm</a> storm1469-simpledecom</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1179.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1179.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1179</p>\n\n<hr />\n<p>commit 59b29b218357aaf39ae70e829ad5ff20e0732431<br/>\nAuthor: Kishor Patil <kpatil@yahoo-inc.com><br/>\nDate:   2016-03-03T05:36:32Z</p>\n\n<p>    Decommissioning SimpleTransportPlugin</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612700949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612880148","html_url":"https://github.com/apache/storm/issues/5438#issuecomment-2612880148","issue_url":"https://api.github.com/repos/apache/storm/issues/5438","id":2612880148,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODAxNDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T03:46:19Z","updated_at":"2025-01-24T16:05:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user HeartSaVioR opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1183\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1183</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1603\" title=\"Storm UT fails on supervisor test in Windows (0.10.x)\" class=\"issue-link\" data-issue-key=\"STORM-1603\"><del>STORM-1603</del></a> Storm UT fails on supervisor test in Windows</p>\n\n<ul>\n\t<li>supervisor UTs seem not handle file path delimeter properly</li>\n\t<li>due to absolute-storm-local-dir, we should care Windows specific</li>\n\t<li>if worker dir path is relative and storm.home is empty, path will be invalid</li>\n</ul>\n\n\n<p>    I think it would affect 1.x and even master, but other tests disturb me verifying test result of supervisor-test.<br/>\n    For example, blobstore UTs are failed on Windows, and it even makes other UTs crashed (so that running test is stopped at the moment).</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/HeartSaVioR/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/HeartSaVioR/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1603\" title=\"Storm UT fails on supervisor test in Windows (0.10.x)\" class=\"issue-link\" data-issue-key=\"STORM-1603\"><del>STORM-1603</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1183.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1183.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1183</p>\n\n<hr />\n<p>commit 1b6e91ecaf1804fed718c2997f7c82b8c3738b99<br/>\nAuthor: Jungtaek Lim <kabhwan@gmail.com><br/>\nDate:   2016-03-04T03:40:27Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1603\" title=\"Storm UT fails on supervisor test in Windows (0.10.x)\" class=\"issue-link\" data-issue-key=\"STORM-1603\"><del>STORM-1603</del></a> Storm UT fails on supervisor test in Windows</p>\n\n<ul>\n\t<li>supervisor UTs seem not handle file path delimeter properly</li>\n\t<li>due to absolute-storm-local-dir, we should care Windows specific</li>\n\t<li>if worker dir path is relative and storm.home is empty, path will be invalid</li>\n</ul>\n\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612880148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612880152","html_url":"https://github.com/apache/storm/issues/5438#issuecomment-2612880152","issue_url":"https://api.github.com/repos/apache/storm/issues/5438","id":2612880152,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODAxNTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T05:14:13Z","updated_at":"2025-01-24T16:05:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1183#discussion_r54991044\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1183#discussion_r54991044</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/backtype/storm/supervisor_test.clj &#8212;<br/>\n    @@ -261,8 +260,8 @@<br/>\n     (str \"-Dstorm.id=\" mock-storm-id)<br/>\n     (str \"-Dworker.id=\" mock-worker-id)<br/>\n     (str \"-Dworker.port=\" mock-port)</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>\"-Dstorm.log.dir=/logs\"</li>\n\t<li>\"-Dlog4j.configurationFile=/log4j2/worker.xml\"<br/>\n    +(str \"-Dstorm.log.dir=\" file-path-separator \"logs\")<br/>\n    +(str \"-Dlog4j.configurationFile=\" file-path-separator \"log4j2\" file-path-separator \"worker.xml\")\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I think you maybe need  fix -Dlog4j.configurationFile as supervisor.clj’s:</p>\n\n<p>      log4j-configuration-file (str (if (.startsWith (System/getProperty \"os.name\") \"Windows\")<br/>\n      (if (.startsWith storm-log4j2-conf-dir \"file:\")<br/>\nstorm-log4j2-conf-dir<br/>\n(str \"file:///\" storm-log4j2-conf-dir))<br/>\n      storm-log4j2-conf-dir)<br/>\n Utils/FILE_PATH_SEPARATOR \"worker.xml\")</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612880152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/192108715","html_url":"https://github.com/apache/storm/pull/1182#issuecomment-192108715","issue_url":"https://api.github.com/repos/apache/storm/issues/1182","id":192108715,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjEwODcxNQ==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T05:15:20Z","updated_at":"2016-03-04T05:15:20Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/192108715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879692","html_url":"https://github.com/apache/storm/issues/5436#issuecomment-2612879692","issue_url":"https://api.github.com/repos/apache/storm/issues/5436","id":2612879692,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Nzk2OTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T05:15:21Z","updated_at":"2025-01-24T16:05:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1182#issuecomment-192108715\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1182#issuecomment-192108715</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879692/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/192109179","html_url":"https://github.com/apache/storm/pull/1176#issuecomment-192109179","issue_url":"https://api.github.com/repos/apache/storm/issues/1176","id":192109179,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjEwOTE3OQ==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T05:18:04Z","updated_at":"2016-03-04T05:18:04Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/192109179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657261","html_url":"https://github.com/apache/storm/issues/5119#issuecomment-2612657261","issue_url":"https://api.github.com/repos/apache/storm/issues/5119","id":2612657261,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTcyNjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T05:18:05Z","updated_at":"2025-01-24T14:25:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1176#issuecomment-192109179\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1176#issuecomment-192109179</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/192110556","html_url":"https://github.com/apache/storm/pull/1171#issuecomment-192110556","issue_url":"https://api.github.com/repos/apache/storm/issues/1171","id":192110556,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjExMDU1Ng==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T05:26:10Z","updated_at":"2016-03-04T05:26:10Z","author_association":"CONTRIBUTOR","body":"@unsleepy22  thank you +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/192110556/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612878244","html_url":"https://github.com/apache/storm/issues/5425#issuecomment-2612878244","issue_url":"https://api.github.com/repos/apache/storm/issues/5425","id":2612878244,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzgyNDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T05:26:11Z","updated_at":"2025-01-24T16:05:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1171#issuecomment-192110556\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1171#issuecomment-192110556</a></p>\n\n<p>    @unsleepy22  thank you +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612878244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/192118347","html_url":"https://github.com/apache/storm/pull/1184#issuecomment-192118347","issue_url":"https://api.github.com/repos/apache/storm/issues/1184","id":192118347,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjExODM0Nw==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T05:48:08Z","updated_at":"2016-03-06T11:45:54Z","author_association":"CONTRIBUTOR","body":" I did some manual testing and things look good. I hope everyone can review it and give me some suggests. With my pleassure!\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/192118347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612699506","html_url":"https://github.com/apache/storm/issues/5298#issuecomment-2612699506","issue_url":"https://api.github.com/repos/apache/storm/issues/5298","id":2612699506,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTk1MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T07:35:39Z","updated_at":"2025-01-24T14:44:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>FYI: pull request is here - <a href=\"https://github.com/apache/storm/pull/1004\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1004</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612699506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647238","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612647238","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612647238,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDcyMzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T07:37:13Z","updated_at":"2025-01-24T14:21:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=basti.lj\">basti.lj</a>:</i>\n<p>Please refer to PR.  <a href=\"https://github.com/apache/storm/pull/1069\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647238/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612880156","html_url":"https://github.com/apache/storm/issues/5438#issuecomment-2612880156","issue_url":"https://api.github.com/repos/apache/storm/issues/5438","id":2612880156,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODAxNTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T07:47:50Z","updated_at":"2025-01-24T16:05:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1183#discussion_r54999493\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1183#discussion_r54999493</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/backtype/storm/supervisor_test.clj &#8212;<br/>\n    @@ -261,8 +260,8 @@<br/>\n     (str \"-Dstorm.id=\" mock-storm-id)<br/>\n     (str \"-Dworker.id=\" mock-worker-id)<br/>\n     (str \"-Dworker.port=\" mock-port)</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>\"-Dstorm.log.dir=/logs\"</li>\n\t<li>\"-Dlog4j.configurationFile=/log4j2/worker.xml\"<br/>\n    +(str \"-Dstorm.log.dir=\" file-path-separator \"logs\")<br/>\n    +(str \"-Dlog4j.configurationFile=\" file-path-separator \"log4j2\" file-path-separator \"worker.xml\")\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    @hustfxj <br/>\n    <a href=\"https://issues.apache.org/jira/browse/STORM-1463\" title=\"log4j dir uri should always have file schema\" class=\"issue-link\" data-issue-key=\"STORM-1463\"><del>STORM-1463</del></a> is merged into master (2.x) and 1.x, and this pull request is for 0.10.x.<br/>\n    While this PR can still make unit tests succeed, we may want to backport <a href=\"https://issues.apache.org/jira/browse/STORM-1463\" title=\"log4j dir uri should always have file schema\" class=\"issue-link\" data-issue-key=\"STORM-1463\"><del>STORM-1463</del></a> to 0.10.x-branch and reflect change to supervisor_test.clj.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612880156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612880160","html_url":"https://github.com/apache/storm/issues/5438#issuecomment-2612880160","issue_url":"https://api.github.com/repos/apache/storm/issues/5438","id":2612880160,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODAxNjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T08:03:16Z","updated_at":"2025-01-24T16:05:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1183#discussion_r55000427\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1183#discussion_r55000427</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/backtype/storm/supervisor_test.clj &#8212;<br/>\n    @@ -261,8 +260,8 @@<br/>\n     (str \"-Dstorm.id=\" mock-storm-id)<br/>\n     (str \"-Dworker.id=\" mock-worker-id)<br/>\n     (str \"-Dworker.port=\" mock-port)</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>\"-Dstorm.log.dir=/logs\"</li>\n\t<li>\"-Dlog4j.configurationFile=/log4j2/worker.xml\"<br/>\n    +(str \"-Dstorm.log.dir=\" file-path-separator \"logs\")<br/>\n    +(str \"-Dlog4j.configurationFile=\" file-path-separator \"log4j2\" file-path-separator \"worker.xml\")\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Seems like there're many pull requests regarding log4j configuration applied without backporting to 0.10.x. <a href=\"https://issues.apache.org/jira/browse/STORM-1463\" title=\"log4j dir uri should always have file schema\" class=\"issue-link\" data-issue-key=\"STORM-1463\"><del>STORM-1463</del></a> is just one of these.</p>\n\n<p>    I'm wondering we would want to find whole of things and backport to 0.10.x. If we don't want, this PR is just good to go for 0.10.x, and I'll create pull request for 1.x and master.</p>\n\n<p>    What do you think?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612880160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651845","html_url":"https://github.com/apache/storm/issues/5106#issuecomment-2612651845","issue_url":"https://api.github.com/repos/apache/storm/issues/5106","id":2612651845,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTE4NDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T08:11:41Z","updated_at":"2025-01-24T14:23:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user bastiliu opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1185\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1185</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1269\" title=\"port backtype.storm.daemon.common to java\" class=\"issue-link\" data-issue-key=\"STORM-1269\"><del>STORM-1269</del></a> port backtype.storm.daemon.common to java</p>\n\n<p>    1. Following clojure defined records in common, \"Assignment, StormBase, SupervisorInfo, ExecutorStats\", were not migrated here. There are corresponding classes of Thrift. So, we can just use the thrift class in the dependency modules after each module's migration.<br/>\n    2. worker-context was not migrated. There is much more worker to convert the worker data between java and clojure now. But it is easy to do this after the worker data is migrated to java. So I recommend to leave the mirgation of worker context as a part of  worker module.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/bastiliu/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/bastiliu/storm</a> master</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1185.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1185.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1185</p>\n\n<hr />\n<p>commit c7241a67c23899ebb3d6c25cdccde758efb7a0ad<br/>\nAuthor: basti.lj <basti.lj@alibaba-inc.com><br/>\nDate:   2016-03-04T07:16:59Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1269\" title=\"port backtype.storm.daemon.common to java\" class=\"issue-link\" data-issue-key=\"STORM-1269\"><del>STORM-1269</del></a> port backtype.storm.daemon.common to java</p>\n\n<p>commit 0726c116ebd2ef27b5225027bdf3008e6156018d<br/>\nAuthor: basti.lj <basti.lj@alibaba-inc.com><br/>\nDate:   2016-03-04T07:18:28Z</p>\n\n<p>    Merge remote-tracking branch 'upstream/master'</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651845/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612880168","html_url":"https://github.com/apache/storm/issues/5438#issuecomment-2612880168","issue_url":"https://api.github.com/repos/apache/storm/issues/5438","id":2612880168,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODAxNjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T08:24:58Z","updated_at":"2025-01-24T16:05:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1183#discussion_r55001806\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1183#discussion_r55001806</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/backtype/storm/supervisor_test.clj &#8212;<br/>\n    @@ -261,8 +260,8 @@<br/>\n     (str \"-Dstorm.id=\" mock-storm-id)<br/>\n     (str \"-Dworker.id=\" mock-worker-id)<br/>\n     (str \"-Dworker.port=\" mock-port)</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>\"-Dstorm.log.dir=/logs\"</li>\n\t<li>\"-Dlog4j.configurationFile=/log4j2/worker.xml\"<br/>\n    +(str \"-Dstorm.log.dir=\" file-path-separator \"logs\")<br/>\n    +(str \"-Dlog4j.configurationFile=\" file-path-separator \"log4j2\" file-path-separator \"worker.xml\")\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    @HeartSaVioR  sorry, I didn't see <a href=\"https://issues.apache.org/jira/browse/STORM-1463\" title=\"log4j dir uri should always have file schema\" class=\"issue-link\" data-issue-key=\"STORM-1463\"><del>STORM-1463</del></a> before.  I think we should find whole of things and fix it.  Thank you @HeartSaVioR </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612880168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651854","html_url":"https://github.com/apache/storm/issues/5106#issuecomment-2612651854","issue_url":"https://api.github.com/repos/apache/storm/issues/5106","id":2612651854,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTE4NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T08:30:00Z","updated_at":"2025-01-24T14:23:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1185#discussion_r55002193\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1185#discussion_r55002193</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/Utils.java &#8212;<br/>\n    @@ -2302,4 +2302,54 @@ public Object call() {<br/>\n public static long bitXor(Long a, Long b) </p>\n{\n     return a ^ b;\n }\n<p>    +<br/>\n    +    public static Integer parseInt(Object o) {<br/>\n    +if (o == null) </p>\n{\n    +    return null;\n    +}\n<p>    +<br/>\n    +if (o instanceof String) </p>\n{\n    +    return Integer.parseInt(String.valueOf(o));\n    +}\n<p> else if (o instanceof Long) </p>\n{\n    +    long value = (Long) o;\n    +    return (int) value;\n    +}\n<p> else if (o instanceof Integer) </p>\n{\n    +    return (Integer) o;\n    +}\n<p> else </p>\n{\n    +    throw new RuntimeException(\"Invalid value \" + o.getClass().getName() + \" \" + o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static Integer parseInt(Object o, int defaultValue) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Utils has the methods . The name is getInt()</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651856","html_url":"https://github.com/apache/storm/issues/5106#issuecomment-2612651856","issue_url":"https://api.github.com/repos/apache/storm/issues/5106","id":2612651856,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTE4NTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T09:11:34Z","updated_at":"2025-01-24T14:23:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user bastiliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1185#discussion_r55005929\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1185#discussion_r55005929</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/Utils.java &#8212;<br/>\n    @@ -2302,4 +2302,54 @@ public Object call() {<br/>\n public static long bitXor(Long a, Long b) </p>\n{\n     return a ^ b;\n }\n<p>    +<br/>\n    +    public static Integer parseInt(Object o) {<br/>\n    +if (o == null) </p>\n{\n    +    return null;\n    +}\n<p>    +<br/>\n    +if (o instanceof String) </p>\n{\n    +    return Integer.parseInt(String.valueOf(o));\n    +}\n<p> else if (o instanceof Long) </p>\n{\n    +    long value = (Long) o;\n    +    return (int) value;\n    +}\n<p> else if (o instanceof Integer) </p>\n{\n    +    return (Integer) o;\n    +}\n<p> else </p>\n{\n    +    throw new RuntimeException(\"Invalid value \" + o.getClass().getName() + \" \" + o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static Integer parseInt(Object o, int defaultValue) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Addressed</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651858","html_url":"https://github.com/apache/storm/issues/5106#issuecomment-2612651858","issue_url":"https://api.github.com/repos/apache/storm/issues/5106","id":2612651858,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTE4NTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T09:22:44Z","updated_at":"2025-01-24T14:23:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1185#discussion_r55006975\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1185#discussion_r55006975</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/StormCommon.java &#8212;<br/>\n    @@ -0,0 +1,605 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import com.codahale.metrics.MetricRegistry;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.Constants;<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.cluster.IStormClusterState;<br/>\n    +import org.apache.storm.daemon.metrics.MetricsUtils;<br/>\n    +import org.apache.storm.daemon.metrics.reporters.PreparableReporter;<br/>\n    +import org.apache.storm.generated.*;<br/>\n    +import org.apache.storm.generated.StormBase;<br/>\n    +import org.apache.storm.metric.EventLoggerBolt;<br/>\n    +import org.apache.storm.metric.MetricsConsumerBolt;<br/>\n    +import org.apache.storm.metric.SystemBolt;<br/>\n    +import org.apache.storm.security.auth.IAuthorizer;<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.testing.NonRichBoltTracker;<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +import org.apache.storm.utils.IPredicate;<br/>\n    +import org.apache.storm.utils.ThriftTopologyUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.json.simple.JSONValue;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.*;<br/>\n    +<br/>\n    +public class StormCommon {<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static StormCommon _instance = new StormCommon();<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     * @param common a StormCommon instance<br/>\n    +     * @return the previously set instance<br/>\n    +     */<br/>\n    +    public static StormCommon setInstance(StormCommon common) </p>\n{\n    +StormCommon oldInstance = _instance;\n    +_instance = common;\n    +return oldInstance;\n    +    }\n<p>    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(StormCommon.class);<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = Acker.ACKER_COMPONENT_ID;<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = Acker.ACKER_INIT_STREAM_ID;<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = Acker.ACKER_ACK_STREAM_ID;<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = Acker.ACKER_FAIL_STREAM_ID;<br/>\n    +<br/>\n    +    public static final String SYSTEM_STREAM_ID = \"__system\";<br/>\n    +<br/>\n    +    public static final String EVENTLOGGER_COMPONENT_ID = \"__eventlogger\";<br/>\n    +    public static final String EVENTLOGGER_STREAM_ID = \"__eventlog\";<br/>\n    +<br/>\n    +    public static void startMetricsReporter(PreparableReporter report, Map conf) </p>\n{\n    +report.prepare(new MetricRegistry(), conf);\n    +report.start();\n    +LOG.info(\"Started statistics report plugin...\");\n    +    }\n<p>    +<br/>\n    +    public static void startMetricsReporters(Map conf) {<br/>\n    +List<PreparableReporter> reporters = MetricsUtils.getPreparableReporters(conf);<br/>\n    +for (PreparableReporter reporter : reporters) </p>\n{\n    +    startMetricsReporter(reporter, conf);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String getTopologyNameById(String topologyId) {<br/>\n    +String topologyName = null;<br/>\n    +try </p>\n{\n    +    topologyName = topologyIdToName(topologyId);\n    +}\n<p> catch (InvalidTopologyException e) </p>\n{\n    +    LOG.error(\"Invalid topologyId=\" + topologyId);\n    +}\n<p>    +return topologyName;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Convert topologyId to topologyName. TopologyId = topoloygName-counter-timeStamp<br/>\n    +     *<br/>\n    +     * @param topologyId<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static String topologyIdToName(String topologyId) throws InvalidTopologyException {<br/>\n    +String ret = null;<br/>\n    +int index = topologyId.lastIndexOf('-');<br/>\n    +if (index != -1 && index > 2) </p>\n{\n    +    index = topologyId.lastIndexOf('-', index - 1);\n    +    if (index != -1 && index > 0)\n    +ret = topologyId.substring(0, index);\n    +    else\n    +throw new InvalidTopologyException(topologyId + \" is not a valid topologyId\");\n    +}\n<p> else<br/>\n    +    throw new InvalidTopologyException(topologyId + \" is not a valid topologyId\");<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String getStormId(IStormClusterState stormClusterState, final String topologyName) {<br/>\n    +List<String> activeTopologys = stormClusterState.activeStorms();<br/>\n    +IPredicate pred = new IPredicate<String>() {<br/>\n    +    @Override<br/>\n    +    public boolean test(String obj) </p>\n{\n    +return obj != null ? getTopologyNameById(obj).equals(topologyName) : false;\n    +    }\n<p>    +};<br/>\n    +return Utils.findOne(pred, activeTopologys);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map<String, StormBase> topologyBases(IStormClusterState stormClusterState) </p>\n{\n    +return _instance.topologyBasesImpl(stormClusterState);\n    +    }\n<p>    +<br/>\n    +    protected Map<String, StormBase> topologyBasesImpl(IStormClusterState stormClusterState) {<br/>\n    +List<String> activeTopologys = stormClusterState.activeStorms();<br/>\n    +Map<String, StormBase> stormBases = new HashMap<String, StormBase>();<br/>\n    +if (activeTopologys != null) {<br/>\n    +    for (String topologyId : activeTopologys) {<br/>\n    +StormBase base = stormClusterState.stormBase(topologyId, null);<br/>\n    +if (base != null) </p>\n{\n    +    stormBases.put(topologyId, base);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +return stormBases;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void validateDistributedMode(Map conf) {<br/>\n    +if (ConfigUtils.isLocalMode(conf)) </p>\n{\n    +    throw new IllegalArgumentException(\"Cannot start server in local mode!\");\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private static void validateIds(StormTopology topology) throws InvalidTopologyException {<br/>\n    +List<String> componentIds = new ArrayList<String>();<br/>\n    +<br/>\n    +for (StormTopology._Fields field : Thrift.getTopologyFields()) {<br/>\n    +    if (ThriftTopologyUtils.isWorkerHook(field) == false) {<br/>\n    +Object value = topology.getFieldValue(field);<br/>\n    +if (value != null) {<br/>\n    +    Map<String, Object> componentMap = (Map<String, Object>) value;<br/>\n    +    componentIds.addAll(componentMap.keySet());<br/>\n    +<br/>\n    +    for (String id : componentMap.keySet()) {<br/>\n    +if (Utils.isSystemId(id)) </p>\n{\n    +    throw new InvalidTopologyException(id + \" is not a valid component id.\");\n    +}\n<p>    +    }<br/>\n    +    for (Object componentObj : componentMap.values()) {<br/>\n    +ComponentCommon common = getComponentCommon(componentObj);<br/>\n    +Set<String> streamIds = common.get_streams().keySet();<br/>\n    +for (String id : streamIds) {<br/>\n    +    if (Utils.isSystemId(id)) </p>\n{\n    +throw new InvalidTopologyException(id + \" is not a valid stream id.\");\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +List<String> offending = Utils.getRepeat(componentIds);<br/>\n    +if (offending.isEmpty() == false) </p>\n{\n    +    throw new InvalidTopologyException(\"Duplicate component ids: \" + offending);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private static boolean isEmptyInputs(ComponentCommon common) {<br/>\n    +if (common == null) </p>\n{\n    +    return true;\n    +} else if (common.get_inputs() == null) {    +    return true;    +}\n<p> else </p>\n{\n    +    return common.get_inputs().isEmpty();\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static Map<String, Object> allComponents(StormTopology topology) {<br/>\n    +Map<String, Object> components = new HashMap<String, Object>();<br/>\n    +List<StormTopology._Fields> topologyFields = Arrays.asList(Thrift.getTopologyFields());<br/>\n    +for (StormTopology._Fields field : topologyFields) {<br/>\n    +    if (ThriftTopologyUtils.isWorkerHook(field) == false) </p>\n{\n    +components.putAll(((Map) topology.getFieldValue(field)));\n    +    }\n<p>    +}<br/>\n    +return components;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map componentConf(Object component) {<br/>\n    +Map<Object, Object> conf = new HashMap<Object, Object>();<br/>\n    +ComponentCommon common = getComponentCommon(component);<br/>\n    +if (common != null) {<br/>\n    +    String jconf = common.get_json_conf();<br/>\n    +    if (jconf != null) </p>\n{\n    +conf.putAll((Map<Object, Object>) JSONValue.parse(jconf));\n    +    }\n<p>    +}<br/>\n    +return conf;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void validateBasic(StormTopology topology) throws InvalidTopologyException {<br/>\n    +validateIds(topology);<br/>\n    +<br/>\n    +List<StormTopology._Fields> spoutFields = Arrays.asList(Thrift.getSpoutFields());<br/>\n    +for (StormTopology._Fields field : spoutFields) {<br/>\n    +    Map<String, Object> spoutComponents = (Map<String, Object>) topology.getFieldValue(field);<br/>\n    +    if (spoutComponents != null) {<br/>\n    +for (Object obj : spoutComponents.values()) {<br/>\n    +    ComponentCommon common = getComponentCommon(obj);<br/>\n    +    if (isEmptyInputs(common) == false) </p>\n{\n    +throw new InvalidTopologyException(\"May not declare inputs for a spout\");\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +Map<String, Object> componentMap = allComponents(topology);<br/>\n    +for (Object componentObj : componentMap.values()) {<br/>\n    +    Map conf = componentConf(componentObj);<br/>\n    +    ComponentCommon common = getComponentCommon(componentObj);<br/>\n    +    if (common != null) {<br/>\n    +int parallelismHintNum = Thrift.getParallelismHint(common);<br/>\n    +Integer taskNum = Utils.getInt(conf.get(Config.TOPOLOGY_TASKS), 0);<br/>\n    +if (taskNum > 0 && parallelismHintNum <= 0) </p>\n{\n    +    throw new InvalidTopologyException(\"Number of executors must be greater than 0 when number of tasks is greater than 0\");\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    private static Set<String> getStreamOutputFields(Map<String, StreamInfo> streams) {<br/>\n    +Set<String> outputFields = new HashSet<String>();<br/>\n    +if (streams != null) {<br/>\n    +    for (StreamInfo streamInfo : streams.values()) </p>\n{\n    +outputFields.addAll(streamInfo.get_output_fields());\n    +    }\n<p>    +}<br/>\n    +return outputFields;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void validateStructure(StormTopology topology) throws InvalidTopologyException {<br/>\n    +Map<String, Object> componentMap = allComponents(topology);<br/>\n    +for (Map.Entry<String, Object> entry : componentMap.entrySet()) {<br/>\n    +    String componentId = entry.getKey();<br/>\n    +    ComponentCommon common = getComponentCommon(entry.getValue());<br/>\n    +    if (common != null) {<br/>\n    +Map<GlobalStreamId, Grouping> inputs = common.get_inputs();<br/>\n    +for (Map.Entry<GlobalStreamId, Grouping> input : inputs.entrySet()) {<br/>\n    +    String sourceStreamId = input.getKey().get_streamId();<br/>\n    +    String sourceComponentId = input.getKey().get_componentId();<br/>\n    +    if(componentMap.keySet().contains(sourceComponentId) == false) </p>\n{\n    +throw new InvalidTopologyException(\"Component: [\" + componentId + \"] subscribes from non-existent component [\" + sourceComponentId + \"]\");\n    +    }\n<p>    +<br/>\n    +    ComponentCommon sourceComponent = getComponentCommon(componentMap.get(sourceComponentId));<br/>\n    +    if (sourceComponent == null || sourceComponent.get_streams().containsKey(sourceStreamId) == false) </p>\n{\n    +throw new InvalidTopologyException(\"Component: [\" + componentId + \"] subscribes from non-existent stream: \" +\n    +\"[\" + sourceStreamId + \"] of component [\" + sourceComponentId + \"]\");\n    +    }\n<p>    +<br/>\n    +    Grouping grouping = input.getValue();<br/>\n    +    if (Thrift.groupingType(grouping) == Grouping._Fields.FIELDS) {<br/>\n    +List<String> fields = grouping.get_fields();<br/>\n    +Map<String, StreamInfo> streams = sourceComponent.get_streams();<br/>\n    +Set<String> sourceOutputFields = getStreamOutputFields(streams);<br/>\n    +if (sourceOutputFields.containsAll(fields) == false) </p>\n{\n    +    throw new InvalidTopologyException(\"Component: [\" + componentId + \"] subscribes from stream: [\" + sourceStreamId  +\"] of component \" +\n    +    \"[\" + sourceComponentId + \"] + with non-existent fields: \" + fields);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map<GlobalStreamId, Grouping> ackerInputs(StormTopology topology) {<br/>\n    +Map<GlobalStreamId, Grouping> inputs = new HashMap<GlobalStreamId, Grouping>();<br/>\n    +Set<String> boltIds = topology.get_bolts().keySet();<br/>\n    +Set<String> spoutIds = topology.get_spouts().keySet();<br/>\n    +<br/>\n    +for(String id : spoutIds) </p>\n{\n    +    inputs.put(Utils.getGlobalStreamId(id, ACKER_INIT_STREAM_ID), Thrift.prepareFieldsGrouping(Arrays.asList(\"id\")));\n    +}\n<p>    +<br/>\n    +for(String id : boltIds) </p>\n{\n    +    inputs.put(Utils.getGlobalStreamId(id, ACKER_ACK_STREAM_ID), Thrift.prepareFieldsGrouping(Arrays.asList(\"id\")));\n    +    inputs.put(Utils.getGlobalStreamId(id, ACKER_FAIL_STREAM_ID), Thrift.prepareFieldsGrouping(Arrays.asList(\"id\")));\n    +}\n<p>    +return inputs;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String clusterId = null;<br/>\n    +    public static IBolt makeAckerBolt() </p>\n{\n    +return _instance.makeAckerBoltImpl();\n    +    }\n<p>    +    public IBolt makeAckerBoltImpl() {<br/>\n    +return new Acker();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This can be inlined. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651864","html_url":"https://github.com/apache/storm/issues/5106#issuecomment-2612651864","issue_url":"https://api.github.com/repos/apache/storm/issues/5106","id":2612651864,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTE4NjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T09:25:51Z","updated_at":"2025-01-24T14:23:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1185#discussion_r55007255\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1185#discussion_r55007255</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/StormCommon.java &#8212;<br/>\n    @@ -0,0 +1,605 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import com.codahale.metrics.MetricRegistry;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.Constants;<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.cluster.IStormClusterState;<br/>\n    +import org.apache.storm.daemon.metrics.MetricsUtils;<br/>\n    +import org.apache.storm.daemon.metrics.reporters.PreparableReporter;<br/>\n    +import org.apache.storm.generated.*;<br/>\n    +import org.apache.storm.generated.StormBase;<br/>\n    +import org.apache.storm.metric.EventLoggerBolt;<br/>\n    +import org.apache.storm.metric.MetricsConsumerBolt;<br/>\n    +import org.apache.storm.metric.SystemBolt;<br/>\n    +import org.apache.storm.security.auth.IAuthorizer;<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.testing.NonRichBoltTracker;<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +import org.apache.storm.utils.IPredicate;<br/>\n    +import org.apache.storm.utils.ThriftTopologyUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.json.simple.JSONValue;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.*;<br/>\n    +<br/>\n    +public class StormCommon {<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static StormCommon _instance = new StormCommon();<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     * @param common a StormCommon instance<br/>\n    +     * @return the previously set instance<br/>\n    +     */<br/>\n    +    public static StormCommon setInstance(StormCommon common) </p>\n{\n    +StormCommon oldInstance = _instance;\n    +_instance = common;\n    +return oldInstance;\n    +    }\n<p>    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(StormCommon.class);<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = Acker.ACKER_COMPONENT_ID;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    We can directly use Acker/ACKER_COMPONENT_ID everywhere. Similarly for other stream names. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651870","html_url":"https://github.com/apache/storm/issues/5106#issuecomment-2612651870","issue_url":"https://api.github.com/repos/apache/storm/issues/5106","id":2612651870,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTE4NzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T09:27:00Z","updated_at":"2025-01-24T14:23:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1185#discussion_r55007408\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1185#discussion_r55007408</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/StormCommon.java &#8212;<br/>\n    @@ -0,0 +1,605 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import com.codahale.metrics.MetricRegistry;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.Constants;<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.cluster.IStormClusterState;<br/>\n    +import org.apache.storm.daemon.metrics.MetricsUtils;<br/>\n    +import org.apache.storm.daemon.metrics.reporters.PreparableReporter;<br/>\n    +import org.apache.storm.generated.*;<br/>\n    +import org.apache.storm.generated.StormBase;<br/>\n    +import org.apache.storm.metric.EventLoggerBolt;<br/>\n    +import org.apache.storm.metric.MetricsConsumerBolt;<br/>\n    +import org.apache.storm.metric.SystemBolt;<br/>\n    +import org.apache.storm.security.auth.IAuthorizer;<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.testing.NonRichBoltTracker;<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +import org.apache.storm.utils.IPredicate;<br/>\n    +import org.apache.storm.utils.ThriftTopologyUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.json.simple.JSONValue;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.*;<br/>\n    +<br/>\n    +public class StormCommon {<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static StormCommon _instance = new StormCommon();<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     * @param common a StormCommon instance<br/>\n    +     * @return the previously set instance<br/>\n    +     */<br/>\n    +    public static StormCommon setInstance(StormCommon common) </p>\n{\n    +StormCommon oldInstance = _instance;\n    +_instance = common;\n    +return oldInstance;\n    +    }\n<p>    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(StormCommon.class);<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = Acker.ACKER_COMPONENT_ID;<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = Acker.ACKER_INIT_STREAM_ID;<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = Acker.ACKER_ACK_STREAM_ID;<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = Acker.ACKER_FAIL_STREAM_ID;<br/>\n    +<br/>\n    +    public static final String SYSTEM_STREAM_ID = \"__system\";<br/>\n    +<br/>\n    +    public static final String EVENTLOGGER_COMPONENT_ID = \"__eventlogger\";<br/>\n    +    public static final String EVENTLOGGER_STREAM_ID = \"__eventlog\";<br/>\n    +<br/>\n    +    public static void startMetricsReporter(PreparableReporter report, Map conf) </p>\n{\n    +report.prepare(new MetricRegistry(), conf);\n    +report.start();\n    +LOG.info(\"Started statistics report plugin...\");\n    +    }\n<p>    +<br/>\n    +    public static void startMetricsReporters(Map conf) {<br/>\n    +List<PreparableReporter> reporters = MetricsUtils.getPreparableReporters(conf);<br/>\n    +for (PreparableReporter reporter : reporters) </p>\n{\n    +    startMetricsReporter(reporter, conf);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String getTopologyNameById(String topologyId) {<br/>\n    +String topologyName = null;<br/>\n    +try </p>\n{\n    +    topologyName = topologyIdToName(topologyId);\n    +}\n<p> catch (InvalidTopologyException e) </p>\n{\n    +    LOG.error(\"Invalid topologyId=\" + topologyId);\n    +}\n<p>    +return topologyName;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Convert topologyId to topologyName. TopologyId = topoloygName-counter-timeStamp<br/>\n    +     *<br/>\n    +     * @param topologyId<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static String topologyIdToName(String topologyId) throws InvalidTopologyException {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This and the function above can be merged. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651870/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651876","html_url":"https://github.com/apache/storm/issues/5106#issuecomment-2612651876","issue_url":"https://api.github.com/repos/apache/storm/issues/5106","id":2612651876,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTE4NzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T09:27:59Z","updated_at":"2025-01-24T14:23:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1185#discussion_r55007490\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1185#discussion_r55007490</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/StormCommon.java &#8212;<br/>\n    @@ -0,0 +1,605 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import com.codahale.metrics.MetricRegistry;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.Constants;<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.cluster.IStormClusterState;<br/>\n    +import org.apache.storm.daemon.metrics.MetricsUtils;<br/>\n    +import org.apache.storm.daemon.metrics.reporters.PreparableReporter;<br/>\n    +import org.apache.storm.generated.*;<br/>\n    +import org.apache.storm.generated.StormBase;<br/>\n    +import org.apache.storm.metric.EventLoggerBolt;<br/>\n    +import org.apache.storm.metric.MetricsConsumerBolt;<br/>\n    +import org.apache.storm.metric.SystemBolt;<br/>\n    +import org.apache.storm.security.auth.IAuthorizer;<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.testing.NonRichBoltTracker;<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +import org.apache.storm.utils.IPredicate;<br/>\n    +import org.apache.storm.utils.ThriftTopologyUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.json.simple.JSONValue;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.*;<br/>\n    +<br/>\n    +public class StormCommon {<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static StormCommon _instance = new StormCommon();<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     * @param common a StormCommon instance<br/>\n    +     * @return the previously set instance<br/>\n    +     */<br/>\n    +    public static StormCommon setInstance(StormCommon common) </p>\n{\n    +StormCommon oldInstance = _instance;\n    +_instance = common;\n    +return oldInstance;\n    +    }\n<p>    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(StormCommon.class);<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = Acker.ACKER_COMPONENT_ID;<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = Acker.ACKER_INIT_STREAM_ID;<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = Acker.ACKER_ACK_STREAM_ID;<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = Acker.ACKER_FAIL_STREAM_ID;<br/>\n    +<br/>\n    +    public static final String SYSTEM_STREAM_ID = \"__system\";<br/>\n    +<br/>\n    +    public static final String EVENTLOGGER_COMPONENT_ID = \"__eventlogger\";<br/>\n    +    public static final String EVENTLOGGER_STREAM_ID = \"__eventlog\";<br/>\n    +<br/>\n    +    public static void startMetricsReporter(PreparableReporter report, Map conf) </p>\n{\n    +report.prepare(new MetricRegistry(), conf);\n    +report.start();\n    +LOG.info(\"Started statistics report plugin...\");\n    +    }\n<p>    +<br/>\n    +    public static void startMetricsReporters(Map conf) {<br/>\n    +List<PreparableReporter> reporters = MetricsUtils.getPreparableReporters(conf);<br/>\n    +for (PreparableReporter reporter : reporters) </p>\n{\n    +    startMetricsReporter(reporter, conf);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String getTopologyNameById(String topologyId) {<br/>\n    +String topologyName = null;<br/>\n    +try </p>\n{\n    +    topologyName = topologyIdToName(topologyId);\n    +}\n<p> catch (InvalidTopologyException e) </p>\n{\n    +    LOG.error(\"Invalid topologyId=\" + topologyId);\n    +}\n<p>    +return topologyName;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Convert topologyId to topologyName. TopologyId = topoloygName-counter-timeStamp<br/>\n    +     *<br/>\n    +     * @param topologyId<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static String topologyIdToName(String topologyId) throws InvalidTopologyException {<br/>\n    +String ret = null;<br/>\n    +int index = topologyId.lastIndexOf('-');<br/>\n    +if (index != -1 && index > 2) </p>\n{\n    +    index = topologyId.lastIndexOf('-', index - 1);\n    +    if (index != -1 && index > 0)\n    +ret = topologyId.substring(0, index);\n    +    else\n    +throw new InvalidTopologyException(topologyId + \" is not a valid topologyId\");\n    +}\n<p> else<br/>\n    +    throw new InvalidTopologyException(topologyId + \" is not a valid topologyId\");<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String getStormId(IStormClusterState stormClusterState, final String topologyName) {<br/>\n    +List<String> activeTopologys = stormClusterState.activeStorms();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    nit. activeTopologies</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651882","html_url":"https://github.com/apache/storm/issues/5106#issuecomment-2612651882","issue_url":"https://api.github.com/repos/apache/storm/issues/5106","id":2612651882,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTE4ODI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T09:29:58Z","updated_at":"2025-01-24T14:23:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1185#discussion_r55007696\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1185#discussion_r55007696</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/StormCommon.java &#8212;<br/>\n    @@ -0,0 +1,605 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import com.codahale.metrics.MetricRegistry;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.Constants;<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.cluster.IStormClusterState;<br/>\n    +import org.apache.storm.daemon.metrics.MetricsUtils;<br/>\n    +import org.apache.storm.daemon.metrics.reporters.PreparableReporter;<br/>\n    +import org.apache.storm.generated.*;<br/>\n    +import org.apache.storm.generated.StormBase;<br/>\n    +import org.apache.storm.metric.EventLoggerBolt;<br/>\n    +import org.apache.storm.metric.MetricsConsumerBolt;<br/>\n    +import org.apache.storm.metric.SystemBolt;<br/>\n    +import org.apache.storm.security.auth.IAuthorizer;<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.testing.NonRichBoltTracker;<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +import org.apache.storm.utils.IPredicate;<br/>\n    +import org.apache.storm.utils.ThriftTopologyUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.json.simple.JSONValue;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.*;<br/>\n    +<br/>\n    +public class StormCommon {<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static StormCommon _instance = new StormCommon();<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     * @param common a StormCommon instance<br/>\n    +     * @return the previously set instance<br/>\n    +     */<br/>\n    +    public static StormCommon setInstance(StormCommon common) </p>\n{\n    +StormCommon oldInstance = _instance;\n    +_instance = common;\n    +return oldInstance;\n    +    }\n<p>    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(StormCommon.class);<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = Acker.ACKER_COMPONENT_ID;<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = Acker.ACKER_INIT_STREAM_ID;<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = Acker.ACKER_ACK_STREAM_ID;<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = Acker.ACKER_FAIL_STREAM_ID;<br/>\n    +<br/>\n    +    public static final String SYSTEM_STREAM_ID = \"__system\";<br/>\n    +<br/>\n    +    public static final String EVENTLOGGER_COMPONENT_ID = \"__eventlogger\";<br/>\n    +    public static final String EVENTLOGGER_STREAM_ID = \"__eventlog\";<br/>\n    +<br/>\n    +    public static void startMetricsReporter(PreparableReporter report, Map conf) </p>\n{\n    +report.prepare(new MetricRegistry(), conf);\n    +report.start();\n    +LOG.info(\"Started statistics report plugin...\");\n    +    }\n<p>    +<br/>\n    +    public static void startMetricsReporters(Map conf) {<br/>\n    +List<PreparableReporter> reporters = MetricsUtils.getPreparableReporters(conf);<br/>\n    +for (PreparableReporter reporter : reporters) </p>\n{\n    +    startMetricsReporter(reporter, conf);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String getTopologyNameById(String topologyId) {<br/>\n    +String topologyName = null;<br/>\n    +try </p>\n{\n    +    topologyName = topologyIdToName(topologyId);\n    +}\n<p> catch (InvalidTopologyException e) </p>\n{\n    +    LOG.error(\"Invalid topologyId=\" + topologyId);\n    +}\n<p>    +return topologyName;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Convert topologyId to topologyName. TopologyId = topoloygName-counter-timeStamp<br/>\n    +     *<br/>\n    +     * @param topologyId<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static String topologyIdToName(String topologyId) throws InvalidTopologyException {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    In fact the above function can be removed since an invalid name is never expected. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651887","html_url":"https://github.com/apache/storm/issues/5106#issuecomment-2612651887","issue_url":"https://api.github.com/repos/apache/storm/issues/5106","id":2612651887,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTE4ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T09:31:52Z","updated_at":"2025-01-24T14:23:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1185#discussion_r55007937\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1185#discussion_r55007937</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/StormCommon.java &#8212;<br/>\n    @@ -0,0 +1,605 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import com.codahale.metrics.MetricRegistry;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.Constants;<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.cluster.IStormClusterState;<br/>\n    +import org.apache.storm.daemon.metrics.MetricsUtils;<br/>\n    +import org.apache.storm.daemon.metrics.reporters.PreparableReporter;<br/>\n    +import org.apache.storm.generated.*;<br/>\n    +import org.apache.storm.generated.StormBase;<br/>\n    +import org.apache.storm.metric.EventLoggerBolt;<br/>\n    +import org.apache.storm.metric.MetricsConsumerBolt;<br/>\n    +import org.apache.storm.metric.SystemBolt;<br/>\n    +import org.apache.storm.security.auth.IAuthorizer;<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.testing.NonRichBoltTracker;<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +import org.apache.storm.utils.IPredicate;<br/>\n    +import org.apache.storm.utils.ThriftTopologyUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.json.simple.JSONValue;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.*;<br/>\n    +<br/>\n    +public class StormCommon {<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static StormCommon _instance = new StormCommon();<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     * @param common a StormCommon instance<br/>\n    +     * @return the previously set instance<br/>\n    +     */<br/>\n    +    public static StormCommon setInstance(StormCommon common) </p>\n{\n    +StormCommon oldInstance = _instance;\n    +_instance = common;\n    +return oldInstance;\n    +    }\n<p>    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(StormCommon.class);<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = Acker.ACKER_COMPONENT_ID;<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = Acker.ACKER_INIT_STREAM_ID;<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = Acker.ACKER_ACK_STREAM_ID;<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = Acker.ACKER_FAIL_STREAM_ID;<br/>\n    +<br/>\n    +    public static final String SYSTEM_STREAM_ID = \"__system\";<br/>\n    +<br/>\n    +    public static final String EVENTLOGGER_COMPONENT_ID = \"__eventlogger\";<br/>\n    +    public static final String EVENTLOGGER_STREAM_ID = \"__eventlog\";<br/>\n    +<br/>\n    +    public static void startMetricsReporter(PreparableReporter report, Map conf) </p>\n{\n    +report.prepare(new MetricRegistry(), conf);\n    +report.start();\n    +LOG.info(\"Started statistics report plugin...\");\n    +    }\n<p>    +<br/>\n    +    public static void startMetricsReporters(Map conf) {<br/>\n    +List<PreparableReporter> reporters = MetricsUtils.getPreparableReporters(conf);<br/>\n    +for (PreparableReporter reporter : reporters) </p>\n{\n    +    startMetricsReporter(reporter, conf);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String getTopologyNameById(String topologyId) {<br/>\n    +String topologyName = null;<br/>\n    +try </p>\n{\n    +    topologyName = topologyIdToName(topologyId);\n    +}\n<p> catch (InvalidTopologyException e) </p>\n{\n    +    LOG.error(\"Invalid topologyId=\" + topologyId);\n    +}\n<p>    +return topologyName;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Convert topologyId to topologyName. TopologyId = topoloygName-counter-timeStamp<br/>\n    +     *<br/>\n    +     * @param topologyId<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static String topologyIdToName(String topologyId) throws InvalidTopologyException {<br/>\n    +String ret = null;<br/>\n    +int index = topologyId.lastIndexOf('-');<br/>\n    +if (index != -1 && index > 2) </p>\n{\n    +    index = topologyId.lastIndexOf('-', index - 1);\n    +    if (index != -1 && index > 0)\n    +ret = topologyId.substring(0, index);\n    +    else\n    +throw new InvalidTopologyException(topologyId + \" is not a valid topologyId\");\n    +}\n<p> else<br/>\n    +    throw new InvalidTopologyException(topologyId + \" is not a valid topologyId\");<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String getStormId(IStormClusterState stormClusterState, final String topologyName) {<br/>\n    +List<String> activeTopologys = stormClusterState.activeStorms();<br/>\n    +IPredicate pred = new IPredicate<String>() {<br/>\n    +    @Override<br/>\n    +    public boolean test(String obj) </p>\n{\n    +return obj != null ? getTopologyNameById(obj).equals(topologyName) : false;\n    +    }\n<p>    +};<br/>\n    +return Utils.findOne(pred, activeTopologys);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map<String, StormBase> topologyBases(IStormClusterState stormClusterState) </p>\n{\n    +return _instance.topologyBasesImpl(stormClusterState);\n    +    }\n<p>    +<br/>\n    +    protected Map<String, StormBase> topologyBasesImpl(IStormClusterState stormClusterState) {<br/>\n    +List<String> activeTopologys = stormClusterState.activeStorms();<br/>\n    +Map<String, StormBase> stormBases = new HashMap<String, StormBase>();<br/>\n    +if (activeTopologys != null) {<br/>\n    +    for (String topologyId : activeTopologys) {<br/>\n    +StormBase base = stormClusterState.stormBase(topologyId, null);<br/>\n    +if (base != null) </p>\n{\n    +    stormBases.put(topologyId, base);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +return stormBases;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void validateDistributedMode(Map conf) {<br/>\n    +if (ConfigUtils.isLocalMode(conf)) </p>\n{\n    +    throw new IllegalArgumentException(\"Cannot start server in local mode!\");\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private static void validateIds(StormTopology topology) throws InvalidTopologyException {<br/>\n    +List<String> componentIds = new ArrayList<String>();<br/>\n    +<br/>\n    +for (StormTopology._Fields field : Thrift.getTopologyFields()) {<br/>\n    +    if (ThriftTopologyUtils.isWorkerHook(field) == false) {<br/>\n    +Object value = topology.getFieldValue(field);<br/>\n    +if (value != null) {<br/>\n    +    Map<String, Object> componentMap = (Map<String, Object>) value;<br/>\n    +    componentIds.addAll(componentMap.keySet());<br/>\n    +<br/>\n    +    for (String id : componentMap.keySet()) {<br/>\n    +if (Utils.isSystemId(id)) </p>\n{\n    +    throw new InvalidTopologyException(id + \" is not a valid component id.\");\n    +}\n<p>    +    }<br/>\n    +    for (Object componentObj : componentMap.values()) {<br/>\n    +ComponentCommon common = getComponentCommon(componentObj);<br/>\n    +Set<String> streamIds = common.get_streams().keySet();<br/>\n    +for (String id : streamIds) {<br/>\n    +    if (Utils.isSystemId(id)) </p>\n{\n    +throw new InvalidTopologyException(id + \" is not a valid stream id.\");\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +List<String> offending = Utils.getRepeat(componentIds);<br/>\n    +if (offending.isEmpty() == false) </p>\n{\n    +    throw new InvalidTopologyException(\"Duplicate component ids: \" + offending);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private static boolean isEmptyInputs(ComponentCommon common) {<br/>\n    +if (common == null) </p>\n{\n    +    return true;\n    +} else if (common.get_inputs() == null) {    +    return true;    +}\n<p> else </p>\n{\n    +    return common.get_inputs().isEmpty();\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static Map<String, Object> allComponents(StormTopology topology) {<br/>\n    +Map<String, Object> components = new HashMap<String, Object>();<br/>\n    +List<StormTopology._Fields> topologyFields = Arrays.asList(Thrift.getTopologyFields());<br/>\n    +for (StormTopology._Fields field : topologyFields) {<br/>\n    +    if (ThriftTopologyUtils.isWorkerHook(field) == false) </p>\n{\n    +components.putAll(((Map) topology.getFieldValue(field)));\n    +    }\n<p>    +}<br/>\n    +return components;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map componentConf(Object component) {<br/>\n    +Map<Object, Object> conf = new HashMap<Object, Object>();<br/>\n    +ComponentCommon common = getComponentCommon(component);<br/>\n    +if (common != null) {<br/>\n    +    String jconf = common.get_json_conf();<br/>\n    +    if (jconf != null) </p>\n{\n    +conf.putAll((Map<Object, Object>) JSONValue.parse(jconf));\n    +    }\n<p>    +}<br/>\n    +return conf;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void validateBasic(StormTopology topology) throws InvalidTopologyException {<br/>\n    +validateIds(topology);<br/>\n    +<br/>\n    +List<StormTopology._Fields> spoutFields = Arrays.asList(Thrift.getSpoutFields());<br/>\n    +for (StormTopology._Fields field : spoutFields) {<br/>\n    +    Map<String, Object> spoutComponents = (Map<String, Object>) topology.getFieldValue(field);<br/>\n    +    if (spoutComponents != null) {<br/>\n    +for (Object obj : spoutComponents.values()) {<br/>\n    +    ComponentCommon common = getComponentCommon(obj);<br/>\n    +    if (isEmptyInputs(common) == false) </p>\n{\n    +throw new InvalidTopologyException(\"May not declare inputs for a spout\");\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +Map<String, Object> componentMap = allComponents(topology);<br/>\n    +for (Object componentObj : componentMap.values()) {<br/>\n    +    Map conf = componentConf(componentObj);<br/>\n    +    ComponentCommon common = getComponentCommon(componentObj);<br/>\n    +    if (common != null) {<br/>\n    +int parallelismHintNum = Thrift.getParallelismHint(common);<br/>\n    +Integer taskNum = Utils.getInt(conf.get(Config.TOPOLOGY_TASKS), 0);<br/>\n    +if (taskNum > 0 && parallelismHintNum <= 0) </p>\n{\n    +    throw new InvalidTopologyException(\"Number of executors must be greater than 0 when number of tasks is greater than 0\");\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    private static Set<String> getStreamOutputFields(Map<String, StreamInfo> streams) {<br/>\n    +Set<String> outputFields = new HashSet<String>();<br/>\n    +if (streams != null) {<br/>\n    +    for (StreamInfo streamInfo : streams.values()) </p>\n{\n    +outputFields.addAll(streamInfo.get_output_fields());\n    +    }\n<p>    +}<br/>\n    +return outputFields;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void validateStructure(StormTopology topology) throws InvalidTopologyException {<br/>\n    +Map<String, Object> componentMap = allComponents(topology);<br/>\n    +for (Map.Entry<String, Object> entry : componentMap.entrySet()) {<br/>\n    +    String componentId = entry.getKey();<br/>\n    +    ComponentCommon common = getComponentCommon(entry.getValue());<br/>\n    +    if (common != null) {<br/>\n    +Map<GlobalStreamId, Grouping> inputs = common.get_inputs();<br/>\n    +for (Map.Entry<GlobalStreamId, Grouping> input : inputs.entrySet()) {<br/>\n    +    String sourceStreamId = input.getKey().get_streamId();<br/>\n    +    String sourceComponentId = input.getKey().get_componentId();<br/>\n    +    if(componentMap.keySet().contains(sourceComponentId) == false) </p>\n{\n    +throw new InvalidTopologyException(\"Component: [\" + componentId + \"] subscribes from non-existent component [\" + sourceComponentId + \"]\");\n    +    }\n<p>    +<br/>\n    +    ComponentCommon sourceComponent = getComponentCommon(componentMap.get(sourceComponentId));<br/>\n    +    if (sourceComponent == null || sourceComponent.get_streams().containsKey(sourceStreamId) == false) </p>\n{\n    +throw new InvalidTopologyException(\"Component: [\" + componentId + \"] subscribes from non-existent stream: \" +\n    +\"[\" + sourceStreamId + \"] of component [\" + sourceComponentId + \"]\");\n    +    }\n<p>    +<br/>\n    +    Grouping grouping = input.getValue();<br/>\n    +    if (Thrift.groupingType(grouping) == Grouping._Fields.FIELDS) {<br/>\n    +List<String> fields = grouping.get_fields();<br/>\n    +Map<String, StreamInfo> streams = sourceComponent.get_streams();<br/>\n    +Set<String> sourceOutputFields = getStreamOutputFields(streams);<br/>\n    +if (sourceOutputFields.containsAll(fields) == false) </p>\n{\n    +    throw new InvalidTopologyException(\"Component: [\" + componentId + \"] subscribes from stream: [\" + sourceStreamId  +\"] of component \" +\n    +    \"[\" + sourceComponentId + \"] + with non-existent fields: \" + fields);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map<GlobalStreamId, Grouping> ackerInputs(StormTopology topology) {<br/>\n    +Map<GlobalStreamId, Grouping> inputs = new HashMap<GlobalStreamId, Grouping>();<br/>\n    +Set<String> boltIds = topology.get_bolts().keySet();<br/>\n    +Set<String> spoutIds = topology.get_spouts().keySet();<br/>\n    +<br/>\n    +for(String id : spoutIds) </p>\n{\n    +    inputs.put(Utils.getGlobalStreamId(id, ACKER_INIT_STREAM_ID), Thrift.prepareFieldsGrouping(Arrays.asList(\"id\")));\n    +}\n<p>    +<br/>\n    +for(String id : boltIds) </p>\n{\n    +    inputs.put(Utils.getGlobalStreamId(id, ACKER_ACK_STREAM_ID), Thrift.prepareFieldsGrouping(Arrays.asList(\"id\")));\n    +    inputs.put(Utils.getGlobalStreamId(id, ACKER_FAIL_STREAM_ID), Thrift.prepareFieldsGrouping(Arrays.asList(\"id\")));\n    +}\n<p>    +return inputs;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String clusterId = null;<br/>\n    +    public static IBolt makeAckerBolt() </p>\n{\n    +return _instance.makeAckerBoltImpl();\n    +    }\n<p>    +    public IBolt makeAckerBoltImpl() </p>\n{\n    +return new Acker();\n    +    }\n<p>    +<br/>\n    +    public static void addAcker(Map conf, StormTopology topology) {<br/>\n    +int ackerNum = Utils.getInt(conf.get(Config.TOPOLOGY_ACKER_EXECUTORS), Utils.getInt(conf.get(Config.TOPOLOGY_WORKERS)));<br/>\n    +Map<GlobalStreamId, Grouping> inputs = ackerInputs(topology);<br/>\n    +<br/>\n    +Map<String, StreamInfo> outputStreams = new HashMap<String, StreamInfo>();<br/>\n    +outputStreams.put(ACKER_ACK_STREAM_ID, Thrift.directOutputFields(Arrays.asList(\"id\")));<br/>\n    +outputStreams.put(ACKER_FAIL_STREAM_ID, Thrift.directOutputFields(Arrays.asList(\"id\")));<br/>\n    +<br/>\n    +Map<String, Object> ackerConf = new HashMap<String, Object>();<br/>\n    +ackerConf.put(Config.TOPOLOGY_TASKS, ackerNum);<br/>\n    +ackerConf.put(Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS, Utils.getInt(conf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)));<br/>\n    +<br/>\n    +Bolt acker = Thrift.prepareSerializedBoltDetails(inputs, makeAckerBolt(), outputStreams, ackerNum, ackerConf);<br/>\n    +<br/>\n    +for(Bolt bolt : topology.get_bolts().values()) </p>\n{\n    +    ComponentCommon common = bolt.get_common();\n    +    common.put_to_streams(ACKER_ACK_STREAM_ID, Thrift.outputFields(Arrays.asList(\"id\", \"ack-val\")));\n    +    common.put_to_streams(ACKER_FAIL_STREAM_ID, Thrift.outputFields(Arrays.asList(\"id\")));\n    +}\n<p>    +<br/>\n    +for (SpoutSpec spout : topology.get_spouts().values()) </p>\n{\n    +    ComponentCommon common = spout.get_common();\n    +    Map spoutConf = componentConf(spout);\n    +    spoutConf.put(Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS, Utils.getInt(conf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)));\n    +    common.set_json_conf(JSONValue.toJSONString(spoutConf));\n    +    common.put_to_streams(ACKER_INIT_STREAM_ID, Thrift.outputFields(Arrays.asList(\"id\", \"init-val\", \"spout-task\")));\n    +    common.put_to_inputs(Utils.getGlobalStreamId(ACKER_COMPONENT_ID, ACKER_ACK_STREAM_ID), Thrift.prepareDirectGrouping());\n    +    common.put_to_inputs(Utils.getGlobalStreamId(ACKER_COMPONENT_ID, ACKER_FAIL_STREAM_ID), Thrift.prepareDirectGrouping());\n    +}\n<p>    +<br/>\n    +topology.put_to_bolts(ACKER_COMPONENT_ID, acker);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static ComponentCommon getComponentCommon(Object component) {<br/>\n    +if (component == null) </p>\n{\n    +    return null;\n    +}\n<p>    +<br/>\n    +ComponentCommon common = null;<br/>\n    +if (component instanceof StateSpoutSpec) </p>\n{\n    +    common = ((StateSpoutSpec) component).get_common();\n    +}\n<p> else if (component instanceof SpoutSpec) </p>\n{\n    +    common = ((SpoutSpec) component).get_common();\n    +}\n<p> else if (component instanceof Bolt) </p>\n{\n    +    common = ((Bolt) component).get_common();\n    +}\n<p>    +return common;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void addMetricStreams(StormTopology topology) {<br/>\n    +for (Object component : allComponents(topology).values()) {<br/>\n    +    ComponentCommon common = getComponentCommon(component);<br/>\n    +    if (common != null) </p>\n{\n    +StreamInfo streamInfo = Thrift.outputFields(Arrays.asList(\"task-info\", \"data-points\"));\n    +common.put_to_streams(Constants.METRICS_STREAM_ID, streamInfo);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void addSystemStreams(StormTopology topology) {<br/>\n    +for (Object component : allComponents(topology).values()) {<br/>\n    +    ComponentCommon common = getComponentCommon(component);<br/>\n    +    if (common != null) </p>\n{\n    +StreamInfo streamInfo = Thrift.outputFields(Arrays.asList(\"event\"));\n    +common.put_to_streams(SYSTEM_STREAM_ID, streamInfo);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static List<String> eventLoggerBoltFields() </p>\n{\n    +List<String> fields = Arrays.asList(EventLoggerBolt.FIELD_COMPONENT_ID, EventLoggerBolt.FIELD_MESSAGE_ID, EventLoggerBolt.FIELD_TS,\n    +EventLoggerBolt.FIELD_VALUES);\n    +return fields;\n    +    }\n<p>    +<br/>\n    +    public static Map<GlobalStreamId, Grouping> eventLoggerInputs(StormTopology topology) {<br/>\n    +Map<GlobalStreamId, Grouping> inputs = new HashMap<GlobalStreamId, Grouping>();<br/>\n    +Set<String> allIds = new HashSet<String>();<br/>\n    +allIds.addAll(topology.get_bolts().keySet());<br/>\n    +allIds.addAll(topology.get_spouts().keySet());<br/>\n    +<br/>\n    +for(String id : allIds) </p>\n{\n    +    inputs.put(Utils.getGlobalStreamId(id, EVENTLOGGER_STREAM_ID), Thrift.prepareFieldsGrouping(Arrays.asList(\"component-id\")));\n    +}\n<p>    +return inputs;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void addEventLogger(Map conf, StormTopology topology) {<br/>\n    +Integer numExecutors = Utils.getInt(conf.get(Config.TOPOLOGY_EVENTLOGGER_EXECUTORS), Utils.getInt(conf.get(Config.TOPOLOGY_WORKERS)));<br/>\n    +HashMap<String, Object> componentConf = new HashMap<String, Object>();<br/>\n    +componentConf.put(Config.TOPOLOGY_TASKS, numExecutors);<br/>\n    +componentConf.put(Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS, Utils.getInt(conf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)));<br/>\n    +Bolt eventLoggerBolt = Thrift.prepareSerializedBoltDetails(eventLoggerInputs(topology), new EventLoggerBolt(), null, numExecutors, componentConf);<br/>\n    +<br/>\n    +for(Object component : allComponents(topology).values()) {<br/>\n    +    ComponentCommon common = getComponentCommon(component);<br/>\n    +    if (common != null) </p>\n{\n    +common.put_to_streams(EVENTLOGGER_STREAM_ID, Thrift.outputFields(eventLoggerBoltFields()));\n    +    }\n<p>    +}<br/>\n    +topology.put_to_bolts(EVENTLOGGER_COMPONENT_ID, eventLoggerBolt);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map<String, Bolt> metricsConsumerBoltSpecs(Map conf, StormTopology topology) {<br/>\n    +Map<String, Bolt> metricsConsumerBolts = new HashMap<String, Bolt>();<br/>\n    +<br/>\n    +Set<String> componentIdsEmitMetrics = new HashSet<String>();<br/>\n    +componentIdsEmitMetrics.addAll(allComponents(topology).keySet());<br/>\n    +componentIdsEmitMetrics.add(Constants.SYSTEM_COMPONENT_ID);<br/>\n    +<br/>\n    +Map<GlobalStreamId, Grouping> inputs = new HashMap<GlobalStreamId, Grouping>();<br/>\n    +for (String componentId : componentIdsEmitMetrics) </p>\n{\n    +    inputs.put(Utils.getGlobalStreamId(componentId, Constants.METRICS_STREAM_ID), Thrift.prepareShuffleGrouping());\n    +}\n<p>    +<br/>\n    +List<Map<String, Object>> registerInfo = (List<Map<String, Object>>) conf.get(Config.TOPOLOGY_METRICS_CONSUMER_REGISTER);<br/>\n    +if (registerInfo != null) {<br/>\n    +    Map<String, Integer> classOccurrencesMap = new HashMap<String, Integer>();<br/>\n    +    for (Map<String, Object> info : registerInfo) {<br/>\n    +String className = (String) info.get(\"class\");<br/>\n    +Object argument = info.get(\"argument\");<br/>\n    +Integer phintNum = Utils.getInt(info.get(\"parallelism.hint\"), 1);<br/>\n    +Map<String, Object> metricsConsumerConf = new HashMap<String, Object>();<br/>\n    +metricsConsumerConf.put(Config.TOPOLOGY_TASKS, phintNum);<br/>\n    +Bolt metricsConsumerBolt = Thrift.prepareSerializedBoltDetails(inputs, new MetricsConsumerBolt(className, argument), null, phintNum, metricsConsumerConf);<br/>\n    +<br/>\n    +String id = className;<br/>\n    +if (classOccurrencesMap.containsKey(className)) </p>\n{\n    +    // e.g. [\\\"a\\\", \\\"b\\\", \\\"a\\\"]) => [\\\"a\\\", \\\"b\\\", \\\"a#2\\\"]\"\n    +    int occurrenceNum = classOccurrencesMap.get(className);\n    +    occurrenceNum++;\n    +    classOccurrencesMap.put(className, occurrenceNum);\n    +    id = Constants.METRICS_COMPONENT_ID_PREFIX + className + \"#\" + occurrenceNum;\n    +}\n<p> else </p>\n{\n    +    classOccurrencesMap.put(className, 1);\n    +}\n<p>    +metricsConsumerBolts.put(id, metricsConsumerBolt);<br/>\n    +    }<br/>\n    +}<br/>\n    +return metricsConsumerBolts;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void addMetricComponents(Map conf, StormTopology topology) {<br/>\n    +Map<String, Bolt> metricsConsumerBolts = metricsConsumerBoltSpecs(conf, topology);<br/>\n    +for (Map.Entry<String, Bolt> entry : metricsConsumerBolts.entrySet()) </p>\n{\n    +    topology.put_to_bolts(entry.getKey(), entry.getValue());\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static void addSystemComponents(Map conf, StormTopology topology) </p>\n{\n    +Map<String, StreamInfo> outputStreams = new HashMap<String, StreamInfo>();\n    +outputStreams.put(Constants.SYSTEM_TICK_STREAM_ID, Thrift.outputFields(Arrays.asList(\"rate_secs\")));\n    +outputStreams.put(Constants.METRICS_TICK_STREAM_ID, Thrift.outputFields(Arrays.asList(\"interval\")));\n    +outputStreams.put(Constants.CREDENTIALS_CHANGED_STREAM_ID, Thrift.outputFields(Arrays.asList(\"creds\")));\n    +\n    +Map<String, Object> boltConf = new HashMap<String, Object>();\n    +boltConf.put(Config.TOPOLOGY_TASKS, 0);\n    +\n    +Bolt systemBoltSpec = Thrift.prepareSerializedBoltDetails(null, new SystemBolt(), outputStreams, 0, boltConf);\n    +topology.put_to_bolts(Constants.SYSTEM_COMPONENT_ID, systemBoltSpec);\n    +    }\n<p>    +<br/>\n    +    public static StormTopology systemTopology(Map stormConf, StormTopology topology) throws InvalidTopologyException </p>\n{\n    +return _instance.systemTopologyImpl(stormConf, topology);\n    +    }\n<p>    +<br/>\n    +    protected StormTopology systemTopologyImpl(Map stormConf, StormTopology topology) throws InvalidTopologyException {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    this function and the functions called by it can be moved to a different class SystemTopologyBuilder</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651890","html_url":"https://github.com/apache/storm/issues/5106#issuecomment-2612651890","issue_url":"https://api.github.com/repos/apache/storm/issues/5106","id":2612651890,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTE4OTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T09:32:37Z","updated_at":"2025-01-24T14:23:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1185#discussion_r55007994\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1185#discussion_r55007994</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/StormCommon.java &#8212;<br/>\n    @@ -0,0 +1,605 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import com.codahale.metrics.MetricRegistry;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.Constants;<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.cluster.IStormClusterState;<br/>\n    +import org.apache.storm.daemon.metrics.MetricsUtils;<br/>\n    +import org.apache.storm.daemon.metrics.reporters.PreparableReporter;<br/>\n    +import org.apache.storm.generated.*;<br/>\n    +import org.apache.storm.generated.StormBase;<br/>\n    +import org.apache.storm.metric.EventLoggerBolt;<br/>\n    +import org.apache.storm.metric.MetricsConsumerBolt;<br/>\n    +import org.apache.storm.metric.SystemBolt;<br/>\n    +import org.apache.storm.security.auth.IAuthorizer;<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.testing.NonRichBoltTracker;<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +import org.apache.storm.utils.IPredicate;<br/>\n    +import org.apache.storm.utils.ThriftTopologyUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.json.simple.JSONValue;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.*;<br/>\n    +<br/>\n    +public class StormCommon {<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static StormCommon _instance = new StormCommon();<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     * @param common a StormCommon instance<br/>\n    +     * @return the previously set instance<br/>\n    +     */<br/>\n    +    public static StormCommon setInstance(StormCommon common) </p>\n{\n    +StormCommon oldInstance = _instance;\n    +_instance = common;\n    +return oldInstance;\n    +    }\n<p>    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(StormCommon.class);<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = Acker.ACKER_COMPONENT_ID;<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = Acker.ACKER_INIT_STREAM_ID;<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = Acker.ACKER_ACK_STREAM_ID;<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = Acker.ACKER_FAIL_STREAM_ID;<br/>\n    +<br/>\n    +    public static final String SYSTEM_STREAM_ID = \"__system\";<br/>\n    +<br/>\n    +    public static final String EVENTLOGGER_COMPONENT_ID = \"__eventlogger\";<br/>\n    +    public static final String EVENTLOGGER_STREAM_ID = \"__eventlog\";<br/>\n    +<br/>\n    +    public static void startMetricsReporter(PreparableReporter report, Map conf) </p>\n{\n    +report.prepare(new MetricRegistry(), conf);\n    +report.start();\n    +LOG.info(\"Started statistics report plugin...\");\n    +    }\n<p>    +<br/>\n    +    public static void startMetricsReporters(Map conf) {<br/>\n    +List<PreparableReporter> reporters = MetricsUtils.getPreparableReporters(conf);<br/>\n    +for (PreparableReporter reporter : reporters) </p>\n{\n    +    startMetricsReporter(reporter, conf);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String getTopologyNameById(String topologyId) {<br/>\n    +String topologyName = null;<br/>\n    +try </p>\n{\n    +    topologyName = topologyIdToName(topologyId);\n    +}\n<p> catch (InvalidTopologyException e) </p>\n{\n    +    LOG.error(\"Invalid topologyId=\" + topologyId);\n    +}\n<p>    +return topologyName;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Convert topologyId to topologyName. TopologyId = topoloygName-counter-timeStamp<br/>\n    +     *<br/>\n    +     * @param topologyId<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static String topologyIdToName(String topologyId) throws InvalidTopologyException {<br/>\n    +String ret = null;<br/>\n    +int index = topologyId.lastIndexOf('-');<br/>\n    +if (index != -1 && index > 2) </p>\n{\n    +    index = topologyId.lastIndexOf('-', index - 1);\n    +    if (index != -1 && index > 0)\n    +ret = topologyId.substring(0, index);\n    +    else\n    +throw new InvalidTopologyException(topologyId + \" is not a valid topologyId\");\n    +}\n<p> else<br/>\n    +    throw new InvalidTopologyException(topologyId + \" is not a valid topologyId\");<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String getStormId(IStormClusterState stormClusterState, final String topologyName) {<br/>\n    +List<String> activeTopologys = stormClusterState.activeStorms();<br/>\n    +IPredicate pred = new IPredicate<String>() {<br/>\n    +    @Override<br/>\n    +    public boolean test(String obj) </p>\n{\n    +return obj != null ? getTopologyNameById(obj).equals(topologyName) : false;\n    +    }\n<p>    +};<br/>\n    +return Utils.findOne(pred, activeTopologys);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map<String, StormBase> topologyBases(IStormClusterState stormClusterState) </p>\n{\n    +return _instance.topologyBasesImpl(stormClusterState);\n    +    }\n<p>    +<br/>\n    +    protected Map<String, StormBase> topologyBasesImpl(IStormClusterState stormClusterState) {<br/>\n    +List<String> activeTopologys = stormClusterState.activeStorms();<br/>\n    +Map<String, StormBase> stormBases = new HashMap<String, StormBase>();<br/>\n    +if (activeTopologys != null) {<br/>\n    +    for (String topologyId : activeTopologys) {<br/>\n    +StormBase base = stormClusterState.stormBase(topologyId, null);<br/>\n    +if (base != null) </p>\n{\n    +    stormBases.put(topologyId, base);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +return stormBases;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void validateDistributedMode(Map conf) {<br/>\n    +if (ConfigUtils.isLocalMode(conf)) </p>\n{\n    +    throw new IllegalArgumentException(\"Cannot start server in local mode!\");\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private static void validateIds(StormTopology topology) throws InvalidTopologyException {<br/>\n    +List<String> componentIds = new ArrayList<String>();<br/>\n    +<br/>\n    +for (StormTopology._Fields field : Thrift.getTopologyFields()) {<br/>\n    +    if (ThriftTopologyUtils.isWorkerHook(field) == false) {<br/>\n    +Object value = topology.getFieldValue(field);<br/>\n    +if (value != null) {<br/>\n    +    Map<String, Object> componentMap = (Map<String, Object>) value;<br/>\n    +    componentIds.addAll(componentMap.keySet());<br/>\n    +<br/>\n    +    for (String id : componentMap.keySet()) {<br/>\n    +if (Utils.isSystemId(id)) </p>\n{\n    +    throw new InvalidTopologyException(id + \" is not a valid component id.\");\n    +}\n<p>    +    }<br/>\n    +    for (Object componentObj : componentMap.values()) {<br/>\n    +ComponentCommon common = getComponentCommon(componentObj);<br/>\n    +Set<String> streamIds = common.get_streams().keySet();<br/>\n    +for (String id : streamIds) {<br/>\n    +    if (Utils.isSystemId(id)) </p>\n{\n    +throw new InvalidTopologyException(id + \" is not a valid stream id.\");\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +List<String> offending = Utils.getRepeat(componentIds);<br/>\n    +if (offending.isEmpty() == false) </p>\n{\n    +    throw new InvalidTopologyException(\"Duplicate component ids: \" + offending);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private static boolean isEmptyInputs(ComponentCommon common) {<br/>\n    +if (common == null) </p>\n{\n    +    return true;\n    +} else if (common.get_inputs() == null) {    +    return true;    +}\n<p> else </p>\n{\n    +    return common.get_inputs().isEmpty();\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static Map<String, Object> allComponents(StormTopology topology) {<br/>\n    +Map<String, Object> components = new HashMap<String, Object>();<br/>\n    +List<StormTopology._Fields> topologyFields = Arrays.asList(Thrift.getTopologyFields());<br/>\n    +for (StormTopology._Fields field : topologyFields) {<br/>\n    +    if (ThriftTopologyUtils.isWorkerHook(field) == false) </p>\n{\n    +components.putAll(((Map) topology.getFieldValue(field)));\n    +    }\n<p>    +}<br/>\n    +return components;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map componentConf(Object component) {<br/>\n    +Map<Object, Object> conf = new HashMap<Object, Object>();<br/>\n    +ComponentCommon common = getComponentCommon(component);<br/>\n    +if (common != null) {<br/>\n    +    String jconf = common.get_json_conf();<br/>\n    +    if (jconf != null) </p>\n{\n    +conf.putAll((Map<Object, Object>) JSONValue.parse(jconf));\n    +    }\n<p>    +}<br/>\n    +return conf;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void validateBasic(StormTopology topology) throws InvalidTopologyException {<br/>\n    +validateIds(topology);<br/>\n    +<br/>\n    +List<StormTopology._Fields> spoutFields = Arrays.asList(Thrift.getSpoutFields());<br/>\n    +for (StormTopology._Fields field : spoutFields) {<br/>\n    +    Map<String, Object> spoutComponents = (Map<String, Object>) topology.getFieldValue(field);<br/>\n    +    if (spoutComponents != null) {<br/>\n    +for (Object obj : spoutComponents.values()) {<br/>\n    +    ComponentCommon common = getComponentCommon(obj);<br/>\n    +    if (isEmptyInputs(common) == false) </p>\n{\n    +throw new InvalidTopologyException(\"May not declare inputs for a spout\");\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +Map<String, Object> componentMap = allComponents(topology);<br/>\n    +for (Object componentObj : componentMap.values()) {<br/>\n    +    Map conf = componentConf(componentObj);<br/>\n    +    ComponentCommon common = getComponentCommon(componentObj);<br/>\n    +    if (common != null) {<br/>\n    +int parallelismHintNum = Thrift.getParallelismHint(common);<br/>\n    +Integer taskNum = Utils.getInt(conf.get(Config.TOPOLOGY_TASKS), 0);<br/>\n    +if (taskNum > 0 && parallelismHintNum <= 0) </p>\n{\n    +    throw new InvalidTopologyException(\"Number of executors must be greater than 0 when number of tasks is greater than 0\");\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    private static Set<String> getStreamOutputFields(Map<String, StreamInfo> streams) {<br/>\n    +Set<String> outputFields = new HashSet<String>();<br/>\n    +if (streams != null) {<br/>\n    +    for (StreamInfo streamInfo : streams.values()) </p>\n{\n    +outputFields.addAll(streamInfo.get_output_fields());\n    +    }\n<p>    +}<br/>\n    +return outputFields;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void validateStructure(StormTopology topology) throws InvalidTopologyException {<br/>\n    +Map<String, Object> componentMap = allComponents(topology);<br/>\n    +for (Map.Entry<String, Object> entry : componentMap.entrySet()) {<br/>\n    +    String componentId = entry.getKey();<br/>\n    +    ComponentCommon common = getComponentCommon(entry.getValue());<br/>\n    +    if (common != null) {<br/>\n    +Map<GlobalStreamId, Grouping> inputs = common.get_inputs();<br/>\n    +for (Map.Entry<GlobalStreamId, Grouping> input : inputs.entrySet()) {<br/>\n    +    String sourceStreamId = input.getKey().get_streamId();<br/>\n    +    String sourceComponentId = input.getKey().get_componentId();<br/>\n    +    if(componentMap.keySet().contains(sourceComponentId) == false) </p>\n{\n    +throw new InvalidTopologyException(\"Component: [\" + componentId + \"] subscribes from non-existent component [\" + sourceComponentId + \"]\");\n    +    }\n<p>    +<br/>\n    +    ComponentCommon sourceComponent = getComponentCommon(componentMap.get(sourceComponentId));<br/>\n    +    if (sourceComponent == null || sourceComponent.get_streams().containsKey(sourceStreamId) == false) </p>\n{\n    +throw new InvalidTopologyException(\"Component: [\" + componentId + \"] subscribes from non-existent stream: \" +\n    +\"[\" + sourceStreamId + \"] of component [\" + sourceComponentId + \"]\");\n    +    }\n<p>    +<br/>\n    +    Grouping grouping = input.getValue();<br/>\n    +    if (Thrift.groupingType(grouping) == Grouping._Fields.FIELDS) {<br/>\n    +List<String> fields = grouping.get_fields();<br/>\n    +Map<String, StreamInfo> streams = sourceComponent.get_streams();<br/>\n    +Set<String> sourceOutputFields = getStreamOutputFields(streams);<br/>\n    +if (sourceOutputFields.containsAll(fields) == false) </p>\n{\n    +    throw new InvalidTopologyException(\"Component: [\" + componentId + \"] subscribes from stream: [\" + sourceStreamId  +\"] of component \" +\n    +    \"[\" + sourceComponentId + \"] + with non-existent fields: \" + fields);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map<GlobalStreamId, Grouping> ackerInputs(StormTopology topology) {<br/>\n    +Map<GlobalStreamId, Grouping> inputs = new HashMap<GlobalStreamId, Grouping>();<br/>\n    +Set<String> boltIds = topology.get_bolts().keySet();<br/>\n    +Set<String> spoutIds = topology.get_spouts().keySet();<br/>\n    +<br/>\n    +for(String id : spoutIds) </p>\n{\n    +    inputs.put(Utils.getGlobalStreamId(id, ACKER_INIT_STREAM_ID), Thrift.prepareFieldsGrouping(Arrays.asList(\"id\")));\n    +}\n<p>    +<br/>\n    +for(String id : boltIds) </p>\n{\n    +    inputs.put(Utils.getGlobalStreamId(id, ACKER_ACK_STREAM_ID), Thrift.prepareFieldsGrouping(Arrays.asList(\"id\")));\n    +    inputs.put(Utils.getGlobalStreamId(id, ACKER_FAIL_STREAM_ID), Thrift.prepareFieldsGrouping(Arrays.asList(\"id\")));\n    +}\n<p>    +return inputs;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String clusterId = null;<br/>\n    +    public static IBolt makeAckerBolt() </p>\n{\n    +return _instance.makeAckerBoltImpl();\n    +    }\n<p>    +    public IBolt makeAckerBoltImpl() </p>\n{\n    +return new Acker();\n    +    }\n<p>    +<br/>\n    +    public static void addAcker(Map conf, StormTopology topology) {<br/>\n    +int ackerNum = Utils.getInt(conf.get(Config.TOPOLOGY_ACKER_EXECUTORS), Utils.getInt(conf.get(Config.TOPOLOGY_WORKERS)));<br/>\n    +Map<GlobalStreamId, Grouping> inputs = ackerInputs(topology);<br/>\n    +<br/>\n    +Map<String, StreamInfo> outputStreams = new HashMap<String, StreamInfo>();<br/>\n    +outputStreams.put(ACKER_ACK_STREAM_ID, Thrift.directOutputFields(Arrays.asList(\"id\")));<br/>\n    +outputStreams.put(ACKER_FAIL_STREAM_ID, Thrift.directOutputFields(Arrays.asList(\"id\")));<br/>\n    +<br/>\n    +Map<String, Object> ackerConf = new HashMap<String, Object>();<br/>\n    +ackerConf.put(Config.TOPOLOGY_TASKS, ackerNum);<br/>\n    +ackerConf.put(Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS, Utils.getInt(conf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)));<br/>\n    +<br/>\n    +Bolt acker = Thrift.prepareSerializedBoltDetails(inputs, makeAckerBolt(), outputStreams, ackerNum, ackerConf);<br/>\n    +<br/>\n    +for(Bolt bolt : topology.get_bolts().values()) </p>\n{\n    +    ComponentCommon common = bolt.get_common();\n    +    common.put_to_streams(ACKER_ACK_STREAM_ID, Thrift.outputFields(Arrays.asList(\"id\", \"ack-val\")));\n    +    common.put_to_streams(ACKER_FAIL_STREAM_ID, Thrift.outputFields(Arrays.asList(\"id\")));\n    +}\n<p>    +<br/>\n    +for (SpoutSpec spout : topology.get_spouts().values()) </p>\n{\n    +    ComponentCommon common = spout.get_common();\n    +    Map spoutConf = componentConf(spout);\n    +    spoutConf.put(Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS, Utils.getInt(conf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)));\n    +    common.set_json_conf(JSONValue.toJSONString(spoutConf));\n    +    common.put_to_streams(ACKER_INIT_STREAM_ID, Thrift.outputFields(Arrays.asList(\"id\", \"init-val\", \"spout-task\")));\n    +    common.put_to_inputs(Utils.getGlobalStreamId(ACKER_COMPONENT_ID, ACKER_ACK_STREAM_ID), Thrift.prepareDirectGrouping());\n    +    common.put_to_inputs(Utils.getGlobalStreamId(ACKER_COMPONENT_ID, ACKER_FAIL_STREAM_ID), Thrift.prepareDirectGrouping());\n    +}\n<p>    +<br/>\n    +topology.put_to_bolts(ACKER_COMPONENT_ID, acker);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static ComponentCommon getComponentCommon(Object component) {<br/>\n    +if (component == null) </p>\n{\n    +    return null;\n    +}\n<p>    +<br/>\n    +ComponentCommon common = null;<br/>\n    +if (component instanceof StateSpoutSpec) </p>\n{\n    +    common = ((StateSpoutSpec) component).get_common();\n    +}\n<p> else if (component instanceof SpoutSpec) </p>\n{\n    +    common = ((SpoutSpec) component).get_common();\n    +}\n<p> else if (component instanceof Bolt) </p>\n{\n    +    common = ((Bolt) component).get_common();\n    +}\n<p>    +return common;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void addMetricStreams(StormTopology topology) {<br/>\n    +for (Object component : allComponents(topology).values()) {<br/>\n    +    ComponentCommon common = getComponentCommon(component);<br/>\n    +    if (common != null) </p>\n{\n    +StreamInfo streamInfo = Thrift.outputFields(Arrays.asList(\"task-info\", \"data-points\"));\n    +common.put_to_streams(Constants.METRICS_STREAM_ID, streamInfo);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void addSystemStreams(StormTopology topology) {<br/>\n    +for (Object component : allComponents(topology).values()) {<br/>\n    +    ComponentCommon common = getComponentCommon(component);<br/>\n    +    if (common != null) </p>\n{\n    +StreamInfo streamInfo = Thrift.outputFields(Arrays.asList(\"event\"));\n    +common.put_to_streams(SYSTEM_STREAM_ID, streamInfo);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static List<String> eventLoggerBoltFields() </p>\n{\n    +List<String> fields = Arrays.asList(EventLoggerBolt.FIELD_COMPONENT_ID, EventLoggerBolt.FIELD_MESSAGE_ID, EventLoggerBolt.FIELD_TS,\n    +EventLoggerBolt.FIELD_VALUES);\n    +return fields;\n    +    }\n<p>    +<br/>\n    +    public static Map<GlobalStreamId, Grouping> eventLoggerInputs(StormTopology topology) {<br/>\n    +Map<GlobalStreamId, Grouping> inputs = new HashMap<GlobalStreamId, Grouping>();<br/>\n    +Set<String> allIds = new HashSet<String>();<br/>\n    +allIds.addAll(topology.get_bolts().keySet());<br/>\n    +allIds.addAll(topology.get_spouts().keySet());<br/>\n    +<br/>\n    +for(String id : allIds) </p>\n{\n    +    inputs.put(Utils.getGlobalStreamId(id, EVENTLOGGER_STREAM_ID), Thrift.prepareFieldsGrouping(Arrays.asList(\"component-id\")));\n    +}\n<p>    +return inputs;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void addEventLogger(Map conf, StormTopology topology) {<br/>\n    +Integer numExecutors = Utils.getInt(conf.get(Config.TOPOLOGY_EVENTLOGGER_EXECUTORS), Utils.getInt(conf.get(Config.TOPOLOGY_WORKERS)));<br/>\n    +HashMap<String, Object> componentConf = new HashMap<String, Object>();<br/>\n    +componentConf.put(Config.TOPOLOGY_TASKS, numExecutors);<br/>\n    +componentConf.put(Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS, Utils.getInt(conf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS)));<br/>\n    +Bolt eventLoggerBolt = Thrift.prepareSerializedBoltDetails(eventLoggerInputs(topology), new EventLoggerBolt(), null, numExecutors, componentConf);<br/>\n    +<br/>\n    +for(Object component : allComponents(topology).values()) {<br/>\n    +    ComponentCommon common = getComponentCommon(component);<br/>\n    +    if (common != null) </p>\n{\n    +common.put_to_streams(EVENTLOGGER_STREAM_ID, Thrift.outputFields(eventLoggerBoltFields()));\n    +    }\n<p>    +}<br/>\n    +topology.put_to_bolts(EVENTLOGGER_COMPONENT_ID, eventLoggerBolt);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map<String, Bolt> metricsConsumerBoltSpecs(Map conf, StormTopology topology) {<br/>\n    +Map<String, Bolt> metricsConsumerBolts = new HashMap<String, Bolt>();<br/>\n    +<br/>\n    +Set<String> componentIdsEmitMetrics = new HashSet<String>();<br/>\n    +componentIdsEmitMetrics.addAll(allComponents(topology).keySet());<br/>\n    +componentIdsEmitMetrics.add(Constants.SYSTEM_COMPONENT_ID);<br/>\n    +<br/>\n    +Map<GlobalStreamId, Grouping> inputs = new HashMap<GlobalStreamId, Grouping>();<br/>\n    +for (String componentId : componentIdsEmitMetrics) </p>\n{\n    +    inputs.put(Utils.getGlobalStreamId(componentId, Constants.METRICS_STREAM_ID), Thrift.prepareShuffleGrouping());\n    +}\n<p>    +<br/>\n    +List<Map<String, Object>> registerInfo = (List<Map<String, Object>>) conf.get(Config.TOPOLOGY_METRICS_CONSUMER_REGISTER);<br/>\n    +if (registerInfo != null) {<br/>\n    +    Map<String, Integer> classOccurrencesMap = new HashMap<String, Integer>();<br/>\n    +    for (Map<String, Object> info : registerInfo) {<br/>\n    +String className = (String) info.get(\"class\");<br/>\n    +Object argument = info.get(\"argument\");<br/>\n    +Integer phintNum = Utils.getInt(info.get(\"parallelism.hint\"), 1);<br/>\n    +Map<String, Object> metricsConsumerConf = new HashMap<String, Object>();<br/>\n    +metricsConsumerConf.put(Config.TOPOLOGY_TASKS, phintNum);<br/>\n    +Bolt metricsConsumerBolt = Thrift.prepareSerializedBoltDetails(inputs, new MetricsConsumerBolt(className, argument), null, phintNum, metricsConsumerConf);<br/>\n    +<br/>\n    +String id = className;<br/>\n    +if (classOccurrencesMap.containsKey(className)) </p>\n{\n    +    // e.g. [\\\"a\\\", \\\"b\\\", \\\"a\\\"]) => [\\\"a\\\", \\\"b\\\", \\\"a#2\\\"]\"\n    +    int occurrenceNum = classOccurrencesMap.get(className);\n    +    occurrenceNum++;\n    +    classOccurrencesMap.put(className, occurrenceNum);\n    +    id = Constants.METRICS_COMPONENT_ID_PREFIX + className + \"#\" + occurrenceNum;\n    +}\n<p> else </p>\n{\n    +    classOccurrencesMap.put(className, 1);\n    +}\n<p>    +metricsConsumerBolts.put(id, metricsConsumerBolt);<br/>\n    +    }<br/>\n    +}<br/>\n    +return metricsConsumerBolts;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void addMetricComponents(Map conf, StormTopology topology) {<br/>\n    +Map<String, Bolt> metricsConsumerBolts = metricsConsumerBoltSpecs(conf, topology);<br/>\n    +for (Map.Entry<String, Bolt> entry : metricsConsumerBolts.entrySet()) </p>\n{\n    +    topology.put_to_bolts(entry.getKey(), entry.getValue());\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static void addSystemComponents(Map conf, StormTopology topology) </p>\n{\n    +Map<String, StreamInfo> outputStreams = new HashMap<String, StreamInfo>();\n    +outputStreams.put(Constants.SYSTEM_TICK_STREAM_ID, Thrift.outputFields(Arrays.asList(\"rate_secs\")));\n    +outputStreams.put(Constants.METRICS_TICK_STREAM_ID, Thrift.outputFields(Arrays.asList(\"interval\")));\n    +outputStreams.put(Constants.CREDENTIALS_CHANGED_STREAM_ID, Thrift.outputFields(Arrays.asList(\"creds\")));\n    +\n    +Map<String, Object> boltConf = new HashMap<String, Object>();\n    +boltConf.put(Config.TOPOLOGY_TASKS, 0);\n    +\n    +Bolt systemBoltSpec = Thrift.prepareSerializedBoltDetails(null, new SystemBolt(), outputStreams, 0, boltConf);\n    +topology.put_to_bolts(Constants.SYSTEM_COMPONENT_ID, systemBoltSpec);\n    +    }\n<p>    +<br/>\n    +    public static StormTopology systemTopology(Map stormConf, StormTopology topology) throws InvalidTopologyException </p>\n{\n    +return _instance.systemTopologyImpl(stormConf, topology);\n    +    }\n<p>    +<br/>\n    +    protected StormTopology systemTopologyImpl(Map stormConf, StormTopology topology) throws InvalidTopologyException </p>\n{\n    +validateBasic(topology);\n    +\n    +StormTopology ret = topology.deepCopy();\n    +addAcker(stormConf, ret);\n    +addEventLogger(stormConf, ret);\n    +addMetricComponents(stormConf, ret);\n    +addSystemComponents(stormConf, ret);\n    +addMetricStreams(ret);\n    +addSystemStreams(ret);\n    +\n    +validateStructure(ret);\n    +\n    +return ret;\n    +    }\n<p>    +<br/>\n    +    public static boolean hasAckers(Map stormConf) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    hasAckers and hasEventLoggers is only called in executor so they can be moved there or you can move them to ConfigUtils.java since these functions solely operate on conf. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612651890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/192233525","html_url":"https://github.com/apache/storm/pull/1150#issuecomment-192233525","issue_url":"https://api.github.com/repos/apache/storm/issues/1150","id":192233525,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjIzMzUyNQ==","user":{"login":"wuchong","id":5378924,"node_id":"MDQ6VXNlcjUzNzg5MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/5378924?v=4","gravatar_id":"","url":"https://api.github.com/users/wuchong","html_url":"https://github.com/wuchong","followers_url":"https://api.github.com/users/wuchong/followers","following_url":"https://api.github.com/users/wuchong/following{/other_user}","gists_url":"https://api.github.com/users/wuchong/gists{/gist_id}","starred_url":"https://api.github.com/users/wuchong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wuchong/subscriptions","organizations_url":"https://api.github.com/users/wuchong/orgs","repos_url":"https://api.github.com/users/wuchong/repos","events_url":"https://api.github.com/users/wuchong/events{/privacy}","received_events_url":"https://api.github.com/users/wuchong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T11:00:13Z","updated_at":"2016-03-04T11:00:13Z","author_association":"MEMBER","body":"@revans2  can you have a look ?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/192233525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647915","html_url":"https://github.com/apache/storm/issues/5087#issuecomment-2612647915","issue_url":"https://api.github.com/repos/apache/storm/issues/5087","id":2612647915,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDc5MTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T11:00:14Z","updated_at":"2025-01-24T14:21:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user wuchong commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1150#issuecomment-192233525\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1150#issuecomment-192233525</a></p>\n\n<p>    @revans2  can you have a look ?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/192244223","html_url":"https://github.com/apache/storm/pull/1147#issuecomment-192244223","issue_url":"https://api.github.com/repos/apache/storm/issues/1147","id":192244223,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjI0NDIyMw==","user":{"login":"unsleepy22","id":631361,"node_id":"MDQ6VXNlcjYzMTM2MQ==","avatar_url":"https://avatars.githubusercontent.com/u/631361?v=4","gravatar_id":"","url":"https://api.github.com/users/unsleepy22","html_url":"https://github.com/unsleepy22","followers_url":"https://api.github.com/users/unsleepy22/followers","following_url":"https://api.github.com/users/unsleepy22/following{/other_user}","gists_url":"https://api.github.com/users/unsleepy22/gists{/gist_id}","starred_url":"https://api.github.com/users/unsleepy22/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/unsleepy22/subscriptions","organizations_url":"https://api.github.com/users/unsleepy22/orgs","repos_url":"https://api.github.com/users/unsleepy22/repos","events_url":"https://api.github.com/users/unsleepy22/events{/privacy}","received_events_url":"https://api.github.com/users/unsleepy22/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T11:34:28Z","updated_at":"2016-03-04T11:34:28Z","author_association":"NONE","body":"@revans2 I get your idea and you don't have to go through all of them, my initial thought was to keep it compatible with original clojure data structures, but I'm ok to change all of them, I will update in a day or two~\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/192244223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648391","html_url":"https://github.com/apache/storm/issues/5089#issuecomment-2612648391","issue_url":"https://api.github.com/repos/apache/storm/issues/5089","id":2612648391,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDgzOTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T11:34:29Z","updated_at":"2025-01-24T14:21:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user unsleepy22 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1147#issuecomment-192244223\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1147#issuecomment-192244223</a></p>\n\n<p>    @revans2 I get your idea and you don't have to go through all of them, my initial thought was to keep it compatible with original clojure data structures, but I'm ok to change all of them, I will update in a day or two~</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/192304011","html_url":"https://github.com/apache/storm/pull/1147#issuecomment-192304011","issue_url":"https://api.github.com/repos/apache/storm/issues/1147","id":192304011,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjMwNDAxMQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T14:35:16Z","updated_at":"2016-03-04T14:35:16Z","author_association":"CONTRIBUTOR","body":"@unsleepy22 I understand the desire to keep them compatible, and that is a decent first step, but one of the goals of this translation is to remove the clojure entirely as a dependency for storm-core.  If we have java code still using it we cannot do that.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/192304011/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648395","html_url":"https://github.com/apache/storm/issues/5089#issuecomment-2612648395","issue_url":"https://api.github.com/repos/apache/storm/issues/5089","id":2612648395,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDgzOTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T14:35:17Z","updated_at":"2025-01-24T14:21:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1147#issuecomment-192304011\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1147#issuecomment-192304011</a></p>\n\n<p>    @unsleepy22 I understand the desire to keep them compatible, and that is a decent first step, but one of the goals of this translation is to remove the clojure entirely as a dependency for storm-core.  If we have java code still using it we cannot do that.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648395/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647920","html_url":"https://github.com/apache/storm/issues/5087#issuecomment-2612647920","issue_url":"https://api.github.com/repos/apache/storm/issues/5087","id":2612647920,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDc5MjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T14:44:30Z","updated_at":"2025-01-24T14:21:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1150#discussion_r55037499\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1150#discussion_r55037499</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/serialization/SerializationTest.java &#8212;<br/>\n    @@ -0,0 +1,125 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.serialization;<br/>\n    +<br/>\n    +import com.google.common.collect.Lists;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.testing.TestSerObject;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.junit.Assert;<br/>\n    +import org.junit.Test;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class SerializationTest {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(SerializationTest.class);<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testJavaSerialization() {<br/>\n    +Object obj = new TestSerObject(1, 2);<br/>\n    +List<Object> vals = Lists.newArrayList(obj);<br/>\n    +<br/>\n    +Map<String, Object> conf = new HashMap<>();<br/>\n    +conf.put(Config.TOPOLOGY_KRYO_REGISTER, new HashMap<String, String>() {{<br/>\n    +    put(\"org.apache.storm.testing.TestSerObject\", null);<br/>\n    +}});<br/>\n    +conf.put(Config.TOPOLOGY_FALL_BACK_ON_JAVA_SERIALIZATION, false);<br/>\n    +try </p>\n{\n    +    roundtrip(vals, conf);\n    +    Assert.fail(\"Expected Exception not Thrown for config: \" + conf);\n    +}\n<p> catch (Exception e) </p>\n{\n    +}<br/>\n    +<br/>\n    +conf.clear();<br/>\n    +conf.put(Config.TOPOLOGY_FALL_BACK_ON_JAVA_SERIALIZATION, true);<br/>\n    +Assert.assertEquals(vals, roundtrip(vals, conf));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testKryoDecorator() {<br/>\n    +Object obj = new TestSerObject(1, 2);<br/>\n    +List<Object> vals = Lists.newArrayList(obj);<br/>\n    +<br/>\n    +Map<String, Object> conf = new HashMap<>();<br/>\n    +conf.put(Config.TOPOLOGY_FALL_BACK_ON_JAVA_SERIALIZATION, false);<br/>\n    +try {\n    +    roundtrip(vals, conf);\n    +    Assert.fail(\"Expected Exception not Thrown for config: \" + conf);\n    +} catch (Exception e) {    +}\n<p>    +<br/>\n    +conf.put(Config.TOPOLOGY_KRYO_DECORATORS, Lists.newArrayList(\"org.apache.storm.testing.TestKryoDecorator\"));<br/>\n    +Assert.assertEquals(vals, roundtrip(vals, conf));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testStringSerialization() </p>\n{\n    +isRoundtrip(Lists.newArrayList(\"a\", \"bb\", \"cbe\"));\n    +isRoundtrip(Lists.newArrayList(mkString(64 * 1024)));\n    +isRoundtrip(Lists.newArrayList(mkString(1024 * 1024)));\n    +isRoundtrip(Lists.newArrayList(mkString(1024 * 1024 * 2)));\n    +    }\n<p>    +<br/>\n    +    private Map mkConf(Map extra) </p>\n{\n    +Map config = Utils.readDefaultConfig();\n    +config.putAll(extra);\n    +return config;\n    +    }\n<p>    +<br/>\n    +    private byte[] serialize(List vals, Map conf) throws IOException </p>\n{\n    +KryoValuesSerializer serializer = new KryoValuesSerializer(mkConf(conf));\n    +return serializer.serialize(vals);\n    +    }\n<p>    +<br/>\n    +    private List deserialize(byte[] bytes, Map conf) throws IOException </p>\n{\n    +KryoValuesDeserializer deserializer = new KryoValuesDeserializer(mkConf(conf));\n    +return deserializer.deserialize(bytes);\n    +    }\n<p>    +<br/>\n    +    private List roundtrip(List vals) </p>\n{\n    +return roundtrip(vals, new HashMap());\n    +    }\n<p>    +<br/>\n    +    private List roundtrip(List vals, Map conf) {<br/>\n    +List ret = null;<br/>\n    +try </p>\n{\n    +    ret = deserialize(serialize(vals, conf), conf);\n    +}\n<p> catch (IOException e) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I would prefer to have the IOException thrown by roundtrip.  Catching it will still cause the test to fail, but it will be harder to debug.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/192307424","html_url":"https://github.com/apache/storm/pull/1150#issuecomment-192307424","issue_url":"https://api.github.com/repos/apache/storm/issues/1150","id":192307424,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjMwNzQyNA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T14:47:22Z","updated_at":"2016-03-04T14:47:22Z","author_association":"CONTRIBUTOR","body":"Just one minor comment.  I am +1 even without the update.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/192307424/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647921","html_url":"https://github.com/apache/storm/issues/5087#issuecomment-2612647921","issue_url":"https://api.github.com/repos/apache/storm/issues/5087","id":2612647921,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDc5MjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T14:47:23Z","updated_at":"2025-01-24T14:21:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1150#issuecomment-192307424\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1150#issuecomment-192307424</a></p>\n\n<p>    Just one minor comment.  I am +1 even without the update.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/192318678","html_url":"https://github.com/apache/storm/pull/1181#issuecomment-192318678","issue_url":"https://api.github.com/repos/apache/storm/issues/1181","id":192318678,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjMxODY3OA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T15:19:22Z","updated_at":"2016-03-04T15:19:22Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/192318678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879699","html_url":"https://github.com/apache/storm/issues/5436#issuecomment-2612879699","issue_url":"https://api.github.com/repos/apache/storm/issues/5436","id":2612879699,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Nzk2OTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T15:19:23Z","updated_at":"2025-01-24T16:05:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1181#issuecomment-192318678\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1181#issuecomment-192318678</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879699/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/192324639","html_url":"https://github.com/apache/storm/pull/1182#issuecomment-192324639","issue_url":"https://api.github.com/repos/apache/storm/issues/1182","id":192324639,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjMyNDYzOQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T15:31:56Z","updated_at":"2016-03-04T15:31:56Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/192324639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879705","html_url":"https://github.com/apache/storm/issues/5436#issuecomment-2612879705","issue_url":"https://api.github.com/repos/apache/storm/issues/5436","id":2612879705,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Nzk3MDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T15:31:57Z","updated_at":"2025-01-24T16:05:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1182#issuecomment-192324639\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1182#issuecomment-192324639</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879705/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/192325237","html_url":"https://github.com/apache/storm/pull/1176#issuecomment-192325237","issue_url":"https://api.github.com/repos/apache/storm/issues/1176","id":192325237,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjMyNTIzNw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T15:34:10Z","updated_at":"2016-03-04T15:34:10Z","author_association":"CONTRIBUTOR","body":"Please move MockAutoCred from `src/jvm/org/apache/storm` to `test/jvm/org/apache/storm`.  The test still passes, and it was only put in the src directory because of problems with compiling clojure vs interpretation.\n\nAfter that I am +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/192325237/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657267","html_url":"https://github.com/apache/storm/issues/5119#issuecomment-2612657267","issue_url":"https://api.github.com/repos/apache/storm/issues/5119","id":2612657267,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTcyNjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T15:34:11Z","updated_at":"2025-01-24T14:25:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1176#issuecomment-192325237\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1176#issuecomment-192325237</a></p>\n\n<p>    Please move MockAutoCred from `src/jvm/org/apache/storm` to `test/jvm/org/apache/storm`.  The test still passes, and it was only put in the src directory because of problems with compiling clojure vs interpretation.</p>\n\n<p>    After that I am +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879712","html_url":"https://github.com/apache/storm/issues/5436#issuecomment-2612879712","issue_url":"https://api.github.com/repos/apache/storm/issues/5436","id":2612879712,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Nzk3MTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T15:45:07Z","updated_at":"2025-01-24T16:05:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1181\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1181</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879717","html_url":"https://github.com/apache/storm/issues/5436#issuecomment-2612879717","issue_url":"https://api.github.com/repos/apache/storm/issues/5436","id":2612879717,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Nzk3MTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T15:45:25Z","updated_at":"2025-01-24T16:05:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1182\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1182</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879723","html_url":"https://github.com/apache/storm/issues/5436#issuecomment-2612879723","issue_url":"https://api.github.com/repos/apache/storm/issues/5436","id":2612879723,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Nzk3MjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T15:48:09Z","updated_at":"2025-01-24T16:05:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kishorvpatil\" class=\"user-hover\" rel=\"kishorvpatil\">Kishor Patil</a>,</p>\n\n<p>I merged this into master and 1.x-branch</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612879723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/192330629","html_url":"https://github.com/apache/storm/pull/1176#issuecomment-192330629","issue_url":"https://api.github.com/repos/apache/storm/issues/1176","id":192330629,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjMzMDYyOQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T15:51:31Z","updated_at":"2016-03-04T15:51:31Z","author_association":"CONTRIBUTOR","body":"@abhishekagarwal87 actually I'll just do it as part of the check-in.  There is no code change so it should be fine.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/192330629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657272","html_url":"https://github.com/apache/storm/issues/5119#issuecomment-2612657272","issue_url":"https://api.github.com/repos/apache/storm/issues/5119","id":2612657272,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTcyNzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T15:51:32Z","updated_at":"2025-01-24T14:25:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1176#issuecomment-192330629\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1176#issuecomment-192330629</a></p>\n\n<p>    @abhishekagarwal87 actually I'll just do it as part of the check-in.  There is no code change so it should be fine.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657275","html_url":"https://github.com/apache/storm/issues/5119#issuecomment-2612657275","issue_url":"https://api.github.com/repos/apache/storm/issues/5119","id":2612657275,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTcyNzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T16:25:25Z","updated_at":"2025-01-24T14:25:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1176\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1176</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657285","html_url":"https://github.com/apache/storm/issues/5119#issuecomment-2612657285","issue_url":"https://api.github.com/repos/apache/storm/issues/5119","id":2612657285,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTcyODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T16:26:44Z","updated_at":"2025-01-24T14:25:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=abhishek.agarwal\" class=\"user-hover\" rel=\"abhishek.agarwal\">Abhishek Agarwal</a>,</p>\n\n<p>I merged this into master.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/192350355","html_url":"https://github.com/apache/storm/pull/1176#issuecomment-192350355","issue_url":"https://api.github.com/repos/apache/storm/issues/1176","id":192350355,"node_id":"MDEyOklzc3VlQ29tbWVudDE5MjM1MDM1NQ==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T16:42:52Z","updated_at":"2016-03-04T16:42:52Z","author_association":"CONTRIBUTOR","body":"Thanks @revans2 \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/192350355/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657292","html_url":"https://github.com/apache/storm/issues/5119#issuecomment-2612657292","issue_url":"https://api.github.com/repos/apache/storm/issues/5119","id":2612657292,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTcyOTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-04T16:42:53Z","updated_at":"2025-01-24T14:25:51Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1176#issuecomment-192350355\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1176#issuecomment-192350355</a></p>\n\n<p>    Thanks @revans2 </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612657292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]