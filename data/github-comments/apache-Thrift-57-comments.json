[{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1052083356","html_url":"https://github.com/apache/thrift/pull/2534#issuecomment-1052083356","issue_url":"https://api.github.com/repos/apache/thrift/issues/2534","id":1052083356,"node_id":"IC_kwDOAAS9U84-tYSc","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-26T12:02:31Z","updated_at":"2022-02-26T12:04:54Z","author_association":"MEMBER","body":"Any idea why it fails?\r\n> Plugin [id: 'com.github.johnrengelman.shadow', version: '4.0.4'] was not found in any of the following sources:\r\n\r\nEDIT: Seems the plugin is simply outdated.\r\nhttps://plugins.gradle.org/plugin/com.github.johnrengelman.plugin-shadow\r\nNot to be confused with\r\nhttps://plugins.gradle.org/plugin/com.github.johnrengelman.shadow\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1052083356/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1052092385","html_url":"https://github.com/apache/thrift/pull/2534#issuecomment-1052092385","issue_url":"https://api.github.com/repos/apache/thrift/issues/2534","id":1052092385,"node_id":"IC_kwDOAAS9U84-tafh","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-26T12:09:53Z","updated_at":"2022-02-26T12:09:53Z","author_association":"MEMBER","body":"https://issues.apache.org/jira/browse/THRIFT-5530","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1052092385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1052093920","html_url":"https://github.com/apache/thrift/pull/2528#issuecomment-1052093920","issue_url":"https://api.github.com/repos/apache/thrift/issues/2528","id":1052093920,"node_id":"IC_kwDOAAS9U84-ta3g","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-26T12:11:10Z","updated_at":"2022-02-26T12:11:10Z","author_association":"MEMBER","body":"```\r\nThe following packages have unmet dependencies:\r\n erlang : Depends: erlang-odbc\r\nE: Unable to correct problems, you have held broken packages.\r\nThe command '/bin/sh -c apt-get install -y --no-install-recommends   `# Erlang dependencies`   erlang &&   wget https://s3.amazonaws.com/rebar3/rebar3 -O /usr/bin/rebar3 &&   chmod 755 /usr/bin/rebar3 &&   rebar3 --version' returned a non-zero code: 100\r\n```","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1052093920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1053882220","html_url":"https://github.com/apache/thrift/pull/2533#issuecomment-1053882220","issue_url":"https://api.github.com/repos/apache/thrift/issues/2533","id":1053882220,"node_id":"IC_kwDOAAS9U84-0Pds","user":{"login":"ferrirW","id":42178996,"node_id":"MDQ6VXNlcjQyMTc4OTk2","avatar_url":"https://avatars.githubusercontent.com/u/42178996?v=4","gravatar_id":"","url":"https://api.github.com/users/ferrirW","html_url":"https://github.com/ferrirW","followers_url":"https://api.github.com/users/ferrirW/followers","following_url":"https://api.github.com/users/ferrirW/following{/other_user}","gists_url":"https://api.github.com/users/ferrirW/gists{/gist_id}","starred_url":"https://api.github.com/users/ferrirW/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ferrirW/subscriptions","organizations_url":"https://api.github.com/users/ferrirW/orgs","repos_url":"https://api.github.com/users/ferrirW/repos","events_url":"https://api.github.com/users/ferrirW/events{/privacy}","received_events_url":"https://api.github.com/users/ferrirW/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-28T04:40:19Z","updated_at":"2022-02-28T05:47:27Z","author_association":"NONE","body":"> For the sake of consistency, we should aim to use\r\n> DEFAULT_RECURSION_LIMIT = 64;\r\n> DEFAULT_MAX_MESSAGE_SIZE = 100 * 1024 * 1024; // 100 MB\r\n> DEFAULT_MAX_FRAME_SIZE = 16384000; // this value is used consistently across all Thrift libraries\r\n\r\nIs it a good idea to use TConfiguration maxFrameSize？\r\n1. static final constant DEFAULT_MAX_FRAME_SIZE is not able for customization.\r\n2. so i have to use trans_.getConfiguration().getMaxFrameSize(), but that means many class need to be modified(TNonblockingSocket, TNonblockingServerSocket, AbstractServerTransportArgs, NonblockingAbstractServerSocketArgs and TEndpointTransport)\r\n3. and if i want use it in 0.9.1, i must add TConfiguration-related code\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1053882220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1053983075","html_url":"https://github.com/apache/thrift/pull/2533#issuecomment-1053983075","issue_url":"https://api.github.com/repos/apache/thrift/issues/2533","id":1053983075,"node_id":"IC_kwDOAAS9U84-0oFj","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-28T07:55:35Z","updated_at":"2022-02-28T07:55:35Z","author_association":"MEMBER","body":"> if i want use it in 0.9.1, i must\r\n\r\nUsing 0.9.1 is discouraged anyways, there are a number of CVEs between that version and today. If you make the decision for yourself, that's perfectly fine. But you also live with all the consequences of such decision, because you work on your own fork then. Wouldn't recommend it, but it's a free country, you know.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1053983075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1053983980","html_url":"https://github.com/apache/thrift/pull/2533#issuecomment-1053983980","issue_url":"https://api.github.com/repos/apache/thrift/issues/2533","id":1053983980,"node_id":"IC_kwDOAAS9U84-0oTs","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-28T07:56:56Z","updated_at":"2022-02-28T07:56:56Z","author_association":"MEMBER","body":"> static final constant DEFAULT_MAX_FRAME_SIZE is not able for customization.\r\n\r\nRight, that's why it is called DEFAULT_xxx and not \"current frame size\" or the like. It's the default when you don't specify anything else.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1053983980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1054333125","html_url":"https://github.com/apache/thrift/pull/2534#issuecomment-1054333125","issue_url":"https://api.github.com/repos/apache/thrift/issues/2534","id":1054333125,"node_id":"IC_kwDOAAS9U84-19jF","user":{"login":"alex-kormukhin","id":99888299,"node_id":"U_kgDOBfQsqw","avatar_url":"https://avatars.githubusercontent.com/u/99888299?v=4","gravatar_id":"","url":"https://api.github.com/users/alex-kormukhin","html_url":"https://github.com/alex-kormukhin","followers_url":"https://api.github.com/users/alex-kormukhin/followers","following_url":"https://api.github.com/users/alex-kormukhin/following{/other_user}","gists_url":"https://api.github.com/users/alex-kormukhin/gists{/gist_id}","starred_url":"https://api.github.com/users/alex-kormukhin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alex-kormukhin/subscriptions","organizations_url":"https://api.github.com/users/alex-kormukhin/orgs","repos_url":"https://api.github.com/users/alex-kormukhin/repos","events_url":"https://api.github.com/users/alex-kormukhin/events{/privacy}","received_events_url":"https://api.github.com/users/alex-kormukhin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-28T14:49:43Z","updated_at":"2022-02-28T14:49:43Z","author_association":"CONTRIBUTOR","body":"Try to fix this with https://github.com/apache/thrift/pull/2536, but may be infrastructure problem (https://github.com/johnrengelman/shadow/issues/221).","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1054333125/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1054765613","html_url":"https://github.com/apache/thrift/pull/2511#issuecomment-1054765613","issue_url":"https://api.github.com/repos/apache/thrift/issues/2511","id":1054765613,"node_id":"IC_kwDOAAS9U84-3nIt","user":{"login":"jeffalder","id":49817386,"node_id":"MDQ6VXNlcjQ5ODE3Mzg2","avatar_url":"https://avatars.githubusercontent.com/u/49817386?v=4","gravatar_id":"","url":"https://api.github.com/users/jeffalder","html_url":"https://github.com/jeffalder","followers_url":"https://api.github.com/users/jeffalder/followers","following_url":"https://api.github.com/users/jeffalder/following{/other_user}","gists_url":"https://api.github.com/users/jeffalder/gists{/gist_id}","starred_url":"https://api.github.com/users/jeffalder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeffalder/subscriptions","organizations_url":"https://api.github.com/users/jeffalder/orgs","repos_url":"https://api.github.com/users/jeffalder/repos","events_url":"https://api.github.com/users/jeffalder/events{/privacy}","received_events_url":"https://api.github.com/users/jeffalder/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-28T22:54:44Z","updated_at":"2022-02-28T22:54:44Z","author_association":"CONTRIBUTOR","body":"@Jens-G When I download the 0.16.0 source and build locally on my Mac, I get the THRIFT-5505 errors. Do you have any plans to release a 0.16.1 that includes this fix, by any chance?\r\n\r\nWe don't use the `netstd` generator so I stubbed it out by removing the files. That's how I was able to get it to build.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1054765613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1055799740","html_url":"https://github.com/apache/thrift/pull/2537#issuecomment-1055799740","issue_url":"https://api.github.com/repos/apache/thrift/issues/2537","id":1055799740,"node_id":"IC_kwDOAAS9U84-7jm8","user":{"login":"finncolman","id":32945465,"node_id":"MDQ6VXNlcjMyOTQ1NDY1","avatar_url":"https://avatars.githubusercontent.com/u/32945465?v=4","gravatar_id":"","url":"https://api.github.com/users/finncolman","html_url":"https://github.com/finncolman","followers_url":"https://api.github.com/users/finncolman/followers","following_url":"https://api.github.com/users/finncolman/following{/other_user}","gists_url":"https://api.github.com/users/finncolman/gists{/gist_id}","starred_url":"https://api.github.com/users/finncolman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/finncolman/subscriptions","organizations_url":"https://api.github.com/users/finncolman/orgs","repos_url":"https://api.github.com/users/finncolman/repos","events_url":"https://api.github.com/users/finncolman/events{/privacy}","received_events_url":"https://api.github.com/users/finncolman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-01T19:50:47Z","updated_at":"2022-03-01T19:50:47Z","author_association":"NONE","body":"The Travis CI build failure doesn't seem to have anything to do with my PR?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1055799740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1055921270","html_url":"https://github.com/apache/thrift/pull/2536#issuecomment-1055921270","issue_url":"https://api.github.com/repos/apache/thrift/issues/2536","id":1055921270,"node_id":"IC_kwDOAAS9U84-8BR2","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-01T22:26:52Z","updated_at":"2022-03-01T22:26:52Z","author_association":"MEMBER","body":"That patch only introduces new problems, so I would say we leave it as it is for now.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1055921270/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1055922291","html_url":"https://github.com/apache/thrift/pull/2534#issuecomment-1055922291","issue_url":"https://api.github.com/repos/apache/thrift/issues/2534","id":1055922291,"node_id":"IC_kwDOAAS9U84-8Bhz","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-01T22:28:21Z","updated_at":"2022-03-01T22:28:21Z","author_association":"MEMBER","body":"Could you force-push? That will trigger another CI run.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1055922291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1055929996","html_url":"https://github.com/apache/thrift/pull/2511#issuecomment-1055929996","issue_url":"https://api.github.com/repos/apache/thrift/issues/2511","id":1055929996,"node_id":"IC_kwDOAAS9U84-8DaM","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-01T22:39:27Z","updated_at":"2022-03-01T22:39:27Z","author_association":"MEMBER","body":"> Do you have any plans to release a 0.16.1 that includes this fix, by any chance?\r\n\r\nNot yet, no. \r\n\r\nYou probably could cherry pick the patch without much problems yourself, or what am I overlooking?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1055929996/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1055990095","html_url":"https://github.com/apache/thrift/pull/2511#issuecomment-1055990095","issue_url":"https://api.github.com/repos/apache/thrift/issues/2511","id":1055990095,"node_id":"IC_kwDOAAS9U84-8SFP","user":{"login":"jeffalder","id":49817386,"node_id":"MDQ6VXNlcjQ5ODE3Mzg2","avatar_url":"https://avatars.githubusercontent.com/u/49817386?v=4","gravatar_id":"","url":"https://api.github.com/users/jeffalder","html_url":"https://github.com/jeffalder","followers_url":"https://api.github.com/users/jeffalder/followers","following_url":"https://api.github.com/users/jeffalder/following{/other_user}","gists_url":"https://api.github.com/users/jeffalder/gists{/gist_id}","starred_url":"https://api.github.com/users/jeffalder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeffalder/subscriptions","organizations_url":"https://api.github.com/users/jeffalder/orgs","repos_url":"https://api.github.com/users/jeffalder/repos","events_url":"https://api.github.com/users/jeffalder/events{/privacy}","received_events_url":"https://api.github.com/users/jeffalder/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-02T00:01:46Z","updated_at":"2022-03-02T00:01:46Z","author_association":"CONTRIBUTOR","body":"Yeah, it might be a better idea for us to maintain a fork.\r\n\r\nIs there any way we can help prevent these kinds of problems in the future, before the release? Do you need additional integration tests, or specific git workflows or something?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1055990095/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057367038","html_url":"https://github.com/apache/thrift/pull/2534#issuecomment-1057367038","issue_url":"https://api.github.com/repos/apache/thrift/issues/2534","id":1057367038,"node_id":"IC_kwDOAAS9U84_BiP-","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-02T20:53:25Z","updated_at":"2022-03-02T21:14:52Z","author_association":"MEMBER","body":"Tons of \"no @param for ...\" warnings, and warning: [deprecation] CoreConnectionPNames in org.apache.http.params has been deprecated. Not sure if they weren't there before already ... yep, old warnings.\r\n\r\nEDIT: Real cause is the limit for the build is exceeded. Travis runs through.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057367038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057411972","html_url":"https://github.com/apache/thrift/pull/2511#issuecomment-1057411972","issue_url":"https://api.github.com/repos/apache/thrift/issues/2511","id":1057411972,"node_id":"IC_kwDOAAS9U84_BtOE","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-02T21:30:41Z","updated_at":"2022-03-02T21:31:57Z","author_association":"MEMBER","body":"> Is there any way we can help prevent these kinds of problems in the future, before the release? Do you need additional integration tests, or specific git workflows or something?\r\n\r\n@jeffalder Great question. It would help to see the builds fail in the existing CI runs. Not sure what needs to be changed (assuming its not a compiler specific thing) but that would certainly help.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057411972/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057529387","html_url":"https://github.com/apache/thrift/pull/2511#issuecomment-1057529387","issue_url":"https://api.github.com/repos/apache/thrift/issues/2511","id":1057529387,"node_id":"IC_kwDOAAS9U84_CJ4r","user":{"login":"jeffalder","id":49817386,"node_id":"MDQ6VXNlcjQ5ODE3Mzg2","avatar_url":"https://avatars.githubusercontent.com/u/49817386?v=4","gravatar_id":"","url":"https://api.github.com/users/jeffalder","html_url":"https://github.com/jeffalder","followers_url":"https://api.github.com/users/jeffalder/followers","following_url":"https://api.github.com/users/jeffalder/following{/other_user}","gists_url":"https://api.github.com/users/jeffalder/gists{/gist_id}","starred_url":"https://api.github.com/users/jeffalder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeffalder/subscriptions","organizations_url":"https://api.github.com/users/jeffalder/orgs","repos_url":"https://api.github.com/users/jeffalder/repos","events_url":"https://api.github.com/users/jeffalder/events{/privacy}","received_events_url":"https://api.github.com/users/jeffalder/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-03T00:14:40Z","updated_at":"2022-03-03T00:14:40Z","author_association":"CONTRIBUTOR","body":"I was building on an M1 Mac. \r\n\r\nI see there are homebrew bottles built; how do those happen? Can you point me to that?\r\n\r\nI also see in `.travis.yml` that the osx builds were causing timeouts, but that looks like a relatively old comment. How was that working?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057529387/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057637013","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1057637013","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1057637013,"node_id":"IC_kwDOAAS9U84_CkKV","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-03T03:47:34Z","updated_at":"2022-03-03T03:47:49Z","author_association":"MEMBER","body":"Thanks for the feedback, regarding\r\n\r\n> I'm guessing it's off by default because of backwards-compatibility... but Thrift has broken stuff like that before, so I wouldn't have a problem with it breaking it here.\r\n\r\ncurrently thrift requires JDK8 so this won't introduce new breakage","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057637013/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057638907","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1057638907","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1057638907,"node_id":"IC_kwDOAAS9U84_Ckn7","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-03T03:52:40Z","updated_at":"2022-03-03T03:52:40Z","author_association":"MEMBER","body":"> but would probably prefer it be on by default.\r\n\r\n@ctubbsii do you suggest that i [flip the default](https://github.com/apache/thrift/pull/2525/files#diff-c59dffe78e4250a1f0450c496300e137aa1631b60488108e237a292a1c2e6789R105) here in this PR?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057638907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057644177","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1057644177","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1057644177,"node_id":"IC_kwDOAAS9U84_Cl6R","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-03T04:05:49Z","updated_at":"2022-03-03T04:05:49Z","author_association":"MEMBER","body":"> > but would probably prefer it be on by default.\r\n> \r\n> @ctubbsii do you suggest that i [flip the default](https://github.com/apache/thrift/pull/2525/files#diff-c59dffe78e4250a1f0450c496300e137aa1631b60488108e237a292a1c2e6789R105) here in this PR?\r\n\r\nI meant backwards-compatibility, in the sense that the generated code wouldn't have a different API, which could cause problems for user code that interfaced with the generated code.\r\n\r\nI would wait for consensus before flipping. I am just one voice, and others may prefer to keep the original behavior they've become accustomed to. I have the luxury of not caring about the previous behavior, because I've never used optional fields in my IDL files before. I expect that my preference is in the minority.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057644177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057645645","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1057645645","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1057645645,"node_id":"IC_kwDOAAS9U84_CmRN","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-03T04:09:00Z","updated_at":"2022-03-03T04:09:10Z","author_association":"MEMBER","body":"> > > but would probably prefer it be on by default.\r\n> > \r\n> > \r\n> > @ctubbsii do you suggest that i [flip the default](https://github.com/apache/thrift/pull/2525/files#diff-c59dffe78e4250a1f0450c496300e137aa1631b60488108e237a292a1c2e6789R105) here in this PR?\r\n> \r\n> I meant backwards-compatibility, in the sense that the generated code wouldn't have a different API, which could cause problems for user code that interfaced with the generated code.\r\n> \r\n> I would wait for consensus before flipping. I am just one voice, and others may prefer to keep the original behavior they've become accustomed to. I have the luxury of not caring about the previous behavior, because I've never used optional fields in my IDL files before. I expect that my preference is in the minority.\r\n\r\nUnderstood. I'd intend to _not_ flip the default, so this and https://github.com/apache/thrift/pull/2524 are only _adding_ features, not altering any existing ones or changing default behaviors. Deprecation of default behaviors or legacy options can happen much later down the road.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1057645645/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1058796782","html_url":"https://github.com/apache/thrift/pull/2489#issuecomment-1058796782","issue_url":"https://api.github.com/repos/apache/thrift/issues/2489","id":1058796782,"node_id":"IC_kwDOAAS9U84_G_Tu","user":{"login":"kainjow","id":271035,"node_id":"MDQ6VXNlcjI3MTAzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/271035?v=4","gravatar_id":"","url":"https://api.github.com/users/kainjow","html_url":"https://github.com/kainjow","followers_url":"https://api.github.com/users/kainjow/followers","following_url":"https://api.github.com/users/kainjow/following{/other_user}","gists_url":"https://api.github.com/users/kainjow/gists{/gist_id}","starred_url":"https://api.github.com/users/kainjow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kainjow/subscriptions","organizations_url":"https://api.github.com/users/kainjow/orgs","repos_url":"https://api.github.com/users/kainjow/repos","events_url":"https://api.github.com/users/kainjow/events{/privacy}","received_events_url":"https://api.github.com/users/kainjow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-04T03:42:11Z","updated_at":"2022-03-04T03:42:11Z","author_association":"CONTRIBUTOR","body":"> We do have plan to drop support for python 2, or python3 before 3.4 (as they are all EOL now), so if we do this after that we don't really have to do any special handling and can just support it blindly. but doing it now means that we still need to handle the case of <3.4 that `IntEnum` is not available?\r\n\r\nYes that's right. But it might also be good to keep this as an option when introduced, and then in a later version make it the new default just to make sure it's stable.\r\n\r\n> I'm pretty sure these 2 travis failures do not show before this pr:\r\n> \r\n> * https://app.travis-ci.com/github/apache/thrift/jobs/556647214\r\n> * https://app.travis-ci.com/github/apache/thrift/jobs/556647215\r\n\r\nah, I only updated the CMake tests, looks like there's also equivalent for Make.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1058796782/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1058875922","html_url":"https://github.com/apache/thrift/pull/2533#issuecomment-1058875922","issue_url":"https://api.github.com/repos/apache/thrift/issues/2533","id":1058875922,"node_id":"IC_kwDOAAS9U84_HSoS","user":{"login":"ferrirW","id":42178996,"node_id":"MDQ6VXNlcjQyMTc4OTk2","avatar_url":"https://avatars.githubusercontent.com/u/42178996?v=4","gravatar_id":"","url":"https://api.github.com/users/ferrirW","html_url":"https://github.com/ferrirW","followers_url":"https://api.github.com/users/ferrirW/followers","following_url":"https://api.github.com/users/ferrirW/following{/other_user}","gists_url":"https://api.github.com/users/ferrirW/gists{/gist_id}","starred_url":"https://api.github.com/users/ferrirW/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ferrirW/subscriptions","organizations_url":"https://api.github.com/users/ferrirW/orgs","repos_url":"https://api.github.com/users/ferrirW/repos","events_url":"https://api.github.com/users/ferrirW/events{/privacy}","received_events_url":"https://api.github.com/users/ferrirW/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-04T06:31:39Z","updated_at":"2022-03-04T06:32:13Z","author_association":"NONE","body":"> Starting a Gradle Daemon (subsequent builds will be faster)\r\n\r\nThis failed because AbstractServerTransportArgs.maxFrameSize is not init. And this problem has been solved.\r\n\r\nBut there seems to be some checks that cannot be pass. Could you please help to check it?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1058875922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1058880825","html_url":"https://github.com/apache/thrift/pull/2533#issuecomment-1058880825","issue_url":"https://api.github.com/repos/apache/thrift/issues/2533","id":1058880825,"node_id":"IC_kwDOAAS9U84_HT05","user":{"login":"ferrirW","id":42178996,"node_id":"MDQ6VXNlcjQyMTc4OTk2","avatar_url":"https://avatars.githubusercontent.com/u/42178996?v=4","gravatar_id":"","url":"https://api.github.com/users/ferrirW","html_url":"https://github.com/ferrirW","followers_url":"https://api.github.com/users/ferrirW/followers","following_url":"https://api.github.com/users/ferrirW/following{/other_user}","gists_url":"https://api.github.com/users/ferrirW/gists{/gist_id}","starred_url":"https://api.github.com/users/ferrirW/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ferrirW/subscriptions","organizations_url":"https://api.github.com/users/ferrirW/orgs","repos_url":"https://api.github.com/users/ferrirW/repos","events_url":"https://api.github.com/users/ferrirW/events{/privacy}","received_events_url":"https://api.github.com/users/ferrirW/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-04T06:41:55Z","updated_at":"2022-03-04T06:41:55Z","author_association":"NONE","body":"> Using 0.9.1 is discouraged anyways\r\n\r\nOur project have many clients exist in projects that other people are responsible for. So each upgrade takes a very long time. Most likely it won't upgrade for now. ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1058880825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059558233","html_url":"https://github.com/apache/thrift/pull/2533#issuecomment-1059558233","issue_url":"https://api.github.com/repos/apache/thrift/issues/2533","id":1059558233,"node_id":"IC_kwDOAAS9U84_J5NZ","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-04T21:52:44Z","updated_at":"2022-03-04T21:52:44Z","author_association":"MEMBER","body":"Do they also use old log4j versions for the same reason? Anything else vulnerable you want to make publicly known?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059558233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059679448","html_url":"https://github.com/apache/thrift/pull/2489#issuecomment-1059679448","issue_url":"https://api.github.com/repos/apache/thrift/issues/2489","id":1059679448,"node_id":"IC_kwDOAAS9U84_KWzY","user":{"login":"kainjow","id":271035,"node_id":"MDQ6VXNlcjI3MTAzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/271035?v=4","gravatar_id":"","url":"https://api.github.com/users/kainjow","html_url":"https://github.com/kainjow","followers_url":"https://api.github.com/users/kainjow/followers","following_url":"https://api.github.com/users/kainjow/following{/other_user}","gists_url":"https://api.github.com/users/kainjow/gists{/gist_id}","starred_url":"https://api.github.com/users/kainjow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kainjow/subscriptions","organizations_url":"https://api.github.com/users/kainjow/orgs","repos_url":"https://api.github.com/users/kainjow/repos","events_url":"https://api.github.com/users/kainjow/events{/privacy}","received_events_url":"https://api.github.com/users/kainjow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-05T04:10:52Z","updated_at":"2022-03-05T04:10:52Z","author_association":"CONTRIBUTOR","body":"Looks like tests are passing, but some failures with js and erl.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059679448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059744091","html_url":"https://github.com/apache/thrift/pull/2511#issuecomment-1059744091","issue_url":"https://api.github.com/repos/apache/thrift/issues/2511","id":1059744091,"node_id":"IC_kwDOAAS9U84_Kmlb","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-05T11:09:05Z","updated_at":"2022-03-05T11:09:05Z","author_association":"MEMBER","body":"Don't know either. I sent a request to the dev mailing list.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059744091/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059800069","html_url":"https://github.com/apache/thrift/pull/2489#issuecomment-1059800069","issue_url":"https://api.github.com/repos/apache/thrift/issues/2489","id":1059800069,"node_id":"IC_kwDOAAS9U84_K0QF","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-05T17:20:34Z","updated_at":"2022-03-05T17:20:58Z","author_association":"MEMBER","body":"Nice. Didn't notice that it was 1000 commits :-(\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059800069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059811766","html_url":"https://github.com/apache/thrift/pull/2489#issuecomment-1059811766","issue_url":"https://api.github.com/repos/apache/thrift/issues/2489","id":1059811766,"node_id":"IC_kwDOAAS9U84_K3G2","user":{"login":"kainjow","id":271035,"node_id":"MDQ6VXNlcjI3MTAzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/271035?v=4","gravatar_id":"","url":"https://api.github.com/users/kainjow","html_url":"https://github.com/kainjow","followers_url":"https://api.github.com/users/kainjow/followers","following_url":"https://api.github.com/users/kainjow/following{/other_user}","gists_url":"https://api.github.com/users/kainjow/gists{/gist_id}","starred_url":"https://api.github.com/users/kainjow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kainjow/subscriptions","organizations_url":"https://api.github.com/users/kainjow/orgs","repos_url":"https://api.github.com/users/kainjow/repos","events_url":"https://api.github.com/users/kainjow/events{/privacy}","received_events_url":"https://api.github.com/users/kainjow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-05T18:32:38Z","updated_at":"2022-03-05T18:32:38Z","author_association":"CONTRIBUTOR","body":"You could consider turning off Merge commits on the repo and only enable Squash.\n\nOn Sat, Mar 5, 2022, at 9:20 AM, Jens Geyer wrote:\n> \n> \n> Nice. Didn't notice that it was 1000 commits\n> \n> \n> —\n> Reply to this email directly, view it on GitHub <https://github.com/apache/thrift/pull/2489#issuecomment-1059800069>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AACCFOYL35JZ5YR7O3GKEZLU6OJXDANCNFSM5J4WASJA>.\n> Triage notifications on the go with GitHub Mobile for iOS <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675> or Android <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>. \n> You are receiving this because you authored the thread.Message ID: ***@***.***>\n> \n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059811766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059814683","html_url":"https://github.com/apache/thrift/pull/2522#issuecomment-1059814683","issue_url":"https://api.github.com/repos/apache/thrift/issues/2522","id":1059814683,"node_id":"IC_kwDOAAS9U84_K30b","user":{"login":"emmenlau","id":1098087,"node_id":"MDQ6VXNlcjEwOTgwODc=","avatar_url":"https://avatars.githubusercontent.com/u/1098087?v=4","gravatar_id":"","url":"https://api.github.com/users/emmenlau","html_url":"https://github.com/emmenlau","followers_url":"https://api.github.com/users/emmenlau/followers","following_url":"https://api.github.com/users/emmenlau/following{/other_user}","gists_url":"https://api.github.com/users/emmenlau/gists{/gist_id}","starred_url":"https://api.github.com/users/emmenlau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/emmenlau/subscriptions","organizations_url":"https://api.github.com/users/emmenlau/orgs","repos_url":"https://api.github.com/users/emmenlau/repos","events_url":"https://api.github.com/users/emmenlau/events{/privacy}","received_events_url":"https://api.github.com/users/emmenlau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-05T18:52:38Z","updated_at":"2022-03-05T18:52:38Z","author_association":"MEMBER","body":"Agree with @RandyAbernethy .\r\n\r\nAn additional comment: With the loop, the variables `int got, left, sent` and `uint32_t fetch` are not initialized again. I did not double-check that this is fine. @tkovacs-2 , did you check that they are always initialized to useful values in the loop? Otherwise, to be sure, move the declaration and initialization inside the loop?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059814683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059836481","html_url":"https://github.com/apache/thrift/pull/2539#issuecomment-1059836481","issue_url":"https://api.github.com/repos/apache/thrift/issues/2539","id":1059836481,"node_id":"IC_kwDOAAS9U84_K9JB","user":{"login":"tokcum","id":47994370,"node_id":"MDQ6VXNlcjQ3OTk0Mzcw","avatar_url":"https://avatars.githubusercontent.com/u/47994370?v=4","gravatar_id":"","url":"https://api.github.com/users/tokcum","html_url":"https://github.com/tokcum","followers_url":"https://api.github.com/users/tokcum/followers","following_url":"https://api.github.com/users/tokcum/following{/other_user}","gists_url":"https://api.github.com/users/tokcum/gists{/gist_id}","starred_url":"https://api.github.com/users/tokcum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tokcum/subscriptions","organizations_url":"https://api.github.com/users/tokcum/orgs","repos_url":"https://api.github.com/users/tokcum/repos","events_url":"https://api.github.com/users/tokcum/events{/privacy}","received_events_url":"https://api.github.com/users/tokcum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-05T21:51:08Z","updated_at":"2022-03-05T21:51:08Z","author_association":"CONTRIBUTOR","body":"I reviewed the CI results. The build failures are not related to this PR, I think. Meanwhile I also cross compiled lib/rs to Windows with the following cargo targets:\r\n\r\n- i686-pc-windows-gnu\r\n- i686-pc-windows-msvc\r\n- x86_64-pc-windows-gnu\r\n- x86_64-pc-windows-msvc\r\n\r\nThis releaved that I should have also tagged the use statement for Path.\r\n\r\n```\r\nwarning: unused import: `std::path::Path`\r\n  --> src/server/threaded.rs:21:5\r\n   |\r\n21 | use std::path::Path;\r\n   |     ^^^^^^^^^^^^^^^\r\n   |\r\n   = note: `#[warn(unused_imports)]` on by default\r\n```","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059836481/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059851561","html_url":"https://github.com/apache/thrift/pull/2539#issuecomment-1059851561","issue_url":"https://api.github.com/repos/apache/thrift/issues/2539","id":1059851561,"node_id":"IC_kwDOAAS9U84_LA0p","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-05T23:37:52Z","updated_at":"2022-03-05T23:37:52Z","author_association":"MEMBER","body":"You picked the wrong ticket number.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059851561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059852029","html_url":"https://github.com/apache/thrift/pull/2489#issuecomment-1059852029","issue_url":"https://api.github.com/repos/apache/thrift/issues/2489","id":1059852029,"node_id":"IC_kwDOAAS9U84_LA79","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-05T23:40:23Z","updated_at":"2022-03-05T23:40:23Z","author_association":"MEMBER","body":"You could consider squashing as well, right?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059852029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059948340","html_url":"https://github.com/apache/thrift/pull/2523#issuecomment-1059948340","issue_url":"https://api.github.com/repos/apache/thrift/issues/2523","id":1059948340,"node_id":"IC_kwDOAAS9U84_LYc0","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-06T11:53:29Z","updated_at":"2022-03-06T11:54:31Z","author_association":"MEMBER","body":"Stupid question (probably): Can we make it the default or what reason does the switch have? Are there any potential incompatibilities? Just asking.\r\n\r\nPS: you should rebase, theres's a conflict","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059948340/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059949929","html_url":"https://github.com/apache/thrift/pull/2523#issuecomment-1059949929","issue_url":"https://api.github.com/repos/apache/thrift/issues/2523","id":1059949929,"node_id":"IC_kwDOAAS9U84_LY1p","user":{"login":"cspwizard","id":5020306,"node_id":"MDQ6VXNlcjUwMjAzMDY=","avatar_url":"https://avatars.githubusercontent.com/u/5020306?v=4","gravatar_id":"","url":"https://api.github.com/users/cspwizard","html_url":"https://github.com/cspwizard","followers_url":"https://api.github.com/users/cspwizard/followers","following_url":"https://api.github.com/users/cspwizard/following{/other_user}","gists_url":"https://api.github.com/users/cspwizard/gists{/gist_id}","starred_url":"https://api.github.com/users/cspwizard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cspwizard/subscriptions","organizations_url":"https://api.github.com/users/cspwizard/orgs","repos_url":"https://api.github.com/users/cspwizard/repos","events_url":"https://api.github.com/users/cspwizard/events{/privacy}","received_events_url":"https://api.github.com/users/cspwizard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-06T12:03:04Z","updated_at":"2022-03-06T12:03:04Z","author_association":"NONE","body":"Just in case if somebody use lower versions of Python. However it make sense to  make it default, and for older versions users can use the previous version. For me both ways are good, what is your opinion? @Jens-G \r\n\r\nI'll rebase","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059949929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059950144","html_url":"https://github.com/apache/thrift/pull/2523#issuecomment-1059950144","issue_url":"https://api.github.com/repos/apache/thrift/issues/2523","id":1059950144,"node_id":"IC_kwDOAAS9U84_LY5A","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-06T12:04:16Z","updated_at":"2022-03-06T12:04:16Z","author_association":"MEMBER","body":"If there is a reason, leave it. I just want to make sure we don't introduce unnecessary switches. Seems not the case. As I said, stupid question :-)","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059950144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059966432","html_url":"https://github.com/apache/thrift/pull/2523#issuecomment-1059966432","issue_url":"https://api.github.com/repos/apache/thrift/issues/2523","id":1059966432,"node_id":"IC_kwDOAAS9U84_Lc3g","user":{"login":"cspwizard","id":5020306,"node_id":"MDQ6VXNlcjUwMjAzMDY=","avatar_url":"https://avatars.githubusercontent.com/u/5020306?v=4","gravatar_id":"","url":"https://api.github.com/users/cspwizard","html_url":"https://github.com/cspwizard","followers_url":"https://api.github.com/users/cspwizard/followers","following_url":"https://api.github.com/users/cspwizard/following{/other_user}","gists_url":"https://api.github.com/users/cspwizard/gists{/gist_id}","starred_url":"https://api.github.com/users/cspwizard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cspwizard/subscriptions","organizations_url":"https://api.github.com/users/cspwizard/orgs","repos_url":"https://api.github.com/users/cspwizard/repos","events_url":"https://api.github.com/users/cspwizard/events{/privacy}","received_events_url":"https://api.github.com/users/cspwizard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-06T13:50:57Z","updated_at":"2022-03-06T13:50:57Z","author_association":"NONE","body":"rebased and fixed a bug, for some reason on de/serialization it used enum variable as string ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1059966432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1060145988","html_url":"https://github.com/apache/thrift/pull/2533#issuecomment-1060145988","issue_url":"https://api.github.com/repos/apache/thrift/issues/2533","id":1060145988,"node_id":"IC_kwDOAAS9U84_MItE","user":{"login":"ferrirW","id":42178996,"node_id":"MDQ6VXNlcjQyMTc4OTk2","avatar_url":"https://avatars.githubusercontent.com/u/42178996?v=4","gravatar_id":"","url":"https://api.github.com/users/ferrirW","html_url":"https://github.com/ferrirW","followers_url":"https://api.github.com/users/ferrirW/followers","following_url":"https://api.github.com/users/ferrirW/following{/other_user}","gists_url":"https://api.github.com/users/ferrirW/gists{/gist_id}","starred_url":"https://api.github.com/users/ferrirW/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ferrirW/subscriptions","organizations_url":"https://api.github.com/users/ferrirW/orgs","repos_url":"https://api.github.com/users/ferrirW/repos","events_url":"https://api.github.com/users/ferrirW/events{/privacy}","received_events_url":"https://api.github.com/users/ferrirW/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-07T03:14:16Z","updated_at":"2022-03-07T04:56:18Z","author_association":"NONE","body":"Actually, I think this problem also exist in the latest version. But I don't have much time to reproduce. So If anyone else is experiencing this problem, they can try use this PR (and limit frame size to a reasonable value) to fix it.\r\n\r\nThe problem phenomenon:\r\n1. CPU is full\r\n2. Most time consumed on SelectorThread.select()\r\n3. FrameBuffer.read() ends quickly at \"if (frameSize > MAX_READ_BUFFER_BYTES))\"\r\n\r\n![image](https://user-images.githubusercontent.com/42178996/156961356-04b149c2-0b0e-4bde-8249-232a9d5d770e.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1060145988/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1060318622","html_url":"https://github.com/apache/thrift/pull/2541#issuecomment-1060318622","issue_url":"https://api.github.com/repos/apache/thrift/issues/2541","id":1060318622,"node_id":"IC_kwDOAAS9U84_My2e","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-07T08:22:54Z","updated_at":"2022-03-07T08:22:54Z","author_association":"MEMBER","body":"Thanks @nsuke!\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1060318622/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1060355431","html_url":"https://github.com/apache/thrift/pull/2522#issuecomment-1060355431","issue_url":"https://api.github.com/repos/apache/thrift/issues/2522","id":1060355431,"node_id":"IC_kwDOAAS9U84_M71n","user":{"login":"tkovacs-2","id":70200421,"node_id":"MDQ6VXNlcjcwMjAwNDIx","avatar_url":"https://avatars.githubusercontent.com/u/70200421?v=4","gravatar_id":"","url":"https://api.github.com/users/tkovacs-2","html_url":"https://github.com/tkovacs-2","followers_url":"https://api.github.com/users/tkovacs-2/followers","following_url":"https://api.github.com/users/tkovacs-2/following{/other_user}","gists_url":"https://api.github.com/users/tkovacs-2/gists{/gist_id}","starred_url":"https://api.github.com/users/tkovacs-2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tkovacs-2/subscriptions","organizations_url":"https://api.github.com/users/tkovacs-2/orgs","repos_url":"https://api.github.com/users/tkovacs-2/repos","events_url":"https://api.github.com/users/tkovacs-2/events{/privacy}","received_events_url":"https://api.github.com/users/tkovacs-2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-07T08:58:33Z","updated_at":"2022-03-07T08:58:33Z","author_association":"CONTRIBUTOR","body":"Thank you for the comments.\r\nThe variables are my mistake, I put back them into the loop. Anyway they initialized later with valid values, so they would be ok even outside.\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1060355431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1060668180","html_url":"https://github.com/apache/thrift/pull/2539#issuecomment-1060668180","issue_url":"https://api.github.com/repos/apache/thrift/issues/2539","id":1060668180,"node_id":"IC_kwDOAAS9U84_OIMU","user":{"login":"tokcum","id":47994370,"node_id":"MDQ6VXNlcjQ3OTk0Mzcw","avatar_url":"https://avatars.githubusercontent.com/u/47994370?v=4","gravatar_id":"","url":"https://api.github.com/users/tokcum","html_url":"https://github.com/tokcum","followers_url":"https://api.github.com/users/tokcum/followers","following_url":"https://api.github.com/users/tokcum/following{/other_user}","gists_url":"https://api.github.com/users/tokcum/gists{/gist_id}","starred_url":"https://api.github.com/users/tokcum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tokcum/subscriptions","organizations_url":"https://api.github.com/users/tokcum/orgs","repos_url":"https://api.github.com/users/tokcum/repos","events_url":"https://api.github.com/users/tokcum/events{/privacy}","received_events_url":"https://api.github.com/users/tokcum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-07T13:08:00Z","updated_at":"2022-03-07T13:08:00Z","author_association":"CONTRIBUTOR","body":"> You picked the wrong ticket number.\r\n\r\nSorry, not sure how this happened. I'll have to improve this PR anyway as Allen George asked me to cover this with some unit tests as well as rust & cross-harness tests.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1060668180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1061126456","html_url":"https://github.com/apache/thrift/pull/2528#issuecomment-1061126456","issue_url":"https://api.github.com/repos/apache/thrift/issues/2528","id":1061126456,"node_id":"IC_kwDOAAS9U84_P4E4","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-07T20:54:25Z","updated_at":"2022-03-07T20:54:25Z","author_association":"MEMBER","body":"Still broken. Also there is a possible conflict with #2541 ahead.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1061126456/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1061450324","html_url":"https://github.com/apache/thrift/pull/2541#issuecomment-1061450324","issue_url":"https://api.github.com/repos/apache/thrift/issues/2541","id":1061450324,"node_id":"IC_kwDOAAS9U84_RHJU","user":{"login":"nsuke","id":3064114,"node_id":"MDQ6VXNlcjMwNjQxMTQ=","avatar_url":"https://avatars.githubusercontent.com/u/3064114?v=4","gravatar_id":"","url":"https://api.github.com/users/nsuke","html_url":"https://github.com/nsuke","followers_url":"https://api.github.com/users/nsuke/followers","following_url":"https://api.github.com/users/nsuke/following{/other_user}","gists_url":"https://api.github.com/users/nsuke/gists{/gist_id}","starred_url":"https://api.github.com/users/nsuke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nsuke/subscriptions","organizations_url":"https://api.github.com/users/nsuke/orgs","repos_url":"https://api.github.com/users/nsuke/repos","events_url":"https://api.github.com/users/nsuke/events{/privacy}","received_events_url":"https://api.github.com/users/nsuke/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-08T06:22:51Z","updated_at":"2022-03-08T06:22:51Z","author_association":"MEMBER","body":"Hi Jens, long time no see! I'm surprised by the looong wait queue in CI nowadays... Hopefully it should pass this time.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1061450324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1061897724","html_url":"https://github.com/apache/thrift/pull/2528#issuecomment-1061897724","issue_url":"https://api.github.com/repos/apache/thrift/issues/2528","id":1061897724,"node_id":"IC_kwDOAAS9U84_S0X8","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-08T15:26:05Z","updated_at":"2022-03-08T15:26:05Z","author_association":"MEMBER","body":"> Still broken. Also there is a possible conflict with #2541 ahead.\r\n\r\nyes so let me wait for that to merge first and then rebase & fix","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1061897724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1064631154","html_url":"https://github.com/apache/thrift/pull/2543#issuecomment-1064631154","issue_url":"https://api.github.com/repos/apache/thrift/issues/2543","id":1064631154,"node_id":"IC_kwDOAAS9U84_dPty","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-10T23:51:10Z","updated_at":"2022-03-10T23:51:10Z","author_association":"MEMBER","body":"I use it with VS2022 and had not experienced any issues. \r\n\r\nCould you enlighten us what the problem is exactly? \"fails fails to build\" is a bit too vague (and grammatically questionable :-))","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1064631154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1064631929","html_url":"https://github.com/apache/thrift/pull/2529#issuecomment-1064631929","issue_url":"https://api.github.com/repos/apache/thrift/issues/2529","id":1064631929,"node_id":"IC_kwDOAAS9U84_dP55","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-10T23:52:49Z","updated_at":"2022-03-10T23:52:49Z","author_association":"MEMBER","body":"Build is green, yet I'm unsure how to move forward with this.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1064631929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1064654182","html_url":"https://github.com/apache/thrift/pull/2543#issuecomment-1064654182","issue_url":"https://api.github.com/repos/apache/thrift/issues/2543","id":1064654182,"node_id":"IC_kwDOAAS9U84_dVVm","user":{"login":"srnwk","id":72808534,"node_id":"MDQ6VXNlcjcyODA4NTM0","avatar_url":"https://avatars.githubusercontent.com/u/72808534?v=4","gravatar_id":"","url":"https://api.github.com/users/srnwk","html_url":"https://github.com/srnwk","followers_url":"https://api.github.com/users/srnwk/followers","following_url":"https://api.github.com/users/srnwk/following{/other_user}","gists_url":"https://api.github.com/users/srnwk/gists{/gist_id}","starred_url":"https://api.github.com/users/srnwk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/srnwk/subscriptions","organizations_url":"https://api.github.com/users/srnwk/orgs","repos_url":"https://api.github.com/users/srnwk/repos","events_url":"https://api.github.com/users/srnwk/events{/privacy}","received_events_url":"https://api.github.com/users/srnwk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-11T00:35:46Z","updated_at":"2022-03-11T00:36:54Z","author_association":"CONTRIBUTOR","body":"> I use it with VS2022 and had not experienced any issues.\r\n> \r\n> Could you enlighten us what the problem is exactly? \"fails fails to build\" is a bit too vague (and grammatically questionable :-))\r\n\r\nHere's a minimal repro https://godbolt.org/z/b76n9oaKv\r\n```\r\n<source>(9,102): error C2064: term does not evaluate to a function taking 0 arguments\r\n        std::string const old_file_contents(static_cast<std::ostringstream const&>(std::ostringstream() << old_file.rdbuf()).str());\r\n                                                                                                     ^\r\n```\r\n\r\nWhen compiling with /std:c++20 (or C++17 with /permissive-), this blows up with the above error.\r\n(There's no reason why it should, as far as I can tell; clang and GCC agree).","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1064654182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1064711013","html_url":"https://github.com/apache/thrift/pull/2529#issuecomment-1064711013","issue_url":"https://api.github.com/repos/apache/thrift/issues/2529","id":1064711013,"node_id":"IC_kwDOAAS9U84_djNl","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-11T02:31:35Z","updated_at":"2022-03-11T02:32:00Z","author_association":"MEMBER","body":"> Build is green, yet I'm unsure how to move forward with this.\r\n\r\nthanks for the review @Jens-G \r\n\r\nboth:\r\n- this #2529 and\r\n- #2525 \r\n\r\nare additive, back-compatible changes, and #2525 is a subset of this (or this change is based on #2525). So either we can merge that first or merge this as is and close that.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1064711013/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1064741126","html_url":"https://github.com/apache/thrift/pull/2522#issuecomment-1064741126","issue_url":"https://api.github.com/repos/apache/thrift/issues/2522","id":1064741126,"node_id":"IC_kwDOAAS9U84_dqkG","user":{"login":"tkovacs-2","id":70200421,"node_id":"MDQ6VXNlcjcwMjAwNDIx","avatar_url":"https://avatars.githubusercontent.com/u/70200421?v=4","gravatar_id":"","url":"https://api.github.com/users/tkovacs-2","html_url":"https://github.com/tkovacs-2","followers_url":"https://api.github.com/users/tkovacs-2/followers","following_url":"https://api.github.com/users/tkovacs-2/following{/other_user}","gists_url":"https://api.github.com/users/tkovacs-2/gists{/gist_id}","starred_url":"https://api.github.com/users/tkovacs-2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tkovacs-2/subscriptions","organizations_url":"https://api.github.com/users/tkovacs-2/orgs","repos_url":"https://api.github.com/users/tkovacs-2/repos","events_url":"https://api.github.com/users/tkovacs-2/events{/privacy}","received_events_url":"https://api.github.com/users/tkovacs-2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-11T03:38:33Z","updated_at":"2022-03-11T03:38:33Z","author_association":"CONTRIBUTOR","body":"@RandyAbernethy @emmenlau\r\nI have modified the PR according to your comments. Could you please review again?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1064741126/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1064923959","html_url":"https://github.com/apache/thrift/pull/2543#issuecomment-1064923959","issue_url":"https://api.github.com/repos/apache/thrift/issues/2543","id":1064923959,"node_id":"IC_kwDOAAS9U84_eXM3","user":{"login":"emmenlau","id":1098087,"node_id":"MDQ6VXNlcjEwOTgwODc=","avatar_url":"https://avatars.githubusercontent.com/u/1098087?v=4","gravatar_id":"","url":"https://api.github.com/users/emmenlau","html_url":"https://github.com/emmenlau","followers_url":"https://api.github.com/users/emmenlau/followers","following_url":"https://api.github.com/users/emmenlau/following{/other_user}","gists_url":"https://api.github.com/users/emmenlau/gists{/gist_id}","starred_url":"https://api.github.com/users/emmenlau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/emmenlau/subscriptions","organizations_url":"https://api.github.com/users/emmenlau/orgs","repos_url":"https://api.github.com/users/emmenlau/repos","events_url":"https://api.github.com/users/emmenlau/events{/privacy}","received_events_url":"https://api.github.com/users/emmenlau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-11T09:19:11Z","updated_at":"2022-03-11T09:19:11Z","author_association":"MEMBER","body":"Its an unlikely problem, but at the same time the fix seems relatively harmless (and makes the code even a bit more readable). I'm not opposed to merging. @Jens-G what do you think?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1064923959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066013311","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1066013311","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1066013311,"node_id":"IC_kwDOAAS9U84_ihJ_","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-13T03:20:22Z","updated_at":"2022-03-13T03:20:22Z","author_association":"MEMBER","body":"i'm not sure if the build failure is due to this change","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066013311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066152641","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1066152641","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1066152641,"node_id":"IC_kwDOAAS9U84_jDLB","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-13T18:02:44Z","updated_at":"2022-03-13T18:02:44Z","author_association":"MEMBER","body":"> i'm not sure if the build failure is due to this change\r\n\r\nStrange. Could you force push to trigger CI again?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066152641/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066152851","html_url":"https://github.com/apache/thrift/pull/2529#issuecomment-1066152851","issue_url":"https://api.github.com/repos/apache/thrift/issues/2529","id":1066152851,"node_id":"IC_kwDOAAS9U84_jDOT","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-13T18:03:57Z","updated_at":"2022-03-13T18:03:57Z","author_association":"MEMBER","body":"Ok thanks but I also mean w/regard to @ctubbsii 's comments.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066152851/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066162014","html_url":"https://github.com/apache/thrift/pull/2522#issuecomment-1066162014","issue_url":"https://api.github.com/repos/apache/thrift/issues/2522","id":1066162014,"node_id":"IC_kwDOAAS9U84_jFde","user":{"login":"RandyAbernethy","id":6563819,"node_id":"MDQ6VXNlcjY1NjM4MTk=","avatar_url":"https://avatars.githubusercontent.com/u/6563819?v=4","gravatar_id":"","url":"https://api.github.com/users/RandyAbernethy","html_url":"https://github.com/RandyAbernethy","followers_url":"https://api.github.com/users/RandyAbernethy/followers","following_url":"https://api.github.com/users/RandyAbernethy/following{/other_user}","gists_url":"https://api.github.com/users/RandyAbernethy/gists{/gist_id}","starred_url":"https://api.github.com/users/RandyAbernethy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RandyAbernethy/subscriptions","organizations_url":"https://api.github.com/users/RandyAbernethy/orgs","repos_url":"https://api.github.com/users/RandyAbernethy/repos","events_url":"https://api.github.com/users/RandyAbernethy/events{/privacy}","received_events_url":"https://api.github.com/users/RandyAbernethy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-13T18:59:02Z","updated_at":"2022-03-13T18:59:02Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066162014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066277966","html_url":"https://github.com/apache/thrift/pull/2529#issuecomment-1066277966","issue_url":"https://api.github.com/repos/apache/thrift/issues/2529","id":1066277966,"node_id":"IC_kwDOAAS9U84_jhxO","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-14T02:35:02Z","updated_at":"2022-03-14T02:35:02Z","author_association":"MEMBER","body":"> Ok thanks but I also mean w/regard to @ctubbsii 's comments.\n\nI think our use cases might differ.\n\nCurrently the setup (in this pull request) is to have four possible values for the option argument:\n1. Nullable getters if argument is absent\n1. Thrift option returning getters  if argument is present and the default case is this (back compatible)\n1. JDK option returning getters if argument is present with jdk8 value\n1. Both 1 and 3 except option returning getters will be defined with Optional postfix\n\n\nI would argument 4 is needed because in my use case both Java code and kotlin code will be consumers and Java needs option returning getters to do proper option chaining while having null returning getters makes kotlin recognize the property as is and it does option chaining from there.\n\nIn all of the cases they are additive and users can choose from the behavior so I guess it'll be needed and useful.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066277966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066309086","html_url":"https://github.com/apache/thrift/pull/2529#issuecomment-1066309086","issue_url":"https://api.github.com/repos/apache/thrift/issues/2529","id":1066309086,"node_id":"IC_kwDOAAS9U84_jpXe","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-14T03:42:34Z","updated_at":"2022-03-14T03:42:34Z","author_association":"MEMBER","body":"> I would argument 4 is needed because in my use case both Java code and kotlin code will be consumers and Java needs option returning getters to do proper option chaining while having null returning getters makes kotlin recognize the property as is and it does option chaining from there.\r\n\r\nI'm not so sure it's needed, because if you didn't have option 4, then:\r\n\r\n1. If you select the original nullable types, the option chaining works fine in Kotlin, but in Java, you'd just do: `var x = Optional.ofNullable(MyThriftType.getMyField())`\r\n\r\n2. If you select the JDK8 option, then everything works nicely in Java, but in Kotlin, I think you could just do something like: `val x: SomeType? = MyThriftType.getMyField().orElse(null)` (or one of the [other examples here](https://stackoverflow.com/q/38767376/196405))\r\n\r\nSo, even if you didn't have option 4, you'd still have a choice between two relatively convenient options.\r\n\r\nSo, I don't think having option 4 is particularly compelling, especially since it creates getters that do the same thing as option 3, but with a completely different name. Having both option 3 and option 4 is likely to be confusing, and over time, it's likely to incur technical debt, with very little benefit, other than to support users who are generating a library intended for use with both Kotlin and Java, which is a *very* niche use case.\r\n\r\nIf I were using Kotlin (and I'm not), I would probably use the JDK8 option (option 3), and convert them to Kotlin nullables using [this suggestion](https://stackoverflow.com/a/38767769/196405).","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066309086/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066319072","html_url":"https://github.com/apache/thrift/pull/2529#issuecomment-1066319072","issue_url":"https://api.github.com/repos/apache/thrift/issues/2529","id":1066319072,"node_id":"IC_kwDOAAS9U84_jrzg","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-14T04:08:51Z","updated_at":"2022-03-14T04:08:51Z","author_association":"MEMBER","body":"> > I would argument 4 is needed because in my use case both Java code and kotlin code will be consumers and Java needs option returning getters to do proper option chaining while having null returning getters makes kotlin recognize the property as is and it does option chaining from there.\n> \n> \n> \n> I'm not so sure it's needed, because if you didn't have option 4, then:\n> \n> \n> \n> 1. If you select the original nullable types, the option chaining works fine in Kotlin, but in Java, you'd just do: `var x = Optional.ofNullable(MyThriftType.getMyField())`\n> \n> \n> \n> 2. If you select the JDK8 option, then everything works nicely in Java, but in Kotlin, I think you could just do something like: `val x: SomeType? = MyThriftType.getMyField().orElse(null)` (or one of the [other examples here](https://stackoverflow.com/q/38767376/196405))\n> \n> \n> \n> So, even if you didn't have option 4, you'd still have a choice between two relatively convenient options.\n> \n> \n> \n> So, I don't think having option 4 is particularly compelling, especially since it creates getters that do the same thing as option 3, but with a completely different name. Having both option 3 and option 4 is likely to be confusing, and over time, it's likely to incur technical debt, with very little benefit, other than to support users who are generating a library intended for use with both Kotlin and Java, which is a *very* niche use case.\n> \n> \n> \n> If I were using Kotlin (and I'm not), I would probably use the JDK8 option (option 3), and convert them to Kotlin nullables using [this suggestion](https://stackoverflow.com/a/38767769/196405).\n\nIt's a matter of doing more in the generated code or less and in this case I actually agree with you that keeping tech debt low in the generated code is preferred.\n\nI hold no strong position in merging this so if 3 is to be merged I'm okay to abandon this approach. Let me close this pull request.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066319072/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066320167","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1066320167","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1066320167,"node_id":"IC_kwDOAAS9U84_jsEn","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-14T04:11:01Z","updated_at":"2022-03-14T04:11:01Z","author_association":"MEMBER","body":"> > i'm not sure if the build failure is due to this change\n> \n> \n> \n> Strange. Could you force push to trigger CI again?\n\nI've done that twice last week by rebasing onto master. Strange that I got no err or log details in the Travis CI.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1066320167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1067430475","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1067430475","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1067430475,"node_id":"IC_kwDOAAS9U84_n7JL","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-15T00:12:34Z","updated_at":"2022-03-15T00:12:34Z","author_association":"MEMBER","body":"after rebasing it seems fixed","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1067430475/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068167631","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1068167631","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1068167631,"node_id":"IC_kwDOAAS9U84_qvHP","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-15T16:07:01Z","updated_at":"2022-03-15T16:07:01Z","author_association":"MEMBER","body":"FWIW, I would strongly advise against rebasing as a mechanism for triggering CI builds. Rebasing makes it difficult for reviewers to see diffs with new changes to pull requests they've already reviewed, as it resets the changeset. It's very frustrating, especially for large pull requests.\r\n\r\nAs an alternative, committers can re-trigger the Travis and Mergeable checks using the \"Checks\" tab in the Pull Request. Appveyor builds can be re-triggered using Appveyor's dashboard (though, I think Appveyor should probably be replaced with GitHub Actions Windows builds).\r\n\r\nContributors can re-trigger builds by adding a new empty commit to their branch instead of rebasing. These empty commits do not need to be merged... they can be squashed out when the PR is accepted. GitHub's interface has a \"Squash and merge\" option that would do this, as well as let the committer doing the merge polish the commit message style. Of course, this could also be done on the command-line.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068167631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068234513","html_url":"https://github.com/apache/thrift/pull/2538#issuecomment-1068234513","issue_url":"https://api.github.com/repos/apache/thrift/issues/2538","id":1068234513,"node_id":"IC_kwDOAAS9U84_q_cR","user":{"login":"m-g-r","id":7143985,"node_id":"MDQ6VXNlcjcxNDM5ODU=","avatar_url":"https://avatars.githubusercontent.com/u/7143985?v=4","gravatar_id":"","url":"https://api.github.com/users/m-g-r","html_url":"https://github.com/m-g-r","followers_url":"https://api.github.com/users/m-g-r/followers","following_url":"https://api.github.com/users/m-g-r/following{/other_user}","gists_url":"https://api.github.com/users/m-g-r/gists{/gist_id}","starred_url":"https://api.github.com/users/m-g-r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/m-g-r/subscriptions","organizations_url":"https://api.github.com/users/m-g-r/orgs","repos_url":"https://api.github.com/users/m-g-r/repos","events_url":"https://api.github.com/users/m-g-r/events{/privacy}","received_events_url":"https://api.github.com/users/m-g-r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-15T17:06:05Z","updated_at":"2022-03-15T17:34:04Z","author_association":"NONE","body":"Hello @Jens-G, why is the Common Lisp support removed? I am using it and was just surprised that it is suddenly removed.\r\nFrom Berlin, Max","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068234513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068429337","html_url":"https://github.com/apache/thrift/pull/2545#issuecomment-1068429337","issue_url":"https://api.github.com/repos/apache/thrift/issues/2545","id":1068429337,"node_id":"IC_kwDOAAS9U84_rvAZ","user":{"login":"tokcum","id":47994370,"node_id":"MDQ6VXNlcjQ3OTk0Mzcw","avatar_url":"https://avatars.githubusercontent.com/u/47994370?v=4","gravatar_id":"","url":"https://api.github.com/users/tokcum","html_url":"https://github.com/tokcum","followers_url":"https://api.github.com/users/tokcum/followers","following_url":"https://api.github.com/users/tokcum/following{/other_user}","gists_url":"https://api.github.com/users/tokcum/gists{/gist_id}","starred_url":"https://api.github.com/users/tokcum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tokcum/subscriptions","organizations_url":"https://api.github.com/users/tokcum/orgs","repos_url":"https://api.github.com/users/tokcum/repos","events_url":"https://api.github.com/users/tokcum/events{/privacy}","received_events_url":"https://api.github.com/users/tokcum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-15T20:18:47Z","updated_at":"2022-03-15T20:18:47Z","author_association":"CONTRIBUTOR","body":"I tried to figure out why one of the Travis CI jobs failed. To be honest, I've no clue. I do not see a connection to the PR.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068429337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068462588","html_url":"https://github.com/apache/thrift/pull/2538#issuecomment-1068462588","issue_url":"https://api.github.com/repos/apache/thrift/issues/2538","id":1068462588,"node_id":"IC_kwDOAAS9U84_r3H8","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-15T20:52:49Z","updated_at":"2022-03-15T20:52:49Z","author_association":"MEMBER","body":"[THRIFT-5476 Deprecate and remove Common Lisp language bindings](https://issues.apache.org/jira/browse/THRIFT-5476)  due to the lack active  maintainers.\r\n\r\nSee also the [mailing list tread](http://mail-archives.apache.org/mod_mbox/thrift-dev/202110.mbox/%3C9014BF98D742484E8B04E052EEE8668B%40HAGGIS%3E).\r\n\r\n[THRIFT-5501 Remove Common Lisp support](https://issues.apache.org/jira/browse/THRIFT-5501)\r\n\r\nIf there is some interest in reactivating CL, we're happy to do that **given there is at least one maintainer for it**.\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068462588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068467683","html_url":"https://github.com/apache/thrift/pull/2538#issuecomment-1068467683","issue_url":"https://api.github.com/repos/apache/thrift/issues/2538","id":1068467683,"node_id":"IC_kwDOAAS9U84_r4Xj","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-15T20:59:07Z","updated_at":"2022-03-15T20:59:07Z","author_association":"MEMBER","body":"The fine print is that we also had a lot of build issues with it and nobody to take care.\r\nSince this is 100% FOSS, you are free to join and [start contributing at any time.](http://thrift.apache.org/docs/HowToContribute) ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068467683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068691465","html_url":"https://github.com/apache/thrift/pull/2496#issuecomment-1068691465","issue_url":"https://api.github.com/repos/apache/thrift/issues/2496","id":1068691465,"node_id":"IC_kwDOAAS9U84_svAJ","user":{"login":"slicking","id":8031561,"node_id":"MDQ6VXNlcjgwMzE1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/8031561?v=4","gravatar_id":"","url":"https://api.github.com/users/slicking","html_url":"https://github.com/slicking","followers_url":"https://api.github.com/users/slicking/followers","following_url":"https://api.github.com/users/slicking/following{/other_user}","gists_url":"https://api.github.com/users/slicking/gists{/gist_id}","starred_url":"https://api.github.com/users/slicking/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slicking/subscriptions","organizations_url":"https://api.github.com/users/slicking/orgs","repos_url":"https://api.github.com/users/slicking/repos","events_url":"https://api.github.com/users/slicking/events{/privacy}","received_events_url":"https://api.github.com/users/slicking/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-16T03:23:10Z","updated_at":"2022-03-16T03:23:10Z","author_association":"CONTRIBUTOR","body":"@Jens-G thanks for pointing out the failures.  Looking at several of them it appears to be because I added to test/StessTest.thrift but only updated test/cpp/src/StessTest.cpp and NOT lib/d/test/stress_test_server.d so there is an unimplemented function.\r\nThe fix I made was only under the c++ server; let me see if adding a test under lib/cpp/test/ would be better contained and cover only the c++ server.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068691465/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068926759","html_url":"https://github.com/apache/thrift/pull/2538#issuecomment-1068926759","issue_url":"https://api.github.com/repos/apache/thrift/issues/2538","id":1068926759,"node_id":"IC_kwDOAAS9U84_tocn","user":{"login":"m-g-r","id":7143985,"node_id":"MDQ6VXNlcjcxNDM5ODU=","avatar_url":"https://avatars.githubusercontent.com/u/7143985?v=4","gravatar_id":"","url":"https://api.github.com/users/m-g-r","html_url":"https://github.com/m-g-r","followers_url":"https://api.github.com/users/m-g-r/followers","following_url":"https://api.github.com/users/m-g-r/following{/other_user}","gists_url":"https://api.github.com/users/m-g-r/gists{/gist_id}","starred_url":"https://api.github.com/users/m-g-r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/m-g-r/subscriptions","organizations_url":"https://api.github.com/users/m-g-r/orgs","repos_url":"https://api.github.com/users/m-g-r/repos","events_url":"https://api.github.com/users/m-g-r/events{/privacy}","received_events_url":"https://api.github.com/users/m-g-r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-16T09:44:50Z","updated_at":"2022-03-16T09:44:50Z","author_association":"NONE","body":"Thank you, @Jens-G, for your replies and links to discussions. I'm not following the discussions within the Thrift development but only noticed that a feature I used got missing.  Currently, I am using Thrift to talk with Accomulo from Common Lisp.\r\n\r\nI'll discuss within our company if we can do that and maintain it.\r\n\r\nCheers, Max","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1068926759/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1069989222","html_url":"https://github.com/apache/thrift/pull/2511#issuecomment-1069989222","issue_url":"https://api.github.com/repos/apache/thrift/issues/2511","id":1069989222,"node_id":"IC_kwDOAAS9U84_xr1m","user":{"login":"jeffalder","id":49817386,"node_id":"MDQ6VXNlcjQ5ODE3Mzg2","avatar_url":"https://avatars.githubusercontent.com/u/49817386?v=4","gravatar_id":"","url":"https://api.github.com/users/jeffalder","html_url":"https://github.com/jeffalder","followers_url":"https://api.github.com/users/jeffalder/followers","following_url":"https://api.github.com/users/jeffalder/following{/other_user}","gists_url":"https://api.github.com/users/jeffalder/gists{/gist_id}","starred_url":"https://api.github.com/users/jeffalder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeffalder/subscriptions","organizations_url":"https://api.github.com/users/jeffalder/orgs","repos_url":"https://api.github.com/users/jeffalder/repos","events_url":"https://api.github.com/users/jeffalder/events{/privacy}","received_events_url":"https://api.github.com/users/jeffalder/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-17T02:51:17Z","updated_at":"2022-03-17T02:51:17Z","author_association":"CONTRIBUTOR","body":"I see how homebrew is building bottles. The [homebrew recipe](https://github.com/Homebrew/homebrew-core/blob/master/Formula/thrift.rb#L69) includes [ENV.deparallelize](https://rubydoc.brew.sh/Superenv.html#deparallelize-instance_method), which removes the MAKEFLAGS environment variable. In my build log, I see this:\r\n\r\n```\r\nclang++ called with: -std=c++11 -DHAVE_CONFIG_H -I./src -Wall -Wextra -pedantic -Werror -g -O2 -MT src/thrift/generate/thrift-t_netstd_generator.o -MD -MP -MF src/thrift/generate/.deps/thrift-t_netstd_generator.Tpo -c -o src/thrift/generate/thrift-t_netstd_generator.o src/thrift/generate/t_netstd_generator.cc\r\nsuperenv removed:  -Wall -Wextra -pedantic -Werror -g -O2\r\nsuperenv added:    -pipe -w -Os -stdlib=libc++ -isysroot/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk --sysroot=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk -isystem/opt/homebrew/include -isystem/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers -I/opt/homebrew/opt/openssl@1.1/include\r\nsuperenv executed: clang++ -pipe -w -Os -std=c++11 -stdlib=libc++ -std=c++11 -DHAVE_CONFIG_H -I./src -MT src/thrift/generate/thrift-t_netstd_generator.o -MD -MP -MF src/thrift/generate/.deps/thrift-t_netstd_generator.Tpo -c -o src/thrift/generate/thrift-t_netstd_generator.o src/thrift/generate/t_netstd_generator.cc -isysroot/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk --sysroot=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk -isystem/opt/homebrew/include -isystem/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers -I/opt/homebrew/opt/openssl@1.1/include\r\n```\r\n\r\nSo `ENV.deparallelize` is removing the `-Wall -Wextra -pedantic -Werror` settings, which means that the command-line flag that triggered that error has been removed for homebrew builds. ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1069989222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1071756682","html_url":"https://github.com/apache/thrift/pull/2545#issuecomment-1071756682","issue_url":"https://api.github.com/repos/apache/thrift/issues/2545","id":1071756682,"node_id":"IC_kwDOAAS9U84_4bWK","user":{"login":"tokcum","id":47994370,"node_id":"MDQ6VXNlcjQ3OTk0Mzcw","avatar_url":"https://avatars.githubusercontent.com/u/47994370?v=4","gravatar_id":"","url":"https://api.github.com/users/tokcum","html_url":"https://github.com/tokcum","followers_url":"https://api.github.com/users/tokcum/followers","following_url":"https://api.github.com/users/tokcum/following{/other_user}","gists_url":"https://api.github.com/users/tokcum/gists{/gist_id}","starred_url":"https://api.github.com/users/tokcum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tokcum/subscriptions","organizations_url":"https://api.github.com/users/tokcum/orgs","repos_url":"https://api.github.com/users/tokcum/repos","events_url":"https://api.github.com/users/tokcum/events{/privacy}","received_events_url":"https://api.github.com/users/tokcum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-17T23:02:42Z","updated_at":"2022-03-17T23:02:42Z","author_association":"CONTRIBUTOR","body":"Actually this PR is a blocker for my osquery-rust crate. I appreciate any feedback on how to bring this PR forward.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1071756682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1072536776","html_url":"https://github.com/apache/thrift/pull/2545#issuecomment-1072536776","issue_url":"https://api.github.com/repos/apache/thrift/issues/2545","id":1072536776,"node_id":"IC_kwDOAAS9U84_7ZzI","user":{"login":"tokcum","id":47994370,"node_id":"MDQ6VXNlcjQ3OTk0Mzcw","avatar_url":"https://avatars.githubusercontent.com/u/47994370?v=4","gravatar_id":"","url":"https://api.github.com/users/tokcum","html_url":"https://github.com/tokcum","followers_url":"https://api.github.com/users/tokcum/followers","following_url":"https://api.github.com/users/tokcum/following{/other_user}","gists_url":"https://api.github.com/users/tokcum/gists{/gist_id}","starred_url":"https://api.github.com/users/tokcum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tokcum/subscriptions","organizations_url":"https://api.github.com/users/tokcum/orgs","repos_url":"https://api.github.com/users/tokcum/repos","events_url":"https://api.github.com/users/tokcum/events{/privacy}","received_events_url":"https://api.github.com/users/tokcum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-18T15:46:19Z","updated_at":"2022-03-18T15:46:19Z","author_association":"CONTRIBUTOR","body":"> Looks good! Suggest replacing use of comparison with \"\" with `Option` and `if let` for the UDS usages.\r\n> \r\n> Thank you!\r\n\r\nThanks Allen, will do and update PR.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1072536776/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1072876610","html_url":"https://github.com/apache/thrift/pull/2545#issuecomment-1072876610","issue_url":"https://api.github.com/repos/apache/thrift/issues/2545","id":1072876610,"node_id":"IC_kwDOAAS9U84_8sxC","user":{"login":"tokcum","id":47994370,"node_id":"MDQ6VXNlcjQ3OTk0Mzcw","avatar_url":"https://avatars.githubusercontent.com/u/47994370?v=4","gravatar_id":"","url":"https://api.github.com/users/tokcum","html_url":"https://github.com/tokcum","followers_url":"https://api.github.com/users/tokcum/followers","following_url":"https://api.github.com/users/tokcum/following{/other_user}","gists_url":"https://api.github.com/users/tokcum/gists{/gist_id}","starred_url":"https://api.github.com/users/tokcum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tokcum/subscriptions","organizations_url":"https://api.github.com/users/tokcum/orgs","repos_url":"https://api.github.com/users/tokcum/repos","events_url":"https://api.github.com/users/tokcum/events{/privacy}","received_events_url":"https://api.github.com/users/tokcum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-18T23:01:59Z","updated_at":"2022-03-18T23:01:59Z","author_association":"CONTRIBUTOR","body":"> Looks good! Suggest replacing use of comparison with \"\" with `Option` and `if let` for the UDS usages.\r\n> \r\n> Thank you!\r\n\r\nSurprisingly the linter discouraged me to use if let and pointed me to .is_none() just to complain again and proposing a match statement. This didn't happen when I compiled with cargo build but when I used make to run the tests. It looks like additional rules apply depending on which tools are used.\r\n\r\nJust for reference, the two messages I received where:\r\n\r\n```\r\nerror: redundant pattern matching, consider using `is_none()`\r\n\r\nerror: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\r\n```\r\n\r\nSo I used the match statement.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1072876610/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1082850013","html_url":"https://github.com/apache/thrift/pull/2545#issuecomment-1082850013","issue_url":"https://api.github.com/repos/apache/thrift/issues/2545","id":1082850013,"node_id":"IC_kwDOAAS9U85Aivrd","user":{"login":"allengeorge","id":69364,"node_id":"MDQ6VXNlcjY5MzY0","avatar_url":"https://avatars.githubusercontent.com/u/69364?v=4","gravatar_id":"","url":"https://api.github.com/users/allengeorge","html_url":"https://github.com/allengeorge","followers_url":"https://api.github.com/users/allengeorge/followers","following_url":"https://api.github.com/users/allengeorge/following{/other_user}","gists_url":"https://api.github.com/users/allengeorge/gists{/gist_id}","starred_url":"https://api.github.com/users/allengeorge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/allengeorge/subscriptions","organizations_url":"https://api.github.com/users/allengeorge/orgs","repos_url":"https://api.github.com/users/allengeorge/repos","events_url":"https://api.github.com/users/allengeorge/events{/privacy}","received_events_url":"https://api.github.com/users/allengeorge/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-30T09:39:25Z","updated_at":"2022-03-30T09:39:25Z","author_association":"CONTRIBUTOR","body":"@tokcum Sorry for the delay, and thank you so much for your contribution!","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1082850013/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1085838511","html_url":"https://github.com/apache/thrift/pull/2554#issuecomment-1085838511","issue_url":"https://api.github.com/repos/apache/thrift/issues/2554","id":1085838511,"node_id":"IC_kwDOAAS9U85AuJSv","user":{"login":"liyan-ah","id":18630298,"node_id":"MDQ6VXNlcjE4NjMwMjk4","avatar_url":"https://avatars.githubusercontent.com/u/18630298?v=4","gravatar_id":"","url":"https://api.github.com/users/liyan-ah","html_url":"https://github.com/liyan-ah","followers_url":"https://api.github.com/users/liyan-ah/followers","following_url":"https://api.github.com/users/liyan-ah/following{/other_user}","gists_url":"https://api.github.com/users/liyan-ah/gists{/gist_id}","starred_url":"https://api.github.com/users/liyan-ah/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liyan-ah/subscriptions","organizations_url":"https://api.github.com/users/liyan-ah/orgs","repos_url":"https://api.github.com/users/liyan-ah/repos","events_url":"https://api.github.com/users/liyan-ah/events{/privacy}","received_events_url":"https://api.github.com/users/liyan-ah/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-01T12:28:58Z","updated_at":"2022-04-01T12:28:58Z","author_association":"CONTRIBUTOR","body":"VERSION_1 = 0x80010000\r\nint version = VERSION_1 | message.type;\r\nwriteI32(version);","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1085838511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1086133011","html_url":"https://github.com/apache/thrift/pull/2554#issuecomment-1086133011","issue_url":"https://api.github.com/repos/apache/thrift/issues/2554","id":1086133011,"node_id":"IC_kwDOAAS9U85AvRMT","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-01T16:52:49Z","updated_at":"2022-04-01T16:52:49Z","author_association":"MEMBER","body":"Well, good catch. 👍 I would even extend it to the whole section being misleading. For example, inspecting the first byte can indicate compact, but it cannot indicate binary with 100% certainty, because the binary version in strict mode is two bytes. ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1086133011/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1088240953","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1088240953","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1088240953,"node_id":"IC_kwDOAAS9U85A3T05","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-05T03:55:37Z","updated_at":"2022-04-05T04:00:13Z","author_association":"MEMBER","body":"> FWIW, I would strongly advise against rebasing as a mechanism for triggering CI builds. Rebasing makes it difficult for reviewers to see diffs with new changes to pull requests they've already reviewed, as it resets the changeset. It's very frustrating, especially for large pull requests.\r\n> \r\n> As an alternative, committers can re-trigger the Travis and Mergeable checks using the \"Checks\" tab in the Pull Request. Appveyor builds can be re-triggered using Appveyor's dashboard (though, I think Appveyor should probably be replaced with GitHub Actions Windows builds).\r\n> \r\n> Contributors can re-trigger builds by adding a new empty commit to their branch instead of rebasing. These empty commits do not need to be merged... they can be squashed out when the PR is accepted. GitHub's interface has a \"Squash and merge\" option that would do this, as well as let the committer doing the merge polish the commit message style. Of course, this could also be done on the command-line.\r\n\r\n@ctubbsii that's a fair point - and I wasn't aware of such issues before so thanks for pointing out.\r\n\r\nMy reasoning for using rebase based approach for managing pull requests - (and I realize that such arguments can easily slide into a bikeshedding so just to be clear i'll be willing to accommodate either way of working as long as it's clearly mandated or preferred, just sharing here for knowledge):\r\n1. it's clearer than say merging master back to the pull request branch (while resolving conflicts), as there's no extra \"merge commits\", and you always know that you are diffing against latest master\r\n2. GitHub actually helps reviewers manage their review history - the \"viewed\" toggle button on the top right is something (afaik) that can persist across rebases - so no longer do you need to keep track of what's reviewed and what's changed, and it'll be reset on a per file bases if newer commits are in\r\n\r\nWith that said, i acknowledge that GitHub isn't something that everyone uses for reviewing the code and i guess in this case i'll refrain from rebasing after any one has reviewed the pull request to reduce frustrations. And I'm happy that I learned the way to trigger a new build without making changes.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1088240953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1094896796","html_url":"https://github.com/apache/thrift/pull/2556#issuecomment-1094896796","issue_url":"https://api.github.com/repos/apache/thrift/issues/2556","id":1094896796,"node_id":"IC_kwDOAAS9U85BQsyc","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-11T10:45:34Z","updated_at":"2022-04-11T10:45:34Z","author_association":"MEMBER","body":"cc @benjamin-bader the author of https://github.com/microsoft/thrifty in case you might be interested","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1094896796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1094904649","html_url":"https://github.com/apache/thrift/pull/2556#issuecomment-1094904649","issue_url":"https://api.github.com/repos/apache/thrift/issues/2556","id":1094904649,"node_id":"IC_kwDOAAS9U85BQutJ","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-11T10:55:27Z","updated_at":"2022-04-11T10:55:27Z","author_association":"MEMBER","body":"Example generated struct:\r\n\r\n<details>\r\n<summary>StructA.kt</summary>\r\n\r\n```kotlin\r\n/**\r\n * Autogenerated by Thrift Compiler (0.17.0)\r\n *\r\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\r\n *  @generated\r\n */\r\n@file:Suppress(\"ClassName\", \"PropertyName\", \"RedundantUnitReturnType\", \"NestedLambdaShadowedImplicitParameter\", \"RemoveRedundantQualifierName\")\r\npackage thrift.test\r\n\r\n@javax.annotation.Generated\r\ndata class StructA(\r\n  private var _s: kotlin.String? = null\r\n) : org.apache.thrift.TBase<StructA, StructA._Fields> {\r\n  val s: kotlin.String get() = _s!!\r\n  enum class _Fields(private val thriftFieldId: kotlin.Short, private val fieldName: kotlin.String) : org.apache.thrift.TFieldIdEnum {\r\n    S(1, \"s\");\r\n\r\n    override fun getThriftFieldId() = thriftFieldId\r\n\r\n    override fun getFieldName() = fieldName\r\n\r\n    companion object {\r\n      @kotlin.jvm.JvmStatic\r\n      fun findByValue(value: kotlin.Int): _Fields? {\r\n        return when (value) {\r\n          1 -> S\r\n          else -> null\r\n        }\r\n      }\r\n\r\n      @kotlin.jvm.JvmStatic\r\n      fun findByName(name: kotlin.String): _Fields? {\r\n        return when (name) {\r\n          \"s\" -> S\r\n          else -> null\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  companion object {\r\n    private val STRUCT_DESC: org.apache.thrift.protocol.TStruct = org.apache.thrift.protocol.TStruct(\"StructA\")\r\n    private val S_FIELD_DESC: org.apache.thrift.protocol.TField = org.apache.thrift.protocol.TField(\"s\", org.apache.thrift.protocol.TType.STRING, 1)\r\n  }\r\n\r\n  private object StructAStandardScheme : org.apache.thrift.scheme.StandardScheme<StructA>() {\r\n    override fun read(iproto: org.apache.thrift.protocol.TProtocol, struct: StructA) {\r\n      iproto.apply {\r\n        readStruct {\r\n          var stopped = false\r\n          while (!stopped) {\r\n            stopped = readField {\r\n              val skipNext = { org.apache.thrift.protocol.TProtocolUtil.skip(iproto, type) }\r\n              when (id.toInt()) {\r\n                1 -> {\r\n                  if (type == org.apache.thrift.protocol.TType.STRING) {\r\n                    struct._s = readString()\r\n                  } else {\r\n                    skipNext()\r\n                  }\r\n                }\r\n                else -> skipNext()\r\n              }\r\n            }\r\n          }\r\n          struct.validate()\r\n        }\r\n      }\r\n    }\r\n\r\n    override fun write(oproto: org.apache.thrift.protocol.TProtocol, struct: StructA) {\r\n      struct.validate()\r\n      oproto.apply {\r\n        writeStruct(STRUCT_DESC) {\r\n          struct.s.let {\r\n            writeField(S_FIELD_DESC) {\r\n              writeString(it)\r\n            }\r\n          }\r\n          writeFieldStop()\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  override fun compareTo(other: StructA?): kotlin.Int {\r\n    val comparator = compareBy<StructA> { it::class.java.name }\r\n      .thenBy { it.s } \r\n    return nullsFirst(comparator).compare(this, other)\r\n  }\r\n\r\n  override fun fieldForId(fieldId: kotlin.Int): _Fields {\r\n    return _Fields.findByValue(fieldId) ?: throw kotlin.IllegalArgumentException(\"invalid fieldId $fieldId\")\r\n  }\r\n\r\n  override fun getFieldValue(field: _Fields): kotlin.Any? {\r\n    return when (field) {\r\n      _Fields.S -> this.s\r\n    }\r\n  }\r\n\r\n  @Suppress(\"UNCHECKED_CAST\")\r\n  override fun setFieldValue(field: _Fields, value: kotlin.Any?): kotlin.Unit {\r\n    when (field) {\r\n      _Fields.S -> this._s = value as kotlin.String?\r\n    }\r\n  }\r\n\r\n  override fun isSet(field: _Fields): kotlin.Boolean {\r\n    return when (field) {\r\n      _Fields.S -> this._s != null\r\n    }\r\n  }\r\n\r\n  override fun deepCopy(): StructA {\r\n    return StructA (\r\n      s,\r\n    )\r\n  }\r\n\r\n  override fun clear(): kotlin.Unit {\r\n    _s = null\r\n  }\r\n\r\n  @kotlin.jvm.Throws(org.apache.thrift.TException::class)\r\n  fun validate(): kotlin.Unit {\r\n    if (_s == null) {\r\n      throw org.apache.thrift.TException(\"Required field `s' is null, struct is: $this\")\r\n    }\r\n  }\r\n\r\n  override fun read(iproto: org.apache.thrift.protocol.TProtocol): kotlin.Unit {\r\n    require(org.apache.thrift.scheme.StandardScheme::class == iproto.scheme) { \"only standard scheme is supported for now\" }\r\n    StructAStandardScheme.read(iproto, this)\r\n  }\r\n\r\n  override fun write(oproto: org.apache.thrift.protocol.TProtocol): kotlin.Unit {\r\n    require(org.apache.thrift.scheme.StandardScheme::class == oproto.scheme) { \"only standard scheme is supported for now\" }\r\n    StructAStandardScheme.write(oproto, this)\r\n  }\r\n\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>ThriftTest.kt</summary>\r\n\r\n```kotlin\r\n/**\r\n * Autogenerated by Thrift Compiler (0.17.0)\r\n *\r\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\r\n *  @generated\r\n */\r\npackage thrift.test\r\n\r\ninterface ThriftTest {\r\n  /**\r\n   * Prints \"testVoid()\" and returns nothing.\r\n   */\r\n  suspend fun testVoid(): kotlin.Unit\r\n  /**\r\n   * Prints 'testString(\"%s\")' with thing as '%s'\r\n   * @param string thing - the string to print\r\n   * @return string - returns the string 'thing'\r\n   */\r\n  suspend fun testString(thing: kotlin.String): kotlin.String\r\n  /**\r\n   * Prints 'testBool(\"%s\")' where '%s' with thing as 'true' or 'false'\r\n   * @param bool  thing - the bool data to print\r\n   * @return bool  - returns the bool 'thing'\r\n   */\r\n  suspend fun testBool(thing: kotlin.Boolean): kotlin.Boolean\r\n  /**\r\n   * Prints 'testByte(\"%d\")' with thing as '%d'\r\n   * The types i8 and byte are synonyms, use of i8 is encouraged, byte still exists for the sake of compatibility.\r\n   * @param byte thing - the i8/byte to print\r\n   * @return i8 - returns the i8/byte 'thing'\r\n   */\r\n  suspend fun testByte(thing: kotlin.Byte): kotlin.Byte\r\n  /**\r\n   * Prints 'testI32(\"%d\")' with thing as '%d'\r\n   * @param i32 thing - the i32 to print\r\n   * @return i32 - returns the i32 'thing'\r\n   */\r\n  suspend fun testI32(thing: kotlin.Int): kotlin.Int\r\n  /**\r\n   * Prints 'testI64(\"%d\")' with thing as '%d'\r\n   * @param i64 thing - the i64 to print\r\n   * @return i64 - returns the i64 'thing'\r\n   */\r\n  suspend fun testI64(thing: kotlin.Long): kotlin.Long\r\n  /**\r\n   * Prints 'testDouble(\"%f\")' with thing as '%f'\r\n   * @param double thing - the double to print\r\n   * @return double - returns the double 'thing'\r\n   */\r\n  suspend fun testDouble(thing: kotlin.Double): kotlin.Double\r\n  /**\r\n   * Prints 'testBinary(\"%s\")' where '%s' is a hex-formatted string of thing's data\r\n   * @param binary  thing - the binary data to print\r\n   * @return binary  - returns the binary 'thing'\r\n   */\r\n  suspend fun testBinary(thing: kotlin.ByteArray): kotlin.ByteArray\r\n  /**\r\n   * Prints 'testStruct(\"{%s}\")' where thing has been formatted into a string of comma separated values\r\n   * @param Xtruct thing - the Xtruct to print\r\n   * @return Xtruct - returns the Xtruct 'thing'\r\n   */\r\n  suspend fun testStruct(thing: Xtruct): Xtruct\r\n  /**\r\n   * Prints 'testNest(\"{%s}\")' where thing has been formatted into a string of the nested struct\r\n   * @param Xtruct2 thing - the Xtruct2 to print\r\n   * @return Xtruct2 - returns the Xtruct2 'thing'\r\n   */\r\n  suspend fun testNest(thing: Xtruct2): Xtruct2\r\n  /**\r\n   * Prints 'testMap(\"{%s\")' where thing has been formatted into a string of 'key => value' pairs\r\n   *  separated by commas and new lines\r\n   * @param map<i32,i32> thing - the map<i32,i32> to print\r\n   * @return map<i32,i32> - returns the map<i32,i32> 'thing'\r\n   */\r\n  suspend fun testMap(thing: kotlin.collections.Map<kotlin.Int, kotlin.Int>): kotlin.collections.Map<kotlin.Int, kotlin.Int>\r\n  /**\r\n   * Prints 'testStringMap(\"{%s}\")' where thing has been formatted into a string of 'key => value' pairs\r\n   *  separated by commas and new lines\r\n   * @param map<string,string> thing - the map<string,string> to print\r\n   * @return map<string,string> - returns the map<string,string> 'thing'\r\n   */\r\n  suspend fun testStringMap(thing: kotlin.collections.Map<kotlin.String, kotlin.String>): kotlin.collections.Map<kotlin.String, kotlin.String>\r\n  /**\r\n   * Prints 'testSet(\"{%s}\")' where thing has been formatted into a string of values\r\n   *  separated by commas and new lines\r\n   * @param set<i32> thing - the set<i32> to print\r\n   * @return set<i32> - returns the set<i32> 'thing'\r\n   */\r\n  suspend fun testSet(thing: kotlin.collections.Set<kotlin.Int>): kotlin.collections.Set<kotlin.Int>\r\n  /**\r\n   * Prints 'testList(\"{%s}\")' where thing has been formatted into a string of values\r\n   *  separated by commas and new lines\r\n   * @param list<i32> thing - the list<i32> to print\r\n   * @return list<i32> - returns the list<i32> 'thing'\r\n   */\r\n  suspend fun testList(thing: kotlin.collections.List<kotlin.Int>): kotlin.collections.List<kotlin.Int>\r\n  /**\r\n   * Prints 'testEnum(\"%d\")' where thing has been formatted into its numeric value\r\n   * @param Numberz thing - the Numberz to print\r\n   * @return Numberz - returns the Numberz 'thing'\r\n   */\r\n  suspend fun testEnum(thing: Numberz): Numberz\r\n  /**\r\n   * Prints 'testTypedef(\"%d\")' with thing as '%d'\r\n   * @param UserId thing - the UserId to print\r\n   * @return UserId - returns the UserId 'thing'\r\n   */\r\n  suspend fun testTypedef(thing: kotlin.Long): kotlin.Long\r\n  /**\r\n   * Prints 'testMapMap(\"%d\")' with hello as '%d'\r\n   * @param i32 hello - the i32 to print\r\n   * @return map<i32,map<i32,i32>> - returns a dictionary with these values:\r\n   *   {-4 => {-4 => -4, -3 => -3, -2 => -2, -1 => -1, }, 4 => {1 => 1, 2 => 2, 3 => 3, 4 => 4, }, }\r\n   */\r\n  suspend fun testMapMap(hello: kotlin.Int): kotlin.collections.Map<kotlin.Int, kotlin.collections.Map<kotlin.Int, kotlin.Int>>\r\n  /**\r\n   * So you think you've got this all worked out, eh?\r\n   * \r\n   * Creates a map with these values and prints it out:\r\n   *   { 1 => { 2 => argument,\r\n   *            3 => argument,\r\n   *          },\r\n   *     2 => { 6 => <empty Insanity struct>, },\r\n   *   }\r\n   * @return map<UserId, map<Numberz,Insanity>> - a map with the above values\r\n   */\r\n  suspend fun testInsanity(argument: Insanity): kotlin.collections.Map<kotlin.Long, kotlin.collections.Map<Numberz, Insanity>>\r\n  /**\r\n   * Prints 'testMulti()'\r\n   * @param i8 arg0 -\r\n   * @param i32 arg1 -\r\n   * @param i64 arg2 -\r\n   * @param map<i16, string> arg3 -\r\n   * @param Numberz arg4 -\r\n   * @param UserId arg5 -\r\n   * @return Xtruct - returns an Xtruct with string_thing = \"Hello2, byte_thing = arg0, i32_thing = arg1\r\n   *    and i64_thing = arg2\r\n   */\r\n  suspend fun testMulti(arg0: kotlin.Byte, arg1: kotlin.Int, arg2: kotlin.Long, arg3: kotlin.collections.Map<kotlin.Short, kotlin.String>, arg4: Numberz, arg5: kotlin.Long): Xtruct\r\n  /**\r\n   * Print 'testException(%s)' with arg as '%s'\r\n   * @param string arg - a string indication what type of exception to throw\r\n   * if arg == \"Xception\" throw Xception with errorCode = 1001 and message = arg\r\n   * else if arg == \"TException\" throw TException\r\n   * else do not throw anything\r\n   */\r\n  suspend fun testException(arg: kotlin.String): kotlin.Unit\r\n  /**\r\n   * Print 'testMultiException(%s, %s)' with arg0 as '%s' and arg1 as '%s'\r\n   * @param string arg - a string indicating what type of exception to throw\r\n   * if arg0 == \"Xception\" throw Xception with errorCode = 1001 and message = \"This is an Xception\"\r\n   * else if arg0 == \"Xception2\" throw Xception2 with errorCode = 2002 and struct_thing.string_thing = \"This is an Xception2\"\r\n   * else do not throw anything\r\n   * @return Xtruct - an Xtruct with string_thing = arg1\r\n   */\r\n  suspend fun testMultiException(arg0: kotlin.String, arg1: kotlin.String): Xtruct\r\n  /**\r\n   * Print 'testOneway(%d): Sleeping...' with secondsToSleep as '%d'\r\n   * sleep 'secondsToSleep'\r\n   * Print 'testOneway(%d): done sleeping!' with secondsToSleep as '%d'\r\n   * @param i32 secondsToSleep - the number of seconds to sleep\r\n   */\r\n  suspend fun testOneway(secondsToSleep: kotlin.Int): kotlin.Unit\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>ThriftTestProcessor.kt</summary>\r\n\r\n```kotlin\r\n/**\r\n * Autogenerated by Thrift Compiler (0.17.0)\r\n *\r\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\r\n *  @generated\r\n */\r\n@file:Suppress(\"ClassName\", \"PropertyName\", \"RedundantUnitReturnType\", \"NestedLambdaShadowedImplicitParameter\", \"RemoveRedundantQualifierName\")\r\npackage thrift.test\r\n\r\nimport kotlinx.coroutines.future.future\r\n\r\n/**\r\n * server implementation for [ThriftTest]\r\n */\r\n@javax.annotation.Generated\r\nclass ThriftTestProcessor(\r\n  handler: ThriftTest,\r\n  private val scope: kotlinx.coroutines.CoroutineScope,\r\n  private val processMap: kotlin.collections.Map<kotlin.String, org.apache.thrift.AsyncProcessFunction<ThriftTest, out org.apache.thrift.TBase<*, *>, out kotlin.Any>> = mapOf(\r\n    \"testVoid\" to ProcessFunction.testVoid(scope),\r\n    \"testString\" to ProcessFunction.testString(scope),\r\n    \"testBool\" to ProcessFunction.testBool(scope),\r\n    \"testByte\" to ProcessFunction.testByte(scope),\r\n    \"testI32\" to ProcessFunction.testI32(scope),\r\n    \"testI64\" to ProcessFunction.testI64(scope),\r\n    \"testDouble\" to ProcessFunction.testDouble(scope),\r\n    \"testBinary\" to ProcessFunction.testBinary(scope),\r\n    \"testStruct\" to ProcessFunction.testStruct(scope),\r\n    \"testNest\" to ProcessFunction.testNest(scope),\r\n    \"testMap\" to ProcessFunction.testMap(scope),\r\n    \"testStringMap\" to ProcessFunction.testStringMap(scope),\r\n    \"testSet\" to ProcessFunction.testSet(scope),\r\n    \"testList\" to ProcessFunction.testList(scope),\r\n    \"testEnum\" to ProcessFunction.testEnum(scope),\r\n    \"testTypedef\" to ProcessFunction.testTypedef(scope),\r\n    \"testMapMap\" to ProcessFunction.testMapMap(scope),\r\n    \"testInsanity\" to ProcessFunction.testInsanity(scope),\r\n    \"testMulti\" to ProcessFunction.testMulti(scope),\r\n    \"testException\" to ProcessFunction.testException(scope),\r\n    \"testMultiException\" to ProcessFunction.testMultiException(scope),\r\n    \"testOneway\" to ProcessFunction.testOneway(scope),\r\n  )\r\n): org.apache.thrift.TBaseAsyncProcessor<ThriftTest>(handler, processMap) {\r\n  companion object {\r\n    internal val logger: org.slf4j.Logger = org.slf4j.LoggerFactory.getLogger(ThriftTestProcessor::class.java)\r\n  }\r\n  sealed interface ProcessFunction {\r\n    @javax.annotation.Generated\r\n    class testVoid<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testVoid_args, kotlin.Unit>(\"testVoid\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testVoid_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testVoid_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.Unit>) {\r\n        scope.future {\r\n          iface.testVoid()\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.Unit>{\r\n          override fun onComplete(response: kotlin.Unit) {\r\n            val result = ThriftTestFunctionResult.testVoid_result()\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testString<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testString_args, kotlin.String>(\"testString\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testString_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testString_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.String>) {\r\n        scope.future {\r\n          iface.testString(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.String>{\r\n          override fun onComplete(response: kotlin.String) {\r\n            val result = ThriftTestFunctionResult.testString_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testBool<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testBool_args, kotlin.Boolean>(\"testBool\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testBool_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testBool_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.Boolean>) {\r\n        scope.future {\r\n          iface.testBool(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.Boolean>{\r\n          override fun onComplete(response: kotlin.Boolean) {\r\n            val result = ThriftTestFunctionResult.testBool_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testByte<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testByte_args, kotlin.Byte>(\"testByte\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testByte_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testByte_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.Byte>) {\r\n        scope.future {\r\n          iface.testByte(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.Byte>{\r\n          override fun onComplete(response: kotlin.Byte) {\r\n            val result = ThriftTestFunctionResult.testByte_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testI32<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testI32_args, kotlin.Int>(\"testI32\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testI32_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testI32_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.Int>) {\r\n        scope.future {\r\n          iface.testI32(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.Int>{\r\n          override fun onComplete(response: kotlin.Int) {\r\n            val result = ThriftTestFunctionResult.testI32_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testI64<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testI64_args, kotlin.Long>(\"testI64\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testI64_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testI64_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.Long>) {\r\n        scope.future {\r\n          iface.testI64(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.Long>{\r\n          override fun onComplete(response: kotlin.Long) {\r\n            val result = ThriftTestFunctionResult.testI64_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testDouble<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testDouble_args, kotlin.Double>(\"testDouble\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testDouble_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testDouble_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.Double>) {\r\n        scope.future {\r\n          iface.testDouble(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.Double>{\r\n          override fun onComplete(response: kotlin.Double) {\r\n            val result = ThriftTestFunctionResult.testDouble_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testBinary<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testBinary_args, kotlin.ByteArray>(\"testBinary\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testBinary_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testBinary_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.ByteArray>) {\r\n        scope.future {\r\n          iface.testBinary(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.ByteArray>{\r\n          override fun onComplete(response: kotlin.ByteArray) {\r\n            val result = ThriftTestFunctionResult.testBinary_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testStruct<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testStruct_args, Xtruct>(\"testStruct\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testStruct_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testStruct_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<Xtruct>) {\r\n        scope.future {\r\n          iface.testStruct(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<Xtruct>{\r\n          override fun onComplete(response: Xtruct) {\r\n            val result = ThriftTestFunctionResult.testStruct_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testNest<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testNest_args, Xtruct2>(\"testNest\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testNest_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testNest_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<Xtruct2>) {\r\n        scope.future {\r\n          iface.testNest(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<Xtruct2>{\r\n          override fun onComplete(response: Xtruct2) {\r\n            val result = ThriftTestFunctionResult.testNest_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testMap<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testMap_args, kotlin.collections.Map<kotlin.Int, kotlin.Int>>(\"testMap\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testMap_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testMap_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.collections.Map<kotlin.Int, kotlin.Int>>) {\r\n        scope.future {\r\n          iface.testMap(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.collections.Map<kotlin.Int, kotlin.Int>>{\r\n          override fun onComplete(response: kotlin.collections.Map<kotlin.Int, kotlin.Int>) {\r\n            val result = ThriftTestFunctionResult.testMap_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testStringMap<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testStringMap_args, kotlin.collections.Map<kotlin.String, kotlin.String>>(\"testStringMap\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testStringMap_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testStringMap_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.collections.Map<kotlin.String, kotlin.String>>) {\r\n        scope.future {\r\n          iface.testStringMap(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.collections.Map<kotlin.String, kotlin.String>>{\r\n          override fun onComplete(response: kotlin.collections.Map<kotlin.String, kotlin.String>) {\r\n            val result = ThriftTestFunctionResult.testStringMap_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testSet<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testSet_args, kotlin.collections.Set<kotlin.Int>>(\"testSet\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testSet_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testSet_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.collections.Set<kotlin.Int>>) {\r\n        scope.future {\r\n          iface.testSet(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.collections.Set<kotlin.Int>>{\r\n          override fun onComplete(response: kotlin.collections.Set<kotlin.Int>) {\r\n            val result = ThriftTestFunctionResult.testSet_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testList<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testList_args, kotlin.collections.List<kotlin.Int>>(\"testList\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testList_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testList_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.collections.List<kotlin.Int>>) {\r\n        scope.future {\r\n          iface.testList(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.collections.List<kotlin.Int>>{\r\n          override fun onComplete(response: kotlin.collections.List<kotlin.Int>) {\r\n            val result = ThriftTestFunctionResult.testList_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testEnum<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testEnum_args, Numberz>(\"testEnum\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testEnum_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testEnum_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<Numberz>) {\r\n        scope.future {\r\n          iface.testEnum(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<Numberz>{\r\n          override fun onComplete(response: Numberz) {\r\n            val result = ThriftTestFunctionResult.testEnum_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testTypedef<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testTypedef_args, kotlin.Long>(\"testTypedef\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testTypedef_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testTypedef_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.Long>) {\r\n        scope.future {\r\n          iface.testTypedef(args.thing!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.Long>{\r\n          override fun onComplete(response: kotlin.Long) {\r\n            val result = ThriftTestFunctionResult.testTypedef_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testMapMap<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testMapMap_args, kotlin.collections.Map<kotlin.Int, kotlin.collections.Map<kotlin.Int, kotlin.Int>>>(\"testMapMap\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testMapMap_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testMapMap_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.collections.Map<kotlin.Int, kotlin.collections.Map<kotlin.Int, kotlin.Int>>>) {\r\n        scope.future {\r\n          iface.testMapMap(args.hello!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.collections.Map<kotlin.Int, kotlin.collections.Map<kotlin.Int, kotlin.Int>>>{\r\n          override fun onComplete(response: kotlin.collections.Map<kotlin.Int, kotlin.collections.Map<kotlin.Int, kotlin.Int>>) {\r\n            val result = ThriftTestFunctionResult.testMapMap_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testInsanity<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testInsanity_args, kotlin.collections.Map<kotlin.Long, kotlin.collections.Map<Numberz, Insanity>>>(\"testInsanity\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testInsanity_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testInsanity_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.collections.Map<kotlin.Long, kotlin.collections.Map<Numberz, Insanity>>>) {\r\n        scope.future {\r\n          iface.testInsanity(args.argument!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.collections.Map<kotlin.Long, kotlin.collections.Map<Numberz, Insanity>>>{\r\n          override fun onComplete(response: kotlin.collections.Map<kotlin.Long, kotlin.collections.Map<Numberz, Insanity>>) {\r\n            val result = ThriftTestFunctionResult.testInsanity_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testMulti<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testMulti_args, Xtruct>(\"testMulti\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testMulti_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testMulti_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<Xtruct>) {\r\n        scope.future {\r\n          iface.testMulti(args.arg0!!, args.arg1!!, args.arg2!!, args.arg3!!, args.arg4!!, args.arg5!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<Xtruct>{\r\n          override fun onComplete(response: Xtruct) {\r\n            val result = ThriftTestFunctionResult.testMulti_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testException<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testException_args, kotlin.Unit>(\"testException\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testException_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testException_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.Unit>) {\r\n        scope.future {\r\n          iface.testException(args.arg!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.Unit>{\r\n          override fun onComplete(response: kotlin.Unit) {\r\n            val result = ThriftTestFunctionResult.testException_result()\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is Xception -> {\r\n                val result = ThriftTestFunctionResult.testException_result()\r\n                result.err1 = exception\r\n                org.apache.thrift.protocol.TMessageType.REPLY to result\r\n              }\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testMultiException<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testMultiException_args, Xtruct>(\"testMultiException\"), ProcessFunction {\r\n      override fun isOneway() = false\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testMultiException_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testMultiException_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<Xtruct>) {\r\n        scope.future {\r\n          iface.testMultiException(args.arg0!!, args.arg1!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<Xtruct>{\r\n          override fun onComplete(response: Xtruct) {\r\n            val result = ThriftTestFunctionResult.testMultiException_result()\r\n            result.success = response\r\n            try {\r\n              sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY, seqid)\r\n            } catch (e: org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException writing to internal frame buffer\", e)\r\n              fb.close()\r\n            } catch (e: Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", e)\r\n              onError(e)\r\n            }\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            val (msgType, msg) = when (exception) {\r\n              is Xception -> {\r\n                val result = ThriftTestFunctionResult.testMultiException_result()\r\n                result.err1 = exception\r\n                org.apache.thrift.protocol.TMessageType.REPLY to result\r\n              }\r\n              is Xception2 -> {\r\n                val result = ThriftTestFunctionResult.testMultiException_result()\r\n                result.err2 = exception\r\n                org.apache.thrift.protocol.TMessageType.REPLY to result\r\n              }\r\n              is org.apache.thrift.transport.TTransportException -> {\r\n                logger.error(\"TTransportException inside handler\", exception)\r\n                fb.close()\r\n                return\r\n              }\r\n              is org.apache.thrift.TApplicationException -> {\r\n                logger.error(\"TApplicationException inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to exception\r\n              }\r\n              else -> {\r\n                logger.error(\"Exception inside handler\", exception)\r\n                org.apache.thrift.protocol.TMessageType.EXCEPTION to org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, exception.message)\r\n              }\r\n            }\r\n            try {\r\n              sendResponse(fb, msg, msgType, seqid)\r\n            } catch (ex: java.lang.Exception) {\r\n              logger.error(\"Exception writing to internal frame buffer\", ex)\r\n              fb.close()\r\n            }\r\n          }\r\n        }\r\n    }\r\n    @javax.annotation.Generated\r\n    class testOneway<I : ThriftTest>(private val scope: kotlinx.coroutines.CoroutineScope) : org.apache.thrift.AsyncProcessFunction<I, ThriftTestFunctionArgs.testOneway_args, kotlin.Unit>(\"testOneway\"), ProcessFunction {\r\n      override fun isOneway() = true\r\n      override fun getEmptyArgsInstance() = ThriftTestFunctionArgs.testOneway_args()\r\n      override fun start(iface: I, args: ThriftTestFunctionArgs.testOneway_args, resultHandler: org.apache.thrift.async.AsyncMethodCallback<kotlin.Unit>) {\r\n        scope.future {\r\n          iface.testOneway(args.secondsToSleep!!)\r\n        }.whenComplete { r, t ->\r\n          if (t != null) {\r\n            resultHandler.onError(t as java.lang.Exception)\r\n          } else {\r\n            resultHandler.onComplete(r)\r\n          }\r\n        }\r\n      }\r\n      override fun getResultHandler(fb: org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer, seqid: Int) =\r\n        object : org.apache.thrift.async.AsyncMethodCallback<kotlin.Unit>{\r\n          override fun onComplete(response: kotlin.Unit) {\r\n            // one way function, no result handling\r\n          }\r\n          override fun onError(exception: kotlin.Exception) {\r\n            if (exception is org.apache.thrift.transport.TTransportException) {\r\n              logger.error(\"TTransportException inside handler\", exception)\r\n              fb.close()\r\n            } else {\r\n              logger.error(\"Exception inside oneway handler\", exception)\r\n            }\r\n          }\r\n        }\r\n    }\r\n  }\r\n}\r\n```\r\n</details>","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1094904649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095892338","html_url":"https://github.com/apache/thrift/pull/2559#issuecomment-1095892338","issue_url":"https://api.github.com/repos/apache/thrift/issues/2559","id":1095892338,"node_id":"IC_kwDOAAS9U85BUf1y","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-12T03:02:40Z","updated_at":"2022-04-12T03:02:40Z","author_association":"MEMBER","body":"> These changes are harder to review than necessary, because they contain a lot of style changes. I would recommend minimizing the changes in this PR by retaining the existing style, so it's easier to review. For style standardization/improvements, I'd suggest creating a separate PR that does only that and no substantive changes.\r\n\r\nThanks for the suggestion - I wonder it too. The formatting changes were made by my editor, and I don't have a good way to separate it from the actual changes now.\r\n\r\nIf it's okay do you think I can create a separate, clean, style only change and merge that first. And then this change can be much cleaner? @ctubbsii ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095892338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095907799","html_url":"https://github.com/apache/thrift/pull/2559#issuecomment-1095907799","issue_url":"https://api.github.com/repos/apache/thrift/issues/2559","id":1095907799,"node_id":"IC_kwDOAAS9U85BUjnX","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-12T03:13:16Z","updated_at":"2022-04-12T03:13:16Z","author_association":"MEMBER","body":"> If it's okay do you think I can create a separate, clean, style only change and merge that first. And then this change can be much cleaner?\r\n\r\nYeah, I think that would be a good option. If a standard style can be enforced by people with any editor, something like what the formatter-maven-plugin provides for Java code, that would be even better, I would think.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095907799/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095918193","html_url":"https://github.com/apache/thrift/pull/2559#issuecomment-1095918193","issue_url":"https://api.github.com/repos/apache/thrift/issues/2559","id":1095918193,"node_id":"IC_kwDOAAS9U85BUmJx","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-12T03:21:41Z","updated_at":"2022-04-12T03:21:54Z","author_association":"MEMBER","body":" yes @ctubbsii the tool is `clang-format` and it's also centrally configured [here](https://github.com/apache/thrift/blob/master/.clang-format) - which is also what my editor formatting is relying on.\r\n\r\n- I'm creating https://github.com/apache/thrift/pull/2560 as style only format to precede this change","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095918193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095922213","html_url":"https://github.com/apache/thrift/pull/2559#issuecomment-1095922213","issue_url":"https://api.github.com/repos/apache/thrift/issues/2559","id":1095922213,"node_id":"IC_kwDOAAS9U85BUnIl","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-12T03:25:16Z","updated_at":"2022-04-12T03:25:16Z","author_association":"MEMBER","body":"I just learned about clang-format. It seems nice... but a quick check shows it's defaults would change a lot of thrift code, and not always for the better. I'm not sure if the Thrift community would endorse its use, but there is a .clang-format file in the root directory. It seems it hasn't been run in awhile. It might be easier to just look over this PR and try to undo the formatting changes. Or, just rely on reviewers to figure it out.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095922213/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095939454","html_url":"https://github.com/apache/thrift/pull/2560#issuecomment-1095939454","issue_url":"https://api.github.com/repos/apache/thrift/issues/2560","id":1095939454,"node_id":"IC_kwDOAAS9U85BUrV-","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-12T03:41:34Z","updated_at":"2022-04-12T03:41:34Z","author_association":"MEMBER","body":"Apparently there's a `make style` target... it's even in the [CONTRIBUTING.md] and contributor documentation on the website. I guess nobody runs it very often... because lots of stuff are way off. This PR only fixes it for one file... which is fine. I confirmed that this file conforms to the `make style` output after this PR.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095939454/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095955099","html_url":"https://github.com/apache/thrift/pull/2560#issuecomment-1095955099","issue_url":"https://api.github.com/repos/apache/thrift/issues/2560","id":1095955099,"node_id":"IC_kwDOAAS9U85BUvKb","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-12T03:55:47Z","updated_at":"2022-04-12T03:55:47Z","author_association":"MEMBER","body":"The CI tasks seem completely stalled... queued for 30 minutes, not even beginning to run. I built locally without libs to confirm that the generator still compiles fine, that these changes are purely cosmetic.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095955099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095959807","html_url":"https://github.com/apache/thrift/pull/2559#issuecomment-1095959807","issue_url":"https://api.github.com/repos/apache/thrift/issues/2559","id":1095959807,"node_id":"IC_kwDOAAS9U85BUwT_","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-12T04:00:21Z","updated_at":"2022-04-12T04:00:21Z","author_association":"MEMBER","body":"@Jimexist I think you need to rebase and force-push to get this up-to-date.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1095959807/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1096893593","html_url":"https://github.com/apache/thrift/pull/2562#issuecomment-1096893593","issue_url":"https://api.github.com/repos/apache/thrift/issues/2562","id":1096893593,"node_id":"IC_kwDOAAS9U85BYUSZ","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-12T15:43:10Z","updated_at":"2022-04-12T15:43:10Z","author_association":"MEMBER","body":"Result:\r\n\r\n<details>\r\n<summary>Generated `Service.java`</summary>\r\n\r\n```java\r\n/**\r\n * Autogenerated by Thrift Compiler (0.17.0)\r\n *\r\n * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\r\n *  @generated\r\n */\r\npackage thrift.test;\r\n\r\n@SuppressWarnings({\"cast\", \"rawtypes\", \"serial\", \"unchecked\", \"unused\"})\r\n@javax.annotation.Generated(value = \"Autogenerated by Thrift Compiler (0.17.0)\", date = \"2022-04-12\")\r\npublic class Service {\r\n\r\n  public interface Iface {\r\n\r\n    public long mymethod(long blah) throws org.apache.thrift.TException;\r\n\r\n  }\r\n\r\n  public interface AsyncIface {\r\n\r\n    public void mymethod(long blah, org.apache.thrift.async.AsyncMethodCallback<java.lang.Long> resultHandler) throws org.apache.thrift.TException;\r\n\r\n  }\r\n\r\n  public interface FutureIface {\r\n\r\n    public java.util.concurrent.CompletableFuture<java.lang.Long> mymethod(long blah) throws org.apache.thrift.TException;\r\n\r\n  }\r\n\r\n\r\n  public static class Client extends org.apache.thrift.TServiceClient implements Iface {\r\n    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {\r\n      public Factory() {}\r\n      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {\r\n        return new Client(prot);\r\n      }\r\n      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {\r\n        return new Client(iprot, oprot);\r\n      }\r\n    }\r\n\r\n    public Client(org.apache.thrift.protocol.TProtocol prot)\r\n    {\r\n      super(prot, prot);\r\n    }\r\n\r\n    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {\r\n      super(iprot, oprot);\r\n    }\r\n\r\n    public long mymethod(long blah) throws org.apache.thrift.TException\r\n    {\r\n      send_mymethod(blah);\r\n      return recv_mymethod();\r\n    }\r\n\r\n    public void send_mymethod(long blah) throws org.apache.thrift.TException\r\n    {\r\n      mymethod_args args = new mymethod_args();\r\n      args.set_blah(blah);\r\n      sendBase(\"mymethod\", args);\r\n    }\r\n\r\n    public long recv_mymethod() throws org.apache.thrift.TException\r\n    {\r\n      mymethod_result result = new mymethod_result();\r\n      receiveBase(result, \"mymethod\");\r\n      if (result.is_set_success()) {\r\n        return result.success;\r\n      }\r\n      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, \"mymethod failed: unknown result\");\r\n    }\r\n\r\n  }\r\n  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {\r\n    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {\r\n      private org.apache.thrift.async.TAsyncClientManager clientManager;\r\n      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;\r\n      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {\r\n        this.clientManager = clientManager;\r\n        this.protocolFactory = protocolFactory;\r\n      }\r\n      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {\r\n        return new AsyncClient(protocolFactory, clientManager, transport);\r\n      }\r\n    }\r\n\r\n    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {\r\n      super(protocolFactory, clientManager, transport);\r\n    }\r\n\r\n    public void mymethod(long blah, org.apache.thrift.async.AsyncMethodCallback<java.lang.Long> resultHandler) throws org.apache.thrift.TException {\r\n      checkReady();\r\n      mymethod_call method_call = new mymethod_call(blah, resultHandler, this, ___protocolFactory, ___transport);\r\n      this.___currentMethod = method_call;\r\n      ___manager.call(method_call);\r\n    }\r\n\r\n    public static class mymethod_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.Long> {\r\n      private long blah;\r\n      public mymethod_call(long blah, org.apache.thrift.async.AsyncMethodCallback<java.lang.Long> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {\r\n        super(client, protocolFactory, transport, resultHandler, false);\r\n        this.blah = blah;\r\n      }\r\n\r\n      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {\r\n        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage(\"mymethod\", org.apache.thrift.protocol.TMessageType.CALL, 0));\r\n        mymethod_args args = new mymethod_args();\r\n        args.set_blah(blah);\r\n        args.write(prot);\r\n        prot.writeMessageEnd();\r\n      }\r\n\r\n      public java.lang.Long getResult() throws org.apache.thrift.TException {\r\n        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {\r\n          throw new java.lang.IllegalStateException(\"Method call not finished!\");\r\n        }\r\n        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());\r\n        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);\r\n        return (new Client(prot)).recv_mymethod();\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  public static class FutureClient implements FutureIface {\r\n    public FutureClient(AsyncIface delegate) {\r\n      this.delegate = delegate;\r\n    }\r\n    private final AsyncIface delegate;\r\n    @Override\r\n    public java.util.concurrent.CompletableFuture<java.lang.Long> mymethod(long blah) throws org.apache.thrift.TException {\r\n      org.apache.thrift.async.AsyncMethodFutureAdapter<java.lang.Long> asyncMethodFutureAdapter24 = org.apache.thrift.async.AsyncMethodFutureAdapter.<java.lang.Long>create();\r\n      delegate.mymethod(blah, asyncMethodFutureAdapter24);\r\n      return asyncMethodFutureAdapter24.getFuture();\r\n    }\r\n\r\n  }\r\n\r\n  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {\r\n    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());\r\n    public Processor(I iface) {\r\n      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));\r\n    }\r\n\r\n    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {\r\n      super(iface, getProcessMap(processMap));\r\n    }\r\n\r\n    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {\r\n      processMap.put(\"mymethod\", new mymethod());\r\n      return processMap;\r\n    }\r\n\r\n    public static class mymethod<I extends Iface> extends org.apache.thrift.ProcessFunction<I, mymethod_args> {\r\n      public mymethod() {\r\n        super(\"mymethod\");\r\n      }\r\n\r\n      public mymethod_args getEmptyArgsInstance() {\r\n        return new mymethod_args();\r\n      }\r\n\r\n      protected boolean isOneway() {\r\n        return false;\r\n      }\r\n\r\n      @Override\r\n      protected boolean rethrowUnhandledExceptions() {\r\n        return false;\r\n      }\r\n\r\n      public mymethod_result getResult(I iface, mymethod_args args) throws org.apache.thrift.TException {\r\n        mymethod_result result = new mymethod_result();\r\n        result.success = iface.mymethod(args.blah);\r\n        result.set_success_isSet(true);\r\n        return result;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {\r\n    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());\r\n    public AsyncProcessor(I iface) {\r\n      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));\r\n    }\r\n\r\n    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {\r\n      super(iface, getProcessMap(processMap));\r\n    }\r\n\r\n    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {\r\n      processMap.put(\"mymethod\", new mymethod());\r\n      return processMap;\r\n    }\r\n\r\n    public static class mymethod<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, mymethod_args, java.lang.Long> {\r\n      public mymethod() {\r\n        super(\"mymethod\");\r\n      }\r\n\r\n      public mymethod_args getEmptyArgsInstance() {\r\n        return new mymethod_args();\r\n      }\r\n\r\n      public org.apache.thrift.async.AsyncMethodCallback<java.lang.Long> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {\r\n        final org.apache.thrift.AsyncProcessFunction fcall = this;\r\n        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.Long>() { \r\n          public void onComplete(java.lang.Long o) {\r\n            mymethod_result result = new mymethod_result();\r\n            result.success = o;\r\n            result.set_success_isSet(true);\r\n            try {\r\n              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);\r\n            } catch (org.apache.thrift.transport.TTransportException e) {\r\n              _LOGGER.error(\"TTransportException writing to internal frame buffer\", e);\r\n              fb.close();\r\n            } catch (java.lang.Exception e) {\r\n              _LOGGER.error(\"Exception writing to internal frame buffer\", e);\r\n              onError(e);\r\n            }\r\n          }\r\n          public void onError(java.lang.Exception e) {\r\n            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;\r\n            org.apache.thrift.TSerializable msg;\r\n            mymethod_result result = new mymethod_result();\r\n            if (e instanceof org.apache.thrift.transport.TTransportException) {\r\n              _LOGGER.error(\"TTransportException inside handler\", e);\r\n              fb.close();\r\n              return;\r\n            } else if (e instanceof org.apache.thrift.TApplicationException) {\r\n              _LOGGER.error(\"TApplicationException inside handler\", e);\r\n              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;\r\n              msg = (org.apache.thrift.TApplicationException)e;\r\n            } else {\r\n              _LOGGER.error(\"Exception inside handler\", e);\r\n              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;\r\n              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());\r\n            }\r\n            try {\r\n              fcall.sendResponse(fb,msg,msgType,seqid);\r\n            } catch (java.lang.Exception ex) {\r\n              _LOGGER.error(\"Exception writing to internal frame buffer\", ex);\r\n              fb.close();\r\n            }\r\n          }\r\n        };\r\n      }\r\n\r\n      protected boolean isOneway() {\r\n        return false;\r\n      }\r\n\r\n      public void start(I iface, mymethod_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.Long> resultHandler) throws org.apache.thrift.TException {\r\n        iface.mymethod(args.blah,resultHandler);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  public static class mymethod_args implements org.apache.thrift.TBase<mymethod_args, mymethod_args._Fields>, java.io.Serializable, Cloneable, Comparable<mymethod_args>   {\r\n    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(\"mymethod_args\");\r\n\r\n    private static final org.apache.thrift.protocol.TField BLAH_FIELD_DESC = new org.apache.thrift.protocol.TField(\"blah\", org.apache.thrift.protocol.TType.I64, (short)-1);\r\n\r\n    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new mymethod_argsStandardSchemeFactory();\r\n    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new mymethod_argsTupleSchemeFactory();\r\n\r\n    private long blah; // required\r\n\r\n    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\r\n    public enum _Fields implements org.apache.thrift.TFieldIdEnum {\r\n      BLAH((short)-1, \"blah\");\r\n\r\n      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();\r\n\r\n      static {\r\n        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {\r\n          byName.put(field.getFieldName(), field);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Find the _Fields constant that matches fieldId, or null if its not found.\r\n       */\r\n      @org.apache.thrift.annotation.Nullable\r\n      public static _Fields findByThriftId(int fieldId) {\r\n        switch(fieldId) {\r\n          case -1: // BLAH\r\n            return BLAH;\r\n          default:\r\n            return null;\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Find the _Fields constant that matches fieldId, throwing an exception\r\n       * if it is not found.\r\n       */\r\n      public static _Fields findByThriftIdOrThrow(int fieldId) {\r\n        _Fields fields = findByThriftId(fieldId);\r\n        if (fields == null) throw new java.lang.IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\r\n        return fields;\r\n      }\r\n\r\n      /**\r\n       * Find the _Fields constant that matches name, or null if its not found.\r\n       */\r\n      @org.apache.thrift.annotation.Nullable\r\n      public static _Fields findByName(java.lang.String name) {\r\n        return byName.get(name);\r\n      }\r\n\r\n      private final short _thriftId;\r\n      private final java.lang.String _fieldName;\r\n\r\n      _Fields(short thriftId, java.lang.String fieldName) {\r\n        _thriftId = thriftId;\r\n        _fieldName = fieldName;\r\n      }\r\n\r\n      public short getThriftFieldId() {\r\n        return _thriftId;\r\n      }\r\n\r\n      public java.lang.String getFieldName() {\r\n        return _fieldName;\r\n      }\r\n    }\r\n\r\n    // isset id assignments\r\n    private static final int __BLAH_ISSET_ID = 0;\r\n    private byte __isset_bitfield = 0;\r\n    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\r\n    static {\r\n      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\r\n      tmpMap.put(_Fields.BLAH, new org.apache.thrift.meta_data.FieldMetaData(\"blah\", org.apache.thrift.TFieldRequirementType.DEFAULT, \r\n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));\r\n      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);\r\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(mymethod_args.class, metaDataMap);\r\n    }\r\n\r\n    public mymethod_args() {\r\n    }\r\n\r\n    public mymethod_args(\r\n      long blah)\r\n    {\r\n      this();\r\n      this.blah = blah;\r\n      set_blah_isSet(true);\r\n    }\r\n\r\n    /**\r\n     * Performs a deep copy on <i>other</i>.\r\n     */\r\n    public mymethod_args(mymethod_args other) {\r\n      __isset_bitfield = other.__isset_bitfield;\r\n      this.blah = other.blah;\r\n    }\r\n\r\n    public mymethod_args deepCopy() {\r\n      return new mymethod_args(this);\r\n    }\r\n\r\n    @Override\r\n    public void clear() {\r\n      set_blah_isSet(false);\r\n      this.blah = 0;\r\n    }\r\n\r\n    public long get_blah() {\r\n      return this.blah;\r\n    }\r\n\r\n    public void set_blah(long blah) {\r\n      this.blah = blah;\r\n      set_blah_isSet(true);\r\n    }\r\n\r\n    public void unset_blah() {\r\n      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BLAH_ISSET_ID);\r\n    }\r\n\r\n    /** Returns true if field blah is set (has been assigned a value) and false otherwise */\r\n    public boolean is_set_blah() {\r\n      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BLAH_ISSET_ID);\r\n    }\r\n\r\n    public void set_blah_isSet(boolean value) {\r\n      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BLAH_ISSET_ID, value);\r\n    }\r\n\r\n    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {\r\n      switch (field) {\r\n      case BLAH:\r\n        if (value == null) {\r\n          unset_blah();\r\n        } else {\r\n          set_blah((java.lang.Long)value);\r\n        }\r\n        break;\r\n\r\n      }\r\n    }\r\n\r\n    @org.apache.thrift.annotation.Nullable\r\n    public java.lang.Object getFieldValue(_Fields field) {\r\n      switch (field) {\r\n      case BLAH:\r\n        return get_blah();\r\n\r\n      }\r\n      throw new java.lang.IllegalStateException();\r\n    }\r\n\r\n    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */\r\n    public boolean isSet(_Fields field) {\r\n      if (field == null) {\r\n        throw new java.lang.IllegalArgumentException();\r\n      }\r\n\r\n      switch (field) {\r\n      case BLAH:\r\n        return is_set_blah();\r\n      }\r\n      throw new java.lang.IllegalStateException();\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(java.lang.Object that) {\r\n      if (that instanceof mymethod_args)\r\n        return this.equals((mymethod_args)that);\r\n      return false;\r\n    }\r\n\r\n    public boolean equals(mymethod_args that) {\r\n      if (that == null)\r\n        return false;\r\n      if (this == that)\r\n        return true;\r\n\r\n      boolean this_present_blah = true;\r\n      boolean that_present_blah = true;\r\n      if (this_present_blah || that_present_blah) {\r\n        if (!(this_present_blah && that_present_blah))\r\n          return false;\r\n        if (this.blah != that.blah)\r\n          return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n      int hashCode = 1;\r\n\r\n      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(blah);\r\n\r\n      return hashCode;\r\n    }\r\n\r\n    @Override\r\n    public int compareTo(mymethod_args other) {\r\n      if (!getClass().equals(other.getClass())) {\r\n        return getClass().getName().compareTo(other.getClass().getName());\r\n      }\r\n\r\n      int lastComparison = 0;\r\n\r\n      lastComparison = java.lang.Boolean.compare(is_set_blah(), other.is_set_blah());\r\n      if (lastComparison != 0) {\r\n        return lastComparison;\r\n      }\r\n      if (is_set_blah()) {\r\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.blah, other.blah);\r\n        if (lastComparison != 0) {\r\n          return lastComparison;\r\n        }\r\n      }\r\n      return 0;\r\n    }\r\n\r\n    @org.apache.thrift.annotation.Nullable\r\n    public _Fields fieldForId(int fieldId) {\r\n      return _Fields.findByThriftId(fieldId);\r\n    }\r\n\r\n    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\r\n      scheme(iprot).read(iprot, this);\r\n    }\r\n\r\n    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\r\n      scheme(oprot).write(oprot, this);\r\n    }\r\n\r\n    @Override\r\n    public java.lang.String toString() {\r\n      java.lang.StringBuilder sb = new java.lang.StringBuilder(\"mymethod_args(\");\r\n      boolean first = true;\r\n\r\n      sb.append(\"blah:\");\r\n      sb.append(this.blah);\r\n      first = false;\r\n      sb.append(\")\");\r\n      return sb.toString();\r\n    }\r\n\r\n    public void validate() throws org.apache.thrift.TException {\r\n      // check for required fields\r\n      // check for sub-struct validity\r\n    }\r\n\r\n    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\r\n      try {\r\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\r\n      } catch (org.apache.thrift.TException te) {\r\n        throw new java.io.IOException(te);\r\n      }\r\n    }\r\n\r\n    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {\r\n      try {\r\n        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.\r\n        __isset_bitfield = 0;\r\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\r\n      } catch (org.apache.thrift.TException te) {\r\n        throw new java.io.IOException(te);\r\n      }\r\n    }\r\n\r\n    private static class mymethod_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {\r\n      public mymethod_argsStandardScheme getScheme() {\r\n        return new mymethod_argsStandardScheme();\r\n      }\r\n    }\r\n\r\n    private static class mymethod_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<mymethod_args> {\r\n\r\n      public void read(org.apache.thrift.protocol.TProtocol iprot, mymethod_args struct) throws org.apache.thrift.TException {\r\n        org.apache.thrift.protocol.TField schemeField;\r\n        iprot.readStructBegin();\r\n        while (true)\r\n        {\r\n          schemeField = iprot.readFieldBegin();\r\n          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \r\n            break;\r\n          }\r\n          switch (schemeField.id) {\r\n            case -1: // BLAH\r\n              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {\r\n                struct.blah = iprot.readI64();\r\n                struct.set_blah_isSet(true);\r\n              } else { \r\n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\r\n              }\r\n              break;\r\n            default:\r\n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\r\n          }\r\n          iprot.readFieldEnd();\r\n        }\r\n        iprot.readStructEnd();\r\n        struct.validate();\r\n      }\r\n\r\n      public void write(org.apache.thrift.protocol.TProtocol oprot, mymethod_args struct) throws org.apache.thrift.TException {\r\n        struct.validate();\r\n\r\n        oprot.writeStructBegin(STRUCT_DESC);\r\n        oprot.writeFieldBegin(BLAH_FIELD_DESC);\r\n        oprot.writeI64(struct.blah);\r\n        oprot.writeFieldEnd();\r\n        oprot.writeFieldStop();\r\n        oprot.writeStructEnd();\r\n      }\r\n\r\n    }\r\n\r\n    private static class mymethod_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {\r\n      public mymethod_argsTupleScheme getScheme() {\r\n        return new mymethod_argsTupleScheme();\r\n      }\r\n    }\r\n\r\n    private static class mymethod_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<mymethod_args> {\r\n\r\n      @Override\r\n      public void write(org.apache.thrift.protocol.TProtocol prot, mymethod_args struct) throws org.apache.thrift.TException {\r\n        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\r\n        java.util.BitSet optionals = new java.util.BitSet();\r\n        if (struct.is_set_blah()) {\r\n          optionals.set(0);\r\n        }\r\n        oprot.writeBitSet(optionals, 1);\r\n        if (struct.is_set_blah()) {\r\n          oprot.writeI64(struct.blah);\r\n        }\r\n      }\r\n\r\n      @Override\r\n      public void read(org.apache.thrift.protocol.TProtocol prot, mymethod_args struct) throws org.apache.thrift.TException {\r\n        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\r\n        java.util.BitSet incoming = iprot.readBitSet(1);\r\n        if (incoming.get(0)) {\r\n          struct.blah = iprot.readI64();\r\n          struct.set_blah_isSet(true);\r\n        }\r\n      }\r\n    }\r\n\r\n    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {\r\n      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();\r\n    }\r\n  }\r\n\r\n  public static class mymethod_result implements org.apache.thrift.TBase<mymethod_result, mymethod_result._Fields>, java.io.Serializable, Cloneable, Comparable<mymethod_result>   {\r\n    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct(\"mymethod_result\");\r\n\r\n    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField(\"success\", org.apache.thrift.protocol.TType.I64, (short)0);\r\n\r\n    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new mymethod_resultStandardSchemeFactory();\r\n    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new mymethod_resultTupleSchemeFactory();\r\n\r\n    private long success; // required\r\n\r\n    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */\r\n    public enum _Fields implements org.apache.thrift.TFieldIdEnum {\r\n      SUCCESS((short)0, \"success\");\r\n\r\n      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();\r\n\r\n      static {\r\n        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {\r\n          byName.put(field.getFieldName(), field);\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Find the _Fields constant that matches fieldId, or null if its not found.\r\n       */\r\n      @org.apache.thrift.annotation.Nullable\r\n      public static _Fields findByThriftId(int fieldId) {\r\n        switch(fieldId) {\r\n          case 0: // SUCCESS\r\n            return SUCCESS;\r\n          default:\r\n            return null;\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Find the _Fields constant that matches fieldId, throwing an exception\r\n       * if it is not found.\r\n       */\r\n      public static _Fields findByThriftIdOrThrow(int fieldId) {\r\n        _Fields fields = findByThriftId(fieldId);\r\n        if (fields == null) throw new java.lang.IllegalArgumentException(\"Field \" + fieldId + \" doesn't exist!\");\r\n        return fields;\r\n      }\r\n\r\n      /**\r\n       * Find the _Fields constant that matches name, or null if its not found.\r\n       */\r\n      @org.apache.thrift.annotation.Nullable\r\n      public static _Fields findByName(java.lang.String name) {\r\n        return byName.get(name);\r\n      }\r\n\r\n      private final short _thriftId;\r\n      private final java.lang.String _fieldName;\r\n\r\n      _Fields(short thriftId, java.lang.String fieldName) {\r\n        _thriftId = thriftId;\r\n        _fieldName = fieldName;\r\n      }\r\n\r\n      public short getThriftFieldId() {\r\n        return _thriftId;\r\n      }\r\n\r\n      public java.lang.String getFieldName() {\r\n        return _fieldName;\r\n      }\r\n    }\r\n\r\n    // isset id assignments\r\n    private static final int __SUCCESS_ISSET_ID = 0;\r\n    private byte __isset_bitfield = 0;\r\n    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;\r\n    static {\r\n      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);\r\n      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData(\"success\", org.apache.thrift.TFieldRequirementType.DEFAULT, \r\n          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));\r\n      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);\r\n      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(mymethod_result.class, metaDataMap);\r\n    }\r\n\r\n    public mymethod_result() {\r\n    }\r\n\r\n    public mymethod_result(\r\n      long success)\r\n    {\r\n      this();\r\n      this.success = success;\r\n      set_success_isSet(true);\r\n    }\r\n\r\n    /**\r\n     * Performs a deep copy on <i>other</i>.\r\n     */\r\n    public mymethod_result(mymethod_result other) {\r\n      __isset_bitfield = other.__isset_bitfield;\r\n      this.success = other.success;\r\n    }\r\n\r\n    public mymethod_result deepCopy() {\r\n      return new mymethod_result(this);\r\n    }\r\n\r\n    @Override\r\n    public void clear() {\r\n      set_success_isSet(false);\r\n      this.success = 0;\r\n    }\r\n\r\n    public long get_success() {\r\n      return this.success;\r\n    }\r\n\r\n    public void set_success(long success) {\r\n      this.success = success;\r\n      set_success_isSet(true);\r\n    }\r\n\r\n    public void unset_success() {\r\n      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);\r\n    }\r\n\r\n    /** Returns true if field success is set (has been assigned a value) and false otherwise */\r\n    public boolean is_set_success() {\r\n      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);\r\n    }\r\n\r\n    public void set_success_isSet(boolean value) {\r\n      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);\r\n    }\r\n\r\n    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {\r\n      switch (field) {\r\n      case SUCCESS:\r\n        if (value == null) {\r\n          unset_success();\r\n        } else {\r\n          set_success((java.lang.Long)value);\r\n        }\r\n        break;\r\n\r\n      }\r\n    }\r\n\r\n    @org.apache.thrift.annotation.Nullable\r\n    public java.lang.Object getFieldValue(_Fields field) {\r\n      switch (field) {\r\n      case SUCCESS:\r\n        return get_success();\r\n\r\n      }\r\n      throw new java.lang.IllegalStateException();\r\n    }\r\n\r\n    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */\r\n    public boolean isSet(_Fields field) {\r\n      if (field == null) {\r\n        throw new java.lang.IllegalArgumentException();\r\n      }\r\n\r\n      switch (field) {\r\n      case SUCCESS:\r\n        return is_set_success();\r\n      }\r\n      throw new java.lang.IllegalStateException();\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(java.lang.Object that) {\r\n      if (that instanceof mymethod_result)\r\n        return this.equals((mymethod_result)that);\r\n      return false;\r\n    }\r\n\r\n    public boolean equals(mymethod_result that) {\r\n      if (that == null)\r\n        return false;\r\n      if (this == that)\r\n        return true;\r\n\r\n      boolean this_present_success = true;\r\n      boolean that_present_success = true;\r\n      if (this_present_success || that_present_success) {\r\n        if (!(this_present_success && that_present_success))\r\n          return false;\r\n        if (this.success != that.success)\r\n          return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n      int hashCode = 1;\r\n\r\n      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(success);\r\n\r\n      return hashCode;\r\n    }\r\n\r\n    @Override\r\n    public int compareTo(mymethod_result other) {\r\n      if (!getClass().equals(other.getClass())) {\r\n        return getClass().getName().compareTo(other.getClass().getName());\r\n      }\r\n\r\n      int lastComparison = 0;\r\n\r\n      lastComparison = java.lang.Boolean.compare(is_set_success(), other.is_set_success());\r\n      if (lastComparison != 0) {\r\n        return lastComparison;\r\n      }\r\n      if (is_set_success()) {\r\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);\r\n        if (lastComparison != 0) {\r\n          return lastComparison;\r\n        }\r\n      }\r\n      return 0;\r\n    }\r\n\r\n    @org.apache.thrift.annotation.Nullable\r\n    public _Fields fieldForId(int fieldId) {\r\n      return _Fields.findByThriftId(fieldId);\r\n    }\r\n\r\n    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\r\n      scheme(iprot).read(iprot, this);\r\n    }\r\n\r\n    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\r\n      scheme(oprot).write(oprot, this);\r\n      }\r\n\r\n    @Override\r\n    public java.lang.String toString() {\r\n      java.lang.StringBuilder sb = new java.lang.StringBuilder(\"mymethod_result(\");\r\n      boolean first = true;\r\n\r\n      sb.append(\"success:\");\r\n      sb.append(this.success);\r\n      first = false;\r\n      sb.append(\")\");\r\n      return sb.toString();\r\n    }\r\n\r\n    public void validate() throws org.apache.thrift.TException {\r\n      // check for required fields\r\n      // check for sub-struct validity\r\n    }\r\n\r\n    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\r\n      try {\r\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\r\n      } catch (org.apache.thrift.TException te) {\r\n        throw new java.io.IOException(te);\r\n      }\r\n    }\r\n\r\n    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {\r\n      try {\r\n        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.\r\n        __isset_bitfield = 0;\r\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\r\n      } catch (org.apache.thrift.TException te) {\r\n        throw new java.io.IOException(te);\r\n      }\r\n    }\r\n\r\n    private static class mymethod_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {\r\n      public mymethod_resultStandardScheme getScheme() {\r\n        return new mymethod_resultStandardScheme();\r\n      }\r\n    }\r\n\r\n    private static class mymethod_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<mymethod_result> {\r\n\r\n      public void read(org.apache.thrift.protocol.TProtocol iprot, mymethod_result struct) throws org.apache.thrift.TException {\r\n        org.apache.thrift.protocol.TField schemeField;\r\n        iprot.readStructBegin();\r\n        while (true)\r\n        {\r\n          schemeField = iprot.readFieldBegin();\r\n          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \r\n            break;\r\n          }\r\n          switch (schemeField.id) {\r\n            case 0: // SUCCESS\r\n              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {\r\n                struct.success = iprot.readI64();\r\n                struct.set_success_isSet(true);\r\n              } else { \r\n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\r\n              }\r\n              break;\r\n            default:\r\n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\r\n          }\r\n          iprot.readFieldEnd();\r\n        }\r\n        iprot.readStructEnd();\r\n        struct.validate();\r\n      }\r\n\r\n      public void write(org.apache.thrift.protocol.TProtocol oprot, mymethod_result struct) throws org.apache.thrift.TException {\r\n        struct.validate();\r\n\r\n        oprot.writeStructBegin(STRUCT_DESC);\r\n        if (struct.is_set_success()) {\r\n          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);\r\n          oprot.writeI64(struct.success);\r\n          oprot.writeFieldEnd();\r\n        }\r\n        oprot.writeFieldStop();\r\n        oprot.writeStructEnd();\r\n      }\r\n\r\n    }\r\n\r\n    private static class mymethod_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {\r\n      public mymethod_resultTupleScheme getScheme() {\r\n        return new mymethod_resultTupleScheme();\r\n      }\r\n    }\r\n\r\n    private static class mymethod_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<mymethod_result> {\r\n\r\n      @Override\r\n      public void write(org.apache.thrift.protocol.TProtocol prot, mymethod_result struct) throws org.apache.thrift.TException {\r\n        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\r\n        java.util.BitSet optionals = new java.util.BitSet();\r\n        if (struct.is_set_success()) {\r\n          optionals.set(0);\r\n        }\r\n        oprot.writeBitSet(optionals, 1);\r\n        if (struct.is_set_success()) {\r\n          oprot.writeI64(struct.success);\r\n        }\r\n      }\r\n\r\n      @Override\r\n      public void read(org.apache.thrift.protocol.TProtocol prot, mymethod_result struct) throws org.apache.thrift.TException {\r\n        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\r\n        java.util.BitSet incoming = iprot.readBitSet(1);\r\n        if (incoming.get(0)) {\r\n          struct.success = iprot.readI64();\r\n          struct.set_success_isSet(true);\r\n        }\r\n      }\r\n    }\r\n\r\n    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {\r\n      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();\r\n    }\r\n  }\r\n\r\n}\r\n\r\n```\r\n</details>","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1096893593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1097439298","html_url":"https://github.com/apache/thrift/pull/2563#issuecomment-1097439298","issue_url":"https://api.github.com/repos/apache/thrift/issues/2563","id":1097439298,"node_id":"IC_kwDOAAS9U85BaZhC","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-13T00:55:19Z","updated_at":"2022-04-13T00:55:19Z","author_association":"MEMBER","body":"## generated using `thrift -o out -gen json:rich_includes test/Include.thrift`\r\n\r\n```json\r\n{\r\n  \"name\": \"Include\",\r\n  \"namespaces\": {\r\n\r\n  },\r\n  \"includes\": [\r\n    {\r\n      \"name\": \"ThriftTest\",\r\n      \"path\": \"\\/opt\\/thrift\\/src\\/test\\/ThriftTest.thrift\",\r\n      \"namespaces\": {\r\n        \"*\": \"thrift.test\",\r\n        \"c_glib\": \"TTest\",\r\n        \"cpp\": \"thrift.test\",\r\n        \"cpp.noexist\": \"ThriftTest\",\r\n        \"delphi\": \"Thrift.Test\",\r\n        \"go\": \"thrifttest\",\r\n        \"java\": \"thrift.test\",\r\n        \"js\": \"ThriftTest\",\r\n        \"lua\": \"ThriftTest\",\r\n        \"netstd\": \"ThriftTest\",\r\n        \"noexist\": \"ThriftTest\",\r\n        \"perl\": \"ThriftTest\",\r\n        \"php\": \"ThriftTest\",\r\n        \"py\": \"ThriftTest\",\r\n        \"py.twisted\": \"ThriftTest\",\r\n        \"rb\": \"Thrift.Test\",\r\n        \"st\": \"ThriftTest\",\r\n        \"xsd\": \"test\"\r\n      }\r\n    }\r\n  ],\r\n  \"enums\": [\r\n  ],\r\n  \"typedefs\": [\r\n  ],\r\n  \"structs\": [\r\n    {\r\n      \"name\": \"IncludeTest\",\r\n      \"isException\": false,\r\n      \"isUnion\": false,\r\n      \"fields\": [\r\n        {\r\n          \"key\": 1,\r\n          \"name\": \"bools\",\r\n          \"typeId\": \"struct\",\r\n          \"type\": {\r\n            \"typeId\": \"struct\",\r\n            \"class\": \"ThriftTest.Bools\"\r\n          },\r\n          \"required\": \"required\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"constants\": [\r\n  ],\r\n  \"services\": [\r\n  ]\r\n}\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1097439298/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1097527867","html_url":"https://github.com/apache/thrift/pull/2563#issuecomment-1097527867","issue_url":"https://api.github.com/repos/apache/thrift/issues/2563","id":1097527867,"node_id":"IC_kwDOAAS9U85BavI7","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-13T03:58:22Z","updated_at":"2022-04-13T03:58:22Z","author_association":"MEMBER","body":"I fixed the typos in the title and description of the PR. Whoever ends up merging this will need to ensure the typos are fixed in the git commit message.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1097527867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1097530541","html_url":"https://github.com/apache/thrift/pull/2563#issuecomment-1097530541","issue_url":"https://api.github.com/repos/apache/thrift/issues/2563","id":1097530541,"node_id":"IC_kwDOAAS9U85Bavyt","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-13T04:04:12Z","updated_at":"2022-04-13T04:04:12Z","author_association":"MEMBER","body":"> I fixed the typos in the title and description of the PR. Whoever ends up merging this will need to ensure the typos are fixed in the git commit message.\r\n\r\nthanks @ctubbsii - updated the commit message, good catch! i guess git branch name won't be an issue here (and it's hard to change without incurring a new pull request)","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1097530541/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098450505","html_url":"https://github.com/apache/thrift/pull/2553#issuecomment-1098450505","issue_url":"https://api.github.com/repos/apache/thrift/issues/2553","id":1098450505,"node_id":"IC_kwDOAAS9U85BeQZJ","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-13T20:22:05Z","updated_at":"2022-04-13T20:22:05Z","author_association":"MEMBER","body":">  but a quick check shows it's defaults would change a lot of thrift code, and not always for the better. \r\n> I'm not sure if the Thrift community would endorse its use,\r\n\r\nThere were similar approaches a while ago and my (personal) feelings about automated C++ code formatting tools abilities are, well, let's call it \"mixed feelings\". But it's not only a C++ specific thing, I had the same experience with other tools and other languages as well. Sometimes the problems start with the style guide supplied by the manufacturer itself that ist a) the default and b) horribly broken. (Yes, I'm looking at you, Emba). \r\n\r\nThe best tool I've seen in that regard is surely `gofmt`. The style actually makes sense to begin with, and it also offers not a single formatting-related option that could be configured. None. Zero. Kind of \"get some sane style without the bikeshedding\" approach.\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098450505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098621537","html_url":"https://github.com/apache/thrift/pull/2553#issuecomment-1098621537","issue_url":"https://api.github.com/repos/apache/thrift/issues/2553","id":1098621537,"node_id":"IC_kwDOAAS9U85Be6Jh","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-14T01:26:27Z","updated_at":"2022-04-14T01:27:07Z","author_association":"MEMBER","body":"> > but a quick check shows it's defaults would change a lot of thrift code, and not always for the better.\r\n> > I'm not sure if the Thrift community would endorse its use,\r\n> \r\n> There were similar approaches a while ago and my (personal) feelings about automated C++ code formatting tools abilities are, well, let's call it \"mixed feelings\". But it's not only a C++ specific thing, I had the same experience with other tools and other languages as well. Sometimes the problems start with the style guide supplied by the manufacturer itself that ist a) the default and b) horribly broken. (Yes, I'm looking at you, Emba).\r\n> \r\n> The best tool I've seen in that regard is surely `gofmt`. The style actually makes sense to begin with, and it also offers not a single formatting-related option that could be configured. None. Zero. Kind of \"get some sane style without the bikeshedding\" approach.\r\n\r\n@Jens-G did you mean to comment on https://github.com/apache/thrift/pull/2559#issuecomment-1095922213 instead?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098621537/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098622750","html_url":"https://github.com/apache/thrift/pull/2553#issuecomment-1098622750","issue_url":"https://api.github.com/repos/apache/thrift/issues/2553","id":1098622750,"node_id":"IC_kwDOAAS9U85Be6ce","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-14T01:28:50Z","updated_at":"2022-04-14T01:29:16Z","author_association":"MEMBER","body":"I'd say that both [rustfmt](https://github.com/rust-lang/rustfmt) and gofmt are in this category and it contribute to the fact that Rust's one of the most love languages (per stackoverflow)","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098622750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098634347","html_url":"https://github.com/apache/thrift/pull/2564#issuecomment-1098634347","issue_url":"https://api.github.com/repos/apache/thrift/issues/2564","id":1098634347,"node_id":"IC_kwDOAAS9U85Be9Rr","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-14T01:57:44Z","updated_at":"2022-04-14T01:57:44Z","author_association":"MEMBER","body":"Merging these one at a time seems like a pain. Is it possible to just do an `npm update` or `yarn update` or similar to update everything at once? These PRs opened by dependabot should auto-close as no longer relevant once an update is pushed undernearth.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098634347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098781324","html_url":"https://github.com/apache/thrift/pull/2553#issuecomment-1098781324","issue_url":"https://api.github.com/repos/apache/thrift/issues/2553","id":1098781324,"node_id":"IC_kwDOAAS9U85BfhKM","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-14T07:09:58Z","updated_at":"2022-04-14T07:09:58Z","author_association":"MEMBER","body":"> did you mean to comment on [...]\r\n\r\nProbably. Must have confused open tabs.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098781324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098782225","html_url":"https://github.com/apache/thrift/pull/2564#issuecomment-1098782225","issue_url":"https://api.github.com/repos/apache/thrift/issues/2564","id":1098782225,"node_id":"IC_kwDOAAS9U85BfhYR","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-14T07:11:16Z","updated_at":"2022-04-14T07:11:16Z","author_association":"MEMBER","body":"INFRA ticket? I would have squashed them anyway just waited for green CI","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098782225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098816463","html_url":"https://github.com/apache/thrift/pull/2556#issuecomment-1098816463","issue_url":"https://api.github.com/repos/apache/thrift/issues/2556","id":1098816463,"node_id":"IC_kwDOAAS9U85BfpvP","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-14T07:56:00Z","updated_at":"2022-04-14T07:56:00Z","author_association":"MEMBER","body":"cc @ctubbsii if case you are interested - i think we can use more 👀 s on Java changes","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1098816463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1099280180","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1099280180","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1099280180,"node_id":"IC_kwDOAAS9U85Bha80","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-14T15:04:10Z","updated_at":"2022-04-14T15:04:10Z","author_association":"MEMBER","body":"Hi @Jens-G , any chance that this can be merged soon? Thanks!","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1099280180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1099431315","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1099431315","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1099431315,"node_id":"IC_kwDOAAS9U85Bh_2T","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-14T17:17:01Z","updated_at":"2022-04-14T17:17:01Z","author_association":"MEMBER","body":"I'm not the only committer around.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1099431315/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1099445334","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1099445334","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1099445334,"node_id":"IC_kwDOAAS9U85BiDRW","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-14T17:27:56Z","updated_at":"2022-04-14T17:27:56Z","author_association":"MEMBER","body":"Could you place language-specific tests somewhere under /lib/java/... ? The /test folder is already a bit too crowded, and the idea behind was always that it contains cross-language stuff only. All lang-specific tests should really be in their respective lib folders.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1099445334/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1099538550","html_url":"https://github.com/apache/thrift/pull/2556#issuecomment-1099538550","issue_url":"https://api.github.com/repos/apache/thrift/issues/2556","id":1099538550,"node_id":"IC_kwDOAAS9U85BiaB2","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-14T19:07:30Z","updated_at":"2022-04-14T19:07:30Z","author_association":"MEMBER","body":"> cc @ctubbsii if case you are interested - i think we can use more eyes s on Java changes\r\n\r\nThanks for the ping. I've tried to watch the Java changes a bit when I have time. But, for this... I really don't know Kotlin stuff at all.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1099538550/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1099578487","html_url":"https://github.com/apache/thrift/pull/2564#issuecomment-1099578487","issue_url":"https://api.github.com/repos/apache/thrift/issues/2564","id":1099578487,"node_id":"IC_kwDOAAS9U85Bijx3","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-14T20:05:44Z","updated_at":"2022-04-14T20:05:44Z","author_association":"MEMBER","body":"> INFRA ticket? I would have squashed them anyway just waited for green CI\r\n\r\nI don't know what you'd need an INFRA ticket for. You can control dependabot via [.asf.yaml](https://cwiki.apache.org/confluence/display/INFRA/Git+-+.asf.yaml+features) or with a [dependabot.yml](https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file).\r\n\r\nHowever, what I was talking about was this workflow:\r\n\r\n1. See dependabot just spammed the project with a bunch of updates\r\n2. Ignore the dependabot PRs\r\n3. Manually run something to update all the NPM/Yarn dependencies all at once, and create a new PR\r\n4. Wait for new PR to get green CI\r\n5. Merge new PR\r\n6. Watch dependabot detect that all its PRs are no longer relevant and close them itself.\r\n\r\nThis workflow doesn't require any change to dependabot's behavior... only the project's response.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1099578487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1099748808","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1099748808","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1099748808,"node_id":"IC_kwDOAAS9U85BjNXI","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-15T00:50:42Z","updated_at":"2022-04-15T00:50:42Z","author_association":"MEMBER","body":"> I'm not the only committer around.\r\n\r\nI might be able to help some more. However, I'm not really sure what the normal procedures are in this community, so I've been uncomfortable doing more.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1099748808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1100583315","html_url":"https://github.com/apache/thrift/pull/2525#issuecomment-1100583315","issue_url":"https://api.github.com/repos/apache/thrift/issues/2525","id":1100583315,"node_id":"IC_kwDOAAS9U85BmZGT","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-04-16T06:08:46Z","updated_at":"2022-04-16T06:09:06Z","author_association":"MEMBER","body":"@Jens-G and @ctubbsii thank you _both_ for all your time and efforts invested into reviewing my code last few weeks, I truly appreciate that.\r\n\r\nAs PMC (or any other PMC can chime in as well), do you think you can shed some light on how to better contribute here (both as a committer like @ctubbsii or non-committers like me). I can't find it neither in https://thrift.apache.org/about nor some other links, but it maybe was just me.\r\n\r\nSome examples where I don't know if I should go ahead and make changes:\r\n1. there are JUnit 3 and 4 style unit tests in Java repo, but the mainstream version is now JUnit 5\r\n2. some cross tests drivers in Java lib is not out of date and can't run with the python driver now - not sure if they should be removed\r\n\r\nI know that it's non-trivial for projects like Thrift given its multi-language and not all members are familiar with all languages - but given I don't see a lot of reviews on Java side of the code lately I wonder if there's any mechanism to make sure enough coverage / attention / review there is for major languages.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1100583315/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]