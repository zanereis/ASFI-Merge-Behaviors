[{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986326509","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-1986326509","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":1986326509,"node_id":"IC_kwDOAAS9U852ZO_t","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-08T19:50:18Z","updated_at":"2024-03-08T19:50:18Z","author_association":"CONTRIBUTOR","body":"I _doubled down_ and applied the changes to the whole codebase in my fork @ https://github.com/CJCombrink/thrift/pull/1\r\nIf there is any appetite for this type of change, please indicate a preference between baby steps (just \"t_cpp_generator.cc\") or all or nothing as per the linked PR. ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986326509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986363604","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-1986363604","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":1986363604,"node_id":"IC_kwDOAAS9U852ZYDU","user":{"login":"emmenlau","id":1098087,"node_id":"MDQ6VXNlcjEwOTgwODc=","avatar_url":"https://avatars.githubusercontent.com/u/1098087?v=4","gravatar_id":"","url":"https://api.github.com/users/emmenlau","html_url":"https://github.com/emmenlau","followers_url":"https://api.github.com/users/emmenlau/followers","following_url":"https://api.github.com/users/emmenlau/following{/other_user}","gists_url":"https://api.github.com/users/emmenlau/gists{/gist_id}","starred_url":"https://api.github.com/users/emmenlau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/emmenlau/subscriptions","organizations_url":"https://api.github.com/users/emmenlau/orgs","repos_url":"https://api.github.com/users/emmenlau/repos","events_url":"https://api.github.com/users/emmenlau/events{/privacy}","received_events_url":"https://api.github.com/users/emmenlau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-08T20:20:19Z","updated_at":"2024-03-08T20:20:19Z","author_association":"MEMBER","body":"> (_Personally_)I don't think it is a matter of taste. `std::endl`'s claim to fame (if I can phrase it like that) is that it forces a newline and flush the stream.\r\n\r\nWell we are certainly on the same page when it comes to `std::endl`, as this has a number of significant drawbacks! But the code in question is already using `\\n` rather than `std::endl`. The main difference is that it is concatenating every time with `<<` which may have a negative performance impact. The impact on readability is (in my humble opinion) debatable, because I can see also advantages of recognizing `<< endl <<` as a clear sign of newline, whereas \"hello\\nworld\" may not jump as much into the eye of the reader.\r\n\r\nIn any case, I'm ok with the PR, but without a strong opinion pro or con on my side :-)","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986363604/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986484604","html_url":"https://github.com/apache/thrift/pull/2755#issuecomment-1986484604","issue_url":"https://api.github.com/repos/apache/thrift/issues/2755","id":1986484604,"node_id":"IC_kwDOAAS9U852Z1l8","user":{"login":"tinloaf","id":442687,"node_id":"MDQ6VXNlcjQ0MjY4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/442687?v=4","gravatar_id":"","url":"https://api.github.com/users/tinloaf","html_url":"https://github.com/tinloaf","followers_url":"https://api.github.com/users/tinloaf/followers","following_url":"https://api.github.com/users/tinloaf/following{/other_user}","gists_url":"https://api.github.com/users/tinloaf/gists{/gist_id}","starred_url":"https://api.github.com/users/tinloaf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tinloaf/subscriptions","organizations_url":"https://api.github.com/users/tinloaf/orgs","repos_url":"https://api.github.com/users/tinloaf/repos","events_url":"https://api.github.com/users/tinloaf/events{/privacy}","received_events_url":"https://api.github.com/users/tinloaf/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-08T22:03:39Z","updated_at":"2024-03-08T22:03:39Z","author_association":"CONTRIBUTOR","body":"Thanks a lot. :)","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986484604/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986498494","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-1986498494","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":1986498494,"node_id":"IC_kwDOAAS9U852Z4--","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-08T22:17:50Z","updated_at":"2024-03-08T22:38:19Z","author_association":"MEMBER","body":"> static const string endl = \"\\n\"; // avoid ostream << std::endl flushes\r\n\r\nThat line was introduced intentionally in all generators. You may [look up git and JIRA history and find out why, including the whole debate about why this is a good change](https://issues.apache.org/jira/browse/THRIFT-1815), before removing it.\r\n\r\nI would also argue that forcing people into the literal inclusion of \"\\n\" by removing the above most certainly will not be respected by people. Simply because nobody will think about it and just use endl instead, which due to the removal effectively results in the exact opposite of what is intended. You are setting it up for failure IMHO.\r\n\r\n> Using endl for linebreaks is bad practice\r\n\r\nNot quite. **Using std::endl is bad practice** for the reasons linked above. But we're not doing that at all. That is the whole point why we have that endl constant, so nobody falls into that trap by accident.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986498494/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986544703","html_url":"https://github.com/apache/thrift/pull/2937#issuecomment-1986544703","issue_url":"https://api.github.com/repos/apache/thrift/issues/2937","id":1986544703,"node_id":"IC_kwDOAAS9U852aEQ_","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-08T23:04:42Z","updated_at":"2024-03-08T23:04:42Z","author_association":"MEMBER","body":"> Can you share a bit about your setup? Are you on a Linux distro or wsl on windows? \r\n> Running docker rootless? Maybe I can repro this in a VM.\r\n\r\nMint LDME 6 (the Debian based flavour) and Docker Desktop.\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986544703/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986839317","html_url":"https://github.com/apache/thrift/pull/2942#issuecomment-1986839317","issue_url":"https://api.github.com/repos/apache/thrift/issues/2942","id":1986839317,"node_id":"IC_kwDOAAS9U852bMMV","user":{"login":"pkvach","id":5307506,"node_id":"MDQ6VXNlcjUzMDc1MDY=","avatar_url":"https://avatars.githubusercontent.com/u/5307506?v=4","gravatar_id":"","url":"https://api.github.com/users/pkvach","html_url":"https://github.com/pkvach","followers_url":"https://api.github.com/users/pkvach/followers","following_url":"https://api.github.com/users/pkvach/following{/other_user}","gists_url":"https://api.github.com/users/pkvach/gists{/gist_id}","starred_url":"https://api.github.com/users/pkvach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pkvach/subscriptions","organizations_url":"https://api.github.com/users/pkvach/orgs","repos_url":"https://api.github.com/users/pkvach/repos","events_url":"https://api.github.com/users/pkvach/events{/privacy}","received_events_url":"https://api.github.com/users/pkvach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-09T12:07:37Z","updated_at":"2024-03-09T12:07:37Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986839317/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986841963","html_url":"https://github.com/apache/thrift/pull/2942#issuecomment-1986841963","issue_url":"https://api.github.com/repos/apache/thrift/issues/2942","id":1986841963,"node_id":"IC_kwDOAAS9U852bM1r","user":{"login":"sveneld","id":4028769,"node_id":"MDQ6VXNlcjQwMjg3Njk=","avatar_url":"https://avatars.githubusercontent.com/u/4028769?v=4","gravatar_id":"","url":"https://api.github.com/users/sveneld","html_url":"https://github.com/sveneld","followers_url":"https://api.github.com/users/sveneld/followers","following_url":"https://api.github.com/users/sveneld/following{/other_user}","gists_url":"https://api.github.com/users/sveneld/gists{/gist_id}","starred_url":"https://api.github.com/users/sveneld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sveneld/subscriptions","organizations_url":"https://api.github.com/users/sveneld/orgs","repos_url":"https://api.github.com/users/sveneld/repos","events_url":"https://api.github.com/users/sveneld/events{/privacy}","received_events_url":"https://api.github.com/users/sveneld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-09T12:19:37Z","updated_at":"2024-03-09T12:19:37Z","author_association":"CONTRIBUTOR","body":"@Jens-G let's merge this pull request ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986841963/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986930547","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-1986930547","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":1986930547,"node_id":"IC_kwDOAAS9U852bidz","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-09T17:54:03Z","updated_at":"2024-03-09T17:55:39Z","author_association":"CONTRIBUTOR","body":"@Jens-G \r\nSorry I did not do the research before making the PR, but the linked ticket confirms my suspicion 100%:\r\nA bad practice was followed and instead of fixing the actual issue, by not using `std::endl`, the PR decided to entertain a bad practice with the motivation of \"minimizing code churn\" by changing expected behaviour with hidden unexpected behaviour (PS I was fully aware of that constant before making this PR). \r\n\r\n11 Years later I am hoping that at least we can get to a point where sanity is restored and bad practices are not encouraged/entertained in such important code bases. \r\n\r\nPS: I come from a background where juniors used `std::endl` on embedded devices that flushed over serial. On confrontation the response was \"_we were taught that way_\". We should be better in teaching and educating on these matters, not hide it with `consts` that change documented behaviour and make bad practices acceptable. \r\n\r\nI am saying this again, I realise I am passionate about the wrong things thus I will not take offence if this/these PR(s) is/are declined, but I might keep stating the point :P \r\n\r\n@emmenlau \r\n>  advantages of recognizing `<< endl <<` as a clear sign of newline\r\n\r\nDepends on perspective: I see it as: \"why do you need flushing\" and my editor (VS Code with no custom modification) highlights `\\n` differently in string literals, thus I can argue it stands out even more and communicates the intend clearly (no hidden oh but we manually changed behaviour).  ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1986930547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1987349708","html_url":"https://github.com/apache/thrift/pull/2933#issuecomment-1987349708","issue_url":"https://api.github.com/repos/apache/thrift/issues/2933","id":1987349708,"node_id":"IC_kwDOAAS9U852dIzM","user":{"login":"bull500","id":8917275,"node_id":"MDQ6VXNlcjg5MTcyNzU=","avatar_url":"https://avatars.githubusercontent.com/u/8917275?v=4","gravatar_id":"","url":"https://api.github.com/users/bull500","html_url":"https://github.com/bull500","followers_url":"https://api.github.com/users/bull500/followers","following_url":"https://api.github.com/users/bull500/following{/other_user}","gists_url":"https://api.github.com/users/bull500/gists{/gist_id}","starred_url":"https://api.github.com/users/bull500/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bull500/subscriptions","organizations_url":"https://api.github.com/users/bull500/orgs","repos_url":"https://api.github.com/users/bull500/repos","events_url":"https://api.github.com/users/bull500/events{/privacy}","received_events_url":"https://api.github.com/users/bull500/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-10T20:14:46Z","updated_at":"2024-03-10T20:14:46Z","author_association":"NONE","body":"Hello @Jens-G \r\n\r\nI'm adding inputs here based on our discussion over the mailing list - [https://lists.apache.org/thread/xlxj2q1ln0ffx34jc0of83473ssof215](https://lists.apache.org/thread/xlxj2q1ln0ffx34jc0of83473ssof215)\r\nHoping its the right place! Apologies in advance if its not!\r\n\r\nI'm attaching the bash script here: \r\n[thrift_packaging_script.zip](https://github.com/apache/thrift/files/14551586/thrift_packaging_script.zip)\r\nI hope the code is easy to understand and follow.\r\n\r\n**_Please note there are a few instructions that appear on the screen which need to be adhered to while running the script._**\r\nThe script needs to be in your home dir - eg - /home/username/\r\nYou'll need to create a python venv environment, activate the same and installing twine.\r\nThe instruction shall be shown on the screen.\r\n**_Only post this the script should be run in its entirety._**\r\n\r\nThe script will follow a step by step execution method asking the user based on a (Y/N) input.\r\nIt shall ask the python environment path - Example - /home/username/thrift_packaging/\r\nIt shall ask for the download file path of thrift project - Example - [https://github.com/apache/thrift/archive/refs/tags/v0.19.0.tar.gz](https://github.com/apache/thrift/archive/refs/tags/v0.19.0.tar.gz)\r\nThe script shall auto activate the environment, download the provided package, create the PyPI build, do a test upload to TestPyPI and finally upload to PyPI if all things go well.\r\n\r\nI'm also attaching all the pre-built python src packages that can be uploaded to PyPI as well here:\r\n[thrift-prebuilt.zip](https://github.com/apache/thrift/files/14551634/thrift-prebuilt.zip)\r\nThese were generated using the same script\r\n\r\nI'm truly hoping this is helps the Apache Thrift Project get the python based package out onto pypi.\r\nIf there's any other thing I could assist with please let me know.\r\n\r\n:v: :peace_symbol: \r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1987349708/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1989759243","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-1989759243","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":1989759243,"node_id":"IC_kwDOAAS9U852mVEL","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T01:38:40Z","updated_at":"2024-03-12T01:38:40Z","author_association":"MEMBER","body":"+1 Go on then, change all the files and add a comment to the ticket, to put an end on this fruitless discussion. Question remains, why bad practice can't be fixed where it belongs - by properly deprecating `std::endl` \r\n\r\n> We should be better in teaching and educating on these matters,\r\n\r\nUsually [deprecation](https://en.cppreference.com/w/cpp/language/attributes/deprecated) and [removal](https://github.com/isocpp/CppCoreGuidelines/issues/357) teaches quite well. \r\n\r\n> It is bad, and most people know it, \r\n\r\n[Agree, I wasn't fully aware of it](https://github.com/search?q=%2Fendl%2F+language%3Acpp&type=code). \r\n\r\n\r\n___\r\nPS: Waiting for the great Rust rewrite, to save more walls. \r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1989759243/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1992357015","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-1992357015","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":1992357015,"node_id":"IC_kwDOAAS9U852wPSX","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T19:08:28Z","updated_at":"2024-03-12T19:08:28Z","author_association":"CONTRIBUTOR","body":"I Updated this PR with replacing `std::endl` in most of the `std::cout` calls.\r\nI did go through most of the changes not in the generators folder manually. \r\nFor the generators I did spot check and I did test the new output vs the old output for at least C++, there were no changes in the generated files.\r\n\r\nDo I still need to create a JIRA ticket for this change? I did request a user already thus waiting for that. ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1992357015/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1995275379","html_url":"https://github.com/apache/thrift/pull/2755#issuecomment-1995275379","issue_url":"https://api.github.com/repos/apache/thrift/issues/2755","id":1995275379,"node_id":"IC_kwDOAAS9U8527Xxz","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-13T18:22:35Z","updated_at":"2024-03-13T18:22:35Z","author_association":"CONTRIBUTOR","body":"I guess https://issues.apache.org/jira/browse/THRIFT-5682 can be closed as well","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1995275379/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1997226418","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-1997226418","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":1997226418,"node_id":"IC_kwDOAAS9U853C0Gy","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T11:24:15Z","updated_at":"2024-03-14T11:24:15Z","author_association":"CONTRIBUTOR","body":"@fishy @emmenlau \r\nIs there anything else that I need to address in this PR, something else that stands out as 'not so nice' or blockers?\r\n\r\nAlso, I am not sure that I am responsible for the build failures, is there a way to know? ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1997226418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1997294219","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-1997294219","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":1997294219,"node_id":"IC_kwDOAAS9U853DEqL","user":{"login":"emmenlau","id":1098087,"node_id":"MDQ6VXNlcjEwOTgwODc=","avatar_url":"https://avatars.githubusercontent.com/u/1098087?v=4","gravatar_id":"","url":"https://api.github.com/users/emmenlau","html_url":"https://github.com/emmenlau","followers_url":"https://api.github.com/users/emmenlau/followers","following_url":"https://api.github.com/users/emmenlau/following{/other_user}","gists_url":"https://api.github.com/users/emmenlau/gists{/gist_id}","starred_url":"https://api.github.com/users/emmenlau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/emmenlau/subscriptions","organizations_url":"https://api.github.com/users/emmenlau/orgs","repos_url":"https://api.github.com/users/emmenlau/repos","events_url":"https://api.github.com/users/emmenlau/events{/privacy}","received_events_url":"https://api.github.com/users/emmenlau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T12:06:00Z","updated_at":"2024-03-14T12:06:00Z","author_association":"MEMBER","body":"@CJCombrink from my point of view, everything else is good, thanks a lot for the nice work!\r\n\r\nThe build failures are a continuous nightmare. The best you could do (and this is what I typically do) is check them individually, and see if the error seems related. Often builds fail because some third party dependency package can not be installed in some build machine, and those are the obvious ones to ignore. The others are harder, for those you can just compare the latest master build status with yours, to see if \"you\" broke it, or the person before you...\r\n\r\nIn any case, we will also take a look at those before merging, but its great if you validate as much as you can upfront...","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1997294219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1997658089","html_url":"https://github.com/apache/thrift/pull/2888#issuecomment-1997658089","issue_url":"https://api.github.com/repos/apache/thrift/issues/2888","id":1997658089,"node_id":"IC_kwDOAAS9U853Edfp","user":{"login":"dcelasun","id":144373,"node_id":"MDQ6VXNlcjE0NDM3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/144373?v=4","gravatar_id":"","url":"https://api.github.com/users/dcelasun","html_url":"https://github.com/dcelasun","followers_url":"https://api.github.com/users/dcelasun/followers","following_url":"https://api.github.com/users/dcelasun/following{/other_user}","gists_url":"https://api.github.com/users/dcelasun/gists{/gist_id}","starred_url":"https://api.github.com/users/dcelasun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcelasun/subscriptions","organizations_url":"https://api.github.com/users/dcelasun/orgs","repos_url":"https://api.github.com/users/dcelasun/repos","events_url":"https://api.github.com/users/dcelasun/events{/privacy}","received_events_url":"https://api.github.com/users/dcelasun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T14:58:42Z","updated_at":"2024-03-14T14:58:42Z","author_association":"MEMBER","body":"@ethan-gallant any progress on this? Happy to help with any issues.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1997658089/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1998560379","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-1998560379","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":1998560379,"node_id":"IC_kwDOAAS9U853H5x7","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T22:06:47Z","updated_at":"2024-03-14T22:07:24Z","author_association":"CONTRIBUTOR","body":"I updated the branch to use `<< '\\n'` instead.\r\nTBH I am starting to appreciate the clarity it brings on many of the places. I still need more time to process, or rather get used to `<< '\\n' << '\\n'` ...","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1998560379/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1999335019","html_url":"https://github.com/apache/thrift/pull/2945#issuecomment-1999335019","issue_url":"https://api.github.com/repos/apache/thrift/issues/2945","id":1999335019,"node_id":"IC_kwDOAAS9U853K25r","user":{"login":"thomasbruggink","id":16775318,"node_id":"MDQ6VXNlcjE2Nzc1MzE4","avatar_url":"https://avatars.githubusercontent.com/u/16775318?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasbruggink","html_url":"https://github.com/thomasbruggink","followers_url":"https://api.github.com/users/thomasbruggink/followers","following_url":"https://api.github.com/users/thomasbruggink/following{/other_user}","gists_url":"https://api.github.com/users/thomasbruggink/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasbruggink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasbruggink/subscriptions","organizations_url":"https://api.github.com/users/thomasbruggink/orgs","repos_url":"https://api.github.com/users/thomasbruggink/repos","events_url":"https://api.github.com/users/thomasbruggink/events{/privacy}","received_events_url":"https://api.github.com/users/thomasbruggink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-15T10:09:54Z","updated_at":"2024-03-15T10:09:54Z","author_association":"CONTRIBUTOR","body":"@fishy is there anything i can run locally to test if the cross test will start?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1999335019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1999343865","html_url":"https://github.com/apache/thrift/pull/2937#issuecomment-1999343865","issue_url":"https://api.github.com/repos/apache/thrift/issues/2937","id":1999343865,"node_id":"IC_kwDOAAS9U853K5D5","user":{"login":"sveneld","id":4028769,"node_id":"MDQ6VXNlcjQwMjg3Njk=","avatar_url":"https://avatars.githubusercontent.com/u/4028769?v=4","gravatar_id":"","url":"https://api.github.com/users/sveneld","html_url":"https://github.com/sveneld","followers_url":"https://api.github.com/users/sveneld/followers","following_url":"https://api.github.com/users/sveneld/following{/other_user}","gists_url":"https://api.github.com/users/sveneld/gists{/gist_id}","starred_url":"https://api.github.com/users/sveneld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sveneld/subscriptions","organizations_url":"https://api.github.com/users/sveneld/orgs","repos_url":"https://api.github.com/users/sveneld/repos","events_url":"https://api.github.com/users/sveneld/events{/privacy}","received_events_url":"https://api.github.com/users/sveneld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-15T10:15:27Z","updated_at":"2024-03-15T10:15:27Z","author_association":"CONTRIBUTOR","body":"@ulidtko maybe you can help to figure the problem?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1999343865/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1999567932","html_url":"https://github.com/apache/thrift/pull/2937#issuecomment-1999567932","issue_url":"https://api.github.com/repos/apache/thrift/issues/2937","id":1999567932,"node_id":"IC_kwDOAAS9U853Lvw8","user":{"login":"thomasbruggink","id":16775318,"node_id":"MDQ6VXNlcjE2Nzc1MzE4","avatar_url":"https://avatars.githubusercontent.com/u/16775318?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasbruggink","html_url":"https://github.com/thomasbruggink","followers_url":"https://api.github.com/users/thomasbruggink/followers","following_url":"https://api.github.com/users/thomasbruggink/following{/other_user}","gists_url":"https://api.github.com/users/thomasbruggink/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasbruggink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasbruggink/subscriptions","organizations_url":"https://api.github.com/users/thomasbruggink/orgs","repos_url":"https://api.github.com/users/thomasbruggink/repos","events_url":"https://api.github.com/users/thomasbruggink/events{/privacy}","received_events_url":"https://api.github.com/users/thomasbruggink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-15T12:31:52Z","updated_at":"2024-03-16T04:47:57Z","author_association":"CONTRIBUTOR","body":"Ok I figured it out, the difference seems to be in using docker desktop which even on Linux runs another Linux VM inside.\r\nhttps://docs.docker.com/desktop/faqs/linuxfaqs/#how-do-i-enable-file-sharing\r\nFile sharing under virtioFS seems to by default map all file permissions in the directory from the UID on the host to UID 0 (root) in the container.\r\n\r\nSo instead the container on Linux with docker desktop should be build like:\r\n```\r\ndocker build -t thrift build/docker/ubuntu-jammy\r\n```\r\nand can then be started as:\r\n```\r\ndocker run -v $(pwd):/thrift/src -it thrift /bin/bash\r\n```\r\ninside the container all files will be root but on the host they will automatically be set to whatever the host runs.\r\n\r\n~I still need to confirm if Mac behaves the same.~ confirmed that docker-desktop behaves the same under windows, mac and linux. So the current readme should be correct 🙇 \r\n\r\n@Jens-G could you try and see if the above instructions allow you to `./bootstrap.sh && ./configure && make dist` correctly?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1999567932/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1999970886","html_url":"https://github.com/apache/thrift/pull/2945#issuecomment-1999970886","issue_url":"https://api.github.com/repos/apache/thrift/issues/2945","id":1999970886,"node_id":"IC_kwDOAAS9U853NSJG","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-15T16:00:26Z","updated_at":"2024-03-15T16:00:26Z","author_association":"MEMBER","body":"A later step for kotlin failed: https://github.com/apache/thrift/actions/runs/8294540230/job/22710000124?pr=2945\r\n\r\n>is there anything i can run locally to test if the cross test will start?\r\n\r\nNot really, but you can look at the github action workflow definition and run the steps manually locally: https://github.com/apache/thrift/blob/0e7236391f9ac7482f2e62a8c30155e015a80aa9/.github/workflows/build.yml#L192","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1999970886/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1999974166","html_url":"https://github.com/apache/thrift/pull/2939#issuecomment-1999974166","issue_url":"https://api.github.com/repos/apache/thrift/issues/2939","id":1999974166,"node_id":"IC_kwDOAAS9U853NS8W","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-15T16:02:17Z","updated_at":"2024-03-15T16:02:17Z","author_association":"MEMBER","body":"@Jens-G just to double check: This is _not_ in 0.20.0 branch, is that correct?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/1999974166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2000015834","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-2000015834","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":2000015834,"node_id":"IC_kwDOAAS9U853NdHa","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-15T16:25:22Z","updated_at":"2024-03-15T16:25:22Z","author_association":"MEMBER","body":"FYI the lib-java-kotlin failure in CI is being addressed in https://github.com/apache/thrift/pull/2945","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2000015834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2000117594","html_url":"https://github.com/apache/thrift/pull/2946#issuecomment-2000117594","issue_url":"https://api.github.com/repos/apache/thrift/issues/2946","id":2000117594,"node_id":"IC_kwDOAAS9U853N19a","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-15T17:24:35Z","updated_at":"2024-03-15T17:24:35Z","author_association":"MEMBER","body":"The code looks good to me, but some suggestions:\r\n\r\nCan you please add a benchmark test with the example you gave in the jira ticket, and post the before/after result here, with `b.ReportAllocs()` called? since this benchmark test will require a thrift definition, you likely cannot have it under `lib/go/thrift` and will need it to be under `lib/go/test` instead.\r\n\r\nDepending on the result, I would also suggest you to write an unit test (also likely need to be under `lib/go/test`, in the same file as the benchmark test), that runs the benchmark test (via https://pkg.go.dev/testing#Benchmark), and checks the result, and verify that `AllocsPerOp` is below a certain threshold.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2000117594/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2000133731","html_url":"https://github.com/apache/thrift/pull/2946#issuecomment-2000133731","issue_url":"https://api.github.com/repos/apache/thrift/issues/2946","id":2000133731,"node_id":"IC_kwDOAAS9U853N55j","user":{"login":"k-walton","id":113375522,"node_id":"U_kgDOBsH5Ig","avatar_url":"https://avatars.githubusercontent.com/u/113375522?v=4","gravatar_id":"","url":"https://api.github.com/users/k-walton","html_url":"https://github.com/k-walton","followers_url":"https://api.github.com/users/k-walton/followers","following_url":"https://api.github.com/users/k-walton/following{/other_user}","gists_url":"https://api.github.com/users/k-walton/gists{/gist_id}","starred_url":"https://api.github.com/users/k-walton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/k-walton/subscriptions","organizations_url":"https://api.github.com/users/k-walton/orgs","repos_url":"https://api.github.com/users/k-walton/repos","events_url":"https://api.github.com/users/k-walton/events{/privacy}","received_events_url":"https://api.github.com/users/k-walton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-15T17:34:51Z","updated_at":"2024-03-15T17:36:28Z","author_association":"CONTRIBUTOR","body":"> The code looks good to me, but some suggestions:\r\n> \r\n> Can you please add a benchmark test with the example you gave in the jira ticket, and post the before/after result here, with `b.ReportAllocs()` called? since this benchmark test will require a thrift definition, you likely cannot have it under `lib/go/thrift` and will need it to be under `lib/go/test` instead.\r\n> \r\n> Depending on the result, I would also suggest you to write an unit test (also likely need to be under `lib/go/test`, in the same file as the benchmark test), that runs the benchmark test (via https://pkg.go.dev/testing#Benchmark), and checks the result, and verify that `AllocsPerOp` is below a certain threshold.\r\n\r\nSure! I was trying to keep the change set small, but those sound like a great idea! I'll go ahead and take some time to add them.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2000133731/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2000408810","html_url":"https://github.com/apache/thrift/pull/2939#issuecomment-2000408810","issue_url":"https://api.github.com/repos/apache/thrift/issues/2939","id":2000408810,"node_id":"IC_kwDOAAS9U853O9Dq","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-15T20:37:58Z","updated_at":"2024-03-15T20:37:58Z","author_association":"MEMBER","body":"No, its not.\r\n\r\nMerged early in March:\r\nhttps://github.com/apache/thrift/commits/master/\r\n\r\nBut branch 0.20.2 created about a month earlier, and not merged into\r\nhttps://github.com/apache/thrift/commits/0.20.0/\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2000408810/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2002133978","html_url":"https://github.com/apache/thrift/pull/2937#issuecomment-2002133978","issue_url":"https://api.github.com/repos/apache/thrift/issues/2937","id":2002133978,"node_id":"IC_kwDOAAS9U853ViPa","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-16T21:10:35Z","updated_at":"2024-03-16T21:10:35Z","author_association":"MEMBER","body":"```\r\nmake  distdir-am\r\nmake[6]: Entering directory '/thrift/src/lib/cpp'\r\n (cd test && make  top_distdir=../../../thrift-0.21.0 distdir=../../../thrift-0.21.0/lib/cpp/test \\\r\n     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)\r\nmake[7]: Entering directory '/thrift/src/lib/cpp/test'\r\n/thrift/src/compiler/cpp/thrift --gen cpp ../../../test/AnnotationTest.thrift\r\n/bin/bash: line 1: /thrift/src/compiler/cpp/thrift: No such file or directory\r\nmake[7]: *** [Makefile:1880: gen-cpp/AnnotationTest_types.h] Error 127\r\nmake[7]: Leaving directory '/thrift/src/lib/cpp/test'\r\nmake[6]: *** [Makefile:1685: distdir-am] Error 1\r\nmake[6]: Leaving directory '/thrift/src/lib/cpp'\r\nmake[5]: *** [Makefile:1681: distdir] Error 2\r\nmake[5]: Leaving directory '/thrift/src/lib/cpp'\r\nmake[4]: *** [Makefile:672: distdir-am] Error 1\r\nmake[4]: Leaving directory '/thrift/src/lib'\r\nmake[3]: *** [Makefile:668: distdir] Error 2\r\nmake[3]: Leaving directory '/thrift/src/lib'\r\nmake[2]: *** [Makefile:791: distdir-am] Error 1\r\nmake[2]: Leaving directory '/thrift/src'\r\nmake[1]: *** [Makefile:785: distdir] Error 2\r\nmake[1]: Leaving directory '/thrift/src'\r\nmake: *** [Makefile:894: dist] Error 2\r\n```\r\n\r\nBetter, still not perfect. Not sure where this comes from ... mmmh.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2002133978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2002225856","html_url":"https://github.com/apache/thrift/pull/2937#issuecomment-2002225856","issue_url":"https://api.github.com/repos/apache/thrift/issues/2937","id":2002225856,"node_id":"IC_kwDOAAS9U853V4rA","user":{"login":"thomasbruggink","id":16775318,"node_id":"MDQ6VXNlcjE2Nzc1MzE4","avatar_url":"https://avatars.githubusercontent.com/u/16775318?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasbruggink","html_url":"https://github.com/thomasbruggink","followers_url":"https://api.github.com/users/thomasbruggink/followers","following_url":"https://api.github.com/users/thomasbruggink/following{/other_user}","gists_url":"https://api.github.com/users/thomasbruggink/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasbruggink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasbruggink/subscriptions","organizations_url":"https://api.github.com/users/thomasbruggink/orgs","repos_url":"https://api.github.com/users/thomasbruggink/repos","events_url":"https://api.github.com/users/thomasbruggink/events{/privacy}","received_events_url":"https://api.github.com/users/thomasbruggink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-17T01:16:18Z","updated_at":"2024-03-17T02:01:53Z","author_association":"CONTRIBUTOR","body":"> ```\r\n> make  distdir-am\r\n> make[6]: Entering directory '/thrift/src/lib/cpp'\r\n>  (cd test && make  top_distdir=../../../thrift-0.21.0 distdir=../../../thrift-0.21.0/lib/cpp/test \\\r\n>      am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)\r\n> make[7]: Entering directory '/thrift/src/lib/cpp/test'\r\n> /thrift/src/compiler/cpp/thrift --gen cpp ../../../test/AnnotationTest.thrift\r\n> /bin/bash: line 1: /thrift/src/compiler/cpp/thrift: No such file or directory\r\n> make[7]: *** [Makefile:1880: gen-cpp/AnnotationTest_types.h] Error 127\r\n> make[7]: Leaving directory '/thrift/src/lib/cpp/test'\r\n> make[6]: *** [Makefile:1685: distdir-am] Error 1\r\n> make[6]: Leaving directory '/thrift/src/lib/cpp'\r\n> make[5]: *** [Makefile:1681: distdir] Error 2\r\n> make[5]: Leaving directory '/thrift/src/lib/cpp'\r\n> make[4]: *** [Makefile:672: distdir-am] Error 1\r\n> make[4]: Leaving directory '/thrift/src/lib'\r\n> make[3]: *** [Makefile:668: distdir] Error 2\r\n> make[3]: Leaving directory '/thrift/src/lib'\r\n> make[2]: *** [Makefile:791: distdir-am] Error 1\r\n> make[2]: Leaving directory '/thrift/src'\r\n> make[1]: *** [Makefile:785: distdir] Error 2\r\n> make[1]: Leaving directory '/thrift/src'\r\n> make: *** [Makefile:894: dist] Error 2\r\n> ```\r\n> \r\n> Better, still not perfect. Not sure where this comes from ... mmmh.\r\n\r\nIt seems from local testing that the thrift compiler is required to run `make dist` correctly. Perhaps the original container did not configure all targets correctly so the dist job for all languages never actually ran?\r\nFor example the go library requires `compiler/cpp/thrift` to exist:\r\n```\r\n (cd go && make  top_distdir=../../thrift-0.21.0 distdir=../../thrift-0.21.0/test/go \\\r\n     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)\r\nmake[5]: Entering directory '/thrift/src/test/go'\r\nMakefile:664: warning: overriding recipe for target 'check'\r\nMakefile:512: warning: ignoring old recipe for target 'check'\r\ngrep -v list.*map.*list.*map ../../test/ThriftTest.thrift > ThriftTest.thrift\r\nmkdir -p src/gen\r\n/thrift/src/compiler/cpp/thrift -out src/gen --gen go:thrift_import=github.com/apache/thrift/lib/go/thrift,package_prefix=github.com/apache/thrift/test/go/src/gen/ ThriftTest.thrift\r\n[WARNING:/thrift/src/test/go/ThriftTest.thrift:43] No generator named 'noexist' could be found!\r\n[WARNING:/thrift/src/test/go/ThriftTest.thrift:45] cpp generator does not accept 'noexist' as sub-namespace!\r\n/thrift/src/compiler/cpp/thrift -out src/gen --gen go:thrift_import=github.com/apache/thrift/lib/go/thrift,package_prefix=github.com/apache/thrift/test/go/src/gen/ ../StressTest.thrift\r\n[WARNING:/thrift/src/test/StressTest.thrift:31] Consider using the more efficient \"binary\" type instead of \"list<byte>\".\r\n[WARNING:/thrift/src/test/StressTest.thrift:31] Consider using the more efficient \"binary\" type instead of \"list<byte>\".\r\n/thrift/src/compiler/cpp/thrift -out src/gen --gen go:thrift_import=github.com/apache/thrift/lib/go/thrift,package_prefix=github.com/apache/thrift/test/go/src/gen/ ../ConstantsDemo.thrift\r\ntouch gopath\r\n```\r\n\r\nSo once I ran `pushd compiler/cpp/ && make -j $(nproc) && popd && make dist` it would run until the PHP job which I fixed here: https://github.com/apache/thrift/pull/2937/commits/3b387ed6c5d7786076ad7ce44e982a20280377f2\r\n\r\nThen the job runs till completion and a `thrift-0.21.0.tar.gz` is created.\r\n\r\nI think there are 2 options, 1 is to build the thrift compiler first or 2 is to remove the dependencies on running the thrift compiler. The latter probably requires a bunch more commits.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2002225856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2002277969","html_url":"https://github.com/apache/thrift/pull/2945#issuecomment-2002277969","issue_url":"https://api.github.com/repos/apache/thrift/issues/2945","id":2002277969,"node_id":"IC_kwDOAAS9U853WFZR","user":{"login":"thomasbruggink","id":16775318,"node_id":"MDQ6VXNlcjE2Nzc1MzE4","avatar_url":"https://avatars.githubusercontent.com/u/16775318?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasbruggink","html_url":"https://github.com/thomasbruggink","followers_url":"https://api.github.com/users/thomasbruggink/followers","following_url":"https://api.github.com/users/thomasbruggink/following{/other_user}","gists_url":"https://api.github.com/users/thomasbruggink/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasbruggink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasbruggink/subscriptions","organizations_url":"https://api.github.com/users/thomasbruggink/orgs","repos_url":"https://api.github.com/users/thomasbruggink/repos","events_url":"https://api.github.com/users/thomasbruggink/events{/privacy}","received_events_url":"https://api.github.com/users/thomasbruggink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-17T01:59:23Z","updated_at":"2024-03-17T01:59:23Z","author_association":"CONTRIBUTOR","body":"@fishy I fixed the kotlin compiler error, didnt realize this was re-using the java library :bow: \r\nIf you prefer this to be its own PR let me know and I'll split it off.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2002277969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2002319847","html_url":"https://github.com/apache/thrift/pull/2947#issuecomment-2002319847","issue_url":"https://api.github.com/repos/apache/thrift/issues/2947","id":2002319847,"node_id":"IC_kwDOAAS9U853WPnn","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-17T05:43:09Z","updated_at":"2024-03-17T05:43:09Z","author_association":"MEMBER","body":"you probably want to rebase on top of #2945 in order to actually run the tests (currently it stopped at the spotless step)","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2002319847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2002358543","html_url":"https://github.com/apache/thrift/pull/2947#issuecomment-2002358543","issue_url":"https://api.github.com/repos/apache/thrift/issues/2947","id":2002358543,"node_id":"IC_kwDOAAS9U853WZEP","user":{"login":"thomasbruggink","id":16775318,"node_id":"MDQ6VXNlcjE2Nzc1MzE4","avatar_url":"https://avatars.githubusercontent.com/u/16775318?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasbruggink","html_url":"https://github.com/thomasbruggink","followers_url":"https://api.github.com/users/thomasbruggink/followers","following_url":"https://api.github.com/users/thomasbruggink/following{/other_user}","gists_url":"https://api.github.com/users/thomasbruggink/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasbruggink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasbruggink/subscriptions","organizations_url":"https://api.github.com/users/thomasbruggink/orgs","repos_url":"https://api.github.com/users/thomasbruggink/repos","events_url":"https://api.github.com/users/thomasbruggink/events{/privacy}","received_events_url":"https://api.github.com/users/thomasbruggink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-17T08:20:09Z","updated_at":"2024-03-17T08:20:09Z","author_association":"CONTRIBUTOR","body":"sure, ill rebase this once the other one is merged :bow: ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2002358543/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2004635082","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-2004635082","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":2004635082,"node_id":"IC_kwDOAAS9U853fE3K","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-18T18:23:25Z","updated_at":"2024-03-18T18:23:25Z","author_association":"CONTRIBUTOR","body":"@fishy I think I have done what I can. \r\n\r\nI did check the test, master vs my changes for the parts that my environment is set up for and I don't see any regression.\r\nI did run into #2937 when I started this work, which would enable more test to be run probably. \r\n\r\nI have also compared the generated code for the unit tests with those against master and see no difference.\r\n\r\nWhat else can I do and what are the next steps for this PR?\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2004635082/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2004989104","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-2004989104","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":2004989104,"node_id":"IC_kwDOAAS9U853gbSw","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-18T21:05:48Z","updated_at":"2024-03-18T21:05:48Z","author_association":"MEMBER","body":"@CJCombrink sorry I'm in some family emergency and won't have time to review it any further for the next few weeks. None of my comment is blocking anyways :)\r\n\r\nMario, Jens, and/or others should be able to guide you through the process.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2004989104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2005006684","html_url":"https://github.com/apache/thrift/pull/2937#issuecomment-2005006684","issue_url":"https://api.github.com/repos/apache/thrift/issues/2937","id":2005006684,"node_id":"IC_kwDOAAS9U853gflc","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-18T21:16:56Z","updated_at":"2024-03-18T21:16:56Z","author_association":"MEMBER","body":"To my understanding `make dist` should be self-sufficient, i.e. not require the compiler being built before in a separate step. That's also the way in which it behaves right now, I just double-checked it.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2005006684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2005049716","html_url":"https://github.com/apache/thrift/pull/2949#issuecomment-2005049716","issue_url":"https://api.github.com/repos/apache/thrift/issues/2949","id":2005049716,"node_id":"IC_kwDOAAS9U853gqF0","user":{"login":"sveneld","id":4028769,"node_id":"MDQ6VXNlcjQwMjg3Njk=","avatar_url":"https://avatars.githubusercontent.com/u/4028769?v=4","gravatar_id":"","url":"https://api.github.com/users/sveneld","html_url":"https://github.com/sveneld","followers_url":"https://api.github.com/users/sveneld/followers","following_url":"https://api.github.com/users/sveneld/following{/other_user}","gists_url":"https://api.github.com/users/sveneld/gists{/gist_id}","starred_url":"https://api.github.com/users/sveneld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sveneld/subscriptions","organizations_url":"https://api.github.com/users/sveneld/orgs","repos_url":"https://api.github.com/users/sveneld/repos","events_url":"https://api.github.com/users/sveneld/events{/privacy}","received_events_url":"https://api.github.com/users/sveneld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-18T21:32:24Z","updated_at":"2024-03-18T21:32:24Z","author_association":"CONTRIBUTOR","body":"@pkvach take a look","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2005049716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2005083271","html_url":"https://github.com/apache/thrift/pull/2946#issuecomment-2005083271","issue_url":"https://api.github.com/repos/apache/thrift/issues/2946","id":2005083271,"node_id":"IC_kwDOAAS9U853gySH","user":{"login":"k-walton","id":113375522,"node_id":"U_kgDOBsH5Ig","avatar_url":"https://avatars.githubusercontent.com/u/113375522?v=4","gravatar_id":"","url":"https://api.github.com/users/k-walton","html_url":"https://github.com/k-walton","followers_url":"https://api.github.com/users/k-walton/followers","following_url":"https://api.github.com/users/k-walton/following{/other_user}","gists_url":"https://api.github.com/users/k-walton/gists{/gist_id}","starred_url":"https://api.github.com/users/k-walton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/k-walton/subscriptions","organizations_url":"https://api.github.com/users/k-walton/orgs","repos_url":"https://api.github.com/users/k-walton/repos","events_url":"https://api.github.com/users/k-walton/events{/privacy}","received_events_url":"https://api.github.com/users/k-walton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-18T21:41:46Z","updated_at":"2024-03-18T21:41:46Z","author_association":"CONTRIBUTOR","body":"@fishy I've added the test to validate that the benchmark's memory allocation is below a threshold.  I chose the `AllocedBytesPerOp()` stat to make a limit, due to the normal protocol buffer reads using allocations as well making the results less clear.\r\n\r\nI'll add the before and after below.\r\n\r\nBefore change:\r\n```\r\n=== RUN   BenchmarkSimpleJsonStringParse_Allocations\r\nBenchmarkSimpleJsonStringParse_Allocations\r\nBenchmarkSimpleJsonStringParse_Allocations-10               5881            222369 ns/op         1073930 B/op       2016 allocs/op\r\n```\r\n\r\nAfter change:\r\n```\r\n=== RUN   BenchmarkSimpleJsonStringParse_Allocations\r\nBenchmarkSimpleJsonStringParse_Allocations\r\nBenchmarkSimpleJsonStringParse_Allocations-10              28100             41955 ns/op           15440 B/op       1027 allocs/op\r\n```","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2005083271/reactions","total_count":4,"+1":2,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":1,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2005144715","html_url":"https://github.com/apache/thrift/pull/2937#issuecomment-2005144715","issue_url":"https://api.github.com/repos/apache/thrift/issues/2937","id":2005144715,"node_id":"IC_kwDOAAS9U853hBSL","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-18T22:18:51Z","updated_at":"2024-03-18T22:48:59Z","author_association":"MEMBER","body":"> Perhaps the original container did not configure all targets correctly so the dist job for all languages never actually ran?\r\n\r\nYes and no. It's obviously [some automake change](https://www.mail-archive.com/search?l=bug-automake@gnu.org&q=subject:%22bug%2349317%5C%3A+dist%5C%3A+depends+on+%24%5C%28BUILT_SOURCES%5C%29%2C+but+has+no+reason+to%22&o=newest&f=1). I compared the generated Makefiles and it became rather obvious, because now\r\n\r\n```\r\ndistdir: $(BUILT_SOURCES)\r\n\t$(MAKE) $(AM_MAKEFLAGS) distdir-am\r\n\r\ndistdir-am: $(DISTFILES)\r\n```\r\nbut before simply\r\n\r\n```\r\ndistdir: $(DISTFILES)\r\n```\r\n\r\nNote the lack of the $(BUILT_SOURCES) dependency.\r\n\r\n\r\n-----\r\n\r\nThere's a new option **[no-dist-built-sources](https://www.gnu.org/software/automake/manual/html_node/List-of-Automake-options.html#index-Option_002c-no_002ddist_002dbuilt_002dsources)** that basically reverts the change as an opt-in feature.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2005144715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2008729002","html_url":"https://github.com/apache/thrift/pull/2949#issuecomment-2008729002","issue_url":"https://api.github.com/repos/apache/thrift/issues/2949","id":2008729002,"node_id":"IC_kwDOAAS9U853usWq","user":{"login":"pkvach","id":5307506,"node_id":"MDQ6VXNlcjUzMDc1MDY=","avatar_url":"https://avatars.githubusercontent.com/u/5307506?v=4","gravatar_id":"","url":"https://api.github.com/users/pkvach","html_url":"https://github.com/pkvach","followers_url":"https://api.github.com/users/pkvach/followers","following_url":"https://api.github.com/users/pkvach/following{/other_user}","gists_url":"https://api.github.com/users/pkvach/gists{/gist_id}","starred_url":"https://api.github.com/users/pkvach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pkvach/subscriptions","organizations_url":"https://api.github.com/users/pkvach/orgs","repos_url":"https://api.github.com/users/pkvach/repos","events_url":"https://api.github.com/users/pkvach/events{/privacy}","received_events_url":"https://api.github.com/users/pkvach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-20T06:27:22Z","updated_at":"2024-03-20T06:27:22Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2008729002/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2008732569","html_url":"https://github.com/apache/thrift/pull/2949#issuecomment-2008732569","issue_url":"https://api.github.com/repos/apache/thrift/issues/2949","id":2008732569,"node_id":"IC_kwDOAAS9U853utOZ","user":{"login":"sveneld","id":4028769,"node_id":"MDQ6VXNlcjQwMjg3Njk=","avatar_url":"https://avatars.githubusercontent.com/u/4028769?v=4","gravatar_id":"","url":"https://api.github.com/users/sveneld","html_url":"https://github.com/sveneld","followers_url":"https://api.github.com/users/sveneld/followers","following_url":"https://api.github.com/users/sveneld/following{/other_user}","gists_url":"https://api.github.com/users/sveneld/gists{/gist_id}","starred_url":"https://api.github.com/users/sveneld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sveneld/subscriptions","organizations_url":"https://api.github.com/users/sveneld/orgs","repos_url":"https://api.github.com/users/sveneld/repos","events_url":"https://api.github.com/users/sveneld/events{/privacy}","received_events_url":"https://api.github.com/users/sveneld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-20T06:32:00Z","updated_at":"2024-03-20T06:32:00Z","author_association":"CONTRIBUTOR","body":"@Jens-G let's merge this pull request","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2008732569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2012369203","html_url":"https://github.com/apache/thrift/pull/2937#issuecomment-2012369203","issue_url":"https://api.github.com/repos/apache/thrift/issues/2937","id":2012369203,"node_id":"IC_kwDOAAS9U8538lEz","user":{"login":"thomasbruggink","id":16775318,"node_id":"MDQ6VXNlcjE2Nzc1MzE4","avatar_url":"https://avatars.githubusercontent.com/u/16775318?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasbruggink","html_url":"https://github.com/thomasbruggink","followers_url":"https://api.github.com/users/thomasbruggink/followers","following_url":"https://api.github.com/users/thomasbruggink/following{/other_user}","gists_url":"https://api.github.com/users/thomasbruggink/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasbruggink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasbruggink/subscriptions","organizations_url":"https://api.github.com/users/thomasbruggink/orgs","repos_url":"https://api.github.com/users/thomasbruggink/repos","events_url":"https://api.github.com/users/thomasbruggink/events{/privacy}","received_events_url":"https://api.github.com/users/thomasbruggink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-21T13:55:12Z","updated_at":"2024-03-21T13:55:12Z","author_association":"CONTRIBUTOR","body":"> Note the lack of the $(BUILT_SOURCES) dependency.\r\n> \r\n> There's a new option **[no-dist-built-sources](https://www.gnu.org/software/automake/manual/html_node/List-of-Automake-options.html#index-Option_002c-no_002ddist_002dbuilt_002dsources)** that basically reverts the change as an opt-in feature.\r\n\r\nThanks for the hint :+1: I have no experience with automake so I've tried to figure out where to apply your solution. Updating `AM_INIT_AUTOMAKE` with the `no-dist-built-sources` has the problem that it wont work on automake under version 1.16.5 which is not installable through a package manager on ubuntu 20.04.\r\nHowever even on 1.16.5 it seems this option just doesnt work? I could find [others](https://github.com/stefantalpalaru/transmission-og/blob/c6fe62195b89ec26e1238f83f55744ebf8d0b045/qt/Makefile.am#L350-L355) that seem to have run into the same problem.\r\n\r\nSo the latest commit manually overrides the `distdir` option but removes the dependecy on `BUILT_SOURCES`. This works on both 20.04 and 22.04 for me.\r\n\r\nPlease let me know if this also succeeds for you :bow: if you happen to know a better solutions then I can redo the last commit.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2012369203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2014035889","html_url":"https://github.com/apache/thrift/pull/2937#issuecomment-2014035889","issue_url":"https://api.github.com/repos/apache/thrift/issues/2937","id":2014035889,"node_id":"IC_kwDOAAS9U854C7-x","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-21T23:24:12Z","updated_at":"2024-03-21T23:24:12Z","author_association":"MEMBER","body":"> > There's a new option [no-dist-built-sources](https://www.gnu.org/software/automake/manual/html_node/List-of-Automake-options.html#index-Option_002c-no_002ddist_002dbuilt_002dsources) that basically reverts the change as an opt-in feature.\r\n\r\n> However even on 1.16.5 it seems this option just doesnt work? I could find [others](https://github.com/stefantalpalaru/transmission-og/blob/c6fe62195b89ec26e1238f83f55744ebf8d0b045/qt/Makefile.am#L350-L355) that seem to have run into the same problem.\r\n\r\nInteresting. Yes I did notice, indeed. Obviously I am the first one then that brought the issue up at the right place: https://debbugs.gnu.org/cgi/bugreport.cgi?bug=69908\r\n\r\nI'll try your solution tomorrow, thanks for fixing it.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2014035889/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2015710787","html_url":"https://github.com/apache/thrift/pull/2950#issuecomment-2015710787","issue_url":"https://api.github.com/repos/apache/thrift/issues/2950","id":2015710787,"node_id":"IC_kwDOAAS9U854JU5D","user":{"login":"ben-harris-5","id":102531623,"node_id":"U_kgDOBhyCJw","avatar_url":"https://avatars.githubusercontent.com/u/102531623?v=4","gravatar_id":"","url":"https://api.github.com/users/ben-harris-5","html_url":"https://github.com/ben-harris-5","followers_url":"https://api.github.com/users/ben-harris-5/followers","following_url":"https://api.github.com/users/ben-harris-5/following{/other_user}","gists_url":"https://api.github.com/users/ben-harris-5/gists{/gist_id}","starred_url":"https://api.github.com/users/ben-harris-5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ben-harris-5/subscriptions","organizations_url":"https://api.github.com/users/ben-harris-5/orgs","repos_url":"https://api.github.com/users/ben-harris-5/repos","events_url":"https://api.github.com/users/ben-harris-5/events{/privacy}","received_events_url":"https://api.github.com/users/ben-harris-5/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-22T18:48:25Z","updated_at":"2024-03-25T14:46:59Z","author_association":"NONE","body":"CI is failing for this, but I'm incredibly unsure why or what's going wrong here. I'd greatly appreciate any assistance that folks could provide on this!\r\n\r\nEDIT: Yeah, [Java's failing](https://github.com/apache/thrift/actions/runs/8393509381/job/22999021570?pr=2950), but this doesn't touch the Java code o_o","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2015710787/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2016421494","html_url":"https://github.com/apache/thrift/pull/2951#issuecomment-2016421494","issue_url":"https://api.github.com/repos/apache/thrift/issues/2951","id":2016421494,"node_id":"IC_kwDOAAS9U854MCZ2","user":{"login":"sveneld","id":4028769,"node_id":"MDQ6VXNlcjQwMjg3Njk=","avatar_url":"https://avatars.githubusercontent.com/u/4028769?v=4","gravatar_id":"","url":"https://api.github.com/users/sveneld","html_url":"https://github.com/sveneld","followers_url":"https://api.github.com/users/sveneld/followers","following_url":"https://api.github.com/users/sveneld/following{/other_user}","gists_url":"https://api.github.com/users/sveneld/gists{/gist_id}","starred_url":"https://api.github.com/users/sveneld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sveneld/subscriptions","organizations_url":"https://api.github.com/users/sveneld/orgs","repos_url":"https://api.github.com/users/sveneld/repos","events_url":"https://api.github.com/users/sveneld/events{/privacy}","received_events_url":"https://api.github.com/users/sveneld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T09:14:12Z","updated_at":"2024-03-23T09:14:12Z","author_association":"CONTRIBUTOR","body":"@pkvach it's a beginning of code coverage for folder Protocol. It's much code there, so I will make pull requests step by step ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2016421494/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2016730932","html_url":"https://github.com/apache/thrift/pull/2951#issuecomment-2016730932","issue_url":"https://api.github.com/repos/apache/thrift/issues/2951","id":2016730932,"node_id":"IC_kwDOAAS9U854NN80","user":{"login":"sveneld","id":4028769,"node_id":"MDQ6VXNlcjQwMjg3Njk=","avatar_url":"https://avatars.githubusercontent.com/u/4028769?v=4","gravatar_id":"","url":"https://api.github.com/users/sveneld","html_url":"https://github.com/sveneld","followers_url":"https://api.github.com/users/sveneld/followers","following_url":"https://api.github.com/users/sveneld/following{/other_user}","gists_url":"https://api.github.com/users/sveneld/gists{/gist_id}","starred_url":"https://api.github.com/users/sveneld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sveneld/subscriptions","organizations_url":"https://api.github.com/users/sveneld/orgs","repos_url":"https://api.github.com/users/sveneld/repos","events_url":"https://api.github.com/users/sveneld/events{/privacy}","received_events_url":"https://api.github.com/users/sveneld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-24T08:14:34Z","updated_at":"2024-03-24T08:14:34Z","author_association":"CONTRIBUTOR","body":"I add folder test\\Integration for tests which depends on code which is generated by thrift library","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2016730932/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2016961179","html_url":"https://github.com/apache/thrift/pull/2937#issuecomment-2016961179","issue_url":"https://api.github.com/repos/apache/thrift/issues/2937","id":2016961179,"node_id":"IC_kwDOAAS9U854OGKb","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-24T22:08:02Z","updated_at":"2024-03-24T22:08:02Z","author_association":"MEMBER","body":"> I'll try your solution tomorrow, thanks for fixing it.\r\n\r\nseems to work now","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2016961179/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":2,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2023790975","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-2023790975","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":2023790975,"node_id":"IC_kwDOAAS9U854oJl_","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-27T19:21:06Z","updated_at":"2024-03-27T19:21:06Z","author_association":"CONTRIBUTOR","body":"I did some thinking...\r\nFor a major project like this, a PR  touching 56 files with more than 10,135 changes from a random person might not be the easiest thing to consider. \r\nThus, would it not be better if we keep the changes local to one generator and then maybe in future consider this type of change?\r\nObviously I would want the changes in `t_cpp_generator.cc`\r\n\r\nOr maybe just make the changes in the generators. I did go all the way with all other files, but baby steps might be the best or safest course of action.\r\n\r\nPS: I started a new ticket: [THRIFT-5772](https://issues.apache.org/jira/browse/THRIFT-5772) and if I have to choose I would rather have energy put there compared to this change, although this would be nice to have (in the C++ generator :P )","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2023790975/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2024066765","html_url":"https://github.com/apache/thrift/pull/2952#issuecomment-2024066765","issue_url":"https://api.github.com/repos/apache/thrift/issues/2952","id":2024066765,"node_id":"IC_kwDOAAS9U854pM7N","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-27T22:02:07Z","updated_at":"2024-03-27T22:02:07Z","author_association":"CONTRIBUTOR","body":"See https://github.com/CJCombrink/thrift/pull/2 for a UUID wrapper instead of using `std::string`. \r\nPersonally I prefer the wrapper solution","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2024066765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2024669545","html_url":"https://github.com/apache/thrift/pull/2888#issuecomment-2024669545","issue_url":"https://api.github.com/repos/apache/thrift/issues/2888","id":2024669545,"node_id":"IC_kwDOAAS9U854rgFp","user":{"login":"binalp7","id":51986238,"node_id":"MDQ6VXNlcjUxOTg2MjM4","avatar_url":"https://avatars.githubusercontent.com/u/51986238?v=4","gravatar_id":"","url":"https://api.github.com/users/binalp7","html_url":"https://github.com/binalp7","followers_url":"https://api.github.com/users/binalp7/followers","following_url":"https://api.github.com/users/binalp7/following{/other_user}","gists_url":"https://api.github.com/users/binalp7/gists{/gist_id}","starred_url":"https://api.github.com/users/binalp7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/binalp7/subscriptions","organizations_url":"https://api.github.com/users/binalp7/orgs","repos_url":"https://api.github.com/users/binalp7/repos","events_url":"https://api.github.com/users/binalp7/events{/privacy}","received_events_url":"https://api.github.com/users/binalp7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-28T08:34:59Z","updated_at":"2024-03-28T08:34:59Z","author_association":"NONE","body":"@ethan-gallant Is there any update on this? I am also facing the similar issue.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2024669545/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2024974807","html_url":"https://github.com/apache/thrift/pull/2949#issuecomment-2024974807","issue_url":"https://api.github.com/repos/apache/thrift/issues/2949","id":2024974807,"node_id":"IC_kwDOAAS9U854sqnX","user":{"login":"sveneld","id":4028769,"node_id":"MDQ6VXNlcjQwMjg3Njk=","avatar_url":"https://avatars.githubusercontent.com/u/4028769?v=4","gravatar_id":"","url":"https://api.github.com/users/sveneld","html_url":"https://github.com/sveneld","followers_url":"https://api.github.com/users/sveneld/followers","following_url":"https://api.github.com/users/sveneld/following{/other_user}","gists_url":"https://api.github.com/users/sveneld/gists{/gist_id}","starred_url":"https://api.github.com/users/sveneld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sveneld/subscriptions","organizations_url":"https://api.github.com/users/sveneld/orgs","repos_url":"https://api.github.com/users/sveneld/repos","events_url":"https://api.github.com/users/sveneld/events{/privacy}","received_events_url":"https://api.github.com/users/sveneld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-28T11:37:28Z","updated_at":"2024-03-28T11:37:28Z","author_association":"CONTRIBUTOR","body":"@Jens-G what we are waiting for?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2024974807/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2028099942","html_url":"https://github.com/apache/thrift/pull/2953#issuecomment-2028099942","issue_url":"https://api.github.com/repos/apache/thrift/issues/2953","id":2028099942,"node_id":"IC_kwDOAAS9U8544llm","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-30T15:10:20Z","updated_at":"2024-03-30T15:10:20Z","author_association":"MEMBER","body":"> TSocket::write should catch write_partial's exception and throw it\r\n\r\n... because .... ?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2028099942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2028717854","html_url":"https://github.com/apache/thrift/pull/2953#issuecomment-2028717854","issue_url":"https://api.github.com/repos/apache/thrift/issues/2953","id":2028717854,"node_id":"IC_kwDOAAS9U85468ce","user":{"login":"langke1988","id":98438354,"node_id":"U_kgDOBd4M0g","avatar_url":"https://avatars.githubusercontent.com/u/98438354?v=4","gravatar_id":"","url":"https://api.github.com/users/langke1988","html_url":"https://github.com/langke1988","followers_url":"https://api.github.com/users/langke1988/followers","following_url":"https://api.github.com/users/langke1988/following{/other_user}","gists_url":"https://api.github.com/users/langke1988/gists{/gist_id}","starred_url":"https://api.github.com/users/langke1988/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/langke1988/subscriptions","organizations_url":"https://api.github.com/users/langke1988/orgs","repos_url":"https://api.github.com/users/langke1988/repos","events_url":"https://api.github.com/users/langke1988/events{/privacy}","received_events_url":"https://api.github.com/users/langke1988/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-31T13:06:08Z","updated_at":"2024-03-31T13:06:08Z","author_association":"NONE","body":"\n\nPlease make sure to submit this modification. TSocket::write call write_partial, which may throw TTransportException. Therefore, TSocket::write must catch and throw this exception, otherwise the following issues may occur:\nI have multiple Thrift servers, and clients connect to the server each time by catching exceptions to determine if the server is available, thereby achieving high availability. However, TSocket::write did not throw this exception, causing my high availability to fail. After modifying this code, the problem disappeared.\n\n\n\n\n---- Replied Message ----\n| From | Jens ***@***.***> |\n| Date | 3/31/2024 01:03 |\n| To | ***@***.***> |\n| Cc | ***@***.***>,\n***@***.***> |\n| Subject | Re: [apache/thrift] fix 1 bug about TSocket::write (PR #2953) |\n\nClosed #2953.\n\n—\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you authored the thread.Message ID: ***@***.***>","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2028717854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2028755353","html_url":"https://github.com/apache/thrift/pull/2953#issuecomment-2028755353","issue_url":"https://api.github.com/repos/apache/thrift/issues/2953","id":2028755353,"node_id":"IC_kwDOAAS9U8547FmZ","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-31T14:00:35Z","updated_at":"2024-03-31T14:02:18Z","author_association":"MEMBER","body":"It makes absolutely no sense to throw an exception, immediately catch it and w/o any other action simply re-throwing it. The only thing you achieve is to make your \"high availability server\" run slower. It will not change anything in the behaviour. You have a test case ready to prove your claim?\r\n\r\n> fix 1 bug about TSocket::write \r\n> Please make sure to submit this modification\r\n\r\nThe more you trying to push decibels instead of providing sound arguments the less likely it is.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2028755353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2028803738","html_url":"https://github.com/apache/thrift/pull/2953#issuecomment-2028803738","issue_url":"https://api.github.com/repos/apache/thrift/issues/2953","id":2028803738,"node_id":"IC_kwDOAAS9U8547Raa","user":{"login":"langke1988","id":98438354,"node_id":"U_kgDOBd4M0g","avatar_url":"https://avatars.githubusercontent.com/u/98438354?v=4","gravatar_id":"","url":"https://api.github.com/users/langke1988","html_url":"https://github.com/langke1988","followers_url":"https://api.github.com/users/langke1988/followers","following_url":"https://api.github.com/users/langke1988/following{/other_user}","gists_url":"https://api.github.com/users/langke1988/gists{/gist_id}","starred_url":"https://api.github.com/users/langke1988/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/langke1988/subscriptions","organizations_url":"https://api.github.com/users/langke1988/orgs","repos_url":"https://api.github.com/users/langke1988/repos","events_url":"https://api.github.com/users/langke1988/events{/privacy}","received_events_url":"https://api.github.com/users/langke1988/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-31T15:49:27Z","updated_at":"2024-03-31T15:49:27Z","author_association":"NONE","body":"I'm sorry for the confusion caused. First of all, thank you for your response. Perhaps my try-catch block was not placed properly, which led to your confusion. In fact, I was throwing an exception to catch the highlighted area in red, not the green one.\n\nPlease kindly analyze the TSocket::write_partial function. My English is not very good and my expression may not be clear. I apologize for any confusion and appreciate your help.\n\n\nvoid TSocket::write(const uint8_t* buf, uint32_t len) {\n  uint32_t sent = 0;\n  try{\n      while (sent < len) {\n      uint32_t b = write_partial(buf + sent, len - sent);\n      if (b == 0) {\n        // This should only happen if the timeout set with SO_SNDTIMEO expired.\n        // Raise an exception.\n        throw TTransportException(TTransportException::TIMED_OUT, \"send timeout expired\");\n      }\n      sent += b;\n    }\n  }\n  catch(TTransportException e) {\n    throw e;\n  }\n}\n\n\nThere are uncaught exceptions in the TSocket::write method. Specifically, if the return value of the write_partial method is less than 0, it will enter the exception handling code block. In the exception handling code block, different types of exceptions are thrown based on different error types, but these exceptions are not caught and are continued to be thrown to the caller for handling. Therefore, these exceptions should be caught in the write method to properly handle exceptional situations.\n\n\nuint32_t TSocket::write_partial(const uint8_t* buf, uint32_t len) {\n  if (socket_ == THRIFT_INVALID_SOCKET) {\n    throw TTransportException(TTransportException::NOT_OPEN, \"Called write on non-open socket\");\n  }\n\n\n  uint32_t sent = 0;\n\n\n  int flags = 0;\n#ifdef MSG_NOSIGNAL\n  // Note the use of MSG_NOSIGNAL to suppress SIGPIPE errors, instead we\n  // check for the THRIFT_EPIPE return condition and close the socket in that case\n  flags |= MSG_NOSIGNAL;\n#endif // ifdef MSG_NOSIGNAL\n\n\n  int b = static_cast<int>(send(socket_, const_cast_sockopt(buf + sent), len - sent, flags));\n\n\n  if (b < 0) {\n    if (THRIFT_GET_SOCKET_ERROR == THRIFT_EWOULDBLOCK || THRIFT_GET_SOCKET_ERROR == THRIFT_EAGAIN) {\n      return 0;\n    }\n    // Fail on a send error\n    int errno_copy = THRIFT_GET_SOCKET_ERROR;\n    GlobalOutput.perror(\"TSocket::write_partial() send() \" + getSocketInfo(), errno_copy);\n\n\n    if (errno_copy == THRIFT_EPIPE || errno_copy == THRIFT_ECONNRESET\n        || errno_copy == THRIFT_ENOTCONN) {\n      throw TTransportException(TTransportException::NOT_OPEN, \"write() send()\", errno_copy);\n    }\n\n\n    throw TTransportException(TTransportException::UNKNOWN, \"write() send()\", errno_copy);\n  }\n\n\n  // Fail on blocked send\n  if (b == 0) {\n    throw TTransportException(TTransportException::NOT_OPEN, \"Socket send returned 0.\");\n  }\n  return b;\n}\n\n\n---- Replied Message ----\n| From | Jens ***@***.***> |\n| Date | 3/31/2024 22:01 |\n| To | ***@***.***> |\n| Cc | ***@***.***>,\n***@***.***> |\n| Subject | Re: [apache/thrift] fix 1 bug about TSocket::write (PR #2953) |\n\nIt makes absolutely no sense to throw an exception, immediately catch it and w/o any other action simply re-throwing it. The only thing you achieve is to make your \"high availability server\" run slower. It will not change anything in the behaviour. You have a test case ready to prove your claim?\n\nPlease make sure to submit this modification\n\nThe more you trying to push decibels instead of providing sound arguments the less likely it is.\n\n—\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you authored the thread.Message ID: ***@***.***>","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2028803738/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2029399668","html_url":"https://github.com/apache/thrift/pull/2955#issuecomment-2029399668","issue_url":"https://api.github.com/repos/apache/thrift/issues/2955","id":2029399668,"node_id":"IC_kwDOAAS9U8549i50","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-01T08:29:29Z","updated_at":"2024-04-01T08:29:29Z","author_association":"MEMBER","body":"But we **are** the project? I don't think that's helpful. \r\nI tend to just close it but maybe anyone else wants to comment on this?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2029399668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2029403909","html_url":"https://github.com/apache/thrift/pull/2937#issuecomment-2029403909","issue_url":"https://api.github.com/repos/apache/thrift/issues/2937","id":2029403909,"node_id":"IC_kwDOAAS9U8549j8F","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-01T08:32:21Z","updated_at":"2024-04-01T08:32:51Z","author_association":"MEMBER","body":"@fishy  @sveneld  All fine with this?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2029403909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2029746095","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-2029746095","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":2029746095,"node_id":"IC_kwDOAAS9U854-3ev","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-01T13:17:37Z","updated_at":"2024-04-01T13:17:37Z","author_association":"MEMBER","body":"> For a major project like this, a PR touching 56 files with more than 10,135 changes from a random person might not be the easiest thing to consider.\r\n\r\nThat's right but I'm fine in this particular case. If you could just add the commits re above changes at the end, that would make followup review easier for me. I will squash them before merge myself.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2029746095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2031166455","html_url":"https://github.com/apache/thrift/pull/2937#issuecomment-2031166455","issue_url":"https://api.github.com/repos/apache/thrift/issues/2937","id":2031166455,"node_id":"IC_kwDOAAS9U855ESP3","user":{"login":"sveneld","id":4028769,"node_id":"MDQ6VXNlcjQwMjg3Njk=","avatar_url":"https://avatars.githubusercontent.com/u/4028769?v=4","gravatar_id":"","url":"https://api.github.com/users/sveneld","html_url":"https://github.com/sveneld","followers_url":"https://api.github.com/users/sveneld/followers","following_url":"https://api.github.com/users/sveneld/following{/other_user}","gists_url":"https://api.github.com/users/sveneld/gists{/gist_id}","starred_url":"https://api.github.com/users/sveneld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sveneld/subscriptions","organizations_url":"https://api.github.com/users/sveneld/orgs","repos_url":"https://api.github.com/users/sveneld/repos","events_url":"https://api.github.com/users/sveneld/events{/privacy}","received_events_url":"https://api.github.com/users/sveneld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-02T06:23:13Z","updated_at":"2024-04-02T06:23:13Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2031166455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2031934384","html_url":"https://github.com/apache/thrift/pull/2955#issuecomment-2031934384","issue_url":"https://api.github.com/repos/apache/thrift/issues/2955","id":2031934384,"node_id":"IC_kwDOAAS9U855HNuw","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-02T12:39:04Z","updated_at":"2024-04-02T12:39:04Z","author_association":"MEMBER","body":"> But we **are** the project? I don't think that's helpful. I tend to just close it but maybe anyone else wants to comment on this?\r\n\r\nthis change shouldn't happen, the lib dependency should've been kept as is","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2031934384/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2031935023","html_url":"https://github.com/apache/thrift/pull/2955#issuecomment-2031935023","issue_url":"https://api.github.com/repos/apache/thrift/issues/2955","id":2031935023,"node_id":"IC_kwDOAAS9U855HN4v","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2024-04-02T12:39:18Z","updated_at":"2024-04-02T12:39:18Z","author_association":"CONTRIBUTOR","body":"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2031935023/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":{"id":29110,"client_id":"Iv1.4f9a6346434f815e","slug":"dependabot","node_id":"MDM6QXBwMjkxMTA=","owner":{"login":"github","id":9919,"node_id":"MDEyOk9yZ2FuaXphdGlvbjk5MTk=","avatar_url":"https://avatars.githubusercontent.com/u/9919?v=4","gravatar_id":"","url":"https://api.github.com/users/github","html_url":"https://github.com/github","followers_url":"https://api.github.com/users/github/followers","following_url":"https://api.github.com/users/github/following{/other_user}","gists_url":"https://api.github.com/users/github/gists{/gist_id}","starred_url":"https://api.github.com/users/github/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github/subscriptions","organizations_url":"https://api.github.com/users/github/orgs","repos_url":"https://api.github.com/users/github/repos","events_url":"https://api.github.com/users/github/events{/privacy}","received_events_url":"https://api.github.com/users/github/received_events","type":"Organization","user_view_type":"public","site_admin":false},"name":"Dependabot","description":"","external_url":"https://dependabot-api.githubapp.com","html_url":"https://github.com/apps/dependabot","created_at":"2019-04-16T22:34:25Z","updated_at":"2024-03-20T21:06:35Z","permissions":{"actions":"read","checks":"write","contents":"write","issues":"write","members":"read","metadata":"read","pull_requests":"write","statuses":"read","vulnerability_alerts":"read","workflows":"write"},"events":["check_suite","issues","issue_comment","label","pull_request","pull_request_review","pull_request_review_comment","repository"]}},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2031937565","html_url":"https://github.com/apache/thrift/pull/2923#issuecomment-2031937565","issue_url":"https://api.github.com/repos/apache/thrift/issues/2923","id":2031937565,"node_id":"IC_kwDOAAS9U855HOgd","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-02T12:40:07Z","updated_at":"2024-04-02T12:40:07Z","author_association":"MEMBER","body":"> This breaks java/kotlin build\r\n\r\nlikely because of formatting rule changes","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2031937565/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2031943290","html_url":"https://github.com/apache/thrift/pull/2953#issuecomment-2031943290","issue_url":"https://api.github.com/repos/apache/thrift/issues/2953","id":2031943290,"node_id":"IC_kwDOAAS9U855HP56","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-02T12:42:47Z","updated_at":"2024-04-02T12:42:47Z","author_association":"MEMBER","body":"First, essentially your \"solution\" boils down to\r\n\r\n```\r\nvoid TSocket::write(const uint8_t* buf, uint32_t len) {\r\n  try{\r\n      // some code that may throw TTransportException (or something else)\r\n  }\r\n  catch(TTransportException e) {   // catch it\r\n    throw e;                       // re-throw it \r\n  }\r\n}\r\n```\r\n\r\nIt's probably me but I don't see the point in this.\r\n\r\nSecond, whenever you call code, be it your own or 3rd party code, there may be errors that you don't expect. You may run out of disk space, memory or run into communication timeouts. Your point was that this is to ensure your server runs with high availability:\r\n\r\n>  clients connect to the server each time by catching exceptions to determine if the server is available\r\n\r\nI can't see how catching one particular exception at this place will help with that. Why can't you catch and handle the exception in the calling code? And how does catching and re-throwing help with making the server more available? Also, why is it clients that have to perform that task? Assumed you use some state-of-the-art system like e.g. kubernetes, [there is special handling built right into the platform for exactly this task](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/) and therefore no need to re-invent the wheel again.\r\n\r\nTo me it looks as if you might try to solve the wrong problem, or at least at the wrong place.\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2031943290/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2033380539","html_url":"https://github.com/apache/thrift/pull/2953#issuecomment-2033380539","issue_url":"https://api.github.com/repos/apache/thrift/issues/2953","id":2033380539,"node_id":"IC_kwDOAAS9U855Muy7","user":{"login":"langke1988","id":98438354,"node_id":"U_kgDOBd4M0g","avatar_url":"https://avatars.githubusercontent.com/u/98438354?v=4","gravatar_id":"","url":"https://api.github.com/users/langke1988","html_url":"https://github.com/langke1988","followers_url":"https://api.github.com/users/langke1988/followers","following_url":"https://api.github.com/users/langke1988/following{/other_user}","gists_url":"https://api.github.com/users/langke1988/gists{/gist_id}","starred_url":"https://api.github.com/users/langke1988/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/langke1988/subscriptions","organizations_url":"https://api.github.com/users/langke1988/orgs","repos_url":"https://api.github.com/users/langke1988/repos","events_url":"https://api.github.com/users/langke1988/events{/privacy}","received_events_url":"https://api.github.com/users/langke1988/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-03T01:33:01Z","updated_at":"2024-04-03T01:33:01Z","author_association":"NONE","body":"Thank you for your patient explanation. It seems that I was mistaken in my thinking, and I apologize for any confusion I may have caused you.\n\n\n\n\n\n\n\n---- Replied Message ----\n| From | Jens ***@***.***> |\n| Date | 4/2/2024 20:43 |\n| To | ***@***.***> |\n| Cc | ***@***.***>,\n***@***.***> |\n| Subject | Re: [apache/thrift] fix 1 bug about TSocket::write (PR #2953) |\n\nFirst, essentially your \"solution\" boils down to\n\nvoid TSocket::write(const uint8_t* buf, uint32_t len) {\n  try{\n      // some code that may throw TTransportException (or something else)\n  }\n  catch(TTransportException e) {   // catch it\n    throw e;                       // re-throw it \n  }\n}\n\n\nIt's probably me but I don't see the point in this.\n\nSecond, whenever you call code, be it your own or 3rd party code, there may be errors that you don't expect. You may run out of disk space, memory or run into communication timeouts. Your point was that this is to ensure your server runs with high availability:\n\nclients connect to the server each time by catching exceptions to determine if the server is available\n\nI can't see how catching one particular exception at this place will help with that. Why can't you catch and handle the exception in the calling code? And how does catching and re-throwing help with making the server more available? Also, why is it clients that have to perform that task? Assumed you use some state-of-the-art system like e.g. kubernetes, there is special handling built right into the platform for exactly this task and therefore no need to re-invent the wheel again.\n\nTo me it looks as if you might try to solve the wrong problem, or at least at the wrong place.\n\n—\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you authored the thread.Message ID: ***@***.***>","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2033380539/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2035630873","html_url":"https://github.com/apache/thrift/pull/2951#issuecomment-2035630873","issue_url":"https://api.github.com/repos/apache/thrift/issues/2951","id":2035630873,"node_id":"IC_kwDOAAS9U855VUMZ","user":{"login":"sveneld","id":4028769,"node_id":"MDQ6VXNlcjQwMjg3Njk=","avatar_url":"https://avatars.githubusercontent.com/u/4028769?v=4","gravatar_id":"","url":"https://api.github.com/users/sveneld","html_url":"https://github.com/sveneld","followers_url":"https://api.github.com/users/sveneld/followers","following_url":"https://api.github.com/users/sveneld/following{/other_user}","gists_url":"https://api.github.com/users/sveneld/gists{/gist_id}","starred_url":"https://api.github.com/users/sveneld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sveneld/subscriptions","organizations_url":"https://api.github.com/users/sveneld/orgs","repos_url":"https://api.github.com/users/sveneld/repos","events_url":"https://api.github.com/users/sveneld/events{/privacy}","received_events_url":"https://api.github.com/users/sveneld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-03T21:31:04Z","updated_at":"2024-04-03T21:31:28Z","author_association":"CONTRIBUTOR","body":"Write unit tests for protocol is much complicated %)\r\nCurrently  code coverage is 68%\r\n![image](https://github.com/apache/thrift/assets/4028769/5ad25103-1607-4c89-a602-bc36066a6e03)\r\n\r\nNext step will be restoring of test between different languages.\r\n\r\n@pkvach take a look","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2035630873/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2040692337","html_url":"https://github.com/apache/thrift/pull/2951#issuecomment-2040692337","issue_url":"https://api.github.com/repos/apache/thrift/issues/2951","id":2040692337,"node_id":"IC_kwDOAAS9U855on5x","user":{"login":"pkvach","id":5307506,"node_id":"MDQ6VXNlcjUzMDc1MDY=","avatar_url":"https://avatars.githubusercontent.com/u/5307506?v=4","gravatar_id":"","url":"https://api.github.com/users/pkvach","html_url":"https://github.com/pkvach","followers_url":"https://api.github.com/users/pkvach/followers","following_url":"https://api.github.com/users/pkvach/following{/other_user}","gists_url":"https://api.github.com/users/pkvach/gists{/gist_id}","starred_url":"https://api.github.com/users/pkvach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pkvach/subscriptions","organizations_url":"https://api.github.com/users/pkvach/orgs","repos_url":"https://api.github.com/users/pkvach/repos","events_url":"https://api.github.com/users/pkvach/events{/privacy}","received_events_url":"https://api.github.com/users/pkvach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-05T22:07:46Z","updated_at":"2024-04-05T22:07:46Z","author_association":"CONTRIBUTOR","body":"LGTM :+1: ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2040692337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2040985148","html_url":"https://github.com/apache/thrift/pull/2951#issuecomment-2040985148","issue_url":"https://api.github.com/repos/apache/thrift/issues/2951","id":2040985148,"node_id":"IC_kwDOAAS9U855pvY8","user":{"login":"sveneld","id":4028769,"node_id":"MDQ6VXNlcjQwMjg3Njk=","avatar_url":"https://avatars.githubusercontent.com/u/4028769?v=4","gravatar_id":"","url":"https://api.github.com/users/sveneld","html_url":"https://github.com/sveneld","followers_url":"https://api.github.com/users/sveneld/followers","following_url":"https://api.github.com/users/sveneld/following{/other_user}","gists_url":"https://api.github.com/users/sveneld/gists{/gist_id}","starred_url":"https://api.github.com/users/sveneld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sveneld/subscriptions","organizations_url":"https://api.github.com/users/sveneld/orgs","repos_url":"https://api.github.com/users/sveneld/repos","events_url":"https://api.github.com/users/sveneld/events{/privacy}","received_events_url":"https://api.github.com/users/sveneld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-06T06:13:13Z","updated_at":"2024-04-06T06:13:13Z","author_association":"CONTRIBUTOR","body":"@Jens-G let's merge ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2040985148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2048621022","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-2048621022","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":2048621022,"node_id":"IC_kwDOAAS9U856G3ne","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-11T00:00:43Z","updated_at":"2024-04-11T00:00:43Z","author_association":"MEMBER","body":"Any news here?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2048621022/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2048922892","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-2048922892","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":2048922892,"node_id":"IC_kwDOAAS9U856IBUM","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-11T04:52:19Z","updated_at":"2024-04-11T04:52:19Z","author_association":"CONTRIBUTOR","body":"> Any news here?\r\n\r\nHi Sorry, I was busy with a few other things.\r\nWill work through the feedback today.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2048922892/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2049896596","html_url":"https://github.com/apache/thrift/pull/2426#issuecomment-2049896596","issue_url":"https://api.github.com/repos/apache/thrift/issues/2426","id":2049896596,"node_id":"IC_kwDOAAS9U856LvCU","user":{"login":"cameron-martin","id":1467158,"node_id":"MDQ6VXNlcjE0NjcxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/1467158?v=4","gravatar_id":"","url":"https://api.github.com/users/cameron-martin","html_url":"https://github.com/cameron-martin","followers_url":"https://api.github.com/users/cameron-martin/followers","following_url":"https://api.github.com/users/cameron-martin/following{/other_user}","gists_url":"https://api.github.com/users/cameron-martin/gists{/gist_id}","starred_url":"https://api.github.com/users/cameron-martin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cameron-martin/subscriptions","organizations_url":"https://api.github.com/users/cameron-martin/orgs","repos_url":"https://api.github.com/users/cameron-martin/repos","events_url":"https://api.github.com/users/cameron-martin/events{/privacy}","received_events_url":"https://api.github.com/users/cameron-martin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-11T14:59:51Z","updated_at":"2024-04-11T14:59:51Z","author_association":"CONTRIBUTOR","body":"How come this has been closed? This seems like a great feature.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2049896596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2050233861","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-2050233861","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":2050233861,"node_id":"IC_kwDOAAS9U856NBYF","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-11T18:05:55Z","updated_at":"2024-04-11T18:05:55Z","author_association":"CONTRIBUTOR","body":"@Jens-G \r\n\r\n> Most of the missing single lines are `cerr` outputs. I mean, if we want to save walls, we should be more consequent and include `cerr `outputs as well, maybe doing the flush explicitly if needed. Or would `cerr `be the exception from the rule that `endl `is generally evil?\r\n\r\nInitially I thought it might be good to keep cerr to flush. After your comment I  did some thinking and reading and I see `std::cerr` is unbuffered, thus every `<<` will flush and `endl` will then be a double flush, thus I think it is safe to conclude it is evil there as well.  ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2050233861/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2053523772","html_url":"https://github.com/apache/thrift/pull/2811#issuecomment-2053523772","issue_url":"https://api.github.com/repos/apache/thrift/issues/2811","id":2053523772,"node_id":"IC_kwDOAAS9U856Zkk8","user":{"login":"thomasbruggink","id":16775318,"node_id":"MDQ6VXNlcjE2Nzc1MzE4","avatar_url":"https://avatars.githubusercontent.com/u/16775318?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasbruggink","html_url":"https://github.com/thomasbruggink","followers_url":"https://api.github.com/users/thomasbruggink/followers","following_url":"https://api.github.com/users/thomasbruggink/following{/other_user}","gists_url":"https://api.github.com/users/thomasbruggink/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasbruggink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasbruggink/subscriptions","organizations_url":"https://api.github.com/users/thomasbruggink/orgs","repos_url":"https://api.github.com/users/thomasbruggink/repos","events_url":"https://api.github.com/users/thomasbruggink/events{/privacy}","received_events_url":"https://api.github.com/users/thomasbruggink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-13T06:27:55Z","updated_at":"2024-04-13T06:27:55Z","author_association":"CONTRIBUTOR","body":"@emmenlau any concern if we merge this or my PR? I think at this point the implementation is the same.\r\nIt would be great if the test suite of cpp can pass again.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2053523772/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2054205728","html_url":"https://github.com/apache/thrift/pull/2959#issuecomment-2054205728","issue_url":"https://api.github.com/repos/apache/thrift/issues/2959","id":2054205728,"node_id":"IC_kwDOAAS9U856cLEg","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-14T22:34:03Z","updated_at":"2024-04-14T22:34:03Z","author_association":"MEMBER","body":"What happens if the transport is not socket based?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2054205728/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2055487404","html_url":"https://github.com/apache/thrift/pull/2959#issuecomment-2055487404","issue_url":"https://api.github.com/repos/apache/thrift/issues/2959","id":2055487404,"node_id":"IC_kwDOAAS9U856hD-s","user":{"login":"yoelyang","id":145519289,"node_id":"U_kgDOCKxyuQ","avatar_url":"https://avatars.githubusercontent.com/u/145519289?v=4","gravatar_id":"","url":"https://api.github.com/users/yoelyang","html_url":"https://github.com/yoelyang","followers_url":"https://api.github.com/users/yoelyang/followers","following_url":"https://api.github.com/users/yoelyang/following{/other_user}","gists_url":"https://api.github.com/users/yoelyang/gists{/gist_id}","starred_url":"https://api.github.com/users/yoelyang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yoelyang/subscriptions","organizations_url":"https://api.github.com/users/yoelyang/orgs","repos_url":"https://api.github.com/users/yoelyang/repos","events_url":"https://api.github.com/users/yoelyang/events{/privacy}","received_events_url":"https://api.github.com/users/yoelyang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-15T06:08:45Z","updated_at":"2024-04-15T06:08:45Z","author_association":"NONE","body":"> What happens if the transport is not socket based?\r\n\r\n\r\n\r\n> What happens if the transport is not socket based?\r\n\r\nThe new commit resolves this issue.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2055487404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2058228045","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-2058228045","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":2058228045,"node_id":"IC_kwDOAAS9U856rhFN","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-16T04:56:53Z","updated_at":"2024-04-16T04:56:53Z","author_association":"CONTRIBUTOR","body":"@Jens-G Thank you for your effort and _meticulous attention to the details_","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2058228045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2058351192","html_url":"https://github.com/apache/thrift/pull/2943#issuecomment-2058351192","issue_url":"https://api.github.com/repos/apache/thrift/issues/2943","id":2058351192,"node_id":"IC_kwDOAAS9U856r_JY","user":{"login":"emmenlau","id":1098087,"node_id":"MDQ6VXNlcjEwOTgwODc=","avatar_url":"https://avatars.githubusercontent.com/u/1098087?v=4","gravatar_id":"","url":"https://api.github.com/users/emmenlau","html_url":"https://github.com/emmenlau","followers_url":"https://api.github.com/users/emmenlau/followers","following_url":"https://api.github.com/users/emmenlau/following{/other_user}","gists_url":"https://api.github.com/users/emmenlau/gists{/gist_id}","starred_url":"https://api.github.com/users/emmenlau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/emmenlau/subscriptions","organizations_url":"https://api.github.com/users/emmenlau/orgs","repos_url":"https://api.github.com/users/emmenlau/repos","events_url":"https://api.github.com/users/emmenlau/events{/privacy}","received_events_url":"https://api.github.com/users/emmenlau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-16T06:44:16Z","updated_at":"2024-04-16T06:44:16Z","author_association":"MEMBER","body":"nice work @CJCombrink and (as usually) @Jens-G !","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2058351192/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2074523078","html_url":"https://github.com/apache/thrift/pull/2964#issuecomment-2074523078","issue_url":"https://api.github.com/repos/apache/thrift/issues/2964","id":2074523078,"node_id":"IC_kwDOAAS9U857prXG","user":{"login":"emmenlau","id":1098087,"node_id":"MDQ6VXNlcjEwOTgwODc=","avatar_url":"https://avatars.githubusercontent.com/u/1098087?v=4","gravatar_id":"","url":"https://api.github.com/users/emmenlau","html_url":"https://github.com/emmenlau","followers_url":"https://api.github.com/users/emmenlau/followers","following_url":"https://api.github.com/users/emmenlau/following{/other_user}","gists_url":"https://api.github.com/users/emmenlau/gists{/gist_id}","starred_url":"https://api.github.com/users/emmenlau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/emmenlau/subscriptions","organizations_url":"https://api.github.com/users/emmenlau/orgs","repos_url":"https://api.github.com/users/emmenlau/repos","events_url":"https://api.github.com/users/emmenlau/events{/privacy}","received_events_url":"https://api.github.com/users/emmenlau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-24T09:35:02Z","updated_at":"2024-04-24T09:36:25Z","author_association":"MEMBER","body":"I think this is a valid request. But it needs more discussion. Probably this should be moved to Jira.\r\n\r\n## General Context\r\n\r\nCurrently the Thrift server is implemented such that it will end on all server-side exceptions. This is not only in the case you found, there are other cases that may trigger the server to end.\r\n\r\nIn my humble opinion, the server should never end. I assume that an action, that triggers an exception in the server, is the \"fault\" of the client. In my understanding, the correct receiver of the problem is the client, while the server should resume its \"normal\" operation. The exception should therefore be passed down to the client.\r\n\r\nFor myself, I have modified the server to act in this way. Basically, I wrap the full server in the relevant try-catch-clocks, and pass all possible exceptions to the client.\r\n\r\nHowever this changes a fundamental design of Thrift. While I would argue that this is an improvement for any user, it still requires discussion.\r\n\r\nWhat do others think?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2074523078/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2075886247","html_url":"https://github.com/apache/thrift/pull/2963#issuecomment-2075886247","issue_url":"https://api.github.com/repos/apache/thrift/issues/2963","id":2075886247,"node_id":"IC_kwDOAAS9U857u4Kn","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-24T21:33:17Z","updated_at":"2024-04-24T21:33:17Z","author_association":"MEMBER","body":"> THeaderProtocol already supports the auto detection of: [...] framed or not\r\n\r\n* Assumed, I absolutely want to force the use of framed transport for some reasons, I would have to derive an own variant and handle that myself? Otherwise bad counterparts could by crafting a suitable THeader force me into unframed mode which I don't want. Correct? Intended?\r\n\r\n* Same with HMAC. I can intercept a message, strip the HMAC stuff and then deliver some \"improved\" version of the message instead. Correct? Intended?\r\n\r\n* CLIENT_TYPE somehow reminds me of [something](https://en.wikipedia.org/wiki/Combinatorial_explosion). ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2075886247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2075935871","html_url":"https://github.com/apache/thrift/pull/2963#issuecomment-2075935871","issue_url":"https://api.github.com/repos/apache/thrift/issues/2963","id":2075935871,"node_id":"IC_kwDOAAS9U857vER_","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-24T22:08:17Z","updated_at":"2024-04-24T22:08:17Z","author_association":"MEMBER","body":"> > THeaderProtocol already supports the auto detection of: [...] framed or not\r\n> \r\n> * Assumed, I absolutely want to force the use of framed transport for some reasons, I would have to derive an own variant and handle that myself? Otherwise bad counterparts could by crafting a suitable THeader force me into unframed mode which I don't want. Correct? Intended?\r\n\r\nThe \"auto detection\" part in THeader spec is more for auto \"backward\" compatibility with non-THeader clients. e.g. if a client talking to THeader server does not use THeader at all, it still works if it uses one of TBinary or TCompact protocol, and with or without TFramedTransport. but if a client actually uses THeader frame is enforced (it cannot write/read any header without frame)\r\n\r\n> * Same with HMAC. I can intercept a message, strip the HMAC stuff and then deliver some \"improved\" version of the message instead. Correct? Intended?\r\n\r\nif we have a MITM to rewrite the message then yes HMAC can be stripped.\r\n\r\nI get your point, this proposal does add additional enforcement not possible with THeader alone.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2075935871/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2075972715","html_url":"https://github.com/apache/thrift/pull/2950#issuecomment-2075972715","issue_url":"https://api.github.com/repos/apache/thrift/issues/2950","id":2075972715,"node_id":"IC_kwDOAAS9U857vNRr","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-24T22:45:14Z","updated_at":"2024-04-24T22:45:14Z","author_association":"MEMBER","body":"Please:\r\n\r\n1. Create a JIRA ticket to describe the issue (with what's the current generated code and what should be the correct code)\r\n2. Resolve the merge conflicts (java failing should be fixed on latest master version)\r\n3. Create an unit test under `lib/nodejs/test/` (or maybe `lib/js/test/`?) to verify this fix","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2075972715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2080407445","html_url":"https://github.com/apache/thrift/pull/2963#issuecomment-2080407445","issue_url":"https://api.github.com/repos/apache/thrift/issues/2963","id":2080407445,"node_id":"IC_kwDOAAS9U858AH-V","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-27T07:59:26Z","updated_at":"2024-04-27T07:59:49Z","author_association":"MEMBER","body":"Thanks for the feedback. I'm currently re-evaluating the entire design. I'll come up with an enhanced proposal later. ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2080407445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2088035519","html_url":"https://github.com/apache/thrift/pull/2923#issuecomment-2088035519","issue_url":"https://api.github.com/repos/apache/thrift/issues/2923","id":2088035519,"node_id":"IC_kwDOAAS9U858dOS_","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2024-05-01T06:17:08Z","updated_at":"2024-05-01T06:17:08Z","author_association":"CONTRIBUTOR","body":"Superseded by #2970.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2088035519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":{"id":29110,"client_id":"Iv1.4f9a6346434f815e","slug":"dependabot","node_id":"MDM6QXBwMjkxMTA=","owner":{"login":"github","id":9919,"node_id":"MDEyOk9yZ2FuaXphdGlvbjk5MTk=","avatar_url":"https://avatars.githubusercontent.com/u/9919?v=4","gravatar_id":"","url":"https://api.github.com/users/github","html_url":"https://github.com/github","followers_url":"https://api.github.com/users/github/followers","following_url":"https://api.github.com/users/github/following{/other_user}","gists_url":"https://api.github.com/users/github/gists{/gist_id}","starred_url":"https://api.github.com/users/github/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github/subscriptions","organizations_url":"https://api.github.com/users/github/orgs","repos_url":"https://api.github.com/users/github/repos","events_url":"https://api.github.com/users/github/events{/privacy}","received_events_url":"https://api.github.com/users/github/received_events","type":"Organization","user_view_type":"public","site_admin":false},"name":"Dependabot","description":"","external_url":"https://dependabot-api.githubapp.com","html_url":"https://github.com/apps/dependabot","created_at":"2019-04-16T22:34:25Z","updated_at":"2024-03-20T21:06:35Z","permissions":{"actions":"read","checks":"write","contents":"write","issues":"write","members":"read","metadata":"read","pull_requests":"write","statuses":"read","vulnerability_alerts":"read","workflows":"write"},"events":["check_suite","issues","issue_comment","label","pull_request","pull_request_review","pull_request_review_comment","repository"]}},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2088731825","html_url":"https://github.com/apache/thrift/pull/2971#issuecomment-2088731825","issue_url":"https://api.github.com/repos/apache/thrift/issues/2971","id":2088731825,"node_id":"IC_kwDOAAS9U858f4Sx","user":{"login":"dcelasun","id":144373,"node_id":"MDQ6VXNlcjE0NDM3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/144373?v=4","gravatar_id":"","url":"https://api.github.com/users/dcelasun","html_url":"https://github.com/dcelasun","followers_url":"https://api.github.com/users/dcelasun/followers","following_url":"https://api.github.com/users/dcelasun/following{/other_user}","gists_url":"https://api.github.com/users/dcelasun/gists{/gist_id}","starred_url":"https://api.github.com/users/dcelasun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcelasun/subscriptions","organizations_url":"https://api.github.com/users/dcelasun/orgs","repos_url":"https://api.github.com/users/dcelasun/repos","events_url":"https://api.github.com/users/dcelasun/events{/privacy}","received_events_url":"https://api.github.com/users/dcelasun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-01T16:31:56Z","updated_at":"2024-05-01T16:31:56Z","author_association":"MEMBER","body":"That's a surprisingly large increase. Unfortunate :(","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2088731825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2088761455","html_url":"https://github.com/apache/thrift/pull/2968#issuecomment-2088761455","issue_url":"https://api.github.com/repos/apache/thrift/issues/2968","id":2088761455,"node_id":"IC_kwDOAAS9U858f_hv","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-01T16:54:50Z","updated_at":"2024-05-01T16:54:50Z","author_association":"MEMBER","body":"Still draft?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2088761455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2089551869","html_url":"https://github.com/apache/thrift/pull/2968#issuecomment-2089551869","issue_url":"https://api.github.com/repos/apache/thrift/issues/2968","id":2089551869,"node_id":"IC_kwDOAAS9U858jAf9","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-02T04:31:29Z","updated_at":"2024-05-02T04:31:29Z","author_association":"CONTRIBUTOR","body":"@Jens-G I still need to look into the latest errors as mentioned on the ticket. \r\nHowever when I was testing this was sufficient to to get the `build/docker/scripts/autotools.sh` script to pass, but the OP seems to have more issues.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2089551869/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2091817305","html_url":"https://github.com/apache/thrift/pull/2929#issuecomment-2091817305","issue_url":"https://api.github.com/repos/apache/thrift/issues/2929","id":2091817305,"node_id":"IC_kwDOAAS9U858rplZ","user":{"login":"salomon-smekecohen","id":134332337,"node_id":"U_kgDOCAG_sQ","avatar_url":"https://avatars.githubusercontent.com/u/134332337?v=4","gravatar_id":"","url":"https://api.github.com/users/salomon-smekecohen","html_url":"https://github.com/salomon-smekecohen","followers_url":"https://api.github.com/users/salomon-smekecohen/followers","following_url":"https://api.github.com/users/salomon-smekecohen/following{/other_user}","gists_url":"https://api.github.com/users/salomon-smekecohen/gists{/gist_id}","starred_url":"https://api.github.com/users/salomon-smekecohen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/salomon-smekecohen/subscriptions","organizations_url":"https://api.github.com/users/salomon-smekecohen/orgs","repos_url":"https://api.github.com/users/salomon-smekecohen/repos","events_url":"https://api.github.com/users/salomon-smekecohen/events{/privacy}","received_events_url":"https://api.github.com/users/salomon-smekecohen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-02T22:00:51Z","updated_at":"2024-05-02T22:00:51Z","author_association":"CONTRIBUTOR","body":"It would be great to have this, it would _almost_ enable transpilation via `mypyc`. I believe the only missing piece would be to add to all structures:\r\n\r\n`thrift_spec: Any`","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2091817305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2096889345","html_url":"https://github.com/apache/thrift/pull/2968#issuecomment-2096889345","issue_url":"https://api.github.com/repos/apache/thrift/issues/2968","id":2096889345,"node_id":"IC_kwDOAAS9U858-_4B","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-06T20:49:06Z","updated_at":"2024-05-06T20:49:06Z","author_association":"CONTRIBUTOR","body":"@Jens-G Sorry for the delay, I am looking into this this week, I could not over the weekend. ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2096889345/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2097468133","html_url":"https://github.com/apache/thrift/pull/2968#issuecomment-2097468133","issue_url":"https://api.github.com/repos/apache/thrift/issues/2968","id":2097468133,"node_id":"IC_kwDOAAS9U859BNLl","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-07T05:21:28Z","updated_at":"2024-05-07T05:21:28Z","author_association":"CONTRIBUTOR","body":"@Jens-G The last commits at least fixes the compile errors in the 'ubuntu-jammy' docker containers as well.\r\nI have not implemented any cross tests, just made it compile. \r\nI can look at better cross tests but would like to get some feedback on [THRIFT-5773](https://issues.apache.org/jira/browse/THRIFT-5773) so that I can do the work there.\r\n\r\nAfter these changes I now also get [THRIFT-5775](https://issues.apache.org/jira/browse/THRIFT-5775) as per the original ticket tracking this issue. ","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2097468133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2101236784","html_url":"https://github.com/apache/thrift/pull/2964#issuecomment-2101236784","issue_url":"https://api.github.com/repos/apache/thrift/issues/2964","id":2101236784,"node_id":"IC_kwDOAAS9U859PlQw","user":{"login":"anshulmgupta","id":8423431,"node_id":"MDQ6VXNlcjg0MjM0MzE=","avatar_url":"https://avatars.githubusercontent.com/u/8423431?v=4","gravatar_id":"","url":"https://api.github.com/users/anshulmgupta","html_url":"https://github.com/anshulmgupta","followers_url":"https://api.github.com/users/anshulmgupta/followers","following_url":"https://api.github.com/users/anshulmgupta/following{/other_user}","gists_url":"https://api.github.com/users/anshulmgupta/gists{/gist_id}","starred_url":"https://api.github.com/users/anshulmgupta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anshulmgupta/subscriptions","organizations_url":"https://api.github.com/users/anshulmgupta/orgs","repos_url":"https://api.github.com/users/anshulmgupta/repos","events_url":"https://api.github.com/users/anshulmgupta/events{/privacy}","received_events_url":"https://api.github.com/users/anshulmgupta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-08T19:00:25Z","updated_at":"2024-05-08T19:00:25Z","author_association":"NONE","body":"@emmenlau, I added the comment on JIRA. Can you please take a look? Thanks!","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2101236784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2104726426","html_url":"https://github.com/apache/thrift/pull/2973#issuecomment-2104726426","issue_url":"https://api.github.com/repos/apache/thrift/issues/2973","id":2104726426,"node_id":"IC_kwDOAAS9U859c5Oa","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-10T14:37:30Z","updated_at":"2024-05-10T14:37:30Z","author_association":"MEMBER","body":"@dcelasun mind taking another look?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2104726426/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2111660488","html_url":"https://github.com/apache/thrift/pull/2976#issuecomment-2111660488","issue_url":"https://api.github.com/repos/apache/thrift/issues/2976","id":2111660488,"node_id":"IC_kwDOAAS9U8593WHI","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-15T06:11:53Z","updated_at":"2024-05-15T06:11:53Z","author_association":"MEMBER","body":"> Great idea. Does this make `go fmt` a no-op?\r\n\r\nNot really. There are still quite a few things not there yet:\r\n\r\n* imports need to be sorted alphabetically\r\n* vertical alignment (for example, for field names of a struct, need to figure out the longest one and align everything else)\r\n* proper blank lines (no two blank lines between functions, etc.)\r\n* ...","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2111660488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2113388947","html_url":"https://github.com/apache/thrift/pull/2976#issuecomment-2113388947","issue_url":"https://api.github.com/repos/apache/thrift/issues/2976","id":2113388947,"node_id":"IC_kwDOAAS9U85998GT","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-15T20:22:01Z","updated_at":"2024-05-15T20:22:01Z","author_association":"MEMBER","body":"Just to mention it ... there once was a call to the net effect of system(\"go fmt\") in the go generator so the maintainer did not have to care at all. That might explain why it is at it is. That call was later thrown out because some automated code scanner labeled it as the pure evil. Removing it was the most effective solution. So just in case someone comes up with that same idea, you can immediately give the -1 yourself. ;-)","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2113388947/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2113493910","html_url":"https://github.com/apache/thrift/pull/2976#issuecomment-2113493910","issue_url":"https://api.github.com/repos/apache/thrift/issues/2976","id":2113493910,"node_id":"IC_kwDOAAS9U859-VuW","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-15T21:35:23Z","updated_at":"2024-05-15T21:35:44Z","author_association":"MEMBER","body":"Thanks for the context! It might not be that bad an idea if for each language we allow the compiler to define a command to run optionally after the file is generated to format it, and configured the \"official\" formatter for the languages if available.\r\n\r\nBut there are definitely challenges to make it work on both windows and posix :) And security concerns :)","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2113493910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2116434506","html_url":"https://github.com/apache/thrift/pull/2977#issuecomment-2116434506","issue_url":"https://api.github.com/repos/apache/thrift/issues/2977","id":2116434506,"node_id":"IC_kwDOAAS9U85-JjpK","user":{"login":"jimexist","id":622789,"node_id":"MDQ6VXNlcjYyMjc4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/622789?v=4","gravatar_id":"","url":"https://api.github.com/users/jimexist","html_url":"https://github.com/jimexist","followers_url":"https://api.github.com/users/jimexist/followers","following_url":"https://api.github.com/users/jimexist/following{/other_user}","gists_url":"https://api.github.com/users/jimexist/gists{/gist_id}","starred_url":"https://api.github.com/users/jimexist/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jimexist/subscriptions","organizations_url":"https://api.github.com/users/jimexist/orgs","repos_url":"https://api.github.com/users/jimexist/repos","events_url":"https://api.github.com/users/jimexist/events{/privacy}","received_events_url":"https://api.github.com/users/jimexist/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-17T00:45:28Z","updated_at":"2024-05-17T00:45:28Z","author_association":"MEMBER","body":"maybe you can share a code snippet with before and after when generated?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2116434506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2116452758","html_url":"https://github.com/apache/thrift/pull/2977#issuecomment-2116452758","issue_url":"https://api.github.com/repos/apache/thrift/issues/2977","id":2116452758,"node_id":"IC_kwDOAAS9U85-JoGW","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-05-17T01:11:37Z","updated_at":"2024-05-17T01:11:37Z","author_association":"MEMBER","body":"<details>\r\n<summary>deprecated.thrift</summary>\r\n\r\n```thrift\r\nnamespace * deprecated\r\n\r\nenum Foo {\r\n\tBar (deprecated = \"dep-1\")\r\n} (deprecated = \"dep-2\")\r\n\r\nstruct depstruct {\r\n\t1: string one (deprecated = \"dep-3\")\r\n} (deprecated = \"dep-4\")\r\n\r\nunion depunion {\r\n\t1: string one (deprecated = \"dep-5\")\r\n} (deprecated = \"dep-6\")\r\n\r\nexception depexcept {\r\n\t1: string one (deprecated = \"dep-7\")\r\n} (deprecated = \"dep-8\")\r\n\r\nservice inner {\r\n\tvoid Blibb() (deprecated = \"dep-9\")\r\n} (deprecated = \"dep-10\")\r\n\r\nservice outer extends inner {\r\n\tvoid Plopp() (deprecated = \"dep-11\")\r\n} (deprecated = \"dep-12\")\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>gen-go/deprecated/deprecated.go</summary>\r\n\r\n```go\r\n// Code generated by Thrift Compiler (0.21.0). DO NOT EDIT.\r\n\r\npackage deprecated\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"context\"\r\n\t\"database/sql/driver\"\r\n\t\"errors\"\r\n\t\"fmt\"\r\n\t\"log/slog\"\r\n\t\"time\"\r\n\tthrift \"github.com/apache/thrift/lib/go/thrift\"\r\n\t\"strings\"\r\n\t\"regexp\"\r\n)\r\n\r\n// (needed to ensure safety because of naive import list construction.)\r\nvar _ = bytes.Equal\r\nvar _ = context.Background\r\nvar _ = errors.New\r\nvar _ = fmt.Printf\r\nvar _ = slog.Log\r\nvar _ = time.Now\r\nvar _ = thrift.ZERO\r\n// (needed by validator.)\r\nvar _ = strings.Contains\r\nvar _ = regexp.MatchString\r\n\r\n// Deprecated: dep-2\r\ntype Foo int64\r\nconst (\r\n\t// Deprecated: dep-1\r\n\tFoo_Bar Foo = 0\r\n)\r\n\r\nfunc (p Foo) String() string {\r\n\tswitch p {\r\n\tcase Foo_Bar: return \"Bar\"\r\n\t}\r\n\treturn \"<UNSET>\"\r\n}\r\n\r\n// Deprecated: dep-2\r\nfunc FooFromString(s string) (Foo, error) {\r\n\tswitch s {\r\n\tcase \"Bar\": return Foo_Bar, nil \r\n\t}\r\n\treturn Foo(0), fmt.Errorf(\"not a valid Foo string\")\r\n}\r\n\r\n\r\n// Deprecated: dep-2\r\nfunc FooPtr(v Foo) *Foo { return &v }\r\n\r\nfunc (p Foo) MarshalText() ([]byte, error) {\r\n\treturn []byte(p.String()), nil\r\n}\r\n\r\nfunc (p *Foo) UnmarshalText(text []byte) error {\r\n\tq, err := FooFromString(string(text))\r\n\tif err != nil {\r\n\t\treturn err\r\n\t}\r\n\t*p = q\r\n\treturn nil\r\n}\r\n\r\nfunc (p *Foo) Scan(value interface{}) error {\r\n\tv, ok := value.(int64)\r\n\tif !ok {\r\n\t\treturn errors.New(\"Scan value is not int64\")\r\n\t}\r\n\t*p = Foo(v)\r\n\treturn nil\r\n}\r\n\r\nfunc (p *Foo) Value() (driver.Value, error) {\r\n\tif p == nil {\r\n\t\treturn nil, nil\r\n\t}\r\n\treturn int64(*p), nil\r\n}\r\n\r\n// Attributes:\r\n//  - One\r\n// \r\n// Deprecated: dep-4\r\ntype Depstruct struct {\r\n\t// Deprecated: dep-3\r\n\tOne string `thrift:\"one,1\" db:\"one\" json:\"one\"`\r\n}\r\n\r\n// Deprecated: dep-4\r\nfunc NewDepstruct() *Depstruct {\r\n\treturn &Depstruct{}\r\n}\r\n\r\n\r\n\r\n// Deprecated: dep-3\r\nfunc (p *Depstruct) GetOne() string {\r\n\treturn p.One\r\n}\r\n\r\nfunc (p *Depstruct) Read(ctx context.Context, iprot thrift.TProtocol) error {\r\n\tif _, err := iprot.ReadStructBegin(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read error: \", p), err)\r\n\t}\r\n\r\n\r\n\tfor {\r\n\t\t_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin(ctx)\r\n\t\tif err != nil {\r\n\t\t\treturn thrift.PrependError(fmt.Sprintf(\"%T field %d read error: \", p, fieldId), err)\r\n\t\t}\r\n\t\tif fieldTypeId == thrift.STOP {\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tswitch fieldId {\r\n\t\tcase 1:\r\n\t\t\tif fieldTypeId == thrift.STRING {\r\n\t\t\t\tif err := p.ReadField1(ctx, iprot); err != nil {\r\n\t\t\t\t\treturn err\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif err := iprot.Skip(ctx, fieldTypeId); err != nil {\r\n\t\t\t\t\treturn err\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\tif err := iprot.Skip(ctx, fieldTypeId); err != nil {\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t\t}\r\n\t\tif err := iprot.ReadFieldEnd(ctx); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t}\r\n\tif err := iprot.ReadStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read struct end error: \", p), err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *Depstruct) ReadField1(ctx context.Context, iprot thrift.TProtocol) error {\r\n\tif v, err := iprot.ReadString(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"error reading field 1: \", err)\r\n\t} else {\r\n\t\tp.One = v\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *Depstruct) Write(ctx context.Context, oprot thrift.TProtocol) error {\r\n\tif err := oprot.WriteStructBegin(ctx, \"depstruct\"); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T write struct begin error: \", p), err)\r\n\t}\r\n\tif p != nil {\r\n\t\tif err := p.writeField1(ctx, oprot); err != nil { return err }\r\n\t}\r\n\tif err := oprot.WriteFieldStop(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write field stop error: \", err)\r\n\t}\r\n\tif err := oprot.WriteStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write struct stop error: \", err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *Depstruct) writeField1(ctx context.Context, oprot thrift.TProtocol) (err error) {\r\n\tif err := oprot.WriteFieldBegin(ctx, \"one\", thrift.STRING, 1); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T write field begin error 1:one: \", p), err)\r\n\t}\r\n\tif err := oprot.WriteString(ctx, string(p.One)); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T.one (1) field write error: \", p), err)\r\n\t}\r\n\tif err := oprot.WriteFieldEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T write field end error 1:one: \", p), err)\r\n\t}\r\n\treturn err\r\n}\r\n\r\nfunc (p *Depstruct) Equals(other *Depstruct) bool {\r\n\tif p == other {\r\n\t\treturn true\r\n\t} else if p == nil || other == nil {\r\n\t\treturn false\r\n\t}\r\n\tif p.One != other.One { return false }\r\n\treturn true\r\n}\r\n\r\nfunc (p *Depstruct) String() string {\r\n\tif p == nil {\r\n\t\treturn \"<nil>\"\r\n\t}\r\n\treturn fmt.Sprintf(\"Depstruct(%+v)\", *p)\r\n}\r\n\r\nfunc (p *Depstruct) LogValue() slog.Value {\r\n\tif p == nil {\r\n\t\treturn slog.AnyValue(nil)\r\n\t}\r\n\tv := thrift.SlogTStructWrapper{\r\n\t\tType: \"*deprecated.Depstruct\",\r\n\t\tValue: p,\r\n\t}\r\n\treturn slog.AnyValue(v)\r\n}\r\n\r\nvar _ slog.LogValuer = (*Depstruct)(nil)\r\n\r\nfunc (p *Depstruct) Validate() error {\r\n\treturn nil\r\n}\r\n\r\n// Attributes:\r\n//  - One\r\n// \r\n// Deprecated: dep-6\r\ntype Depunion struct {\r\n\t// Deprecated: dep-5\r\n\tOne *string `thrift:\"one,1\" db:\"one\" json:\"one,omitempty\"`\r\n}\r\n\r\n// Deprecated: dep-6\r\nfunc NewDepunion() *Depunion {\r\n\treturn &Depunion{}\r\n}\r\n\r\n// Deprecated: dep-5\r\nvar Depunion_One_DEFAULT string\r\n\r\n// Deprecated: dep-5\r\nfunc (p *Depunion) GetOne() string {\r\n\tif !p.IsSetOne() {\r\n\t\treturn Depunion_One_DEFAULT\r\n\t}\r\n\treturn *p.One\r\n}\r\n\r\nfunc (p *Depunion) CountSetFieldsDepunion() int {\r\n\tcount := 0\r\n\tif (p.IsSetOne()) {\r\n\t\tcount++\r\n\t}\r\n\treturn count\r\n\r\n}\r\n\r\n// Deprecated: dep-5\r\nfunc (p *Depunion) IsSetOne() bool {\r\n\treturn p.One != nil\r\n}\r\n\r\nfunc (p *Depunion) Read(ctx context.Context, iprot thrift.TProtocol) error {\r\n\tif _, err := iprot.ReadStructBegin(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read error: \", p), err)\r\n\t}\r\n\r\n\r\n\tfor {\r\n\t\t_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin(ctx)\r\n\t\tif err != nil {\r\n\t\t\treturn thrift.PrependError(fmt.Sprintf(\"%T field %d read error: \", p, fieldId), err)\r\n\t\t}\r\n\t\tif fieldTypeId == thrift.STOP {\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tswitch fieldId {\r\n\t\tcase 1:\r\n\t\t\tif fieldTypeId == thrift.STRING {\r\n\t\t\t\tif err := p.ReadField1(ctx, iprot); err != nil {\r\n\t\t\t\t\treturn err\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif err := iprot.Skip(ctx, fieldTypeId); err != nil {\r\n\t\t\t\t\treturn err\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\tif err := iprot.Skip(ctx, fieldTypeId); err != nil {\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t\t}\r\n\t\tif err := iprot.ReadFieldEnd(ctx); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t}\r\n\tif err := iprot.ReadStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read struct end error: \", p), err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *Depunion) ReadField1(ctx context.Context, iprot thrift.TProtocol) error {\r\n\tif v, err := iprot.ReadString(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"error reading field 1: \", err)\r\n\t} else {\r\n\t\tp.One = &v\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *Depunion) Write(ctx context.Context, oprot thrift.TProtocol) error {\r\n\tif c := p.CountSetFieldsDepunion(); c != 1 {\r\n\t\treturn fmt.Errorf(\"%T write union: exactly one field must be set (%d set)\", p, c)\r\n\t}\r\n\tif err := oprot.WriteStructBegin(ctx, \"depunion\"); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T write struct begin error: \", p), err)\r\n\t}\r\n\tif p != nil {\r\n\t\tif err := p.writeField1(ctx, oprot); err != nil { return err }\r\n\t}\r\n\tif err := oprot.WriteFieldStop(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write field stop error: \", err)\r\n\t}\r\n\tif err := oprot.WriteStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write struct stop error: \", err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *Depunion) writeField1(ctx context.Context, oprot thrift.TProtocol) (err error) {\r\n\tif p.IsSetOne() {\r\n\t\tif err := oprot.WriteFieldBegin(ctx, \"one\", thrift.STRING, 1); err != nil {\r\n\t\t\treturn thrift.PrependError(fmt.Sprintf(\"%T write field begin error 1:one: \", p), err)\r\n\t\t}\r\n\t\tif err := oprot.WriteString(ctx, string(*p.One)); err != nil {\r\n\t\t\treturn thrift.PrependError(fmt.Sprintf(\"%T.one (1) field write error: \", p), err)\r\n\t\t}\r\n\t\tif err := oprot.WriteFieldEnd(ctx); err != nil {\r\n\t\t\treturn thrift.PrependError(fmt.Sprintf(\"%T write field end error 1:one: \", p), err)\r\n\t\t}\r\n\t}\r\n\treturn err\r\n}\r\n\r\nfunc (p *Depunion) Equals(other *Depunion) bool {\r\n\tif p == other {\r\n\t\treturn true\r\n\t} else if p == nil || other == nil {\r\n\t\treturn false\r\n\t}\r\n\tif p.One != other.One {\r\n\t\tif p.One == nil || other.One == nil {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (*p.One) != (*other.One) { return false }\r\n\t}\r\n\treturn true\r\n}\r\n\r\nfunc (p *Depunion) String() string {\r\n\tif p == nil {\r\n\t\treturn \"<nil>\"\r\n\t}\r\n\treturn fmt.Sprintf(\"Depunion(%+v)\", *p)\r\n}\r\n\r\nfunc (p *Depunion) LogValue() slog.Value {\r\n\tif p == nil {\r\n\t\treturn slog.AnyValue(nil)\r\n\t}\r\n\tv := thrift.SlogTStructWrapper{\r\n\t\tType: \"*deprecated.Depunion\",\r\n\t\tValue: p,\r\n\t}\r\n\treturn slog.AnyValue(v)\r\n}\r\n\r\nvar _ slog.LogValuer = (*Depunion)(nil)\r\n\r\nfunc (p *Depunion) Validate() error {\r\n\treturn nil\r\n}\r\n\r\n// Attributes:\r\n//  - One\r\n// \r\n// Deprecated: dep-8\r\ntype Depexcept struct {\r\n\t// Deprecated: dep-7\r\n\tOne string `thrift:\"one,1\" db:\"one\" json:\"one\"`\r\n}\r\n\r\n// Deprecated: dep-8\r\nfunc NewDepexcept() *Depexcept {\r\n\treturn &Depexcept{}\r\n}\r\n\r\n\r\n\r\n// Deprecated: dep-7\r\nfunc (p *Depexcept) GetOne() string {\r\n\treturn p.One\r\n}\r\n\r\nfunc (p *Depexcept) Read(ctx context.Context, iprot thrift.TProtocol) error {\r\n\tif _, err := iprot.ReadStructBegin(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read error: \", p), err)\r\n\t}\r\n\r\n\r\n\tfor {\r\n\t\t_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin(ctx)\r\n\t\tif err != nil {\r\n\t\t\treturn thrift.PrependError(fmt.Sprintf(\"%T field %d read error: \", p, fieldId), err)\r\n\t\t}\r\n\t\tif fieldTypeId == thrift.STOP {\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tswitch fieldId {\r\n\t\tcase 1:\r\n\t\t\tif fieldTypeId == thrift.STRING {\r\n\t\t\t\tif err := p.ReadField1(ctx, iprot); err != nil {\r\n\t\t\t\t\treturn err\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif err := iprot.Skip(ctx, fieldTypeId); err != nil {\r\n\t\t\t\t\treturn err\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\tif err := iprot.Skip(ctx, fieldTypeId); err != nil {\r\n\t\t\t\treturn err\r\n\t\t\t}\r\n\t\t}\r\n\t\tif err := iprot.ReadFieldEnd(ctx); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t}\r\n\tif err := iprot.ReadStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read struct end error: \", p), err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *Depexcept) ReadField1(ctx context.Context, iprot thrift.TProtocol) error {\r\n\tif v, err := iprot.ReadString(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"error reading field 1: \", err)\r\n\t} else {\r\n\t\tp.One = v\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *Depexcept) Write(ctx context.Context, oprot thrift.TProtocol) error {\r\n\tif err := oprot.WriteStructBegin(ctx, \"depexcept\"); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T write struct begin error: \", p), err)\r\n\t}\r\n\tif p != nil {\r\n\t\tif err := p.writeField1(ctx, oprot); err != nil { return err }\r\n\t}\r\n\tif err := oprot.WriteFieldStop(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write field stop error: \", err)\r\n\t}\r\n\tif err := oprot.WriteStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write struct stop error: \", err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *Depexcept) writeField1(ctx context.Context, oprot thrift.TProtocol) (err error) {\r\n\tif err := oprot.WriteFieldBegin(ctx, \"one\", thrift.STRING, 1); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T write field begin error 1:one: \", p), err)\r\n\t}\r\n\tif err := oprot.WriteString(ctx, string(p.One)); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T.one (1) field write error: \", p), err)\r\n\t}\r\n\tif err := oprot.WriteFieldEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T write field end error 1:one: \", p), err)\r\n\t}\r\n\treturn err\r\n}\r\n\r\nfunc (p *Depexcept) Equals(other *Depexcept) bool {\r\n\tif p == other {\r\n\t\treturn true\r\n\t} else if p == nil || other == nil {\r\n\t\treturn false\r\n\t}\r\n\tif p.One != other.One { return false }\r\n\treturn true\r\n}\r\n\r\nfunc (p *Depexcept) String() string {\r\n\tif p == nil {\r\n\t\treturn \"<nil>\"\r\n\t}\r\n\treturn fmt.Sprintf(\"Depexcept(%+v)\", *p)\r\n}\r\n\r\nfunc (p *Depexcept) Error() string {\r\n\treturn p.String()\r\n}\r\n\r\nfunc (Depexcept) TExceptionType() thrift.TExceptionType {\r\n\treturn thrift.TExceptionTypeCompiled\r\n}\r\n\r\nvar _ thrift.TException = (*Depexcept)(nil)\r\n\r\nfunc (p *Depexcept) LogValue() slog.Value {\r\n\tif p == nil {\r\n\t\treturn slog.AnyValue(nil)\r\n\t}\r\n\tv := thrift.SlogTStructWrapper{\r\n\t\tType: \"*deprecated.Depexcept\",\r\n\t\tValue: p,\r\n\t}\r\n\treturn slog.AnyValue(v)\r\n}\r\n\r\nvar _ slog.LogValuer = (*Depexcept)(nil)\r\n\r\nfunc (p *Depexcept) Validate() error {\r\n\treturn nil\r\n}\r\n\r\n// Deprecated: dep-10\r\ntype Inner interface {\r\n\t// Deprecated: dep-9\r\n\tBlibb(ctx context.Context) (_err error)\r\n}\r\n\r\n// Deprecated: dep-10\r\ntype InnerClient struct {\r\n\tc thrift.TClient\r\n\tmeta thrift.ResponseMeta\r\n}\r\n\r\n// Deprecated: dep-10\r\nfunc NewInnerClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *InnerClient {\r\n\treturn &InnerClient{\r\n\t\tc: thrift.NewTStandardClient(f.GetProtocol(t), f.GetProtocol(t)),\r\n\t}\r\n}\r\n\r\n// Deprecated: dep-10\r\nfunc NewInnerClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *InnerClient {\r\n\treturn &InnerClient{\r\n\t\tc: thrift.NewTStandardClient(iprot, oprot),\r\n\t}\r\n}\r\n\r\n// Deprecated: dep-10\r\nfunc NewInnerClient(c thrift.TClient) *InnerClient {\r\n\treturn &InnerClient{\r\n\t\tc: c,\r\n\t}\r\n}\r\n\r\nfunc (p *InnerClient) Client_() thrift.TClient {\r\n\treturn p.c\r\n}\r\n\r\nfunc (p *InnerClient) LastResponseMeta_() thrift.ResponseMeta {\r\n\treturn p.meta\r\n}\r\n\r\nfunc (p *InnerClient) SetLastResponseMeta_(meta thrift.ResponseMeta) {\r\n\tp.meta = meta\r\n}\r\n\r\n// Deprecated: dep-9\r\nfunc (p *InnerClient) Blibb(ctx context.Context) (_err error) {\r\n\tvar _args0 InnerBlibbArgs\r\n\tvar _result2 InnerBlibbResult\r\n\tvar _meta1 thrift.ResponseMeta\r\n\t_meta1, _err = p.Client_().Call(ctx, \"Blibb\", &_args0, &_result2)\r\n\tp.SetLastResponseMeta_(_meta1)\r\n\tif _err != nil {\r\n\t\treturn\r\n\t}\r\n\treturn nil\r\n}\r\n\r\n// Deprecated: dep-10\r\ntype InnerProcessor struct {\r\n\tprocessorMap map[string]thrift.TProcessorFunction\r\n\thandler Inner\r\n}\r\n\r\nfunc (p *InnerProcessor) AddToProcessorMap(key string, processor thrift.TProcessorFunction) {\r\n\tp.processorMap[key] = processor\r\n}\r\n\r\nfunc (p *InnerProcessor) GetProcessorFunction(key string) (processor thrift.TProcessorFunction, ok bool) {\r\n\tprocessor, ok = p.processorMap[key]\r\n\treturn processor, ok\r\n}\r\n\r\nfunc (p *InnerProcessor) ProcessorMap() map[string]thrift.TProcessorFunction {\r\n\treturn p.processorMap\r\n}\r\n\r\n// Deprecated: dep-10\r\nfunc NewInnerProcessor(handler Inner) *InnerProcessor {\r\n\r\n\tself3 := &InnerProcessor{handler:handler, processorMap:make(map[string]thrift.TProcessorFunction)}\r\n\tself3.processorMap[\"Blibb\"] = &innerProcessorBlibb{handler:handler}\r\n\treturn self3\r\n}\r\n\r\nfunc (p *InnerProcessor) Process(ctx context.Context, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {\r\n\tname, _, seqId, err2 := iprot.ReadMessageBegin(ctx)\r\n\tif err2 != nil { return false, thrift.WrapTException(err2) }\r\n\tif processor, ok := p.GetProcessorFunction(name); ok {\r\n\t\treturn processor.Process(ctx, seqId, iprot, oprot)\r\n\t}\r\n\tiprot.Skip(ctx, thrift.STRUCT)\r\n\tiprot.ReadMessageEnd(ctx)\r\n\tx4 := thrift.NewTApplicationException(thrift.UNKNOWN_METHOD, \"Unknown function \" + name)\r\n\toprot.WriteMessageBegin(ctx, name, thrift.EXCEPTION, seqId)\r\n\tx4.Write(ctx, oprot)\r\n\toprot.WriteMessageEnd(ctx)\r\n\toprot.Flush(ctx)\r\n\treturn false, x4\r\n}\r\n\r\ntype innerProcessorBlibb struct {\r\n\thandler Inner\r\n}\r\n\r\nfunc (p *innerProcessorBlibb) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {\r\n\tvar _write_err5 error\r\n\targs := InnerBlibbArgs{}\r\n\tif err2 := args.Read(ctx, iprot); err2 != nil {\r\n\t\tiprot.ReadMessageEnd(ctx)\r\n\t\tx := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err2.Error())\r\n\t\toprot.WriteMessageBegin(ctx, \"Blibb\", thrift.EXCEPTION, seqId)\r\n\t\tx.Write(ctx, oprot)\r\n\t\toprot.WriteMessageEnd(ctx)\r\n\t\toprot.Flush(ctx)\r\n\t\treturn false, thrift.WrapTException(err2)\r\n\t}\r\n\tiprot.ReadMessageEnd(ctx)\r\n\r\n\ttickerCancel := func() {}\r\n\t// Start a goroutine to do server side connectivity check.\r\n\tif thrift.ServerConnectivityCheckInterval > 0 {\r\n\t\tvar cancel context.CancelCauseFunc\r\n\t\tctx, cancel = context.WithCancelCause(ctx)\r\n\t\tdefer cancel(nil)\r\n\t\tvar tickerCtx context.Context\r\n\t\ttickerCtx, tickerCancel = context.WithCancel(context.Background())\r\n\t\tdefer tickerCancel()\r\n\t\tgo func(ctx context.Context, cancel context.CancelCauseFunc) {\r\n\t\t\tticker := time.NewTicker(thrift.ServerConnectivityCheckInterval)\r\n\t\t\tdefer ticker.Stop()\r\n\t\t\tfor {\r\n\t\t\t\tselect {\r\n\t\t\t\tcase <-ctx.Done():\r\n\t\t\t\t\treturn\r\n\t\t\t\tcase <-ticker.C:\r\n\t\t\t\t\tif !iprot.Transport().IsOpen() {\r\n\t\t\t\t\t\tcancel(thrift.ErrAbandonRequest)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}(tickerCtx, cancel)\r\n\t}\r\n\r\n\tresult := InnerBlibbResult{}\r\n\tif err2 := p.handler.Blibb(ctx); err2 != nil {\r\n\t\ttickerCancel()\r\n\t\terr = thrift.WrapTException(err2)\r\n\t\tif errors.Is(err2, thrift.ErrAbandonRequest) {\r\n\t\t\treturn false, thrift.WrapTException(err2)\r\n\t\t}\r\n\t\tif errors.Is(err2, context.Canceled) {\r\n\t\t\tif err := context.Cause(ctx); errors.Is(err, thrift.ErrAbandonRequest) {\r\n\t\t\t\treturn false, thrift.WrapTException(err)\r\n\t\t\t}\r\n\t\t}\r\n\t\t_exc6 := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, \"Internal error processing Blibb: \" + err2.Error())\r\n\t\tif err2 := oprot.WriteMessageBegin(ctx, \"Blibb\", thrift.EXCEPTION, seqId); err2 != nil {\r\n\t\t\t_write_err5 = thrift.WrapTException(err2)\r\n\t\t}\r\n\t\tif err2 := _exc6.Write(ctx, oprot); _write_err5 == nil && err2 != nil {\r\n\t\t\t_write_err5 = thrift.WrapTException(err2)\r\n\t\t}\r\n\t\tif err2 := oprot.WriteMessageEnd(ctx); _write_err5 == nil && err2 != nil {\r\n\t\t\t_write_err5 = thrift.WrapTException(err2)\r\n\t\t}\r\n\t\tif err2 := oprot.Flush(ctx); _write_err5 == nil && err2 != nil {\r\n\t\t\t_write_err5 = thrift.WrapTException(err2)\r\n\t\t}\r\n\t\tif _write_err5 != nil {\r\n\t\t\treturn false, thrift.WrapTException(_write_err5)\r\n\t\t}\r\n\t\treturn true, err\r\n\t}\r\n\ttickerCancel()\r\n\tif err2 := oprot.WriteMessageBegin(ctx, \"Blibb\", thrift.REPLY, seqId); err2 != nil {\r\n\t\t_write_err5 = thrift.WrapTException(err2)\r\n\t}\r\n\tif err2 := result.Write(ctx, oprot); _write_err5 == nil && err2 != nil {\r\n\t\t_write_err5 = thrift.WrapTException(err2)\r\n\t}\r\n\tif err2 := oprot.WriteMessageEnd(ctx); _write_err5 == nil && err2 != nil {\r\n\t\t_write_err5 = thrift.WrapTException(err2)\r\n\t}\r\n\tif err2 := oprot.Flush(ctx); _write_err5 == nil && err2 != nil {\r\n\t\t_write_err5 = thrift.WrapTException(err2)\r\n\t}\r\n\tif _write_err5 != nil {\r\n\t\treturn false, thrift.WrapTException(_write_err5)\r\n\t}\r\n\treturn true, err\r\n}\r\n\r\n\r\n// HELPER FUNCTIONS AND STRUCTURES\r\n\r\ntype InnerBlibbArgs struct {\r\n}\r\n\r\nfunc NewInnerBlibbArgs() *InnerBlibbArgs {\r\n\treturn &InnerBlibbArgs{}\r\n}\r\n\r\nfunc (p *InnerBlibbArgs) Read(ctx context.Context, iprot thrift.TProtocol) error {\r\n\tif _, err := iprot.ReadStructBegin(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read error: \", p), err)\r\n\t}\r\n\r\n\r\n\tfor {\r\n\t\t_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin(ctx)\r\n\t\tif err != nil {\r\n\t\t\treturn thrift.PrependError(fmt.Sprintf(\"%T field %d read error: \", p, fieldId), err)\r\n\t\t}\r\n\t\tif fieldTypeId == thrift.STOP {\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tif err := iprot.Skip(ctx, fieldTypeId); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t\tif err := iprot.ReadFieldEnd(ctx); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t}\r\n\tif err := iprot.ReadStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read struct end error: \", p), err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *InnerBlibbArgs) Write(ctx context.Context, oprot thrift.TProtocol) error {\r\n\tif err := oprot.WriteStructBegin(ctx, \"Blibb_args\"); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T write struct begin error: \", p), err)\r\n\t}\r\n\tif p != nil {\r\n\t}\r\n\tif err := oprot.WriteFieldStop(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write field stop error: \", err)\r\n\t}\r\n\tif err := oprot.WriteStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write struct stop error: \", err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *InnerBlibbArgs) String() string {\r\n\tif p == nil {\r\n\t\treturn \"<nil>\"\r\n\t}\r\n\treturn fmt.Sprintf(\"InnerBlibbArgs(%+v)\", *p)\r\n}\r\n\r\nfunc (p *InnerBlibbArgs) LogValue() slog.Value {\r\n\tif p == nil {\r\n\t\treturn slog.AnyValue(nil)\r\n\t}\r\n\tv := thrift.SlogTStructWrapper{\r\n\t\tType: \"*deprecated.InnerBlibbArgs\",\r\n\t\tValue: p,\r\n\t}\r\n\treturn slog.AnyValue(v)\r\n}\r\n\r\nvar _ slog.LogValuer = (*InnerBlibbArgs)(nil)\r\n\r\ntype InnerBlibbResult struct {\r\n}\r\n\r\nfunc NewInnerBlibbResult() *InnerBlibbResult {\r\n\treturn &InnerBlibbResult{}\r\n}\r\n\r\nfunc (p *InnerBlibbResult) Read(ctx context.Context, iprot thrift.TProtocol) error {\r\n\tif _, err := iprot.ReadStructBegin(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read error: \", p), err)\r\n\t}\r\n\r\n\r\n\tfor {\r\n\t\t_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin(ctx)\r\n\t\tif err != nil {\r\n\t\t\treturn thrift.PrependError(fmt.Sprintf(\"%T field %d read error: \", p, fieldId), err)\r\n\t\t}\r\n\t\tif fieldTypeId == thrift.STOP {\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tif err := iprot.Skip(ctx, fieldTypeId); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t\tif err := iprot.ReadFieldEnd(ctx); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t}\r\n\tif err := iprot.ReadStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read struct end error: \", p), err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *InnerBlibbResult) Write(ctx context.Context, oprot thrift.TProtocol) error {\r\n\tif err := oprot.WriteStructBegin(ctx, \"Blibb_result\"); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T write struct begin error: \", p), err)\r\n\t}\r\n\tif p != nil {\r\n\t}\r\n\tif err := oprot.WriteFieldStop(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write field stop error: \", err)\r\n\t}\r\n\tif err := oprot.WriteStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write struct stop error: \", err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *InnerBlibbResult) String() string {\r\n\tif p == nil {\r\n\t\treturn \"<nil>\"\r\n\t}\r\n\treturn fmt.Sprintf(\"InnerBlibbResult(%+v)\", *p)\r\n}\r\n\r\nfunc (p *InnerBlibbResult) LogValue() slog.Value {\r\n\tif p == nil {\r\n\t\treturn slog.AnyValue(nil)\r\n\t}\r\n\tv := thrift.SlogTStructWrapper{\r\n\t\tType: \"*deprecated.InnerBlibbResult\",\r\n\t\tValue: p,\r\n\t}\r\n\treturn slog.AnyValue(v)\r\n}\r\n\r\nvar _ slog.LogValuer = (*InnerBlibbResult)(nil)\r\n\r\n\r\n// Deprecated: dep-12\r\ntype Outer interface {\r\n\tInner\r\n\r\n\t// Deprecated: dep-11\r\n\tPlopp(ctx context.Context) (_err error)\r\n}\r\n\r\n// Deprecated: dep-12\r\ntype OuterClient struct {\r\n\t*InnerClient\r\n}\r\n\r\n// Deprecated: dep-12\r\nfunc NewOuterClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *OuterClient {\r\n\treturn &OuterClient{InnerClient: NewInnerClientFactory(t, f)}}\r\n\r\n// Deprecated: dep-12\r\nfunc NewOuterClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *OuterClient {\r\n\treturn &OuterClient{InnerClient: NewInnerClientProtocol(t, iprot, oprot)}\r\n}\r\n\r\n// Deprecated: dep-12\r\nfunc NewOuterClient(c thrift.TClient) *OuterClient {\r\n\treturn &OuterClient{\r\n\t\tInnerClient: NewInnerClient(c),\r\n\t}\r\n}\r\n\r\n// Deprecated: dep-11\r\nfunc (p *OuterClient) Plopp(ctx context.Context) (_err error) {\r\n\tvar _args7 OuterPloppArgs\r\n\tvar _result9 OuterPloppResult\r\n\tvar _meta8 thrift.ResponseMeta\r\n\t_meta8, _err = p.Client_().Call(ctx, \"Plopp\", &_args7, &_result9)\r\n\tp.SetLastResponseMeta_(_meta8)\r\n\tif _err != nil {\r\n\t\treturn\r\n\t}\r\n\treturn nil\r\n}\r\n\r\ntype OuterProcessor struct {\r\n\t*InnerProcessor\r\n}\r\n\r\nfunc NewOuterProcessor(handler Outer) *OuterProcessor {\r\n\tself10 := &OuterProcessor{NewInnerProcessor(handler)}\r\n\tself10.AddToProcessorMap(\"Plopp\", &outerProcessorPlopp{handler:handler})\r\n\treturn self10\r\n}\r\n\r\ntype outerProcessorPlopp struct {\r\n\thandler Outer\r\n}\r\n\r\nfunc (p *outerProcessorPlopp) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {\r\n\tvar _write_err11 error\r\n\targs := OuterPloppArgs{}\r\n\tif err2 := args.Read(ctx, iprot); err2 != nil {\r\n\t\tiprot.ReadMessageEnd(ctx)\r\n\t\tx := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err2.Error())\r\n\t\toprot.WriteMessageBegin(ctx, \"Plopp\", thrift.EXCEPTION, seqId)\r\n\t\tx.Write(ctx, oprot)\r\n\t\toprot.WriteMessageEnd(ctx)\r\n\t\toprot.Flush(ctx)\r\n\t\treturn false, thrift.WrapTException(err2)\r\n\t}\r\n\tiprot.ReadMessageEnd(ctx)\r\n\r\n\ttickerCancel := func() {}\r\n\t// Start a goroutine to do server side connectivity check.\r\n\tif thrift.ServerConnectivityCheckInterval > 0 {\r\n\t\tvar cancel context.CancelCauseFunc\r\n\t\tctx, cancel = context.WithCancelCause(ctx)\r\n\t\tdefer cancel(nil)\r\n\t\tvar tickerCtx context.Context\r\n\t\ttickerCtx, tickerCancel = context.WithCancel(context.Background())\r\n\t\tdefer tickerCancel()\r\n\t\tgo func(ctx context.Context, cancel context.CancelCauseFunc) {\r\n\t\t\tticker := time.NewTicker(thrift.ServerConnectivityCheckInterval)\r\n\t\t\tdefer ticker.Stop()\r\n\t\t\tfor {\r\n\t\t\t\tselect {\r\n\t\t\t\tcase <-ctx.Done():\r\n\t\t\t\t\treturn\r\n\t\t\t\tcase <-ticker.C:\r\n\t\t\t\t\tif !iprot.Transport().IsOpen() {\r\n\t\t\t\t\t\tcancel(thrift.ErrAbandonRequest)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}(tickerCtx, cancel)\r\n\t}\r\n\r\n\tresult := OuterPloppResult{}\r\n\tif err2 := p.handler.Plopp(ctx); err2 != nil {\r\n\t\ttickerCancel()\r\n\t\terr = thrift.WrapTException(err2)\r\n\t\tif errors.Is(err2, thrift.ErrAbandonRequest) {\r\n\t\t\treturn false, thrift.WrapTException(err2)\r\n\t\t}\r\n\t\tif errors.Is(err2, context.Canceled) {\r\n\t\t\tif err := context.Cause(ctx); errors.Is(err, thrift.ErrAbandonRequest) {\r\n\t\t\t\treturn false, thrift.WrapTException(err)\r\n\t\t\t}\r\n\t\t}\r\n\t\t_exc12 := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, \"Internal error processing Plopp: \" + err2.Error())\r\n\t\tif err2 := oprot.WriteMessageBegin(ctx, \"Plopp\", thrift.EXCEPTION, seqId); err2 != nil {\r\n\t\t\t_write_err11 = thrift.WrapTException(err2)\r\n\t\t}\r\n\t\tif err2 := _exc12.Write(ctx, oprot); _write_err11 == nil && err2 != nil {\r\n\t\t\t_write_err11 = thrift.WrapTException(err2)\r\n\t\t}\r\n\t\tif err2 := oprot.WriteMessageEnd(ctx); _write_err11 == nil && err2 != nil {\r\n\t\t\t_write_err11 = thrift.WrapTException(err2)\r\n\t\t}\r\n\t\tif err2 := oprot.Flush(ctx); _write_err11 == nil && err2 != nil {\r\n\t\t\t_write_err11 = thrift.WrapTException(err2)\r\n\t\t}\r\n\t\tif _write_err11 != nil {\r\n\t\t\treturn false, thrift.WrapTException(_write_err11)\r\n\t\t}\r\n\t\treturn true, err\r\n\t}\r\n\ttickerCancel()\r\n\tif err2 := oprot.WriteMessageBegin(ctx, \"Plopp\", thrift.REPLY, seqId); err2 != nil {\r\n\t\t_write_err11 = thrift.WrapTException(err2)\r\n\t}\r\n\tif err2 := result.Write(ctx, oprot); _write_err11 == nil && err2 != nil {\r\n\t\t_write_err11 = thrift.WrapTException(err2)\r\n\t}\r\n\tif err2 := oprot.WriteMessageEnd(ctx); _write_err11 == nil && err2 != nil {\r\n\t\t_write_err11 = thrift.WrapTException(err2)\r\n\t}\r\n\tif err2 := oprot.Flush(ctx); _write_err11 == nil && err2 != nil {\r\n\t\t_write_err11 = thrift.WrapTException(err2)\r\n\t}\r\n\tif _write_err11 != nil {\r\n\t\treturn false, thrift.WrapTException(_write_err11)\r\n\t}\r\n\treturn true, err\r\n}\r\n\r\n\r\n// HELPER FUNCTIONS AND STRUCTURES\r\n\r\ntype OuterPloppArgs struct {\r\n}\r\n\r\nfunc NewOuterPloppArgs() *OuterPloppArgs {\r\n\treturn &OuterPloppArgs{}\r\n}\r\n\r\nfunc (p *OuterPloppArgs) Read(ctx context.Context, iprot thrift.TProtocol) error {\r\n\tif _, err := iprot.ReadStructBegin(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read error: \", p), err)\r\n\t}\r\n\r\n\r\n\tfor {\r\n\t\t_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin(ctx)\r\n\t\tif err != nil {\r\n\t\t\treturn thrift.PrependError(fmt.Sprintf(\"%T field %d read error: \", p, fieldId), err)\r\n\t\t}\r\n\t\tif fieldTypeId == thrift.STOP {\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tif err := iprot.Skip(ctx, fieldTypeId); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t\tif err := iprot.ReadFieldEnd(ctx); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t}\r\n\tif err := iprot.ReadStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read struct end error: \", p), err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *OuterPloppArgs) Write(ctx context.Context, oprot thrift.TProtocol) error {\r\n\tif err := oprot.WriteStructBegin(ctx, \"Plopp_args\"); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T write struct begin error: \", p), err)\r\n\t}\r\n\tif p != nil {\r\n\t}\r\n\tif err := oprot.WriteFieldStop(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write field stop error: \", err)\r\n\t}\r\n\tif err := oprot.WriteStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write struct stop error: \", err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *OuterPloppArgs) String() string {\r\n\tif p == nil {\r\n\t\treturn \"<nil>\"\r\n\t}\r\n\treturn fmt.Sprintf(\"OuterPloppArgs(%+v)\", *p)\r\n}\r\n\r\nfunc (p *OuterPloppArgs) LogValue() slog.Value {\r\n\tif p == nil {\r\n\t\treturn slog.AnyValue(nil)\r\n\t}\r\n\tv := thrift.SlogTStructWrapper{\r\n\t\tType: \"*deprecated.OuterPloppArgs\",\r\n\t\tValue: p,\r\n\t}\r\n\treturn slog.AnyValue(v)\r\n}\r\n\r\nvar _ slog.LogValuer = (*OuterPloppArgs)(nil)\r\n\r\ntype OuterPloppResult struct {\r\n}\r\n\r\nfunc NewOuterPloppResult() *OuterPloppResult {\r\n\treturn &OuterPloppResult{}\r\n}\r\n\r\nfunc (p *OuterPloppResult) Read(ctx context.Context, iprot thrift.TProtocol) error {\r\n\tif _, err := iprot.ReadStructBegin(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read error: \", p), err)\r\n\t}\r\n\r\n\r\n\tfor {\r\n\t\t_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin(ctx)\r\n\t\tif err != nil {\r\n\t\t\treturn thrift.PrependError(fmt.Sprintf(\"%T field %d read error: \", p, fieldId), err)\r\n\t\t}\r\n\t\tif fieldTypeId == thrift.STOP {\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tif err := iprot.Skip(ctx, fieldTypeId); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t\tif err := iprot.ReadFieldEnd(ctx); err != nil {\r\n\t\t\treturn err\r\n\t\t}\r\n\t}\r\n\tif err := iprot.ReadStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T read struct end error: \", p), err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *OuterPloppResult) Write(ctx context.Context, oprot thrift.TProtocol) error {\r\n\tif err := oprot.WriteStructBegin(ctx, \"Plopp_result\"); err != nil {\r\n\t\treturn thrift.PrependError(fmt.Sprintf(\"%T write struct begin error: \", p), err)\r\n\t}\r\n\tif p != nil {\r\n\t}\r\n\tif err := oprot.WriteFieldStop(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write field stop error: \", err)\r\n\t}\r\n\tif err := oprot.WriteStructEnd(ctx); err != nil {\r\n\t\treturn thrift.PrependError(\"write struct stop error: \", err)\r\n\t}\r\n\treturn nil\r\n}\r\n\r\nfunc (p *OuterPloppResult) String() string {\r\n\tif p == nil {\r\n\t\treturn \"<nil>\"\r\n\t}\r\n\treturn fmt.Sprintf(\"OuterPloppResult(%+v)\", *p)\r\n}\r\n\r\nfunc (p *OuterPloppResult) LogValue() slog.Value {\r\n\tif p == nil {\r\n\t\treturn slog.AnyValue(nil)\r\n\t}\r\n\tv := thrift.SlogTStructWrapper{\r\n\t\tType: \"*deprecated.OuterPloppResult\",\r\n\t\tValue: p,\r\n\t}\r\n\treturn slog.AnyValue(v)\r\n}\r\n\r\nvar _ slog.LogValuer = (*OuterPloppResult)(nil)\r\n\r\n```\r\n</details>","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2116452758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2149730100","html_url":"https://github.com/apache/thrift/pull/2980#issuecomment-2149730100","issue_url":"https://api.github.com/repos/apache/thrift/issues/2980","id":2149730100,"node_id":"IC_kwDOAAS9U86AIkc0","user":{"login":"alkis","id":265981,"node_id":"MDQ6VXNlcjI2NTk4MQ==","avatar_url":"https://avatars.githubusercontent.com/u/265981?v=4","gravatar_id":"","url":"https://api.github.com/users/alkis","html_url":"https://github.com/alkis","followers_url":"https://api.github.com/users/alkis/followers","following_url":"https://api.github.com/users/alkis/following{/other_user}","gists_url":"https://api.github.com/users/alkis/gists{/gist_id}","starred_url":"https://api.github.com/users/alkis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alkis/subscriptions","organizations_url":"https://api.github.com/users/alkis/orgs","repos_url":"https://api.github.com/users/alkis/repos","events_url":"https://api.github.com/users/alkis/events{/privacy}","received_events_url":"https://api.github.com/users/alkis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-05T12:34:53Z","updated_at":"2024-06-05T12:34:53Z","author_association":"CONTRIBUTOR","body":"What are the next steps to get this merged?","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2149730100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2150351430","html_url":"https://github.com/apache/thrift/pull/2980#issuecomment-2150351430","issue_url":"https://api.github.com/repos/apache/thrift/issues/2980","id":2150351430,"node_id":"IC_kwDOAAS9U86AK8JG","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-05T15:25:00Z","updated_at":"2024-06-05T15:25:00Z","author_association":"MEMBER","body":"I was giving others a chance to review and provide feedback. But I guess no one has any objections.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2150351430/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2156760238","html_url":"https://github.com/apache/thrift/pull/2958#issuecomment-2156760238","issue_url":"https://api.github.com/repos/apache/thrift/issues/2958","id":2156760238,"node_id":"IC_kwDOAAS9U86AjYyu","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-09T19:50:14Z","updated_at":"2024-06-09T19:50:14Z","author_association":"CONTRIBUTOR","body":"**NB**: This PR also includes #2968 (THRIFT-5776) since I had to fix those errors before I could make progress on the makefile related unit tests. I have rebased on that branch","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2156760238/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2156765808","html_url":"https://github.com/apache/thrift/pull/2958#issuecomment-2156765808","issue_url":"https://api.github.com/repos/apache/thrift/issues/2958","id":2156765808,"node_id":"IC_kwDOAAS9U86AjaJw","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-09T20:04:06Z","updated_at":"2024-06-09T20:04:06Z","author_association":"CONTRIBUTOR","body":"I see there are MSVC build errors related to this, I will have to look into this","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2156765808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2157296597","html_url":"https://github.com/apache/thrift/pull/2958#issuecomment-2157296597","issue_url":"https://api.github.com/repos/apache/thrift/issues/2958","id":2157296597,"node_id":"IC_kwDOAAS9U86AlbvV","user":{"login":"CJCombrink","id":1647870,"node_id":"MDQ6VXNlcjE2NDc4NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1647870?v=4","gravatar_id":"","url":"https://api.github.com/users/CJCombrink","html_url":"https://github.com/CJCombrink","followers_url":"https://api.github.com/users/CJCombrink/followers","following_url":"https://api.github.com/users/CJCombrink/following{/other_user}","gists_url":"https://api.github.com/users/CJCombrink/gists{/gist_id}","starred_url":"https://api.github.com/users/CJCombrink/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CJCombrink/subscriptions","organizations_url":"https://api.github.com/users/CJCombrink/orgs","repos_url":"https://api.github.com/users/CJCombrink/repos","events_url":"https://api.github.com/users/CJCombrink/events{/privacy}","received_events_url":"https://api.github.com/users/CJCombrink/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-10T05:26:13Z","updated_at":"2024-06-10T05:26:13Z","author_association":"CONTRIBUTOR","body":"@Jens-G I see there are some python tests failing in the MSVC build, would my changes be the cause (I can't think that it would be but I have been wrong in the past)","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2157296597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2166411048","html_url":"https://github.com/apache/thrift/pull/2984#issuecomment-2166411048","issue_url":"https://api.github.com/repos/apache/thrift/issues/2984","id":2166411048,"node_id":"IC_kwDOAAS9U86BIM8o","user":{"login":"fishy","id":78183,"node_id":"MDQ6VXNlcjc4MTgz","avatar_url":"https://avatars.githubusercontent.com/u/78183?v=4","gravatar_id":"","url":"https://api.github.com/users/fishy","html_url":"https://github.com/fishy","followers_url":"https://api.github.com/users/fishy/followers","following_url":"https://api.github.com/users/fishy/following{/other_user}","gists_url":"https://api.github.com/users/fishy/gists{/gist_id}","starred_url":"https://api.github.com/users/fishy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fishy/subscriptions","organizations_url":"https://api.github.com/users/fishy/orgs","repos_url":"https://api.github.com/users/fishy/repos","events_url":"https://api.github.com/users/fishy/events{/privacy}","received_events_url":"https://api.github.com/users/fishy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-13T17:35:56Z","updated_at":"2024-06-13T17:35:56Z","author_association":"MEMBER","body":"Did some internal test, this version certainly improved efficiency from the previous version","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2166411048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2176883055","html_url":"https://github.com/apache/thrift/pull/2929#issuecomment-2176883055","issue_url":"https://api.github.com/repos/apache/thrift/issues/2929","id":2176883055,"node_id":"IC_kwDOAAS9U86BwJlv","user":{"login":"Jens-G","id":5834733,"node_id":"MDQ6VXNlcjU4MzQ3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5834733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jens-G","html_url":"https://github.com/Jens-G","followers_url":"https://api.github.com/users/Jens-G/followers","following_url":"https://api.github.com/users/Jens-G/following{/other_user}","gists_url":"https://api.github.com/users/Jens-G/gists{/gist_id}","starred_url":"https://api.github.com/users/Jens-G/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jens-G/subscriptions","organizations_url":"https://api.github.com/users/Jens-G/orgs","repos_url":"https://api.github.com/users/Jens-G/repos","events_url":"https://api.github.com/users/Jens-G/events{/privacy}","received_events_url":"https://api.github.com/users/Jens-G/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-18T20:10:51Z","updated_at":"2024-06-18T20:11:28Z","author_association":"MEMBER","body":"@arkuhn According to ASF rules you cannot simply take other peoples code and contribute it., The original author (Konstantin Pozdniakov) can contribute himself.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2176883055/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2181635248","html_url":"https://github.com/apache/thrift/pull/2929#issuecomment-2181635248","issue_url":"https://api.github.com/repos/apache/thrift/issues/2929","id":2181635248,"node_id":"IC_kwDOAAS9U86CCRyw","user":{"login":"arkuhn","id":9009111,"node_id":"MDQ6VXNlcjkwMDkxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/9009111?v=4","gravatar_id":"","url":"https://api.github.com/users/arkuhn","html_url":"https://github.com/arkuhn","followers_url":"https://api.github.com/users/arkuhn/followers","following_url":"https://api.github.com/users/arkuhn/following{/other_user}","gists_url":"https://api.github.com/users/arkuhn/gists{/gist_id}","starred_url":"https://api.github.com/users/arkuhn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arkuhn/subscriptions","organizations_url":"https://api.github.com/users/arkuhn/orgs","repos_url":"https://api.github.com/users/arkuhn/repos","events_url":"https://api.github.com/users/arkuhn/events{/privacy}","received_events_url":"https://api.github.com/users/arkuhn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-20T22:06:34Z","updated_at":"2024-06-22T12:52:55Z","author_association":"CONTRIBUTOR","body":"> @arkuhn According to ASF rules you cannot simply take other peoples code and contribute it., The original author (Konstantin Pozdniakov) can contribute himself.\r\n\r\nI see @Jens-G. Does this mean we can not add type hints for thrift generated python libs until the original author returns? The original author hasn't commented on the original PR in 2 years. \r\n\r\nSimilarly, if he does return can he include the changes I've made (mostly testing changes, but also functional changes) in his branch or is that prohibited too?\r\n\r\nI'm happy to accommodate whatever steps are required to get the functionality added.","reactions":{"url":"https://api.github.com/repos/apache/thrift/issues/comments/2181635248/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]