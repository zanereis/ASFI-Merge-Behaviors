[{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152475851","html_url":"https://github.com/apache/accumulo/pull/2765#issuecomment-1152475851","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2765","id":1152475851,"node_id":"IC_kwDOACaFSM5EsWLL","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T15:21:23Z","updated_at":"2022-06-10T15:21:23Z","author_association":"CONTRIBUTOR","body":"> there is nothing that says what the two numbers in the single columns mean.\r\n\r\nThe tooltip hover should say what the parenthesis represent.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152475851/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152477682","html_url":"https://github.com/apache/accumulo/pull/2765#issuecomment-1152477682","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2765","id":1152477682,"node_id":"IC_kwDOACaFSM5EsWny","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T15:23:13Z","updated_at":"2022-06-10T15:23:13Z","author_association":"CONTRIBUTOR","body":"> > Maybe we could put the scan and compaction numbers in a separate table?\r\n> \r\n> That seems like it could be a good option. Do you think we should do that?\r\n\r\nI am not sure. I personally, thought the 2 numbers in one column were fine.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152477682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152488965","html_url":"https://github.com/apache/accumulo/pull/2765#issuecomment-1152488965","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2765","id":1152488965,"node_id":"IC_kwDOACaFSM5EsZYF","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T15:34:24Z","updated_at":"2022-06-10T17:11:48Z","author_association":"MEMBER","body":"> > there is nothing that says what the two numbers in the single columns mean.\r\n> \r\n> The tooltip hover should say what the parenthesis represent.\r\n\r\nWhoops, I forgot about those. I'll go ahead and put it back to how it was since there is a description for the parenthesis.\r\n\r\nEdit: I made these changes in [83903b9](https://github.com/apache/accumulo/pull/2765/commits/83903b9b12e459e81106b1f3f0174f03385fb394), @milleruntime ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152488965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152500801","html_url":"https://github.com/apache/accumulo/pull/2766#issuecomment-1152500801","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2766","id":1152500801,"node_id":"IC_kwDOACaFSM5EscRB","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T15:48:45Z","updated_at":"2022-06-10T15:48:45Z","author_association":"CONTRIBUTOR","body":"This looks good, I'd like to test it out on the CLI though.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152500801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152528752","html_url":"https://github.com/apache/accumulo/pull/2768#issuecomment-1152528752","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2768","id":1152528752,"node_id":"IC_kwDOACaFSM5EsjFw","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T16:19:39Z","updated_at":"2022-06-10T16:51:26Z","author_association":"CONTRIBUTOR","body":"This resolves the spaminess of the message, but there may be other places in the code where at a lower frequency (and maybe a single thread) could report this info.\r\n\r\nThere is a similar message that is printed on mutation that shows the before / after with this info - that is likely sufficient.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152528752/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152557931","html_url":"https://github.com/apache/accumulo/issues/2757#issuecomment-1152557931","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2757","id":1152557931,"node_id":"IC_kwDOACaFSM5EsqNr","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T16:56:37Z","updated_at":"2022-06-10T16:56:37Z","author_association":"CONTRIBUTOR","body":"https://github.com/dlmarion/accumulo/pull/28 was merged into #2665 to resolve this.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152557931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152642197","html_url":"https://github.com/apache/accumulo/pull/2751#issuecomment-1152642197","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2751","id":1152642197,"node_id":"IC_kwDOACaFSM5Es-yV","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T18:50:27Z","updated_at":"2022-06-10T18:55:16Z","author_association":"CONTRIBUTOR","body":"Is this duplicative of the DumpConfig command?\r\n\r\nhttps://github.com/apache/accumulo/blob/main/server/base/src/main/java/org/apache/accumulo/server/util/Admin.java#L461\r\n\r\nEDIT: I guess the difference is DumpConfig might require the system to be up, this only requires ZK to be up","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152642197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152651148","html_url":"https://github.com/apache/accumulo/pull/2751#issuecomment-1152651148","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2751","id":1152651148,"node_id":"IC_kwDOACaFSM5EtA-M","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T19:03:58Z","updated_at":"2022-06-10T19:03:58Z","author_association":"CONTRIBUTOR","body":"t;/dr; No.\r\n\r\nIt does not duplicate the dump functionality - there are some similarities, but serve different use cases.  The dump command writes out the entire contents of ZooKeeper to backup or restore the ZooKeeper contents. And while it does dump the property contents, they are base64 encoded and not human readable - they would need to be decoded and the decompressed.\r\n\r\nThis utility provides a human readable output of the properties, along with other info stored in ZooKeeper - its utility is geared towards helping if a system recovery is necessary.  Without a shell it allows examining the properties - as well as the id - name mappings.  Assembling this in a human readable form is a lot easier than dumping the ZooKeeper contents and then trying to piece the information back together,","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152651148/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152760227","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1152760227","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1152760227,"node_id":"IC_kwDOACaFSM5Etbmj","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T21:48:43Z","updated_at":"2022-06-10T21:48:43Z","author_association":"MEMBER","body":"I'm thinking it would be better to leverage the scan hints to control a ScanServer-aware dispatcher, rather than add a new API for the consistency level.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152760227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152820616","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1152820616","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1152820616,"node_id":"IC_kwDOACaFSM5EtqWI","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-11T00:52:07Z","updated_at":"2022-06-11T00:52:07Z","author_association":"CONTRIBUTOR","body":"> I'm thinking it would be better to leverage the scan hints to control a ScanServer-aware dispatcher, rather than add a new API for the consistency level.\r\n\r\nI think this goes against the purpose of scan execution hints.  They were created to modify execution behavior like priority, caching, and thread pool selection.  They were never intended to change anything about data returned, it says so in their javadocs.\r\n\r\nhttps://github.com/apache/accumulo/blob/d5f81877fcc794c8158f38b840d02331e3c563dc/core/src/main/java/org/apache/accumulo/core/client/ScannerBase.java#L342-L361\r\n\r\nSlightly related I created a new default scan server dispatcher.  Its currently a PR against Dave's branch: dlmarion/accumulo#29.  When running 100+ test scenarios this is what I realized I wanted.  I wish I had had it when running all of those test,  I could have a run a few more test that I wanted to but could not.  This new dispatcher is completely configuration driven (replacing the algorithm the previous default dispatcher had) and can be influenced by scan execution hints.  If we merge this PR, I could close the PR on Dave's fork and make a PR on the main Accumulo GH.\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152820616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152859259","html_url":"https://github.com/apache/accumulo/pull/2767#issuecomment-1152859259","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2767","id":1152859259,"node_id":"IC_kwDOACaFSM5Etzx7","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-11T05:19:03Z","updated_at":"2022-06-11T05:19:03Z","author_association":"MEMBER","body":"I saw GarbageCollectorIT fail with these changes. All other tests passed.\r\n\r\n```\r\norg.opentest4j.AssertionFailedError: expected: <true> but was: <false>\r\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)\r\n\tat org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:40)\r\n\tat org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:35)\r\n\tat org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:179)\r\n\tat org.apache.accumulo.test.functional.GarbageCollectorIT.gcTest(GarbageCollectorIT.java:143)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152859259/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152861564","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1152861564","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1152861564,"node_id":"IC_kwDOACaFSM5Et0V8","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-11T05:40:36Z","updated_at":"2022-06-11T05:40:36Z","author_association":"MEMBER","body":"> > I'm thinking it would be better to leverage the scan hints to control a ScanServer-aware dispatcher, rather than add a new API for the consistency level.\r\n> \r\n> I think this goes against the purpose of scan execution hints. They were created to modify execution behavior like priority, caching, and thread pool selection. They were never intended to change anything about data returned, it says so in their javadocs.\r\n\r\nThat's only because we didn't have even the possibility of returning data that wasn't immediately consistent before. Servers that returned data never previously had the option of returning data that was stale before. But, now we have a whole new server type that we can dispatch to. It's not the scan execution hints that are modifying the behavior... it's the configured dispatcher. And, the scan hints are still not affecting the data returned... it's the server that it was dispatched to that is doing that.\r\n\r\nA scan hint that explicitly says the eventual consistency is tolerable seems perfectly reasonable to me. It fits very naturally into the whole design of scan hints affecting dispatching. And the ability for a dispatcher to use ScanServers instead of TabletServers also seems perfectly natural. No fundamental design changes at all, and no special-purpose APIs needed to support the feature. The feature all works with the existing design elements wired together in a particular way.\r\n\r\nWe can easily update the javadoc to clarify that the scan hints affect how the scan is dispatched only, and not the data, but that the dispatcher could dispatch to a server that provides stale data (in the case of scan servers) if the scan hint specified to do so.\r\n\r\n> \r\n> https://github.com/apache/accumulo/blob/d5f81877fcc794c8158f38b840d02331e3c563dc/core/src/main/java/org/apache/accumulo/core/client/ScannerBase.java#L342-L361\r\n> \r\n> Slightly related I created a new default scan server dispatcher. Its currently a PR against Dave's branch: [dlmarion#29](https://github.com/dlmarion/accumulo/pull/29). When running 100+ test scenarios this is what I realized I wanted. I wish I had had it when running all of those test, I could have a run a few more test that I wanted to but could not. This new dispatcher is completely configuration driven (replacing the algorithm the previous default dispatcher had) and can be influenced by scan execution hints. If we merge this PR, I could close the PR on Dave's fork and make a PR on the main Accumulo GH.\r\n\r\nThe idea of creating a custom dispatcher that would work with the scan servers is exactly what I had in mind. However, I don't think it should be the default.\r\n\r\nI think in order to leverage scan servers, the user should:\r\n1. Run some ScanServers,\r\n2. Configure a `table.scan.dispatcher` to an implementation that is ScanServer-aware, and\r\n3. Configure individual scans with the scan execution hint recognized by that dispatcher to instruct it to dispatch to ScanServers\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1152861564/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1153019085","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1153019085","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1153019085,"node_id":"IC_kwDOACaFSM5EuazN","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-11T23:29:55Z","updated_at":"2022-06-11T23:29:55Z","author_association":"CONTRIBUTOR","body":"> It's not the scan execution hints that are modifying the behavior... it's the configured dispatcher. And, the scan hints are still not affecting the data returned... it's the server that it was dispatched to that is doing that.\r\n\r\nIf scan hints+config can change the behavior of a scanner from immediate to eventual I think this could lead to disaster.  Consider something like the Accumulo GC algorithm where its correctness relies on only using scanners with immediate consistency.  Consider the following situation.\r\n\r\n  * Person A writes a scanner that requires immediate consistency and sets a scan hint with intention of changing cache behavior to be opportunistic.\r\n  * Later Person B changes Accumulo configuration such that it causes the scan hints set by person A to now make the scanner coded by person A be eventually consistent.\r\n\r\nIf the code in question were the Accumulo GC, this could cause files to be deleted when they should not be.  Eventual vs immediate consistency is so important to some algorithms that it should always be explicitly declared per scanner and never be overridden by config that could impact all scanners in an indiscriminate manner without consideration of individual circumstances and per scanner intent.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1153019085/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1153850271","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1153850271","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1153850271,"node_id":"IC_kwDOACaFSM5Exluf","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T12:24:49Z","updated_at":"2022-06-13T12:24:49Z","author_association":"CONTRIBUTOR","body":"> They [scan hints] were never intended to change anything about data returned\r\n\r\nI equate scan hints with Oracle's [optimizer hints](https://docs.oracle.com/cd/B19306_01/server.102/b14211/hintsref.htm#i17496) which allow the user to alter the execution plan for the query. I agree that scan hints should affect how the scan gets executed and not affect the results being returned.\r\n\r\n> It's weird to ask for eventual consistency. Nobody wants eventual consistency. Eventual consistency is always tolerated, never desired.\r\n\r\nI think setting the consistency level is the means for achieving a specific goal. Some applications may require strict consistency for correctness and others may be more concerned with speed. I looked for how other products exposed consistency levels in their api. Specifically I was looking for products that used consistency level and not some other name to show that it's not uncommon. This is by no means a complete list, but just some examples of products that document their consistency levels and then provide a method for setting the consistency level in their api.\r\n\r\n1. [Microsoft Cosmos DB](https://docs.microsoft.com/en-us/azure/cosmos-db/sql/how-to-manage-consistency?tabs=portal%2Cdotnetv2%2Capi-async#configure-the-default-consistency-level) uses a method called `consistencyLevel`\r\n2. [Amazon DynamoDB](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadConsistency.html) has read operations that take a `ConsistentRead` parameter\r\n3. [HashiCorp Consul](https://www.consul.io/api-docs/features/consistency#overriding-a-request-s-consistency-mode) has a HTTP API query parameter for specifying the consistency level\r\n\r\nSince immediate/strict consistency is the default, maybe we just need a method to disable it for a specific query instead of specifying the value. For example, `enableEventualConsistency()`, `relaxReadGuarantees()`, `disableConsistentReads()`, `allowStaleReads()`, etc.\r\n\r\nI'm also thinking that there should be a table configuration that enables/disables this feature. Currently, an admin can spin up some ScanServers and an application developer can enable eventual consistency, but do we want that on the `metadata` table for example?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1153850271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1153896880","html_url":"https://github.com/apache/accumulo/pull/2766#issuecomment-1153896880","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2766","id":1153896880,"node_id":"IC_kwDOACaFSM5ExxGw","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T13:11:50Z","updated_at":"2022-06-13T13:11:50Z","author_association":"CONTRIBUTOR","body":"Is [ManagerApiIT.java](https://github.com/apache/accumulo/pull/2766/files#diff-e991cd60995ef485c49fb037643769630a72e5151aab9bc72ef150b049c41615) passing?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1153896880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1153956738","html_url":"https://github.com/apache/accumulo/pull/2766#issuecomment-1153956738","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2766","id":1153956738,"node_id":"IC_kwDOACaFSM5Ex_uC","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T14:02:47Z","updated_at":"2022-06-13T14:02:47Z","author_association":"CONTRIBUTOR","body":"ManagerApiIT passes for me locally.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1153956738/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154031019","html_url":"https://github.com/apache/accumulo/pull/2767#issuecomment-1154031019","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2767","id":1154031019,"node_id":"IC_kwDOACaFSM5EyR2r","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T14:58:04Z","updated_at":"2022-06-13T14:58:04Z","author_association":"CONTRIBUTOR","body":"The failure in `GarbageCollectorIT` is interesting: \r\n<pre>\r\n2022-06-13T10:16:50,702 [gc.SimpleGarbageCollector] ERROR: Scanner was closed\r\njava.lang.IllegalStateException: Scanner was closed\r\n        at com.google.common.base.Preconditions.checkState(Preconditions.java:502) ~[guava-31.1-jre.jar:?]\r\n        at org.apache.accumulo.core.clientImpl.ScannerIterator.readBatch(ScannerIterator.java:150) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.core.clientImpl.ScannerIterator.getNextBatch(ScannerIterator.java:169) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.core.clientImpl.ScannerIterator.hasNext(ScannerIterator.java:105) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.core.client.IsolatedScanner$RowBufferingIterator.readRow(IsolatedScanner.java:78) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.core.client.IsolatedScanner$RowBufferingIterator.next(IsolatedScanner.java:162) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.core.client.IsolatedScanner$RowBufferingIterator.next(IsolatedScanner.java:45) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.core.util.PeekingIterator.next(PeekingIterator.java:71) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.core.client.RowIterator$SingleRowIter._next(RowIterator.java:76) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.core.client.RowIterator$SingleRowIter.next(RowIterator.java:69) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.core.client.RowIterator$SingleRowIter.next(RowIterator.java:42) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.core.metadata.schema.TabletMetadata.convertRow(TabletMetadata.java:316) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.core.metadata.schema.TabletsMetadata$Builder.lambda$buildNonRoot$8(TabletsMetadata.java:216) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at com.google.common.collect.Iterators$6.transform(Iterators.java:829) ~[guava-31.1-jre.jar:?]\r\n        at com.google.common.collect.TransformedIterator.next(TransformedIterator.java:52) ~[guava-31.1-jre.jar:?]\r\n        at org.apache.accumulo.core.metadata.schema.LinkingIterator.next(LinkingIterator.java:147) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.core.metadata.schema.LinkingIterator.next(LinkingIterator.java:50) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at java.util.Spliterators$IteratorSpliterator.tryAdvance(Spliterators.java:1812) ~[?:?]\r\n        at java.util.stream.StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0(StreamSpliterators.java:294) ~[?:?]\r\n        at java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.fillBuffer(StreamSpliterators.java:206) ~[?:?]\r\n        at java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.doAdvance(StreamSpliterators.java:161) ~[?:?]\r\n        at java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(StreamSpliterators.java:300) ~[?:?]\r\n        at java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681) ~[?:?]\r\n        at org.apache.accumulo.gc.GarbageCollectionAlgorithm.removeCandidatesInUse(GarbageCollectionAlgorithm.java:139) ~[accumulo-gc-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.gc.GarbageCollectionAlgorithm.confirmDeletesTrace(GarbageCollectionAlgorithm.java:287) ~[accumulo-gc-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.gc.GarbageCollectionAlgorithm.deleteBatch(GarbageCollectionAlgorithm.java:345) ~[accumulo-gc-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.gc.GarbageCollectionAlgorithm.collect(GarbageCollectionAlgorithm.java:329) ~[accumulo-gc-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.gc.SimpleGarbageCollector.run(SimpleGarbageCollector.java:214) ~[accumulo-gc-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n        at org.apache.accumulo.core.trace.TraceWrappedRunnable.run(TraceWrappedRunnable.java:52) ~[accumulo-core-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]\r\n</pre>","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154031019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154120448","html_url":"https://github.com/apache/accumulo/pull/2765#issuecomment-1154120448","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2765","id":1154120448,"node_id":"IC_kwDOACaFSM5EynsA","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T16:17:52Z","updated_at":"2022-06-13T16:17:52Z","author_association":"MEMBER","body":"Here is a screenshot of the tables page on the current commit: \r\n![image](https://user-images.githubusercontent.com/47725857/173398720-78d8598a-4c1a-4d66-8906-160d96540566.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154120448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154142331","html_url":"https://github.com/apache/accumulo/issues/1315#issuecomment-1154142331","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1315","id":1154142331,"node_id":"IC_kwDOACaFSM5EytB7","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T16:36:10Z","updated_at":"2022-06-13T16:36:10Z","author_association":"CONTRIBUTOR","body":"[Yet Another Java Service Wrapper](https://sourceforge.net/projects/yajsw/) might be able to do what you are asking @alerman. Specifically, I'm thinking of the [Conditions](https://yajsw.sourceforge.io/#mozTocId510864). You would need to manage the Accumulo processes using YAJSW though.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154142331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154153221","html_url":"https://github.com/apache/accumulo/issues/1315#issuecomment-1154153221","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1315","id":1154153221,"node_id":"IC_kwDOACaFSM5EyvsF","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T16:48:29Z","updated_at":"2022-06-13T16:48:29Z","author_association":"CONTRIBUTOR","body":"It can be handled outside of accumulo - either with a bash script used to start the service or rolled into systemd with the method that I described before .","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154153221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154155227","html_url":"https://github.com/apache/accumulo/issues/1315#issuecomment-1154155227","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1315","id":1154155227,"node_id":"IC_kwDOACaFSM5EywLb","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T16:50:25Z","updated_at":"2022-06-13T16:50:25Z","author_association":"CONTRIBUTOR","body":"So we can close this?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154155227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154227903","html_url":"https://github.com/apache/accumulo/pull/2767#issuecomment-1154227903","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2767","id":1154227903,"node_id":"IC_kwDOACaFSM5EzB6_","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T18:11:41Z","updated_at":"2022-06-13T18:11:41Z","author_association":"CONTRIBUTOR","body":"The failure in GarbageCollectorIT is interesting because with the close() I added to the `TabletsMetadata.builder()` when we get the references, it is closing the underlying scanner. This makes me think we need to close the Stream of references, after we are done with removeCandidatesInUse(). It also makes me wonder if there is a bug with the Scanner used here never being closed.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154227903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154263660","html_url":"https://github.com/apache/accumulo/issues/1315#issuecomment-1154263660","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1315","id":1154263660,"node_id":"IC_kwDOACaFSM5EzKps","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T18:51:10Z","updated_at":"2022-06-13T18:51:10Z","author_association":"MEMBER","body":"> So we can close this?\r\n\r\nBased on the conversation, I think so.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154263660/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154344117","html_url":"https://github.com/apache/accumulo/pull/2767#issuecomment-1154344117","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2767","id":1154344117,"node_id":"IC_kwDOACaFSM5EzeS1","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T19:26:31Z","updated_at":"2022-06-13T19:26:31Z","author_association":"CONTRIBUTOR","body":"Sunny day tests passing with the latest. Running all ITs now.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154344117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154432452","html_url":"https://github.com/apache/accumulo/pull/2767#issuecomment-1154432452","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2767","id":1154432452,"node_id":"IC_kwDOACaFSM5Ezz3E","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T20:58:07Z","updated_at":"2022-06-13T20:58:07Z","author_association":"CONTRIBUTOR","body":"All ITs are passing now.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154432452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154436966","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1154436966","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1154436966,"node_id":"IC_kwDOACaFSM5Ez09m","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T21:03:45Z","updated_at":"2022-06-13T21:03:45Z","author_association":"CONTRIBUTOR","body":"> I'm also thinking that there should be a table configuration that enables/disables this feature. Currently, an admin can spin up some ScanServers and an application developer can enable eventual consistency, but do we want that on the metadata table for example?\r\n\r\nFor a table where that are zero known uses cases for eventual consistency and enabling it is likely a mistake having that feature makes sense to me.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154436966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154607161","html_url":"https://github.com/apache/accumulo/pull/2769#issuecomment-1154607161","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2769","id":1154607161,"node_id":"IC_kwDOACaFSM5E0eg5","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T01:17:35Z","updated_at":"2022-06-14T01:17:35Z","author_association":"MEMBER","body":"Some of this was moved into #2773. This can be rebased after that is merged.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154607161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154733877","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1154733877","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1154733877,"node_id":"IC_kwDOACaFSM5E09c1","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T05:33:10Z","updated_at":"2022-06-14T05:33:10Z","author_association":"MEMBER","body":"@keith-turner wrote:\r\n> > It's not the scan execution hints that are modifying the behavior... it's the configured dispatcher. And, the scan hints are still not affecting the data returned... it's the server that it was dispatched to that is doing that.\r\n> \r\n> If scan hints+config can change the behavior of a scanner from immediate to eventual I think this could lead to disaster. Consider something like the Accumulo GC algorithm where its correctness relies on only using scanners with immediate consistency. Consider the following situation.\r\n> \r\n> * Person A writes a scanner that requires immediate consistency and sets a scan hint with intention of changing cache behavior to be opportunistic.\r\n> * Later Person B changes Accumulo configuration such that it causes the scan hints set by person A to now make the scanner coded by person A be eventually consistent.\r\n\r\nI think it's an exaggeration to call this a disaster. Scan hints controlling a specific configured dispatcher's behavior should already be documented in that dispatcher's documentation and stable before users can rely on it for stable behavior. This is not a problem. If we change the semantics of *any* configuration, we can break things users intended with their previous configuration. This situation is no different... scan hints are just configuration for a dispatcher that are semantically constrained to that dispatcher's documented behavior.\r\n\r\nHaving this as behavior with an explicit API method to configure isn't any different. A configured dispatcher could just ignore that configuration and dispatch to an eventually consistent ScanServer instead of a TabletServer. Hints are just another kind of configuration. Whether that configuration is set by an API with a different name, or set by the API that sets hints, we're in the same situation... we have to trust the dispatcher that the user has configured to do the thing we expect it to, based on whatever configuration is set on the scan task, regardless of how it is set.\r\n\r\nThe main difference here, is that it already logically makes sense to use scan hints to modify the dispatcher behavior, because that's what that configuration is *for*.\r\n\r\n> \r\n> If the code in question were the Accumulo GC, this could cause files to be deleted when they should not be. Eventual vs immediate consistency is so important to some algorithms that it should always be explicitly declared per scanner and never be overridden by config that could impact all scanners in an indiscriminate manner without consideration of individual circumstances and per scanner intent.\r\n\r\nI think the discussion of the accumulo-gc is a bit of a red herring. That scans the metadata. It is already well documented that all metadata scans are always dispatched to an executor named \"meta\", and should always be immediately consistent. Even it if it wasn't, though, I don't think by setting the scan configuration via executor hints is substantially different than setting other scan configuration via other APIs. It's all configuration, and the dispatcher's behavior ultimately has to be documented, known, and relied upon in order to get any kind of guarantees about any scan results.\r\n\r\n\r\n@dlmarion wrote:\r\n> Since immediate/strict consistency is the default, maybe we just need a method to disable it for a specific query instead of specifying the value. For example, `enableEventualConsistency()`, `relaxReadGuarantees()`, `disableConsistentReads()`, `allowStaleReads()`, etc.\r\n> \r\n> I'm also thinking that there should be a table configuration that enables/disables this feature. Currently, an admin can spin up some ScanServers and an application developer can enable eventual consistency, but do we want that on the `metadata` table for example?\r\n\r\nI would like to keep configuration simple. I've read so many articles about software complexity killing projects, and I think Accumulo is already in that risky area, where every new complex feature we add, often for niche use cases, adds an obtuse amount of complexity. We already have an overwhelming amount of single-purpose configuration elements that micro-manage so many elements of Accumulo's operations. We have an opportunity here to keep things *simple*. The dispatcher is already one such configurable component. If the dispatcher is responsible for deciding which server to use, and we already have a way to pass configuration to a dispatcher through the scan hints, then I don't see why we need to have additional configuration that add to the bloat. Let's be modular... let's let the configurable dispatcher to the work. We can add this feature without any additional user facing complexity... if we recognize that scan hints are merely dispatcher configuration, and the dispatcher is already a pluggable module, and all of these configurations are already per-table or per-scan.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154733877/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154736638","html_url":"https://github.com/apache/accumulo/issues/2770#issuecomment-1154736638","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2770","id":1154736638,"node_id":"IC_kwDOACaFSM5E0-H-","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T05:37:06Z","updated_at":"2022-06-14T05:37:06Z","author_association":"MEMBER","body":"2.1 has been developed assuming 3.0 or later. If we do use any new APIs, we have to be careful about ensuring we don't break our minimum compatibility (which we can revisit for the next version, but I think is too late in the dev cycle for 2.1)","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154736638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154810995","html_url":"https://github.com/apache/accumulo/pull/2774#issuecomment-1154810995","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2774","id":1154810995,"node_id":"IC_kwDOACaFSM5E1QRz","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T07:20:01Z","updated_at":"2022-06-14T07:46:01Z","author_association":"MEMBER","body":"This is a trivial change. I'm not really expecting people to review it, since it's all automated. The bulk of this change was automated and appears in the second commit. The first commit, 3447007e542c7e52856eb7ebf108e82365feb3dd, contains anything relevant to review without all the automated changes, if somebody really wants to check.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1154810995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155058982","html_url":"https://github.com/apache/accumulo/issues/2770#issuecomment-1155058982","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2770","id":1155058982,"node_id":"IC_kwDOACaFSM5E2M0m","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T11:28:19Z","updated_at":"2022-06-14T11:28:19Z","author_association":"CONTRIBUTOR","body":"Agreed, this is an issue for a version after 2.1","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155058982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155139000","html_url":"https://github.com/apache/accumulo/issues/2775#issuecomment-1155139000","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2775","id":1155139000,"node_id":"IC_kwDOACaFSM5E2gW4","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T12:46:26Z","updated_at":"2022-06-14T12:46:26Z","author_association":"CONTRIBUTOR","body":"So can we do a 1.10.3 release with the good commons-vfs 2.1 jar? This bug seems nasty enough that we don't want users to have to rebuild Accumulo on their own.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155139000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155180247","html_url":"https://github.com/apache/accumulo/issues/2775#issuecomment-1155180247","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2775","id":1155180247,"node_id":"IC_kwDOACaFSM5E2qbX","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T13:21:39Z","updated_at":"2022-06-14T13:21:39Z","author_association":"MEMBER","body":"We don't need to do a release for this. It's just a drop-in replacement on their class path. No need to rebuild Accumulo at all. I'd wait for a resolution upstream, bump to that version, then just include it in the next release. In the meantime, can update the release notes for the current version to add a \"Known issues\" section and link them to the VFS issue for a workaround/solution that works for them.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155180247/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155258470","html_url":"https://github.com/apache/accumulo/issues/2775#issuecomment-1155258470","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2775","id":1155258470,"node_id":"IC_kwDOACaFSM5E29hm","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T14:19:51Z","updated_at":"2022-06-14T14:19:51Z","author_association":"CONTRIBUTOR","body":"The AccumuloVFSClassLoader class in `1.10` has not substantively changed since 2014 according to the git log. My guess is that AccumuloVFSClassLoader is susceptible to the issue in VFS-683, but more recent versions of commons-vfs have increased the probability of it occurring.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155258470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155291095","html_url":"https://github.com/apache/accumulo/issues/2776#issuecomment-1155291095","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2776","id":1155291095,"node_id":"IC_kwDOACaFSM5E3FfX","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T14:43:17Z","updated_at":"2022-06-14T14:43:17Z","author_association":"CONTRIBUTOR","body":"Related PR https://github.com/apache/accumulo/pull/2777","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155291095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155334357","html_url":"https://github.com/apache/accumulo/issues/2775#issuecomment-1155334357","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2775","id":1155334357,"node_id":"IC_kwDOACaFSM5E3QDV","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T15:11:55Z","updated_at":"2022-06-14T15:11:55Z","author_association":"CONTRIBUTOR","body":"I'm thinking we should move the commons-vfs version back to 2.1 in `main` and https://github.com/apache/accumulo-classloaders. We can move the version back to 2.1 for any future 1.x and 2.0.x releases. Thoughts?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155334357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155349342","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1155349342","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1155349342,"node_id":"IC_kwDOACaFSM5E3Tte","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T15:24:09Z","updated_at":"2022-06-14T15:24:09Z","author_association":"CONTRIBUTOR","body":"> Having this as behavior with an explicit API method to configure isn't any different. A configured dispatcher could just ignore that configuration and dispatch to an eventually consistent ScanServer instead of a TabletServer. \r\n\r\nThat can not happen in this PR as its currently coded.  When a scanner is set to immediate consistency the scan server dispatcher plugin is never consulted and only the tserver is used.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155349342/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155406468","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1155406468","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1155406468,"node_id":"IC_kwDOACaFSM5E3hqE","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T16:09:52Z","updated_at":"2022-06-14T16:09:52Z","author_association":"CONTRIBUTOR","body":"I believe that this is part of the [public API](https://accumulo.apache.org/api/). I'm not sure if this violates our policy, but I think it might.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155406468/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155463264","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1155463264","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1155463264,"node_id":"IC_kwDOACaFSM5E3vhg","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T17:03:33Z","updated_at":"2022-06-14T17:03:33Z","author_association":"CONTRIBUTOR","body":"This change is causing a failure in `FateIT.testTransactionStatus()`. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155463264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155479506","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1155479506","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1155479506,"node_id":"IC_kwDOACaFSM5E3zfS","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T17:13:16Z","updated_at":"2022-06-14T17:13:16Z","author_association":"CONTRIBUTOR","body":"> I believe that this is part of the [public API](https://accumulo.apache.org/api/). \r\n\r\nYeah, its definitely in the public API. I am not sure what the use case would be for using the Java serialization of the Auths though. \r\n\r\n> I'm not sure if this violates our policy, but I think it might.\r\n\r\nThe question would be, if keeping the class serializable exposes a possible security flaw... is it worth breaking any serialization that a user may be using?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155479506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155486659","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1155486659","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1155486659,"node_id":"IC_kwDOACaFSM5E31PD","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T17:21:25Z","updated_at":"2022-06-14T17:21:25Z","author_association":"CONTRIBUTOR","body":"> The question would be, if keeping the class serializable exposes a possible security flaw... is it worth breaking any serialization that a user may be using?\r\n\r\nIs there a security flaw?\r\n\r\nI believe the solution for #2776 in regards to this class is to mark these fields as `transient`","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155486659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155498652","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1155498652","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1155498652,"node_id":"IC_kwDOACaFSM5E34Kc","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T17:34:07Z","updated_at":"2022-06-14T17:34:07Z","author_association":"CONTRIBUTOR","body":"> > The question would be, if keeping the class serializable exposes a possible security flaw... is it worth breaking any serialization that a user may be using?\r\n> \r\n> Is there a security flaw?\r\n\r\nI don't know.\r\n\r\n> I believe the solution for #2776 in regards to this class is to mark these fields as `transient`\r\n\r\nThat may be a better fix. But I think this would still break the serialization if a user extended Authorizations. I am going to write a test to experiment. \r\n\r\nMy point being, if we are going to break the serialization to fix the warning, lets just get rid of it.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155498652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155511285","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1155511285","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1155511285,"node_id":"IC_kwDOACaFSM5E37P1","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T17:48:59Z","updated_at":"2022-06-14T17:50:13Z","author_association":"CONTRIBUTOR","body":"If you remove the `Serializable` interface from the class, then I believe that breaks binary compatibility, which violates our public API policy. If the serailization/deserialization of Authorizations is done by other means, then adding `transient` may not break anything. If this is just a `warning` put out by the Java 18 JVM, then we might not need to do anything at this time.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155511285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155517364","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1155517364","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1155517364,"node_id":"IC_kwDOACaFSM5E38u0","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T17:56:02Z","updated_at":"2022-06-14T17:56:02Z","author_association":"CONTRIBUTOR","body":"I wrote a simple test that writes and reads the Authorizations object and it passes on main. I think changing the serialization breaks the API either way:\r\n<pre>\r\nfields marked transient:\r\nException in toString(): java.lang.NullPointerException: Cannot invoke \"java.util.Set.iterator()\" because \"this.auths\" is null\r\nDropped serializable:\r\njava.io.NotSerializableException: org.apache.accumulo.core.security.Authorizations\r\n</pre>\r\n\r\nHere is the test I added to AuthorizationsTest:\r\n<pre>\r\n@Test\r\n  public void testSerializable() throws Exception {\r\n    ByteArrayOutputStream bytesOut = new ByteArrayOutputStream();\r\n    ObjectOutputStream outputStream = new ObjectOutputStream(bytesOut);\r\n    Authorizations auths = new Authorizations(\"foo\");\r\n    outputStream.writeObject(auths);\r\n    outputStream.flush();\r\n\r\n    ByteArrayInputStream bytesIn = new ByteArrayInputStream(bytesOut.toByteArray());\r\n    ObjectInputStream inputStream = new ObjectInputStream(bytesIn);\r\n    Authorizations readObject = (Authorizations) inputStream.readObject();\r\n    assertEquals(auths, readObject);\r\n  }\r\n</pre>","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155517364/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155520536","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1155520536","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1155520536,"node_id":"IC_kwDOACaFSM5E39gY","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T17:59:50Z","updated_at":"2022-06-14T18:00:45Z","author_association":"CONTRIBUTOR","body":"in the case where you marked the fields transient, then you just need to protect against NPE in equals() ? \r\n\r\nEDIT: I think your serialization  / deserialization worked with `transient`, the `assertEquals` caused it to fail","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155520536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155549721","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1155549721","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1155549721,"node_id":"IC_kwDOACaFSM5E4EoZ","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T18:23:33Z","updated_at":"2022-06-14T18:23:33Z","author_association":"CONTRIBUTOR","body":"> in the case where you marked the fields transient, then you just need to protect against NPE in equals() ?\r\n> \r\n> EDIT: I think your serialization / deserialization worked with `transient`, the `assertEquals` caused it to fail\r\n\r\nThe `equals()` is a problem but its more than that. The `toString()` also needs rewritten. Probably the hashCode() method as well.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155549721/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155801193","html_url":"https://github.com/apache/accumulo/pull/2778#issuecomment-1155801193","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2778","id":1155801193,"node_id":"IC_kwDOACaFSM5E5CBp","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T23:22:16Z","updated_at":"2022-06-14T23:22:16Z","author_association":"CONTRIBUTOR","body":"Currently seeking comments on approach - solution is complete if there are no objections - still should add tests (tested manually using uno)","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155801193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155864400","html_url":"https://github.com/apache/accumulo/issues/2635#issuecomment-1155864400","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2635","id":1155864400,"node_id":"IC_kwDOACaFSM5E5RdQ","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T01:04:55Z","updated_at":"2022-06-15T01:04:55Z","author_association":"CONTRIBUTOR","body":"While working on adding version check refresh it looks like we are creating multiple server contexts so this has a higher priority and will look at this next.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155864400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155924807","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1155924807","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1155924807,"node_id":"IC_kwDOACaFSM5E5gNH","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T02:52:03Z","updated_at":"2022-06-15T02:52:03Z","author_association":"MEMBER","body":"Can't you just make ByteSequence serializable? ArrayList and HashSet already are.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155924807/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155926593","html_url":"https://github.com/apache/accumulo/issues/2776#issuecomment-1155926593","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2776","id":1155926593,"node_id":"IC_kwDOACaFSM5E5gpB","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T02:56:06Z","updated_at":"2022-06-15T02:56:06Z","author_association":"MEMBER","body":"This is just a warning... what's the real-world impact? Are these effectively not serializable? Like, if we try, they could never have been serialized? If they have never been serializable, then we're not breaking any user code by dropping it... we're just breaking binary compatibility, which we don't guarantee across minor/major versions anyway, and we can just drop the useless interface in 3.0.\r\n\r\nIf they are still serializable as a whole, but behaves in a weird way due to the fields not being serializable, then we may need to try to preserve existing weird behavior or try to change behavior through a deprecation cycle.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155926593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155933708","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1155933708","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1155933708,"node_id":"IC_kwDOACaFSM5E5iYM","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T03:10:26Z","updated_at":"2022-06-15T03:11:29Z","author_association":"CONTRIBUTOR","body":"Its kinda neat that Java 18 found this.  @milleruntime  would you happen to have the error/warn message?  I am curious what it said.\r\n\r\nTrying to understand the implications of removing the interface on binary compat I was looking at : \r\n\r\nhttps://wiki.eclipse.org/Evolving_Java-based_APIs_2\r\n\r\nReading that doc it seems like removing it may only break binary compat in the case where code is casting to Serializable. Does that interpretation seem correct? Since serialization did not work, maybe no one was doing that and its ok to remove if code that was not casting to Serializable is ok.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155933708/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155935221","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1155935221","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1155935221,"node_id":"IC_kwDOACaFSM5E5iv1","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T03:13:12Z","updated_at":"2022-06-15T03:13:12Z","author_association":"MEMBER","body":"> > Having this as behavior with an explicit API method to configure isn't any different. A configured dispatcher could just ignore that configuration and dispatch to an eventually consistent ScanServer instead of a TabletServer.\r\n> \r\n> That can not happen in this PR as its currently coded. When a scanner is set to immediate consistency the scan server dispatcher plugin is never consulted and only the tserver is used.\r\n\r\nSo, there's two separate dispatching paths? And the path for the scan server bypasses the per-table configured dispatcher `table.scan.dispatcher`? That seems very confusing, especially since this PR adds new properties to configure `sserver.scan.executors`... but there's no way to select an executor via hints to a dispatcher? My understanding is that we wanted to try to mirror the tserver scan behavior as much as possible. Having two paths, without a dispatcher in the scan server path is very confusing. Have two paths, period, is very confusing. It just seems dramatically simpler to have a per-table dispatcher that is aware of scan servers and capable of dispatching to `sserver.scan.executors` (depending on hints) in addition to the usual `tserver.scan.executors`.\r\n\r\nEven if a dispatcher is added to the path for the scan server, it still seems far more complex than just relying on a single dispatcher... which also gives us the \"enabled or disabled for a table\" feature that Dave mentioned... because you can choose whether to configure a dispatcher that is scan server aware or not for a given table... without any new APIs.\r\n\r\nI'm probably completely misunderstanding how the dispatching changed in this PR. Is there a diagram or something to help illustrate the new dispatching design?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155935221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155938228","html_url":"https://github.com/apache/accumulo/issues/2775#issuecomment-1155938228","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2775","id":1155938228,"node_id":"IC_kwDOACaFSM5E5je0","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T03:18:51Z","updated_at":"2022-06-15T03:18:51Z","author_association":"MEMBER","body":"> I'm thinking we should move the commons-vfs version back to 2.1 in `main` and https://github.com/apache/accumulo-classloaders. We can move the version back to 2.1 for any future 1.x and 2.0.x releases. Thoughts?\r\n\r\n2.1 isn't bug free... every version of VFS has had some kind of seriously annoying bug. I think us chasing the *right* version of VFS to have on the class path is a lost cause. Why not just wait for upstream to patch and release a fixed version we can bump to? If users want a specific VFS version to avoid specific bugs and to tolerate other specific bugs in VFS, they can take some responsibility to manage their own class path to get their preferred bugset.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155938228/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155946603","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1155946603","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1155946603,"node_id":"IC_kwDOACaFSM5E5lhr","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T03:35:40Z","updated_at":"2022-06-15T03:41:42Z","author_association":"CONTRIBUTOR","body":">  Is there a diagram or something to help illustrate the new dispatching design?\r\n\r\nHere is one.\r\n\r\n![scan_server](https://user-images.githubusercontent.com/1268739/173731016-6c948612-52b7-4bba-9b08-ab0641f1a35a.png)\r\n\r\nThe ScanServerDispatcher plugin is new and it runs client side to determine which scan server to use for eventually consistent scans and what busy timeout to use.  If the scan fails because of busy timeout its consulted again and can pick another scan server.  The busy timeout feature is unique to scan servers.  This new plugin is configured via accumulo client config,\r\n\r\nOn the server side (tserver and scan server) there is an existing per table ScanDispatcher plugin that determines what thread pools to use and how to use cache.  This existing plugin makes no decision about which scan server to use as that needs to be done client side for efficiency.  This existig plugin is configured via table props.\r\n\r\nExecution hints are made available to both plugins and some other plugins not mentioned.  The plugins are not obligated to do anything with hints.\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1155946603/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156332245","html_url":"https://github.com/apache/accumulo/issues/2776#issuecomment-1156332245","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2776","id":1156332245,"node_id":"IC_kwDOACaFSM5E7DrV","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T11:06:14Z","updated_at":"2022-06-15T11:06:14Z","author_association":"CONTRIBUTOR","body":"> This is just a warning... what's the real-world impact? Are these effectively not serializable? Like, if we try, they could never have been serialized? \r\n\r\nI wrote a basic write/read test for an `Authorizations` object and was able to serialize it. See https://github.com/apache/accumulo/pull/2777#issuecomment-1155517364. I could add one test for all the classes to see if we are able to serialize them all.\r\n\r\n> If they are still serializable as a whole, but behaves in a weird way due to the fields not being serializable, then we may need to try to preserve existing weird behavior or try to change behavior through a deprecation cycle.\r\n\r\nIt seems that these objects could throw an exception in newer versions of [Java](https://docs.oracle.com/en/java/javase/17/docs/specs/serialization/output.html). I found this openJDK issue with the following comment:  \"If the serialization mechanism attempts to serialize an object that is not serializable at runtime a NotSerializableException can result.\" https://bugs.openjdk.org/browse/JDK-8274336","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156332245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156336596","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1156336596","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1156336596,"node_id":"IC_kwDOACaFSM5E7EvU","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T11:10:46Z","updated_at":"2022-06-15T11:10:46Z","author_association":"CONTRIBUTOR","body":"> Its kinda neat that Java 18 found this. @milleruntime would you happen to have the error/warn message? I am curious what it said.\r\n\r\nI currently only have Java 18 in my IDE and this is all it is saying:\r\n<pre>\r\nworkspace/accumulo/core/src/main/java/org/apache/accumulo/core/security/Authorizations.java:47:29\r\njava: non-transient instance field of a serializable class declared with a non-serializable type\r\n</pre>\r\n\r\n> Reading that doc it seems like removing it may only break binary compat in the case where code is casting to Serializable. Does that interpretation seem correct? \r\n\r\nI will take a look at that link, thanks.\r\n\r\n> Since serialization did not work, maybe no one was doing that and its ok to remove if code that was not casting to Serializable is ok.\r\n\r\nSo the serialization of `Authorizations` _does_ work as it is currently written. See https://github.com/apache/accumulo/pull/2777#issuecomment-1155517364. I am going to create a test for all the Serialization warnings so we can figure out a way forward for https://github.com/apache/accumulo/issues/2776. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156336596/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156341257","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1156341257","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1156341257,"node_id":"IC_kwDOACaFSM5E7F4J","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T11:15:45Z","updated_at":"2022-06-15T11:15:45Z","author_association":"CONTRIBUTOR","body":"> Can't you just make ByteSequence serializable? ArrayList and HashSet already are.\r\n\r\nIt looks like we may not have to. By changing the private types from interfaces to classes, the warnings went away:\r\n```diff\r\n-  private Set<ByteSequence> auths = new HashSet<>();\r\n-  private List<byte[]> authsList = new ArrayList<>(); // sorted order\r\n+  private final HashSet<ByteSequence> auths = new HashSet<>();\r\n+  private final ArrayList<byte[]> authsList = new ArrayList<>(); // sorted order\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156341257/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156357600","html_url":"https://github.com/apache/accumulo/issues/2776#issuecomment-1156357600","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2776","id":1156357600,"node_id":"IC_kwDOACaFSM5E7J3g","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T11:32:48Z","updated_at":"2022-06-15T11:32:48Z","author_association":"CONTRIBUTOR","body":"I'm not sure that these warning indicate an error *will* occur based on [this](https://bugs.openjdk.org/browse/JDK-8160675?focusedCommentId=14173534&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-14173534) comment and this comment in https://bugs.openjdk.org/browse/JDK-8274336: \r\n\r\n> It is not necessarily erroneous that a field's type is not declared to be serializable; as a runtime invariant, the field could only point to objects that can be serialized.\r\n\r\n@ctubbsii said:\r\n> we're just breaking binary compatibility, which we don't guarantee across minor/major versions anyway\r\n\r\nThe public API definition says, \"The Accumulo project maintains binary compatibility across this API within a major release...\", which I take to mean binary compatibility across all 2.x releases. Am I reading that wrong?\r\n\r\nI'm thinking we should address this in a 3.0 when we are making other API changes.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156357600/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156362659","html_url":"https://github.com/apache/accumulo/pull/2777#issuecomment-1156362659","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2777","id":1156362659,"node_id":"IC_kwDOACaFSM5E7LGj","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T11:38:06Z","updated_at":"2022-06-15T11:38:21Z","author_association":"CONTRIBUTOR","body":"If a user is doing the following:\r\n\r\n```\r\nSerializable auths = new Authorizations();\r\n```\r\n\r\nbut never serializes or deserializes the object, then according to the [JLS](https://docs.oracle.com/javase/specs/jls/se6/html/binaryComp.html#13.4.4) they will get a `VerifyError`.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156362659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156435295","html_url":"https://github.com/apache/accumulo/pull/2769#issuecomment-1156435295","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2769","id":1156435295,"node_id":"IC_kwDOACaFSM5E7c1f","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T12:53:46Z","updated_at":"2022-06-15T12:54:02Z","author_association":"CONTRIBUTOR","body":"This PR has been superseded with separate PRs.  This has been partially completed with PR #2773 to add delete watcher to ServerConfigurationFactory.  PR #2778 will resolve the remaining data version sync functionality.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156435295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156498981","html_url":"https://github.com/apache/accumulo/issues/2776#issuecomment-1156498981","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2776","id":1156498981,"node_id":"IC_kwDOACaFSM5E7sYl","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T13:48:51Z","updated_at":"2022-06-15T13:48:51Z","author_association":"MEMBER","body":"> > we're just breaking binary compatibility, which we don't guarantee across minor/major versions anyway\r\n> \r\n> The public API definition says, \"The Accumulo project maintains binary compatibility across this API within a major release...\", which I take to mean binary compatibility across all 2.x releases. Am I reading that wrong?\r\n> \r\n> I'm thinking we should address this in a 3.0 when we are making other API changes.\r\n\r\nYou're right. We do try to preserve binary compatibility for minor versions. I didn't recall correctly. I think this is one thing we can relax, when needed, but it's a good goal to at least attempt to preserve binary compatibility.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156498981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156539782","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1156539782","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1156539782,"node_id":"IC_kwDOACaFSM5E72WG","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T14:22:45Z","updated_at":"2022-06-15T14:22:45Z","author_association":"MEMBER","body":"Okay, thanks. That helps. I guess I was thinking the current dispatcher ran in the client side. So, using scan hints wouldn't even work the way I imagined it. We need the scan server dispatcher plugin to run on the client side first.\r\n\r\nA few thoughts based on my new understanding:\r\n\r\n1. The client side dispatcher concept is very different from the executor dispatching that is done in the tserver, but has a very similar name. It might be helpful to have this named completely differently... like \"server chooser\" or \"tablet scanner server type selector\" or something along those lines (not necessarily as verbose as that latter one... but something to make it clearly distinct from the executor pool dispatching inside the server).\r\n2. It would be nice if the scan server dispatching inside the scan server worked the same as the existing per-table dispatcher inside the tserver. Ideally, the same dispatcher would work in both servers, without a new dispatcher SPI specifically for the scan server.\r\n\r\nOne thing is clear, my previous suggestion about using scan hints can be thrown out. Those are specifically scan executor hints, and should be used only by the dispatcher inside the server, because the dispatcher inside the server dispatches to an executor. The choice of which server type is an entirely different kind of dispatching, not to a scan executor, but to a server. So, that does imply a new kind of SPI or configuration to do the server selection inside the client (or... a different client entirely rather than modify the existing client).\r\n\r\nThis is what I'm picturing now (very similar to yours, but tries to keep the servers similar, and makes server type selection more explicit):\r\n![PXL_20220615_141638023](https://user-images.githubusercontent.com/1280725/173851044-09da651e-ca10-450b-a627-5c62cb13664d.jpg)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156539782/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156599153","html_url":"https://github.com/apache/accumulo/issues/2776#issuecomment-1156599153","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2776","id":1156599153,"node_id":"IC_kwDOACaFSM5E8E1x","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T15:12:12Z","updated_at":"2022-06-15T15:12:12Z","author_association":"CONTRIBUTOR","body":"> I'm not sure that these warning indicate an error will occur...\r\n\r\nRight. They are just warnings.\r\n\r\n> I'm thinking we should address this in a 3.0 when we are making other API changes.\r\n\r\nIf we can fix the warnings without touching the API like I did in #2777, then I think that would be good to get a head start.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156599153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156608419","html_url":"https://github.com/apache/accumulo/issues/2776#issuecomment-1156608419","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2776","id":1156608419,"node_id":"IC_kwDOACaFSM5E8HGj","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T15:20:12Z","updated_at":"2022-06-15T15:20:12Z","author_association":"CONTRIBUTOR","body":"> If we can fix the warnings without touching the API like I did in https://github.com/apache/accumulo/pull/2777, then I think that would be good to get a head start.\r\n\r\nYeah, I'm all for that.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156608419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156635752","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1156635752","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1156635752,"node_id":"IC_kwDOACaFSM5E8Nxo","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T15:43:55Z","updated_at":"2022-06-15T15:43:55Z","author_association":"CONTRIBUTOR","body":"> The client side dispatcher concept is very different from the executor dispatching that is done in the tserver, but has a very similar name. It might be helpful to have this named completely differently... like \"server chooser\" or \"tablet scanner server type selector\"\r\n\r\nI kinda like `ScanServerChooser`\r\n\r\n> So, that does imply a new kind of SPI or configuration to do the server selection inside the client (or... a different client entirely rather than modify the existing client).\r\n\r\nI am not sure if you are implying the client side plugin should have control over choosing tservers and sservers.  If so, I would like to avoid that and keep the plugin narrowly scoped to choosing scan servers because of the following : \r\n\r\n * Any scan server can be chosen to service a query for a tablet.  Only one tserver can be chosen to service a tablet scan.\r\n * Scan servers have a busy timeout and tservers do not.  The plugin specifies the busy timeout to use.\r\n * History of busy timeout events is given to the plugin.  This allows it to possibly choose a different scan server based on past events.\r\n\r\nThe way we choose which tserver vs which scan server is very different and I don't think it would be good to try to have one plugin do both.  Also the logic for choosing a tserver is not flexible and there is basically only one way to do it ATM.\r\n\r\nWorking on this I have realized if we did have anything pluggable for tservers, it would probably not be around choosing a tserver but more about backoff strategies in the case of failures. I think that would be another narrowly scoped plugin that makes very specific decisions.\r\n\r\n> Those are specifically scan executor hints, and should be used only by the dispatcher inside the server, because the dispatcher inside the server dispatches to an executor.\r\n\r\nI think it makes sense to pass the scan exec hint so the ScanServerChooser/ScanServerDispatcher plugin in addition to plugins dealing with caching, prioritizationm and thread pool selection on the server side.  Consider the case where in the code I set scan_hints to either `scan_type=gold`, `scan_type=silver`, or `scan_type=iron`. I could start off configuring multiple run time plugins to do the following (on tserver and scan server).\r\n\r\n  * When we see scan_type=gold enable full caching, use a dedicated thread pool A with 32 threads\r\n  * When we see scan_type=silver enable opportunistic caching, use a thread pool B with 8 threads, set the scan prio to 1 in the thread pool queue\r\n  * When we see scan_type=iron enable disable caching, and use a thread pool B with 8 threads, set the scan prio to 2 in the thread pool queue\r\n\r\nThen later I could change config at runtime to react to the scan types differently like\r\n\r\n* When we see scan_type gold and its eventual, then use a dedicated group of scan servers with large memory and full caching enabled\r\n* When we see scan_type silver and its eventual use the default set of scan servers.  On the scan server enable caching, use a thread pool B with 8 threads, set the scan prio to 1 in the thread pool queue for this scan type.\r\n* When we see scan_type iron and its eventual use the default set of scan servers.  On the scan server disable caching, use a thread pool B with 8 threads, set the scan prio to 2 in the thread pool queue for this scan type.\r\n\r\nSo by passing the hints to any plugin involved in scan execution we can change runtime config to respond to those hints in different ways over time (using feedback from metrics) including scan server selection.\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156635752/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156641115","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1156641115","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1156641115,"node_id":"IC_kwDOACaFSM5E8PFb","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T15:48:22Z","updated_at":"2022-06-15T15:48:22Z","author_association":"CONTRIBUTOR","body":"> I kinda like ScanServerChooser\r\n\r\nI'm partial to `ScanServerSelector`.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156641115/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156644517","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1156644517","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1156644517,"node_id":"IC_kwDOACaFSM5E8P6l","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T15:51:24Z","updated_at":"2022-06-15T15:52:01Z","author_association":"CONTRIBUTOR","body":"> It would be nice if the scan server dispatching inside the scan server worked the same as the existing per-table dispatcher inside the tserver. Ideally, the same dispatcher would work in both servers, without a new dispatcher SPI specifically for the scan server.\r\n\r\nThe plugins in the scan server does work exactly the same as in the tserver with these changes.  The only difference is they have a different set of config prefixes (well the ones that are not per table).  Config for dispatching to thread pools is per table and has the exact same config across tserver and sserver.  Config for creating thread pools and cache to service scans is at the server level and therefore has  diff config prefix for sserver but the exact same config props as tservers.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156644517/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156648560","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1156648560","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1156648560,"node_id":"IC_kwDOACaFSM5E8Q5w","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T15:55:15Z","updated_at":"2022-06-15T15:55:15Z","author_association":"CONTRIBUTOR","body":"It may be useful to add information to the following that informs a server side dispatcher if its running in a tserver or a scan server.  Not sure about this.  Would be follow on work.\r\n\r\nhttps://github.com/apache/accumulo/blob/418eee8fa0abed50f30cb6c97184964f924d2c67/core/src/main/java/org/apache/accumulo/core/spi/scan/ScanDispatcher.java#L98-L110","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156648560/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156655946","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1156655946","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1156655946,"node_id":"IC_kwDOACaFSM5E8StK","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T16:01:45Z","updated_at":"2022-06-15T16:01:45Z","author_association":"CONTRIBUTOR","body":"I like ScanServerSelector also as a name.  I do think it would be good to have something besides Dispatcher in the name to avoid confusion w/ the server side plugin.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156655946/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156831152","html_url":"https://github.com/apache/accumulo/issues/2495#issuecomment-1156831152","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2495","id":1156831152,"node_id":"IC_kwDOACaFSM5E89ew","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T19:12:41Z","updated_at":"2022-06-15T19:12:41Z","author_association":"CONTRIBUTOR","body":"While working on https://github.com/apache/accumulo/pull/2780, I realized we need a concrete ID for Fate as well. It would be nice to have if we are going to release an API of fate operations. This is what I was thinking:\r\n<pre>\r\n/**\r\n * A strongly typed representation of a Fate Transaction ID. There are two representations of a\r\n * FateTxId. The first is a hexadecimal long. The second is a formatted String.\r\n *\r\n * @since 2.1.0\r\n */\r\npublic class FateTxId extends AbstractId<FateTxId> {\r\n    private FateTxId(long hexadecimal) {\r\n        super(FateTxIdUtil.formatTid(hexadecimal));\r\n    }\r\n\r\n    /**\r\n     * Get a FateTxId object for the provided hexadecimal number. This is guaranteed to be non-null.\r\n     *\r\n     * @param hexadecimal\r\n     *          Fate transaction ID as a hexadecimal long\r\n     * @return FateTxId object\r\n     */\r\n    public static FateTxId of(final long hexadecimal) {\r\n        try {\r\n            return cache.get(hexadecimal, () -> new FateTxId(hexadecimal));\r\n        } catch (ExecutionException e) {\r\n            throw new AssertionError(\r\n                    \"This should never happen: ID constructor should never return null.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get a FateTxId object for the provided formatted String. This is guaranteed to be non-null.\r\n     *\r\n     * @param formattedString\r\n     *          Fate transaction ID as a formatted String\r\n     * @return FateTxId object\r\n     */\r\n    public static FateTxId of(String formattedString) {\r\n        if (!FateTxIdUtil.isFormatedTid(formattedString)) {\r\n            throw new IllegalArgumentException(\"The string provided (\" + formattedString +\r\n                    \") is not formatted properly. \");\r\n        }\r\n        return new FateTxId(FateTxIdUtil.fromString(formattedString));\r\n    }\r\n}\r\n</pre>","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1156831152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1157220591","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1157220591","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1157220591,"node_id":"IC_kwDOACaFSM5E-cjv","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-16T04:31:44Z","updated_at":"2022-06-16T04:31:44Z","author_association":"MEMBER","body":"@keith-turner wrote:\r\n> I am not sure if you are implying the client side plugin should have control over choosing tservers and sservers. If so, I would like to avoid that and keep the plugin narrowly scoped to choosing scan servers because of the following :\r\n\r\nThat was what I was suggesting. The advantage of flattening the decision of choosing between tservers and sservers, and choosing among the sservers is that there is only one branching point when you zoom out and look at the the server selection logic, instead of two. One simplifies the bigger picture, but potentially makes the plugin more complicated. Keeping those decisions separate makes the zoomed out view look more complicated, but the job of the plugin is simpler.\r\n\r\nHaving one decision point also enables more complex selection features in the plugin, like \"I don't care if I get a tserver or a sserver... treat them equally\", or \"try a tserver first, but settle for a sserver if the tserver's load is high\". The plugin can't do that if it is narrowly focused on a decision after the tserver is excluded.\r\n\r\n> * Any scan server can be chosen to service a query for a tablet.  Only one tserver can be chosen to service a tablet scan.\r\n\r\nThe selector plugin does not need to be responsible for the all the logic that identifies the one tserver. It can be provided with a Supplier that executes our current logic, so it can have the option of selecting the tserver, but without all the complexity of locating it.\r\n\r\n> * Scan servers have a busy timeout and tservers do not.  The plugin specifies the busy timeout to use.\r\n> * History of busy timeout events is given to the plugin.  This allows it to possibly choose a different scan server based on past events.\r\n\r\nI don't think there's any reason a tserver can't have some of those features, in case a selector plugin wanted to treat the tserver as another possible scan server to choose from. Those features wouldn't be of much use if immediate consistency were required... but if it's not required, it would certainly be acceptable for a selector to choose the tserver if the sservers are busy or unavailable.\r\n\r\nI'm also wondering if the \"busy timeout\" concept can be made more generalized. Like, instead of a queue wait timeout, a sserver could be considered \"busy\" if its CPU load was high or something else. Computing this weight could be another SPI added in future. The first pass could just be the current \"busy timeout\"... just with a more generic name, so it doesn't strictly have to be a timeout in future, but some other selection weight.\r\n\r\n> Also the logic for choosing a tserver is not flexible and there is basically only one way to do it ATM.\r\n\r\nAs explained here, I'm not proposing that we diverge from the current one way to do this. I'm only proposing that the selector be allowed to select it.\r\n\r\n> I think it makes sense to pass the scan exec hint\r\n\r\nI concede this point. The selection of the sserver is still part of the overall execution of the scan, and could make use of these hints, even if they are not used to determine whether the tserver is selected or the sservers are selected.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1157220591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1158000369","html_url":"https://github.com/apache/accumulo/pull/2778#issuecomment-1158000369","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2778","id":1158000369,"node_id":"IC_kwDOACaFSM5FBa7x","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-16T18:23:50Z","updated_at":"2022-06-16T18:23:50Z","author_association":"CONTRIBUTOR","body":"`I think I would benefit from a basic explanation of what this PR is trying to do`\r\n\r\nThe cache implementation provides multiple ways to refresh and expire entries.\r\n\r\n  - refreshAfterWrite() - when an entry exceeds this value, the current value is returned and then an async task runs to determine if the entry is still valid. This was implemented as a light weight check using the ZooKeeper stat, similar to what is being moved to the scheduled thread in prop store.\r\n\r\n  - expireAfterAccess() - allows the cache to age-off entries that are not accessed after the specified time period.  This woul allow the cache to remove entries for tablets that are not longer hosted on a tserver.\r\n\r\nThe reasoning behind removing the refreshAfterWrite() responsibilities from the cache to the prop store is that with the property snapshots and the use of update count, the number of cache accesses for any particular entry are greatly reduced and it seems likely that the refresh would not be triggered in a timely manner.  Using the scheduled thread in the prop store puts a bound on the consistency of the cache entries - if normal ZooKeeper events were missed for any reason, the scheduled task  would serve to keep the values in sync within the bound of the scheduled task timing (roughly every 15 minutes)","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1158000369/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1158049678","html_url":"https://github.com/apache/accumulo/pull/2778#issuecomment-1158049678","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2778","id":1158049678,"node_id":"IC_kwDOACaFSM5FBm-O","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-16T19:23:55Z","updated_at":"2022-06-16T19:23:55Z","author_association":"MEMBER","body":"My understanding from what you've told me is that having this in ServerConfigurationFactory allows us to check that the snapshots are up-to-date without updating the access time of the cache. I think that's a good reason to implement it there, based on the current configs held by that factory. Thanks for the explanation.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1158049678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1158055516","html_url":"https://github.com/apache/accumulo/issues/2635#issuecomment-1158055516","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2635","id":1158055516,"node_id":"IC_kwDOACaFSM5FBoZc","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-16T19:28:33Z","updated_at":"2022-06-16T19:28:33Z","author_association":"MEMBER","body":"I don't think this is a problem, as long as the PropStore in the ServerContext is lazily initialized, which can be done by Suppliers.memoize, like other fields in ServerContext. I also noticed a related issue: we're creating two SystemConfiguration objects... one is created by ServerConfigurationFactory, and another is directly created in ServerContext. The latter should be removed, so only ServerConfigurationFactory is responsible for creating it. I don't know if there's any chicken-egg problems that this was trying to workaround, but if all the ITs pass, I would expect this to not be a problem getting rid of the latter one.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1158055516/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1158113117","html_url":"https://github.com/apache/accumulo/pull/2665#issuecomment-1158113117","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2665","id":1158113117,"node_id":"IC_kwDOACaFSM5FB2dd","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-16T20:45:10Z","updated_at":"2022-06-16T20:45:10Z","author_association":"CONTRIBUTOR","body":"@keith-turner  - I think your latest commit left `ScanServerIT.testBatchScannerTimeout` in a broken state.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1158113117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1158925726","html_url":"https://github.com/apache/accumulo/issues/2635#issuecomment-1158925726","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2635","id":1158925726,"node_id":"IC_kwDOACaFSM5FE82e","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-17T14:26:06Z","updated_at":"2022-06-17T14:26:06Z","author_association":"CONTRIBUTOR","body":"Addressed in PR #2781 ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1158925726/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1161613451","html_url":"https://github.com/apache/accumulo/issues/2635#issuecomment-1161613451","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2635","id":1161613451,"node_id":"IC_kwDOACaFSM5FPNCL","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-21T11:23:24Z","updated_at":"2022-06-21T11:23:24Z","author_association":"CONTRIBUTOR","body":"@EdColeman Can this be closed?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1161613451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1161613487","html_url":"https://github.com/apache/accumulo/issues/2775#issuecomment-1161613487","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2775","id":1161613487,"node_id":"IC_kwDOACaFSM5FPNCv","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-21T11:23:27Z","updated_at":"2022-06-21T11:23:27Z","author_association":"CONTRIBUTOR","body":"Closing based on the discussion. @ctubbsii made a suggestion in another discussion as a way to keep jars in HDFS and not use the VFS classloader. His suggestion was to create a script that copies the jars from HDFS to lib/ext before starting the Accumulo processes. You might be able to use the same script to update the jars on the local filesystem when an updated jar is pushed into HDFS.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1161613487/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1162010585","html_url":"https://github.com/apache/accumulo/pull/2755#issuecomment-1162010585","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2755","id":1162010585,"node_id":"IC_kwDOACaFSM5FQt_Z","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-21T16:53:01Z","updated_at":"2022-06-21T16:53:01Z","author_association":"CONTRIBUTOR","body":"I think this could be marked ready for review. There are some white space changes that could be dropped and the logic is confusing but if the test is passing then that is the important part to fix #2754. This PR is definitely closer to being merged than #2780, which is just an updated version of [2215](https://github.com/apache/accumulo/pull/2215).","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1162010585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1162011566","html_url":"https://github.com/apache/accumulo/pull/2215#issuecomment-1162011566","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2215","id":1162011566,"node_id":"IC_kwDOACaFSM5FQuOu","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-21T16:53:55Z","updated_at":"2022-06-21T16:53:55Z","author_association":"CONTRIBUTOR","body":"Closing this in favor of #2780 ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1162011566/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1162196343","html_url":"https://github.com/apache/accumulo/pull/2767#issuecomment-1162196343","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2767","id":1162196343,"node_id":"IC_kwDOACaFSM5FRbV3","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-21T18:56:25Z","updated_at":"2022-06-21T18:56:25Z","author_association":"CONTRIBUTOR","body":"@keith-turner So there are a lot of tests that would need to be changed to satisfy the new validation method:\r\n<pre>\r\njava.lang.IllegalArgumentException: Provided filename (file1) does not end with '.rf' or '_tmp'\r\n\tat org.apache.accumulo.core.metadata.ValidationUtil.validateRFileName(ValidationUtil.java:57)\r\n</pre>\r\n\r\nDo you think users could be using files without the *.rf extension in production? I am wondering if this method should only be called on the RFile API?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1162196343/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1163201683","html_url":"https://github.com/apache/accumulo/pull/2782#issuecomment-1163201683","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2782","id":1163201683,"node_id":"IC_kwDOACaFSM5FVQyT","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-22T14:47:04Z","updated_at":"2022-06-22T14:47:04Z","author_association":"CONTRIBUTOR","body":"I put up a PR for a blog post based on these changes. https://github.com/apache/accumulo-website/pull/325","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1163201683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164614427","html_url":"https://github.com/apache/accumulo/issues/2689#issuecomment-1164614427","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2689","id":1164614427,"node_id":"IC_kwDOACaFSM5Fapsb","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T16:17:26Z","updated_at":"2022-06-23T16:17:26Z","author_association":"CONTRIBUTOR","body":"I think the test most relevant to this issue is `ZooBasedConfigIT.expireTest`. It may be possible to derive a new test based on this test that shuts down ZooKeeper during the load/reload operation.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164614427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164628473","html_url":"https://github.com/apache/accumulo/issues/2775#issuecomment-1164628473","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2775","id":1164628473,"node_id":"IC_kwDOACaFSM5FatH5","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T16:31:28Z","updated_at":"2022-06-23T16:31:28Z","author_association":"CONTRIBUTOR","body":"> His suggestion was to create a script that copies the jars from HDFS to lib/ext before starting the Accumulo processes. You might be able to use the same script to update the jars on the local filesystem when an updated jar is pushed into HDFS.\r\n\r\nWe could create a bash script for 1.10.3. We could include it in contrib and mention it in the release notes and readme.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164628473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164635476","html_url":"https://github.com/apache/accumulo/pull/2767#issuecomment-1164635476","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2767","id":1164635476,"node_id":"IC_kwDOACaFSM5Fau1U","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T16:38:55Z","updated_at":"2022-06-23T16:38:55Z","author_association":"CONTRIBUTOR","body":"@dlmarion I think this PR is good to go now. I have some ideas discussed with @keith-turner that can be a follow on task.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164635476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164781957","html_url":"https://github.com/apache/accumulo/pull/2784#issuecomment-1164781957","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2784","id":1164781957,"node_id":"IC_kwDOACaFSM5FbSmF","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T19:22:02Z","updated_at":"2022-06-23T19:22:02Z","author_association":"CONTRIBUTOR","body":"Is there a way to make the `Age` column in the top table wider such that it only uses 1 line?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164781957/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164808757","html_url":"https://github.com/apache/accumulo/pull/2784#issuecomment-1164808757","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2784","id":1164808757,"node_id":"IC_kwDOACaFSM5FbZI1","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T19:53:12Z","updated_at":"2022-06-23T19:53:12Z","author_association":"MEMBER","body":"> Is there a way to make the `Age` column in the top table wider such that it only uses 1 line?\r\n\r\nYea, it looks like you can designate the widths. I've given the columns widths of 20%, 60%, 20% respectively which looks like this:\r\n![image](https://user-images.githubusercontent.com/47725857/175384831-355a0ec2-2d6f-4627-bff4-57183ba192eb.png)\r\n\r\nI might mess around with exact width percentages some more but it looks like it can be changed, @dlmarion.\r\n\r\nMaybe the state column could be the shortest since we know those will only ever be as long as the longest `BulkImportState`, so maybe around 15% width or so. But the directory columns should probably be pretty wide too right?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164808757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164840326","html_url":"https://github.com/apache/accumulo/pull/2784#issuecomment-1164840326","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2784","id":1164840326,"node_id":"IC_kwDOACaFSM5Fbg2G","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T20:24:11Z","updated_at":"2022-06-23T20:24:11Z","author_association":"MEMBER","body":"> Is there a way to make the `Age` column in the top table wider such that it only uses 1 line?\r\n\r\nAddressed in [5633444](https://github.com/apache/accumulo/pull/2784/commits/5633444275d22efcd18333e83de8652307e46605)","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164840326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164840790","html_url":"https://github.com/apache/accumulo/pull/2784#issuecomment-1164840790","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2784","id":1164840790,"node_id":"IC_kwDOACaFSM5Fbg9W","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T20:24:40Z","updated_at":"2022-06-23T20:24:40Z","author_association":"CONTRIBUTOR","body":"maybe 40 / 40 / 20?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164840790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164842401","html_url":"https://github.com/apache/accumulo/pull/2784#issuecomment-1164842401","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2784","id":1164842401,"node_id":"IC_kwDOACaFSM5FbhWh","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T20:26:40Z","updated_at":"2022-06-23T20:26:40Z","author_association":"MEMBER","body":"> maybe 40 / 40 / 20?\r\n\r\n40 / 45 / 15 looks like:\r\n![image](https://user-images.githubusercontent.com/47725857/175393352-e9193c51-e686-475a-9e4f-f353fcc66be2.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164842401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164843317","html_url":"https://github.com/apache/accumulo/pull/2784#issuecomment-1164843317","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2784","id":1164843317,"node_id":"IC_kwDOACaFSM5Fbhk1","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T20:27:55Z","updated_at":"2022-06-23T20:31:37Z","author_association":"CONTRIBUTOR","body":"yeah, that looks ok too\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164843317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164914266","html_url":"https://github.com/apache/accumulo/pull/2767#issuecomment-1164914266","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2767","id":1164914266,"node_id":"IC_kwDOACaFSM5Fby5a","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T21:51:17Z","updated_at":"2022-06-23T21:51:17Z","author_association":"CONTRIBUTOR","body":"All ITs are passing.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1164914266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1165546183","html_url":"https://github.com/apache/accumulo/issues/2783#issuecomment-1165546183","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2783","id":1165546183,"node_id":"IC_kwDOACaFSM5FeNLH","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T12:54:38Z","updated_at":"2022-06-24T12:54:38Z","author_association":"MEMBER","body":"I don't think there's anything for us to do here. The suggestion was that users could write a very simple startup script for their specific situation. For example, they could have a systemd unit that copies dependencies from remote storage to local, and that unit would be depended upon by a systemd unit that starts an Accumulo service. Or, they could run it some other way. The remote location, the local destination, what to copy, and which command to use to do the copying, etc., would all be very user specific.\n\nIf users need to manage their class path on startup this way, then I think that this is something they would need to do for themselves, based on their specific situation.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1165546183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1165797458","html_url":"https://github.com/apache/accumulo/issues/2785#issuecomment-1165797458","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2785","id":1165797458,"node_id":"IC_kwDOACaFSM5FfKhS","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T17:45:44Z","updated_at":"2022-06-24T17:45:44Z","author_association":"CONTRIBUTOR","body":"Regarding the Micrometer issue, my Accumulo setup is configured to use the Micrometer [StatsD](https://github.com/micrometer-metrics/micrometer/tree/main/implementations/micrometer-registry-statsd) registry and it uses Flux to send the messages. Other registry implementations may use a different mechanism to send metrics, so I don't think modifying our logging configuration to suppress these messages makes sense. The end user can do that if they wish.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1165797458/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1165840291","html_url":"https://github.com/apache/accumulo/issues/2785#issuecomment-1165840291","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2785","id":1165840291,"node_id":"IC_kwDOACaFSM5FfU-j","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T18:44:58Z","updated_at":"2022-06-24T18:44:58Z","author_association":"CONTRIBUTOR","body":"I have been unable to modify the OpenTelemetry logging and I think the reason why is that I'm using the java agent. I added `-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager` as specified in the Log4j2 [user guide](https://logging.apache.org/log4j/2.x/log4j-jul/index.html) and modified the logging properties to turn the `io.opentelemetry` loggers `off`. It's not working, I think, because the java agent starts logging before the Log4j2 configuration is read. The output contains:\r\n\r\n```\r\n./accumulo-cluster start\r\nOpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended\r\n[main] INFO io.opentelemetry.javaagent.tooling.VersionLogger - opentelemetry-javaagent - version: 1.14.0\r\n2022-06-24 18:38:37,221 main INFO Registered Log4j as the java.util.logging.LogManager.\r\n...\r\n```\r\n\r\nI think that it's possible to modify the logging when *not* using the java agent.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1165840291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1166314121","html_url":"https://github.com/apache/accumulo/pull/2780#issuecomment-1166314121","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2780","id":1166314121,"node_id":"IC_kwDOACaFSM5FhIqJ","user":{"login":"Manno15","id":29436247,"node_id":"MDQ6VXNlcjI5NDM2MjQ3","avatar_url":"https://avatars.githubusercontent.com/u/29436247?v=4","gravatar_id":"","url":"https://api.github.com/users/Manno15","html_url":"https://github.com/Manno15","followers_url":"https://api.github.com/users/Manno15/followers","following_url":"https://api.github.com/users/Manno15/following{/other_user}","gists_url":"https://api.github.com/users/Manno15/gists{/gist_id}","starred_url":"https://api.github.com/users/Manno15/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Manno15/subscriptions","organizations_url":"https://api.github.com/users/Manno15/orgs","repos_url":"https://api.github.com/users/Manno15/repos","events_url":"https://api.github.com/users/Manno15/events{/privacy}","received_events_url":"https://api.github.com/users/Manno15/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-25T15:50:52Z","updated_at":"2022-06-25T15:50:52Z","author_association":"CONTRIBUTOR","body":"I am a little behind on following this PR. What else is remaining to get this ready for review? ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1166314121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1167436667","html_url":"https://github.com/apache/accumulo/pull/2780#issuecomment-1167436667","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2780","id":1167436667,"node_id":"IC_kwDOACaFSM5Flat7","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-27T14:37:35Z","updated_at":"2022-06-27T14:37:35Z","author_association":"CONTRIBUTOR","body":"> I am a little behind on following this PR. What else is remaining to get this ready for review?\r\n\r\nIt is still a WIP. Working on the new API design.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1167436667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1167758273","html_url":"https://github.com/apache/accumulo/pull/2780#issuecomment-1167758273","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2780","id":1167758273,"node_id":"IC_kwDOACaFSM5FmpPB","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-27T18:57:25Z","updated_at":"2022-06-27T18:57:25Z","author_association":"CONTRIBUTOR","body":"@ctubbsii @EdColeman In my latest changes I added another method to instanceOps and a new enum type to assist with the multiple TXs use case:\r\n\r\n```java\r\nvoid executeFateAction(FateAction action, List<FateTxId> transactions)\r\n      throws AccumuloException, AccumuloSecurityException;\r\n```\r\n\r\nI started writing the javadoc for the API and realized we need to provide some background about how to use some of the methods, such as `cancel` and `fail`, that can only be used on `FateTransactions` with a certain status. I thought the name `FateAction` is more appropriate for the API, instead of \"operation\", which refers to the FATE REPO. Then changed the Thrift types to reflect this naming. I also created an enum in FateTransaction for `Status` that directly mirrors the internal enum `TStatus` in `ReadOnlyTStore`. Let me know what you think.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1167758273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1168642790","html_url":"https://github.com/apache/accumulo/pull/2752#issuecomment-1168642790","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2752","id":1168642790,"node_id":"IC_kwDOACaFSM5FqBLm","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-28T12:13:19Z","updated_at":"2022-06-28T12:13:19Z","author_association":"CONTRIBUTOR","body":"A full build including IT's passed. @keith-turner  - is there anything else for this PR or can we merge it?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1168642790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1168798143","html_url":"https://github.com/apache/accumulo/pull/2786#issuecomment-1168798143","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2786","id":1168798143,"node_id":"IC_kwDOACaFSM5FqnG_","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-28T14:27:05Z","updated_at":"2022-06-28T14:27:05Z","author_association":"CONTRIBUTOR","body":"I modified the logging statement to:\r\n```\r\nLOG.debug(\"mergeInfo {} overlaps: {}\", otherExtent, extent);\r\n```\r\nFor a small merge with 4 extents, this logs (filtered for mergeInfo):\r\n```\r\n2022-06-28T14:21:58,034 [manager.Manager] DEBUG: Creating merge op: 3 from startRow: -inf to endRow: +inf\r\n2022-06-28T14:21:58,175 [state.MergeInfo] DEBUG: mergeInfo 3;g< overlaps: 3<<\r\n2022-06-28T14:21:58,176 [state.MergeInfo] DEBUG: mergeInfo 3;k;g overlaps: 3<<\r\n2022-06-28T14:21:58,176 [state.MergeInfo] DEBUG: mergeInfo 3;m;k overlaps: 3<<\r\n2022-06-28T14:21:58,176 [state.MergeInfo] DEBUG: mergeInfo 3<;m overlaps: 3<<\r\n2022-06-28T14:21:58,176 [state.MergeStats] INFO : Computing next merge state for 3<< which is presently STARTED isDelete : false\r\n2022-06-28T14:21:58,288 [state.MergeInfo] DEBUG: mergeInfo 3;g< overlaps: 3<<\r\n2022-06-28T14:21:58,290 [state.MergeInfo] DEBUG: mergeInfo 3;k;g overlaps: 3<<\r\n2022-06-28T14:21:58,290 [state.MergeInfo] DEBUG: mergeInfo 3;m;k overlaps: 3<<\r\n2022-06-28T14:21:58,291 [state.MergeInfo] DEBUG: mergeInfo 3<;m overlaps: 3<<\r\n2022-06-28T14:21:58,292 [state.MergeStats] INFO : Computing next merge state for 3<< which is presently WAITING_FOR_CHOPPED isDelete : false\r\n2022-06-28T14:21:58,908 [state.MergeInfo] DEBUG: mergeInfo 3;g< overlaps: 3<<\r\n2022-06-28T14:21:58,911 [state.MergeInfo] DEBUG: mergeInfo 3;k;g overlaps: 3<<\r\n2022-06-28T14:21:58,911 [state.MergeInfo] DEBUG: mergeInfo 3;m;k overlaps: 3<<\r\n2022-06-28T14:21:58,912 [state.MergeInfo] DEBUG: mergeInfo 3<;m overlaps: 3<<\r\n2022-06-28T14:21:58,912 [state.MergeStats] INFO : Computing next merge state for 3<< which is presently WAITING_FOR_CHOPPED isDelete : false\r\n2022-06-28T14:21:59,021 [state.MergeInfo] DEBUG: mergeInfo 3;g< overlaps: 3<<\r\n2022-06-28T14:21:59,021 [state.MergeInfo] DEBUG: mergeInfo 3;k;g overlaps: 3<<\r\n2022-06-28T14:21:59,022 [state.MergeInfo] DEBUG: mergeInfo 3;m;k overlaps: 3<<\r\n2022-06-28T14:21:59,022 [state.MergeInfo] DEBUG: mergeInfo 3<;m overlaps: 3<<\r\n2022-06-28T14:21:59,022 [state.MergeStats] INFO : Computing next merge state for 3<< which is presently WAITING_FOR_OFFLINE isDelete : false\r\n2022-06-28T14:21:59,163 [state.MergeInfo] DEBUG: mergeInfo 3<< overlaps: 3<<\r\n2022-06-28T14:21:59,166 [state.MergeStats] INFO : Computing next merge state for 3<< which is presently COMPLETE isDelete : false\r\n2022-06-28T14:21:59,178 [merge.TableRangeOpWait] INFO : removing merge information No Merge in progress\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1168798143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]