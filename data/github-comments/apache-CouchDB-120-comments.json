[{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1660510003","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1660510003","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1660510003,"node_id":"IC_kwDOAAMmUc5i-V8z","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T15:04:20Z","updated_at":"2023-08-01T15:04:20Z","author_association":"CONTRIBUTOR","body":"More advanced query engines allow selecting _multiple_ indices to answer a query. It's not impossible, for Mango to be improved to do it as well.  For instance, one pain point of Mango is it can't use indices for general disjunctions today; but it might be possible to do that by doing a merge on two indices. If the new Mango query API is to specify only one index, that API choice will work against that improvement.\r\n\r\nAnother, more pessimistic view, I guess is to say Mango is never going to be anything but a layer on top of an mrview index and we shouldn't pretend otherwise. Then selecting an index and forcing that there be an index defined is probably reasonable.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1660510003/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1660968293","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1660968293","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1660968293,"node_id":"IC_kwDOAAMmUc5jAF1l","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T19:41:49Z","updated_at":"2023-08-01T19:43:34Z","author_association":"CONTRIBUTOR","body":"I agree with Nick that we would not want to put ourselves in the corner by embedding assumption about single index into endpoint name.\r\n\r\nI also agree with Bob and Jan that adding more option to existing endpoint is not the best choice in this particular case. Specifically because the option would be off by default for compatibility reasons. Also adding new options to existing API endpoints complicates maintaining of client libraries. \r\n\r\nI think we should come up with a new endpoint name but shouldn't  embed index name into it.\r\n\r\nI am bad at naming and naming is hard.\r\n\r\n`/{dbname}/_find_indexed`\r\n`/{dbname}/_select`                                                  - // inspired by SQL\r\n`/{dbname}/_find_select`             - // find using selection of indexes\r\n\r\nLet's ask help from @ricellis who has an extensive experience in designing APIs.\r\n\r\nThe decision whether to keep `_find` in the future or remove it is out of the scope for this PR.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1660968293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1660982289","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1660982289","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1660982289,"node_id":"IC_kwDOAAMmUc5jAJQR","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T19:51:08Z","updated_at":"2023-08-01T19:51:08Z","author_association":"MEMBER","body":"The stated purpose of this PR is to allow a user to run a selector against a specific individual index _or_ receive an error stating that the index is not compatible, rather than fallback to a less efficient index.\r\n\r\nLet us focus on the best way to achieve that specific goal, and whether to then do so.\r\n\r\nSpeculation about the future of `/dbname/_find` has muddied the waters. I am sorry for my part in that.\r\n\r\nFor map/reduce views and search indexes (either dreyfus/clouseau or nouveau) this is done having the path to the index in the url. \r\n\r\nInventing a third mechanism (as Ilya proposes) for this is not acceptable to me; our API is already complex enough.\r\n\r\nIf we want a facility to run a selector against a user-selected index, then I only see one way: `/db/_design/design-doc/_find/index-name`.\r\n\r\nIf we don't want that, then we need do nothing.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1660982289/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1661053944","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1661053944","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1661053944,"node_id":"IC_kwDOAAMmUc5jAav4","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T20:35:53Z","updated_at":"2023-08-01T20:35:53Z","author_association":"CONTRIBUTOR","body":"> If we don't want that, then we need do nothing.\r\n\r\nI don't have that strong of opinion. My only strong opinion is to involve Rich and his team in the design.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1661053944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1661123039","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1661123039","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1661123039,"node_id":"IC_kwDOAAMmUc5jArnf","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T21:26:32Z","updated_at":"2023-08-01T21:26:32Z","author_association":"MEMBER","body":"Agreed, would be good to hear from Rich et al","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1661123039/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1661679783","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1661679783","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1661679783,"node_id":"IC_kwDOAAMmUc5jCzin","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-02T07:44:03Z","updated_at":"2023-08-02T07:44:03Z","author_association":"MEMBER","body":"Appreciating the difficulties with augmenting existing endpoints, I think\r\nit's worth considering adding \"selector\" and \"fields\" support to the\r\nexisting _all_docs, view and search endpoints. This would be consistent\r\nwith the _changes and _find endpoints and provides most of the benefits of\r\na single-index _find query, albeit with a more explicit API.\r\n\r\nIt would also enable the filtering functionality for existing view/search\r\nindexes whereas Mango makes assumptions about the index key structure that\r\nhand-crafted indexes would need to replicate if _find we're to be supported\r\nfor them.\r\n\r\nOn Tue, 1 Aug 2023, 23:26 Robert Newson, ***@***.***> wrote:\r\n\r\n> Agreed, would be good to hear from Rich et al\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/apache/couchdb/pull/4710#issuecomment-1661123039>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAAX365O3ZXNF4RRRIJZHXLXTFYBHANCNFSM6AAAAAA25IW4QM>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1661679783/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1661765225","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1661765225","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1661765225,"node_id":"IC_kwDOAAMmUc5jDIZp","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-02T08:40:06Z","updated_at":"2023-08-02T08:40:06Z","author_association":"MEMBER","body":"oooh I like that.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1661765225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1662492934","html_url":"https://github.com/apache/couchdb/issues/4714#issuecomment-1662492934","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4714","id":1662492934,"node_id":"IC_kwDOAAMmUc5jF6EG","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-02T16:05:57Z","updated_at":"2023-08-02T16:05:57Z","author_association":"CONTRIBUTOR","body":"I had tried it in 2.3.1 and I see the same negative pending value behavior. Not clear if it was meant to do that (there is a plausible semantic explanation for it) or it was a genuine bug.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1662492934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1662736162","html_url":"https://github.com/apache/couchdb/issues/4714#issuecomment-1662736162","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4714","id":1662736162,"node_id":"IC_kwDOAAMmUc5jG1ci","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-02T18:26:55Z","updated_at":"2023-08-02T21:03:54Z","author_association":"CONTRIBUTOR","body":"Returning some of the same start sequence numbers comes as a side-effect of having individual shards.\r\n\r\nEach shard has an integer sequence number that's incrementing. 0 is a special \"start\" sequence value. When we emit a sequence row in the changes feed we combine all the sequences from individual shards, the numeric prefix is the sum of all the individual sequences in each range. In the regular, forward direction, all sequences initialize at 0. So if there are 2 shard ranges (q=2), 2 docs on one range and 3 on the other, we might get this sequence:\r\n```\r\n  0+1 = 1\r\n  1+1 = 2\r\n  1+2 = 3\r\n  1+3 = 4\r\n  2+3 = 5\r\n```\r\n\r\nCould also be 0+1, 0+2, 0+3, 1+3, 2+3, etc.\r\n\r\nIn the reverse case, we initialize first with the top sequence from each shard range (2 and 3) instead of 0. So then, if we don't hear from a row yet we assume it's has its top sequence (2 or 3), so we might get:\r\n```\r\n  2+3 = 5\r\n  2+3 = 5\r\n  1+3 = 4\r\n  1+2 = 3\r\n  1+1 = 2\r\n```\r\nSo we get 5 emitted twice. For a large Q we'd get a higher chance of emitting identical sum prefixes with a frequency proportional to Q or so.\r\n\r\nThe prefix bit, turns out, is mostly cosmetic, it's usually thrown away anyway when we get back a sequence in Apache CouchDB. (Though, older version of CouchDB or other couches might parse it). We can probably improve this part and attempt to emit a decrementing sum, at the expense that it won't actually match the sum of sequences from the encoded per-node sequence part (`-g1AAAAf...`) associated with it.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1662736162/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1663042658","html_url":"https://github.com/apache/couchdb/issues/4714#issuecomment-1663042658","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4714","id":1663042658,"node_id":"IC_kwDOAAMmUc5jIARi","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-02T22:13:17Z","updated_at":"2023-08-02T22:20:12Z","author_association":"CONTRIBUTOR","body":"I guess a plausible interpretation of the pending number is that it reflects both the direction and offset from the *end* of the changes feed, regardless in which direction we're traversing.\r\n\r\nIn a simple `q=1` case with `5` changes, where the end/top is `5`:\r\n\r\n * If `limit=2&descending=false` we emit `2` docs and get pending = `+3`. That is, `3` more docs to go forward to get to `5`.\r\n\r\n * If we do `limit=2&descending=true`, we get pending = `-2` since we have to go `2` docs _backwards_ to get to the `5`. \r\n\r\nI think it would make more sense to return it as a positive value, reflecting how many more rows are left till the end of the current direction of traversal. If we're traversing backwards it would be how many till we reach `0`, so it would return `3` in both cases. But, given it's been like this for quite a while I don't know if we should change it...\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1663042658/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1663252246","html_url":"https://github.com/apache/couchdb/issues/4714#issuecomment-1663252246","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4714","id":1663252246,"node_id":"IC_kwDOAAMmUc5jIzcW","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T03:52:16Z","updated_at":"2023-08-03T03:57:10Z","author_association":"CONTRIBUTOR","body":"Let's try to fix the pending value to actually return something useful:  https://github.com/apache/couchdb/pull/4715","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1663252246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1663460155","html_url":"https://github.com/apache/couchdb/issues/4714#issuecomment-1663460155","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4714","id":1663460155,"node_id":"IC_kwDOAAMmUc5jJmM7","user":{"login":"glynnbird","id":697925,"node_id":"MDQ6VXNlcjY5NzkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/697925?v=4","gravatar_id":"","url":"https://api.github.com/users/glynnbird","html_url":"https://github.com/glynnbird","followers_url":"https://api.github.com/users/glynnbird/followers","following_url":"https://api.github.com/users/glynnbird/following{/other_user}","gists_url":"https://api.github.com/users/glynnbird/gists{/gist_id}","starred_url":"https://api.github.com/users/glynnbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glynnbird/subscriptions","organizations_url":"https://api.github.com/users/glynnbird/orgs","repos_url":"https://api.github.com/users/glynnbird/repos","events_url":"https://api.github.com/users/glynnbird/events{/privacy}","received_events_url":"https://api.github.com/users/glynnbird/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T07:47:57Z","updated_at":"2023-08-03T08:37:12Z","author_association":"CONTRIBUTOR","body":"Thanks for looking @nickva and for looking at the pending value 👍.\r\n\r\nThe repeated values make it tricky, and impossible in some cases, to traverse the changes feed backwards, but it's a bit of a niche requirement (I've been using CouchDB for a decade and have never hit the changes feed with `descending=true`). ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1663460155/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1663679283","html_url":"https://github.com/apache/couchdb/issues/4714#issuecomment-1663679283","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4714","id":1663679283,"node_id":"IC_kwDOAAMmUc5jKbsz","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T09:54:08Z","updated_at":"2023-08-03T09:54:08Z","author_association":"MEMBER","body":"in theory it should be possible to fix _changes so it works in reverse order, I remember some previous fixes in this space. I suspect it's a bigger fix than this though. Just fixing the pending count but not addressing the encoded sequences doesn't seem useful. It is potentially misleading even.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1663679283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1663877082","html_url":"https://github.com/apache/couchdb/issues/4716#issuecomment-1663877082","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4716","id":1663877082,"node_id":"IC_kwDOAAMmUc5jLL_a","user":{"login":"Guytou","id":9717139,"node_id":"MDQ6VXNlcjk3MTcxMzk=","avatar_url":"https://avatars.githubusercontent.com/u/9717139?v=4","gravatar_id":"","url":"https://api.github.com/users/Guytou","html_url":"https://github.com/Guytou","followers_url":"https://api.github.com/users/Guytou/followers","following_url":"https://api.github.com/users/Guytou/following{/other_user}","gists_url":"https://api.github.com/users/Guytou/gists{/gist_id}","starred_url":"https://api.github.com/users/Guytou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Guytou/subscriptions","organizations_url":"https://api.github.com/users/Guytou/orgs","repos_url":"https://api.github.com/users/Guytou/repos","events_url":"https://api.github.com/users/Guytou/events{/privacy}","received_events_url":"https://api.github.com/users/Guytou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T12:17:08Z","updated_at":"2023-08-03T12:17:08Z","author_association":"NONE","body":"Hello, \r\nThank you in advance for your help.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1663877082/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1663999297","html_url":"https://github.com/apache/couchdb/issues/4714#issuecomment-1663999297","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4714","id":1663999297,"node_id":"IC_kwDOAAMmUc5jLp1B","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T13:36:33Z","updated_at":"2023-08-04T03:13:06Z","author_association":"CONTRIBUTOR","body":"> Just fixing the pending count but not addressing the encoded sequences doesn't seem useful. It is potentially misleading even.\r\n\r\nHmm, I don't see how the pending count fix in https://github.com/apache/couchdb/pull/4715 is misleading. It shows the number of changes left to process in the direction of the traversal. It's should be about the same level of usefulness as the forward pending count. Perhaps the pending count overall is not a terribly used thing? But at lest they can now both work in about the same way.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1663999297/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1664042557","html_url":"https://github.com/apache/couchdb/issues/4714#issuecomment-1664042557","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4714","id":1664042557,"node_id":"IC_kwDOAAMmUc5jL0Y9","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T14:02:49Z","updated_at":"2023-08-03T14:02:49Z","author_association":"MEMBER","body":"\"pending\" means \"this is how many newer changes there are yet to be received\" so it only means pending in one direction","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1664042557/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1664047780","html_url":"https://github.com/apache/couchdb/issues/4714#issuecomment-1664047780","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4714","id":1664047780,"node_id":"IC_kwDOAAMmUc5jL1qk","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T14:05:54Z","updated_at":"2023-08-03T14:10:17Z","author_association":"CONTRIBUTOR","body":"> \"pending\" means \"this is how many newer changes there are yet to be received\" \r\n\r\nExactly. That's what https://github.com/apache/couchdb/pull/4715 fixes it to be.\r\n\r\nOur [docs](https://docs.couchdb.org/en/stable/api/database/changes.html) state that:\r\n\r\n> pending (number) – Count of remaining items in the feed","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1664047780/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1664205849","html_url":"https://github.com/apache/couchdb/issues/4714#issuecomment-1664205849","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4714","id":1664205849,"node_id":"IC_kwDOAAMmUc5jMcQZ","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T15:34:00Z","updated_at":"2023-08-03T15:34:00Z","author_association":"MEMBER","body":"🤷 ok then.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1664205849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1665162827","html_url":"https://github.com/apache/couchdb/issues/4716#issuecomment-1665162827","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4716","id":1665162827,"node_id":"IC_kwDOAAMmUc5jQF5L","user":{"login":"Guytou","id":9717139,"node_id":"MDQ6VXNlcjk3MTcxMzk=","avatar_url":"https://avatars.githubusercontent.com/u/9717139?v=4","gravatar_id":"","url":"https://api.github.com/users/Guytou","html_url":"https://github.com/Guytou","followers_url":"https://api.github.com/users/Guytou/followers","following_url":"https://api.github.com/users/Guytou/following{/other_user}","gists_url":"https://api.github.com/users/Guytou/gists{/gist_id}","starred_url":"https://api.github.com/users/Guytou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Guytou/subscriptions","organizations_url":"https://api.github.com/users/Guytou/orgs","repos_url":"https://api.github.com/users/Guytou/repos","events_url":"https://api.github.com/users/Guytou/events{/privacy}","received_events_url":"https://api.github.com/users/Guytou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-04T07:45:08Z","updated_at":"2023-08-04T07:45:08Z","author_association":"NONE","body":"I have found out what was causing the issue.\r\nIt was an OS configuration fault, this specific action was blocked by SElinux security policy **deny_execmem**.\r\n\r\nI close this issue.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1665162827/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1666030736","html_url":"https://github.com/apache/couchdb/pull/4718#issuecomment-1666030736","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4718","id":1666030736,"node_id":"IC_kwDOAAMmUc5jTZyQ","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-04T18:39:09Z","updated_at":"2023-08-04T18:39:09Z","author_association":"MEMBER","body":"I need to add tests to this and intend to, just wanted to show the work so far.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1666030736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1667483112","html_url":"https://github.com/apache/couchdb/pull/4673#issuecomment-1667483112","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4673","id":1667483112,"node_id":"IC_kwDOAAMmUc5jY8Xo","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-07T09:07:06Z","updated_at":"2023-08-07T09:07:06Z","author_association":"MEMBER","body":"> Currently this PR has no description, and I wonder if you could add some high level documentation of how this works, or maybe link to an architectural document?\r\n\r\nsorry for not making this explicit, but if you follow the superseded PRs backwards, you should find more commentary that I didn’t think was necessary to repeat here. The main design is outlined here: https://github.com/apache/couchdb-documentation/pull/424","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1667483112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1667485441","html_url":"https://github.com/apache/couchdb/pull/4673#issuecomment-1667485441","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4673","id":1667485441,"node_id":"IC_kwDOAAMmUc5jY88B","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-07T09:08:35Z","updated_at":"2023-08-07T09:08:35Z","author_association":"MEMBER","body":"> I also noticed a few TODO and other comments that I'm guessing need to still be addressed or removed?\r\n\r\nthanks and yes, these are all minor or already resolved, but not cleaned up yet. None of these should be major changes. I wanted to get a review on the general shape before getting everything into perfect shape.\r\n\r\nAlso thanks for the compiler warnings pass, I’ll get to those.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1667485441/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1667546917","html_url":"https://github.com/apache/couchdb/pull/4673#issuecomment-1667546917","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4673","id":1667546917,"node_id":"IC_kwDOAAMmUc5jZL8l","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-07T09:49:31Z","updated_at":"2023-08-07T09:49:31Z","author_association":"MEMBER","body":"latest push fixes compiler warnings noted by Jay","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1667546917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1668066441","html_url":"https://github.com/apache/couchdb/pull/4718#issuecomment-1668066441","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4718","id":1668066441,"node_id":"IC_kwDOAAMmUc5jbKyJ","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-07T15:14:00Z","updated_at":"2023-08-07T15:14:00Z","author_association":"CONTRIBUTOR","body":"Overall this looks like what we would want to happen: as soon as we update the ddoc we can clean up the old index data. \r\n\r\nWith the ddoc trigger one thing I was worried about is the case when we get a ddoc_updated on one node first, and not the others yet: we make a clustered call to get all the ddocs and get the signatures, what if that's stale since it happens concurrently with the `ddoc_updated`, would there be a chance we'd remove the new index file we just created? Maybe it's a low enough chance of happening that it's not a problem as long as it eventually sorts itself out. (We delete the newly building index file but then it gets rebuilt quickly anyway).\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1668066441/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1668145671","html_url":"https://github.com/apache/couchdb/pull/4718#issuecomment-1668145671","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4718","id":1668145671,"node_id":"IC_kwDOAAMmUc5jbeIH","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-07T15:59:17Z","updated_at":"2023-08-07T15:59:17Z","author_association":"MEMBER","body":"that's an excellent point, we must ensure that cannot happen, at least not with any higher probability than the existing cleanup code for mrview.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1668145671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1669061182","html_url":"https://github.com/apache/couchdb/issues/4723#issuecomment-1669061182","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4723","id":1669061182,"node_id":"IC_kwDOAAMmUc5je9o-","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T07:26:55Z","updated_at":"2023-08-08T07:48:34Z","author_association":"MEMBER","body":"a suggestion to do `--allow_unauthenticated` is not something that should land in our official docs. \r\n\r\n(aside: what was the point of importing our key manually if the signature is then ignored?)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1669061182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1669668319","html_url":"https://github.com/apache/couchdb/issues/4723#issuecomment-1669668319","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4723","id":1669668319,"node_id":"IC_kwDOAAMmUc5jhR3f","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T13:54:37Z","updated_at":"2023-08-08T13:54:37Z","author_association":"CONTRIBUTOR","body":"Agree, those were just the steps that user took, I copy pasted them verbatim.\r\n\r\nI never heard of “hardened” Ubuntu either. Wonder if it has fewer root certificates, or silently ignored our public key…\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1669668319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1669687409","html_url":"https://github.com/apache/couchdb/issues/4723#issuecomment-1669687409","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4723","id":1669687409,"node_id":"IC_kwDOAAMmUc5jhWhx","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T14:05:04Z","updated_at":"2023-08-08T14:05:04Z","author_association":"MEMBER","body":"🤷 it makes no sense to choose a hardened OS image and then install unauthenticated software on top.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1669687409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1669733896","html_url":"https://github.com/apache/couchdb/issues/4723#issuecomment-1669733896","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4723","id":1669733896,"node_id":"IC_kwDOAAMmUc5jhh4I","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T14:27:48Z","updated_at":"2023-08-08T14:27:48Z","author_association":"CONTRIBUTOR","body":"I think it's still interesting for us to figure out if is there a way to do it properly. They are probably not the first user to encounter these \"hardened\" images. I do not have access to AWS but perhaps someone else does and can try it out.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1669733896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1669735431","html_url":"https://github.com/apache/couchdb/issues/4723#issuecomment-1669735431","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4723","id":1669735431,"node_id":"IC_kwDOAAMmUc5jhiQH","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T14:28:37Z","updated_at":"2023-08-08T14:28:37Z","author_association":"MEMBER","body":"oh, for sure. we should update our advice on how to do it securely, if it's possible within the CIS strictures.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1669735431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1671145061","html_url":"https://github.com/apache/couchdb/issues/4706#issuecomment-1671145061","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4706","id":1671145061,"node_id":"IC_kwDOAAMmUc5jm6Zl","user":{"login":"jjrodrig","id":1001724,"node_id":"MDQ6VXNlcjEwMDE3MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1001724?v=4","gravatar_id":"","url":"https://api.github.com/users/jjrodrig","html_url":"https://github.com/jjrodrig","followers_url":"https://api.github.com/users/jjrodrig/followers","following_url":"https://api.github.com/users/jjrodrig/following{/other_user}","gists_url":"https://api.github.com/users/jjrodrig/gists{/gist_id}","starred_url":"https://api.github.com/users/jjrodrig/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jjrodrig/subscriptions","organizations_url":"https://api.github.com/users/jjrodrig/orgs","repos_url":"https://api.github.com/users/jjrodrig/repos","events_url":"https://api.github.com/users/jjrodrig/events{/privacy}","received_events_url":"https://api.github.com/users/jjrodrig/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-09T11:23:49Z","updated_at":"2023-08-09T11:23:49Z","author_association":"CONTRIBUTOR","body":"Hi @pgj!\r\n\r\n I've been checking this issue. \r\n Initially I had the same error related to ibrowse. I fully cleaned up the elixir environment and then a new issue appears with the jiffy module.\r\n\r\nCould you try if it is the same for you?\r\n\r\n1 - Clean CouchDB build\r\n`make clean`\r\n2 - Clean up elixir build artifacts\r\n```\r\n mix clean --deps\r\n rm src/*/_build\r\n rm _build\r\n``` \r\n3 - Rebuild CouchDB and test\r\n```\r\n make couch elixir\r\n```\r\n\r\nI get this kind of errors\r\n```\r\n 1) test Basic reduce functions (ReduceTest)\r\n     test/elixir/test/reduce_test.exs:16\r\n     ** (UndefinedFunctionError) function :jiffy.decode/2 is undefined (module :jiffy is not available)\r\n     stacktrace:\r\n       (jiffy 1.0.9) :jiffy.decode(\"{\\\"ok\\\":true}\\n\", [:return_maps])\r\n```\r\n\r\nIf it is the case, I think the problem is related to this change (https://hexdocs.pm/elixir/1.15.4/changelog.html#potential-incompatibilities)\r\n\r\nBy adding `prune_code_paths: false`  to the project section in mix.exs file solves the issue for me, around line 49 on the file.\r\n \r\n```\r\n  def project do\r\n    [\r\n      app: :couchdbtest,\r\n      version: \"0.1.0\",\r\n      elixir: \"~> 1.13\",\r\n      lockfile: Path.expand(\"mix.lock\", __DIR__),\r\n      deps_path: Path.expand(\"src\", __DIR__),\r\n      build_path: Path.expand(\"_build\", __DIR__),\r\n      compilers: [:elixir, :app],\r\n      start_permanent: Mix.env() == :prod,\r\n      build_embedded: Mix.env() == :prod,\r\n      deps: deps(),\r\n      consolidate_protocols: Mix.env() not in [:test, :dev, :integration],\r\n      test_paths: get_test_paths(Mix.env()),\r\n      elixirc_paths: elixirc_paths(Mix.env()),\r\n      prune_code_paths: false,\r\n      test_coverage: [\r\n        tool: CoverTool,\r\n        dirs: get_coverage_paths(),\r\n        type: \"html\"\r\n      ]\r\n    ]\r\n  end\r\n```\r\n\r\nSeems to be a temporary solution but unlock the build using Elixir 1.15. I'll prepare a PR with this change.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1671145061/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1672091747","html_url":"https://github.com/apache/couchdb/issues/4706#issuecomment-1672091747","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4706","id":1672091747,"node_id":"IC_kwDOAAMmUc5jqhhj","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-09T20:20:43Z","updated_at":"2023-08-09T20:20:43Z","author_association":"CONTRIBUTOR","body":"Hi @jjrodrig :  Yes, this issue sometimes happens with `jiffy` as well.  I have experimented with the `prune_code_paths` compiler flag too, but it looks like I put that to a wrong place because I could not see any improvements.  But it is good that I was proven to be wrong and I am happy to test your PR.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1672091747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1672143609","html_url":"https://github.com/apache/couchdb/issues/4706#issuecomment-1672143609","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4706","id":1672143609,"node_id":"IC_kwDOAAMmUc5jquL5","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-09T21:01:20Z","updated_at":"2023-08-09T21:01:20Z","author_association":"CONTRIBUTOR","body":"Wonder if there is a way to declare a proper dependency on `jiffy` if we're actually using it.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1672143609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1672184062","html_url":"https://github.com/apache/couchdb/issues/4448#issuecomment-1672184062","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4448","id":1672184062,"node_id":"IC_kwDOAAMmUc5jq4D-","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-09T21:35:05Z","updated_at":"2023-08-09T21:35:05Z","author_association":"CONTRIBUTOR","body":"Updated PR https://github.com/apache/couchdb/pull/4627 with a wip skeleton of a `couch_scanner` app.\r\n\r\n`couch_scanner` is an applications which knows how to scan databases/design_docs in the background, at a low rate, with periodic checkpointing. The idea, as discussed during the dev meeting a month or two ago, is to use it compare quickjs engine output with sm output and report discrepancies/incompatibilities as an extra safety for users to verify they can switch to the new js engine. Other uses could be to accumulate some cluster-wide states: total index sizes, some ddoc features (any docs using `lists` or `shows`) etc. \r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1672184062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1672940134","html_url":"https://github.com/apache/couchdb/issues/4706#issuecomment-1672940134","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4706","id":1672940134,"node_id":"IC_kwDOAAMmUc5jtwpm","user":{"login":"jjrodrig","id":1001724,"node_id":"MDQ6VXNlcjEwMDE3MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1001724?v=4","gravatar_id":"","url":"https://api.github.com/users/jjrodrig","html_url":"https://github.com/jjrodrig","followers_url":"https://api.github.com/users/jjrodrig/followers","following_url":"https://api.github.com/users/jjrodrig/following{/other_user}","gists_url":"https://api.github.com/users/jjrodrig/gists{/gist_id}","starred_url":"https://api.github.com/users/jjrodrig/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jjrodrig/subscriptions","organizations_url":"https://api.github.com/users/jjrodrig/orgs","repos_url":"https://api.github.com/users/jjrodrig/repos","events_url":"https://api.github.com/users/jjrodrig/events{/privacy}","received_events_url":"https://api.github.com/users/jjrodrig/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-10T10:11:06Z","updated_at":"2023-08-10T10:11:06Z","author_association":"CONTRIBUTOR","body":"Jiffy is used for encoding/decoding requests/responses during testing. It is a core element in the elixir test suite. \r\n\r\nI was checking what is wrong with this dependency but I din't found anything. \r\n\r\nJiffy is properly declared as a local elixir dependency in mix.exs file. \r\n```\r\ndefp deps() do\r\n    deps_list = [\r\n      {:junit_formatter, \"~> 3.0\", only: [:dev, :test, :integration]},\r\n      {:httpotion, \">= 3.1.3\", only: [:dev, :test, :integration], runtime: false},\r\n      {:excoveralls, \"~> 0.12\", only: :test},\r\n      {:b64url, path: path(\"b64url\")},\r\n      {:jiffy, path: path(\"jiffy\")},\r\n      {:jwtf, path: path(\"jwtf\")},\r\n      {:ibrowse, path: path(\"ibrowse\"), override: true},\r\n      {:credo, \"~> 1.6.4\", only: [:dev, :test, :integration], runtime: false}\r\n    ]\r\n ...\r\n```\r\n`MIX_ENV=integration mix deps` responds that dependency is ok\r\n```\r\n jiffy 1.0.9 (/Users/juanjo/projects/couchdb/src/jiffy) (rebar3)\r\n  ok\r\n```\r\n\r\nElixir 1.15 release notes indicates this potential incompatibility. \r\n\r\n> Due to the code path pruning, if you have an application or dependency that does not specify its dependencies on Erlang and Elixir application, it may no longer compile successfully in Elixir v1.15. You can temporarily disable code path pruning by setting prune_code_paths: false in your mix.exs, although doing so may lead to runtime bugs that are only manifested inside a [mix release](https://hexdocs.pm/mix/1.15/Mix.Tasks.Release.html)\r\n\r\nIn our case, if we set `prune_code_paths: false` tests works, but if we unset this property tests compile but fail to load `jiffy` at runtime. Any clue about what to check will be apreciated.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1672940134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1672947268","html_url":"https://github.com/apache/couchdb/issues/4706#issuecomment-1672947268","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4706","id":1672947268,"node_id":"IC_kwDOAAMmUc5jtyZE","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-10T10:14:43Z","updated_at":"2023-08-10T10:14:43Z","author_association":"CONTRIBUTOR","body":"`jiffy` uses a couple of NIFs -- maybe that is related?  I have faced similar problems when I tried to use `jiffy` in a project where I wanted to do `rebar3 escriptize`.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1672947268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1674052322","html_url":"https://github.com/apache/couchdb/issues/4639#issuecomment-1674052322","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4639","id":1674052322,"node_id":"IC_kwDOAAMmUc5jyALi","user":{"login":"smulikHakipod","id":4186903,"node_id":"MDQ6VXNlcjQxODY5MDM=","avatar_url":"https://avatars.githubusercontent.com/u/4186903?v=4","gravatar_id":"","url":"https://api.github.com/users/smulikHakipod","html_url":"https://github.com/smulikHakipod","followers_url":"https://api.github.com/users/smulikHakipod/followers","following_url":"https://api.github.com/users/smulikHakipod/following{/other_user}","gists_url":"https://api.github.com/users/smulikHakipod/gists{/gist_id}","starred_url":"https://api.github.com/users/smulikHakipod/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/smulikHakipod/subscriptions","organizations_url":"https://api.github.com/users/smulikHakipod/orgs","repos_url":"https://api.github.com/users/smulikHakipod/repos","events_url":"https://api.github.com/users/smulikHakipod/events{/privacy}","received_events_url":"https://api.github.com/users/smulikHakipod/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-10T23:33:01Z","updated_at":"2023-08-11T00:20:35Z","author_association":"NONE","body":"Did you guys (@jdai1 ) found any solution? I am trying to as well to replicate `replicate.npmjs.com` with the same error., `_ensure_full_commit` just time out and crash the entire job.\r\nI tired using @nickva parameters without much success :(\r\nEdit: I don't think `replicate.npmjs.com` supports checkpoints, as the checkpoints needs to be saved on their server and I doubt they support that.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1674052322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1675144766","html_url":"https://github.com/apache/couchdb/issues/4725#issuecomment-1675144766","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4725","id":1675144766,"node_id":"IC_kwDOAAMmUc5j2K4-","user":{"login":"KangTheTerrible","id":7072176,"node_id":"MDQ6VXNlcjcwNzIxNzY=","avatar_url":"https://avatars.githubusercontent.com/u/7072176?v=4","gravatar_id":"","url":"https://api.github.com/users/KangTheTerrible","html_url":"https://github.com/KangTheTerrible","followers_url":"https://api.github.com/users/KangTheTerrible/followers","following_url":"https://api.github.com/users/KangTheTerrible/following{/other_user}","gists_url":"https://api.github.com/users/KangTheTerrible/gists{/gist_id}","starred_url":"https://api.github.com/users/KangTheTerrible/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KangTheTerrible/subscriptions","organizations_url":"https://api.github.com/users/KangTheTerrible/orgs","repos_url":"https://api.github.com/users/KangTheTerrible/repos","events_url":"https://api.github.com/users/KangTheTerrible/events{/privacy}","received_events_url":"https://api.github.com/users/KangTheTerrible/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-11T17:33:13Z","updated_at":"2023-08-11T17:33:47Z","author_association":"CONTRIBUTOR","body":"Additional piece of useful info, it seems that while the index is running for the first time I got this from the erlang views metadata, the leaking erlang procs appear to be the \"clients waiting for the index\".\r\n\r\n```\r\n_design/erlangstatsstats Metadata\r\nIndex Information\r\nLanguage:Erlang\r\nCurrently being updated?Yes\r\nCurrently running compaction?Yes\r\nWaiting for a commit?Yes\r\nClients waiting for the index:719422\r\nUpdate sequence on DB:257926611\r\nProcessed purge sequence:0\r\nActual data size (bytes):602,563,809,246\r\nData size on disk (bytes):1,187,591,035,418\r\nMD5 Signature:","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1675144766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677792954","html_url":"https://github.com/apache/couchdb/issues/4730#issuecomment-1677792954","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4730","id":1677792954,"node_id":"IC_kwDOAAMmUc5kARa6","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-14T17:38:39Z","updated_at":"2023-08-14T17:38:39Z","author_association":"MEMBER","body":"That's not a crash (though it does look alarming if you're new to couchdb). Just create the `_users` database and it'll stop. It's harmless, but noisy.\r\n\r\nAre you also reporting a crash or was this it?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677792954/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677819048","html_url":"https://github.com/apache/couchdb/issues/4730#issuecomment-1677819048","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4730","id":1677819048,"node_id":"IC_kwDOAAMmUc5kAXyo","user":{"login":"mrappard","id":1963303,"node_id":"MDQ6VXNlcjE5NjMzMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1963303?v=4","gravatar_id":"","url":"https://api.github.com/users/mrappard","html_url":"https://github.com/mrappard","followers_url":"https://api.github.com/users/mrappard/followers","following_url":"https://api.github.com/users/mrappard/following{/other_user}","gists_url":"https://api.github.com/users/mrappard/gists{/gist_id}","starred_url":"https://api.github.com/users/mrappard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrappard/subscriptions","organizations_url":"https://api.github.com/users/mrappard/orgs","repos_url":"https://api.github.com/users/mrappard/repos","events_url":"https://api.github.com/users/mrappard/events{/privacy}","received_events_url":"https://api.github.com/users/mrappard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-14T17:57:47Z","updated_at":"2023-08-14T18:02:40Z","author_association":"NONE","body":"Again... it's one of those things that becomes clear when your seeing it, but the Application (Apache CouchDB) from the Application folder, repeatedly crashes (The computer hangs for a moment then it works then it hangs for a moment over and over again)\r\n\r\nAnd this is with a Fresh Install.\r\n\r\nI.E. Yes it needs access to the _users database, but I think there is a _users database it's unable to access it.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677819048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677822750","html_url":"https://github.com/apache/couchdb/issues/4730#issuecomment-1677822750","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4730","id":1677822750,"node_id":"IC_kwDOAAMmUc5kAYse","user":{"login":"mrappard","id":1963303,"node_id":"MDQ6VXNlcjE5NjMzMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1963303?v=4","gravatar_id":"","url":"https://api.github.com/users/mrappard","html_url":"https://github.com/mrappard","followers_url":"https://api.github.com/users/mrappard/followers","following_url":"https://api.github.com/users/mrappard/following{/other_user}","gists_url":"https://api.github.com/users/mrappard/gists{/gist_id}","starred_url":"https://api.github.com/users/mrappard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrappard/subscriptions","organizations_url":"https://api.github.com/users/mrappard/orgs","repos_url":"https://api.github.com/users/mrappard/repos","events_url":"https://api.github.com/users/mrappard/events{/privacy}","received_events_url":"https://api.github.com/users/mrappard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-14T18:00:28Z","updated_at":"2023-08-14T18:23:30Z","author_association":"NONE","body":"Here is the Crash Report \r\n\r\n```\r\n-------------------------------------\r\nTranslated Report (Full Report Below)\r\n-------------------------------------\r\n\r\nProcess:               beam.smp [1091]\r\nPath:                  /Applications/Apache CouchDB.app/Contents/Resources/couchdbx-core/erts-13.2/bin/beam.smp\r\nIdentifier:            beam.smp\r\nVersion:               ???\r\nCode Type:             ARM-64 (Native)\r\nParent Process:        Apache CouchDB [917]\r\nResponsible:           Apache CouchDB [917]\r\nUser ID:               501\r\n\r\nDate/Time:             2023-08-14 13:59:35.3941 -0400\r\nOS Version:            macOS 14.0 (23A5312d)\r\nReport Version:        12\r\nAnonymous UUID:        079DC458-6D9E-B11E-FABD-8462B65BC4D2\r\n\r\n\r\nTime Awake Since Boot: 88 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_BAD_ACCESS (SIGBUS)\r\nException Codes:       KERN_PROTECTION_FAILURE at 0x0000000101660000\r\nException Codes:       0x0000000000000002, 0x0000000101660000\r\n\r\nTermination Reason:    Namespace SIGNAL, Code 10 Bus error: 10\r\nTerminating Process:   exc handler [1091]\r\n\r\nVM Region Info: 0x101660000 is in 0x101660000-0x101680000;  bytes after start: 0  bytes before end: 131071\r\n      REGION TYPE                    START - END         [ VSIZE] PRT/MAX SHRMOD  REGION DETAIL\r\n      VM_ALLOCATE                 101560000-101660000    [ 1024K] rw-/rwx SM=PRV  \r\n--->  VM_ALLOCATE                 101660000-101680000    [  128K] rwx/rwx SM=PRV  \r\n      GAP OF 0x24000 BYTES\r\n      dyld private memory         1016a4000-1016e4000    [  256K] rw-/rwx SM=PRV  \r\n\r\nThread 0 Crashed::  Dispatch queue: com.apple.main-thread\r\n0   libsystem_platform.dylib      \t       0x1806a16f8 _platform_memmove + 168\r\n1   beam.smp                      \t       0x100f09b08 asmjit::_abi_1_9::CodeHolder::copyFlattenedData(void*, unsigned long, asmjit::_abi_1_9::CopySectionFlags) + 120\r\n2   beam.smp                      \t       0x100ed24c4 BeamGlobalAssembler::BeamGlobalAssembler(asmjit::_abi_1_9::JitAllocator*) + 640\r\n3   beam.smp                      \t       0x100ee1878 beamasm_init + 288\r\n4   beam.smp                      \t       0x100f41f8c erl_start + 9656\r\n5   beam.smp                      \t       0x100eb591c main + 12\r\n6   dyld                          \t       0x1802f9058 start + 2224\r\n\r\nThread 1:: sys_sig_dispatc\r\n0   libsystem_kernel.dylib        \t       0x180633474 read + 8\r\n1   beam.smp                      \t       0x1010851a8 signal_dispatcher_thread_func + 104\r\n2   beam.smp                      \t       0x1010e7804 thr_wrapper + 168\r\n3   libsystem_pthread.dylib       \t       0x180673034 _pthread_start + 136\r\n4   libsystem_pthread.dylib       \t       0x18066de3c thread_start + 8\r\n\r\nThread 2:: sys_msg_dispatc\r\n0   libsystem_kernel.dylib        \t       0x1806360ac __psynch_cvwait + 8\r\n1   libsystem_pthread.dylib       \t       0x1806735fc _pthread_cond_wait + 1228\r\n2   beam.smp                      \t       0x1010e5444 ethr_cond_wait + 12\r\n3   beam.smp                      \t       0x100f66d0c erts_cnd_wait + 180\r\n4   beam.smp                      \t       0x100f66b88 sys_msg_dispatcher_wait + 44\r\n5   beam.smp                      \t       0x100fe9838 erts_thr_progress_register_managed_thread + 584\r\n6   beam.smp                      \t       0x100f66330 sys_msg_dispatcher_func + 112\r\n7   beam.smp                      \t       0x1010e7804 thr_wrapper + 168\r\n8   libsystem_pthread.dylib       \t       0x180673034 _pthread_start + 136\r\n9   libsystem_pthread.dylib       \t       0x18066de3c thread_start + 8\r\n\r\n\r\nThread 0 crashed with ARM Thread State (64-bit):\r\n    x0: 0x0000000101660000   x1: 0x000000013480d240   x2: 0x0000000000001ef0   x3: 0x0000000101660020\r\n    x4: 0x00000000331ad200   x5: 0x0000000000000020   x6: 0x00000001011221e0   x7: 0x00000001011221c0\r\n    x8: 0x0000000101660000   x9: 0x0000000000000000  x10: 0x0000000000000000  x11: 0x0000000000000000\r\n   x12: 0x00000001348082e0  x13: 0x0000000000000000  x14: 0x0000600003de8000  x15: 0x0000000000000001\r\n   x16: 0x00000001806a1650  x17: 0x0000000000000000  x18: 0x0000000000000000  x19: 0x0000000000001f10\r\n   x20: 0x0000000000001f10  x21: 0x0000000000000001  x22: 0x0000000000001f10  x23: 0x0000000101660000\r\n   x24: 0x0000000134808260  x25: 0x0000000000000000  x26: 0x0000000134808240  x27: 0x0000000000000010\r\n   x28: 0x0000000000000000   fp: 0x000000016ef4e980   lr: 0x0000000100f09b08\r\n    sp: 0x000000016ef4e920   pc: 0x00000001806a16f8 cpsr: 0x80001000\r\n   far: 0x0000000101660000  esr: 0x9200004f (Data Abort) byte write Permission fault\r\n\r\nBinary Images:\r\n       0x100eb0000 -        0x1011b7fff beam.smp (*) <e55f1ae8-343b-3b47-a8c6-ac00e054abaa> /Applications/Apache CouchDB.app/Contents/Resources/couchdbx-core/erts-13.2/bin/beam.smp\r\n       0x18069e000 -        0x1806a4ffb libsystem_platform.dylib (*) <e0882bf0-1ddf-32f7-b839-df904b1bc220> /usr/lib/system/libsystem_platform.dylib\r\n       0x1802f3000 -        0x18038686f dyld (*) <197a2824-ba58-3ff4-8c52-399ae7ba8457> /usr/lib/dyld\r\n               0x0 - 0xffffffffffffffff ??? (*) <00000000-0000-0000-0000-000000000000> ???\r\n       0x180631000 -        0x18066bfef libsystem_kernel.dylib (*) <34754346-13eb-3436-9244-5d697f1b3ab6> /usr/lib/system/libsystem_kernel.dylib\r\n       0x18066c000 -        0x180678ff3 libsystem_pthread.dylib (*) <c7c679c8-ed5a-351e-bade-bbca3631b70e> /usr/lib/system/libsystem_pthread.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=1.1G resident=0K(0%) swapped_out_or_unallocated=1.1G(100%)\r\nWritable regions: Total=702.9M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=702.9M(100%)\r\n\r\n                                VIRTUAL   REGION \r\nREGION TYPE                        SIZE    COUNT (non-coalesced) \r\n===========                     =======  ======= \r\nActivity Tracing                   256K        1 \r\nKernel Alloc Once                   32K        1 \r\nMALLOC                           684.2M       19 \r\nMALLOC guard page                   96K        6 \r\nSTACK GUARD                       56.0M        3 \r\nStack                             9264K        3 \r\nVM_ALLOCATE                        1.0G        9 \r\n__AUTH                             714K      162 \r\n__AUTH_CONST                      12.6M      311 \r\n__DATA                            3454K      298 \r\n__DATA_CONST                      15.3M      314 \r\n__DATA_DIRTY                       695K      104 \r\n__FONT_DATA                          4K        1 \r\n__LINKEDIT                       884.0M        2 \r\n__OBJC_RO                         70.5M        1 \r\n__OBJC_RW                         2149K        1 \r\n__TEXT                           240.0M      328 \r\ndyld private memory                272K        2 \r\nmapped file                         64K        1 \r\nshared memory                       80K        4 \r\n===========                     =======  ======= \r\nTOTAL                              2.9G     1571 \r\n\r\n\r\n\r\n-----------\r\nFull Report\r\n-----------\r\n\r\n{\"app_name\":\"beam.smp\",\"timestamp\":\"2023-08-14 13:59:35.00 -0400\",\"app_version\":\"\",\"slice_uuid\":\"e55f1ae8-343b-3b47-a8c6-ac00e054abaa\",\"build_version\":\"\",\"platform\":1,\"share_with_app_devs\":0,\"is_first_party\":1,\"bug_type\":\"309\",\"os_version\":\"macOS 14.0 (23A5312d)\",\"roots_installed\":0,\"incident_id\":\"9B6E2D7D-5630-4261-8666-383BDBD9EF20\",\"name\":\"beam.smp\"}\r\n{\r\n  \"uptime\" : 88,\r\n  \"procRole\" : \"Unspecified\",\r\n  \"version\" : 2,\r\n  \"userID\" : 501,\r\n  \"deployVersion\" : 210,\r\n  \"modelCode\" : \"MacBookPro18,3\",\r\n  \"coalitionID\" : 1012,\r\n  \"osVersion\" : {\r\n    \"train\" : \"macOS 14.0\",\r\n    \"build\" : \"23A5312d\",\r\n    \"releaseType\" : \"User\"\r\n  },\r\n  \"captureTime\" : \"2023-08-14 13:59:35.3941 -0400\",\r\n  \"codeSigningMonitor\" : 1,\r\n  \"incident\" : \"9B6E2D7D-5630-4261-8666-383BDBD9EF20\",\r\n  \"pid\" : 1091,\r\n  \"translated\" : false,\r\n  \"cpuType\" : \"ARM-64\",\r\n  \"roots_installed\" : 0,\r\n  \"bug_type\" : \"309\",\r\n  \"procLaunch\" : \"2023-08-14 13:59:35.2584 -0400\",\r\n  \"procStartAbsTime\" : 2111223778,\r\n  \"procExitAbsTime\" : 2114438309,\r\n  \"procName\" : \"beam.smp\",\r\n  \"procPath\" : \"\\/Applications\\/Apache CouchDB.app\\/Contents\\/Resources\\/couchdbx-core\\/erts-13.2\\/bin\\/beam.smp\",\r\n  \"parentProc\" : \"Apache CouchDB\",\r\n  \"parentPid\" : 917,\r\n  \"coalitionName\" : \"org.apache.couchdb\",\r\n  \"crashReporterKey\" : \"079DC458-6D9E-B11E-FABD-8462B65BC4D2\",\r\n  \"responsiblePid\" : 917,\r\n  \"responsibleProc\" : \"Apache CouchDB\",\r\n  \"codeSigningID\" : \"beam\",\r\n  \"codeSigningTeamID\" : \"5FZCA65884\",\r\n  \"codeSigningFlags\" : 570491649,\r\n  \"codeSigningValidationCategory\" : 6,\r\n  \"codeSigningTrustLevel\" : 4294967295,\r\n  \"instructionByteStream\" : {\"beforePC\":\"YgwBrMADX9ZjgACRY+h7kiIMQKxlAADLIQAFiyAEQKwhgACRQgAFyw==\",\"atPC\":\"AgwArUIAAfHpAABUYAQArWOAAJEgBECsIYAAkUKAAPFo\\/\\/9UIQACiw==\"},\r\n  \"sip\" : \"enabled\",\r\n  \"vmRegionInfo\" : \"0x101660000 is in 0x101660000-0x101680000;  bytes after start: 0  bytes before end: 131071\\n      REGION TYPE                    START - END         [ VSIZE] PRT\\/MAX SHRMOD  REGION DETAIL\\n      VM_ALLOCATE                 101560000-101660000    [ 1024K] rw-\\/rwx SM=PRV  \\n--->  VM_ALLOCATE                 101660000-101680000    [  128K] rwx\\/rwx SM=PRV  \\n      GAP OF 0x24000 BYTES\\n      dyld private memory         1016a4000-1016e4000    [  256K] rw-\\/rwx SM=PRV  \",\r\n  \"exception\" : {\"codes\":\"0x0000000000000002, 0x0000000101660000\",\"rawCodes\":[2,4318429184],\"type\":\"EXC_BAD_ACCESS\",\"signal\":\"SIGBUS\",\"subtype\":\"KERN_PROTECTION_FAILURE at 0x0000000101660000\"},\r\n  \"termination\" : {\"flags\":0,\"code\":10,\"namespace\":\"SIGNAL\",\"indicator\":\"Bus error: 10\",\"byProc\":\"exc handler\",\"byPid\":1091},\r\n  \"vmregioninfo\" : \"0x101660000 is in 0x101660000-0x101680000;  bytes after start: 0  bytes before end: 131071\\n      REGION TYPE                    START - END         [ VSIZE] PRT\\/MAX SHRMOD  REGION DETAIL\\n      VM_ALLOCATE                 101560000-101660000    [ 1024K] rw-\\/rwx SM=PRV  \\n--->  VM_ALLOCATE                 101660000-101680000    [  128K] rwx\\/rwx SM=PRV  \\n      GAP OF 0x24000 BYTES\\n      dyld private memory         1016a4000-1016e4000    [  256K] rw-\\/rwx SM=PRV  \",\r\n  \"extMods\" : {\"caller\":{\"thread_create\":0,\"thread_set_state\":0,\"task_for_pid\":0},\"system\":{\"thread_create\":0,\"thread_set_state\":0,\"task_for_pid\":0},\"targeted\":{\"thread_create\":0,\"thread_set_state\":0,\"task_for_pid\":0},\"warnings\":0},\r\n  \"faultingThread\" : 0,\r\n  \"threads\" : [{\"triggered\":true,\"id\":10764,\"threadState\":{\"x\":[{\"value\":4318429184},{\"value\":5175824960},{\"value\":7920},{\"value\":4318429216},{\"value\":857395712},{\"value\":32},{\"value\":4312932832,\"symbolLocation\":32,\"symbol\":\"asmjit::_abi_1_9::EmitterUtils::noExt\"},{\"value\":4312932800,\"symbolLocation\":0,\"symbol\":\"asmjit::_abi_1_9::EmitterUtils::noExt\"},{\"value\":4318429184},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":5175804640},{\"value\":0},{\"value\":105553181179904},{\"value\":1},{\"value\":6449403472,\"symbolLocation\":0,\"symbol\":\"_platform_memmove\"},{\"value\":0},{\"value\":0},{\"value\":7952},{\"value\":7952},{\"value\":1},{\"value\":7952},{\"value\":4318429184},{\"value\":5175804512},{\"value\":0},{\"value\":5175804480},{\"value\":16},{\"value\":0}],\"flavor\":\"ARM_THREAD_STATE64\",\"lr\":{\"value\":4310735624},\"cpsr\":{\"value\":2147487744},\"fp\":{\"value\":6156511616},\"sp\":{\"value\":6156511520},\"esr\":{\"value\":2449473615,\"description\":\"(Data Abort) byte write Permission fault\"},\"pc\":{\"value\":6449403640,\"matchesCrashFrame\":1},\"far\":{\"value\":4318429184}},\"queue\":\"com.apple.main-thread\",\"frames\":[{\"imageOffset\":14072,\"symbol\":\"_platform_memmove\",\"symbolLocation\":168,\"imageIndex\":1},{\"imageOffset\":367368,\"symbol\":\"asmjit::_abi_1_9::CodeHolder::copyFlattenedData(void*, unsigned long, asmjit::_abi_1_9::CopySectionFlags)\",\"symbolLocation\":120,\"imageIndex\":0},{\"imageOffset\":140484,\"symbol\":\"BeamGlobalAssembler::BeamGlobalAssembler(asmjit::_abi_1_9::JitAllocator*)\",\"symbolLocation\":640,\"imageIndex\":0},{\"imageOffset\":202872,\"symbol\":\"beamasm_init\",\"symbolLocation\":288,\"imageIndex\":0},{\"imageOffset\":597900,\"symbol\":\"erl_start\",\"symbolLocation\":9656,\"imageIndex\":0},{\"imageOffset\":22812,\"symbol\":\"main\",\"symbolLocation\":12,\"imageIndex\":0},{\"imageOffset\":24664,\"symbol\":\"start\",\"symbolLocation\":2224,\"imageIndex\":2}]},{\"id\":10767,\"name\":\"sys_sig_dispatc\",\"threadState\":{\"x\":[{\"value\":4},{\"value\":0},{\"value\":4},{\"value\":6157070432},{\"value\":6156512136},{\"value\":15},{\"value\":27993984541616484},{\"value\":0},{\"value\":59},{\"value\":1},{\"value\":1},{\"value\":4314497712},{\"value\":4314497712},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":3},{\"value\":8066811672},{\"value\":0},{\"value\":0},{\"value\":4313649152,\"symbolLocation\":96,\"symbol\":\"compose_tab_27_3\"},{\"value\":6157070088},{\"value\":4},{\"value\":4312290328},{\"value\":128},{\"value\":30347},{\"value\":18446744073709551615},{\"value\":4313579680,\"symbolLocation\":0,\"symbol\":\"erts_allctrs\"},{\"value\":0}],\"flavor\":\"ARM_THREAD_STATE64\",\"lr\":{\"value\":4312289704},\"cpsr\":{\"value\":1610616832},\"fp\":{\"value\":6157070208},\"sp\":{\"value\":6157070048},\"esr\":{\"value\":1442840704,\"description\":\" Address size fault\"},\"pc\":{\"value\":6448952436},\"far\":{\"value\":6157070336}},\"frames\":[{\"imageOffset\":9332,\"symbol\":\"read\",\"symbolLocation\":8,\"imageIndex\":4},{\"imageOffset\":1921448,\"symbol\":\"signal_dispatcher_thread_func\",\"symbolLocation\":104,\"imageIndex\":0},{\"imageOffset\":2324484,\"symbol\":\"thr_wrapper\",\"symbolLocation\":168,\"imageIndex\":0},{\"imageOffset\":28724,\"symbol\":\"_pthread_start\",\"symbolLocation\":136,\"imageIndex\":5},{\"imageOffset\":7740,\"symbol\":\"thread_start\",\"symbolLocation\":8,\"imageIndex\":5}]},{\"id\":10769,\"name\":\"sys_msg_dispatc\",\"threadState\":{\"x\":[{\"value\":260},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":160},{\"value\":0},{\"value\":0},{\"value\":6157643128},{\"value\":0},{\"value\":4313892168,\"symbolLocation\":24,\"symbol\":\"smq_mtx\"},{\"value\":2},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":305},{\"value\":8066808960},{\"value\":0},{\"value\":4313892144,\"symbolLocation\":0,\"symbol\":\"smq_mtx\"},{\"value\":4313892344,\"symbolLocation\":0,\"symbol\":\"smq_cnd\"},{\"value\":6157644000},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":1},{\"value\":256},{\"value\":0},{\"value\":4313890816,\"symbolLocation\":104,\"symbol\":\"pi_1_keys_list_heap\"}],\"flavor\":\"ARM_THREAD_STATE64\",\"lr\":{\"value\":6449214972},\"cpsr\":{\"value\":1610616832},\"fp\":{\"value\":6157643248},\"sp\":{\"value\":6157643104},\"esr\":{\"value\":1442840704,\"description\":\" Address size fault\"},\"pc\":{\"value\":6448963756},\"far\":{\"value\":4311114432}},\"frames\":[{\"imageOffset\":20652,\"symbol\":\"__psynch_cvwait\",\"symbolLocation\":8,\"imageIndex\":4},{\"imageOffset\":30204,\"symbol\":\"_pthread_cond_wait\",\"symbolLocation\":1228,\"imageIndex\":5},{\"imageOffset\":2315332,\"symbol\":\"ethr_cond_wait\",\"symbolLocation\":12,\"imageIndex\":0},{\"imageOffset\":748812,\"symbol\":\"erts_cnd_wait\",\"symbolLocation\":180,\"imageIndex\":0},{\"imageOffset\":748424,\"symbol\":\"sys_msg_dispatcher_wait\",\"symbolLocation\":44,\"imageIndex\":0},{\"imageOffset\":1284152,\"symbol\":\"erts_thr_progress_register_managed_thread\",\"symbolLocation\":584,\"imageIndex\":0},{\"imageOffset\":746288,\"symbol\":\"sys_msg_dispatcher_func\",\"symbolLocation\":112,\"imageIndex\":0},{\"imageOffset\":2324484,\"symbol\":\"thr_wrapper\",\"symbolLocation\":168,\"imageIndex\":0},{\"imageOffset\":28724,\"symbol\":\"_pthread_start\",\"symbolLocation\":136,\"imageIndex\":5},{\"imageOffset\":7740,\"symbol\":\"thread_start\",\"symbolLocation\":8,\"imageIndex\":5}]}],\r\n  \"usedImages\" : [\r\n  {\r\n    \"source\" : \"P\",\r\n    \"arch\" : \"arm64\",\r\n    \"base\" : 4310368256,\r\n    \"size\" : 3178496,\r\n    \"uuid\" : \"e55f1ae8-343b-3b47-a8c6-ac00e054abaa\",\r\n    \"path\" : \"\\/Applications\\/Apache CouchDB.app\\/Contents\\/Resources\\/couchdbx-core\\/erts-13.2\\/bin\\/beam.smp\",\r\n    \"name\" : \"beam.smp\"\r\n  },\r\n  {\r\n    \"source\" : \"P\",\r\n    \"arch\" : \"arm64e\",\r\n    \"base\" : 6449389568,\r\n    \"size\" : 28668,\r\n    \"uuid\" : \"e0882bf0-1ddf-32f7-b839-df904b1bc220\",\r\n    \"path\" : \"\\/usr\\/lib\\/system\\/libsystem_platform.dylib\",\r\n    \"name\" : \"libsystem_platform.dylib\"\r\n  },\r\n  {\r\n    \"source\" : \"P\",\r\n    \"arch\" : \"arm64e\",\r\n    \"base\" : 6445543424,\r\n    \"size\" : 604272,\r\n    \"uuid\" : \"197a2824-ba58-3ff4-8c52-399ae7ba8457\",\r\n    \"path\" : \"\\/usr\\/lib\\/dyld\",\r\n    \"name\" : \"dyld\"\r\n  },\r\n  {\r\n    \"size\" : 0,\r\n    \"source\" : \"A\",\r\n    \"base\" : 0,\r\n    \"uuid\" : \"00000000-0000-0000-0000-000000000000\"\r\n  },\r\n  {\r\n    \"source\" : \"P\",\r\n    \"arch\" : \"arm64e\",\r\n    \"base\" : 6448943104,\r\n    \"size\" : 241648,\r\n    \"uuid\" : \"34754346-13eb-3436-9244-5d697f1b3ab6\",\r\n    \"path\" : \"\\/usr\\/lib\\/system\\/libsystem_kernel.dylib\",\r\n    \"name\" : \"libsystem_kernel.dylib\"\r\n  },\r\n  {\r\n    \"source\" : \"P\",\r\n    \"arch\" : \"arm64e\",\r\n    \"base\" : 6449184768,\r\n    \"size\" : 53236,\r\n    \"uuid\" : \"c7c679c8-ed5a-351e-bade-bbca3631b70e\",\r\n    \"path\" : \"\\/usr\\/lib\\/system\\/libsystem_pthread.dylib\",\r\n    \"name\" : \"libsystem_pthread.dylib\"\r\n  }\r\n],\r\n  \"sharedCache\" : {\r\n  \"base\" : 6444793856,\r\n  \"size\" : 3971661824,\r\n  \"uuid\" : \"411c6161-39d1-33b8-830d-c90b3e51ed0a\"\r\n},\r\n  \"vmSummary\" : \"ReadOnly portion of Libraries: Total=1.1G resident=0K(0%) swapped_out_or_unallocated=1.1G(100%)\\nWritable regions: Total=702.9M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=702.9M(100%)\\n\\n                                VIRTUAL   REGION \\nREGION TYPE                        SIZE    COUNT (non-coalesced) \\n===========                     =======  ======= \\nActivity Tracing                   256K        1 \\nKernel Alloc Once                   32K        1 \\nMALLOC                           684.2M       19 \\nMALLOC guard page                   96K        6 \\nSTACK GUARD                       56.0M        3 \\nStack                             9264K        3 \\nVM_ALLOCATE                        1.0G        9 \\n__AUTH                             714K      162 \\n__AUTH_CONST                      12.6M      311 \\n__DATA                            3454K      298 \\n__DATA_CONST                      15.3M      314 \\n__DATA_DIRTY                       695K      104 \\n__FONT_DATA                          4K        1 \\n__LINKEDIT                       884.0M        2 \\n__OBJC_RO                         70.5M        1 \\n__OBJC_RW                         2149K        1 \\n__TEXT                           240.0M      328 \\ndyld private memory                272K        2 \\nmapped file                         64K        1 \\nshared memory                       80K        4 \\n===========                     =======  ======= \\nTOTAL                              2.9G     1571 \\n\",\r\n  \"legacyInfo\" : {\r\n  \"threadTriggered\" : {\r\n    \"queue\" : \"com.apple.main-thread\"\r\n  }\r\n},\r\n  \"logWritingSignature\" : \"d22ef97400c14a870090f3e7d7cc3dd57659f3fe\",\r\n  \"trialInfo\" : {\r\n  \"rollouts\" : [\r\n    {\r\n      \"rolloutId\" : \"6410af69ed1e1e7ab93ed169\",\r\n      \"factorPackIds\" : {\r\n        \"SIRI_VALUE_INFERENCE_PHONECALL_SMART_APP_SELECTION\" : \"6467af26e1a7a067be468054\"\r\n      },\r\n      \"deploymentId\" : 250000007\r\n    },\r\n    {\r\n      \"rolloutId\" : \"64c025b28b7f0e739e4fbe58\",\r\n      \"factorPackIds\" : {\r\n\r\n      },\r\n      \"deploymentId\" : 250000005\r\n    }\r\n  ],\r\n  \"experiments\" : [\r\n    {\r\n      \"treatmentId\" : \"8ca8349c-e2bc-482c-9ca7-3907b48a5341\",\r\n      \"experimentId\" : \"648b5a581b04c12d4127bbb6\",\r\n      \"deploymentId\" : 400000002\r\n    },\r\n    {\r\n      \"treatmentId\" : \"6dd670af-0633-45e4-ae5f-122ae4df02be\",\r\n      \"experimentId\" : \"64406ba83deb637ac8a04419\",\r\n      \"deploymentId\" : 900000017\r\n    }\r\n  ]\r\n}\r\n}\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677822750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677854476","html_url":"https://github.com/apache/couchdb/issues/4730#issuecomment-1677854476","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4730","id":1677854476,"node_id":"IC_kwDOAAMmUc5kAgcM","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-14T18:23:55Z","updated_at":"2023-08-14T18:23:55Z","author_association":"MEMBER","body":"that's more like it, thanks for the report. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677854476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677854539","html_url":"https://github.com/apache/couchdb/issues/4730#issuecomment-1677854539","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4730","id":1677854539,"node_id":"IC_kwDOAAMmUc5kAgdL","user":{"login":"mrappard","id":1963303,"node_id":"MDQ6VXNlcjE5NjMzMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1963303?v=4","gravatar_id":"","url":"https://api.github.com/users/mrappard","html_url":"https://github.com/mrappard","followers_url":"https://api.github.com/users/mrappard/followers","following_url":"https://api.github.com/users/mrappard/following{/other_user}","gists_url":"https://api.github.com/users/mrappard/gists{/gist_id}","starred_url":"https://api.github.com/users/mrappard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrappard/subscriptions","organizations_url":"https://api.github.com/users/mrappard/orgs","repos_url":"https://api.github.com/users/mrappard/repos","events_url":"https://api.github.com/users/mrappard/events{/privacy}","received_events_url":"https://api.github.com/users/mrappard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-14T18:23:56Z","updated_at":"2023-08-14T18:23:56Z","author_association":"NONE","body":"Feels like it might be an Elixir problem\r\n\r\nhttps://elixirforum.com/t/bus-error-after-upgrading-to-sonoma-beta/56354","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677854539/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677859820","html_url":"https://github.com/apache/couchdb/issues/4730#issuecomment-1677859820","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4730","id":1677859820,"node_id":"IC_kwDOAAMmUc5kAhvs","user":{"login":"big-r81","id":9985963,"node_id":"MDQ6VXNlcjk5ODU5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9985963?v=4","gravatar_id":"","url":"https://api.github.com/users/big-r81","html_url":"https://github.com/big-r81","followers_url":"https://api.github.com/users/big-r81/followers","following_url":"https://api.github.com/users/big-r81/following{/other_user}","gists_url":"https://api.github.com/users/big-r81/gists{/gist_id}","starred_url":"https://api.github.com/users/big-r81/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-r81/subscriptions","organizations_url":"https://api.github.com/users/big-r81/orgs","repos_url":"https://api.github.com/users/big-r81/repos","events_url":"https://api.github.com/users/big-r81/events{/privacy}","received_events_url":"https://api.github.com/users/big-r81/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-14T18:28:05Z","updated_at":"2023-08-14T18:28:05Z","author_association":"CONTRIBUTOR","body":"Hi,\r\n\r\nmacOS Sonoma isn't released yet and the latest provided macOS binary doesn't support it. You can try to compile CouchDB on your own and see if it works then.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677859820/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677860134","html_url":"https://github.com/apache/couchdb/issues/4730#issuecomment-1677860134","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4730","id":1677860134,"node_id":"IC_kwDOAAMmUc5kAh0m","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-14T18:28:20Z","updated_at":"2023-08-14T18:28:20Z","author_association":"MEMBER","body":"CouchDB is not written in Elixir but I think it's likely that erlang/OTP doesn't work right on the pre-release macOS as yet. Until it's an official release I'm not sure we'll be able to help. It might entirely be fixed by a newer release of erlang/OTP, I'm sure that team will be keen to support Sonoma as quickly as possible.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1677860134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1679503134","html_url":"https://github.com/apache/couchdb/pull/4726#issuecomment-1679503134","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4726","id":1679503134,"node_id":"IC_kwDOAAMmUc5kGy8e","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-15T19:43:58Z","updated_at":"2023-08-15T19:43:58Z","author_association":"CONTRIBUTOR","body":"+1 from me as well.  I have tested the changes with Elixir 1.14.5 and 1.15.4 and there was no problem.  Thank you!","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1679503134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1679728249","html_url":"https://github.com/apache/couchdb/pull/4726#issuecomment-1679728249","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4726","id":1679728249,"node_id":"IC_kwDOAAMmUc5kHp55","user":{"login":"jjrodrig","id":1001724,"node_id":"MDQ6VXNlcjEwMDE3MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1001724?v=4","gravatar_id":"","url":"https://api.github.com/users/jjrodrig","html_url":"https://github.com/jjrodrig","followers_url":"https://api.github.com/users/jjrodrig/followers","following_url":"https://api.github.com/users/jjrodrig/following{/other_user}","gists_url":"https://api.github.com/users/jjrodrig/gists{/gist_id}","starred_url":"https://api.github.com/users/jjrodrig/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jjrodrig/subscriptions","organizations_url":"https://api.github.com/users/jjrodrig/orgs","repos_url":"https://api.github.com/users/jjrodrig/repos","events_url":"https://api.github.com/users/jjrodrig/events{/privacy}","received_events_url":"https://api.github.com/users/jjrodrig/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-15T22:49:46Z","updated_at":"2023-08-15T22:49:46Z","author_association":"CONTRIBUTOR","body":"Thanks @pgj and @big-r81 ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1679728249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1682446731","html_url":"https://github.com/apache/couchdb/pull/4726#issuecomment-1682446731","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4726","id":1682446731,"node_id":"IC_kwDOAAMmUc5kSBmL","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-17T15:03:57Z","updated_at":"2023-08-17T15:03:57Z","author_association":"CONTRIBUTOR","body":"Thanks for fixing it @jjrodrig!\r\n\r\nI did notice in the last main full CI build for .deb packages failed to build with this error:\r\n\r\nhttps://ci-couchdb.apache.org/blue/organizations/jenkins/jenkins-cm1%2FFullPlatformMatrix/detail/main/816/pipeline/552/\r\n\r\n```\r\napache-couchdb-3.3.2-e60e275 (clean)\r\n\r\n[2023-08-15T23:19:06.443Z] warning: the VM is running with native name encoding of latin1 which may cause Elixir to malfunction as it expects utf8. Please ensure your locale is set to UTF-8 (which can be verified by running \"locale\" in your shell)\r\n\r\n[2023-08-15T23:19:07.182Z] Could not find Hex, which is needed to build dependency :junit_formatter\r\n\r\n[2023-08-15T23:19:07.183Z] Shall I install Hex? (if running non-interactively, use \"mix local.hex --force\") [Yn] ** (Mix) Could not find an SCM for dependency :junit_formatter from CouchDBTest.Mixfile\r\n\r\n[2023-08-15T23:19:07.183Z] Makefile:463: recipe for target 'clean' failed\r\n\r\n[2023-08-15T23:19:07.183Z] make[4]: *** [clean] Error 1\r\n\r\n[2023-08-15T23:19:07.183Z] make[4]: Leaving directory '/home/jenkins/workspace/kins-cm1_FullPlatformMatrix_main/bionic/couchdb/apache-couchdb-3.3.2-e60e275'\r\n\r\n[2023-08-15T23:19:07.183Z] dh_auto_clean: make -j1 distclean returned exit code 2\r\n\r\n[2023-08-15T23:19:07.183Z] debian/rules:20: recipe for target 'override_dh_auto_clean' failed\r\n\r\n[2023-08-15T23:19:07.183Z] make[3]: *** [override_dh_auto_clean] Error 2\r\n\r\n[2023-08-15T23:19:07.183Z] make[3]: Leaving directory '/home/jenkins/workspace/kins-cm1_FullPlatformMatrix_main/bionic/couchdb/apache-couchdb-3.3.2-e60e275'\r\n\r\n[2023-08-15T23:19:07.183Z] debian/rules:17: recipe for target 'clean' failed\r\n\r\n[2023-08-15T23:19:07.183Z] make[2]: *** [clean] Error 2\r\n\r\n[2023-08-15T23:19:07.183Z] make[2]: Leaving directory '/home/jenkins/workspace/kins-cm1_FullPlatformMatrix_main/bionic/couchdb/apache-couchdb-3.3.2-e60e275'\r\n\r\n[2023-08-15T23:19:07.183Z] dpkg-buildpackage: error: fakeroot debian/rules clean subprocess returned exit status 2\r\n\r\n[2023-08-15T23:19:07.183Z] Makefile:241: recipe for target 'dpkg' failed\r\n\r\n[2023-08-15T23:19:07.183Z] make[1]: *** [dpkg] Error 2\r\n\r\n[2023-08-15T23:19:07.183Z] make[1]: Leaving directory '/home/jenkins/workspace/kins-cm1_FullPlatformMatrix_main/bionic/couchdb-pkg'\r\n\r\n[2023-08-15T23:19:07.183Z] Makefile:41: recipe for target 'all' failed\r\n\r\n[2023-08-15T23:19:07.184Z] make: *** [all] Error 2\r\n\r\nscript returned exit code 2\r\n```\r\n\r\nIt mentions hex so was wondering if it's related perhaps to this PR. I'll try to re-run the CI build again to see if fails in the same way. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1682446731/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1682670259","html_url":"https://github.com/apache/couchdb/issues/4725#issuecomment-1682670259","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4725","id":1682670259,"node_id":"IC_kwDOAAMmUc5kS4Kz","user":{"login":"KangTheTerrible","id":7072176,"node_id":"MDQ6VXNlcjcwNzIxNzY=","avatar_url":"https://avatars.githubusercontent.com/u/7072176?v=4","gravatar_id":"","url":"https://api.github.com/users/KangTheTerrible","html_url":"https://github.com/KangTheTerrible","followers_url":"https://api.github.com/users/KangTheTerrible/followers","following_url":"https://api.github.com/users/KangTheTerrible/following{/other_user}","gists_url":"https://api.github.com/users/KangTheTerrible/gists{/gist_id}","starred_url":"https://api.github.com/users/KangTheTerrible/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KangTheTerrible/subscriptions","organizations_url":"https://api.github.com/users/KangTheTerrible/orgs","repos_url":"https://api.github.com/users/KangTheTerrible/repos","events_url":"https://api.github.com/users/KangTheTerrible/events{/privacy}","received_events_url":"https://api.github.com/users/KangTheTerrible/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-17T17:15:49Z","updated_at":"2023-08-17T17:15:49Z","author_association":"CONTRIBUTOR","body":"This does eventually resolve gracefully, given enough erlang procs and storage. Additional change that had to be made to keep on top of storage was to increase the view ratio smoosh concurrency values since stuck compactions prevented other compactions from running.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1682670259/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1683131792","html_url":"https://github.com/apache/couchdb/pull/4718#issuecomment-1683131792","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4718","id":1683131792,"node_id":"IC_kwDOAAMmUc5kUo2Q","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-17T23:58:57Z","updated_at":"2023-08-17T23:58:57Z","author_association":"CONTRIBUTOR","body":"> that's an excellent point, we must ensure that cannot happen, at least not with any higher probability than the existing cleanup code for mrview.\r\n\r\nWe could punt changing the trigger mechanism for later and just opt to run the nouveau and dreyfus cleanup as is, alongside  mrview indexes?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1683131792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1683488124","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1683488124","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1683488124,"node_id":"IC_kwDOAAMmUc5kV_18","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-18T07:30:39Z","updated_at":"2023-08-18T07:30:39Z","author_association":"MEMBER","body":"good point on `fabric_doc_update` and possibly others.\r\n\r\nI confirmed directly and via haproxy that a client that disconnects (curl and CTRL-C in the first case and simply doing something that hits haproxy's server timeout like `_changes?feed=continuous&timeout=10000000`) that the mochiweb process is killed, and this triggers the new code above to take down workers.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1683488124/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1684533075","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1684533075","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1684533075,"node_id":"IC_kwDOAAMmUc5kZ-9T","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-18T23:14:53Z","updated_at":"2023-08-19T03:01:24Z","author_association":"CONTRIBUTOR","body":"> I confirmed directly and via haproxy that a client that disconnects (curl and CTRL-C in the first case and simply doing something that hits haproxy's server timeout like `_changes?feed=continuous&timeout=10000000`) that the mochiweb process is killed, and this triggers the new code above to take down workers.\r\n\r\nCleanup happens without this patch already from what I've observed. Here is how I tested on main:\r\n\r\n```diff\r\ndiff --git a/src/chttpd/src/chttpd_db.erl b/src/chttpd/src/chttpd_db.erl\r\nindex e2de301b2..6c2beba83 100644\r\n--- a/src/chttpd/src/chttpd_db.erl\r\n+++ b/src/chttpd/src/chttpd_db.erl\r\n@@ -127,6 +127,8 @@ handle_changes_req1(#httpd{} = Req, Db) ->\r\n         db_open_options = [{user_ctx, couch_db:get_user_ctx(Db)}]\r\n     },\r\n     Max = chttpd:chunked_response_buffer_size(),\r\n+    couch_log:error(\" +++TRACING _changes++++ ~p:~p@~B REQPID:~p\", [?MODULE, ?FUNCTION_NAME, ?LINE, self()]),\r\n+    dbg:tracer(), dbg:p(self(), p),\r\n     case ChangesArgs#changes_args.feed of\r\n         \"normal\" ->\r\n             T0 = os:timestamp(),\r\ndiff --git a/src/fabric/src/fabric_db_update_listener.erl b/src/fabric/src/fabric_db_update_listener.erl\r\nindex 78ccf5a4d..fb508294a 100644\r\n--- a/src/fabric/src/fabric_db_update_listener.erl\r\n+++ b/src/fabric/src/fabric_db_update_listener.erl\r\n@@ -37,6 +37,8 @@\r\n }).\r\n\r\n go(Parent, ParentRef, DbName, Timeout) ->\r\n+    couch_log:error(\" +++TRACING UPDATE NOTIFIER+++ ~p:~p@~B ~p Parent:~p\", [?MODULE, ?FUNCTION_NAME, ?LINE, DbName, Parent]),\r\n+    dbg:tracer(), dbg:p(self(), p),\r\n     Shards = mem3:shards(DbName),\r\n     Notifiers = start_update_notifiers(Shards),\r\n     MonRefs = lists:usort([rexi_utils:server_pid(N) || #worker{node = N} <- Notifiers]),\r\n@@ -82,6 +84,8 @@ start_update_notifiers(Shards) ->\r\n\r\n % rexi endpoint\r\n start_update_notifier(DbNames) ->\r\n+    couch_log:error(\" +++TRACING UPDATE NOTIFIER WORKER+++ ~p:~p@~B~p\", [?MODULE, ?FUNCTION_NAME, ?LINE, DbNames]),\r\n+    dbg:tracer(), dbg:p(self(), p),\r\n     {Caller, Ref} = get(rexi_from),\r\n     Notify = config:get(\"couchdb\", \"maintenance_mode\", \"false\") /= \"true\",\r\n     State = #cb_state{client_pid = Caller, client_ref = Ref, notify = Notify},\r\ndiff --git a/src/fabric/src/fabric_rpc.erl b/src/fabric/src/fabric_rpc.erl\r\nindex fa6ea5116..64fdbf4b5 100644\r\n--- a/src/fabric/src/fabric_rpc.erl\r\n+++ b/src/fabric/src/fabric_rpc.erl\r\n@@ -69,6 +69,8 @@ changes(DbName, Args, StartSeq) ->\r\n changes(DbName, #changes_args{} = Args, StartSeq, DbOptions) ->\r\n     changes(DbName, [Args], StartSeq, DbOptions);\r\n changes(DbName, Options, StartVector, DbOptions) ->\r\n+    couch_log:error(\" ++TRACING CHANGES WORKER+++++ ~p:~p@~B~p\", [?MODULE, ?FUNCTION_NAME, ?LINE, DbName]),\r\n+    dbg:tracer(), dbg:p(self(), p),\r\n     set_io_priority(DbName, DbOptions),\r\n     Args0 = lists:keyfind(changes_args, 1, Options),\r\n     #changes_args{dir = Dir, filter_fun = Filter} = Args0,\r\n```\r\n\r\nThat's setting up process event traces (spawn, exit, etc) on the HTTP request process, worker process, db updater process and db update worker process. The goal is that these should be cleaned as soon as we attempt any write to the closed socket.\r\n\r\n(`db` is Q=1 empty db)\r\n\r\n```\r\n% curl -i $DB/db/_changes'?feed=continuous&since=now'\r\nHTTP/1.1 200 OK\r\n...\r\n\r\n^C\r\n```\r\n\r\n```\r\n[error] 2023-08-18T22:54:36.654375Z node1@127.0.0.1 <0.949.0> cc6744542c  +++TRACING _changes++++ chttpd_db:handle_changes_req1@130 REQPID:<0.949.0>\r\n(<0.949.0>) spawn <0.974.0> as erlang:apply(#Fun<rexi_monitor.1.77517421>,[])\r\n(<0.949.0>) link <0.974.0>\r\n(<0.949.0>) getting_unlinked <0.974.0>\r\n[error] 2023-08-18T22:54:36.654949Z node1@127.0.0.1 <0.976.0> --------  +++TRACING UPDATE NOTIFIER+++ fabric_db_update_listener:go@40 <<\"db\">> Parent:<0.949.0>\r\n(<0.949.0>) spawn <0.976.0> as fabric_db_update_listener:go(<0.949.0>,#Ref<0.830586435.801374217.85503>,<<\"db\">>,60000)\r\n(<0.949.0>) link <0.976.0>\r\n(<0.949.0>) spawn <0.978.0> as erlang:apply(#Fun<rexi_monitor.1.77517421>,[])\r\n(<0.949.0>) link <0.978.0>\r\n(<0.949.0>) spawn <0.979.0> as erlang:apply(#Fun<fabric_streams.3.106508571>,[])\r\n[error] 2023-08-18T22:54:36.655018Z node1@127.0.0.1 <0.977.0> cc6744542c  ++TRACING CHANGES WORKER+++++ fabric_rpc:changes@72<<\"shards/00000000-ffffffff/db.1692392006\">>\r\n(<0.976.0>) spawn <0.980.0> as erlang:apply(#Fun<rexi_monitor.1.77517421>,[])\r\n[error] 2023-08-18T22:54:36.655123Z node1@127.0.0.1 <0.982.0> --------  +++TRACING UPDATE NOTIFIER WORKER+++ fabric_db_update_listener:start_update_notifier@87[<<\"shards/00000000-ffffffff/db.1692392006\">>]\r\n(<0.976.0>) link <0.980.0>\r\n(<0.976.0>) spawn <0.981.0> as erlang:apply(#Fun<fabric_db_update_listener.2.111341222>,[])\r\n(<0.977.0>) exit normal\r\n(<0.949.0>) getting_unlinked <0.978.0>\r\n\r\n(<0.976.0>) exit normal\r\n(<0.982.0>) exit killed\r\n(<0.949.0>) exit shutdown\r\n```\r\n\r\n * `0.949.0` request process is killed with a `shutdown` as expected. Probably after trying to write to a closed socket.\r\n * `0.976.0` db update notifier exits `normal`\r\n * `0.982.0` db update notifier worker is killed by the cleaner process\r\n\r\nSince `db` is empty we're not actually starting any workers but those should also by cleaned by the cleanup helper process in [fabric_streams](https://github.com/apache/couchdb/blob/main/src/fabric/src/fabric_streams.erl).\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1684533075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1685950963","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1685950963","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1685950963,"node_id":"IC_kwDOAAMmUc5kfZHz","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-21T09:13:01Z","updated_at":"2023-08-21T09:13:01Z","author_association":"MEMBER","body":"@nickva 😱 interesting!\r\n\r\nWhat we've observed (a huge rise in interactive ioq requests after a series of `_find` requests that haproxy classified as `sH--`, and the new `mango_stats` showing a mango process that exits some hours after those after having examined the same number of documents as the database has in total) can only currently be explained by these processes simply continuing despite the client having gone away (the client being haproxy here, it closes the connection after its own `timeout server` interval).\r\n\r\nI can confirm what you're seeing, and I have also done so for an unindexed `_find` request by adding timer:sleeps in various places of the remote side of fabric_view_all_docs.\r\n\r\nSo I guess we're looking for a gap in the `fabric_streams` error handling rather than a complete absence of orphaned worker cleanup code.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1685950963/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686324050","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1686324050","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1686324050,"node_id":"IC_kwDOAAMmUc5kg0NS","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-21T13:23:38Z","updated_at":"2023-08-21T13:23:38Z","author_association":"MEMBER","body":"I've built a large local database, 6 million docs, no artificial sleeps, and with dbg:tracer calls in fabric_rpc:all_docs. I have haproxy with a 10s server timeout.\r\n\r\nI've observed;\r\n\r\n1) curl responds with a 504 after 10s\r\n2) haproxy logs this as an sH-- (as response had not started)\r\n3) cpu and disk continue to churn for ages after, cpu consumed by beam.smp\r\n4) tracer does not show the processes exiting promptly\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686324050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686341739","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1686341739","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1686341739,"node_id":"IC_kwDOAAMmUc5kg4hr","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-21T13:33:57Z","updated_at":"2023-08-21T13:33:57Z","author_association":"MEMBER","body":"took me too long to realise, but I think the difference is the attempt to send data (between _changes and _find). that's the only time we notice the socket closed, and thus the processes exit (and all the cleanup you pointed out then happens).\r\n\r\nThe mochiweb http process does stay alive after the sH-- event. If I kill it (from remsh) then my cleanup kicks in and kills the orphaned workers. without my change the fabric_streams cleanup kills them.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686341739/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686450468","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1686450468","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1686450468,"node_id":"IC_kwDOAAMmUc5khTEk","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-21T14:33:40Z","updated_at":"2023-08-21T14:36:26Z","author_association":"CONTRIBUTOR","body":"> took me too long to realise, but I think the difference is the attempt to send data (between _changes and _find). that's the only time we notice the socket closed, and thus the processes exit (and all the cleanup you pointed out then happens).\r\n\r\nYup that's the key. We have to read, write or find some other way to periodically check the socket state and then terminate the connection process. The stream cleanup mechanism as is will only work as long as the connection process dies. We looked at this before and there was no simple way to detect it out-of-band in Erlang.\r\n\r\nWe could try to emit empty line heartbeats in `_find` this might be the simplest solution.\r\n\r\nIf there was a socket recv with options function in Erlang, we might have been able to periodically try to `recv` with a `MSG_PEEK` option, to pretend we're reading the data and see what's there. But recv in Erlang doesn't allow arbitrary (raw) options. Maybe there is some non-portable `raw` [inet:getopts/2](https://www.erlang.org/doc/man/inet#getopts-2) option we can query, but I think just trying periodic newline or empty line pings and flushing them should do it.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686450468/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686478247","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1686478247","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1686478247,"node_id":"IC_kwDOAAMmUc5khZ2n","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-21T14:49:23Z","updated_at":"2023-08-21T15:45:45Z","author_association":"CONTRIBUTOR","body":"In principle at least the experimental `socket` module does allow `peek`-ing with `recv` since OTP 24.0: https://www.erlang.org/doc/man/socket#type-msg_flag\r\n\r\n> \r\n```\r\nmsg_flag() =\r\n    cmsg_cloexec | confirm | ctrunc | dontroute | eor | errqueue |\r\n    more | oob | peek | trunc\r\n```\r\n\r\nBut we can't use socket for non-socket connections and it might be a while if/until mochiweb starts using that module. Especially since in some cases `socket` has not been performing as well as the old `inet` driver.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686478247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686579062","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1686579062","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1686579062,"node_id":"IC_kwDOAAMmUc5khyd2","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-21T15:45:49Z","updated_at":"2023-08-21T15:45:49Z","author_association":"MEMBER","body":"I've tried tweaking mochiweb to enable `{keepalive, true}` after it accepts a connection, so it can know if the client disconnects. But it seems not to have any effect, which is odd.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686579062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686626970","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1686626970","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1686626970,"node_id":"IC_kwDOAAMmUc5kh-Ka","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-21T16:16:04Z","updated_at":"2023-08-21T16:16:04Z","author_association":"MEMBER","body":"hm, not seeing a way to change count/idle/interval, so I bet the macos defaults are quite high.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686626970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686633468","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1686633468","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1686633468,"node_id":"IC_kwDOAAMmUc5kh_v8","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-21T16:19:35Z","updated_at":"2023-08-21T21:40:58Z","author_association":"CONTRIBUTOR","body":"On localhost `keepalive` won't behave any differently for disconnects, as network handling is just a direct callback into the other peer's socket code at the kernel level. In other words the socket will find out it's closed anyway. For remote connections it's a different story and keepalive will be useful there.\r\n\r\nSo keepalive is useful as a step 0 - to allow the socket at the kernel level to become closed. However that is not enough for us, what is missing is at the HTTP protocol stage in mochiweb we do not have a reason to do any socket operations (and we can't do any extra ones outside of mochweb in a sneaky way so far it seems, which is what I was getting at above). We're forced to wait for the `mango` application to return a response. Without any attempted writes or reads to socket at the mochiweb level won't have a way to find out the socket is closed. Which could come after days of waiting in pathological cases like we saw already.\r\n\r\nThe only solutions I see so far is to either modify mango to periodically handle a timeout and push a `\\n` between row (after forcing to emit headers on the first timeout) or find some possibly non-portable raw socket getops query to detect that the socket is closed out-of-band as it were. We could enhance the existing `fabric_stream` monitor to periodically check it or invent some new thing (maybe some new thing in mochiweb even).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686633468/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686649525","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1686649525","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1686649525,"node_id":"IC_kwDOAAMmUc5kiDq1","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-21T16:29:08Z","updated_at":"2023-08-21T16:29:08Z","author_association":"MEMBER","body":"I'm not entirely giving up on tcp keepalive (it ought to kill the process/port for the socket, which I think will kill the mochiweb process, but subject to testing)\r\n\r\nHowever, I'm beginning to think what we need is application level. There's clearly a modest, finite number for how long we're prepared to wait for a response to start, which Cloudant, for example, already expresses in haproxy `timeout server`. So I think couchdb needs a similar setting, that if a response hasn't begun in that timeframe, we exit (and fabric_streams cleanup then triggers). The only endpoint that delays the _start_ of the response by a potentially very long time is `_find`, because it can discard work. A filtered changes response has at least started the response even if nothing passes the filter.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686649525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686663150","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1686663150","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1686663150,"node_id":"IC_kwDOAAMmUc5kiG_u","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-21T16:38:31Z","updated_at":"2023-08-21T17:11:34Z","author_association":"CONTRIBUTOR","body":"> it ought to kill the process/port for the socket, which I think will kill the mochiweb process, but subject to testing\r\n\r\nIt doesn't hurt to try but I don't see how that could plausibly work. There is no active socket monitoring or polling in mochiweb. If we were in active mode or were in C and used a select/poll/epoll mechanism we'd probably find out about it.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686663150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686678430","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1686678430","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1686678430,"node_id":"IC_kwDOAAMmUc5kiKue","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-21T16:46:47Z","updated_at":"2023-08-21T17:09:17Z","author_association":"CONTRIBUTOR","body":"The only ways I see as viable are:\r\n\r\n 1) Add a mango application level timeout like changes has so we have to emit a periodic newline between json rows\r\n\r\n 2) Add an active custom socket inactivity process with a timeout. Either as part of mochiweb, fabric stream or chttpd. After we receive the request we spawn a process which starts timer. When we send or receive from the socket we reset the timer, if we fail to send or receive anything on a socket the timer expires and blows up killing the connection process. But that involves reseting an extra timer and an extra process so it has performance implications. Maybe we can do something clever with erlang counters there...","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1686678430/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687030494","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1687030494","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1687030494,"node_id":"IC_kwDOAAMmUc5kjgre","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-21T20:55:11Z","updated_at":"2023-08-21T20:55:11Z","author_association":"MEMBER","body":"changed approach, though I don't think this is the final answer either.\r\n\r\nthis diff adds a deadline by which a delayed response must start or be terminated. This helps when using `_find` if it takes a long time to find the first match (or if it's plowing through a large database via `_all_docs` and won't find _any_ matches)\r\n\r\nIt's not broad enough but the previous effort with monitors was pointless (nick is correct that fabric_streams cleans up if the parent process exits)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687030494/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687268045","html_url":"https://github.com/apache/couchdb/issues/4733#issuecomment-1687268045","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4733","id":1687268045,"node_id":"IC_kwDOAAMmUc5kkarN","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T01:15:21Z","updated_at":"2023-08-22T01:15:21Z","author_association":"CONTRIBUTOR","body":"Are there any errors showing in the logs when the db is opened?\r\n\r\nIt's mostly likely that the node names in the _dbs are different on the new cluster. Make sure to update those node names to match.\r\n\r\nRefer to https://docs.couchdb.org/en/stable/cluster/sharding.html#moving-a-shard and copying a shard section to see how the `_dbs` metadata is structured and how nodes should be updated.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687268045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687272441","html_url":"https://github.com/apache/couchdb/issues/4725#issuecomment-1687272441","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4725","id":1687272441,"node_id":"IC_kwDOAAMmUc5kkbv5","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T01:21:50Z","updated_at":"2023-08-22T01:21:50Z","author_association":"CONTRIBUTOR","body":"One strategy could be to periodically ping the https://docs.couchdb.org/en/stable/api/ddoc/common.html#db-design-design-doc-info endpoint and wait until the index has completed building before querying it to avoid piling up too many client requests if the index is large. \r\n\r\nUsing a larger Q (resharding) could also help parallelize indexing building if you have the computation and disk throughput resources.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687272441/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687274905","html_url":"https://github.com/apache/couchdb/issues/4706#issuecomment-1687274905","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4706","id":1687274905,"node_id":"IC_kwDOAAMmUc5kkcWZ","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T01:25:24Z","updated_at":"2023-08-22T01:25:24Z","author_association":"CONTRIBUTOR","body":"Thanks for fixing Elixir 1.15! It's nice to be up-to-date.\r\n\r\nOne downside I think is it broke the deb package building in the full (main) CI. I noticed it in the PR: https://github.com/apache/couchdb/pull/4726#issuecomment-1682446731\r\n\r\nIt seems to complain about missing hex and trying to install it to build `junit_formatter`. Wonder if it's because we removed `_build` or ran `clean --deps` while before we relied on packaging those in the dist tarball (perhaps by accident).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687274905/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687827392","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1687827392","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1687827392,"node_id":"IC_kwDOAAMmUc5kmjPA","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T09:33:48Z","updated_at":"2023-08-22T09:33:48Z","author_association":"MEMBER","body":"one further note here. when, in the future, you pass a selector to `_view` or _`search` we should send a `400 Bad Request` if mango would do a startkey/endkey that covers the entire index (for `_view` that's when it does `\"start_key\": [],  \"end_key\": [\"<MAX>\"],`.)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687827392/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687830558","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1687830558","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1687830558,"node_id":"IC_kwDOAAMmUc5kmkAe","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T09:35:37Z","updated_at":"2023-08-22T09:35:37Z","author_association":"CONTRIBUTOR","body":"Okay, thanks for the note @rnewson.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687830558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687834953","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1687834953","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1687834953,"node_id":"IC_kwDOAAMmUc5kmlFJ","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T09:38:00Z","updated_at":"2023-08-22T09:38:00Z","author_association":"MEMBER","body":"perhaps it's more general, the goal being that query execution through these new options is always efficient (at least relative to reading the entire database or index). This is an opportunity to reject things that we previously had to accept.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1687834953/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688164474","html_url":"https://github.com/apache/couchdb/issues/4734#issuecomment-1688164474","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4734","id":1688164474,"node_id":"IC_kwDOAAMmUc5kn1h6","user":{"login":"dangotti","id":31218308,"node_id":"MDQ6VXNlcjMxMjE4MzA4","avatar_url":"https://avatars.githubusercontent.com/u/31218308?v=4","gravatar_id":"","url":"https://api.github.com/users/dangotti","html_url":"https://github.com/dangotti","followers_url":"https://api.github.com/users/dangotti/followers","following_url":"https://api.github.com/users/dangotti/following{/other_user}","gists_url":"https://api.github.com/users/dangotti/gists{/gist_id}","starred_url":"https://api.github.com/users/dangotti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dangotti/subscriptions","organizations_url":"https://api.github.com/users/dangotti/orgs","repos_url":"https://api.github.com/users/dangotti/repos","events_url":"https://api.github.com/users/dangotti/events{/privacy}","received_events_url":"https://api.github.com/users/dangotti/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T13:12:54Z","updated_at":"2023-08-22T13:12:54Z","author_association":"NONE","body":"@seifbm, I opened the ticket https://neighbourhoodie.freshdesk.com/support/tickets/889 on Neighbourhoodie to help us.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688164474/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688255795","html_url":"https://github.com/apache/couchdb/issues/4734#issuecomment-1688255795","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4734","id":1688255795,"node_id":"IC_kwDOAAMmUc5koL0z","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T14:05:15Z","updated_at":"2023-08-22T14:05:15Z","author_association":"MEMBER","body":"Heya @dangotti no need to open a ticket here if you also submitted to our _private_ support issue tracker. We’ll respond there. I’lll close and lock this issue.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688255795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688317559","html_url":"https://github.com/apache/couchdb/issues/4725#issuecomment-1688317559","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4725","id":1688317559,"node_id":"IC_kwDOAAMmUc5koa53","user":{"login":"KangTheTerrible","id":7072176,"node_id":"MDQ6VXNlcjcwNzIxNzY=","avatar_url":"https://avatars.githubusercontent.com/u/7072176?v=4","gravatar_id":"","url":"https://api.github.com/users/KangTheTerrible","html_url":"https://github.com/KangTheTerrible","followers_url":"https://api.github.com/users/KangTheTerrible/followers","following_url":"https://api.github.com/users/KangTheTerrible/following{/other_user}","gists_url":"https://api.github.com/users/KangTheTerrible/gists{/gist_id}","starred_url":"https://api.github.com/users/KangTheTerrible/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KangTheTerrible/subscriptions","organizations_url":"https://api.github.com/users/KangTheTerrible/orgs","repos_url":"https://api.github.com/users/KangTheTerrible/repos","events_url":"https://api.github.com/users/KangTheTerrible/events{/privacy}","received_events_url":"https://api.github.com/users/KangTheTerrible/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T14:38:25Z","updated_at":"2023-08-22T14:38:25Z","author_association":"CONTRIBUTOR","body":"Yeah Nick, in our case unfortunately this was a live production server so we had no trivial means to block users from attempting to access the view. Worth noting, none of these clients were waiting, all view requests to this view are stable=false&update=lazy","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688317559/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688590578","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1688590578","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1688590578,"node_id":"IC_kwDOAAMmUc5kpdjy","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T17:01:57Z","updated_at":"2023-08-22T17:01:57Z","author_association":"CONTRIBUTOR","body":"I managed to find a way to seemingly detect the connection state change after the local client (curl) disconnects by querying the equivalent of `getsockopt(fd(), IPPROTO_TCP, TCP_CONNECTION_INFO, &info, &info_size)`\r\n\r\n```\r\n(node1@127.0.0.1)22> rp(inet:getopts(#Port<0.24>, [{raw, 6, 262, 1000}])).\r\n{ok,[{raw,6,262,\r\n          <<4,6,6,0,7,0,0,0,0,0,0,0,0,0,0,0,204,63,0,0,0,192,255,\r\n            63,18,0,2,0,0,57,6,0,0,0,0,0,88,58,6,0,1,0,0,0,1,0,0,\r\n            0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,177,1,0,0,0,0,0,0,\r\n            0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,148,0,0,0,0,0,0,0,0,\r\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>>}]}\r\nok\r\n```\r\n\r\nCtrl+C...\r\n\r\n```\r\n(node1@127.0.0.1)24> inet:info(#Port<0.24>).\r\n#{counters =>\r\n      #{recv_avg => 24,recv_cnt => 6,recv_dvi => 10,recv_max => 51,\r\n        recv_oct => 148,send_avg => 216,send_cnt => 2,\r\n        send_max => 427,send_oct => 433,send_pend => 0},\r\n  input => 0,\r\n  links => [<0.12859.0>],\r\n  memory => 40,monitors => [],output => 433,\r\n  owner => <0.12859.0>,\r\n  states => [connected,open]}\r\n\r\n(node1@127.0.0.1)25> rp(inet:getopts(#Port<0.24>, [{raw, 6, 262, 1000}])).\r\n{ok,[{raw,6,262,\r\n          <<5,6,6,0,7,0,0,0,0,0,0,0,0,0,0,0,204,63,0,0,0,192,255,\r\n            63,18,0,2,0,0,57,6,0,0,0,0,0,88,58,6,0,59,58,0,0,1,0,\r\n            0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,177,1,0,0,0,0,0,\r\n            0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,148,0,0,0,0,0,0,0,\r\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>>}]}\r\nok\r\n```\r\n\r\nLooks like Linux has a similar facility so there is some hope, though it does look very ugly","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688590578/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688623250","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1688623250","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1688623250,"node_id":"IC_kwDOAAMmUc5kpliS","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T17:27:24Z","updated_at":"2023-08-22T18:13:45Z","author_association":"MEMBER","body":"updated again. I've expanded fabric_streams existing 'cleanup' process to be a watchdog (in the classic sense).\r\n\r\nbefore starting a fabric_stream you must call `fabric_stream:enable_watchdog().` If you do, the cleanup process starts a timer. If the watchdog is not kicked at least once (with `fabric_stream:kick_watchdog().`) before the timer fires, the watchdog kills the coordinator process (for us, the mochiweb/httpd process) and its workers.\r\n\r\nby default this is not active, so all calls to fabric:all_docs etc are unaffected.\r\n\r\nin mango_httpd I enable the watchdog and only when adding a row to the response do I kick the watchdog. If we go a long time between rows, the watchdog fires.\r\n\r\nsimilar enable/kick can be done on other endpoints.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688623250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688690143","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1688690143","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1688690143,"node_id":"IC_kwDOAAMmUc5kp13f","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T18:16:01Z","updated_at":"2023-08-22T18:16:01Z","author_association":"CONTRIBUTOR","body":"> I managed to find a way to seemingly detect the connection state change after the local client (curl) disconnects by querying the equivalent of `getsockopt(fd(), IPPROTO_TCP, TCP_CONNECTION_INFO, &info, &info_size)`\r\n> \r\n> ```\r\n> (node1@127.0.0.1)22> rp(inet:getopts(#Port<0.24>, [{raw, 6, 262, 1000}])).\r\n> {ok,[{raw,6,262,\r\n>           <<4,6,6,0,7,0,0,0,0,0,0,0,0,0,0,0,204,63,0,0,0,192,255,\r\n>             63,18,0,2,0,0,57,6,0,0,0,0,0,88,58,6,0,1,0,0,0,1,0,0,\r\n>             0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,177,1,0,0,0,0,0,0,\r\n>             0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,148,0,0,0,0,0,0,0,0,\r\n>             0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>>}]}\r\n> ok\r\n> ```\r\n\r\nThis is nice. If we can cleanly encapsulate it in mochiweb then it might be a viable option. I am planing to look into mochiweb code to see if it is doable.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688690143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688718651","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1688718651","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1688718651,"node_id":"IC_kwDOAAMmUc5kp807","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T18:37:15Z","updated_at":"2023-08-22T18:37:15Z","author_association":"CONTRIBUTOR","body":"For Linux it might be `IPPROTO_TCP / TCP_INFO` and I haven't checked exactly which bits conclusively show us the closed state yet.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1688718651/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689015143","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1689015143","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1689015143,"node_id":"IC_kwDOAAMmUc5krFNn","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T22:36:08Z","updated_at":"2023-08-22T22:36:08Z","author_association":"CONTRIBUTOR","body":"> > I managed to find a way to seemingly detect the connection state change after the local client (curl) disconnects by querying the equivalent of `getsockopt(fd(), IPPROTO_TCP, TCP_CONNECTION_INFO, &info, &info_size)`\r\n> > ```\r\n> > (node1@127.0.0.1)22> rp(inet:getopts(#Port<0.24>, [{raw, 6, 262, 1000}])).\r\n> > {ok,[{raw,6,262,\r\n> >           <<4,6,6,0,7,0,0,0,0,0,0,0,0,0,0,0,204,63,0,0,0,192,255,\r\n> >             63,18,0,2,0,0,57,6,0,0,0,0,0,88,58,6,0,1,0,0,0,1,0,0,\r\n> >             0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,177,1,0,0,0,0,0,0,\r\n> >             0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,148,0,0,0,0,0,0,0,0,\r\n> >             0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>>}]}\r\n> > ok\r\n> > ```\r\n> \r\n> This is nice. If we can cleanly encapsulate it in mochiweb then it might be a viable option. I am planing to look into mochiweb code to see if it is doable.\r\n\r\nI came to the same conclusion as Nick. It is quite a hack especially given the fact that it only would work on Linux. I also looked into using undocumented function unrecv. Which can be called in a quick succession after a recv.\r\n\r\n```\r\n(node1@127.0.0.1)49> f(Port), Port = hd(lists:reverse(erlang:ports())).\r\n#Port<0.54>\r\n(node1@127.0.0.1)51> f(Res), Res = inet_tcp:recv(Port, 1, 10).\r\n{error,timeout}\r\n(node1@127.0.0.1)52> inet_tcp:unrecv(Port, <<>>).\r\nok\r\n(node1@127.0.0.1)53> f(Res), Res = inet_tcp:recv(Port, 1, 10).\r\n{error,closed}\r\n(node1@127.0.0.1)54> inet_tcp:unrecv(Port, <<>>).\r\nok\r\n```  \r\n\r\n```erlang\r\nstill_connected(Socket) ->\r\n    // read one byte with 10ms timeout\r\n    case recv(Socket, 1, 10) of\r\n        {error, timeout} ->\r\n            true;\r\n        {ok, Data} ->\r\n            gen_tcp:unrecv(Socket, Data),\r\n            true;\r\n        {error, closed} ->\r\n            false\r\n    end.\r\n```\r\n\r\nWe could use `timer:apply_after/4` to call `still_connected/1`. However the problem is that timer:apply_after would be called concurrently. Therefore there is a chance that the request handler process would call recv in between recv/unrecv. This means we need locking. We could implement locking using `ets` table, BUT. \r\n\r\nThe conclusion is it is not easy.   ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689015143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689048717","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1689048717","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1689048717,"node_id":"IC_kwDOAAMmUc5krNaN","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-22T23:23:32Z","updated_at":"2023-08-23T01:36:29Z","author_association":"CONTRIBUTOR","body":"Interesting find @iilyak! Yeah, one worry about  the `gen_tcp:unrecv/2` function is that it may mess up the HTTP protocol stream in  case of any pipelining. We'd be reading data out of band and then putting it back into the Erlang's userland TCP buffer from a different process than mochiweb's request client.  At least with TCP_INFO at worse we'd get an unknown state or unsupported OS and we'd just do what we did before without the danger of messing up the HTTP TCP stream.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689048717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689241307","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1689241307","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1689241307,"node_id":"IC_kwDOAAMmUc5kr8bb","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-23T03:53:58Z","updated_at":"2023-08-23T03:53:58Z","author_association":"CONTRIBUTOR","body":"A bit more of a cleaned up connection script version which should work on macos, linux and freebsd:\r\n\r\n```erlang\r\n#!/usr/bin/env escript\r\n\r\nis_closed(Sock) ->\r\n    OsType = os:type(),\r\n    case tcp_info_opt(OsType) of\r\n        {raw, _, _, _} = TcpInfoOpt ->\r\n            case inet:getopts(Sock, [TcpInfoOpt]) of\r\n                {ok, [{raw, _, _, <<State:8/native, _/binary>>}]} ->\r\n                    tcp_fsm_state(State, OsType);\r\n                {ok, []} ->\r\n                    false;\r\n                {error, einval} ->\r\n                    % Already cleaned up\r\n                    true;\r\n                {error, _} ->\r\n                    false\r\n            end;\r\n        undefined ->\r\n            false\r\n    end.\r\n\r\n% All OS-es have the tcpi_state (uint8) as first member of tcp_info struct\r\n\r\ntcp_info_opt({unix, linux}) ->\r\n    %% include/netinet/in.h\r\n    %%   IPPROTO_TCP = 6\r\n    %%\r\n    %% include/netinet/tcp.h\r\n    %%   #define TCP_INFO 11\r\n    %%\r\n    {raw, 6, 11, 1};\r\ntcp_info_opt({unix, darwin}) ->\r\n    %% include/netinet/in.h\r\n    %%   #define IPPROTO_TCP   6\r\n    %%\r\n    %% netinet/tcp.h\r\n    %%   #define TCP_CONNECTION_INFO  0x106\r\n    %%\r\n    {raw, 6, 16#106, 1};\r\ntcp_info_opt({unix, freebsd}) ->\r\n    %% sys/netinet/in.h\r\n    %%  #define  IPPROTO_TCP  6 /* tcp */\r\n    %%\r\n    %% sys/netinet/tcp.h\r\n    %%  #define  TCP_INFO    32 /* retrieve tcp_info structure */\r\n    %%\r\n    {raw, 6, 32, 1};\r\ntcp_info_opt({_, _}) ->\r\n    undefined.\r\n\r\ntcp_fsm_state(State, {unix, linux}) ->\r\n    %% netinet/tcp.h\r\n    %%   enum\r\n    %%   {\r\n    %%     TCP_ESTABLISHED = 1,\r\n    %%     TCP_SYN_SENT,\r\n    %%     TCP_SYN_RECV,\r\n    %%     TCP_FIN_WAIT1,\r\n    %%     TCP_FIN_WAIT2,\r\n    %%     TCP_TIME_WAIT,\r\n    %%     TCP_CLOSE,\r\n    %%     TCP_CLOSE_WAIT,\r\n    %%     TCP_LAST_ACK,\r\n    %%     TCP_LISTEN,\r\n    %%     TCP_CLOSING\r\n    %%   }\r\n    %%\r\n    lists:member(State, [4, 5, 6, 7, 8, 9, 10]);\r\ntcp_fsm_state(State, {unix, darwin}) ->\r\n    %% netinet/tcp_fsm.h\r\n    %%   #define TCPS_CLOSED             0       /* closed */\r\n    %%   #define TCPS_LISTEN             1       /* listening for connection */\r\n    %%   #define TCPS_SYN_SENT           2       /* active, have sent syn */\r\n    %%   #define TCPS_SYN_RECEIVED       3       /* have send and received syn */\r\n    %%   #define TCPS_ESTABLISHED        4       /* established */\r\n    %%   #define TCPS_CLOSE_WAIT         5       /* rcvd fin, waiting for close */\r\n    %%   #define TCPS_FIN_WAIT_1         6       /* have closed, sent fin */\r\n    %%   #define TCPS_CLOSING            7       /* closed xchd FIN; await FIN ACK */\r\n    %%   #define TCPS_LAST_ACK           8       /* had fin and close; await FIN ACK */\r\n    %%   #define TCPS_FIN_WAIT_2         9       /* have closed, fin is acked */\r\n    %%   #define TCPS_TIME_WAIT          10      /* in 2*msl quiet wait after close */\r\n    %%\r\n    lists:member(State, [0, 5, 6, 7, 8, 9, 10]);\r\ntcp_fsm_state(State, {unix, freebsd}) ->\r\n    %% netinet/tcp_fsm.h\r\n    %%   #define TCPS_CLOSED 0 /* closed */\r\n    %%   #define TCPS_LISTEN 1 /* listening for connection */\r\n    %%   #define TCPS_SYN_SENT 2  /* active, have sent syn */\r\n    %%   #define TCPS_SYN_RECEIVED 3 /* have sent and received syn */\r\n    %%   #define TCPS_ESTABLISHED 4 /* established */\r\n    %%   #define TCPS_CLOSE_WAIT 5 /* rcvd fin, waiting for close */\r\n    %%   #define TCPS_FIN_WAIT_1 6 /* have closed, sent fin */\r\n    %%   #define TCPS_CLOSING 7/* closed xchd FIN; await FIN ACK */\r\n    %%   #define TCPS_LAST_ACK 8/* had fin and close; await FIN ACK */\r\n    %%   #define TCPS_FIN_WAIT_2 9/* have closed, fin is acked */\r\n    %%   #define TCPS_TIME_WAIT 10 /* in 2*msl quiet wait after close */\r\n    %%\r\n    lists:member(State, [0, 5, 6, 7, 8, 9, 10]).\r\n\r\nmonitor_loop(Sock) ->\r\n    timer:sleep(1000),\r\n    io:format(\"[mon] is_closed: ~p~n\", [is_closed(Sock)]),\r\n    monitor_loop(Sock).\r\n\r\nclient(Port) ->\r\n    timer:sleep(1000),\r\n    io:format(\"[client] connecting on ~p~n\", [Port]),\r\n    {ok, ClientSock} = gen_tcp:connect(\"127.0.0.1\", Port, [{active, false}, binary]),\r\n    io:format(\"[client] connected ~p sleeping for 5 seconds and exiting~n\", [ClientSock]),\r\n    timer:sleep(5000),\r\n    io:format(\"[client] exiting ~n\", []),\r\n    ok.\r\n\r\nmain(_) ->\r\n    {ok, ListenSocket} = gen_tcp:listen(0, [binary, {active, false}]),\r\n    {ok, Port} = inet:port(ListenSocket),\r\n    io:format(\"[srv] spawning client to connect to port ~p~n\", [Port]),\r\n    spawn_link(fun() -> client(Port) end),\r\n    {ok, ClientSocket} = gen_tcp:accept(ListenSocket),\r\n    io:format(\"[srv] accepted a connection ~p, sleeping for 10 seconds then exiting ~n\", [ClientSocket]),\r\n    spawn_link(fun() -> monitor_loop(ClientSocket) end),\r\n    timer:sleep(10000).\r\n```\r\n\r\n```\r\n./tcp_server_erlang.escript\r\n[srv] spawning client to connect to port 59121\r\n[client] connecting on 59121\r\n[srv] accepted a connection #Port<0.8>, sleeping for 10 seconds then exiting\r\n[client] connected #Port<0.7> sleeping for 5 seconds and exiting\r\n[mon] is_closed: false\r\n[mon] is_closed: false\r\n[mon] is_closed: false\r\n[mon] is_closed: false\r\n[client] exiting\r\n[mon] is_closed: true\r\n[mon] is_closed: true\r\n[mon] is_closed: true\r\n[mon] is_closed: true\r\n[mon] is_closed: true\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689241307/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689333326","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1689333326","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1689333326,"node_id":"IC_kwDOAAMmUc5ksS5O","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-23T06:06:30Z","updated_at":"2023-08-23T06:06:30Z","author_association":"CONTRIBUTOR","body":"> updated again. I've expanded fabric_streams existing 'cleanup' process to be a watchdog (in the classic sense).\r\n> \r\n> before starting a fabric_stream you must call `fabric_stream:enable_watchdog().` If you do, the cleanup process starts a timer. If the watchdog is not kicked at least once (with `fabric_stream:kick_watchdog().`) before the timer fires, the watchdog kills the coordinator process (for us, the mochiweb/httpd process) and its workers.\r\n> \r\n> by default this is not active, so all calls to fabric:all_docs etc are unaffected.\r\n> \r\n> in mango_httpd I enable the watchdog and only when adding a row to the response do I kick the watchdog. If we go a long time between rows, the watchdog fires.\r\n> \r\n> similar enable/kick can be done on other endpoints.\r\n\r\nThat's a decent solution. It would detect inactivity on the application side (workers are slow or no index defined or if anything else gets stuck and we don't emit rows). The timeout might be a bit low as there might be existing (even if perhaps pathological) queries which could emit rows every 61 seconds, or if we raise to 5 minutes, there might still be a some cases which we might still break. It's sort of a balancing act as if we make it too large, it might reduce the effect of this watchdog (requests might pile up).\r\n\r\nI still think it might be better to be able to detect if the client socket has closed so I kept pressing with the tcp_info options check to see how many OS-es we it can cover and to make it a bit less ugly. So far I couldn't figure how to get windows to do it but got all the others I think. Here we can be more bold with a polling interval even at 5 or 10 seconds if needed as we can confidently clean if the client disconnects.\r\n\r\nAnother direction to take it is to emit newline (heartbeats) between json rows. I couldn't quite see where to do that without disturbing the views and all_docs callback mechanism too much. Maybe have a last timestamp on the cursor in https://github.com/apache/couchdb/blob/e60e27554708f46a9e6528fa6049d025c1aba859/src/mango/src/mango_cursor_view.erl#L487-L491 and we can issue a handle_doc(...) callback with a `timeout` and then in the mango_http we'd emit   a `\\n`?  That would maintain the connection alive and quit it as soon as a send failure happens? I am not too familiar with mango so that may be completely off, too.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689333326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689544073","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1689544073","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1689544073,"node_id":"IC_kwDOAAMmUc5ktGWJ","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-23T08:46:20Z","updated_at":"2023-08-23T08:46:20Z","author_association":"MEMBER","body":"I would also prefer to detect the client disconnect directly but I am less keen to see the raw packet inspection stuff in couchdb in general, unless we can be confident that it causes no harm on any platform we haven't handled. That it wouldn't work on Windows isn't a deal breaker for me, we'd need to mention that in the release notes, and perhaps someone more familiar with Windows could add support.\r\n\r\nAs for heartbeats in the `_find` response, this obviously changes the response in a way that no client is currently expected. The idea that a blank line (or whitespace in general) will be silently handled is reasonable but requires a lot of testing to be confident.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689544073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689656235","html_url":"https://github.com/apache/couchdb/issues/4706#issuecomment-1689656235","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4706","id":1689656235,"node_id":"IC_kwDOAAMmUc5kthur","user":{"login":"jjrodrig","id":1001724,"node_id":"MDQ6VXNlcjEwMDE3MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1001724?v=4","gravatar_id":"","url":"https://api.github.com/users/jjrodrig","html_url":"https://github.com/jjrodrig","followers_url":"https://api.github.com/users/jjrodrig/followers","following_url":"https://api.github.com/users/jjrodrig/following{/other_user}","gists_url":"https://api.github.com/users/jjrodrig/gists{/gist_id}","starred_url":"https://api.github.com/users/jjrodrig/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jjrodrig/subscriptions","organizations_url":"https://api.github.com/users/jjrodrig/orgs","repos_url":"https://api.github.com/users/jjrodrig/repos","events_url":"https://api.github.com/users/jjrodrig/events{/privacy}","received_events_url":"https://api.github.com/users/jjrodrig/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-23T09:55:10Z","updated_at":"2023-08-23T09:55:10Z","author_association":"CONTRIBUTOR","body":"Hi @nickva \r\n\r\nIt seems that the packaging process depends on the elixir environment but it is not prepared as we cleaned it completely. Some step is missing to recover it but i don't know where.\r\n\r\nAs a quick fix I can separate the elixir clean from the main clean target. So the new clean steps will not interfere in the current CI.  \r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689656235/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689759838","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1689759838","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1689759838,"node_id":"IC_kwDOAAMmUc5kt7Be","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-23T11:03:11Z","updated_at":"2023-08-23T11:03:11Z","author_association":"CONTRIBUTOR","body":"Maybe this is also off, but let me add that `mango_cursor_view` implements its own keep-alive mechanism: https://github.com/apache/couchdb/blob/e60e27554708f46a9e6528fa6049d025c1aba859/src/mango/src/mango_cursor_view.erl#L455-L467\r\n\r\nDoes not it cause problems in this case?  Or perhaps this could be utilized to hook up a countermeasure action. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689759838/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689765902","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1689765902","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1689765902,"node_id":"IC_kwDOAAMmUc5kt8gO","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-23T11:07:53Z","updated_at":"2023-08-23T11:07:53Z","author_association":"MEMBER","body":"I think that's the opposite direction, the coordinator making sure the workers are still alive and exiting if not.\r\n\r\nThe problem we're trying to address is when the coordinator and the workers are all working but the client, who would receive the http response, is gone, and thus they should all exit.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1689765902/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690154789","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1690154789","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1690154789,"node_id":"IC_kwDOAAMmUc5kvbcl","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-23T15:17:47Z","updated_at":"2023-08-23T15:17:47Z","author_association":"CONTRIBUTOR","body":"> I am less keen to see the raw packet inspection stuff in couchdb in general, unless we can be confident that it causes no harm on any platform we haven't handled.\r\n\r\nYeah, it would definitely be nicer if `inet:monitor/1` or `inet:info/1` worked here. However we have a limited set of supported platforms compared to Erlang/OTP itself, so we could test them in CI. On the ones I tried so far (linux: ubuntu on x86_64, ppc64le, z-linux, macos, windows) when it doesn't support the raw option it returns `{ok, []}` which we interpret as the default `socket not closed`. It does look ugly but it seems fairly safe as it doesn't alter the packet stream just copies a single byte from the stats, and we can always fallback to the old behavior for unsupported/unexpected platforms.\r\n\r\n> As for heartbeats in the `_find` response, this obviously changes the response in a way that no client is currently expected. The idea that a blank line (or whitespace in general) will be silently handled is reasonable but requires a lot of testing to be confident.\r\n\r\nOne thing this approach has for it is it has some precedent in the _changes feed. I think it's fairly likely that a client library would use the same streaming json parser code for both endpoints. But of course there could be cases of users rolling their own and only ever parsing _find and maybe _all_docs and never _changes feeds with heartbeats...\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690154789/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690198451","html_url":"https://github.com/apache/couchdb/issues/4706#issuecomment-1690198451","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4706","id":1690198451,"node_id":"IC_kwDOAAMmUc5kvmGz","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-23T15:44:09Z","updated_at":"2023-08-23T15:44:09Z","author_association":"CONTRIBUTOR","body":"Thanks @jjrodrig, yeah maybe a separate clean step would work.\r\n\r\nTo verify it would pass or not a pr branch that starts with `jenkins-` prefix would end up running both the quick PR CI and the full main one. That can help with checking if it would work or not without having to figure out the couchdb-pkg locally.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690198451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690629504","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1690629504","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1690629504,"node_id":"IC_kwDOAAMmUc5kxPWA","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-23T20:58:06Z","updated_at":"2023-08-23T20:58:06Z","author_association":"CONTRIBUTOR","body":"To see how it would look tried a PR with the tcp_info getopts: https://github.com/apache/couchdb/pull/4736\r\n\r\nI plugged it into the fabric_stream cleaners (and the db updater one) that part looks small enough. The ugliest thing is the socket options thing but it's confined to the util functions mostly. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690629504/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690634179","html_url":"https://github.com/apache/couchdb/pull/4736#issuecomment-1690634179","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4736","id":1690634179,"node_id":"IC_kwDOAAMmUc5kxQfD","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-23T21:02:16Z","updated_at":"2023-08-23T21:02:16Z","author_association":"MEMBER","body":"I like this, tidier than https://github.com/apache/couchdb/pull/4729 and the tcp decoding bits aren't too bad.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690634179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690646070","html_url":"https://github.com/apache/couchdb/pull/4729#issuecomment-1690646070","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4729","id":1690646070,"node_id":"IC_kwDOAAMmUc5kxTY2","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-23T21:12:54Z","updated_at":"2023-08-23T21:12:54Z","author_association":"MEMBER","body":"closing in favour of approach in https://github.com/apache/couchdb/pull/4736","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690646070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690906135","html_url":"https://github.com/apache/couchdb/pull/4736#issuecomment-1690906135","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4736","id":1690906135,"node_id":"IC_kwDOAAMmUc5kyS4X","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-24T02:43:22Z","updated_at":"2023-08-24T02:43:22Z","author_association":"CONTRIBUTOR","body":"Ran the [full CI](https://ci-couchdb.apache.org/blue/organizations/jenkins/jenkins-cm1%2FFullPlatformMatrix/detail/jenkins-monitor-client-socket-for-disconnections/1/pipeline/79) test to check exercise the code on a variety of platforms in:\r\n\r\n<img width=\"549\" alt=\"Screen Shot 2023-08-23 at 10 38 53 PM\" src=\"https://github.com/apache/couchdb/assets/211822/873f0bd3-5971-4651-918e-4f2fc0536574\">\r\n\r\n(.deb package builds fail for an unrelated reason but all the main CI steps pass)\r\n\r\nThe combination of os-es include `ubuntu`, `debian`, `centos`, `macos`, `freebsd`. Architectures include: `x86_64`, `ppc64le`, `s390x`, `arm64`. All tests pass on all currently available platforms. On Windows I tested a script manually to show that inet:getopts returns `{ok, []}` so we'd fall back to a default of `socket not closed`.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690906135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690978405","html_url":"https://github.com/apache/couchdb/pull/4736#issuecomment-1690978405","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4736","id":1690978405,"node_id":"IC_kwDOAAMmUc5kykhl","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-24T04:26:53Z","updated_at":"2023-08-24T04:26:53Z","author_association":"CONTRIBUTOR","body":"Wondering about the performance cost of `inet:getopts/2` with `tcp_info` raw option. It looks to be about 1-2 microseconds on both Linux and MacOS:\r\n\r\nMac\r\n```\r\n> element(1, timer:tc(fun() -> lists:foreach(fun(_) -> inet:getopts(#Port<0.33>, [{raw, 6, 262, 1}]) end, lists:seq(1, 10000)) end)) / 10000.\r\n1.4706\r\n```\r\n\r\nLinux\r\n```\r\n element(1, timer:tc(fun() -> lists:foreach(fun(_) -> inet:getopts(#Port<0.5>, [{raw, 6, 11, 1}]) end, lists:seq(1, 10000)) end)) / 10000.\r\n1.7163\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1690978405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1691429128","html_url":"https://github.com/apache/couchdb/issues/4725#issuecomment-1691429128","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4725","id":1691429128,"node_id":"IC_kwDOAAMmUc5k0SkI","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-24T10:32:50Z","updated_at":"2023-08-24T10:32:50Z","author_association":"MEMBER","body":"https://docs.couchdb.org/en/stable/best-practices/views.html#deploying-a-view-change-in-a-live-environment","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1691429128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1692072177","html_url":"https://github.com/apache/couchdb/pull/4736#issuecomment-1692072177","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4736","id":1692072177,"node_id":"IC_kwDOAAMmUc5k2vjx","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-24T16:53:44Z","updated_at":"2023-08-24T16:53:44Z","author_association":"CONTRIBUTOR","body":"Testing with a local TLS listening socket:\r\n\r\nWith a patch to block _all_docs:\r\n\r\n```diff\r\ndiff --git a/src/fabric/src/fabric_view_all_docs.erl b/src/fabric/src/fabric_view_all_docs.erl\r\nindex a6786bff7..b0bbdaf5a 100644\r\n--- a/src/fabric/src/fabric_view_all_docs.erl\r\n+++ b/src/fabric/src/fabric_view_all_docs.erl\r\n@@ -263,6 +263,8 @@ handle_message(#view_row{} = Row, {Worker, From}, State) ->\r\n     Rows = merge_row(Dir, Row#view_row{worker = {Worker, From}}, Rows0),\r\n     Counters1 = fabric_dict:update_counter(Worker, 1, Counters0),\r\n     State1 = State#collector{rows = Rows, counters = Counters1},\r\n+    couch_log:error(\" +++sleeping before sending row++++ ~p:~p@~B~p\", [?MODULE, ?FUNCTION_NAME, ?LINE, Row]),\r\n+    timer:sleep(60000),\r\n     fabric_view:maybe_send_row(State1);\r\n```\r\n\r\nI see the expected log line:\r\n```\r\n[warning] 2023-08-24T16:40:44.677817Z node1@127.0.0.1 <0.2203.0> -------- client socket {ssl,{sslsocket,{gen_tcp,#Port<0.18>,tls_connection,[{option_tracker,<0.636.0>},{session_tickets_tracker,disabled},{session_id_tracker,<0.637.0>}]},[<0.2191.0>,<0.2190.0>]}} disconnected, terminating <0.2061.0>\r\n```\r\n\r\nThat seems too verbose so after discussing with @rnewson we figured we should remove the log line altogether.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1692072177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1692131403","html_url":"https://github.com/apache/couchdb/pull/4736#issuecomment-1692131403","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4736","id":1692131403,"node_id":"IC_kwDOAAMmUc5k2-BL","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-24T17:26:59Z","updated_at":"2023-08-24T17:26:59Z","author_association":"CONTRIBUTOR","body":"The previous warning log line was replaced with a stats bump:\r\n\r\n```\r\n{[couchdb, httpd, abandoned_streaming_requests], [\r\n    {type, counter},\r\n    {desc, <<\"number of abandoned streaming requests\">>}\r\n]}.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1692131403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1692339518","html_url":"https://github.com/apache/couchdb/pull/4740#issuecomment-1692339518","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4740","id":1692339518,"node_id":"IC_kwDOAAMmUc5k3w0-","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-24T20:09:16Z","updated_at":"2023-08-24T20:09:16Z","author_association":"CONTRIBUTOR","body":"It looks like this fixes the CI: https://ci-couchdb.apache.org/blue/organizations/jenkins/jenkins-cm1%2FFullPlatformMatrix/detail/jenkins-try-to-fix-dep-package-builds/2/pipeline›\r\n\r\n<img width=\"678\" alt=\"Screen Shot 2023-08-24 at 4 07 47 PM\" src=\"https://github.com/apache/couchdb/assets/211822/84d192f3-6142-4ac4-9517-cf7f3ac8f1d6\">\r\n\r\nI tested that I could run elixir tests with Elixir 1.15 and Erlang 24\r\n\r\n```\r\n% make elixir\r\n...\r\n\r\nFinished in 227.6 seconds (0.00s async, 227.6s sync)\r\n538 tests, 0 failures, 8 excluded\r\n\r\n% iex\r\nErlang/OTP 24 [erts-12.3.2.13] [source] [64-bit] [smp:12:12] [ds:12:12:10] [async-threads:1] [jit]\r\n\r\nInteractive Elixir (1.15.4) - press Ctrl+C to exit (type h() ENTER for help)\r\niex(1)>\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1692339518/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1692465454","html_url":"https://github.com/apache/couchdb/pull/4740#issuecomment-1692465454","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4740","id":1692465454,"node_id":"IC_kwDOAAMmUc5k4Pku","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-24T21:54:14Z","updated_at":"2023-08-24T21:54:14Z","author_association":"CONTRIBUTOR","body":"I tested this locally with Elixir 1.15.4 and OTP 25 and I can confirm it works.\r\n\r\n```console\r\n% elixir --version\r\nErlang/OTP 25 [erts-13.2.2.2] [source] [64-bit] [smp:10:10] [ds:10:10:10] [async-threads:1] [jit]\r\n\r\nElixir 1.15.4 (compiled with Erlang/OTP 25)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1692465454/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1692722241","html_url":"https://github.com/apache/couchdb/issues/4706#issuecomment-1692722241","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4706","id":1692722241,"node_id":"IC_kwDOAAMmUc5k5ORB","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-25T04:01:12Z","updated_at":"2023-08-25T04:01:12Z","author_association":"CONTRIBUTOR","body":"I gave it a try in https://github.com/apache/couchdb/pull/4740 and it seems to have restored deb package builds. Unfortunately that means not cleaning the _build dirs and deps so may need another look over it. But at least for now it seems we can use Elixir 1.15.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1692722241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1693008757","html_url":"https://github.com/apache/couchdb/issues/4706#issuecomment-1693008757","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4706","id":1693008757,"node_id":"IC_kwDOAAMmUc5k6UN1","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-25T08:49:43Z","updated_at":"2023-08-25T08:49:43Z","author_association":"CONTRIBUTOR","body":"Thanks @nickva !  Yeah, I agree that the package building should be fixed.  But the `main` build is at least unbroken.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1693008757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1693474756","html_url":"https://github.com/apache/couchdb/pull/4736#issuecomment-1693474756","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4736","id":1693474756,"node_id":"IC_kwDOAAMmUc5k8F_E","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-25T14:42:59Z","updated_at":"2023-08-25T14:42:59Z","author_association":"CONTRIBUTOR","body":"@rnewson Good idea about trying to make a PR for mochiweb. I think we could make a case for it to fit in either mochiweb_socket or mochiweb_request.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1693474756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]