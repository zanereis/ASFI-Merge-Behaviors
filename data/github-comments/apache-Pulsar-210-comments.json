[{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617389683","html_url":"https://github.com/apache/pulsar/pull/6648#issuecomment-617389683","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6648","id":617389683,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzM4OTY4Mw==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-21T20:13:50Z","updated_at":"2020-04-21T20:13:50Z","author_association":"MEMBER","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617389683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617389975","html_url":"https://github.com/apache/pulsar/pull/6659#issuecomment-617389975","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6659","id":617389975,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzM4OTk3NQ==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-21T20:14:22Z","updated_at":"2020-04-21T20:14:22Z","author_association":"MEMBER","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617389975/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617390187","html_url":"https://github.com/apache/pulsar/pull/6679#issuecomment-617390187","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6679","id":617390187,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzM5MDE4Nw==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-21T20:14:48Z","updated_at":"2020-04-21T20:14:48Z","author_association":"MEMBER","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617390187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617391035","html_url":"https://github.com/apache/pulsar/pull/6331#issuecomment-617391035","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6331","id":617391035,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzM5MTAzNQ==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-21T20:16:24Z","updated_at":"2020-04-21T20:16:24Z","author_association":"MEMBER","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617391035/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617391603","html_url":"https://github.com/apache/pulsar/pull/6524#issuecomment-617391603","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6524","id":617391603,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzM5MTYwMw==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-21T20:17:28Z","updated_at":"2020-04-21T20:17:28Z","author_association":"MEMBER","body":"@codelipenghui @jiazhai can you review this pull request again?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617391603/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617403363","html_url":"https://github.com/apache/pulsar/pull/6720#issuecomment-617403363","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6720","id":617403363,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzQwMzM2Mw==","user":{"login":"cbornet","id":11633333,"node_id":"MDQ6VXNlcjExNjMzMzMz","avatar_url":"https://avatars.githubusercontent.com/u/11633333?v=4","gravatar_id":"","url":"https://api.github.com/users/cbornet","html_url":"https://github.com/cbornet","followers_url":"https://api.github.com/users/cbornet/followers","following_url":"https://api.github.com/users/cbornet/following{/other_user}","gists_url":"https://api.github.com/users/cbornet/gists{/gist_id}","starred_url":"https://api.github.com/users/cbornet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cbornet/subscriptions","organizations_url":"https://api.github.com/users/cbornet/orgs","repos_url":"https://api.github.com/users/cbornet/repos","events_url":"https://api.github.com/users/cbornet/events{/privacy}","received_events_url":"https://api.github.com/users/cbornet/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-21T20:42:00Z","updated_at":"2020-04-23T12:43:56Z","author_association":"CONTRIBUTOR","body":"The change is already in this PR. I did it in the 2nd commit. The interface to implement by protocol handlers is `ServerCnx`.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617403363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617468740","html_url":"https://github.com/apache/pulsar/issues/6789#issuecomment-617468740","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6789","id":617468740,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzQ2ODc0MA==","user":{"login":"cdbartholomew","id":22917476,"node_id":"MDQ6VXNlcjIyOTE3NDc2","avatar_url":"https://avatars.githubusercontent.com/u/22917476?v=4","gravatar_id":"","url":"https://api.github.com/users/cdbartholomew","html_url":"https://github.com/cdbartholomew","followers_url":"https://api.github.com/users/cdbartholomew/followers","following_url":"https://api.github.com/users/cdbartholomew/following{/other_user}","gists_url":"https://api.github.com/users/cdbartholomew/gists{/gist_id}","starred_url":"https://api.github.com/users/cdbartholomew/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cdbartholomew/subscriptions","organizations_url":"https://api.github.com/users/cdbartholomew/orgs","repos_url":"https://api.github.com/users/cdbartholomew/repos","events_url":"https://api.github.com/users/cdbartholomew/events{/privacy}","received_events_url":"https://api.github.com/users/cdbartholomew/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-21T23:48:23Z","updated_at":"2020-04-21T23:48:23Z","author_association":"CONTRIBUTOR","body":"You can either configure authentication in your Prometheus scrape job or disable authentication on the proxy metrics endpoint. To disable, you should be able to set the following in your proxy.conf:\r\n\r\n```\r\nauthenticateMetricsEndpoint=false\r\n```\r\nSee https://github.com/apache/pulsar/pull/4921 for more details.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617468740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617473254","html_url":"https://github.com/apache/pulsar/issues/5241#issuecomment-617473254","issue_url":"https://api.github.com/repos/apache/pulsar/issues/5241","id":617473254,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzQ3MzI1NA==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T00:06:13Z","updated_at":"2020-04-22T00:06:13Z","author_association":"MEMBER","body":"This is solved by #6760 ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617473254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617473576","html_url":"https://github.com/apache/pulsar/pull/6777#issuecomment-617473576","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6777","id":617473576,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzQ3MzU3Ng==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T00:07:28Z","updated_at":"2020-04-22T00:07:28Z","author_association":"MEMBER","body":"@zymap when you removed mysql from jdbc connector, do you need to fix the integration test?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617473576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617473644","html_url":"https://github.com/apache/pulsar/pull/6788#issuecomment-617473644","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6788","id":617473644,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzQ3MzY0NA==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T00:07:39Z","updated_at":"2020-04-22T00:07:39Z","author_association":"MEMBER","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617473644/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617474793","html_url":"https://github.com/apache/pulsar/pull/6705#issuecomment-617474793","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6705","id":617474793,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzQ3NDc5Mw==","user":{"login":"hangc0276","id":5436568,"node_id":"MDQ6VXNlcjU0MzY1Njg=","avatar_url":"https://avatars.githubusercontent.com/u/5436568?v=4","gravatar_id":"","url":"https://api.github.com/users/hangc0276","html_url":"https://github.com/hangc0276","followers_url":"https://api.github.com/users/hangc0276/followers","following_url":"https://api.github.com/users/hangc0276/following{/other_user}","gists_url":"https://api.github.com/users/hangc0276/gists{/gist_id}","starred_url":"https://api.github.com/users/hangc0276/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hangc0276/subscriptions","organizations_url":"https://api.github.com/users/hangc0276/orgs","repos_url":"https://api.github.com/users/hangc0276/repos","events_url":"https://api.github.com/users/hangc0276/events{/privacy}","received_events_url":"https://api.github.com/users/hangc0276/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T00:12:14Z","updated_at":"2020-04-22T00:12:14Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617474793/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617489906","html_url":"https://github.com/apache/pulsar/pull/6787#issuecomment-617489906","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6787","id":617489906,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzQ4OTkwNg==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T01:13:47Z","updated_at":"2020-04-22T01:13:47Z","author_association":"CONTRIBUTOR","body":"> Does this result in any data loss or unexpected behaviors when using the reader API?\r\n\r\nThe reader, per definition, doesn't cause the data to be retained. In this case, in the moment the reader is temporarily disconnected, the data would be deleted immediately, if the retention policy says so.\r\n\r\nFor that, an application using readers needs to configure appropriate retention.\r\n\r\nThe only difference here is when the readers are connected. The current behavior is to consider the reader subject to the backlog quota policy, which is incorrect given that backlog only applies to a subscription.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617489906/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617495396","html_url":"https://github.com/apache/pulsar/pull/6783#issuecomment-617495396","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6783","id":617495396,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzQ5NTM5Ng==","user":{"login":"zplinuxlover","id":23027077,"node_id":"MDQ6VXNlcjIzMDI3MDc3","avatar_url":"https://avatars.githubusercontent.com/u/23027077?v=4","gravatar_id":"","url":"https://api.github.com/users/zplinuxlover","html_url":"https://github.com/zplinuxlover","followers_url":"https://api.github.com/users/zplinuxlover/followers","following_url":"https://api.github.com/users/zplinuxlover/following{/other_user}","gists_url":"https://api.github.com/users/zplinuxlover/gists{/gist_id}","starred_url":"https://api.github.com/users/zplinuxlover/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zplinuxlover/subscriptions","organizations_url":"https://api.github.com/users/zplinuxlover/orgs","repos_url":"https://api.github.com/users/zplinuxlover/repos","events_url":"https://api.github.com/users/zplinuxlover/events{/privacy}","received_events_url":"https://api.github.com/users/zplinuxlover/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T01:35:47Z","updated_at":"2020-04-22T01:35:47Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617495396/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617495498","html_url":"https://github.com/apache/pulsar/pull/6783#issuecomment-617495498","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6783","id":617495498,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzQ5NTQ5OA==","user":{"login":"zplinuxlover","id":23027077,"node_id":"MDQ6VXNlcjIzMDI3MDc3","avatar_url":"https://avatars.githubusercontent.com/u/23027077?v=4","gravatar_id":"","url":"https://api.github.com/users/zplinuxlover","html_url":"https://github.com/zplinuxlover","followers_url":"https://api.github.com/users/zplinuxlover/followers","following_url":"https://api.github.com/users/zplinuxlover/following{/other_user}","gists_url":"https://api.github.com/users/zplinuxlover/gists{/gist_id}","starred_url":"https://api.github.com/users/zplinuxlover/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zplinuxlover/subscriptions","organizations_url":"https://api.github.com/users/zplinuxlover/orgs","repos_url":"https://api.github.com/users/zplinuxlover/repos","events_url":"https://api.github.com/users/zplinuxlover/events{/privacy}","received_events_url":"https://api.github.com/users/zplinuxlover/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T01:36:13Z","updated_at":"2020-04-22T01:36:13Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617495498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617497271","html_url":"https://github.com/apache/pulsar/pull/6647#issuecomment-617497271","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6647","id":617497271,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzQ5NzI3MQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T01:43:30Z","updated_at":"2020-04-22T01:43:30Z","author_association":"CONTRIBUTOR","body":"Hi @codelipenghui. I'm failing to see a practical difference in the code here compared to the previous implementation. \r\n\r\nI think the only difference is when the `%` is done, but there's no performance or efficiency difference. ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617497271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617502972","html_url":"https://github.com/apache/pulsar/issues/1571#issuecomment-617502972","issue_url":"https://api.github.com/repos/apache/pulsar/issues/1571","id":617502972,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzUwMjk3Mg==","user":{"login":"zxbfeng","id":7436339,"node_id":"MDQ6VXNlcjc0MzYzMzk=","avatar_url":"https://avatars.githubusercontent.com/u/7436339?v=4","gravatar_id":"","url":"https://api.github.com/users/zxbfeng","html_url":"https://github.com/zxbfeng","followers_url":"https://api.github.com/users/zxbfeng/followers","following_url":"https://api.github.com/users/zxbfeng/following{/other_user}","gists_url":"https://api.github.com/users/zxbfeng/gists{/gist_id}","starred_url":"https://api.github.com/users/zxbfeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zxbfeng/subscriptions","organizations_url":"https://api.github.com/users/zxbfeng/orgs","repos_url":"https://api.github.com/users/zxbfeng/repos","events_url":"https://api.github.com/users/zxbfeng/events{/privacy}","received_events_url":"https://api.github.com/users/zxbfeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T02:03:26Z","updated_at":"2020-04-22T02:03:26Z","author_association":"NONE","body":"> @bardock Skipping messages from that ledger should solve the issue.\r\n> \r\n> In particular you can get the internal stats for the topic:\r\n> \r\n> ```\r\n> bin/pulsar admin persistent stats-internal $TOPIC\r\n> ```\r\n> \r\n> This should have the info on how many messages were still not acked on that ledger. I think the TTL is not working there because it's trying to read few of the messages to check the timestamps.\r\n\r\n\r\nHow did this problem(\"`No such ledger exists` error\") arise? My pulsar broker aries the same problem!!","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617502972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617503423","html_url":"https://github.com/apache/pulsar/issues/1571#issuecomment-617503423","issue_url":"https://api.github.com/repos/apache/pulsar/issues/1571","id":617503423,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzUwMzQyMw==","user":{"login":"zxbfeng","id":7436339,"node_id":"MDQ6VXNlcjc0MzYzMzk=","avatar_url":"https://avatars.githubusercontent.com/u/7436339?v=4","gravatar_id":"","url":"https://api.github.com/users/zxbfeng","html_url":"https://github.com/zxbfeng","followers_url":"https://api.github.com/users/zxbfeng/followers","following_url":"https://api.github.com/users/zxbfeng/following{/other_user}","gists_url":"https://api.github.com/users/zxbfeng/gists{/gist_id}","starred_url":"https://api.github.com/users/zxbfeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zxbfeng/subscriptions","organizations_url":"https://api.github.com/users/zxbfeng/orgs","repos_url":"https://api.github.com/users/zxbfeng/repos","events_url":"https://api.github.com/users/zxbfeng/events{/privacy}","received_events_url":"https://api.github.com/users/zxbfeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T02:05:12Z","updated_at":"2020-04-22T02:05:12Z","author_association":"NONE","body":"> A broker owner of a topic partition is always failing trying to read a ledger because ledger doesn't exist in bookkeeper (we checked using `bookkeeper shell ledger`).\r\n> \r\n> Broker log:\r\n> \r\n> ```\r\n> 2018-04-13 14:16:11,677 - ERROR - [bookkeeper-ml-workers-38-1:ManagedLedgerImpl@1345] - [fury/global/8caa83e304674002a34f441f34f73f63-shipping-shipping/persistent/8caa83e304674002a34f441f34f73f63-shipping-shipping-partition-4] Error opening ledger for reading at position 7539625:0 - org.apache.bookkeeper.mledger.ManagedLedgerException: No such ledger exists\r\n> ```\r\n> \r\n> This error is happening always for the same partition and ledger id, since several weeks ago, even namespace retention and message TTL are set to 7 days.\r\n> \r\n> What is the recommended way to fix this particular case? How can we safely remove ledger id from partition metadata?\r\n> \r\n> Thanks!\r\n> \r\n> #### System configuration\r\n> **Pulsar version**: 1.20.0\r\n\r\nDid you know how did this problem arise ? The system config or zookeeper error or other reasons!!!","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617503423/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617540979","html_url":"https://github.com/apache/pulsar/issues/5138#issuecomment-617540979","issue_url":"https://api.github.com/repos/apache/pulsar/issues/5138","id":617540979,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzU0MDk3OQ==","user":{"login":"phemmer","id":1826947,"node_id":"MDQ6VXNlcjE4MjY5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/1826947?v=4","gravatar_id":"","url":"https://api.github.com/users/phemmer","html_url":"https://github.com/phemmer","followers_url":"https://api.github.com/users/phemmer/followers","following_url":"https://api.github.com/users/phemmer/following{/other_user}","gists_url":"https://api.github.com/users/phemmer/gists{/gist_id}","starred_url":"https://api.github.com/users/phemmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phemmer/subscriptions","organizations_url":"https://api.github.com/users/phemmer/orgs","repos_url":"https://api.github.com/users/phemmer/repos","events_url":"https://api.github.com/users/phemmer/events{/privacy}","received_events_url":"https://api.github.com/users/phemmer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T04:24:06Z","updated_at":"2020-04-22T04:24:06Z","author_association":"NONE","body":"I've created a wrapper around `pulsar-function-go/pf` which provides state support. It's pretty minimal at the moment, and needs more work (concurrency safety & documentation), but it does function. If you're interested, it can be found here: https://godoc.org/github.com/phemmer/go-pulsar-state/pulsar\r\n\r\nAn example of it's usage can be found here: https://github.com/phemmer/go-pulsar-state/blob/master/pulsar/examples/wordcount/wordcount.go","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617540979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617576990","html_url":"https://github.com/apache/pulsar/pull/6732#issuecomment-617576990","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6732","id":617576990,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzU3Njk5MA==","user":{"login":"BewareMyPower","id":18204803,"node_id":"MDQ6VXNlcjE4MjA0ODAz","avatar_url":"https://avatars.githubusercontent.com/u/18204803?v=4","gravatar_id":"","url":"https://api.github.com/users/BewareMyPower","html_url":"https://github.com/BewareMyPower","followers_url":"https://api.github.com/users/BewareMyPower/followers","following_url":"https://api.github.com/users/BewareMyPower/following{/other_user}","gists_url":"https://api.github.com/users/BewareMyPower/gists{/gist_id}","starred_url":"https://api.github.com/users/BewareMyPower/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BewareMyPower/subscriptions","organizations_url":"https://api.github.com/users/BewareMyPower/orgs","repos_url":"https://api.github.com/users/BewareMyPower/repos","events_url":"https://api.github.com/users/BewareMyPower/events{/privacy}","received_events_url":"https://api.github.com/users/BewareMyPower/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T06:25:09Z","updated_at":"2020-04-22T06:25:09Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617576990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617586912","html_url":"https://github.com/apache/pulsar/pull/6787#issuecomment-617586912","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6787","id":617586912,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzU4NjkxMg==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T06:51:38Z","updated_at":"2020-04-22T06:51:38Z","author_association":"CONTRIBUTOR","body":"@sijie @merlimat thanks for the review PTAL.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617586912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617601784","html_url":"https://github.com/apache/pulsar/pull/6732#issuecomment-617601784","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6732","id":617601784,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzYwMTc4NA==","user":{"login":"BewareMyPower","id":18204803,"node_id":"MDQ6VXNlcjE4MjA0ODAz","avatar_url":"https://avatars.githubusercontent.com/u/18204803?v=4","gravatar_id":"","url":"https://api.github.com/users/BewareMyPower","html_url":"https://github.com/BewareMyPower","followers_url":"https://api.github.com/users/BewareMyPower/followers","following_url":"https://api.github.com/users/BewareMyPower/following{/other_user}","gists_url":"https://api.github.com/users/BewareMyPower/gists{/gist_id}","starred_url":"https://api.github.com/users/BewareMyPower/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BewareMyPower/subscriptions","organizations_url":"https://api.github.com/users/BewareMyPower/orgs","repos_url":"https://api.github.com/users/BewareMyPower/repos","events_url":"https://api.github.com/users/BewareMyPower/events{/privacy}","received_events_url":"https://api.github.com/users/BewareMyPower/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T07:26:14Z","updated_at":"2020-04-22T07:26:14Z","author_association":"CONTRIBUTOR","body":"@merlimat @sijie Finally all checks have passed :) PTAL","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617601784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617606657","html_url":"https://github.com/apache/pulsar/pull/6794#issuecomment-617606657","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6794","id":617606657,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzYwNjY1Nw==","user":{"login":"equanz","id":12148992,"node_id":"MDQ6VXNlcjEyMTQ4OTky","avatar_url":"https://avatars.githubusercontent.com/u/12148992?v=4","gravatar_id":"","url":"https://api.github.com/users/equanz","html_url":"https://github.com/equanz","followers_url":"https://api.github.com/users/equanz/followers","following_url":"https://api.github.com/users/equanz/following{/other_user}","gists_url":"https://api.github.com/users/equanz/gists{/gist_id}","starred_url":"https://api.github.com/users/equanz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/equanz/subscriptions","organizations_url":"https://api.github.com/users/equanz/orgs","repos_url":"https://api.github.com/users/equanz/repos","events_url":"https://api.github.com/users/equanz/events{/privacy}","received_events_url":"https://api.github.com/users/equanz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T07:36:40Z","updated_at":"2020-04-22T07:36:40Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617606657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617621377","html_url":"https://github.com/apache/pulsar/pull/6647#issuecomment-617621377","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6647","id":617621377,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzYyMTM3Nw==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T08:06:44Z","updated_at":"2020-04-22T08:06:44Z","author_association":"CONTRIBUTOR","body":"@merlimat \r\n\r\nThe difference is I hashed the key twice before, this change is reduced one hash calculation in the selector.\r\n\r\nAnother difference is, I group the messages by the message key, but when users use random keys, the dispatcher can get benefit from the group operation. So the new way is grouped by `hash(key) % ranges`, so that we can also get group benefit for random keys. The benefit is we can reduce operates of the LinkedHashMap.\r\n\r\nI have analyzed by yourkit, the managed ledger worker thread in high CPU workload with random keys and non-batched messages.\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617621377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617632190","html_url":"https://github.com/apache/pulsar/pull/6791#issuecomment-617632190","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6791","id":617632190,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzYzMjE5MA==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T08:28:29Z","updated_at":"2020-04-22T08:28:29Z","author_association":"CONTRIBUTOR","body":"@merlimat I'm working on fixing ordering dispatching for consumers adds and removes. This is issue #6554 for it and we have discussed in the slack channel https://apache-pulsar.slack.com/archives/C5Z4T36F7/p1585579082105200\r\n\r\nI want to introduce a concept named fenced range, the main idea is for do not block the whole dispatching task when consumers changed(especially add consumer). \r\n\r\nThe general approach is when a new consumer added, the split range becomes fenced. And every split range has a buffer(it's more like `messagesToRedeliver` in the dispatcher). The messages that dispatch to this range will add the buffer and do not dispatch to the consumer. When the owner consumer of the split range takes all messages of its receiver queue, the fenced range become un-fenced, so that we can redeliver these messages. Every fenced range has a fence timeout, this can be controlled by users. \r\n\r\nI need to rethink how to leverage this idea on the consistent hashing approach. If you have any idea, please ping me, thanks.\r\n\r\nThe PR looks good.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617632190/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617633289","html_url":"https://github.com/apache/pulsar/issues/6785#issuecomment-617633289","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6785","id":617633289,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzYzMzI4OQ==","user":{"login":"zyllt","id":8822016,"node_id":"MDQ6VXNlcjg4MjIwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/8822016?v=4","gravatar_id":"","url":"https://api.github.com/users/zyllt","html_url":"https://github.com/zyllt","followers_url":"https://api.github.com/users/zyllt/followers","following_url":"https://api.github.com/users/zyllt/following{/other_user}","gists_url":"https://api.github.com/users/zyllt/gists{/gist_id}","starred_url":"https://api.github.com/users/zyllt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zyllt/subscriptions","organizations_url":"https://api.github.com/users/zyllt/orgs","repos_url":"https://api.github.com/users/zyllt/repos","events_url":"https://api.github.com/users/zyllt/events{/privacy}","received_events_url":"https://api.github.com/users/zyllt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T08:30:38Z","updated_at":"2020-04-22T08:30:38Z","author_association":"NONE","body":"java client has same problem.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617633289/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617640965","html_url":"https://github.com/apache/pulsar/pull/6758#issuecomment-617640965","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6758","id":617640965,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzY0MDk2NQ==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T08:44:20Z","updated_at":"2020-04-22T08:44:20Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617640965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617644048","html_url":"https://github.com/apache/pulsar/pull/6770#issuecomment-617644048","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6770","id":617644048,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzY0NDA0OA==","user":{"login":"vzhikserg","id":7816474,"node_id":"MDQ6VXNlcjc4MTY0NzQ=","avatar_url":"https://avatars.githubusercontent.com/u/7816474?v=4","gravatar_id":"","url":"https://api.github.com/users/vzhikserg","html_url":"https://github.com/vzhikserg","followers_url":"https://api.github.com/users/vzhikserg/followers","following_url":"https://api.github.com/users/vzhikserg/following{/other_user}","gists_url":"https://api.github.com/users/vzhikserg/gists{/gist_id}","starred_url":"https://api.github.com/users/vzhikserg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vzhikserg/subscriptions","organizations_url":"https://api.github.com/users/vzhikserg/orgs","repos_url":"https://api.github.com/users/vzhikserg/repos","events_url":"https://api.github.com/users/vzhikserg/events{/privacy}","received_events_url":"https://api.github.com/users/vzhikserg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T08:49:51Z","updated_at":"2020-04-22T08:49:51Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617644048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617649144","html_url":"https://github.com/apache/pulsar/pull/6764#issuecomment-617649144","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6764","id":617649144,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzY0OTE0NA==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T08:59:30Z","updated_at":"2020-04-22T08:59:30Z","author_association":"CONTRIBUTOR","body":"@315157973 Do we need to change the schema delete logic for fixing the issue? I don't see what's the problem with the current deletion logic, just see the get schema version does not filter out the deleted schema. The delete schema method is unused and I think the current logic uses `deleteSchema` method in the `SchemaRegistryServiceImpl`. If I missed something, please point out, thanks.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617649144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617650131","html_url":"https://github.com/apache/pulsar/pull/6776#issuecomment-617650131","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6776","id":617650131,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzY1MDEzMQ==","user":{"login":"wolfstudy","id":20965307,"node_id":"MDQ6VXNlcjIwOTY1MzA3","avatar_url":"https://avatars.githubusercontent.com/u/20965307?v=4","gravatar_id":"","url":"https://api.github.com/users/wolfstudy","html_url":"https://github.com/wolfstudy","followers_url":"https://api.github.com/users/wolfstudy/followers","following_url":"https://api.github.com/users/wolfstudy/following{/other_user}","gists_url":"https://api.github.com/users/wolfstudy/gists{/gist_id}","starred_url":"https://api.github.com/users/wolfstudy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wolfstudy/subscriptions","organizations_url":"https://api.github.com/users/wolfstudy/orgs","repos_url":"https://api.github.com/users/wolfstudy/repos","events_url":"https://api.github.com/users/wolfstudy/events{/privacy}","received_events_url":"https://api.github.com/users/wolfstudy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T09:01:20Z","updated_at":"2020-04-22T09:01:20Z","author_association":"MEMBER","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617650131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617653010","html_url":"https://github.com/apache/pulsar/pull/6717#issuecomment-617653010","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6717","id":617653010,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzY1MzAxMA==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T09:06:54Z","updated_at":"2020-04-22T09:06:54Z","author_association":"CONTRIBUTOR","body":"Nice work! 👍 @pheecian ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617653010/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617655344","html_url":"https://github.com/apache/pulsar/pull/6783#issuecomment-617655344","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6783","id":617655344,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzY1NTM0NA==","user":{"login":"zplinuxlover","id":23027077,"node_id":"MDQ6VXNlcjIzMDI3MDc3","avatar_url":"https://avatars.githubusercontent.com/u/23027077?v=4","gravatar_id":"","url":"https://api.github.com/users/zplinuxlover","html_url":"https://github.com/zplinuxlover","followers_url":"https://api.github.com/users/zplinuxlover/followers","following_url":"https://api.github.com/users/zplinuxlover/following{/other_user}","gists_url":"https://api.github.com/users/zplinuxlover/gists{/gist_id}","starred_url":"https://api.github.com/users/zplinuxlover/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zplinuxlover/subscriptions","organizations_url":"https://api.github.com/users/zplinuxlover/orgs","repos_url":"https://api.github.com/users/zplinuxlover/repos","events_url":"https://api.github.com/users/zplinuxlover/events{/privacy}","received_events_url":"https://api.github.com/users/zplinuxlover/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T09:11:35Z","updated_at":"2020-04-22T09:11:35Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617655344/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617663096","html_url":"https://github.com/apache/pulsar/pull/6705#issuecomment-617663096","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6705","id":617663096,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzY2MzA5Ng==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T09:26:03Z","updated_at":"2020-04-22T09:26:03Z","author_association":"CONTRIBUTOR","body":"@hangc0276 Could you please rebase the branch?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617663096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617663919","html_url":"https://github.com/apache/pulsar/issues/6789#issuecomment-617663919","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6789","id":617663919,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzY2MzkxOQ==","user":{"login":"bschofield","id":1534502,"node_id":"MDQ6VXNlcjE1MzQ1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/1534502?v=4","gravatar_id":"","url":"https://api.github.com/users/bschofield","html_url":"https://github.com/bschofield","followers_url":"https://api.github.com/users/bschofield/followers","following_url":"https://api.github.com/users/bschofield/following{/other_user}","gists_url":"https://api.github.com/users/bschofield/gists{/gist_id}","starred_url":"https://api.github.com/users/bschofield/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bschofield/subscriptions","organizations_url":"https://api.github.com/users/bschofield/orgs","repos_url":"https://api.github.com/users/bschofield/repos","events_url":"https://api.github.com/users/bschofield/events{/privacy}","received_events_url":"https://api.github.com/users/bschofield/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T09:27:39Z","updated_at":"2020-04-22T09:27:39Z","author_association":"CONTRIBUTOR","body":"Oh, excellent. I see that is even in the docs -- I don't know how I missed it.\r\n\r\nAdding:\r\n\r\n```\r\n  PULSAR_PREFIX_authenticateMetricsEndpoint: \"false\"\r\n```\r\n\r\nto the appropriate `ConfigMap` fixed this for me.\r\n\r\nThank you for your help!","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617663919/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617674994","html_url":"https://github.com/apache/pulsar/issues/6785#issuecomment-617674994","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6785","id":617674994,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzY3NDk5NA==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T09:50:08Z","updated_at":"2020-04-22T09:50:08Z","author_association":"CONTRIBUTOR","body":"/cc @wolfstudy please help take a look at this issue.\r\n@zyllt Could you please help provides a Java demo since someone wants to fix this problem but not familiar with Go.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617674994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617675627","html_url":"https://github.com/apache/pulsar/pull/6770#issuecomment-617675627","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6770","id":617675627,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzY3NTYyNw==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T09:51:26Z","updated_at":"2020-04-22T09:51:26Z","author_association":"CONTRIBUTOR","body":"Looks we can skip the CI for Grafana dashboard changes.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617675627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617676425","html_url":"https://github.com/apache/pulsar/pull/6770#issuecomment-617676425","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6770","id":617676425,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzY3NjQyNQ==","user":{"login":"vzhikserg","id":7816474,"node_id":"MDQ6VXNlcjc4MTY0NzQ=","avatar_url":"https://avatars.githubusercontent.com/u/7816474?v=4","gravatar_id":"","url":"https://api.github.com/users/vzhikserg","html_url":"https://github.com/vzhikserg","followers_url":"https://api.github.com/users/vzhikserg/followers","following_url":"https://api.github.com/users/vzhikserg/following{/other_user}","gists_url":"https://api.github.com/users/vzhikserg/gists{/gist_id}","starred_url":"https://api.github.com/users/vzhikserg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vzhikserg/subscriptions","organizations_url":"https://api.github.com/users/vzhikserg/orgs","repos_url":"https://api.github.com/users/vzhikserg/repos","events_url":"https://api.github.com/users/vzhikserg/events{/privacy}","received_events_url":"https://api.github.com/users/vzhikserg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T09:52:59Z","updated_at":"2020-04-22T09:52:59Z","author_association":"CONTRIBUTOR","body":"@codelipenghui yes, the CI pipeline can be skipped for this change.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617676425/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617676825","html_url":"https://github.com/apache/pulsar/issues/6785#issuecomment-617676825","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6785","id":617676825,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzY3NjgyNQ==","user":{"login":"bschofield","id":1534502,"node_id":"MDQ6VXNlcjE1MzQ1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/1534502?v=4","gravatar_id":"","url":"https://api.github.com/users/bschofield","html_url":"https://github.com/bschofield","followers_url":"https://api.github.com/users/bschofield/followers","following_url":"https://api.github.com/users/bschofield/following{/other_user}","gists_url":"https://api.github.com/users/bschofield/gists{/gist_id}","starred_url":"https://api.github.com/users/bschofield/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bschofield/subscriptions","organizations_url":"https://api.github.com/users/bschofield/orgs","repos_url":"https://api.github.com/users/bschofield/repos","events_url":"https://api.github.com/users/bschofield/events{/privacy}","received_events_url":"https://api.github.com/users/bschofield/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T09:53:48Z","updated_at":"2020-04-22T09:54:29Z","author_association":"CONTRIBUTOR","body":"@codelipenghui I'm familiar with go, C and C++ and could fix the go API and/or the C code under `pulsar-client-cpp/lib/c`. The thing I don't understand is _how_ you want this fixed. Should the topic name be serialized into some kind of a packed value along with the ints, or should it be kept separate? If you can show the desired pattern in the Java client, then the C/go should be an easy fix.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617676825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617683300","html_url":"https://github.com/apache/pulsar/pull/6705#issuecomment-617683300","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6705","id":617683300,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzY4MzMwMA==","user":{"login":"hangc0276","id":5436568,"node_id":"MDQ6VXNlcjU0MzY1Njg=","avatar_url":"https://avatars.githubusercontent.com/u/5436568?v=4","gravatar_id":"","url":"https://api.github.com/users/hangc0276","html_url":"https://github.com/hangc0276","followers_url":"https://api.github.com/users/hangc0276/followers","following_url":"https://api.github.com/users/hangc0276/following{/other_user}","gists_url":"https://api.github.com/users/hangc0276/gists{/gist_id}","starred_url":"https://api.github.com/users/hangc0276/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hangc0276/subscriptions","organizations_url":"https://api.github.com/users/hangc0276/orgs","repos_url":"https://api.github.com/users/hangc0276/repos","events_url":"https://api.github.com/users/hangc0276/events{/privacy}","received_events_url":"https://api.github.com/users/hangc0276/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T10:07:03Z","updated_at":"2020-04-22T10:07:03Z","author_association":"CONTRIBUTOR","body":"> @hangc0276 Could you please rebase the branch?\r\n\r\nI have rebase the master branch.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617683300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617760207","html_url":"https://github.com/apache/pulsar/pull/6795#issuecomment-617760207","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6795","id":617760207,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzc2MDIwNw==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T12:51:57Z","updated_at":"2020-04-22T12:51:57Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617760207/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617793618","html_url":"https://github.com/apache/pulsar/pull/6705#issuecomment-617793618","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6705","id":617793618,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzc5MzYxOA==","user":{"login":"hangc0276","id":5436568,"node_id":"MDQ6VXNlcjU0MzY1Njg=","avatar_url":"https://avatars.githubusercontent.com/u/5436568?v=4","gravatar_id":"","url":"https://api.github.com/users/hangc0276","html_url":"https://github.com/hangc0276","followers_url":"https://api.github.com/users/hangc0276/followers","following_url":"https://api.github.com/users/hangc0276/following{/other_user}","gists_url":"https://api.github.com/users/hangc0276/gists{/gist_id}","starred_url":"https://api.github.com/users/hangc0276/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hangc0276/subscriptions","organizations_url":"https://api.github.com/users/hangc0276/orgs","repos_url":"https://api.github.com/users/hangc0276/repos","events_url":"https://api.github.com/users/hangc0276/events{/privacy}","received_events_url":"https://api.github.com/users/hangc0276/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T13:54:19Z","updated_at":"2020-04-22T13:54:19Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617793618/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617884885","html_url":"https://github.com/apache/pulsar/pull/6647#issuecomment-617884885","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6647","id":617884885,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzg4NDg4NQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T16:25:35Z","updated_at":"2020-04-22T16:25:35Z","author_association":"CONTRIBUTOR","body":"> The difference is I hashed the key twice before, this change is reduced one hash calculation in the selector.\r\n\r\nI think it's actually the reverse, the % operation is done for each message instead of for each \"key\"\r\n\r\n> Another difference is, I group the messages by the message key, but when users use random keys, the dispatcher can get benefit from the group operation. So the new way is grouped by hash(key) % ranges, so that we can also get group benefit for random keys. The benefit is we can reduce operates of the LinkedHashMap.\r\n\r\nI think this only matters if `rangeSize` is small. With rangeSize = 65K or bigger there's no practical grouping benefit. If rangeSize=4, of course, this approach would be more efficient.\r\n\r\nI believe a better approach here, instead of exposing the index internals, would be to just group by consumers instead of key or index. Basically, construct `Map<Consumer, List<Entry>>` and then dispatch. This would work for any `rangeSize`. I'll make this change after #6791.\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617884885/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617903314","html_url":"https://github.com/apache/pulsar/pull/6764#issuecomment-617903314","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6764","id":617903314,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzkwMzMxNA==","user":{"login":"315157973","id":9758905,"node_id":"MDQ6VXNlcjk3NTg5MDU=","avatar_url":"https://avatars.githubusercontent.com/u/9758905?v=4","gravatar_id":"","url":"https://api.github.com/users/315157973","html_url":"https://github.com/315157973","followers_url":"https://api.github.com/users/315157973/followers","following_url":"https://api.github.com/users/315157973/following{/other_user}","gists_url":"https://api.github.com/users/315157973/gists{/gist_id}","starred_url":"https://api.github.com/users/315157973/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/315157973/subscriptions","organizations_url":"https://api.github.com/users/315157973/orgs","repos_url":"https://api.github.com/users/315157973/repos","events_url":"https://api.github.com/users/315157973/events{/privacy}","received_events_url":"https://api.github.com/users/315157973/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T16:57:25Z","updated_at":"2020-04-22T16:57:25Z","author_association":"CONTRIBUTOR","body":"> @315157973 Do we need to change the schema delete logic for fixing the issue? I don't see what's the problem with the current deletion logic, just see the get schema version does not filter out the deleted schema. The delete schema method is unused and I think the current logic uses `deleteSchema` method in the `SchemaRegistryServiceImpl`. If I missed something, please point out, thanks.\r\n\r\nThanks for correcting me，filtering is a better solution","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617903314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617923123","html_url":"https://github.com/apache/pulsar/pull/6796#issuecomment-617923123","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6796","id":617923123,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzkyMzEyMw==","user":{"login":"BewareMyPower","id":18204803,"node_id":"MDQ6VXNlcjE4MjA0ODAz","avatar_url":"https://avatars.githubusercontent.com/u/18204803?v=4","gravatar_id":"","url":"https://api.github.com/users/BewareMyPower","html_url":"https://github.com/BewareMyPower","followers_url":"https://api.github.com/users/BewareMyPower/followers","following_url":"https://api.github.com/users/BewareMyPower/following{/other_user}","gists_url":"https://api.github.com/users/BewareMyPower/gists{/gist_id}","starred_url":"https://api.github.com/users/BewareMyPower/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BewareMyPower/subscriptions","organizations_url":"https://api.github.com/users/BewareMyPower/orgs","repos_url":"https://api.github.com/users/BewareMyPower/repos","events_url":"https://api.github.com/users/BewareMyPower/events{/privacy}","received_events_url":"https://api.github.com/users/BewareMyPower/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T17:32:44Z","updated_at":"2020-04-22T17:32:44Z","author_association":"CONTRIBUTOR","body":"@merlimat Thanks for your quick reply.\r\n\r\nIMO, The cumulative ack only applies to the single partition but not all the partitions. See [the implement of Java client](https://github.com/apache/pulsar/blob/master/pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java):\r\n\r\n```java\r\n    protected CompletableFuture<Void> doAcknowledge(MessageId messageId, AckType ackType,\r\n                                                    Map<String,Long> properties,\r\n                                                    TransactionImpl txnImpl) {\r\n        // ...\r\n        if (ackType == AckType.Cumulative) {\r\n            // find the single topic consumer by the topic partition name which contains the partition id\r\n            Consumer individualConsumer = consumers.get(topicMessageId.getTopicPartitionName());\r\n            if (individualConsumer != null) {\r\n                // call acknowledgeCumulative() of this single topic consumer\r\n                MessageId innerId = topicMessageId.getInnerMessageId();\r\n                return individualConsumer.acknowledgeCumulativeAsync(innerId);\r\n            } else {\r\n                // ...\r\n            }\r\n        } else {\r\n            // ...\r\n        }\r\n    }\r\n```\r\n\r\nI have tested the Java client, by:\r\n\r\n1. Create a 3 partitions topic;\r\n2. Produce 10 messages in round robin routing mode;\r\n3. Start a consumer subscribing to this topic, only call `acknowledgeCumulative()` after 9 messages received, then stop it;\r\n4. Restart the consumer with the same subscription.\r\n\r\nHere're the output of 1st and 2nd consuming:\r\n\r\n```\r\nMessage: C | topic: persistent://public/default/FooTest-partition-0\r\nMessage: A | topic: persistent://public/default/FooTest-partition-1\r\nMessage: B | topic: persistent://public/default/FooTest-partition-2\r\nMessage: F | topic: persistent://public/default/FooTest-partition-0\r\nMessage: D | topic: persistent://public/default/FooTest-partition-1\r\nMessage: E | topic: persistent://public/default/FooTest-partition-2\r\nMessage: I | topic: persistent://public/default/FooTest-partition-0\r\nMessage: G | topic: persistent://public/default/FooTest-partition-1\r\nMessage: H | topic: persistent://public/default/FooTest-partition-2\r\nMessage: J | topic: persistent://public/default/FooTest-partition-1\r\nMessage: 1 | topic: persistent://public/default/FooTest-partition-2\r\nacknowledgeCumulative\r\n```\r\n\r\n```\r\nMessage: C | topic: persistent://public/default/FooTest-partition-0\r\nMessage: F | topic: persistent://public/default/FooTest-partition-0\r\nMessage: A | topic: persistent://public/default/FooTest-partition-1\r\nMessage: D | topic: persistent://public/default/FooTest-partition-1\r\nMessage: I | topic: persistent://public/default/FooTest-partition-0\r\nMessage: G | topic: persistent://public/default/FooTest-partition-1\r\nMessage: J | topic: persistent://public/default/FooTest-partition-1\r\n```\r\n\r\nWe can see when we `acknowledgeCumulative` the Message `1` of partition-2, only the previous messages in partition-2 were acknowledged.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617923123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617948492","html_url":"https://github.com/apache/pulsar/pull/6796#issuecomment-617948492","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6796","id":617948492,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzk0ODQ5Mg==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T18:21:24Z","updated_at":"2020-04-22T18:21:24Z","author_association":"CONTRIBUTOR","body":"Java implementation also does not allow cumulative acks on partitioned topics, for the same reason.\r\n\r\nFrom an API perspective, you're not going to know which messages you're acking and which are not going to be acked.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617948492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617958166","html_url":"https://github.com/apache/pulsar/pull/6791#issuecomment-617958166","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6791","id":617958166,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzk1ODE2Ng==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T18:39:24Z","updated_at":"2020-04-22T18:39:24Z","author_association":"CONTRIBUTOR","body":"> I need to rethink how to leverage this idea on the consistent hashing approach. If you have any idea, please ping me, thanks.\r\n\r\n@codelipenghui Thanks for pointing to this. I have a couple of rough ideas. Let me think it through it a bit more and I'll chime in on that issue.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/617958166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618090835","html_url":"https://github.com/apache/pulsar/issues/5059#issuecomment-618090835","issue_url":"https://api.github.com/repos/apache/pulsar/issues/5059","id":618090835,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODA5MDgzNQ==","user":{"login":"lanwen","id":1964214,"node_id":"MDQ6VXNlcjE5NjQyMTQ=","avatar_url":"https://avatars.githubusercontent.com/u/1964214?v=4","gravatar_id":"","url":"https://api.github.com/users/lanwen","html_url":"https://github.com/lanwen","followers_url":"https://api.github.com/users/lanwen/followers","following_url":"https://api.github.com/users/lanwen/following{/other_user}","gists_url":"https://api.github.com/users/lanwen/gists{/gist_id}","starred_url":"https://api.github.com/users/lanwen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lanwen/subscriptions","organizations_url":"https://api.github.com/users/lanwen/orgs","repos_url":"https://api.github.com/users/lanwen/repos","events_url":"https://api.github.com/users/lanwen/events{/privacy}","received_events_url":"https://api.github.com/users/lanwen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T23:27:53Z","updated_at":"2020-04-22T23:27:53Z","author_association":"NONE","body":"Want to try out some naive implementation and found that current compactor is quite close to what I want in this issue.\r\n\r\nHere is the condition which could be inverted and with a bit changed first phase, leaving only specific keys in the map, could do the trick:\r\nhttps://github.com/apache/pulsar/blob/master/pulsar-broker/src/main/java/org/apache/pulsar/compaction/TwoPhaseCompactor.java#L245\r\n\r\nThe only concern I have is that we couldn't just put everything into a new compacted ledger, as its not that compacted anymore.  But how to manage that better? Where to look into a proper ledger management examples? What happens if I just throw everything I have into one ledger?\r\n\r\nAnd also how to cleanup touched ledgers and ignore untouched? Is that a good idea to keep some sort of a set of them to clean? (As that is the final goal of the issue)\r\n\r\nsome help? @sijie \r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618090835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618109262","html_url":"https://github.com/apache/pulsar/pull/6791#issuecomment-618109262","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6791","id":618109262,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODEwOTI2Mg==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T00:33:42Z","updated_at":"2020-04-23T00:33:42Z","author_association":"CONTRIBUTOR","body":"@codelipenghui AUTO_SPLIT and CONSISTENT_HASHING are essentially 2 different implementations for the same stated behavior. In my view, we should just give the user one good default option. That option should work across all corner cases.\r\n\r\nDo you see any particular downside in using consistent hashing compared to the autosplit approach?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618109262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618110187","html_url":"https://github.com/apache/pulsar/pull/6647#issuecomment-618110187","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6647","id":618110187,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODExMDE4Nw==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T00:37:12Z","updated_at":"2020-04-23T00:37:12Z","author_association":"CONTRIBUTOR","body":"> I think it's actually the reverse, the % operation is done for each message instead of for each \"key\"\r\n\r\n> I think this only matters if rangeSize is small. With rangeSize = 65K or bigger there's no practical grouping benefit. If rangeSize=4, of course, this approach would be more efficient.\r\n\r\nTotally agree.\r\n\r\n> I believe a better approach here, instead of exposing the index internals, would be to just group by consumers instead of key or index. Basically, construct Map<Consumer, List<Entry>> and then dispatch. This would work for any rangeSize. I'll make this change after #6791.\r\n\r\nIf I understand correctly, this also needs to find a consumer for a key right? Can we group the messages by the consumer without getting a consumer from the Map?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618110187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618123128","html_url":"https://github.com/apache/pulsar/issues/6554#issuecomment-618123128","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6554","id":618123128,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODEyMzEyOA==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T01:26:12Z","updated_at":"2020-04-23T01:26:12Z","author_association":"CONTRIBUTOR","body":"So, I think the problem here should be treated by having new consumers joining in a \"paused\" state. \r\n\r\nFor example, consider this sequence:\r\n\r\n 1. Subscriptions has `c1` and `c2` consumers\r\n 2. `c3` joins. Some of the keys are now supposed to go to `c3`. \r\n 3. Instead of starting delivering to `c3`. We mark the current `readPosition` (let's call it `rp0_c3`) of the cursor for `c3`.\r\n 4. Any message that now hashes to `c3` and that has `messageId >= rp0_c3` will be deferred for later re-delivery\r\n 5. Any message that might get re-delivered (eg: originally sent to `c1`, but `c1` has failed) to `c3` and that has `messageId < rp0_c3` will be sent to `c3` \r\n 6. When the `markDelete` position of the cursor will move past `rp0_c3` the restriction on `c3` will be lifted. \r\n\r\nEssentially, `c3` joins but can only receive old messages, until everything that was read before joining gets acked.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618123128/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618124082","html_url":"https://github.com/apache/pulsar/pull/6794#issuecomment-618124082","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6794","id":618124082,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODEyNDA4Mg==","user":{"login":"equanz","id":12148992,"node_id":"MDQ6VXNlcjEyMTQ4OTky","avatar_url":"https://avatars.githubusercontent.com/u/12148992?v=4","gravatar_id":"","url":"https://api.github.com/users/equanz","html_url":"https://github.com/equanz","followers_url":"https://api.github.com/users/equanz/followers","following_url":"https://api.github.com/users/equanz/following{/other_user}","gists_url":"https://api.github.com/users/equanz/gists{/gist_id}","starred_url":"https://api.github.com/users/equanz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/equanz/subscriptions","organizations_url":"https://api.github.com/users/equanz/orgs","repos_url":"https://api.github.com/users/equanz/repos","events_url":"https://api.github.com/users/equanz/events{/privacy}","received_events_url":"https://api.github.com/users/equanz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T01:29:46Z","updated_at":"2020-04-23T01:29:46Z","author_association":"CONTRIBUTOR","body":"@codelipenghui \r\nThank you for your review!\r\n\r\n> Could you please help add some checks for partitioned topic auto-creation?\r\n\r\nIs this here or should I add some unit tests?\r\n\r\nhttps://github.com/apache/pulsar/blob/36d4f36922afd21b8f2454b6f343f78804ea20e5/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java#L1896-L1900","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618124082/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618128792","html_url":"https://github.com/apache/pulsar/pull/6705#issuecomment-618128792","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6705","id":618128792,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODEyODc5Mg==","user":{"login":"hangc0276","id":5436568,"node_id":"MDQ6VXNlcjU0MzY1Njg=","avatar_url":"https://avatars.githubusercontent.com/u/5436568?v=4","gravatar_id":"","url":"https://api.github.com/users/hangc0276","html_url":"https://github.com/hangc0276","followers_url":"https://api.github.com/users/hangc0276/followers","following_url":"https://api.github.com/users/hangc0276/following{/other_user}","gists_url":"https://api.github.com/users/hangc0276/gists{/gist_id}","starred_url":"https://api.github.com/users/hangc0276/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hangc0276/subscriptions","organizations_url":"https://api.github.com/users/hangc0276/orgs","repos_url":"https://api.github.com/users/hangc0276/repos","events_url":"https://api.github.com/users/hangc0276/events{/privacy}","received_events_url":"https://api.github.com/users/hangc0276/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T01:48:31Z","updated_at":"2020-04-23T01:48:31Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618128792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618130396","html_url":"https://github.com/apache/pulsar/issues/6785#issuecomment-618130396","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6785","id":618130396,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODEzMDM5Ng==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T01:54:35Z","updated_at":"2020-04-23T01:54:35Z","author_association":"MEMBER","body":"@codelipenghui can you point @bschofield how it was done in Java client?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618130396/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618130741","html_url":"https://github.com/apache/pulsar/issues/6790#issuecomment-618130741","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6790","id":618130741,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODEzMDc0MQ==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T01:55:45Z","updated_at":"2020-04-23T01:55:45Z","author_association":"MEMBER","body":"@phemmer are you interested in submitting a pull request for fixing the issue?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618130741/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618131248","html_url":"https://github.com/apache/pulsar/issues/6797#issuecomment-618131248","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6797","id":618131248,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODEzMTI0OA==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T01:57:33Z","updated_at":"2020-04-23T01:57:33Z","author_association":"MEMBER","body":"@itaross Are you changing the retain ordering setting?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618131248/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618135261","html_url":"https://github.com/apache/pulsar/pull/6791#issuecomment-618135261","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6791","id":618135261,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODEzNTI2MQ==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T02:11:54Z","updated_at":"2020-04-23T02:11:54Z","author_association":"CONTRIBUTOR","body":"> AUTO_SPLIT and CONSISTENT_HASHING are essentially 2 different implementations for the same stated behavior. In my view, we should just give the user one good default option. That option should work across all corner cases.\r\n\r\nOk, make sense to me.\r\n\r\nIf users want to more evenly distributed, they will increase the points. I'm worried about too many consumers(e.g. 5000 consumers) may result in too many nodes in the TreeMap. I'm not sure if this will require more CPU resources, related to https://github.com/apache/pulsar/pull/6647#issuecomment-618110187. I will test it later.\r\n\r\nOr, can we add a configuration in the broker.conf? so that we don't need to introduce more options at the client-side. I met some users who already use Key_Shared subscription in production. I think we'd better give the user a transition time and we can deprecate the current implementation, change the default value in the broker.conf and finally delete the source code.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618135261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618136728","html_url":"https://github.com/apache/pulsar/issues/6785#issuecomment-618136728","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6785","id":618136728,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODEzNjcyOA==","user":{"login":"zyllt","id":8822016,"node_id":"MDQ6VXNlcjg4MjIwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/8822016?v=4","gravatar_id":"","url":"https://api.github.com/users/zyllt","html_url":"https://github.com/zyllt","followers_url":"https://api.github.com/users/zyllt/followers","following_url":"https://api.github.com/users/zyllt/following{/other_user}","gists_url":"https://api.github.com/users/zyllt/gists{/gist_id}","starred_url":"https://api.github.com/users/zyllt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zyllt/subscriptions","organizations_url":"https://api.github.com/users/zyllt/orgs","repos_url":"https://api.github.com/users/zyllt/repos","events_url":"https://api.github.com/users/zyllt/events{/privacy}","received_events_url":"https://api.github.com/users/zyllt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T02:16:56Z","updated_at":"2020-04-23T02:16:56Z","author_association":"NONE","body":"Use the following code to reproduce the problem:\r\n```\r\npublic static void main(String[] args) throws PulsarClientException {\r\n        PulsarClient client = getPulsarClient();\r\n        String subName = \"sub-1\";\r\n        String topicName = \"persistent://public/default/topic\";\r\n        Consumer<String> consumer1 = null;\r\n        try {\r\n            consumer1 = client.newConsumer(Schema.STRING).topic(topicName + \"1\", topicName + \"2\").consumerName(\"c-1\")\r\n                    .subscriptionName(subName)\r\n                    .subscriptionInitialPosition(SubscriptionInitialPosition.Earliest)\r\n                    .messageListener((consumer, msg) -> {\r\n                        try {\r\n                            String hexString = Hex.encodeHexString(msg.getMessageId().toByteArray());\r\n                            MessageId messageId = MessageId.fromByteArrayWithTopic(Hex.decodeHex(hexString.toCharArray()), msg.getTopicName());\r\n                            consumer.acknowledge(messageId);\r\n                        } catch (Exception e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    })\r\n                    .subscribe();\r\n            System.out.println(\"consumer1 start!\");\r\n        } catch (PulsarClientException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n```\r\n\r\nthe exception:\r\n```\r\njava.lang.IllegalArgumentException\r\n\tat org.apache.pulsar.shade.com.google.common.base.Preconditions.checkArgument(Preconditions.java:127)\r\n\tat org.apache.pulsar.client.impl.MultiTopicsConsumerImpl.doAcknowledge(MultiTopicsConsumerImpl.java:450)\r\n\tat org.apache.pulsar.client.impl.ConsumerBase.doAcknowledgeWithTxn(ConsumerBase.java:294)\r\n\tat org.apache.pulsar.client.impl.ConsumerBase.acknowledgeAsync(ConsumerBase.java:262)\r\n\tat org.apache.pulsar.client.impl.ConsumerBase.acknowledgeAsync(ConsumerBase.java:250)\r\n\tat org.apache.pulsar.client.impl.ConsumerBase.acknowledge(ConsumerBase.java:187)\r\n```\r\n\r\nThe reason for this bug is:\r\n1.`MultiTopicsConsumerImpl#doAcknowledge` requires  a `MessageId` of type `TopicMessageIdImpl`.\r\nhttps://github.com/apache/pulsar/blob/c36170c3acc0bd432036baf7d9471a4c34320395/pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java#L449\r\n2.when the topics in `MultiTopicsConsumerImpl#topics` is non-partitioned-topic,`MessageId#fromByteArrayWithTopic`can only get `BatchMessageIdImpl` or `MessageIdImpl`\r\nhttps://github.com/apache/pulsar/blob/c36170c3acc0bd432036baf7d9471a4c34320395/pulsar-client/src/main/java/org/apache/pulsar/client/impl/MessageIdImpl.java#L140\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618136728/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618138752","html_url":"https://github.com/apache/pulsar/issues/6785#issuecomment-618138752","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6785","id":618138752,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODEzODc1Mg==","user":{"login":"zyllt","id":8822016,"node_id":"MDQ6VXNlcjg4MjIwMTY=","avatar_url":"https://avatars.githubusercontent.com/u/8822016?v=4","gravatar_id":"","url":"https://api.github.com/users/zyllt","html_url":"https://github.com/zyllt","followers_url":"https://api.github.com/users/zyllt/followers","following_url":"https://api.github.com/users/zyllt/following{/other_user}","gists_url":"https://api.github.com/users/zyllt/gists{/gist_id}","starred_url":"https://api.github.com/users/zyllt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zyllt/subscriptions","organizations_url":"https://api.github.com/users/zyllt/orgs","repos_url":"https://api.github.com/users/zyllt/repos","events_url":"https://api.github.com/users/zyllt/events{/privacy}","received_events_url":"https://api.github.com/users/zyllt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T02:24:19Z","updated_at":"2020-04-23T02:24:19Z","author_association":"NONE","body":"In addition, I would like to make a suggestion.\r\n If the topic is a partitioned-topic, the `Message#getTopicName` API  get the name of the partitioned topic. Is it possible to provide an API to get the original topic name. Because when the partition topic and non-partition topic exist in MultiTopicConsumerImpl at the same time, if you want to obtain the original topicName, you can only manually handle the partition suffix of `Message#getTopicName`.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618138752/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618142274","html_url":"https://github.com/apache/pulsar/issues/6785#issuecomment-618142274","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6785","id":618142274,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE0MjI3NA==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T02:37:17Z","updated_at":"2020-04-23T02:37:17Z","author_association":"CONTRIBUTOR","body":"@zyllt Thanks for your feedback, It looks this is obvious bug of method `public static MessageId fromByteArrayWithTopic(byte[] data, TopicName topicName)`. \r\n\r\n> In addition, I would like to make a suggestion.\r\nIf the topic is a partitioned-topic, the Message#getTopicName API get the name of the partitioned topic. Is it possible to provide an API to get the original topic name. Because when the partition topic and non-partition topic exist in MultiTopicConsumerImpl at the same time, if you want to obtain the original topicName, you can only manually handle the partition suffix of Message#getTopicName.\r\n\r\nYou can use `TopicName.get(message.getTopicName).getPartitionedTopicName()`. I have no objection to add a method to get partitioned topic name in the `Message`.\r\n\r\nAre you interested in pushing a PR for the issue?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618142274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618142362","html_url":"https://github.com/apache/pulsar/pull/6777#issuecomment-618142362","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6777","id":618142362,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE0MjM2Mg==","user":{"login":"zymap","id":24502569,"node_id":"MDQ6VXNlcjI0NTAyNTY5","avatar_url":"https://avatars.githubusercontent.com/u/24502569?v=4","gravatar_id":"","url":"https://api.github.com/users/zymap","html_url":"https://github.com/zymap","followers_url":"https://api.github.com/users/zymap/followers","following_url":"https://api.github.com/users/zymap/following{/other_user}","gists_url":"https://api.github.com/users/zymap/gists{/gist_id}","starred_url":"https://api.github.com/users/zymap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zymap/subscriptions","organizations_url":"https://api.github.com/users/zymap/orgs","repos_url":"https://api.github.com/users/zymap/repos","events_url":"https://api.github.com/users/zymap/events{/privacy}","received_events_url":"https://api.github.com/users/zymap/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T02:37:42Z","updated_at":"2020-04-23T02:37:42Z","author_association":"MEMBER","body":"Let me take a look.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618142362/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618151618","html_url":"https://github.com/apache/pulsar/pull/6776#issuecomment-618151618","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6776","id":618151618,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE1MTYxOA==","user":{"login":"wolfstudy","id":20965307,"node_id":"MDQ6VXNlcjIwOTY1MzA3","avatar_url":"https://avatars.githubusercontent.com/u/20965307?v=4","gravatar_id":"","url":"https://api.github.com/users/wolfstudy","html_url":"https://github.com/wolfstudy","followers_url":"https://api.github.com/users/wolfstudy/followers","following_url":"https://api.github.com/users/wolfstudy/following{/other_user}","gists_url":"https://api.github.com/users/wolfstudy/gists{/gist_id}","starred_url":"https://api.github.com/users/wolfstudy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wolfstudy/subscriptions","organizations_url":"https://api.github.com/users/wolfstudy/orgs","repos_url":"https://api.github.com/users/wolfstudy/repos","events_url":"https://api.github.com/users/wolfstudy/events{/privacy}","received_events_url":"https://api.github.com/users/wolfstudy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T03:13:32Z","updated_at":"2020-04-23T03:13:32Z","author_association":"MEMBER","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618151618/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618153460","html_url":"https://github.com/apache/pulsar/pull/6796#issuecomment-618153460","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6796","id":618153460,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE1MzQ2MA==","user":{"login":"BewareMyPower","id":18204803,"node_id":"MDQ6VXNlcjE4MjA0ODAz","avatar_url":"https://avatars.githubusercontent.com/u/18204803?v=4","gravatar_id":"","url":"https://api.github.com/users/BewareMyPower","html_url":"https://github.com/BewareMyPower","followers_url":"https://api.github.com/users/BewareMyPower/followers","following_url":"https://api.github.com/users/BewareMyPower/following{/other_user}","gists_url":"https://api.github.com/users/BewareMyPower/gists{/gist_id}","starred_url":"https://api.github.com/users/BewareMyPower/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BewareMyPower/subscriptions","organizations_url":"https://api.github.com/users/BewareMyPower/orgs","repos_url":"https://api.github.com/users/BewareMyPower/repos","events_url":"https://api.github.com/users/BewareMyPower/events{/privacy}","received_events_url":"https://api.github.com/users/BewareMyPower/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T03:20:33Z","updated_at":"2020-04-23T03:20:33Z","author_association":"CONTRIBUTOR","body":"@merlimat Actually Java implementation allows cumulative acks on partitioned topic. You can run [CumulativeAckForPartitionedTopic.java](https://gist.github.com/BewareMyPower/d8cfe7f225962fb8b07f1bd1c7b2cc11). The output will prove what I've mentioned before.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618153460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618158748","html_url":"https://github.com/apache/pulsar/issues/6554#issuecomment-618158748","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6554","id":618158748,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE1ODc0OA==","user":{"login":"feeblefakie","id":1052473,"node_id":"MDQ6VXNlcjEwNTI0NzM=","avatar_url":"https://avatars.githubusercontent.com/u/1052473?v=4","gravatar_id":"","url":"https://api.github.com/users/feeblefakie","html_url":"https://github.com/feeblefakie","followers_url":"https://api.github.com/users/feeblefakie/followers","following_url":"https://api.github.com/users/feeblefakie/following{/other_user}","gists_url":"https://api.github.com/users/feeblefakie/gists{/gist_id}","starred_url":"https://api.github.com/users/feeblefakie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/feeblefakie/subscriptions","organizations_url":"https://api.github.com/users/feeblefakie/orgs","repos_url":"https://api.github.com/users/feeblefakie/repos","events_url":"https://api.github.com/users/feeblefakie/events{/privacy}","received_events_url":"https://api.github.com/users/feeblefakie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T03:41:49Z","updated_at":"2020-04-23T03:41:49Z","author_association":"NONE","body":"@merlimat \r\nI'm not fully sure about the solution but does it guarantee key ordering ?\r\nFor example, a message X with key \"A\" is first consumed in `c1`, and another message Y with key \"A\" can possibly go to `c3` ? (can we make sure message X is consumed and acked before message Y ?)","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618158748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618164214","html_url":"https://github.com/apache/pulsar/pull/6776#issuecomment-618164214","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6776","id":618164214,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE2NDIxNA==","user":{"login":"hangc0276","id":5436568,"node_id":"MDQ6VXNlcjU0MzY1Njg=","avatar_url":"https://avatars.githubusercontent.com/u/5436568?v=4","gravatar_id":"","url":"https://api.github.com/users/hangc0276","html_url":"https://github.com/hangc0276","followers_url":"https://api.github.com/users/hangc0276/followers","following_url":"https://api.github.com/users/hangc0276/following{/other_user}","gists_url":"https://api.github.com/users/hangc0276/gists{/gist_id}","starred_url":"https://api.github.com/users/hangc0276/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hangc0276/subscriptions","organizations_url":"https://api.github.com/users/hangc0276/orgs","repos_url":"https://api.github.com/users/hangc0276/repos","events_url":"https://api.github.com/users/hangc0276/events{/privacy}","received_events_url":"https://api.github.com/users/hangc0276/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T04:04:50Z","updated_at":"2020-04-23T04:04:50Z","author_association":"CONTRIBUTOR","body":"Whether `messageId` should be expose to Query Parameters? In your implementation, the `messageId` parameter doesn't expose to user?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618164214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618165197","html_url":"https://github.com/apache/pulsar/pull/6798#issuecomment-618165197","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6798","id":618165197,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE2NTE5Nw==","user":{"login":"jiazhai","id":6348208,"node_id":"MDQ6VXNlcjYzNDgyMDg=","avatar_url":"https://avatars.githubusercontent.com/u/6348208?v=4","gravatar_id":"","url":"https://api.github.com/users/jiazhai","html_url":"https://github.com/jiazhai","followers_url":"https://api.github.com/users/jiazhai/followers","following_url":"https://api.github.com/users/jiazhai/following{/other_user}","gists_url":"https://api.github.com/users/jiazhai/gists{/gist_id}","starred_url":"https://api.github.com/users/jiazhai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiazhai/subscriptions","organizations_url":"https://api.github.com/users/jiazhai/orgs","repos_url":"https://api.github.com/users/jiazhai/repos","events_url":"https://api.github.com/users/jiazhai/events{/privacy}","received_events_url":"https://api.github.com/users/jiazhai/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T04:08:52Z","updated_at":"2020-04-23T04:08:52Z","author_association":"MEMBER","body":"@srkukarni  Is the superuser role has the same issue?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618165197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618168505","html_url":"https://github.com/apache/pulsar/issues/6554#issuecomment-618168505","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6554","id":618168505,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE2ODUwNQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T04:21:41Z","updated_at":"2020-04-23T04:21:41Z","author_association":"CONTRIBUTOR","body":"> For example, a message X with key \"A\" is first consumed in c1, and another message Y with key \"A\" can possibly go to c3 ? (can we make sure message X is consumed and acked before message Y ?)\r\n\r\nYes, the above proposal takes care of that. \r\n\r\nThe important point is that X could be re-sent to `c3`, in case `c1` fails just after `c3` has joined.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618168505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618171415","html_url":"https://github.com/apache/pulsar/pull/6796#issuecomment-618171415","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6796","id":618171415,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE3MTQxNQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T04:32:42Z","updated_at":"2020-04-23T04:32:42Z","author_association":"CONTRIBUTOR","body":"> @merlimat Actually Java implementation allows cumulative acks on partitioned topic. You can run CumulativeAckForPartitionedTopic.java. The output will prove what I've mentioned before.\r\n\r\nWhoever did that change has done wrong. From an API standpoint, it doesn't make any sense to do the cumulative ack on just one topic.\r\n\r\nA consumer is receiving a sequence of messages from multiple partitions/topics and acks cumulatively... though only some of the messages are actually acknowledged... ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618171415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618173056","html_url":"https://github.com/apache/pulsar/pull/6647#issuecomment-618173056","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6647","id":618173056,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE3MzA1Ng==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T04:39:08Z","updated_at":"2020-04-23T04:39:08Z","author_association":"CONTRIBUTOR","body":"> If I understand correctly, this also needs to find a consumer for a key right? \r\n\r\nYes, instead of saying: \"what is the index for this key?\" we say \"what is the consumer for this key?\".\r\n\r\nGrouping by consumer will lead to the smallest possible cardinality.\r\n\r\n> Can we group the messages by the consumer without getting a consumer from the Map?\r\n\r\nI don't understand the question here.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618173056/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618176136","html_url":"https://github.com/apache/pulsar/pull/6791#issuecomment-618176136","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6791","id":618176136,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE3NjEzNg==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T04:50:55Z","updated_at":"2020-04-23T04:50:55Z","author_association":"CONTRIBUTOR","body":"\r\n> If users want to more evenly distributed, they will increase the points. I'm worried about too many consumers(e.g. 5000 consumers) may result in too many nodes in the TreeMap. \r\n\r\nRegarding many consumers, sure the default of 100 points could be overkill, since we'd be fine with 1 point per consumer. It would be easy though to dynamically change the number of points in the ring based on the number of consumers. The only part that we need to be careful during this operation is the same as described in #6554, maintaining the ordering after the hash ranges get readjusted. \r\n\r\nI'd say to start with current simple approach, and make it dynamic if it becomes a pain point.\r\n\r\n> I'm not sure if this will require more CPU resources, related to [#6647 (comment)](https://github.com/apache/pulsar/pull/6647#issuecomment-618110187). I will test it later.\r\n\r\nI have a 2nd PR ready (based on top of this one) to address that and other issues on the dispatcher code.\r\n\r\n> Or, can we add a configuration in the broker.conf? so that we don't need to introduce more options at the client-side. I met some users who already use Key_Shared subscription in production. I think we'd better give the user a transition time and we can deprecate the current implementation, change the default value in the broker.conf and finally delete the source code.\r\n\r\nThe code for the consumer selection is pretty much self-contained and a pretty basic implementation of consistent hashing. \r\n\r\nFor what is worth, this new implementation is also already running in production without issues.\r\n\r\nThat also doesn't remove the fact that the current implementation can easily lead to very imbalanced traffic distribution. In fact, the very first user we got to use key-shared feature got bit by this. That should be regarded as a bug in any case.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618176136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618176632","html_url":"https://github.com/apache/pulsar/pull/6798#issuecomment-618176632","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6798","id":618176632,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE3NjYzMg==","user":{"login":"srkukarni","id":2530234,"node_id":"MDQ6VXNlcjI1MzAyMzQ=","avatar_url":"https://avatars.githubusercontent.com/u/2530234?v=4","gravatar_id":"","url":"https://api.github.com/users/srkukarni","html_url":"https://github.com/srkukarni","followers_url":"https://api.github.com/users/srkukarni/followers","following_url":"https://api.github.com/users/srkukarni/following{/other_user}","gists_url":"https://api.github.com/users/srkukarni/gists{/gist_id}","starred_url":"https://api.github.com/users/srkukarni/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/srkukarni/subscriptions","organizations_url":"https://api.github.com/users/srkukarni/orgs","repos_url":"https://api.github.com/users/srkukarni/repos","events_url":"https://api.github.com/users/srkukarni/events{/privacy}","received_events_url":"https://api.github.com/users/srkukarni/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T04:52:47Z","updated_at":"2020-04-23T04:52:47Z","author_association":"CONTRIBUTOR","body":"@jiazhai The superUser check happens in AuthorizationService so that is not affected.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618176632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618180047","html_url":"https://github.com/apache/pulsar/pull/6524#issuecomment-618180047","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6524","id":618180047,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE4MDA0Nw==","user":{"login":"ltamber","id":5679413,"node_id":"MDQ6VXNlcjU2Nzk0MTM=","avatar_url":"https://avatars.githubusercontent.com/u/5679413?v=4","gravatar_id":"","url":"https://api.github.com/users/ltamber","html_url":"https://github.com/ltamber","followers_url":"https://api.github.com/users/ltamber/followers","following_url":"https://api.github.com/users/ltamber/following{/other_user}","gists_url":"https://api.github.com/users/ltamber/gists{/gist_id}","starred_url":"https://api.github.com/users/ltamber/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ltamber/subscriptions","organizations_url":"https://api.github.com/users/ltamber/orgs","repos_url":"https://api.github.com/users/ltamber/repos","events_url":"https://api.github.com/users/ltamber/events{/privacy}","received_events_url":"https://api.github.com/users/ltamber/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T05:05:20Z","updated_at":"2020-04-23T05:05:20Z","author_association":"CONTRIBUTOR","body":"> Looks good to me, please fix the license header.\r\n\r\nsorry for that, have been fixed, please take a look @codelipenghui ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618180047/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618183879","html_url":"https://github.com/apache/pulsar/pull/6796#issuecomment-618183879","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6796","id":618183879,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE4Mzg3OQ==","user":{"login":"BewareMyPower","id":18204803,"node_id":"MDQ6VXNlcjE4MjA0ODAz","avatar_url":"https://avatars.githubusercontent.com/u/18204803?v=4","gravatar_id":"","url":"https://api.github.com/users/BewareMyPower","html_url":"https://github.com/BewareMyPower","followers_url":"https://api.github.com/users/BewareMyPower/followers","following_url":"https://api.github.com/users/BewareMyPower/following{/other_user}","gists_url":"https://api.github.com/users/BewareMyPower/gists{/gist_id}","starred_url":"https://api.github.com/users/BewareMyPower/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BewareMyPower/subscriptions","organizations_url":"https://api.github.com/users/BewareMyPower/orgs","repos_url":"https://api.github.com/users/BewareMyPower/repos","events_url":"https://api.github.com/users/BewareMyPower/events{/privacy}","received_events_url":"https://api.github.com/users/BewareMyPower/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T05:19:44Z","updated_at":"2020-04-23T05:19:44Z","author_association":"CONTRIBUTOR","body":"@merlimat I found the current semantic of cumulative ack on a partitioned topic was from [#2347](https://github.com/apache/pulsar/pull/2347). The reason of this change is\r\n\r\n> Yeah, earlier I was thinking about ordering but MultiConsumer anyway doesn't maintain ordering among the consumers and we can also do cumulative ack for individual consumer. let me fix it.\r\n\r\nShould you have a discuss about this issue, @rdhabalia @sijie ?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618183879/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618184433","html_url":"https://github.com/apache/pulsar/pull/6647#issuecomment-618184433","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6647","id":618184433,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE4NDQzMw==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T05:21:35Z","updated_at":"2020-04-23T05:21:35Z","author_association":"CONTRIBUTOR","body":"> Yes, instead of saying: \"what is the index for this key?\" we say \"what is the consumer for this key?\".\r\n\r\n> Grouping by consumer will lead to the smallest possible cardinality.\r\n\r\nSorry, I'm lost here. How can we map a key to a consumer? I just know currently we map them by a hash range or a hash ring. So we need to get a consumer for a key from the hash range or the hash ring. The key purpose is to reduce the get consumer operation from the hash range or the hash ring. Too many get consumer operations to result in high CPU usage of the thread.\r\n\r\nI don't know how to map a key to a consumer without getting a consumer from a hash range or a hash ring. If I missed something, please point out, thanks.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618184433/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618196763","html_url":"https://github.com/apache/pulsar/issues/6790#issuecomment-618196763","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6790","id":618196763,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE5Njc2Mw==","user":{"login":"phemmer","id":1826947,"node_id":"MDQ6VXNlcjE4MjY5NDc=","avatar_url":"https://avatars.githubusercontent.com/u/1826947?v=4","gravatar_id":"","url":"https://api.github.com/users/phemmer","html_url":"https://github.com/phemmer","followers_url":"https://api.github.com/users/phemmer/followers","following_url":"https://api.github.com/users/phemmer/following{/other_user}","gists_url":"https://api.github.com/users/phemmer/gists{/gist_id}","starred_url":"https://api.github.com/users/phemmer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phemmer/subscriptions","organizations_url":"https://api.github.com/users/phemmer/orgs","repos_url":"https://api.github.com/users/phemmer/repos","events_url":"https://api.github.com/users/phemmer/events{/privacy}","received_events_url":"https://api.github.com/users/phemmer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T06:01:48Z","updated_at":"2020-04-23T06:01:48Z","author_association":"NONE","body":"Unfortunately not. I do not know Java at all. Otherwise I probably would as I'm sure it's a simple change.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618196763/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618196829","html_url":"https://github.com/apache/pulsar/pull/6787#issuecomment-618196829","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6787","id":618196829,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE5NjgyOQ==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T06:02:01Z","updated_at":"2020-04-23T06:02:01Z","author_association":"MEMBER","body":"@jerrypeng @merlimat I think this should be a flag to allow people to choose whether to include readers for backlog quota consideration or not. The behavior of a non-durable cursor reading a managed ledger should be close to the behavior of a file reader reading a file in the filesystem. If a reader is actively reading a file, the file is still accessible even it is deleted. If there is a reader active in the manager ledger, the data shouldn't be deleted if the reader hasn't read it. Otherwise, it is a violation of the correctness of a \"distributed log\". \r\n\r\nThus, this behavior shouldn't be changed by default. If there is a requirement of excluding readers from backlog consideration, we should use a setting to let people opt-in this feature.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618196829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618198792","html_url":"https://github.com/apache/pulsar/issues/6554#issuecomment-618198792","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6554","id":618198792,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODE5ODc5Mg==","user":{"login":"codelipenghui","id":12592133,"node_id":"MDQ6VXNlcjEyNTkyMTMz","avatar_url":"https://avatars.githubusercontent.com/u/12592133?v=4","gravatar_id":"","url":"https://api.github.com/users/codelipenghui","html_url":"https://github.com/codelipenghui","followers_url":"https://api.github.com/users/codelipenghui/followers","following_url":"https://api.github.com/users/codelipenghui/following{/other_user}","gists_url":"https://api.github.com/users/codelipenghui/gists{/gist_id}","starred_url":"https://api.github.com/users/codelipenghui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codelipenghui/subscriptions","organizations_url":"https://api.github.com/users/codelipenghui/orgs","repos_url":"https://api.github.com/users/codelipenghui/repos","events_url":"https://api.github.com/users/codelipenghui/events{/privacy}","received_events_url":"https://api.github.com/users/codelipenghui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T06:07:49Z","updated_at":"2020-04-23T06:07:49Z","author_association":"CONTRIBUTOR","body":"@merlimat I like the approach you have mentioned. ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618198792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618200536","html_url":"https://github.com/apache/pulsar/pull/6798#issuecomment-618200536","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6798","id":618200536,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODIwMDUzNg==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T06:13:21Z","updated_at":"2020-04-23T06:13:21Z","author_association":"MEMBER","body":"> Tenant admin has the ability to produce/consume. This is honored by the http api, but not the binary api.\r\n\r\nI am confused by this statement. Http doesn't provide any ability to produce and consume messages. You have to grant a role permissions to produce and consume messages using HTTP admin API. ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618200536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618201728","html_url":"https://github.com/apache/pulsar/pull/6804#issuecomment-618201728","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6804","id":618201728,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODIwMTcyOA==","user":{"login":"Huanli-Meng","id":48120384,"node_id":"MDQ6VXNlcjQ4MTIwMzg0","avatar_url":"https://avatars.githubusercontent.com/u/48120384?v=4","gravatar_id":"","url":"https://api.github.com/users/Huanli-Meng","html_url":"https://github.com/Huanli-Meng","followers_url":"https://api.github.com/users/Huanli-Meng/followers","following_url":"https://api.github.com/users/Huanli-Meng/following{/other_user}","gists_url":"https://api.github.com/users/Huanli-Meng/gists{/gist_id}","starred_url":"https://api.github.com/users/Huanli-Meng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Huanli-Meng/subscriptions","organizations_url":"https://api.github.com/users/Huanli-Meng/orgs","repos_url":"https://api.github.com/users/Huanli-Meng/repos","events_url":"https://api.github.com/users/Huanli-Meng/events{/privacy}","received_events_url":"https://api.github.com/users/Huanli-Meng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T06:16:58Z","updated_at":"2020-04-23T06:16:58Z","author_association":"CONTRIBUTOR","body":"close the ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618201728/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618205635","html_url":"https://github.com/apache/pulsar/pull/6787#issuecomment-618205635","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6787","id":618205635,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODIwNTYzNQ==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T06:28:13Z","updated_at":"2020-04-23T06:33:11Z","author_association":"CONTRIBUTOR","body":"@sijie the default behavior of stored data in pulsar is not exactly the same as data stored in a file.  By default data is not persisted in Pulsar at all.  Only if a topic has a subscription or retention configured is the data actually persisted.  Readers are by definition ephemeral and have no persistent state from a brokers perspective, thus if you want to Readers to able to read a certain amount of data, the user should configure the appropriate retention.  Readers are responsible for reading the data and not to determine how much data is retained.  I believe those are two separate concepts.  I would also argue that if you are using the Reader API and you want some level of guarantee of reading the data, you would have to configure retention.  If you don't and the Reader dies, the data is not guaranteed to be there when the Reader comes back.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618205635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618207811","html_url":"https://github.com/apache/pulsar/pull/6805#issuecomment-618207811","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6805","id":618207811,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODIwNzgxMQ==","user":{"login":"tuteng","id":1907867,"node_id":"MDQ6VXNlcjE5MDc4Njc=","avatar_url":"https://avatars.githubusercontent.com/u/1907867?v=4","gravatar_id":"","url":"https://api.github.com/users/tuteng","html_url":"https://github.com/tuteng","followers_url":"https://api.github.com/users/tuteng/followers","following_url":"https://api.github.com/users/tuteng/following{/other_user}","gists_url":"https://api.github.com/users/tuteng/gists{/gist_id}","starred_url":"https://api.github.com/users/tuteng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuteng/subscriptions","organizations_url":"https://api.github.com/users/tuteng/orgs","repos_url":"https://api.github.com/users/tuteng/repos","events_url":"https://api.github.com/users/tuteng/events{/privacy}","received_events_url":"https://api.github.com/users/tuteng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T06:34:08Z","updated_at":"2020-04-23T06:34:08Z","author_association":"MEMBER","body":"@Huanli-Meng PTAL","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618207811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618217216","html_url":"https://github.com/apache/pulsar/pull/6782#issuecomment-618217216","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6782","id":618217216,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODIxNzIxNg==","user":{"login":"shiv4289","id":5674919,"node_id":"MDQ6VXNlcjU2NzQ5MTk=","avatar_url":"https://avatars.githubusercontent.com/u/5674919?v=4","gravatar_id":"","url":"https://api.github.com/users/shiv4289","html_url":"https://github.com/shiv4289","followers_url":"https://api.github.com/users/shiv4289/followers","following_url":"https://api.github.com/users/shiv4289/following{/other_user}","gists_url":"https://api.github.com/users/shiv4289/gists{/gist_id}","starred_url":"https://api.github.com/users/shiv4289/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shiv4289/subscriptions","organizations_url":"https://api.github.com/users/shiv4289/orgs","repos_url":"https://api.github.com/users/shiv4289/repos","events_url":"https://api.github.com/users/shiv4289/events{/privacy}","received_events_url":"https://api.github.com/users/shiv4289/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T06:57:12Z","updated_at":"2020-04-23T06:57:12Z","author_association":"CONTRIBUTOR","body":"> @shiv4289 - did you remember which Authentication is not serializable in #4283?\r\n\r\n@rdhabalia @sijie  AuthenticationToken.java","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618217216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618223059","html_url":"https://github.com/apache/pulsar/pull/6791#issuecomment-618223059","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6791","id":618223059,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODIyMzA1OQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T07:11:02Z","updated_at":"2020-04-23T07:11:02Z","author_association":"CONTRIBUTOR","body":"> Since the current algorithm has been used in many production environments already, we should be concerned about removing an existing implementation. Providing a way to opt-in a different algorithm should be the right approach to go - just like what we did for other algorithms like bundle split, load shedder and etc.\r\n\r\nThe current implementation is severely broken. This PR is fixing the bug. I don't see an easy way to fix it based on the splitting range design.\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618223059/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618228354","html_url":"https://github.com/apache/pulsar/pull/6787#issuecomment-618228354","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6787","id":618228354,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODIyODM1NA==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T07:23:05Z","updated_at":"2020-04-23T07:23:05Z","author_association":"CONTRIBUTOR","body":"> The behavior of a non-durable cursor reading a managed ledger should be close to the behavior of a file reader reading a file in the filesystem. If a reader is actively reading a file, the file is still accessible even it is deleted. If there is a reader active in the manager ledger, the data shouldn't be deleted if the reader hasn't read it. Otherwise, it is a violation of the correctness of a \"distributed log\".\r\n\r\nThere is absolutely no violation of correctness. The contract is clear and it's that a reader can read all the data that is being retained based on max time and size. \r\n\r\nAbove the data retention thresholds, there is no guarantee to be able to read the data.\r\n\r\nThat is very important, because a reader should not under any condition to get the backlog quota filled up. In particular a reader should not have impact over a producer. If we allow a reader to stay connected and have the data retained, then when would that be the limit? and what would be the action after the limit? \r\n\r\nThe current behavior is an accidental one, that in any case it's not something one can rely upon. (eg: a brief disconnection of the reader will cause the data to be deleted anyway). ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618228354/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618232785","html_url":"https://github.com/apache/pulsar/issues/6797#issuecomment-618232785","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6797","id":618232785,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODIzMjc4NQ==","user":{"login":"itaross","id":695970,"node_id":"MDQ6VXNlcjY5NTk3MA==","avatar_url":"https://avatars.githubusercontent.com/u/695970?v=4","gravatar_id":"","url":"https://api.github.com/users/itaross","html_url":"https://github.com/itaross","followers_url":"https://api.github.com/users/itaross/followers","following_url":"https://api.github.com/users/itaross/following{/other_user}","gists_url":"https://api.github.com/users/itaross/gists{/gist_id}","starred_url":"https://api.github.com/users/itaross/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/itaross/subscriptions","organizations_url":"https://api.github.com/users/itaross/orgs","repos_url":"https://api.github.com/users/itaross/repos","events_url":"https://api.github.com/users/itaross/events{/privacy}","received_events_url":"https://api.github.com/users/itaross/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T07:32:56Z","updated_at":"2020-04-23T07:33:55Z","author_association":"NONE","body":"I have used a json field \"retainOrdering\" as written here https://github.com/apache/pulsar/blob/master/pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/SinksBase.java\r\n\r\nWhen I have encountered the problem I was not passing that so I should had false.\r\nThen I tried to create and update explicitly with false but the update didn't work.\r\nI tried to create with false and update with true and that worked.\r\n\r\nI do not know why, I have checked the code on broker side: https://github.com/apache/pulsar/blob/17e22d1eb19e763b2e89dfd5bdf0b7479653a3d9/pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/SinkConfigUtils.java\r\n\r\nLooks pretty straightforward, but I solved only putting true.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618232785/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618248226","html_url":"https://github.com/apache/pulsar/pull/6796#issuecomment-618248226","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6796","id":618248226,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODI0ODIyNg==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T08:05:26Z","updated_at":"2020-04-23T08:05:26Z","author_association":"MEMBER","body":"@BewareMyPower @merlimat \r\n\r\nThe `MessageId` is used for identifying the position within a topic. For a partitioned topic, the `MessageId` includes the partition index for identifying the \"position\" within a partitioned topic. acknowledgementCumulative on a partitioned topic means acknowledging cumulative the messages of the partition inferred by the MessageId. This is semantically correct and there is no confusion here. It is the same concept as we usually say ordering is guaranteed using failover consuming a partitioned topic. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618248226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618259435","html_url":"https://github.com/apache/pulsar/pull/6787#issuecomment-618259435","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6787","id":618259435,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODI1OTQzNQ==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T08:28:17Z","updated_at":"2020-04-23T08:28:17Z","author_association":"MEMBER","body":"> The contract is clear and it's that a reader can read all the data that is being retained based on max time and size.\r\n\r\nThis only covers 50% of the contract. If a reader is scanning a log, it should receive events in order and there are no data gaps. \r\n\r\n@jerrypeng @merlimat I am not arguing about data retention. Please get my point correctly. My argument is about the \"expected\" behavior when a reader attached to a \"distributed log\". The reader should be able to read the messages from this cursor without missing any data. This is the behavior you can get from a storage system like any local or distributed file system. If we are saying Pulsar is an event/stream storage system, that is the *correct* behavior we should provide.\r\n\r\n> If we allow a reader to stay connected and have the data retained, then when would that be the limit? and what would be the action after the limit?\r\n\r\nIf you look into any file system, when you are opening a file to read and there is a background process delete the file for whatever reason, the reader can still read the file until it is closed. The file system only reclaims disk spaces when the last active open file descriptor is closed.\r\n\r\nThe problem of this change here is not about data retention. The problem of this change is that it introduces uncertainty in Reader API where people can not trust. The Reader API is effectively a storage API that people rely on building stateful applications. We should take this seriously and follow a common semantic that most of the storage systems provide. \r\n\r\nAs I said, if you want to relax this contract, it should be done via a flag. We should allow users to decide which behavior they want to choose. If I am building stateful applications that use Pulsar as the source of truth, I don't want to see those uncertainties. \r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618259435/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618262902","html_url":"https://github.com/apache/pulsar/issues/6806#issuecomment-618262902","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6806","id":618262902,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODI2MjkwMg==","user":{"login":"bschofield","id":1534502,"node_id":"MDQ6VXNlcjE1MzQ1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/1534502?v=4","gravatar_id":"","url":"https://api.github.com/users/bschofield","html_url":"https://github.com/bschofield","followers_url":"https://api.github.com/users/bschofield/followers","following_url":"https://api.github.com/users/bschofield/following{/other_user}","gists_url":"https://api.github.com/users/bschofield/gists{/gist_id}","starred_url":"https://api.github.com/users/bschofield/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bschofield/subscriptions","organizations_url":"https://api.github.com/users/bschofield/orgs","repos_url":"https://api.github.com/users/bschofield/repos","events_url":"https://api.github.com/users/bschofield/events{/privacy}","received_events_url":"https://api.github.com/users/bschofield/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T08:35:32Z","updated_at":"2020-04-23T08:35:32Z","author_association":"CONTRIBUTOR","body":"If we go up a stack frame, then `uncompressedPayload` looks pretty suspect to me: it has `readIdx_` much larger than `capacity_`, which doesn't seem right:\r\n\r\n```\r\n(gdb) up\r\n#1  pulsar::Commands::deSerializeSingleMessageInBatch (batchedMessage=..., batchIndex=batchIndex@entry=1)\r\n    at /home/ben/src/github.com/bschofield/pulsar/pulsar-client-cpp/lib/Commands.cc:651\r\n651\t    const int& singleMetaSize = uncompressedPayload.readUnsignedInt();\r\n(gdb) info locals\r\nuncompressedPayload = @0x7fff8c006c08: {data_ = std::shared_ptr<pulsar::detail::SharedBufferInternal> (use count 3, weak count 0) = {get() = 0x7fff8c1278d0}, \r\n  ptr_ = 0x7fff8c120790 \"  \\026\\021[\\177\", readIdx_ = 538973717, writeIdx_ = 489, capacity_ = 489}\r\nsingleMetaSize = <optimised out>\r\nmetadata = {<google::protobuf::MessageLite> = {<No data fields>}, static kIndexInFileMessages = 7, static kPropertiesFieldNumber = 1, static kPartitionKeyFieldNumber = 2, \r\n  static kOrderingKeyFieldNumber = 7, static kPayloadSizeFieldNumber = 3, static kCompactedOutFieldNumber = 4, static kPartitionKeyB64EncodedFieldNumber = 6, \r\n  static kEventTimeFieldNumber = 5, static kSequenceIdFieldNumber = 8, \r\n  _internal_metadata_ = {<google::protobuf::internal::InternalMetadataWithArenaBase<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::internal::InternalMetadataWithArenaLite>> = {ptr_ = 0x7ffff7e413f9 <UnboundedBlockingQueue<pulsar::Message>::push(pulsar::Message const&)+857>, \r\n      static kPtrTagMask = 1, static kPtrValueMask = -2}, <No data fields>}, _has_bits_ = {has_bits_ = {0}}, _cached_size_ = {size_ = {<std::__atomic_base<int>> = {\r\n        static _S_alignment = 4, _M_i = 0}, <No data fields>}}, properties_ = {<google::protobuf::internal::RepeatedPtrFieldBase> = {static kInitialSize = 0, arena_ = 0x0, \r\n      current_size_ = 0, total_size_ = 0, static kRepHeaderSize = 8, rep_ = 0x0}, <No data fields>}, partition_key_ = {ptr_ = 0x7fff8c034788}, ordering_key_ = {\r\n    ptr_ = 0x7ffff6cdd400 <google::protobuf::internal::fixed_address_empty_string[abi:cxx11]>}, payload_size_ = 0, compacted_out_ = false, \r\n  partition_key_b64_encoded_ = false, event_time_ = 0, sequence_id_ = 0}\r\npayloadSize = <optimised out>\r\npayload = {data_ = std::shared_ptr<pulsar::detail::SharedBufferInternal> (use count 822083784, weak count -1031189304) = {get() = 0x7fffc2f627f0}, \r\n  ptr_ = 0x7fffc2f62a68 \"\\001\\\\\", readIdx_ = 0, writeIdx_ = 0, capacity_ = 0}\r\nm = <optimised out>\r\nsingleMessageId = {impl_ = std::shared_ptr<pulsar::MessageIdImpl> (expired, weak count 0) = {get() = 0x7fff8c072600}}\r\nsingleMessage = {impl_ = std::shared_ptr<pulsar::MessageImpl> (use count 1, weak count 0) = {get() = 0x7fff8c1209a0}}\r\n```\r\n\r\nMore locals from stack frames further up:\r\n\r\n```\r\n(gdb) up\r\n#2  0x00007ffff7e3b704 in pulsar::ConsumerImpl::receiveIndividualMessagesFromBatch (this=0x7fff8c033bc0, \r\n    cnx=std::shared_ptr<pulsar::ClientConnection> (use count 4, weak count 5) = {...}, batchedMessage=..., redeliveryCount=0)\r\n    at /home/ben/src/github.com/bschofield/pulsar/pulsar-client-cpp/lib/ConsumerImpl.cc:372\r\nwarning: Source file is more recent than executable.\r\n372\t    int skippedMessages = 0;\r\n(gdb) info locals\r\nmsg = {impl_ = std::shared_ptr<pulsar::MessageImpl> (use count 1, weak count 0) = {get() = 0x7fff8c1209a0}}\r\nlock = {_M_device = 0x7fff8c033c38, _M_owns = true}\r\ni = 1\r\nbatchSize = 5\r\nskippedMessages = 0\r\n(gdb) up\r\n#3  0x00007ffff7e3bde1 in pulsar::ConsumerImpl::messageReceived (this=this@entry=0x7fff8c033bc0, \r\n    cnx=std::shared_ptr<pulsar::ClientConnection> (use count 4, weak count 5) = {...}, msg=..., isChecksumValid=@0x7fffc2f62cac: true, metadata=..., payload=...)\r\n    at /home/ben/src/github.com/bschofield/pulsar/pulsar-client-cpp/generated/lib/PulsarApi.pb.h:17227\r\nwarning: Source file is more recent than executable.\r\n17227\t// required uint64 sequence_id = 2;\r\n(gdb) info locals\r\nlock = {_M_device = 0x7fff8c033c10, _M_owns = true}\r\nm = {impl_ = std::shared_ptr<pulsar::MessageImpl> (use count 1, weak count 0) = {get() = 0x7fff8c006b20}}\r\nnumOfMessageReceived = 1\r\n```","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618262902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618267027","html_url":"https://github.com/apache/pulsar/pull/6791#issuecomment-618267027","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6791","id":618267027,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODI2NzAyNw==","user":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T08:43:41Z","updated_at":"2020-04-23T08:44:00Z","author_association":"MEMBER","body":"> The current implementation is severely broken. This PR is fixing the bug. I don't see an easy way to fix it based on the splitting range design.\r\n\r\nI see there is a problem in the current algorithm when scaling down the number of consumers. But I don't think its broken. In most of the production, people usually don't scale down the number of consumers. They usually scale up the number of consumers. So the extreme case you described in the description probably wasn't really noticed. This is the caveat of the current algorithm. We can find ways to improve it or other people in the community can find a way to improve it.\r\n\r\nIf you have a better algorithm to resolve the key distribution and the screw problem during split-and-merge, that's great and the community is excited about it. Then let's introduce that algorithm. This allows people to slowly migrate to a new algorithm and fall back as needed. ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618267027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618298060","html_url":"https://github.com/apache/pulsar/issues/6806#issuecomment-618298060","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6806","id":618298060,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODI5ODA2MA==","user":{"login":"bschofield","id":1534502,"node_id":"MDQ6VXNlcjE1MzQ1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/1534502?v=4","gravatar_id":"","url":"https://api.github.com/users/bschofield","html_url":"https://github.com/bschofield","followers_url":"https://api.github.com/users/bschofield/followers","following_url":"https://api.github.com/users/bschofield/following{/other_user}","gists_url":"https://api.github.com/users/bschofield/gists{/gist_id}","starred_url":"https://api.github.com/users/bschofield/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bschofield/subscriptions","organizations_url":"https://api.github.com/users/bschofield/orgs","repos_url":"https://api.github.com/users/bschofield/repos","events_url":"https://api.github.com/users/bschofield/events{/privacy}","received_events_url":"https://api.github.com/users/bschofield/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T09:41:34Z","updated_at":"2020-04-23T09:53:24Z","author_association":"CONTRIBUTOR","body":"Here are the DEBUG messages from the C++ library immediately before the crash:\r\n\r\n```\r\nDEBUG [x.x.x.x:46978 -> y.y.y.y:29841] Received a message from the server for consumer: 4\r\nDEBUG [persistent://redacted/redacted/redacted-partition-1, shucker, 4] Received Message -- Size: 317\r\nDEBUG [persistent://redacted/redacted/redacted-partition-1, shucker, 4]  metadata.num_messages_in_batch() = 5\r\nDEBUG [persistent://redacted/redacted/redacted-partition-1, shucker, 4]  metadata.has_num_messages_in_batch() = 1\r\nDEBUG Initializing the trackerMap_ with Message ID = (6832,13756,1,-1) -- Map size: 0 -- List size: 0\r\nDEBUG Received Batch messages of size - 5 -- msgId: (6832,13756,1,-1)\r\n```\r\n\r\nHere's a dump of 489 bytes of memory starting at `uncompressedPayload.ptr_`:\r\n\r\n```\r\n00000000: 2020 1611 5b7f 0000 2020 1611 5b7f 0000    ..[...  ..[...\r\n00000010: 010a 0c08 daea 81f5 0510 98a2 ffd6 0112  ................\r\n00000020: 1b31 5669 5475 6350 4d49 7977 3736 7373  .1ViTucPMIyw76ss\r\n00000030: 4465 4269 7531 7474 6b52 476c 1a10 6987  DeBiu1ttkRGl..i.\r\n00000040: d6d8 c4c4 09f2 242f 030c ad11 d3da 2210  ......$/......\".\r\n00000050: c546 05f3 8f1c 4b0d 98f0 72f4 0682 bf66  .F....K...r....f\r\n00000060: 3801 0000 000d 1851 28c9 93d5 a59d bafe  8......Q(.......\r\n00000070: ffff 010a 0c08 daea 81f5 0510 ecea e0a6  ................\r\n00000080: 0212 1b31 5669 5475 6350 4d49 7977 3736  ...1ViTucPMIyw76\r\n00000090: 7373 4465 4269 7531 7474 6b52 476c 1a10  ssDeBiu1ttkRGl..\r\n000000a0: 715c b90b 2727 dbb7 525a db32 3f10 9457  q\\..''..RZ.2?..W\r\n000000b0: 2210 bab5 1adf bc6f 4947 a6ad 6430 9d39  \"......oIG..d0.9\r\n000000c0: af23 3801 0000 000d 1851 28c9 93d5 a59d  .#8......Q(.....\r\n000000d0: bafe ffff 010a 0c08 daea 81f5 0510 fe96  ................\r\n000000e0: d9f9 0212 1b31 5669 5475 6350 4d49 7977  .....1ViTucPMIyw\r\n000000f0: 3736 7373 4465 4269 7531 7474 6b52 476c  76ssDeBiu1ttkRGl\r\n00000100: 1a10 b0ae 0983 232e 7069 73a3 daea 78d0  ......#.pis...x.\r\n00000110: e535 2210 a798 373f 851a 4f5b b9ae ebb4  .5\"...7?..O[....\r\n00000120: c1e4 3fef 3801 0000 000d 1850 28c9 93d5  ..?.8......P(...\r\n00000130: a59d bafe ffff 010a 0b08 dbea 81f5 0510  ................\r\n00000140: fda2 d833 121b 3156 6954 7563 504d 4979  ...3..1ViTucPMIy\r\n00000150: 7737 3673 7344 6542 6975 3174 746b 5247  w76ssDeBiu1ttkRG\r\n00000160: 6c1a 10d1 c49d f99b 5ade be52 aa51 1efc  l.......Z..R.Q..\r\n00000170: 7d09 e522 1052 d990 2aa8 a245 9cac 09f2  }..\".R..*..E....\r\n00000180: b279 86cf 3738 0100 0000 0d18 5128 c993  .y..78......Q(..\r\n00000190: d5a5 9dba feff ff01 0a0c 08db ea81 f505  ................\r\n000001a0: 109e e997 8801 121b 3156 6954 7563 504d  ........1ViTucPM\r\n000001b0: 4979 7737 3673 7344 6542 6975 3174 746b  Iyw76ssDeBiu1ttk\r\n000001c0: 5247 6c1a 1025 9c99 b0e2 0d38 77dd 4198  RGl..%.....8w.A.\r\n000001d0: 0515 c5f6 eb22 103c fb16 5828 fe42 f5a4  .....\".<..X(.B..\r\n000001e0: 65ec 82da 4edb 2738 01                   e...N.'8.\r\n```\r\n\r\nI am sending protobufs as the payload, so I wonder if I've encountered some kind of pathological corruption on the producer end.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618298060/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618298669","html_url":"https://github.com/apache/pulsar/pull/6783#issuecomment-618298669","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6783","id":618298669,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODI5ODY2OQ==","user":{"login":"zplinuxlover","id":23027077,"node_id":"MDQ6VXNlcjIzMDI3MDc3","avatar_url":"https://avatars.githubusercontent.com/u/23027077?v=4","gravatar_id":"","url":"https://api.github.com/users/zplinuxlover","html_url":"https://github.com/zplinuxlover","followers_url":"https://api.github.com/users/zplinuxlover/followers","following_url":"https://api.github.com/users/zplinuxlover/following{/other_user}","gists_url":"https://api.github.com/users/zplinuxlover/gists{/gist_id}","starred_url":"https://api.github.com/users/zplinuxlover/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zplinuxlover/subscriptions","organizations_url":"https://api.github.com/users/zplinuxlover/orgs","repos_url":"https://api.github.com/users/zplinuxlover/repos","events_url":"https://api.github.com/users/zplinuxlover/events{/privacy}","received_events_url":"https://api.github.com/users/zplinuxlover/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T09:42:50Z","updated_at":"2020-04-23T09:42:50Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618298669/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618298816","html_url":"https://github.com/apache/pulsar/pull/6783#issuecomment-618298816","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6783","id":618298816,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODI5ODgxNg==","user":{"login":"zplinuxlover","id":23027077,"node_id":"MDQ6VXNlcjIzMDI3MDc3","avatar_url":"https://avatars.githubusercontent.com/u/23027077?v=4","gravatar_id":"","url":"https://api.github.com/users/zplinuxlover","html_url":"https://github.com/zplinuxlover","followers_url":"https://api.github.com/users/zplinuxlover/followers","following_url":"https://api.github.com/users/zplinuxlover/following{/other_user}","gists_url":"https://api.github.com/users/zplinuxlover/gists{/gist_id}","starred_url":"https://api.github.com/users/zplinuxlover/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zplinuxlover/subscriptions","organizations_url":"https://api.github.com/users/zplinuxlover/orgs","repos_url":"https://api.github.com/users/zplinuxlover/repos","events_url":"https://api.github.com/users/zplinuxlover/events{/privacy}","received_events_url":"https://api.github.com/users/zplinuxlover/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T09:43:08Z","updated_at":"2020-04-23T09:43:08Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618298816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618299158","html_url":"https://github.com/apache/pulsar/pull/6758#issuecomment-618299158","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6758","id":618299158,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODI5OTE1OA==","user":{"login":"zplinuxlover","id":23027077,"node_id":"MDQ6VXNlcjIzMDI3MDc3","avatar_url":"https://avatars.githubusercontent.com/u/23027077?v=4","gravatar_id":"","url":"https://api.github.com/users/zplinuxlover","html_url":"https://github.com/zplinuxlover","followers_url":"https://api.github.com/users/zplinuxlover/followers","following_url":"https://api.github.com/users/zplinuxlover/following{/other_user}","gists_url":"https://api.github.com/users/zplinuxlover/gists{/gist_id}","starred_url":"https://api.github.com/users/zplinuxlover/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zplinuxlover/subscriptions","organizations_url":"https://api.github.com/users/zplinuxlover/orgs","repos_url":"https://api.github.com/users/zplinuxlover/repos","events_url":"https://api.github.com/users/zplinuxlover/events{/privacy}","received_events_url":"https://api.github.com/users/zplinuxlover/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T09:43:46Z","updated_at":"2020-04-23T09:43:46Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618299158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618379476","html_url":"https://github.com/apache/pulsar/issues/6785#issuecomment-618379476","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6785","id":618379476,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODM3OTQ3Ng==","user":{"login":"bschofield","id":1534502,"node_id":"MDQ6VXNlcjE1MzQ1MDI=","avatar_url":"https://avatars.githubusercontent.com/u/1534502?v=4","gravatar_id":"","url":"https://api.github.com/users/bschofield","html_url":"https://github.com/bschofield","followers_url":"https://api.github.com/users/bschofield/followers","following_url":"https://api.github.com/users/bschofield/following{/other_user}","gists_url":"https://api.github.com/users/bschofield/gists{/gist_id}","starred_url":"https://api.github.com/users/bschofield/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bschofield/subscriptions","organizations_url":"https://api.github.com/users/bschofield/orgs","repos_url":"https://api.github.com/users/bschofield/repos","events_url":"https://api.github.com/users/bschofield/events{/privacy}","received_events_url":"https://api.github.com/users/bschofield/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T12:40:52Z","updated_at":"2020-04-23T14:33:15Z","author_association":"CONTRIBUTOR","body":"These are not quite the same bug. The problem with the go/C client is that there is no way to set the topic name in a message ID, whereas the problem with the Java library is that the method exists but doesn't work. The two bugs should probably be tracked separately.\r\n\r\nFor the go/C client, it's a little more complicated than I thought because the C++ `MessageId` type only keeps a reference to the topic name, not the actual topic name. This means that when we deserialize a go byte array into the message ID, we also need somehow to create a `std::string` to give it a reference to. There's no way to do that from cgo (that I know of), so I am blocked and I think I need to pass this over to the C++ library maintainer to solve.\r\n\r\nI notice that the official pure-go client is nearing being stable, so maybe the answer here is that anyone who needs message ID serialization functionality should look there.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618379476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618388237","html_url":"https://github.com/apache/pulsar/issues/6807#issuecomment-618388237","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6807","id":618388237,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODM4ODIzNw==","user":{"login":"qianmoQ","id":20521442,"node_id":"MDQ6VXNlcjIwNTIxNDQy","avatar_url":"https://avatars.githubusercontent.com/u/20521442?v=4","gravatar_id":"","url":"https://api.github.com/users/qianmoQ","html_url":"https://github.com/qianmoQ","followers_url":"https://api.github.com/users/qianmoQ/followers","following_url":"https://api.github.com/users/qianmoQ/following{/other_user}","gists_url":"https://api.github.com/users/qianmoQ/gists{/gist_id}","starred_url":"https://api.github.com/users/qianmoQ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qianmoQ/subscriptions","organizations_url":"https://api.github.com/users/qianmoQ/orgs","repos_url":"https://api.github.com/users/qianmoQ/repos","events_url":"https://api.github.com/users/qianmoQ/events{/privacy}","received_events_url":"https://api.github.com/users/qianmoQ/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T12:58:48Z","updated_at":"2020-04-23T13:03:01Z","author_association":"NONE","body":"I don't recommend using it this way because it can cause serialization problems\r\n\r\n`public class ClientConfigurationData implements Serializable`\r\n\r\nsource code `pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ClientConfigurationData.java`\r\n\r\nplease init client For example:\r\n\r\n```java\r\nval confData = new ClientConfigurationData()\r\n    confData.setAuthPluginClassName(\"org.apache.pulsar.client.impl.auth.AuthenticationToken\")\r\n    confData.setAuthParams(\"token:\" + <please set token>)\r\n    // use config\r\n    PulsarSourceBuilder.pulsarAllClientConf(confData)\r\n```\r\n\r\nPlease try it!!!","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618388237/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618393481","html_url":"https://github.com/apache/pulsar/issues/6807#issuecomment-618393481","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6807","id":618393481,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODM5MzQ4MQ==","user":{"login":"why198852","id":7369529,"node_id":"MDQ6VXNlcjczNjk1Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/7369529?v=4","gravatar_id":"","url":"https://api.github.com/users/why198852","html_url":"https://github.com/why198852","followers_url":"https://api.github.com/users/why198852/followers","following_url":"https://api.github.com/users/why198852/following{/other_user}","gists_url":"https://api.github.com/users/why198852/gists{/gist_id}","starred_url":"https://api.github.com/users/why198852/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/why198852/subscriptions","organizations_url":"https://api.github.com/users/why198852/orgs","repos_url":"https://api.github.com/users/why198852/repos","events_url":"https://api.github.com/users/why198852/events{/privacy}","received_events_url":"https://api.github.com/users/why198852/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T13:09:03Z","updated_at":"2020-04-23T13:09:03Z","author_association":"NONE","body":"good idea,Mr qianmoQ.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618393481/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618461247","html_url":"https://github.com/apache/pulsar/pull/6800#issuecomment-618461247","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6800","id":618461247,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODQ2MTI0Nw==","user":{"login":"addisonj","id":636291,"node_id":"MDQ6VXNlcjYzNjI5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/636291?v=4","gravatar_id":"","url":"https://api.github.com/users/addisonj","html_url":"https://github.com/addisonj","followers_url":"https://api.github.com/users/addisonj/followers","following_url":"https://api.github.com/users/addisonj/following{/other_user}","gists_url":"https://api.github.com/users/addisonj/gists{/gist_id}","starred_url":"https://api.github.com/users/addisonj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/addisonj/subscriptions","organizations_url":"https://api.github.com/users/addisonj/orgs","repos_url":"https://api.github.com/users/addisonj/repos","events_url":"https://api.github.com/users/addisonj/events{/privacy}","received_events_url":"https://api.github.com/users/addisonj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T15:23:18Z","updated_at":"2020-04-23T15:23:18Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618461247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618461858","html_url":"https://github.com/apache/pulsar/pull/6801#issuecomment-618461858","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6801","id":618461858,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODQ2MTg1OA==","user":{"login":"addisonj","id":636291,"node_id":"MDQ6VXNlcjYzNjI5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/636291?v=4","gravatar_id":"","url":"https://api.github.com/users/addisonj","html_url":"https://github.com/addisonj","followers_url":"https://api.github.com/users/addisonj/followers","following_url":"https://api.github.com/users/addisonj/following{/other_user}","gists_url":"https://api.github.com/users/addisonj/gists{/gist_id}","starred_url":"https://api.github.com/users/addisonj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/addisonj/subscriptions","organizations_url":"https://api.github.com/users/addisonj/orgs","repos_url":"https://api.github.com/users/addisonj/repos","events_url":"https://api.github.com/users/addisonj/events{/privacy}","received_events_url":"https://api.github.com/users/addisonj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T15:24:12Z","updated_at":"2020-04-23T15:24:12Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618461858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618497703","html_url":"https://github.com/apache/pulsar/pull/6787#issuecomment-618497703","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6787","id":618497703,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODQ5NzcwMw==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T16:23:22Z","updated_at":"2020-04-23T16:23:22Z","author_association":"CONTRIBUTOR","body":"> This only covers 50% of the contract. If a reader is scanning a log, it should receive events in order and there are no data gaps.\r\n\r\nThat's not what the contract is. And it's not how the reader was designed. Take a look at https://github.com/apache/pulsar/issues/355\r\n\r\n```\r\nIntroduce a new low-level API that allow applications to read through all\r\nthe messages available in a topic without the need of creating a \r\nsubscription.\r\n\r\nA reader is a new entity in the Pulsar client API that will only exists \r\nwhen connected to a broker. Reader will be able to decide at which\r\nmessage id to start reading, and it will read all the messages after that.\r\n\r\nA reader is only useful in practice if the retention time is set to keep\r\nthe data available for a given amount of time. The reader being \r\nconnected will not prevent the broker to delete the data once the \r\nretention period expires.\r\n```\r\n\r\nThat is to say: \"The reader should receive events in order and there are no data gaps, ***while operating within the configured constraints***\". \r\n\r\nAgain, I want to be absolutely clear that this change is not relaxing any guarantee over current behavior.\r\n\r\nWe should not be mixing the life-cycle of 2 different components: \r\n\r\n * The client `Reader` object is valid from when it's created until one calls `close()`\r\n * Whenever a client `Reader` is connected to a broker, there will be a \"NonDurableSubscription\" associated. Its lifecycle is tied to the state of the TCP connection, or an explicit close. \r\n\r\nRight now, the data is only retained within the scope of the `NonDurableSubscription`. That is not giving any meaningful guarantee to to the `Reader` concept, since a TCP re-connection can happen at any time for many different reasons.\r\n\r\nSince the fact that \"NonDurableSubscription\" retaining data goes directly against the stated goal, and it doesn't provide any guarantees, it should be regarded as a bug, not as an optional feature.\r\n\r\n\r\n> If you look into any file system, when you are opening a file to read and there is a background process delete the file for whatever reason, the reader can still read the file until it is closed. The file system only reclaims disk spaces when the last active open file descriptor is closed.\r\n\r\nA file system is also operating within system constraints. When the disk (or user quota) is full, some actions will have to be taken.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618497703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618502915","html_url":"https://github.com/apache/pulsar/pull/6800#issuecomment-618502915","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6800","id":618502915,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODUwMjkxNQ==","user":{"login":"addisonj","id":636291,"node_id":"MDQ6VXNlcjYzNjI5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/636291?v=4","gravatar_id":"","url":"https://api.github.com/users/addisonj","html_url":"https://github.com/addisonj","followers_url":"https://api.github.com/users/addisonj/followers","following_url":"https://api.github.com/users/addisonj/following{/other_user}","gists_url":"https://api.github.com/users/addisonj/gists{/gist_id}","starred_url":"https://api.github.com/users/addisonj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/addisonj/subscriptions","organizations_url":"https://api.github.com/users/addisonj/orgs","repos_url":"https://api.github.com/users/addisonj/repos","events_url":"https://api.github.com/users/addisonj/events{/privacy}","received_events_url":"https://api.github.com/users/addisonj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T16:33:08Z","updated_at":"2020-04-23T16:33:08Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618502915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618503075","html_url":"https://github.com/apache/pulsar/pull/6801#issuecomment-618503075","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6801","id":618503075,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODUwMzA3NQ==","user":{"login":"addisonj","id":636291,"node_id":"MDQ6VXNlcjYzNjI5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/636291?v=4","gravatar_id":"","url":"https://api.github.com/users/addisonj","html_url":"https://github.com/addisonj","followers_url":"https://api.github.com/users/addisonj/followers","following_url":"https://api.github.com/users/addisonj/following{/other_user}","gists_url":"https://api.github.com/users/addisonj/gists{/gist_id}","starred_url":"https://api.github.com/users/addisonj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/addisonj/subscriptions","organizations_url":"https://api.github.com/users/addisonj/orgs","repos_url":"https://api.github.com/users/addisonj/repos","events_url":"https://api.github.com/users/addisonj/events{/privacy}","received_events_url":"https://api.github.com/users/addisonj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T16:33:25Z","updated_at":"2020-04-23T16:33:25Z","author_association":"CONTRIBUTOR","body":"/pulsarbot run-failure-checks","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618503075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618531886","html_url":"https://github.com/apache/pulsar/pull/6791#issuecomment-618531886","issue_url":"https://api.github.com/repos/apache/pulsar/issues/6791","id":618531886,"node_id":"MDEyOklzc3VlQ29tbWVudDYxODUzMTg4Ng==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-23T17:23:13Z","updated_at":"2020-04-23T17:23:13Z","author_association":"CONTRIBUTOR","body":"> I see there is a problem in the current algorithm when scaling down the number of consumers. But I don't think its broken. \r\n\r\nThe Key Shared subscriptions has 2 stated goals: \r\n\r\n 1. Distribute the load evenly across available consumers \r\n 2. Retain ordering\r\n\r\nThe current implementation cannot guarantee either of the 2: \r\n 1. Apart from the scale down I've seen 1 consumer out of 10 being active after a rolling restart\r\n 2. A simple sequence of \"add new consumer\" and \"remove a different consumer\" is breaking the ordering guarantee.\r\n\r\n\r\n> So the extreme case you described in the description probably wasn't really noticed.\r\n\r\nThe first user I saw using this feature for a very simple use case kept going into this state after each rolling restart. \r\nFor sure, bugs are always around the corner, though once identified we should should strive to fix them.\r\n\r\n> If you have a better algorithm to resolve the key distribution and the screw problem during split-and-merge,\r\n\r\nThat's what I said: There is no easy way to do it in that mode and that's the reason why the textbook solution for this kind of problems is to use consistent hashing. This is not something I came up with.\r\n\r\nSo, if you're asking \"do you have a better algorithm to implement the goals of KeyShared subscription\", the answer is: yes, consistent hashing. \r\n\r\nInstead, if the question is \"do you have a better algorithm to resolve the key distribution and the screw problem during split-and-merge?\", my answer is no and: why is that a requirement? We just need one solution that fulfills the 2 goals (traffic distribution and ordering).\r\n\r\nGoing back to the original question on having a configuration switch. We can do that if there are concerns on this implementation, though I think that, at least by default, the behavior should not have \"known\"  blind spots.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/618531886/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]