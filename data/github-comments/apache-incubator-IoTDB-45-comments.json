[{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/917955815","html_url":"https://github.com/apache/iotdb/pull/3939#issuecomment-917955815","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3939","id":917955815,"node_id":"IC_kwDOCXnElM42tuTn","user":{"login":"chengjianyun","id":6150814,"node_id":"MDQ6VXNlcjYxNTA4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6150814?v=4","gravatar_id":"","url":"https://api.github.com/users/chengjianyun","html_url":"https://github.com/chengjianyun","followers_url":"https://api.github.com/users/chengjianyun/followers","following_url":"https://api.github.com/users/chengjianyun/following{/other_user}","gists_url":"https://api.github.com/users/chengjianyun/gists{/gist_id}","starred_url":"https://api.github.com/users/chengjianyun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengjianyun/subscriptions","organizations_url":"https://api.github.com/users/chengjianyun/orgs","repos_url":"https://api.github.com/users/chengjianyun/repos","events_url":"https://api.github.com/users/chengjianyun/events{/privacy}","received_events_url":"https://api.github.com/users/chengjianyun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-13T08:21:25Z","updated_at":"2021-09-13T08:27:30Z","author_association":"CONTRIBUTOR","body":"> To solve these problems completely, I think `raftLogManager` needs a complete refactoring, including but not limited to better concurrency control, better persistence strategy, etc.\r\n> \r\n> When I first joined the community in my senior year, the first thing I did was to implement `raftLogManager` with reference to `storage` and `unstable` interfaces in `etcd`. Because I didn't have a very deep understanding of `raft` and `etcd` at that time, after a long period, I finally realized that this was probably an awful implementation and I apologize for that. There are two main reasons:\r\n> \r\n> * For `raft`, uncommitted logs also need to be persisted (i.e., logs on disk may also need to be truncated) in order to ensure correctness after reboot.\r\n> * `etcd` is an event-driven architecture, so its interior is all unlocked. However, in our architecture, `raftLogManager` can be accessed concurrently by multiple threads. So we've added a lot of patches for concurrency control right now, but this is actually an area we can think about implementing better.\r\n> \r\n> Thank you very much for your great contributions. This week I will focus on the PR you raised about `cluster-` branch and a bug at hand. After that, I would like to discuss the refactoring of `raftLogManager` with you guys and community. And of course you're welcome to start to design the new `raftLogManager` with us right now if you are free.\r\n\r\nThanks for your implementation so that we can enjoy the first cluster version of IoTDB  :). Raft algorithm is really hard to implementation, there are too many corner cases to consideration. We could make the algorithm work correct in most of cases in a short time which is terrific.\r\n\r\nIn my opinion, we need to spend too much effort to guarantee the correctness of Raft if we want to keep working on the current cluster implementation. Cluster module lack a whole system design according to my feeling. \r\n\r\nAnother my suggestion is we can gradually separate raft implementation and raft client(application) just like what `etcd` did. The goal of this is, finally, we can involve `Ratis` to help manage the Raft status. Maybe it's time to put `Ratis` on the agenda. I strongly suggest someone spend some time to investigate `Ratis` and evaluate the cost of integration. Instead of Raft correctness, we can focus on improving the core engine of IoTDB and ecosystem after that.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/917955815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/917961701","html_url":"https://github.com/apache/iotdb/pull/3939#issuecomment-917961701","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3939","id":917961701,"node_id":"IC_kwDOCXnElM42tvvl","user":{"login":"neuyilan","id":6237070,"node_id":"MDQ6VXNlcjYyMzcwNzA=","avatar_url":"https://avatars.githubusercontent.com/u/6237070?v=4","gravatar_id":"","url":"https://api.github.com/users/neuyilan","html_url":"https://github.com/neuyilan","followers_url":"https://api.github.com/users/neuyilan/followers","following_url":"https://api.github.com/users/neuyilan/following{/other_user}","gists_url":"https://api.github.com/users/neuyilan/gists{/gist_id}","starred_url":"https://api.github.com/users/neuyilan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuyilan/subscriptions","organizations_url":"https://api.github.com/users/neuyilan/orgs","repos_url":"https://api.github.com/users/neuyilan/repos","events_url":"https://api.github.com/users/neuyilan/events{/privacy}","received_events_url":"https://api.github.com/users/neuyilan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-13T08:29:06Z","updated_at":"2021-09-13T08:29:28Z","author_association":"MEMBER","body":"> Another my suggestion is we can gradually separate raft implementation and raft client(application) just like what `etcd` did. The goal of this is, finally, we can involve `Ratis` to help manage the Raft status. Maybe it's time to put `Ratis` on the agenda. I strongly suggest someone spend some time to investigate `Ratis` and evaluate the cost of integration. Instead of Raft correctness, We could focus on improving the core engine of IoTDB and ecosystem after that.\r\n\r\nActually, I have the same idea as you, I think we can integrate `Apache Ratis` with our project,  so at least we can guarantee the correctness of the raft, and our energy can be used for some functions of `IoTDB`.  And at present, I think the correctness is far greater than the performance.\r\nBut it's really a time-consuming thing. We need to work together to finish it.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/917961701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/917978706","html_url":"https://github.com/apache/iotdb/pull/3939#issuecomment-917978706","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3939","id":917978706,"node_id":"IC_kwDOCXnElM42tz5S","user":{"login":"chengjianyun","id":6150814,"node_id":"MDQ6VXNlcjYxNTA4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6150814?v=4","gravatar_id":"","url":"https://api.github.com/users/chengjianyun","html_url":"https://github.com/chengjianyun","followers_url":"https://api.github.com/users/chengjianyun/followers","following_url":"https://api.github.com/users/chengjianyun/following{/other_user}","gists_url":"https://api.github.com/users/chengjianyun/gists{/gist_id}","starred_url":"https://api.github.com/users/chengjianyun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengjianyun/subscriptions","organizations_url":"https://api.github.com/users/chengjianyun/orgs","repos_url":"https://api.github.com/users/chengjianyun/repos","events_url":"https://api.github.com/users/chengjianyun/events{/privacy}","received_events_url":"https://api.github.com/users/chengjianyun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-13T08:53:10Z","updated_at":"2021-09-13T08:53:10Z","author_association":"CONTRIBUTOR","body":"> > Another my suggestion is we can gradually separate raft implementation and raft client(application) just like what `etcd` did. The goal of this is, finally, we can involve `Ratis` to help manage the Raft status. Maybe it's time to put `Ratis` on the agenda. I strongly suggest someone spend some time to investigate `Ratis` and evaluate the cost of integration. Instead of Raft correctness, We could focus on improving the core engine of IoTDB and ecosystem after that.\r\n> \r\n> Actually, I have the same idea as you, I think we can integrate `Apache Ratis` with our project, so at least we can guarantee the correctness of the raft, and our energy can be used for some functions of `IoTDB`. And at present, I think the correctness is far greater than the performance.\r\n> But it's really a time-consuming thing. We need to work together to finish it.\r\n\r\nVery glad to work together. As I will work on prometheus integration in the later of this month, I only have small bandwidth for this. But I'd like to propose some design sooner or later to discuss together after investigation.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/917978706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/917983405","html_url":"https://github.com/apache/iotdb/pull/3939#issuecomment-917983405","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3939","id":917983405,"node_id":"IC_kwDOCXnElM42t1Ct","user":{"login":"OneSizeFitsQuorum","id":32640567,"node_id":"MDQ6VXNlcjMyNjQwNTY3","avatar_url":"https://avatars.githubusercontent.com/u/32640567?v=4","gravatar_id":"","url":"https://api.github.com/users/OneSizeFitsQuorum","html_url":"https://github.com/OneSizeFitsQuorum","followers_url":"https://api.github.com/users/OneSizeFitsQuorum/followers","following_url":"https://api.github.com/users/OneSizeFitsQuorum/following{/other_user}","gists_url":"https://api.github.com/users/OneSizeFitsQuorum/gists{/gist_id}","starred_url":"https://api.github.com/users/OneSizeFitsQuorum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OneSizeFitsQuorum/subscriptions","organizations_url":"https://api.github.com/users/OneSizeFitsQuorum/orgs","repos_url":"https://api.github.com/users/OneSizeFitsQuorum/repos","events_url":"https://api.github.com/users/OneSizeFitsQuorum/events{/privacy}","received_events_url":"https://api.github.com/users/OneSizeFitsQuorum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-13T08:59:43Z","updated_at":"2021-09-13T08:59:43Z","author_association":"CONTRIBUTOR","body":"> Another my suggestion is we can gradually separate raft implementation and raft client(application) just like what `etcd` did. The goal of this is, finally, we can involve `Ratis` to help manage the Raft status. Maybe it's time to put `Ratis` on the agenda. I strongly suggest someone spend some time to investigate `Ratis` and evaluate the cost of integration. Instead of Raft correctness, we can focus on improving the core engine of IoTDB and ecosystem after that.\r\n\r\nIn fact, In the last few months I have studied Raft algorithm carefully and completed [6.824 lab](https://github.com/LebronAl/MIT6.824-2021). This is just an instructional Raft implementation, which makes me deeply appreciate how difficult it is to implement a correct consensus algorithm, while Raft algorithm at production level requires much more. So I think maybe it's time for us to weigh in and make a decision. Choosing a mature implementation of the raft algorithm liberates our productivity, which may take a long time at first, but can be hugely beneficial once implemented.\r\n\r\nBut I also want to list two concerns:\r\n\r\n- Production-level raft algorithms generally guarantee linearizability, which is the strictest consistency in distributed systems. Our current Raft algorithm may not be complete, so strictly speaking it does not guarantee linearizability, but at the same time it's performance may be better. What would we say if we migrated raft implementation and performance dropped? Furthermore, is linearizability really necessary for OLAP databases like time-series databases?\r\n\r\n- At the moment we have Raft implementation and business logic mixed together, but there is a certain amount of performance improvement. For example, we currently put data from multiple storage groups into one Raft group to be executed synchronously. In fact, at the bottom, they can be executed in parallel. So we implemented parallel asynchronous apply optimization so that plans from the same Raft group but different storage groups can be applied in parallel. The performance gains from this optimization are significant. How should we handle this case after we migrate raft implementation? Add parallel apply feature to raft library Or do we change our partitioning pattern so that a Raft group serves only one storage group? Or just let them execute inefficiently?\r\n\r\nAny discussions are welcomed~\r\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/917983405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918010901","html_url":"https://github.com/apache/iotdb/pull/3939#issuecomment-918010901","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3939","id":918010901,"node_id":"IC_kwDOCXnElM42t7wV","user":{"login":"neuyilan","id":6237070,"node_id":"MDQ6VXNlcjYyMzcwNzA=","avatar_url":"https://avatars.githubusercontent.com/u/6237070?v=4","gravatar_id":"","url":"https://api.github.com/users/neuyilan","html_url":"https://github.com/neuyilan","followers_url":"https://api.github.com/users/neuyilan/followers","following_url":"https://api.github.com/users/neuyilan/following{/other_user}","gists_url":"https://api.github.com/users/neuyilan/gists{/gist_id}","starred_url":"https://api.github.com/users/neuyilan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuyilan/subscriptions","organizations_url":"https://api.github.com/users/neuyilan/orgs","repos_url":"https://api.github.com/users/neuyilan/repos","events_url":"https://api.github.com/users/neuyilan/events{/privacy}","received_events_url":"https://api.github.com/users/neuyilan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-13T09:32:42Z","updated_at":"2021-09-13T09:32:42Z","author_association":"MEMBER","body":"> is linearizability really necessary for OLAP databases like time-series databases?\r\n\r\nAs I see the raft is one consensus algorithm, which may do not have many relations with the linearizability, just put the post[1] for reference.\r\n> we currently put data from multiple storage groups into one Raft group to be executed synchronously.\r\n\r\nAs far as I know, the apply function is user-defined, we can still implement a parallel apply function according to different storage groups in the one raft log.\r\n\r\nWhat is certain is that using a raft library will definitely limit our optimization work compared with the current implementation (mixing the raft framework and business logic), but I think the availability and correctness are far greater than the performance for now.\r\n[1] https://zhuanlan.zhihu.com/p/47117804","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918010901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918015757","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-918015757","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":918015757,"node_id":"IC_kwDOCXnElM42t88N","user":{"login":"chengjianyun","id":6150814,"node_id":"MDQ6VXNlcjYxNTA4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6150814?v=4","gravatar_id":"","url":"https://api.github.com/users/chengjianyun","html_url":"https://github.com/chengjianyun","followers_url":"https://api.github.com/users/chengjianyun/followers","following_url":"https://api.github.com/users/chengjianyun/following{/other_user}","gists_url":"https://api.github.com/users/chengjianyun/gists{/gist_id}","starred_url":"https://api.github.com/users/chengjianyun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengjianyun/subscriptions","organizations_url":"https://api.github.com/users/chengjianyun/orgs","repos_url":"https://api.github.com/users/chengjianyun/repos","events_url":"https://api.github.com/users/chengjianyun/events{/privacy}","received_events_url":"https://api.github.com/users/chengjianyun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-13T09:39:38Z","updated_at":"2021-09-13T09:44:18Z","author_association":"CONTRIBUTOR","body":"Reply https://github.com/apache/iotdb/pull/3939#issuecomment-917983405, @LebronAl \r\n\r\n> Production-level raft algorithms generally guarantee linearizability, which is the strictest consistency in distributed systems. Our current Raft algorithm may not be complete, so strictly speaking it does not guarantee linearizability, but at the same time it's performance may be better. What would we say if we migrated raft implementation and performance dropped? Furthermore, is linearizability really necessary for OLAP databases like time-series databases?\r\n\r\nWhat do you mean by \"strictly speaking it does not guarantee linearizability\"? In which case, IoTDB doesn't guarantee the linearizability? In my opinion, it doesn't matter IoTDB or other products, if you are using Raft, that means you need the linearizability which is what raft provided. If IoTDB doesn't guarantee the linearizability, I think it's a bug. Right now, I didn't find any of the case. \r\n\r\nI agree that we can simply some aspects of Raft implementation but which won't affect performance much. The main performance improvement relays on the multi-raft support.\r\n\r\n> At the moment we have Raft implementation and business logic mixed together, but there is a certain amount of performance improvement. For example, we currently put data from multiple storage groups into one Raft group to be executed synchronously. In fact, at the bottom, they can be executed in parallel. So we implemented parallel asynchronous apply optimization so that plans from the same Raft group but different storage groups can be applied in parallel. The performance gains from this optimization are significant. How should we handle this case after we migrate raft implementation? Add parallel apply feature to raft library Or do we change our partitioning pattern so that a Raft group serves only one storage group? Or just let them execute inefficiently?\r\n\r\n> \"For example, we currently put data from multiple storage groups into one Raft group to be executed synchronously.\"\r\nCould you explain this one more detail? \r\n\r\n> Add parallel apply feature to raft library Or do we change our partitioning pattern so that a Raft group serves only one storage group?\r\n\r\nApplication(Raft user) takes care of log apply, so it doesn't matter how Raft implemented.\r\n\r\nFinally, in my opinion, current high throughput mainly gains from multi-raft support. So it won't affect performance too much after integrate Ratis according to my understanding.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918015757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918017017","html_url":"https://github.com/apache/iotdb/pull/3939#issuecomment-918017017","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3939","id":918017017,"node_id":"IC_kwDOCXnElM42t9P5","user":{"login":"chengjianyun","id":6150814,"node_id":"MDQ6VXNlcjYxNTA4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6150814?v=4","gravatar_id":"","url":"https://api.github.com/users/chengjianyun","html_url":"https://github.com/chengjianyun","followers_url":"https://api.github.com/users/chengjianyun/followers","following_url":"https://api.github.com/users/chengjianyun/following{/other_user}","gists_url":"https://api.github.com/users/chengjianyun/gists{/gist_id}","starred_url":"https://api.github.com/users/chengjianyun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengjianyun/subscriptions","organizations_url":"https://api.github.com/users/chengjianyun/orgs","repos_url":"https://api.github.com/users/chengjianyun/repos","events_url":"https://api.github.com/users/chengjianyun/events{/privacy}","received_events_url":"https://api.github.com/users/chengjianyun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-13T09:41:25Z","updated_at":"2021-09-13T09:41:25Z","author_association":"CONTRIBUTOR","body":"> > is linearizability really necessary for OLAP databases like time-series databases?\r\n> \r\n> As I see the raft is one consensus algorithm, which may do not have many relations with the linearizability, just put the post[1] for reference.\r\n> \r\n> > we currently put data from multiple storage groups into one Raft group to be executed synchronously.\r\n> \r\n> As far as I know, the apply function is user-defined, we can still implement a parallel apply function according to different storage groups in the one raft log.\r\n> \r\n> What is certain is that using a raft library will definitely limit our optimization work compared with the current implementation (mixing the raft framework and business logic), but I think the availability and correctness are far greater than the performance for now.\r\n> [1] https://zhuanlan.zhihu.com/p/47117804\r\n\r\nLet's move Ratis related discussion to https://github.com/apache/iotdb/issues/3954 so that more people could join.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918017017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918019389","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-918019389","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":918019389,"node_id":"IC_kwDOCXnElM42t909","user":{"login":"neuyilan","id":6237070,"node_id":"MDQ6VXNlcjYyMzcwNzA=","avatar_url":"https://avatars.githubusercontent.com/u/6237070?v=4","gravatar_id":"","url":"https://api.github.com/users/neuyilan","html_url":"https://github.com/neuyilan","followers_url":"https://api.github.com/users/neuyilan/followers","following_url":"https://api.github.com/users/neuyilan/following{/other_user}","gists_url":"https://api.github.com/users/neuyilan/gists{/gist_id}","starred_url":"https://api.github.com/users/neuyilan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuyilan/subscriptions","organizations_url":"https://api.github.com/users/neuyilan/orgs","repos_url":"https://api.github.com/users/neuyilan/repos","events_url":"https://api.github.com/users/neuyilan/events{/privacy}","received_events_url":"https://api.github.com/users/neuyilan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-13T09:44:34Z","updated_at":"2021-09-13T09:44:34Z","author_association":"MEMBER","body":"> is linearizability really necessary for OLAP databases like time-series databases?\r\n\r\nAs I see the raft is one consensus algorithm, which may do not have many relations with the linearizability, just put the post[1] for reference.\r\n> we currently put data from multiple storage groups into one Raft group to be executed synchronously.\r\n\r\nAs far as I know, the apply function is user-defined, we can still implement a parallel apply function according to different storage groups in the one raft log.\r\n\r\nWhat is certain is that using a raft library will definitely limit our optimization work compared with the current implementation (mixing the raft framework and business logic), but I think the availability and correctness are far greater than the performance for now.\r\n[1] https://zhuanlan.zhihu.com/p/47117804","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918019389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918139858","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-918139858","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":918139858,"node_id":"IC_kwDOCXnElM42ubPS","user":{"login":"OneSizeFitsQuorum","id":32640567,"node_id":"MDQ6VXNlcjMyNjQwNTY3","avatar_url":"https://avatars.githubusercontent.com/u/32640567?v=4","gravatar_id":"","url":"https://api.github.com/users/OneSizeFitsQuorum","html_url":"https://github.com/OneSizeFitsQuorum","followers_url":"https://api.github.com/users/OneSizeFitsQuorum/followers","following_url":"https://api.github.com/users/OneSizeFitsQuorum/following{/other_user}","gists_url":"https://api.github.com/users/OneSizeFitsQuorum/gists{/gist_id}","starred_url":"https://api.github.com/users/OneSizeFitsQuorum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OneSizeFitsQuorum/subscriptions","organizations_url":"https://api.github.com/users/OneSizeFitsQuorum/orgs","repos_url":"https://api.github.com/users/OneSizeFitsQuorum/repos","events_url":"https://api.github.com/users/OneSizeFitsQuorum/events{/privacy}","received_events_url":"https://api.github.com/users/OneSizeFitsQuorum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-13T12:25:25Z","updated_at":"2021-09-13T12:25:25Z","author_association":"CONTRIBUTOR","body":"> As I see the raft is one consensus algorithm, which may do not have many relations with the linearizability, just put the post[1] for reference.\r\n\r\nIn academic terms, whether it is Raft, Multi-Paxos or Zab, these consensus algorithms exist only for multi-node consensus, and have nothing to do with consistency or storage systems. I admit that.\r\n\r\nIn engineering, what we call Raft is often combined with replication state machines and storage systems. In this context, the relationship between Raft and linearizability is very large.\r\n\r\nTake the TiKV you quoted in the blog for example. For writing, Raft needs to ensure that the log which received the majority of acks can be committed. For reading, Raft needs to use Read-Index or Lease-Read to ensure linearizability. These designs are actually decisive factors affecting performance, and the key lies in whether we need such safety. However, such core logic is likely to be hard-coded in the Raft library and cannot be changed (if it can be changed, you can ignore me). But in fact, for OLAP scenarios, do we really need such a high level of consistency? For example, [tdengine's](https://www.taosdata.com/cn/documentation/architecture#replication) default synchronization strategy is asynchronous replication rather than majority.\r\n\r\nFor another example, Zookeeper's ZAB algorithm guarantees sequential consistency, which is a slightly weaker than linearizable consistency but still a strong consistency level (refer to the [jepsen](https://jepsen.io/consistency) official website). Then in theory, it has higher performance than the Raft algorithm that guarantees linearizability.\r\n\r\n![image](https://user-images.githubusercontent.com/32640567/133080048-8c5bb062-eacc-4334-804b-99321087f923.png)\r\n\r\nI'm not talking about which solution is better. I just think that since we are talking about refactoring, we should think clearly about the guarantee that the entire data model can provide to the outside world. Because they may often determine the upper bound of performance, and in most cases, these are trade-offs between safety and performance. If we don't need some level of safety, then we can definitely go for better performance.\r\n\r\n> As far as I know, the apply function is user-defined, we can still implement a parallel apply function according to different storage groups in the one raft log.\r\n\r\nIn the etcd [example](https://github.com/etcd-io/etcd/blob/main/contrib/raftexample/kvstore.go), we do have the freedom to handle the commit logs, thanks to their excellent abstraction. In ratis's [example](https://github.com/apache/ratis/blob/master/ratis-examples/src/main/java/org/apache/ratis/examples/counter/server/CounterStateMachine.java#L182), it looks like they only exposed one `applyTransaction` interface for us to override, and I doubt whether we can implement our parallel asynchronous apply optimizations. Of course, I've just had a glance. This area needs further investigation. I just hope some of our optimizations don't go away after the migration.\r\n\r\n> What is certain is that using a raft library will definitely limit our optimization work compared with the current implementation (mixing the raft framework and business logic), but I think the availability and correctness are far greater than the performance for now.\r\n\r\nIf performance drops a little bit after migration, I support it. But if it's a big drop, I think it still needs to be considered very carefully. Of course, a preliminary conclusion can be made after further investigation.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918139858/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918163937","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-918163937","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":918163937,"node_id":"IC_kwDOCXnElM42uhHh","user":{"login":"OneSizeFitsQuorum","id":32640567,"node_id":"MDQ6VXNlcjMyNjQwNTY3","avatar_url":"https://avatars.githubusercontent.com/u/32640567?v=4","gravatar_id":"","url":"https://api.github.com/users/OneSizeFitsQuorum","html_url":"https://github.com/OneSizeFitsQuorum","followers_url":"https://api.github.com/users/OneSizeFitsQuorum/followers","following_url":"https://api.github.com/users/OneSizeFitsQuorum/following{/other_user}","gists_url":"https://api.github.com/users/OneSizeFitsQuorum/gists{/gist_id}","starred_url":"https://api.github.com/users/OneSizeFitsQuorum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OneSizeFitsQuorum/subscriptions","organizations_url":"https://api.github.com/users/OneSizeFitsQuorum/orgs","repos_url":"https://api.github.com/users/OneSizeFitsQuorum/repos","events_url":"https://api.github.com/users/OneSizeFitsQuorum/events{/privacy}","received_events_url":"https://api.github.com/users/OneSizeFitsQuorum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-13T12:58:47Z","updated_at":"2021-09-13T13:04:29Z","author_association":"CONTRIBUTOR","body":"> What do you mean by \"strictly speaking it does not guarantee linearizability\"? In which case, IoTDB doesn't guarantee the linearizability? In my opinion, it doesn't matter IoTDB or other products, if you are using Raft, that means you need the linearizability which is what raft provided. If IoTDB doesn't guarantee the linearizability, I think it's a bug. Right now, I didn't find any of the case.\r\n\r\nThe devil of consensus lies in the corner case. So let me give you three examples that I know so far that may violate linearizability.\r\n1. The uncommitted Raft logs are not persisted. Consider a scenario where node A is the leader, nodes B and C are followers, node A synchronizes the log to B and C and gets all acks, then submits and applies the log, and then returns success to the client before the next heartbeat to followers. Then there was a momentary power outage, nodes B and C restarted immediately, but node A restarted slowly. Node B and C's log are empty after restarting and recovering, but they are already a majority, so they can serve the client's read request, then this may violate linearizability. Of course, this is strictly an implementation bug and can be fixed. But even if the bug is fixed, you can see that our raft log's  serialization buffer refers to the implementation of the stand-alone WAL, it does not write to the disk and call async every time a log is written, which ensures that the performance will not be limited by the IOPS of the disk. But this may also cause the corner case mentioned above. This is the trade-off between performance and safety.\r\n2. In fact, to ensure linearizability Raft uses read-index or lease-read. In our current implementation, direct-read is used for the leader and read-index is used for the follower. This can violate linearizability when a node outage causes a replacement node to execute the same read request. For more specific examples, you can refer to my [blog](https://tanxinyu.work/consistency-and-consensus/). Of course, we could also use read-index on the leader, but this would undoubtedly degrade performance.\r\n3. In fact, Raft's naive implementation guarantees at-least-once semantics, and to ensure linearizability semantics, uuid is generated on the client side and a map is logged on the server side to ensure that each command is executed only once. You can refer to section 6.3 of [Raft's PhD thesis](https://web.stanford.edu/~ouster/cgi-bin/papers/OngaroPhD.pdf) and dragonboat's discussion on [Zhihu](https://www.zhihu.com/question/278551592).There is no doubt that such an implementation will also affect performance.\r\n\r\n>Application(Raft user) takes care of log apply, so it doesn't matter how Raft implemented.\r\n\r\nI hope so~Maybe we need to make a detailed investigation on `Ratis`\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918163937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918709033","html_url":"https://github.com/apache/iotdb/pull/3913#issuecomment-918709033","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3913","id":918709033,"node_id":"IC_kwDOCXnElM42wmMp","user":{"login":"mychaow","id":5250473,"node_id":"MDQ6VXNlcjUyNTA0NzM=","avatar_url":"https://avatars.githubusercontent.com/u/5250473?v=4","gravatar_id":"","url":"https://api.github.com/users/mychaow","html_url":"https://github.com/mychaow","followers_url":"https://api.github.com/users/mychaow/followers","following_url":"https://api.github.com/users/mychaow/following{/other_user}","gists_url":"https://api.github.com/users/mychaow/gists{/gist_id}","starred_url":"https://api.github.com/users/mychaow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mychaow/subscriptions","organizations_url":"https://api.github.com/users/mychaow/orgs","repos_url":"https://api.github.com/users/mychaow/repos","events_url":"https://api.github.com/users/mychaow/events{/privacy}","received_events_url":"https://api.github.com/users/mychaow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T01:07:19Z","updated_at":"2021-09-14T01:07:19Z","author_association":"MEMBER","body":"please cherry pick to 0.12","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918709033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918736384","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-918736384","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":918736384,"node_id":"IC_kwDOCXnElM42ws4A","user":{"login":"chengjianyun","id":6150814,"node_id":"MDQ6VXNlcjYxNTA4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6150814?v=4","gravatar_id":"","url":"https://api.github.com/users/chengjianyun","html_url":"https://github.com/chengjianyun","followers_url":"https://api.github.com/users/chengjianyun/followers","following_url":"https://api.github.com/users/chengjianyun/following{/other_user}","gists_url":"https://api.github.com/users/chengjianyun/gists{/gist_id}","starred_url":"https://api.github.com/users/chengjianyun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengjianyun/subscriptions","organizations_url":"https://api.github.com/users/chengjianyun/orgs","repos_url":"https://api.github.com/users/chengjianyun/repos","events_url":"https://api.github.com/users/chengjianyun/events{/privacy}","received_events_url":"https://api.github.com/users/chengjianyun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T02:13:35Z","updated_at":"2021-09-14T02:13:35Z","author_association":"CONTRIBUTOR","body":"> The uncommitted Raft logs are not persisted. Consider a scenario where node A is the leader, nodes B and C are followers, node A synchronizes the log to B and C and gets all acks, then submits and applies the log, and then returns success to the client before the next heartbeat to followers. Then there was a momentary power outage, nodes B and C restarted immediately, but node A restarted slowly. Node B and C's log are empty after restarting and recovering, but they are already a majority, so they can serve the client's read request, then this may violate linearizability.\r\n\r\nAgree that the case is a bug for IoTDB.\r\n\r\n> In fact, to ensure linearizability Raft uses read-index or lease-read. In our current implementation, direct-read is used for the leader and read-index is used for the follower. This can violate linearizability when a node outage causes a replacement node to execute the same read request. For more specific examples, you can refer to my blog. Of course, we could also use read-index on the leader, but this would undoubtedly degrade performance.\r\n\r\nSorry that I didn't make the assumption clear. I think we are talking things under IoTDB environment. So I didn't take Read operation into consideration. As you have said, linearization the read is not a regular operation in OLAP system. \r\n\r\nAnd let's go back to Raft library topic. Import the Raft library doesn't mean application needs to sync all operation via the library, it depends on requirement. I don't think IoTDB needs to change current read action process flow after import the library. \r\n\r\nAnd learned a lot from your blog and references, thanks.\r\n\r\n> In fact, Raft's naive implementation guarantees at-least-once semantics, and to ensure linearizability semantics, uuid is generated on the client side and a map is logged on the server side to ensure that each command is executed only once. \r\n\r\nAgree the concept but which is unnecessary under IoTDB or time-order data environment. I think the `exactly-only-once` requirement here as the actions are not idempotent for all system. But operations in time-order-data or ``most of actions in IoTDB (in my understanding all of actions right now) are idempotent naturally. And again, all of these are in scope of application instead of Raft. \r\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918736384/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918741574","html_url":"https://github.com/apache/iotdb/pull/3916#issuecomment-918741574","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3916","id":918741574,"node_id":"IC_kwDOCXnElM42wuJG","user":{"login":"Alima777","id":34242296,"node_id":"MDQ6VXNlcjM0MjQyMjk2","avatar_url":"https://avatars.githubusercontent.com/u/34242296?v=4","gravatar_id":"","url":"https://api.github.com/users/Alima777","html_url":"https://github.com/Alima777","followers_url":"https://api.github.com/users/Alima777/followers","following_url":"https://api.github.com/users/Alima777/following{/other_user}","gists_url":"https://api.github.com/users/Alima777/gists{/gist_id}","starred_url":"https://api.github.com/users/Alima777/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Alima777/subscriptions","organizations_url":"https://api.github.com/users/Alima777/orgs","repos_url":"https://api.github.com/users/Alima777/repos","events_url":"https://api.github.com/users/Alima777/events{/privacy}","received_events_url":"https://api.github.com/users/Alima777/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T02:26:13Z","updated_at":"2021-09-14T02:26:13Z","author_association":"CONTRIBUTOR","body":"@SteveYurongSu Could you have a look at this?","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918741574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918753815","html_url":"https://github.com/apache/iotdb/pull/3956#issuecomment-918753815","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3956","id":918753815,"node_id":"IC_kwDOCXnElM42wxIX","user":{"login":"cornmonster","id":20107543,"node_id":"MDQ6VXNlcjIwMTA3NTQz","avatar_url":"https://avatars.githubusercontent.com/u/20107543?v=4","gravatar_id":"","url":"https://api.github.com/users/cornmonster","html_url":"https://github.com/cornmonster","followers_url":"https://api.github.com/users/cornmonster/followers","following_url":"https://api.github.com/users/cornmonster/following{/other_user}","gists_url":"https://api.github.com/users/cornmonster/gists{/gist_id}","starred_url":"https://api.github.com/users/cornmonster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cornmonster/subscriptions","organizations_url":"https://api.github.com/users/cornmonster/orgs","repos_url":"https://api.github.com/users/cornmonster/repos","events_url":"https://api.github.com/users/cornmonster/events{/privacy}","received_events_url":"https://api.github.com/users/cornmonster/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T02:59:15Z","updated_at":"2021-09-14T02:59:15Z","author_association":"CONTRIBUTOR","body":"@Alima777 Hi, could you please review this cherry-pick from master to rel/0.12? Thank you very much for your time.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918753815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918760291","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-918760291","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":918760291,"node_id":"IC_kwDOCXnElM42wytj","user":{"login":"OneSizeFitsQuorum","id":32640567,"node_id":"MDQ6VXNlcjMyNjQwNTY3","avatar_url":"https://avatars.githubusercontent.com/u/32640567?v=4","gravatar_id":"","url":"https://api.github.com/users/OneSizeFitsQuorum","html_url":"https://github.com/OneSizeFitsQuorum","followers_url":"https://api.github.com/users/OneSizeFitsQuorum/followers","following_url":"https://api.github.com/users/OneSizeFitsQuorum/following{/other_user}","gists_url":"https://api.github.com/users/OneSizeFitsQuorum/gists{/gist_id}","starred_url":"https://api.github.com/users/OneSizeFitsQuorum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OneSizeFitsQuorum/subscriptions","organizations_url":"https://api.github.com/users/OneSizeFitsQuorum/orgs","repos_url":"https://api.github.com/users/OneSizeFitsQuorum/repos","events_url":"https://api.github.com/users/OneSizeFitsQuorum/events{/privacy}","received_events_url":"https://api.github.com/users/OneSizeFitsQuorum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T03:12:27Z","updated_at":"2021-09-14T03:15:04Z","author_association":"CONTRIBUTOR","body":"> Agree that the case is a bug for IoTDB.\r\n\r\nYes\r\n\r\n> Of course, this is strictly an implementation bug and can be fixed. But even if the bug is fixed, you can see that our raft log's serialization buffer refers to the implementation of the stand-alone WAL, it does not write to the disk and call async every time a log is written, which ensures that the performance will not be limited by the IOPS of the disk. But this may also cause the corner case mentioned above. This is the trade-off between performance and safety.\r\n\r\nBut the key sentence is this. Even if the bug is fixed. Should we also call async every time when we flush log? The current implementation is a performance-oriented compromise for us, but it certainly sacrifices security. Strictly speaking, we currently buffer data through user-space buffers, whether standalone wal or raft logs. However, with [Ratis](https://github.com/apache/ratis/blob/7a852736de1588bc645f86a92a1d6b4d37b21e2b/ratis-server/src/main/java/org/apache/ratis/server/raftlog/segmented/SegmentedRaftLogWorker.java#L510), they seem to be caching the data in the operating system's Page cache, and `async` is determined based on the parameters and load. I think our approach’s performance will be better (because it sacrifices more security than theirs), but I don't know how much of performance difference there is. This is worth exploring.\r\n\r\n> And let's go back to Raft library topic. Import the Raft library doesn't mean application needs to sync all operation via the library, it depends on requirement. I don't think IoTDB needs to change current read action process flow after import the library.\r\n\r\nHope so. IMO, the more additional code we have to write using these Raft libraries, the more optimization possibilities we have for our scenario, just like with etcd. But with Ratis, I'm not sure yet.\r\n\r\n> Agree the concept but which is unnecessary under IoTDB or time-order data environment. I think the exactly-only-once requirement here as the actions are not idempotent for all system.\r\n\r\nIn fact, even if every command is idempotent, as long as the client adds retry logic, it will violate linearizability without filtering as described above... This is a fairly advanced feature, as far as I know, only the Raft library for Dragonboat supports this logic, and I don't think Ratis has done it yet. So we can forget about this.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918760291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918776584","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-918776584","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":918776584,"node_id":"IC_kwDOCXnElM42w2sI","user":{"login":"chengjianyun","id":6150814,"node_id":"MDQ6VXNlcjYxNTA4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6150814?v=4","gravatar_id":"","url":"https://api.github.com/users/chengjianyun","html_url":"https://github.com/chengjianyun","followers_url":"https://api.github.com/users/chengjianyun/followers","following_url":"https://api.github.com/users/chengjianyun/following{/other_user}","gists_url":"https://api.github.com/users/chengjianyun/gists{/gist_id}","starred_url":"https://api.github.com/users/chengjianyun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengjianyun/subscriptions","organizations_url":"https://api.github.com/users/chengjianyun/orgs","repos_url":"https://api.github.com/users/chengjianyun/repos","events_url":"https://api.github.com/users/chengjianyun/events{/privacy}","received_events_url":"https://api.github.com/users/chengjianyun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T03:54:38Z","updated_at":"2021-09-14T03:54:38Z","author_association":"CONTRIBUTOR","body":"> > Agree that the case is a bug for IoTDB.\r\n> \r\n> Yes\r\n> \r\n> > Of course, this is strictly an implementation bug and can be fixed. But even if the bug is fixed, you can see that our raft log's serialization buffer refers to the implementation of the stand-alone WAL, it does not write to the disk and call async every time a log is written, which ensures that the performance will not be limited by the IOPS of the disk. But this may also cause the corner case mentioned above. This is the trade-off between performance and safety.\r\n> \r\n> But the key sentence is this. Even if the bug is fixed. Should we also call async every time when we flush log? The current implementation is a performance-oriented compromise for us, but it certainly sacrifices security. Strictly speaking, we currently buffer data through user-space buffers, whether standalone wal or raft logs. However, with [Ratis](https://github.com/apache/ratis/blob/7a852736de1588bc645f86a92a1d6b4d37b21e2b/ratis-server/src/main/java/org/apache/ratis/server/raftlog/segmented/SegmentedRaftLogWorker.java#L510), they seem to be caching the data in the operating system's Page cache, and `async` is determined based on the parameters and load. I think our approach’s performance will be better (because it sacrifices more security than theirs), but I don't know how much of performance difference there is. This is worth exploring.\r\n\r\nIMO, this depends on what kinds of properties IoTDB'd like to guarantee for user. If IoTDB says, I won't lost any data in any situation, then persist each log every time is required and relative performance lose should be acceptable. But if it's doesn't do such guarantee, then it's OK to do some optimization. Of course, we can make it configurable just like standalone WAL in IoTDB. As I didn't look into Ratis, I'm not sure if it makes this configurable.\r\n\r\n> > And let's go back to Raft library topic. Import the Raft library doesn't mean application needs to sync all operation via the library, it depends on requirement. I don't think IoTDB needs to change current read action process flow after import the library.\r\n> \r\n> Hope so. IMO, the more additional code we have to write using these Raft libraries, the more optimization possibilities we have for our scenario, just like with etcd. But with Ratis, I'm not sure yet.\r\n> \r\n> > Agree the concept but which is unnecessary under IoTDB or time-order data environment. I think the exactly-only-once requirement here as the actions are not idempotent for all system.\r\n> \r\n> In fact, even if every command is idempotent, as long as the client adds retry logic, it will violate linearizability without filtering as described above... This is a fairly advanced feature, as far as I know, only the Raft library for Dragonboat supports this logic, and I don't think Ratis has done it yet. So we can forget about this.\r\n\r\nI don't understand, on [zhihu](https://www.zhihu.com/question/278551592), it says \"proposal id\" is generated by client, and filter when do apply(often implemented by State Machine). So I think the retry logic is transparent for raft, the retry operation is new log for raft. Not sure my understanding is right or not.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918776584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918777422","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-918777422","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":918777422,"node_id":"IC_kwDOCXnElM42w25O","user":{"login":"cigarl","id":44458757,"node_id":"MDQ6VXNlcjQ0NDU4NzU3","avatar_url":"https://avatars.githubusercontent.com/u/44458757?v=4","gravatar_id":"","url":"https://api.github.com/users/cigarl","html_url":"https://github.com/cigarl","followers_url":"https://api.github.com/users/cigarl/followers","following_url":"https://api.github.com/users/cigarl/following{/other_user}","gists_url":"https://api.github.com/users/cigarl/gists{/gist_id}","starred_url":"https://api.github.com/users/cigarl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cigarl/subscriptions","organizations_url":"https://api.github.com/users/cigarl/orgs","repos_url":"https://api.github.com/users/cigarl/repos","events_url":"https://api.github.com/users/cigarl/events{/privacy}","received_events_url":"https://api.github.com/users/cigarl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T03:57:09Z","updated_at":"2021-09-14T04:03:12Z","author_association":"CONTRIBUTOR","body":"> But the key sentence is this. Even if the bug is fixed. Should we also call async every time when we flush log? \r\n\r\nAgree with you, in the IOT world, data may not be as sensitive,maybe we can sacrifice security _(in some cases)_ to improve performance _(we can even provide configurations to meet different needs of users)_.But for now, this approach seems to pose a greater danger _(eg. cluster can not be restarted successfully, or enter an unstable state, returning confusing results to the user, etc)_ in corner cases.\r\n\r\nBTW,maybe we should comb through some optimizations to compare.I'm so sorry that I seem to see only that the strategy of flushing to disk has an effect, the impact at the Raft level doesn't seem to be as large as expected.\r\n\r\nWe have a lot of questions about `Ratis`, let me spend some time on it.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918777422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918779190","html_url":"https://github.com/apache/iotdb/pull/3916#issuecomment-918779190","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3916","id":918779190,"node_id":"IC_kwDOCXnElM42w3U2","user":{"login":"sonarqubecloud[bot]","id":39514782,"node_id":"MDM6Qm90Mzk1MTQ3ODI=","avatar_url":"https://avatars.githubusercontent.com/in/12526?v=4","gravatar_id":"","url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D","html_url":"https://github.com/apps/sonarqubecloud","followers_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/followers","following_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/repos","events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T04:01:57Z","updated_at":"2021-09-14T04:01:57Z","author_association":"NONE","body":"SonarCloud Quality Gate failed.&nbsp; &nbsp; ![Quality Gate failed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/failed-16px.png 'Quality Gate failed')\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3916&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3916&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3916&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3916&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3916&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3916&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3916&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3916&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3916&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3916&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3916&resolved=false&types=CODE_SMELL) [14 Code Smells](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3916&resolved=false&types=CODE_SMELL)\n\n[![66.3%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/60-16px.png '66.3%')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3916&metric=new_coverage&view=list) [66.3% Coverage](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3916&metric=new_coverage&view=list)  \n[![1.4%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3-16px.png '1.4%')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3916&metric=new_duplicated_lines_density&view=list) [1.4% Duplication](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3916&metric=new_duplicated_lines_density&view=list)\n\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918779190/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918793656","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-918793656","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":918793656,"node_id":"IC_kwDOCXnElM42w624","user":{"login":"OneSizeFitsQuorum","id":32640567,"node_id":"MDQ6VXNlcjMyNjQwNTY3","avatar_url":"https://avatars.githubusercontent.com/u/32640567?v=4","gravatar_id":"","url":"https://api.github.com/users/OneSizeFitsQuorum","html_url":"https://github.com/OneSizeFitsQuorum","followers_url":"https://api.github.com/users/OneSizeFitsQuorum/followers","following_url":"https://api.github.com/users/OneSizeFitsQuorum/following{/other_user}","gists_url":"https://api.github.com/users/OneSizeFitsQuorum/gists{/gist_id}","starred_url":"https://api.github.com/users/OneSizeFitsQuorum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OneSizeFitsQuorum/subscriptions","organizations_url":"https://api.github.com/users/OneSizeFitsQuorum/orgs","repos_url":"https://api.github.com/users/OneSizeFitsQuorum/repos","events_url":"https://api.github.com/users/OneSizeFitsQuorum/events{/privacy}","received_events_url":"https://api.github.com/users/OneSizeFitsQuorum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T04:34:59Z","updated_at":"2021-09-14T04:34:59Z","author_association":"CONTRIBUTOR","body":"> IMO, this depends on what kinds of properties IoTDB'd like to guarantee for user. If IoTDB says, I won't lost any data in any situation, then persist each log every time is required and relative performance lose should be acceptable. But if it's doesn't do such guarantee, then it's OK to do some optimization. Of course, we can make it configurable just like standalone WAL in IoTDB. As I didn't look into Ratis, I'm not sure if it makes this configurable.\r\n\r\nSeems can be [configurable](https://github.com/apache/ratis/blob/7a852736de1588bc645f86a92a1d6b4d37b21e2b/ratis-server-api/src/main/java/org/apache/ratis/server/RaftServerConfigKeys.java#L268). Anyway, Let's speed some time exploring  it.\r\n\r\n>I don't understand, on zhihu, it says \"proposal id\" is generated by client, and filter when do apply(often implemented by State Machine). So I think the retry logic is transparent for raft, the retry operation is new log for raft. Not sure my understanding is right or not.\r\n\r\nmaybe you could read my [doc](https://github.com/LebronAl/MIT6.824-2021/blob/master/docs/lab3.md) of MIT 6.824 lab3, which is slightly more understandable.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918793656/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918800046","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-918800046","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":918800046,"node_id":"IC_kwDOCXnElM42w8au","user":{"login":"OneSizeFitsQuorum","id":32640567,"node_id":"MDQ6VXNlcjMyNjQwNTY3","avatar_url":"https://avatars.githubusercontent.com/u/32640567?v=4","gravatar_id":"","url":"https://api.github.com/users/OneSizeFitsQuorum","html_url":"https://github.com/OneSizeFitsQuorum","followers_url":"https://api.github.com/users/OneSizeFitsQuorum/followers","following_url":"https://api.github.com/users/OneSizeFitsQuorum/following{/other_user}","gists_url":"https://api.github.com/users/OneSizeFitsQuorum/gists{/gist_id}","starred_url":"https://api.github.com/users/OneSizeFitsQuorum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OneSizeFitsQuorum/subscriptions","organizations_url":"https://api.github.com/users/OneSizeFitsQuorum/orgs","repos_url":"https://api.github.com/users/OneSizeFitsQuorum/repos","events_url":"https://api.github.com/users/OneSizeFitsQuorum/events{/privacy}","received_events_url":"https://api.github.com/users/OneSizeFitsQuorum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T04:52:43Z","updated_at":"2021-09-15T01:47:23Z","author_association":"CONTRIBUTOR","body":"To conclude, let's start by investigating Java implementations of some raft libraries, such as Ratis, Sofajraft, etc.\r\nIn the process of exploring, I have come up with five aspects that need to be paid attention to, and you can add more:\r\n1. How Raft libraries integrate with the state machine: is there a way like etcd to send committed logs back to the upper level for free processing (best so we can do our own optimizations including consistency model considerations)? Or just abstracting the apply interface and letting us override (which may not be very friendly).\r\n2. Can policies for Raft log persistence be configured: forceSync, batch sync, buffer, etc.\r\n3. Are some common Raft optimizations done: batching/ Pipeline /Async apply, which are very common and effective Raft optimizations.\r\n4. What was done to support multi-raft: was there any pooling done, etc.? This may be of great help in massive raft groups.\r\n5. Correctness: Is there a lot of UT/IT? Are there any TLA+ test/chaos test validation results? Whether there is a large number of production cases.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918800046/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918883143","html_url":"https://github.com/apache/iotdb/pull/3953#issuecomment-918883143","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3953","id":918883143,"node_id":"IC_kwDOCXnElM42xQtH","user":{"login":"HTHou","id":25913899,"node_id":"MDQ6VXNlcjI1OTEzODk5","avatar_url":"https://avatars.githubusercontent.com/u/25913899?v=4","gravatar_id":"","url":"https://api.github.com/users/HTHou","html_url":"https://github.com/HTHou","followers_url":"https://api.github.com/users/HTHou/followers","following_url":"https://api.github.com/users/HTHou/following{/other_user}","gists_url":"https://api.github.com/users/HTHou/gists{/gist_id}","starred_url":"https://api.github.com/users/HTHou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HTHou/subscriptions","organizations_url":"https://api.github.com/users/HTHou/orgs","repos_url":"https://api.github.com/users/HTHou/repos","events_url":"https://api.github.com/users/HTHou/events{/privacy}","received_events_url":"https://api.github.com/users/HTHou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T07:24:07Z","updated_at":"2021-09-14T07:24:07Z","author_association":"CONTRIBUTOR","body":"Please don't forget to submit a PR to master.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918883143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918897023","html_url":"https://github.com/apache/iotdb/issues/3945#issuecomment-918897023","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3945","id":918897023,"node_id":"IC_kwDOCXnElM42xUF_","user":{"login":"HTHou","id":25913899,"node_id":"MDQ6VXNlcjI1OTEzODk5","avatar_url":"https://avatars.githubusercontent.com/u/25913899?v=4","gravatar_id":"","url":"https://api.github.com/users/HTHou","html_url":"https://github.com/HTHou","followers_url":"https://api.github.com/users/HTHou/followers","following_url":"https://api.github.com/users/HTHou/following{/other_user}","gists_url":"https://api.github.com/users/HTHou/gists{/gist_id}","starred_url":"https://api.github.com/users/HTHou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HTHou/subscriptions","organizations_url":"https://api.github.com/users/HTHou/orgs","repos_url":"https://api.github.com/users/HTHou/repos","events_url":"https://api.github.com/users/HTHou/events{/privacy}","received_events_url":"https://api.github.com/users/HTHou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T07:44:05Z","updated_at":"2021-09-14T07:44:25Z","author_association":"CONTRIBUTOR","body":" @LIU-WEI-git The latest rel/0.12 branch fixed this issue. You can try it now.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918897023/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918979553","html_url":"https://github.com/apache/iotdb/pull/3958#issuecomment-918979553","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3958","id":918979553,"node_id":"IC_kwDOCXnElM42xoPh","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T09:29:02Z","updated_at":"2021-09-14T09:29:02Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42854122/badge)](https://coveralls.io/builds/42854122)\n\nCoverage increased (+0.02%) to 67.411% when pulling **6b545182cb339d59a93f1eb5722373756a93b4ae on ijihang:supportDevices** into **511cb00e948a3dfa9d435daf8ffa4ba9a5d9317f on apache:master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/918979553/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919060141","html_url":"https://github.com/apache/iotdb/issues/3945#issuecomment-919060141","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3945","id":919060141,"node_id":"IC_kwDOCXnElM42x76t","user":{"login":"LIU-WEI-git","id":51618159,"node_id":"MDQ6VXNlcjUxNjE4MTU5","avatar_url":"https://avatars.githubusercontent.com/u/51618159?v=4","gravatar_id":"","url":"https://api.github.com/users/LIU-WEI-git","html_url":"https://github.com/LIU-WEI-git","followers_url":"https://api.github.com/users/LIU-WEI-git/followers","following_url":"https://api.github.com/users/LIU-WEI-git/following{/other_user}","gists_url":"https://api.github.com/users/LIU-WEI-git/gists{/gist_id}","starred_url":"https://api.github.com/users/LIU-WEI-git/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LIU-WEI-git/subscriptions","organizations_url":"https://api.github.com/users/LIU-WEI-git/orgs","repos_url":"https://api.github.com/users/LIU-WEI-git/repos","events_url":"https://api.github.com/users/LIU-WEI-git/events{/privacy}","received_events_url":"https://api.github.com/users/LIU-WEI-git/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T11:24:59Z","updated_at":"2021-09-14T11:24:59Z","author_association":"CONTRIBUTOR","body":"wow~, thanks a lot. : )","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919060141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919080395","html_url":"https://github.com/apache/iotdb/pull/3959#issuecomment-919080395","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3959","id":919080395,"node_id":"IC_kwDOCXnElM42yA3L","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T11:56:58Z","updated_at":"2021-10-06T17:11:41Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/43317659/badge)](https://coveralls.io/builds/43317659)\n\nCoverage increased (+0.2%) to 67.777% when pulling **32a899a0151d6e5564534b0ee0daf8d630e05438 on jun0315:influxdb-connect** into **96b5269f0fc6e02927563d4481da3bfb310fc7b1 on apache:master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919080395/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919096327","html_url":"https://github.com/apache/iotdb/pull/3960#issuecomment-919096327","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3960","id":919096327,"node_id":"IC_kwDOCXnElM42yEwH","user":{"login":"HTHou","id":25913899,"node_id":"MDQ6VXNlcjI1OTEzODk5","avatar_url":"https://avatars.githubusercontent.com/u/25913899?v=4","gravatar_id":"","url":"https://api.github.com/users/HTHou","html_url":"https://github.com/HTHou","followers_url":"https://api.github.com/users/HTHou/followers","following_url":"https://api.github.com/users/HTHou/following{/other_user}","gists_url":"https://api.github.com/users/HTHou/gists{/gist_id}","starred_url":"https://api.github.com/users/HTHou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HTHou/subscriptions","organizations_url":"https://api.github.com/users/HTHou/orgs","repos_url":"https://api.github.com/users/HTHou/repos","events_url":"https://api.github.com/users/HTHou/events{/privacy}","received_events_url":"https://api.github.com/users/HTHou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T12:19:47Z","updated_at":"2021-09-14T12:19:47Z","author_association":"CONTRIBUTOR","body":"Hi, could you please cherry pick this pr to rel/0.12? \r\nThanks!","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919096327/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919125244","html_url":"https://github.com/apache/iotdb/pull/3960#issuecomment-919125244","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3960","id":919125244,"node_id":"IC_kwDOCXnElM42yLz8","user":{"login":"jamber001","id":29083697,"node_id":"MDQ6VXNlcjI5MDgzNjk3","avatar_url":"https://avatars.githubusercontent.com/u/29083697?v=4","gravatar_id":"","url":"https://api.github.com/users/jamber001","html_url":"https://github.com/jamber001","followers_url":"https://api.github.com/users/jamber001/followers","following_url":"https://api.github.com/users/jamber001/following{/other_user}","gists_url":"https://api.github.com/users/jamber001/gists{/gist_id}","starred_url":"https://api.github.com/users/jamber001/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamber001/subscriptions","organizations_url":"https://api.github.com/users/jamber001/orgs","repos_url":"https://api.github.com/users/jamber001/repos","events_url":"https://api.github.com/users/jamber001/events{/privacy}","received_events_url":"https://api.github.com/users/jamber001/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T12:59:03Z","updated_at":"2021-09-14T12:59:03Z","author_association":"CONTRIBUTOR","body":"> Hi, could you please cherry pick this pr to rel/0.12?\r\n> Thanks!\r\n\r\nYeah, I have just created 1 new PR to rel/0.12 for same bug ","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919125244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919146844","html_url":"https://github.com/apache/iotdb/pull/3961#issuecomment-919146844","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3961","id":919146844,"node_id":"IC_kwDOCXnElM42yRFc","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T13:22:39Z","updated_at":"2021-09-14T13:22:39Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42859845/badge)](https://coveralls.io/builds/42859845)\n\nCoverage increased (+0.1%) to 67.492% when pulling **2e911c8a3c1f98a57c4e8c7207dc0bf364128183 on jamber001:IOTDB-1677** into **184fd6fc4176987bb8bdb1426644f00d126f0ed6 on apache:master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919146844/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919159333","html_url":"https://github.com/apache/iotdb/pull/3962#issuecomment-919159333","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3962","id":919159333,"node_id":"IC_kwDOCXnElM42yUIl","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-14T13:37:32Z","updated_at":"2021-09-14T13:37:32Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42860285/badge)](https://coveralls.io/builds/42860285)\n\nCoverage decreased (-0.006%) to 67.369% when pulling **48a90222da400cd5bade008158f7f1e4fc8c1274 on jamber001:IOTDB-1678** into **184fd6fc4176987bb8bdb1426644f00d126f0ed6 on apache:master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919159333/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919636841","html_url":"https://github.com/apache/iotdb/pull/3960#issuecomment-919636841","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3960","id":919636841,"node_id":"IC_kwDOCXnElM420Itp","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T02:00:27Z","updated_at":"2021-09-15T02:00:27Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42878646/badge)](https://coveralls.io/builds/42878646)\n\nCoverage increased (+0.004%) to 67.379% when pulling **b419e963b8c46f871c3a38397a6ef3baa294c36b on jamber001:IOTDB-1289** into **184fd6fc4176987bb8bdb1426644f00d126f0ed6 on apache:master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919636841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919642493","html_url":"https://github.com/apache/iotdb/pull/3961#issuecomment-919642493","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3961","id":919642493,"node_id":"IC_kwDOCXnElM420KF9","user":{"login":"jamber001","id":29083697,"node_id":"MDQ6VXNlcjI5MDgzNjk3","avatar_url":"https://avatars.githubusercontent.com/u/29083697?v=4","gravatar_id":"","url":"https://api.github.com/users/jamber001","html_url":"https://github.com/jamber001","followers_url":"https://api.github.com/users/jamber001/followers","following_url":"https://api.github.com/users/jamber001/following{/other_user}","gists_url":"https://api.github.com/users/jamber001/gists{/gist_id}","starred_url":"https://api.github.com/users/jamber001/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamber001/subscriptions","organizations_url":"https://api.github.com/users/jamber001/orgs","repos_url":"https://api.github.com/users/jamber001/repos","events_url":"https://api.github.com/users/jamber001/events{/privacy}","received_events_url":"https://api.github.com/users/jamber001/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T02:13:15Z","updated_at":"2021-09-15T02:13:15Z","author_association":"CONTRIBUTOR","body":"> LGTM\r\n> I think this PR also needs to be cherry pick to rel/0.12 :>\r\n\r\nNo problem.  I will do it at once.   ^-^","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919642493/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919646003","html_url":"https://github.com/apache/iotdb/pull/3961#issuecomment-919646003","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3961","id":919646003,"node_id":"IC_kwDOCXnElM420K8z","user":{"login":"jamber001","id":29083697,"node_id":"MDQ6VXNlcjI5MDgzNjk3","avatar_url":"https://avatars.githubusercontent.com/u/29083697?v=4","gravatar_id":"","url":"https://api.github.com/users/jamber001","html_url":"https://github.com/jamber001","followers_url":"https://api.github.com/users/jamber001/followers","following_url":"https://api.github.com/users/jamber001/following{/other_user}","gists_url":"https://api.github.com/users/jamber001/gists{/gist_id}","starred_url":"https://api.github.com/users/jamber001/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamber001/subscriptions","organizations_url":"https://api.github.com/users/jamber001/orgs","repos_url":"https://api.github.com/users/jamber001/repos","events_url":"https://api.github.com/users/jamber001/events{/privacy}","received_events_url":"https://api.github.com/users/jamber001/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T02:21:47Z","updated_at":"2021-09-15T02:21:47Z","author_association":"CONTRIBUTOR","body":"> LGTM\r\n> I think this PR also needs to be cherry pick to rel/0.12 :>\r\n\r\nI have just submit 1 PR for rel/0.12","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919646003/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919646300","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-919646300","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":919646300,"node_id":"IC_kwDOCXnElM420LBc","user":{"login":"jt2594838","id":23610645,"node_id":"MDQ6VXNlcjIzNjEwNjQ1","avatar_url":"https://avatars.githubusercontent.com/u/23610645?v=4","gravatar_id":"","url":"https://api.github.com/users/jt2594838","html_url":"https://github.com/jt2594838","followers_url":"https://api.github.com/users/jt2594838/followers","following_url":"https://api.github.com/users/jt2594838/following{/other_user}","gists_url":"https://api.github.com/users/jt2594838/gists{/gist_id}","starred_url":"https://api.github.com/users/jt2594838/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jt2594838/subscriptions","organizations_url":"https://api.github.com/users/jt2594838/orgs","repos_url":"https://api.github.com/users/jt2594838/repos","events_url":"https://api.github.com/users/jt2594838/events{/privacy}","received_events_url":"https://api.github.com/users/jt2594838/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T02:22:38Z","updated_at":"2021-09-15T02:25:04Z","author_association":"CONTRIBUTOR","body":"Linearizability consists of two aspects: consensus and query implementation, we may have spent some efforts on consensus, but little on query implementation, and you should not blame one for another. Meanwhile, queries in IoTDB may be very different from those in systems like etcd, and the concern of query implementation could be also different.\r\n\r\nRelying on another library for core functionalities is risky. Other projects keep bug fixing and refactoring too, it is hard to say if we can catch up with them after some time point. And it would become very difficult to implement any improvements on it, which may eventually make IoTDB lack of competitiveness, as the most important advantage of current IoTDB lies on its superior performance, we would completely lose control if the consensus part becomes a bottleneck. Ans should any major bug occur, we will have to wait another team to fix it, because fixing it ourselves will create forks.\r\n\r\nAlso from my personal point of view, I would not hope IoTDB to just become an integration of libraries, without owning its core techniques, which will make us easily overtaken by those who are more willing to challenge.\r\n\r\nAbove all, most importantly, before you turn to another method, you should answer the following questions:\r\n1. What is the problem of the current method, do I have any proof?\r\n2. Is the new method really better than the current one, how do I show it?\r\n3. Is switching to the new method a better choice than improving the current one, is it really that easy?\r\nBeing doubtful is good, but solid evidence is more convincing.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919646300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919661235","html_url":"https://github.com/apache/iotdb/pull/3965#issuecomment-919661235","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3965","id":919661235,"node_id":"IC_kwDOCXnElM420Oqz","user":{"login":"jamber001","id":29083697,"node_id":"MDQ6VXNlcjI5MDgzNjk3","avatar_url":"https://avatars.githubusercontent.com/u/29083697?v=4","gravatar_id":"","url":"https://api.github.com/users/jamber001","html_url":"https://github.com/jamber001","followers_url":"https://api.github.com/users/jamber001/followers","following_url":"https://api.github.com/users/jamber001/following{/other_user}","gists_url":"https://api.github.com/users/jamber001/gists{/gist_id}","starred_url":"https://api.github.com/users/jamber001/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamber001/subscriptions","organizations_url":"https://api.github.com/users/jamber001/orgs","repos_url":"https://api.github.com/users/jamber001/repos","events_url":"https://api.github.com/users/jamber001/events{/privacy}","received_events_url":"https://api.github.com/users/jamber001/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T03:05:17Z","updated_at":"2021-09-15T03:07:09Z","author_association":"CONTRIBUTOR","body":"> Hi, you are committing into master branch actually...\r\n\r\nsorry, I have just corrected it to rel/0.12","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919661235/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919667790","html_url":"https://github.com/apache/iotdb/pull/3964#issuecomment-919667790","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3964","id":919667790,"node_id":"IC_kwDOCXnElM420QRO","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T03:22:29Z","updated_at":"2021-09-15T03:22:29Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42879593/badge)](https://coveralls.io/builds/42879593)\n\nCoverage increased (+0.1%) to 67.504% when pulling **f5269ab7da618ab05628f4e9db4b323ac352a40e on jamber001:IOTDB-1679** into **184fd6fc4176987bb8bdb1426644f00d126f0ed6 on apache:master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919667790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919672990","html_url":"https://github.com/apache/iotdb/pull/3965#issuecomment-919672990","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3965","id":919672990,"node_id":"IC_kwDOCXnElM420Rie","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T03:38:44Z","updated_at":"2021-09-15T03:38:44Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42879725/badge)](https://coveralls.io/builds/42879725)\n\nCoverage increased (+0.1%) to 67.49% when pulling **ea8ada2ab921d9dfb71ffc180130436f8e476375 on jamber001:IOTDB-1677_0.12** into **0e1eddee7aea70af099f763273d1ab45d1151c09 on apache:master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919672990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919674597","html_url":"https://github.com/apache/iotdb/pull/3965#issuecomment-919674597","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3965","id":919674597,"node_id":"IC_kwDOCXnElM420R7l","user":{"login":"HTHou","id":25913899,"node_id":"MDQ6VXNlcjI1OTEzODk5","avatar_url":"https://avatars.githubusercontent.com/u/25913899?v=4","gravatar_id":"","url":"https://api.github.com/users/HTHou","html_url":"https://github.com/HTHou","followers_url":"https://api.github.com/users/HTHou/followers","following_url":"https://api.github.com/users/HTHou/following{/other_user}","gists_url":"https://api.github.com/users/HTHou/gists{/gist_id}","starred_url":"https://api.github.com/users/HTHou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HTHou/subscriptions","organizations_url":"https://api.github.com/users/HTHou/orgs","repos_url":"https://api.github.com/users/HTHou/repos","events_url":"https://api.github.com/users/HTHou/events{/privacy}","received_events_url":"https://api.github.com/users/HTHou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T03:44:11Z","updated_at":"2021-09-15T03:44:11Z","author_association":"CONTRIBUTOR","body":"> > Hi, you are committing into master branch actually...\r\n> \r\n> sorry, I have just corrected it to rel/0.12\r\n\r\nEh, rebase needed...","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919674597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919762163","html_url":"https://github.com/apache/iotdb/pull/3965#issuecomment-919762163","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3965","id":919762163,"node_id":"IC_kwDOCXnElM420nTz","user":{"login":"jamber001","id":29083697,"node_id":"MDQ6VXNlcjI5MDgzNjk3","avatar_url":"https://avatars.githubusercontent.com/u/29083697?v=4","gravatar_id":"","url":"https://api.github.com/users/jamber001","html_url":"https://github.com/jamber001","followers_url":"https://api.github.com/users/jamber001/followers","following_url":"https://api.github.com/users/jamber001/following{/other_user}","gists_url":"https://api.github.com/users/jamber001/gists{/gist_id}","starred_url":"https://api.github.com/users/jamber001/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamber001/subscriptions","organizations_url":"https://api.github.com/users/jamber001/orgs","repos_url":"https://api.github.com/users/jamber001/repos","events_url":"https://api.github.com/users/jamber001/events{/privacy}","received_events_url":"https://api.github.com/users/jamber001/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T07:15:16Z","updated_at":"2021-09-15T07:15:16Z","author_association":"CONTRIBUTOR","body":"> > > Hi, you are committing into master branch actually...\r\n> > \r\n> > \r\n> > sorry, I have just corrected it to rel/0.12\r\n> \r\n> Eh, rebase needed...\r\n\r\nen, I created 1 PR and will close this PR. ","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919762163/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919788803","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-919788803","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":919788803,"node_id":"IC_kwDOCXnElM420t0D","user":{"login":"chengjianyun","id":6150814,"node_id":"MDQ6VXNlcjYxNTA4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6150814?v=4","gravatar_id":"","url":"https://api.github.com/users/chengjianyun","html_url":"https://github.com/chengjianyun","followers_url":"https://api.github.com/users/chengjianyun/followers","following_url":"https://api.github.com/users/chengjianyun/following{/other_user}","gists_url":"https://api.github.com/users/chengjianyun/gists{/gist_id}","starred_url":"https://api.github.com/users/chengjianyun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengjianyun/subscriptions","organizations_url":"https://api.github.com/users/chengjianyun/orgs","repos_url":"https://api.github.com/users/chengjianyun/repos","events_url":"https://api.github.com/users/chengjianyun/events{/privacy}","received_events_url":"https://api.github.com/users/chengjianyun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T07:57:42Z","updated_at":"2021-09-15T07:58:51Z","author_association":"CONTRIBUTOR","body":"> Linearizability consists of two aspects: consensus and query implementation, we may have spent some efforts on consensus, but little on query implementation, and you should not blame one for another. Meanwhile, queries in IoTDB may be very different from those in systems like etcd, and the concern of query implementation could be also different.\r\n\r\nCan't agree more.\r\n\r\n> Relying on another library for core functionalities is risky. Other projects keep bug fixing and refactoring too, it is hard to say if we can catch up with them after some time point. And it would become very difficult to implement any improvements on it, which may eventually make IoTDB lack of competitiveness, as the most important advantage of current IoTDB lies on its superior performance, we would completely lose control if the consensus part becomes a bottleneck. Ans should any major bug occur, we will have to wait another team to fix it, because fixing it ourselves will create forks.\r\n\r\nThe raft libraries often only provides the ability of consensus on Raft log, it doesn't affect business logic much and doesn't force everything is linearization. With proper 3rd party library, we could have enough flexibility to optimize and improvement performance. The production 3rd party libraries should have been verified by some great productions so that we can believe no major bugs happen.\r\n\r\n> Also from my personal point of view, I would not hope IoTDB to just become an integration of libraries, without owning its core techniques, which will make us easily overtaken by those who are more willing to challenge.\r\n> \r\n> Above all, most importantly, before you turn to another method, you should answer the following questions:\r\n> \r\n> 1. What is the problem of the current method, do I have any proof?\r\n\r\nUpdated in description of the issue.\r\n> 2. Is the new method really better than the current one, how do I show it?\r\n\r\nFrom view of availability, maintainability and code structure, I think yes, the new method would be better than current one. For performance, I'm not sure as it needs experiment. But I think performance lose will be small or no performance lose. Because current implementation of Raft doesn't apply most of optimizations which has been made in other system such as async append, async apply, etc.\r\n> 3. Is switching to the new method a better choice than improving the current one, is it really that easy?\r\n\r\nThe safety properties is too agile to guarantee without enough tests for Raft. Building up a systematic test cases is really hard and looks is impossible under currently implementation(Raft and Business logic mix together). Of course, integrate the new library means we may change current structure, the effort can be evaluated after investigation. \r\n>    Being doubtful is good, but solid evidence is more convincing.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919788803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919809646","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-919809646","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":919809646,"node_id":"IC_kwDOCXnElM420y5u","user":{"login":"jt2594838","id":23610645,"node_id":"MDQ6VXNlcjIzNjEwNjQ1","avatar_url":"https://avatars.githubusercontent.com/u/23610645?v=4","gravatar_id":"","url":"https://api.github.com/users/jt2594838","html_url":"https://github.com/jt2594838","followers_url":"https://api.github.com/users/jt2594838/followers","following_url":"https://api.github.com/users/jt2594838/following{/other_user}","gists_url":"https://api.github.com/users/jt2594838/gists{/gist_id}","starred_url":"https://api.github.com/users/jt2594838/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jt2594838/subscriptions","organizations_url":"https://api.github.com/users/jt2594838/orgs","repos_url":"https://api.github.com/users/jt2594838/repos","events_url":"https://api.github.com/users/jt2594838/events{/privacy}","received_events_url":"https://api.github.com/users/jt2594838/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T08:26:50Z","updated_at":"2021-09-15T08:26:50Z","author_association":"CONTRIBUTOR","body":"No bug for now does not mean no bug forever. And different situations and applications expose different problems. The important thing is building our own verification instead of trusting others just because they have tested on their own cases.\r\n\r\nI am more than sure that we will have to face some bugs whatever we use, and if just several bugs would make you lose your heart, I think it is probably not likely you will build any confidence in your own creation, and you may never get near the core of some technologies. \r\n\r\nI am not sure about what you mean by async append, but we have async apply. And we are very serious about performance problems as performance is one of the few advantages of IoTDB and why we would want to build our own consensus. Otherwise, why do you think we would bother so much. We want to continue this advantage instead of handing it out to others.\r\n\r\nI do not understand why you insist that Raft logic is mixed with business logic, as far as I know, only the implementations of partition table and applier concern how stand-alone IoTDB works, and they are already made interface. Most parts of the cluster module can work without any interference with the standalone part, and can also be tested as any raft implementation.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919809646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919834944","html_url":"https://github.com/apache/iotdb/pull/1869#issuecomment-919834944","issue_url":"https://api.github.com/repos/apache/iotdb/issues/1869","id":919834944,"node_id":"IC_kwDOCXnElM4205FA","user":{"login":"HTHou","id":25913899,"node_id":"MDQ6VXNlcjI1OTEzODk5","avatar_url":"https://avatars.githubusercontent.com/u/25913899?v=4","gravatar_id":"","url":"https://api.github.com/users/HTHou","html_url":"https://github.com/HTHou","followers_url":"https://api.github.com/users/HTHou/followers","following_url":"https://api.github.com/users/HTHou/following{/other_user}","gists_url":"https://api.github.com/users/HTHou/gists{/gist_id}","starred_url":"https://api.github.com/users/HTHou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HTHou/subscriptions","organizations_url":"https://api.github.com/users/HTHou/orgs","repos_url":"https://api.github.com/users/HTHou/repos","events_url":"https://api.github.com/users/HTHou/events{/privacy}","received_events_url":"https://api.github.com/users/HTHou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T09:02:00Z","updated_at":"2021-09-15T09:02:00Z","author_association":"CONTRIBUTOR","body":"The conflicts fixed. The PR looks better now!","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919834944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919840715","html_url":"https://github.com/apache/iotdb/pull/1869#issuecomment-919840715","issue_url":"https://api.github.com/repos/apache/iotdb/issues/1869","id":919840715,"node_id":"IC_kwDOCXnElM4206fL","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T09:09:06Z","updated_at":"2021-09-15T14:23:03Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42894246/badge)](https://coveralls.io/builds/42894246)\n\nCoverage increased (+0.2%) to 67.526% when pulling **faa869958811219dfffa3675a6de2ae1dca10e1e on improve_wal** into **255bc619e650b3123989138e00ff6e985c8287df on master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919840715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919876433","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-919876433","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":919876433,"node_id":"IC_kwDOCXnElM421DNR","user":{"login":"chengjianyun","id":6150814,"node_id":"MDQ6VXNlcjYxNTA4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6150814?v=4","gravatar_id":"","url":"https://api.github.com/users/chengjianyun","html_url":"https://github.com/chengjianyun","followers_url":"https://api.github.com/users/chengjianyun/followers","following_url":"https://api.github.com/users/chengjianyun/following{/other_user}","gists_url":"https://api.github.com/users/chengjianyun/gists{/gist_id}","starred_url":"https://api.github.com/users/chengjianyun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengjianyun/subscriptions","organizations_url":"https://api.github.com/users/chengjianyun/orgs","repos_url":"https://api.github.com/users/chengjianyun/repos","events_url":"https://api.github.com/users/chengjianyun/events{/privacy}","received_events_url":"https://api.github.com/users/chengjianyun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T09:58:37Z","updated_at":"2021-09-15T09:58:37Z","author_association":"CONTRIBUTOR","body":"> No bug for now does not mean no bug forever. And different situations and applications expose different problems. The important thing is building our own verification instead of trusting others just because they have tested on their own cases.\r\n> \r\n> I am more than sure that we will have to face some bugs whatever we use, and if just several bugs would make you lose your heart, I think it is probably not likely you will build any confidence in your own creation, and you may never get near the core of some technologies.\r\n\r\nI think the discussion out of the scope, let's narrow down the scope to the topic. IMO, IoTDB is a production, when we deliver the production to user, we need to tell user how good/bad are we. It's nothing to do with technologies or confidence. Many production are based on others implementation such as TiKV depends on RocksDB which opensourced by Facebook. Raft library is only a tool, import it could reduce unnecessary works and provide a relative high confidence module to sync data to different node.\r\n\r\n> I am not sure about what you mean by async append, but we have async apply. And we are very serious about performance problems as performance is one of the few advantages of IoTDB and why we would want to build our own consensus. Otherwise, why do you think we would bother so much. We want to continue this advantage instead of handing it out to others.\r\n\r\nAgree that the performance is one of the advantages. But even the fastest vehicle should be safe in my understanding. Do you agree this?\r\n\r\n`Async append` means leader can append log locally and broadcast log parallelly. \r\n\r\nFor `async apply`, not sure my understanding is right or not, but according code, I think it's sync in current IoTDB implemenation. The `appendEntries` acquires lock of `logManager` until get response which means apply complete. And `applyEntries` in RaftLogManager is also a sync operation. Correct me if my understanding is wrong.\r\n\r\n```\r\nappendEntries in RaftManager:\r\nprivate long appendEntries(long prevLogIndex, long prevLogTerm, long leaderCommit, List<Log> logs) {\r\n// ... ignore lines\r\n    synchronized (logManager) {\r\n      long startTime = Timer.Statistic.RAFT_RECEIVER_APPEND_ENTRY.getOperationStartTime();\r\n      resp = logManager.maybeAppend(prevLogIndex, prevLogTerm, leaderCommit, logs);\r\n      Timer.Statistic.RAFT_RECEIVER_APPEND_ENTRY.calOperationCostTimeFromStart(startTime);\r\n      if (resp != -1) {\r\n        if (logger.isDebugEnabled()) {\r\n          logger.debug(\"{} append a new log list {}, commit to {}\", name, logs, leaderCommit);\r\n        }\r\n        resp = Response.RESPONSE_AGREE;\r\n      } else {\r\n        // the incoming log points to an illegal position, reject it\r\n        resp = Response.RESPONSE_LOG_MISMATCH;\r\n      }\r\n    }\r\n    return resp;\r\n  }\r\n\r\n// applyEntries in RaftLogManager\r\n  void applyEntries(List<Log> entries) {\r\n    for (Log entry : entries) {\r\n      applyEntry(entry);\r\n    }\r\n  }\r\n\r\n  public void applyEntry(Log entry) {\r\n    // For add/remove logs in data groups, this log will be applied immediately when it is\r\n    // appended to the raft log.\r\n    // In this case, it will apply a log that has been applied.\r\n    if (entry.isApplied()) {\r\n      return;\r\n    }\r\n    if (blockAppliedCommitIndex > 0 && entry.getCurrLogIndex() > blockAppliedCommitIndex) {\r\n      blockedUnappliedLogList.add(entry);\r\n      return;\r\n    }\r\n    try {\r\n      logApplier.apply(entry);\r\n    } catch (Exception e) {\r\n      entry.setException(e);\r\n      entry.setApplied(true);\r\n    }\r\n  }\r\n```\r\n\r\n> I do not understand why you insist that Raft logic is mixed with business logic, as far as I know, only the implementations of partition table and applier concern how stand-alone IoTDB works, and they are already made interface. Most parts of the cluster module can work without any interference with the standalone part, and can also be tested as any raft implementation.\r\n\r\nI think we could have a much clear interface definitions and responsibility boundary if we can refine the abstract of Raft implementation. E.g. `DataGroupMember` and `MetaGroupMember` are extend from `RaftMember`, but `RaftMember` mainly handles Raft related logic such as appendEntry. But `DataGroupMember` and `MetaGroupMember` are handlers of application logic such as query or non-query plans.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919876433/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919973928","html_url":"https://github.com/apache/iotdb/issues/3969#issuecomment-919973928","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3969","id":919973928,"node_id":"IC_kwDOCXnElM421bAo","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T12:26:48Z","updated_at":"2021-09-15T12:26:48Z","author_association":"NONE","body":"Hi, this is your first issue in IoTDB project. Thanks for your report. Welcome to join the community!","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/919973928/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920065044","html_url":"https://github.com/apache/iotdb/pull/1869#issuecomment-920065044","issue_url":"https://api.github.com/repos/apache/iotdb/issues/1869","id":920065044,"node_id":"IC_kwDOCXnElM421xQU","user":{"login":"sonarqubecloud[bot]","id":39514782,"node_id":"MDM6Qm90Mzk1MTQ3ODI=","avatar_url":"https://avatars.githubusercontent.com/in/12526?v=4","gravatar_id":"","url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D","html_url":"https://github.com/apps/sonarqubecloud","followers_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/followers","following_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/repos","events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T14:21:57Z","updated_at":"2021-09-15T14:21:57Z","author_association":"NONE","body":"SonarCloud Quality Gate failed.&nbsp; &nbsp; ![Quality Gate failed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/failed-16px.png 'Quality Gate failed')\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=1869&resolved=false&types=BUG) [![B](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/B-16px.png 'B')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=1869&resolved=false&types=BUG) [1 Bug](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=1869&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=1869&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=1869&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=1869&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=1869&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=1869&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=1869&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=1869&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=1869&resolved=false&types=CODE_SMELL) [33 Code Smells](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=1869&resolved=false&types=CODE_SMELL)\n\n[![46.3%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/40-16px.png '46.3%')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=1869&metric=new_coverage&view=list) [46.3% Coverage](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=1869&metric=new_coverage&view=list)  \n[![2.8%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3-16px.png '2.8%')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=1869&metric=new_duplicated_lines_density&view=list) [2.8% Duplication](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=1869&metric=new_duplicated_lines_density&view=list)\n\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920065044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920068372","html_url":"https://github.com/apache/iotdb/pull/3970#issuecomment-920068372","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3970","id":920068372,"node_id":"IC_kwDOCXnElM421yEU","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T14:25:41Z","updated_at":"2021-09-15T14:59:48Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42895238/badge)](https://coveralls.io/builds/42895238)\n\nCoverage decreased (-0.003%) to 67.38% when pulling **0f50e1d0918c832339360497050dba2894e7dc1d on VectorTest** into **45b3d6f8e3dc818cad15e9251897f45782aacec0 on master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920068372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920086253","html_url":"https://github.com/apache/iotdb/pull/3971#issuecomment-920086253","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3971","id":920086253,"node_id":"IC_kwDOCXnElM4212bt","user":{"login":"HTHou","id":25913899,"node_id":"MDQ6VXNlcjI1OTEzODk5","avatar_url":"https://avatars.githubusercontent.com/u/25913899?v=4","gravatar_id":"","url":"https://api.github.com/users/HTHou","html_url":"https://github.com/HTHou","followers_url":"https://api.github.com/users/HTHou/followers","following_url":"https://api.github.com/users/HTHou/following{/other_user}","gists_url":"https://api.github.com/users/HTHou/gists{/gist_id}","starred_url":"https://api.github.com/users/HTHou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HTHou/subscriptions","organizations_url":"https://api.github.com/users/HTHou/orgs","repos_url":"https://api.github.com/users/HTHou/repos","events_url":"https://api.github.com/users/HTHou/events{/privacy}","received_events_url":"https://api.github.com/users/HTHou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T14:45:39Z","updated_at":"2021-09-15T14:45:39Z","author_association":"CONTRIBUTOR","body":"@zyk990424 Can you plz take a look?","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920086253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920108421","html_url":"https://github.com/apache/iotdb/pull/3971#issuecomment-920108421","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3971","id":920108421,"node_id":"IC_kwDOCXnElM42172F","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-15T15:10:20Z","updated_at":"2021-09-15T16:00:35Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42897348/badge)](https://coveralls.io/builds/42897348)\n\nCoverage decreased (-0.02%) to 67.36% when pulling **decc8edc88c7b613201f83bad048f6ae842872c5 on jun0315:fix_align_by_device_type_cast_error** into **45b3d6f8e3dc818cad15e9251897f45782aacec0 on apache:master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920108421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920506683","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-920506683","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":920506683,"node_id":"IC_kwDOCXnElM423dE7","user":{"login":"OneSizeFitsQuorum","id":32640567,"node_id":"MDQ6VXNlcjMyNjQwNTY3","avatar_url":"https://avatars.githubusercontent.com/u/32640567?v=4","gravatar_id":"","url":"https://api.github.com/users/OneSizeFitsQuorum","html_url":"https://github.com/OneSizeFitsQuorum","followers_url":"https://api.github.com/users/OneSizeFitsQuorum/followers","following_url":"https://api.github.com/users/OneSizeFitsQuorum/following{/other_user}","gists_url":"https://api.github.com/users/OneSizeFitsQuorum/gists{/gist_id}","starred_url":"https://api.github.com/users/OneSizeFitsQuorum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OneSizeFitsQuorum/subscriptions","organizations_url":"https://api.github.com/users/OneSizeFitsQuorum/orgs","repos_url":"https://api.github.com/users/OneSizeFitsQuorum/repos","events_url":"https://api.github.com/users/OneSizeFitsQuorum/events{/privacy}","received_events_url":"https://api.github.com/users/OneSizeFitsQuorum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T01:34:15Z","updated_at":"2021-09-16T01:34:15Z","author_association":"CONTRIBUTOR","body":" > And applyEntries in RaftLogManager is also a sync operation. Correct me if my understanding is wrong.\r\n\r\nYou will see an `AsyncDataLogApplier` if you go further. And we did a lot more rather than just `async apply`. And I call it `Parallel async apply` before, which means data from different storage groups can be applied in parallel. You can check the code again.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920506683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920515517","html_url":"https://github.com/apache/iotdb/pull/3973#issuecomment-920515517","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3973","id":920515517,"node_id":"IC_kwDOCXnElM423fO9","user":{"login":"sonarqubecloud[bot]","id":39514782,"node_id":"MDM6Qm90Mzk1MTQ3ODI=","avatar_url":"https://avatars.githubusercontent.com/in/12526?v=4","gravatar_id":"","url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D","html_url":"https://github.com/apps/sonarqubecloud","followers_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/followers","following_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/repos","events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T02:00:09Z","updated_at":"2021-09-16T02:00:09Z","author_association":"NONE","body":"Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; ![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3973&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3973&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3973&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3973&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3973&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3973&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3973&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3973&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3973&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3973&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3973&resolved=false&types=CODE_SMELL) [19 Code Smells](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3973&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3973&metric=coverage&view=list) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3973&metric=duplicated_lines_density&view=list) No Duplication information\n\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920515517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920522689","html_url":"https://github.com/apache/iotdb/pull/3939#issuecomment-920522689","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3939","id":920522689,"node_id":"IC_kwDOCXnElM423g_B","user":{"login":"cigarl","id":44458757,"node_id":"MDQ6VXNlcjQ0NDU4NzU3","avatar_url":"https://avatars.githubusercontent.com/u/44458757?v=4","gravatar_id":"","url":"https://api.github.com/users/cigarl","html_url":"https://github.com/cigarl","followers_url":"https://api.github.com/users/cigarl/followers","following_url":"https://api.github.com/users/cigarl/following{/other_user}","gists_url":"https://api.github.com/users/cigarl/gists{/gist_id}","starred_url":"https://api.github.com/users/cigarl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cigarl/subscriptions","organizations_url":"https://api.github.com/users/cigarl/orgs","repos_url":"https://api.github.com/users/cigarl/repos","events_url":"https://api.github.com/users/cigarl/events{/privacy}","received_events_url":"https://api.github.com/users/cigarl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T02:19:29Z","updated_at":"2021-09-16T02:19:29Z","author_association":"CONTRIBUTOR","body":"> but we may also need a processor to avoid logIndex is too big, dunmmyIndex need to re-initialize if logIndex will be bigger than our expect.\r\n\r\nThis may not seem like a problem.I tried to calculate that it would handle 100 million requests per second and the cluster would run for 2924 years.\r\n\r\nSorry, I closed this PR due to my misoperation. I have reopened it.  ","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920522689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920523977","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-920523977","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":920523977,"node_id":"IC_kwDOCXnElM423hTJ","user":{"login":"jt2594838","id":23610645,"node_id":"MDQ6VXNlcjIzNjEwNjQ1","avatar_url":"https://avatars.githubusercontent.com/u/23610645?v=4","gravatar_id":"","url":"https://api.github.com/users/jt2594838","html_url":"https://github.com/jt2594838","followers_url":"https://api.github.com/users/jt2594838/followers","following_url":"https://api.github.com/users/jt2594838/following{/other_user}","gists_url":"https://api.github.com/users/jt2594838/gists{/gist_id}","starred_url":"https://api.github.com/users/jt2594838/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jt2594838/subscriptions","organizations_url":"https://api.github.com/users/jt2594838/orgs","repos_url":"https://api.github.com/users/jt2594838/repos","events_url":"https://api.github.com/users/jt2594838/events{/privacy}","received_events_url":"https://api.github.com/users/jt2594838/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T02:23:02Z","updated_at":"2021-09-16T02:23:02Z","author_association":"CONTRIBUTOR","body":"Most reliable safety is built on the top of deep knowledge of the techniques you use, not how others say it is safe. Sure a lib it is, but what are \"unnecessary works\"? Our initial purpose was to create a fully controllable cluster module that will not become a bottleneck in the future. Consensus may be the most important thing above all, and it deserves our primary efforts. It is not JUST a tool, it could be the foundation of the whole cluster module.\r\n\r\nOf course safety matters, but how can you assert we can not make it safe? Are we really less capable than those who have written those libs, especially we can integrate the experiences of all of them as they are all open-source. I think this is what open-source is all about: we learn from others instead of we copy from others. After all, open-source or not, you can still use compiled libs from others, while being open-source, you learn from them what are the good practices and bad practices so that you can improve your own.\r\n\r\nThe sync is used because the client wants a result so we must wait until the end of execution, if the result is not desired, the block can be easily removed to achieve a fully synchronized method.\r\n\r\nI am not sure what you mean by a more clear interface. `RaftMember` provides basic Raft implementation, based on it, `MetaGroupMember` forms a meta group to manage metadata, `DataGroupMember` forms data groups to manage data. Raft logic and business logic are obviously separated, and I think it is clear enough. Please specify your problems if any.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920523977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920527804","html_url":"https://github.com/apache/iotdb/pull/3975#issuecomment-920527804","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3975","id":920527804,"node_id":"IC_kwDOCXnElM423iO8","user":{"login":"sonarqubecloud[bot]","id":39514782,"node_id":"MDM6Qm90Mzk1MTQ3ODI=","avatar_url":"https://avatars.githubusercontent.com/in/12526?v=4","gravatar_id":"","url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D","html_url":"https://github.com/apps/sonarqubecloud","followers_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/followers","following_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/repos","events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T02:33:23Z","updated_at":"2021-09-16T02:33:23Z","author_association":"NONE","body":"SonarCloud Quality Gate failed.&nbsp; &nbsp; ![Quality Gate failed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/failed-16px.png 'Quality Gate failed')\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3975&resolved=false&types=BUG) [![B](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/B-16px.png 'B')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3975&resolved=false&types=BUG) [1 Bug](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3975&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3975&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3975&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3975&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3975&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3975&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3975&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3975&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3975&resolved=false&types=CODE_SMELL) [33 Code Smells](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3975&resolved=false&types=CODE_SMELL)\n\n[![46.3%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/40-16px.png '46.3%')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3975&metric=new_coverage&view=list) [46.3% Coverage](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3975&metric=new_coverage&view=list)  \n[![2.8%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3-16px.png '2.8%')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3975&metric=new_duplicated_lines_density&view=list) [2.8% Duplication](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3975&metric=new_duplicated_lines_density&view=list)\n\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920527804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920528186","html_url":"https://github.com/apache/iotdb/pull/3975#issuecomment-920528186","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3975","id":920528186,"node_id":"IC_kwDOCXnElM423iU6","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T02:34:24Z","updated_at":"2021-09-16T02:34:24Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42910912/badge)](https://coveralls.io/builds/42910912)\n\nCoverage remained the same at 67.479% when pulling **faa869958811219dfffa3675a6de2ae1dca10e1e on improve_wal** into **e5d86c9d1d5de1934c77d2ea4f97f8cd6d669bb8 on master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920528186/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920541823","html_url":"https://github.com/apache/iotdb/pull/3968#issuecomment-920541823","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3968","id":920541823,"node_id":"IC_kwDOCXnElM423lp_","user":{"login":"yschengzi","id":87161145,"node_id":"MDQ6VXNlcjg3MTYxMTQ1","avatar_url":"https://avatars.githubusercontent.com/u/87161145?v=4","gravatar_id":"","url":"https://api.github.com/users/yschengzi","html_url":"https://github.com/yschengzi","followers_url":"https://api.github.com/users/yschengzi/followers","following_url":"https://api.github.com/users/yschengzi/following{/other_user}","gists_url":"https://api.github.com/users/yschengzi/gists{/gist_id}","starred_url":"https://api.github.com/users/yschengzi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yschengzi/subscriptions","organizations_url":"https://api.github.com/users/yschengzi/orgs","repos_url":"https://api.github.com/users/yschengzi/repos","events_url":"https://api.github.com/users/yschengzi/events{/privacy}","received_events_url":"https://api.github.com/users/yschengzi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T03:13:03Z","updated_at":"2021-09-16T03:13:03Z","author_association":"CONTRIBUTOR","body":"> Cherry pick to master branch.\r\n\r\ngot it","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920541823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920542383","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-920542383","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":920542383,"node_id":"IC_kwDOCXnElM423lyv","user":{"login":"neuyilan","id":6237070,"node_id":"MDQ6VXNlcjYyMzcwNzA=","avatar_url":"https://avatars.githubusercontent.com/u/6237070?v=4","gravatar_id":"","url":"https://api.github.com/users/neuyilan","html_url":"https://github.com/neuyilan","followers_url":"https://api.github.com/users/neuyilan/followers","following_url":"https://api.github.com/users/neuyilan/following{/other_user}","gists_url":"https://api.github.com/users/neuyilan/gists{/gist_id}","starred_url":"https://api.github.com/users/neuyilan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuyilan/subscriptions","organizations_url":"https://api.github.com/users/neuyilan/orgs","repos_url":"https://api.github.com/users/neuyilan/repos","events_url":"https://api.github.com/users/neuyilan/events{/privacy}","received_events_url":"https://api.github.com/users/neuyilan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T03:14:38Z","updated_at":"2021-09-16T03:15:43Z","author_association":"MEMBER","body":"I think the current focus is on the following points:\r\n\r\n1. Can we implement a good and correct raft framework.\r\n\r\nThe answer must be **YES**, but **WHEN**? One year or two? With the development of other time-series databases, such as `influxdb_ iox`、`tdengine`、`matrixdb`. Their market share is increasing. As an industrial product, if they want to have their own competitiveness, they must have the characteristics of rapid iteration and stability. However, over the past year, there is no industrial version of cluster version of `IoTDB`. From this perspective, I prefer to build a usable and secure distributed `IoTDB` version first. No matter who uses the raft framework, and I think it is a faster way to integrate one that has been widely used in the industry than to implement it yourself.\r\n\r\n2. How good is the performance of the raft framework implemented by yourself?\r\nAs far as we know, the performance improvement of our cluster version is as follows:\r\n\r\n    2.1 async apply；\r\n    2.2 The query does not follow the raft, and the consistency of the query can be determined according to the configuration.\r\nBut as far as I know, the apply function of `Apache Ratis `framework can be decided by users. Moreover, the read request of Ratis does not follow the raft, so I don't think the performance will degrade much.\r\n\r\n3. What is a competitive product?\r\nA safe, stable and widely used product is a competitive product. If there are no available products for users, what about competitiveness?","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920542383/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920552587","html_url":"https://github.com/apache/iotdb/pull/3977#issuecomment-920552587","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3977","id":920552587,"node_id":"IC_kwDOCXnElM423oSL","user":{"login":"sonarqubecloud[bot]","id":39514782,"node_id":"MDM6Qm90Mzk1MTQ3ODI=","avatar_url":"https://avatars.githubusercontent.com/in/12526?v=4","gravatar_id":"","url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D","html_url":"https://github.com/apps/sonarqubecloud","followers_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/followers","following_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/repos","events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T03:46:29Z","updated_at":"2021-09-16T03:46:29Z","author_association":"NONE","body":"Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; ![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3977&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3977&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3977&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3977&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3977&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3977&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3977&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3977&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3977&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3977&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3977&resolved=false&types=CODE_SMELL) [4 Code Smells](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3977&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3977&metric=coverage&view=list) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3977&metric=duplicated_lines_density&view=list) No Duplication information\n\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920552587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920630744","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-920630744","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":920630744,"node_id":"IC_kwDOCXnElM4237XY","user":{"login":"jt2594838","id":23610645,"node_id":"MDQ6VXNlcjIzNjEwNjQ1","avatar_url":"https://avatars.githubusercontent.com/u/23610645?v=4","gravatar_id":"","url":"https://api.github.com/users/jt2594838","html_url":"https://github.com/jt2594838","followers_url":"https://api.github.com/users/jt2594838/followers","following_url":"https://api.github.com/users/jt2594838/following{/other_user}","gists_url":"https://api.github.com/users/jt2594838/gists{/gist_id}","starred_url":"https://api.github.com/users/jt2594838/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jt2594838/subscriptions","organizations_url":"https://api.github.com/users/jt2594838/orgs","repos_url":"https://api.github.com/users/jt2594838/repos","events_url":"https://api.github.com/users/jt2594838/events{/privacy}","received_events_url":"https://api.github.com/users/jt2594838/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T06:59:37Z","updated_at":"2021-09-16T06:59:37Z","author_association":"CONTRIBUTOR","body":"You may think it is easier to switch to a new frame than to improve the current one, but it is totally not the case. Implementing a distributed version involves much more than calling some methods in a library. Interface adaption, schema conversion, exception handling, cluster organization, and data distribution... there are so many to do. On the other hand, the problems you face now are just worries, doubts, and lack of tests, instead of major issues that will take months to fix.\r\n\r\nThe paralleled log execution, controllable log replication dispatching, batching, and some ongoing improvements. You may have missed some of them. And since many of us come from a university lab, we will be able to put more state-of-the-art improvements into it.\r\n\r\nSQL Server and Oracle are very safe and stable, though they are nothing about competitiveness in this field. One may speed up to take some share at the early stage, but without its core, it will be soon driven out of the market.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920630744/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920637452","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-920637452","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":920637452,"node_id":"IC_kwDOCXnElM4239AM","user":{"login":"jt2594838","id":23610645,"node_id":"MDQ6VXNlcjIzNjEwNjQ1","avatar_url":"https://avatars.githubusercontent.com/u/23610645?v=4","gravatar_id":"","url":"https://api.github.com/users/jt2594838","html_url":"https://github.com/jt2594838","followers_url":"https://api.github.com/users/jt2594838/followers","following_url":"https://api.github.com/users/jt2594838/following{/other_user}","gists_url":"https://api.github.com/users/jt2594838/gists{/gist_id}","starred_url":"https://api.github.com/users/jt2594838/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jt2594838/subscriptions","organizations_url":"https://api.github.com/users/jt2594838/orgs","repos_url":"https://api.github.com/users/jt2594838/repos","events_url":"https://api.github.com/users/jt2594838/events{/privacy}","received_events_url":"https://api.github.com/users/jt2594838/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T07:11:23Z","updated_at":"2021-09-16T07:11:23Z","author_association":"CONTRIBUTOR","body":"By the way, I checked the recent Jira issues that are related to the cluster module, only to find very, very few of them are related to the consensus implementation. So I sincerely doubt merely changing to another consensus implementation can solve any problem.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920637452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920682748","html_url":"https://github.com/apache/iotdb/pull/3979#issuecomment-920682748","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3979","id":920682748,"node_id":"IC_kwDOCXnElM424ID8","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T08:06:53Z","updated_at":"2021-09-17T16:46:31Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42956794/badge)](https://coveralls.io/builds/42956794)\n\nCoverage increased (+0.05%) to 67.524% when pulling **cfc7c312a725ce8ff9fdf6e1a1b8af1afa30d917 on VectorTest** into **e5d86c9d1d5de1934c77d2ea4f97f8cd6d669bb8 on master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920682748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920728476","html_url":"https://github.com/apache/iotdb/pull/3886#issuecomment-920728476","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3886","id":920728476,"node_id":"IC_kwDOCXnElM424TOc","user":{"login":"chengjianyun","id":6150814,"node_id":"MDQ6VXNlcjYxNTA4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6150814?v=4","gravatar_id":"","url":"https://api.github.com/users/chengjianyun","html_url":"https://github.com/chengjianyun","followers_url":"https://api.github.com/users/chengjianyun/followers","following_url":"https://api.github.com/users/chengjianyun/following{/other_user}","gists_url":"https://api.github.com/users/chengjianyun/gists{/gist_id}","starred_url":"https://api.github.com/users/chengjianyun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengjianyun/subscriptions","organizations_url":"https://api.github.com/users/chengjianyun/orgs","repos_url":"https://api.github.com/users/chengjianyun/repos","events_url":"https://api.github.com/users/chengjianyun/events{/privacy}","received_events_url":"https://api.github.com/users/chengjianyun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T09:12:12Z","updated_at":"2021-09-16T09:12:12Z","author_association":"CONTRIBUTOR","body":"> Hi, Thanks your contribution.\r\n> I have some question for this pr.\r\n> \r\n> Check whether the refactoring performance is tested because the pool directly affects the query and insertion performance.\r\n> Whether rolling restart of a node is supported, which does not affect external query or write.\r\n\r\nI have done some basic tests. For advanced tests(such as benchmark compare), I plan to do that once the `cluster-` branch is stable.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920728476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920767517","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-920767517","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":920767517,"node_id":"IC_kwDOCXnElM424cwd","user":{"login":"OneSizeFitsQuorum","id":32640567,"node_id":"MDQ6VXNlcjMyNjQwNTY3","avatar_url":"https://avatars.githubusercontent.com/u/32640567?v=4","gravatar_id":"","url":"https://api.github.com/users/OneSizeFitsQuorum","html_url":"https://github.com/OneSizeFitsQuorum","followers_url":"https://api.github.com/users/OneSizeFitsQuorum/followers","following_url":"https://api.github.com/users/OneSizeFitsQuorum/following{/other_user}","gists_url":"https://api.github.com/users/OneSizeFitsQuorum/gists{/gist_id}","starred_url":"https://api.github.com/users/OneSizeFitsQuorum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OneSizeFitsQuorum/subscriptions","organizations_url":"https://api.github.com/users/OneSizeFitsQuorum/orgs","repos_url":"https://api.github.com/users/OneSizeFitsQuorum/repos","events_url":"https://api.github.com/users/OneSizeFitsQuorum/events{/privacy}","received_events_url":"https://api.github.com/users/OneSizeFitsQuorum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T10:08:07Z","updated_at":"2021-09-16T12:13:49Z","author_association":"CONTRIBUTOR","body":"> You may think it is easier to switch to a new frame than to improve the current one, but it is totally not the case. Implementing a distributed version involves much more than calling some methods in a library. Interface adaption, schema conversion, exception handling, cluster organization, and data distribution... there are so many to do.\r\n\r\n+1 \r\n\r\nThe goal for all of us was to make the  cluster module more stable: some poeple felt it was better to use a mature Raft library because Raft was hard to be implemented correctly, but I also observed [Kafka](https://github.com/apache/kafka/tree/trunk/raft) writing their own Raft instead of using other Raft libraries. Other people don't feel the need to make big changes right now because they don't seem to have many problems at the moment, but using a great Raft library like etcd frees up the consensus bottleneck of the entire cloud native.\r\n\r\nBeing pragmatic, we have to admit that even if we decided to use another raft library, it wouldn't have been possible in a month or two. Also, most of the bugs we've fixed so far have nothing to do with consensus. Therefore, the decision to move precipitously requires a great deal of risk.\r\n\r\nSo I suggest we go in three directions in parallel: research + refactoring + testing.\r\n\r\n- Research: Follow my list of 5 concerns to see how other libraries are doing; Understanding these things will help us understand the Raft algorithm more deeply. Whether the Raft library is replaced or not, this is better for cluster IoTDB because the people who developed it know more about Raft.\r\n\r\n- Refactoring: Since we've recently started refactoring cluster code, I thought we could refactor Raft code as well. Ideally, it should be a single module, like [Kafka](https://github.com/apache/kafka/tree/trunk/raft). For anyone who wants to change raft library, this is basically the process of changing library, and we must to do some abstraction in order to replace current Raft implementation. For those who don't want to change raft library, doing so can improve code readability and make it easier to add more complex tests. After modularization, we can enumerate some performance comparisons and pros and cons before we discuss whether raft libraries need to be replaced. At that point, I don't think we would be as divergent as we are now.\r\n\r\n- Testing: After nearly a year of maintaining cluster modules, I believe that most of the bugs fixed so far have nothing to do with consensus and will show up even replacing raft library. Of course, I'm not saying that the Raft we implemented currently had no bugs, it was probably due to a lack of testing and a lack of production cases. Therefore, I suggest that we can fully test the cluster module from now on, and according to the test results we can make the next step of judgment. In addition, I am currently investigating and designing cluster [chaos-test framework](https://gitlab.summer-ospp.ac.cn/summer2021/210070607). If everything goes well, I will have a chaos testing framework that is easy to deploy at the end of September, and we can also use this framework to test cluster‘s stability. Welcome to join me","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920767517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920798679","html_url":"https://github.com/apache/iotdb/pull/3985#issuecomment-920798679","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3985","id":920798679,"node_id":"IC_kwDOCXnElM424kXX","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T10:59:18Z","updated_at":"2021-09-16T10:59:18Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42919229/badge)](https://coveralls.io/builds/42919229)\n\nCoverage increased (+0.06%) to 67.542% when pulling **ba95e4dc46f1285e3d26b866b0044b042227c9f6 on yschengzi:TimePartitionCherryPick** into **e5d86c9d1d5de1934c77d2ea4f97f8cd6d669bb8 on apache:master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920798679/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920813250","html_url":"https://github.com/apache/iotdb/pull/3986#issuecomment-920813250","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3986","id":920813250,"node_id":"IC_kwDOCXnElM424n7C","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T11:20:12Z","updated_at":"2021-09-16T12:31:31Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42921072/badge)](https://coveralls.io/builds/42921072)\n\nCoverage increased (+0.07%) to 67.552% when pulling **25e65923d66101a49c681d6bde11227d609ac064 on jun0315:feature_alias_support** into **e5d86c9d1d5de1934c77d2ea4f97f8cd6d669bb8 on apache:master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920813250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920815354","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-920815354","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":920815354,"node_id":"IC_kwDOCXnElM424ob6","user":{"login":"chengjianyun","id":6150814,"node_id":"MDQ6VXNlcjYxNTA4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6150814?v=4","gravatar_id":"","url":"https://api.github.com/users/chengjianyun","html_url":"https://github.com/chengjianyun","followers_url":"https://api.github.com/users/chengjianyun/followers","following_url":"https://api.github.com/users/chengjianyun/following{/other_user}","gists_url":"https://api.github.com/users/chengjianyun/gists{/gist_id}","starred_url":"https://api.github.com/users/chengjianyun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengjianyun/subscriptions","organizations_url":"https://api.github.com/users/chengjianyun/orgs","repos_url":"https://api.github.com/users/chengjianyun/repos","events_url":"https://api.github.com/users/chengjianyun/events{/privacy}","received_events_url":"https://api.github.com/users/chengjianyun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T11:23:09Z","updated_at":"2021-09-16T11:24:22Z","author_association":"CONTRIBUTOR","body":"Summary different opinions and reorg the content to make things clear.\r\n\r\n## Current situation of cluster availability\r\n\r\n- https://github.com/apache/iotdb/pull/3939 The bug is found by reviewing code.\r\n- https://github.com/apache/iotdb/pull/3930 The bug is found by error msg in a restart fail case. Actually the error msg has been ignored for a long time because server can start normally in most cases.\r\n- https://github.com/apache/iotdb/pull/3848 This is a defensive change after reviewing code.\r\n- https://github.com/apache/iotdb/pull/3832 The bug is found in a sever can't start case.\r\n\r\nThe bugs are find/fixed by us in recent month. Some of the bugs is found by reviewing code and look like obvious and the other are reported in Raft unrelated issue. I have reasons to believe that there are much more bugs we don't know. Some of the bug may cause data lose, as IoTDB is most used in big data scenario, it's hard to feel when a small part of data lost. That's the worst situation, we don't know when that will happen and what result it will cause. \r\n\r\n## Goal of discussion\r\n\r\nFind a way to improve availability of cluster of IoTDB and keep outstanding performance in a short time(2 months around in my opinion).\r\n\r\n## Assumption\r\n\r\nThe assumptions are the base of the discussion. We don't need to discussion on these any more.\r\n\r\n1. Chosen 3rd party library of Raft has been widely used in industry, has high quality and the algorithm is correct in known cases. As has been widely used, I think we could believe `known cases` are `all cases` we could ever have.\r\n2. An application scenario may cause many scenarios in Raft.\r\n\r\n## How to achieve the goal\r\n\r\n### Import 3rd party Raft framework\r\n#### Plan\r\n1. Abstract proper interfaces for Raft, make it a module gradually . \r\n2. At same time, we can investigate some 3rd party libraries and find if we can have a proper one.\r\n3. Import the chosen library to replace our raft module if needed. \r\n\r\nOf course,  things are not as easy as said but it's clear. After this, the tests can be focused on application scenarios which are much less than raft scenarios.\r\n\r\n#### Advantages\r\n- Doable\r\n- Raft correctness is guaranteed\r\n- Simplify tests, no UT for Raft\r\n\r\n#### Disadvantages\r\n- Maybe lose some performance\r\n- Lost control of Raft, update need a relative long term\r\n- Can't customize raft to improve performance\r\n\r\n### Improvement base on current implementation\r\n#### Plan\r\n??\r\n\r\n#### Advantages\r\n- Could customize raft to optimize performance.\r\n- Raft update could be done in a short term.\r\n\r\n#### Disadvantages\r\n- Correctness of Raft is hard to guarantee.\r\n- It's hard to make raft tests complete.\r\n\r\n## My thought\r\n\r\nI don't support the solution that improve current implementation because:\r\n- I don't know the current tests for raft are complete or not\r\n- I don't know how far we are from to make raft test cases complete\r\n\r\nAs TiKV implemented all tests of raft in etcd(after it has been stabilized for years) with RUST, if we could do something similar in a short time, I think its OK improve base on current implementation by ourselves. And optimize raft at this stage is not a good idea, please let's make it correct first.\r\n\r\nSupplement if I miss anything!\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920815354/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920845826","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-920845826","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":920845826,"node_id":"IC_kwDOCXnElM424v4C","user":{"login":"jt2594838","id":23610645,"node_id":"MDQ6VXNlcjIzNjEwNjQ1","avatar_url":"https://avatars.githubusercontent.com/u/23610645?v=4","gravatar_id":"","url":"https://api.github.com/users/jt2594838","html_url":"https://github.com/jt2594838","followers_url":"https://api.github.com/users/jt2594838/followers","following_url":"https://api.github.com/users/jt2594838/following{/other_user}","gists_url":"https://api.github.com/users/jt2594838/gists{/gist_id}","starred_url":"https://api.github.com/users/jt2594838/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jt2594838/subscriptions","organizations_url":"https://api.github.com/users/jt2594838/orgs","repos_url":"https://api.github.com/users/jt2594838/repos","events_url":"https://api.github.com/users/jt2594838/events{/privacy}","received_events_url":"https://api.github.com/users/jt2594838/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T12:09:54Z","updated_at":"2021-09-16T12:20:17Z","author_association":"CONTRIBUTOR","body":"The listed issues concentrate on raft log management, which is already a known issue that needs refactoring, and it only contributes to a small part of the whole raft framework. While there are about 100 issues concerning the usage over raft. It is much more reasonable to think switching to a new framework will cause significantly more issues than fixing the current one.\r\n\r\nThe tests of raft is merely a small part of the whole system, as the algorithm itself is quite simple and is well explained in the paper. What really matters is how you integrate raft with your own business, which, unfortunately, cannot be helped no matter what framework you use. So if you think using an existing framework could save a lot of tests, that is not the case. However, what is sure is that you will have to follow someone else's design pattern to redesign your interfaces and make adaptions, accepting their system and application assumption, which may not be easy and pleasent.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920845826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920883859","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-920883859","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":920883859,"node_id":"IC_kwDOCXnElM4245KT","user":{"login":"jt2594838","id":23610645,"node_id":"MDQ6VXNlcjIzNjEwNjQ1","avatar_url":"https://avatars.githubusercontent.com/u/23610645?v=4","gravatar_id":"","url":"https://api.github.com/users/jt2594838","html_url":"https://github.com/jt2594838","followers_url":"https://api.github.com/users/jt2594838/followers","following_url":"https://api.github.com/users/jt2594838/following{/other_user}","gists_url":"https://api.github.com/users/jt2594838/gists{/gist_id}","starred_url":"https://api.github.com/users/jt2594838/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jt2594838/subscriptions","organizations_url":"https://api.github.com/users/jt2594838/orgs","repos_url":"https://api.github.com/users/jt2594838/repos","events_url":"https://api.github.com/users/jt2594838/events{/privacy}","received_events_url":"https://api.github.com/users/jt2594838/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T13:06:20Z","updated_at":"2021-09-16T13:07:36Z","author_association":"CONTRIBUTOR","body":"My suggestion is, please give us a list of things your preferred frameworks used to qualify their raft implementation (tests to be specific, and please restrict to raft only). Then we will discuss whether it is easier to add the missing tests or directly using their implementation. I think this is much more convincing than saying \"I do not know\", \"I worry\", \"I doubt\".","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920883859/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920919425","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-920919425","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":920919425,"node_id":"IC_kwDOCXnElM425B2B","user":{"login":"jixuan1989","id":1021782,"node_id":"MDQ6VXNlcjEwMjE3ODI=","avatar_url":"https://avatars.githubusercontent.com/u/1021782?v=4","gravatar_id":"","url":"https://api.github.com/users/jixuan1989","html_url":"https://github.com/jixuan1989","followers_url":"https://api.github.com/users/jixuan1989/followers","following_url":"https://api.github.com/users/jixuan1989/following{/other_user}","gists_url":"https://api.github.com/users/jixuan1989/gists{/gist_id}","starred_url":"https://api.github.com/users/jixuan1989/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jixuan1989/subscriptions","organizations_url":"https://api.github.com/users/jixuan1989/orgs","repos_url":"https://api.github.com/users/jixuan1989/repos","events_url":"https://api.github.com/users/jixuan1989/events{/privacy}","received_events_url":"https://api.github.com/users/jixuan1989/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T13:48:49Z","updated_at":"2021-09-16T13:48:49Z","author_association":"MEMBER","body":"Hi folks,\r\n\r\nVery glad to see the deep discussion about this topic.\r\n\r\nActually we had several similar discussions in the last 2 years. Even last year, I did not give up trying to use Ratis [1]. However, we finally give up the solution.\r\n\r\nSome guys may read the paper \"Apache IoTDB 分布式架构设计\" [2]. The paper is written in 2019, and at that time, we used sofa-jraft[3], and we should release the cluster version at that time but finally, we gave up. The experience told us using an existing implementation is not as beautiful as we thought. \r\nIn that version, I asked many times \"why you design classes and codes like this\", the answer is always \"I have to because of the underlying implementation\". \r\n \r\nWe finally blame the performance problem and architecture scalability problem on the third-part library. I know the conclusion may be not correct, but it is hard to guarantee whether the history will replay again...\r\n\r\nWhat is more important, Raft and multi-raft are not our destinations. We believe in the time series management scenario, Raft is over-heavy. Using an existing implementation will limit us finally.  and I do not want to re-implement the cluster module once again at that time...\r\n\r\nI know our implementation may have many bugs and we omit many corner cases now. But it may not be a bad thing. The progress will let us understand the system deeply. \r\n\r\nIMO, we really need to:\r\n1. if we can decouple the implementation, it is better. (But it seems there is few things to do according to Tian Jiang's above opinion)\r\n2. If we consider others have been fully tested, we can learn their test cases to make our implementation more robost.\r\n\r\n> The answer must be YES, but WHEN? One year or two?\r\n\r\nWhen writing here, I remember another discussion: when we want to implement the monitoring module for IoTDB, which 3rd library should we use?  micrometer, dropwizard or others? Some of them have rich features but some of them have better performance. So, how to choose? Finally, we decide to extract a framework and let users choose what they want to use.\r\n\r\nSo, if we can do some refactor and then allow let users to switch the implementation, I can accept that.  \r\n\r\nBut it is hard to convince me to give up our implementation. In my view, it is a kind of drinking the poison to kill the thirsty.\r\n\r\n\r\n[1] https://lists.apache.org/thread.html/3c49bc234415417511226c7032009868f9d3475026adf07e2e41f99f%40%3Cdev.ratis.apache.org%3E\r\n[2] http://scis.scichina.com/cn/2020/SSI-2019-0189.pdf\r\n[3] https://github.com/sofastack/sofa-jraft","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920919425/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920921609","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-920921609","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":920921609,"node_id":"IC_kwDOCXnElM425CYJ","user":{"login":"jixuan1989","id":1021782,"node_id":"MDQ6VXNlcjEwMjE3ODI=","avatar_url":"https://avatars.githubusercontent.com/u/1021782?v=4","gravatar_id":"","url":"https://api.github.com/users/jixuan1989","html_url":"https://github.com/jixuan1989","followers_url":"https://api.github.com/users/jixuan1989/followers","following_url":"https://api.github.com/users/jixuan1989/following{/other_user}","gists_url":"https://api.github.com/users/jixuan1989/gists{/gist_id}","starred_url":"https://api.github.com/users/jixuan1989/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jixuan1989/subscriptions","organizations_url":"https://api.github.com/users/jixuan1989/orgs","repos_url":"https://api.github.com/users/jixuan1989/repos","events_url":"https://api.github.com/users/jixuan1989/events{/privacy}","received_events_url":"https://api.github.com/users/jixuan1989/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T13:51:29Z","updated_at":"2021-09-16T13:51:29Z","author_association":"MEMBER","body":"BTW, I always agree to provide a no-bug or no critical bug version to industrial users. It depends on all of your contributions. \r\nI believe we can achieve that if all of us contribute together.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920921609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920932942","html_url":"https://github.com/apache/iotdb/pull/3886#issuecomment-920932942","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3886","id":920932942,"node_id":"IC_kwDOCXnElM425FJO","user":{"login":"jixuan1989","id":1021782,"node_id":"MDQ6VXNlcjEwMjE3ODI=","avatar_url":"https://avatars.githubusercontent.com/u/1021782?v=4","gravatar_id":"","url":"https://api.github.com/users/jixuan1989","html_url":"https://github.com/jixuan1989","followers_url":"https://api.github.com/users/jixuan1989/followers","following_url":"https://api.github.com/users/jixuan1989/following{/other_user}","gists_url":"https://api.github.com/users/jixuan1989/gists{/gist_id}","starred_url":"https://api.github.com/users/jixuan1989/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jixuan1989/subscriptions","organizations_url":"https://api.github.com/users/jixuan1989/orgs","repos_url":"https://api.github.com/users/jixuan1989/repos","events_url":"https://api.github.com/users/jixuan1989/events{/privacy}","received_events_url":"https://api.github.com/users/jixuan1989/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T14:04:33Z","updated_at":"2021-09-16T14:04:33Z","author_association":"MEMBER","body":"The `File Changed` tab gets stuck...\r\n\r\nIn SyncDataClient.java, what does `activateObject()`  means? why it just sets the timeout value? @LebronAl ?\r\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920932942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920957330","html_url":"https://github.com/apache/iotdb/pull/3988#issuecomment-920957330","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3988","id":920957330,"node_id":"IC_kwDOCXnElM425LGS","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T14:32:58Z","updated_at":"2021-09-27T15:51:46Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/43092524/badge)](https://coveralls.io/builds/43092524)\n\nCoverage increased (+0.0006%) to 67.479% when pulling **f6ac1e1335801d02ce27341e604590f0226e4593 on jun0315:feature_rpc_compression_jdbc** into **e5d86c9d1d5de1934c77d2ea4f97f8cd6d669bb8 on apache:master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/920957330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921374263","html_url":"https://github.com/apache/iotdb/pull/3987#issuecomment-921374263","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3987","id":921374263,"node_id":"IC_kwDOCXnElM426w43","user":{"login":"HTHou","id":25913899,"node_id":"MDQ6VXNlcjI1OTEzODk5","avatar_url":"https://avatars.githubusercontent.com/u/25913899?v=4","gravatar_id":"","url":"https://api.github.com/users/HTHou","html_url":"https://github.com/HTHou","followers_url":"https://api.github.com/users/HTHou/followers","following_url":"https://api.github.com/users/HTHou/following{/other_user}","gists_url":"https://api.github.com/users/HTHou/gists{/gist_id}","starred_url":"https://api.github.com/users/HTHou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HTHou/subscriptions","organizations_url":"https://api.github.com/users/HTHou/orgs","repos_url":"https://api.github.com/users/HTHou/repos","events_url":"https://api.github.com/users/HTHou/events{/privacy}","received_events_url":"https://api.github.com/users/HTHou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T01:15:17Z","updated_at":"2021-09-17T01:15:17Z","author_association":"CONTRIBUTOR","body":"Hi, thanks for your contribution!\r\nCan you plz submit this PR to master branch? We actually won't add new feature to the rel/0.12 branch any more. ","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921374263/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921404440","html_url":"https://github.com/apache/iotdb/pull/3918#issuecomment-921404440","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3918","id":921404440,"node_id":"IC_kwDOCXnElM4264QY","user":{"login":"cornmonster","id":20107543,"node_id":"MDQ6VXNlcjIwMTA3NTQz","avatar_url":"https://avatars.githubusercontent.com/u/20107543?v=4","gravatar_id":"","url":"https://api.github.com/users/cornmonster","html_url":"https://github.com/cornmonster","followers_url":"https://api.github.com/users/cornmonster/followers","following_url":"https://api.github.com/users/cornmonster/following{/other_user}","gists_url":"https://api.github.com/users/cornmonster/gists{/gist_id}","starred_url":"https://api.github.com/users/cornmonster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cornmonster/subscriptions","organizations_url":"https://api.github.com/users/cornmonster/orgs","repos_url":"https://api.github.com/users/cornmonster/repos","events_url":"https://api.github.com/users/cornmonster/events{/privacy}","received_events_url":"https://api.github.com/users/cornmonster/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T02:22:45Z","updated_at":"2021-09-17T02:22:45Z","author_association":"CONTRIBUTOR","body":"Hi, it seems that this change breaks the backward compatibility?\r\n\r\nLet's say we have 3 time series: root.sg.d.s1, root.sg.d.s2, and root.sg.d.t.s1.\r\n\r\nBefore this change, the following query produces a result set that contains all of the time series.\r\n```\r\nselect * from root.sg.d\r\n```\r\n\r\nAfter this change, it produces only root.sg.d.s1 and root.sg.d.s2, right?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921404440/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921407741","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-921407741","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":921407741,"node_id":"IC_kwDOCXnElM4265D9","user":{"login":"jt2594838","id":23610645,"node_id":"MDQ6VXNlcjIzNjEwNjQ1","avatar_url":"https://avatars.githubusercontent.com/u/23610645?v=4","gravatar_id":"","url":"https://api.github.com/users/jt2594838","html_url":"https://github.com/jt2594838","followers_url":"https://api.github.com/users/jt2594838/followers","following_url":"https://api.github.com/users/jt2594838/following{/other_user}","gists_url":"https://api.github.com/users/jt2594838/gists{/gist_id}","starred_url":"https://api.github.com/users/jt2594838/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jt2594838/subscriptions","organizations_url":"https://api.github.com/users/jt2594838/orgs","repos_url":"https://api.github.com/users/jt2594838/repos","events_url":"https://api.github.com/users/jt2594838/events{/privacy}","received_events_url":"https://api.github.com/users/jt2594838/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T02:32:29Z","updated_at":"2021-09-17T02:32:29Z","author_association":"CONTRIBUTOR","body":"There is also another more practical problem. Both Raft and IoTDB have their own log management, and we aim to combine them or replace one with another. I think state machine safety is more important than consensus safety since breaking consensus requires more than one node to malfunction while a single node failure may break state machine safety, so IoTDB WAL will probably be the core of the final log.\r\n\r\nHowever, the log management is enclosed in other frameworks as it normally does not interfere with the business logic, so it will be extremely hard to achieve the purpose of unifying logs with one of the implementation is hidden behind.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921407741/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921411080","html_url":"https://github.com/apache/iotdb/pull/3987#issuecomment-921411080","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3987","id":921411080,"node_id":"IC_kwDOCXnElM42654I","user":{"login":"cornmonster","id":20107543,"node_id":"MDQ6VXNlcjIwMTA3NTQz","avatar_url":"https://avatars.githubusercontent.com/u/20107543?v=4","gravatar_id":"","url":"https://api.github.com/users/cornmonster","html_url":"https://github.com/cornmonster","followers_url":"https://api.github.com/users/cornmonster/followers","following_url":"https://api.github.com/users/cornmonster/following{/other_user}","gists_url":"https://api.github.com/users/cornmonster/gists{/gist_id}","starred_url":"https://api.github.com/users/cornmonster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cornmonster/subscriptions","organizations_url":"https://api.github.com/users/cornmonster/orgs","repos_url":"https://api.github.com/users/cornmonster/repos","events_url":"https://api.github.com/users/cornmonster/events{/privacy}","received_events_url":"https://api.github.com/users/cornmonster/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T02:43:29Z","updated_at":"2021-09-17T02:43:29Z","author_association":"CONTRIBUTOR","body":"Hi, it is really nice to have a way to check the current server time. \r\n\r\nThe relational DBMS(s) like MySQL or PostgreSQL use built-in UDF to handle this need. But I since IoTDB doesn't support syntax like `select now()` (a from clause is required), I can totally understand the way you are doing it.\r\n\r\nBut since adding a new top-level statement is quite have, I suggest we make most of it and make the SQL API more extendable. Instead of simply shows a system time, maybe we could provide more information like current workload, storage usage, and so on.\r\n\r\nIn addition, in cluster mode, we should display the information for every single node in the cluster.\r\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921411080/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921415400","html_url":"https://github.com/apache/iotdb/pull/3918#issuecomment-921415400","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3918","id":921415400,"node_id":"IC_kwDOCXnElM42667o","user":{"login":"MarcosZyk","id":38524330,"node_id":"MDQ6VXNlcjM4NTI0MzMw","avatar_url":"https://avatars.githubusercontent.com/u/38524330?v=4","gravatar_id":"","url":"https://api.github.com/users/MarcosZyk","html_url":"https://github.com/MarcosZyk","followers_url":"https://api.github.com/users/MarcosZyk/followers","following_url":"https://api.github.com/users/MarcosZyk/following{/other_user}","gists_url":"https://api.github.com/users/MarcosZyk/gists{/gist_id}","starred_url":"https://api.github.com/users/MarcosZyk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarcosZyk/subscriptions","organizations_url":"https://api.github.com/users/MarcosZyk/orgs","repos_url":"https://api.github.com/users/MarcosZyk/repos","events_url":"https://api.github.com/users/MarcosZyk/events{/privacy}","received_events_url":"https://api.github.com/users/MarcosZyk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T02:56:16Z","updated_at":"2021-09-17T02:56:16Z","author_association":"CONTRIBUTOR","body":"> Hi, it seems that this change breaks the backward compatibility?\r\n> \r\n> Let's say we have 3 time series: root.sg.d.s1, root.sg.d.s2, and root.sg.d.t.s1.\r\n> \r\n> Before this change, the following query produces a result set that contains all of the time series.\r\n> \r\n> ```\r\n> select * from root.sg.d\r\n> ```\r\n> \r\n> After this change, it produces only root.sg.d.s1 and root.sg.d.s2, right?\r\n\r\nYes. It's a big sematic change. \r\nIn this new feature, you may use the following sql to get all the timeseries.\r\n```\r\nselect ** from root.sg.d\r\nselect * from root.sg.d, root.sg.d.**\r\n```\r\nThe select clause and from clause will be concat to get the path pattern of timeseries.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921415400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921425928","html_url":"https://github.com/apache/iotdb/pull/3987#issuecomment-921425928","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3987","id":921425928,"node_id":"IC_kwDOCXnElM4269gI","user":{"login":"neuyilan","id":6237070,"node_id":"MDQ6VXNlcjYyMzcwNzA=","avatar_url":"https://avatars.githubusercontent.com/u/6237070?v=4","gravatar_id":"","url":"https://api.github.com/users/neuyilan","html_url":"https://github.com/neuyilan","followers_url":"https://api.github.com/users/neuyilan/followers","following_url":"https://api.github.com/users/neuyilan/following{/other_user}","gists_url":"https://api.github.com/users/neuyilan/gists{/gist_id}","starred_url":"https://api.github.com/users/neuyilan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuyilan/subscriptions","organizations_url":"https://api.github.com/users/neuyilan/orgs","repos_url":"https://api.github.com/users/neuyilan/repos","events_url":"https://api.github.com/users/neuyilan/events{/privacy}","received_events_url":"https://api.github.com/users/neuyilan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T03:24:01Z","updated_at":"2021-09-17T03:24:01Z","author_association":"MEMBER","body":"How is this operator defined in the cluster module? Because the time of cluster nodes may be inconsistent?","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921425928/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921426259","html_url":"https://github.com/apache/iotdb/pull/3886#issuecomment-921426259","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3886","id":921426259,"node_id":"IC_kwDOCXnElM4269lT","user":{"login":"chengjianyun","id":6150814,"node_id":"MDQ6VXNlcjYxNTA4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6150814?v=4","gravatar_id":"","url":"https://api.github.com/users/chengjianyun","html_url":"https://github.com/chengjianyun","followers_url":"https://api.github.com/users/chengjianyun/followers","following_url":"https://api.github.com/users/chengjianyun/following{/other_user}","gists_url":"https://api.github.com/users/chengjianyun/gists{/gist_id}","starred_url":"https://api.github.com/users/chengjianyun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengjianyun/subscriptions","organizations_url":"https://api.github.com/users/chengjianyun/orgs","repos_url":"https://api.github.com/users/chengjianyun/repos","events_url":"https://api.github.com/users/chengjianyun/events{/privacy}","received_events_url":"https://api.github.com/users/chengjianyun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T03:25:08Z","updated_at":"2021-09-17T03:25:08Z","author_association":"CONTRIBUTOR","body":"> The `File Changed` tab gets stuck...\r\n> \r\n> In SyncDataClient.java, what does `activateObject()` means? why it just sets the timeout value? @LebronAl ?\r\n\r\n`activateObject()` will be revoke before return object to someone (try to borrow object).  Some user may set the customized timeout, so reset it when give the client out (Or a more reasonable place is `passivateObject()` which will be revoke before object is returned to pool). Actually, the user who is using the client should reset the value, object pool does this for double check.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921426259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921430285","html_url":"https://github.com/apache/iotdb/pull/3886#issuecomment-921430285","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3886","id":921430285,"node_id":"IC_kwDOCXnElM426-kN","user":{"login":"OneSizeFitsQuorum","id":32640567,"node_id":"MDQ6VXNlcjMyNjQwNTY3","avatar_url":"https://avatars.githubusercontent.com/u/32640567?v=4","gravatar_id":"","url":"https://api.github.com/users/OneSizeFitsQuorum","html_url":"https://github.com/OneSizeFitsQuorum","followers_url":"https://api.github.com/users/OneSizeFitsQuorum/followers","following_url":"https://api.github.com/users/OneSizeFitsQuorum/following{/other_user}","gists_url":"https://api.github.com/users/OneSizeFitsQuorum/gists{/gist_id}","starred_url":"https://api.github.com/users/OneSizeFitsQuorum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OneSizeFitsQuorum/subscriptions","organizations_url":"https://api.github.com/users/OneSizeFitsQuorum/orgs","repos_url":"https://api.github.com/users/OneSizeFitsQuorum/repos","events_url":"https://api.github.com/users/OneSizeFitsQuorum/events{/privacy}","received_events_url":"https://api.github.com/users/OneSizeFitsQuorum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T03:39:02Z","updated_at":"2021-09-17T03:39:02Z","author_association":"CONTRIBUTOR","body":"Hi, Please add licenses for this files\r\n![image](https://user-images.githubusercontent.com/32640567/133720406-18a40cb1-7c65-4b76-8a28-8d9116e65c90.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921430285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921447329","html_url":"https://github.com/apache/iotdb/issues/3954#issuecomment-921447329","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3954","id":921447329,"node_id":"IC_kwDOCXnElM427Cuh","user":{"login":"chengjianyun","id":6150814,"node_id":"MDQ6VXNlcjYxNTA4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6150814?v=4","gravatar_id":"","url":"https://api.github.com/users/chengjianyun","html_url":"https://github.com/chengjianyun","followers_url":"https://api.github.com/users/chengjianyun/followers","following_url":"https://api.github.com/users/chengjianyun/following{/other_user}","gists_url":"https://api.github.com/users/chengjianyun/gists{/gist_id}","starred_url":"https://api.github.com/users/chengjianyun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengjianyun/subscriptions","organizations_url":"https://api.github.com/users/chengjianyun/orgs","repos_url":"https://api.github.com/users/chengjianyun/repos","events_url":"https://api.github.com/users/chengjianyun/events{/privacy}","received_events_url":"https://api.github.com/users/chengjianyun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T04:18:58Z","updated_at":"2021-09-17T04:18:58Z","author_association":"CONTRIBUTOR","body":"Hi, all\r\n\r\nThanks for all your opinions and discussions. \r\n\r\nI'd like to close the discussion in a few days. Based on current implementation I don't think we can integrate 3rd party Raft library and the debate here meaningless right now. But no matter we finally decide to apply 3rd party library or not, I think all of us agree that we should decouple the raft and state machine implementation and improve quality at same time. Although this is very hard as have discussed, but I think we can set the aim and achieve it by small step refactors, new design consideration, etc. New discussion should be arise once there is some plan about the decouple.\r\n\r\nAny concerns, please let me know.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921447329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921524302","html_url":"https://github.com/apache/iotdb/pull/3991#issuecomment-921524302","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3991","id":921524302,"node_id":"IC_kwDOCXnElM427VhO","user":{"login":"HTHou","id":25913899,"node_id":"MDQ6VXNlcjI1OTEzODk5","avatar_url":"https://avatars.githubusercontent.com/u/25913899?v=4","gravatar_id":"","url":"https://api.github.com/users/HTHou","html_url":"https://github.com/HTHou","followers_url":"https://api.github.com/users/HTHou/followers","following_url":"https://api.github.com/users/HTHou/following{/other_user}","gists_url":"https://api.github.com/users/HTHou/gists{/gist_id}","starred_url":"https://api.github.com/users/HTHou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HTHou/subscriptions","organizations_url":"https://api.github.com/users/HTHou/orgs","repos_url":"https://api.github.com/users/HTHou/repos","events_url":"https://api.github.com/users/HTHou/events{/privacy}","received_events_url":"https://api.github.com/users/HTHou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T06:05:53Z","updated_at":"2021-09-17T06:05:53Z","author_association":"CONTRIBUTOR","body":"Hi, would you like submit a PR to fix this issue in rel/0.12 branch?","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921524302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921594998","html_url":"https://github.com/apache/iotdb/pull/3991#issuecomment-921594998","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3991","id":921594998,"node_id":"IC_kwDOCXnElM427mx2","user":{"login":"jun0315","id":44310040,"node_id":"MDQ6VXNlcjQ0MzEwMDQw","avatar_url":"https://avatars.githubusercontent.com/u/44310040?v=4","gravatar_id":"","url":"https://api.github.com/users/jun0315","html_url":"https://github.com/jun0315","followers_url":"https://api.github.com/users/jun0315/followers","following_url":"https://api.github.com/users/jun0315/following{/other_user}","gists_url":"https://api.github.com/users/jun0315/gists{/gist_id}","starred_url":"https://api.github.com/users/jun0315/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jun0315/subscriptions","organizations_url":"https://api.github.com/users/jun0315/orgs","repos_url":"https://api.github.com/users/jun0315/repos","events_url":"https://api.github.com/users/jun0315/events{/privacy}","received_events_url":"https://api.github.com/users/jun0315/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T08:06:26Z","updated_at":"2021-09-17T08:06:26Z","author_association":"CONTRIBUTOR","body":"> Hi, would you like submit a PR to fix this issue in rel/0.12 branch?\r\n\r\nThanks your reply!\r\nI have submitted a PR to fix this issue in rel/0.12 . https://github.com/apache/iotdb/pull/3994","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921594998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921664702","html_url":"https://github.com/apache/iotdb/pull/3983#issuecomment-921664702","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3983","id":921664702,"node_id":"IC_kwDOCXnElM4273y-","user":{"login":"HTHou","id":25913899,"node_id":"MDQ6VXNlcjI1OTEzODk5","avatar_url":"https://avatars.githubusercontent.com/u/25913899?v=4","gravatar_id":"","url":"https://api.github.com/users/HTHou","html_url":"https://github.com/HTHou","followers_url":"https://api.github.com/users/HTHou/followers","following_url":"https://api.github.com/users/HTHou/following{/other_user}","gists_url":"https://api.github.com/users/HTHou/gists{/gist_id}","starred_url":"https://api.github.com/users/HTHou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HTHou/subscriptions","organizations_url":"https://api.github.com/users/HTHou/orgs","repos_url":"https://api.github.com/users/HTHou/repos","events_url":"https://api.github.com/users/HTHou/events{/privacy}","received_events_url":"https://api.github.com/users/HTHou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T09:50:11Z","updated_at":"2021-09-17T09:50:11Z","author_association":"CONTRIBUTOR","body":"You can revert the commit 9ba55d9 and c3a8735 by `git revert`...","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921664702/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921937581","html_url":"https://github.com/apache/iotdb/pull/3979#issuecomment-921937581","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3979","id":921937581,"node_id":"IC_kwDOCXnElM4286at","user":{"login":"sonarqubecloud[bot]","id":39514782,"node_id":"MDM6Qm90Mzk1MTQ3ODI=","avatar_url":"https://avatars.githubusercontent.com/in/12526?v=4","gravatar_id":"","url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D","html_url":"https://github.com/apps/sonarqubecloud","followers_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/followers","following_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/repos","events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T16:46:02Z","updated_at":"2021-09-17T16:46:02Z","author_association":"NONE","body":"Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; ![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3979&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3979&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3979&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3979&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3979&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3979&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3979&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3979&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3979&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3979&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3979&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3979&resolved=false&types=CODE_SMELL)\n\n[![88.2%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/60-16px.png '88.2%')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3979&metric=new_coverage&view=list) [88.2% Coverage](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3979&metric=new_coverage&view=list)  \n[![0.0%](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3-16px.png '0.0%')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3979&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3979&metric=new_duplicated_lines_density&view=list)\n\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921937581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921939608","html_url":"https://github.com/apache/iotdb/pull/3998#issuecomment-921939608","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3998","id":921939608,"node_id":"IC_kwDOCXnElM42866Y","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T16:49:32Z","updated_at":"2021-09-17T17:08:16Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42957276/badge)](https://coveralls.io/builds/42957276)\n\nCoverage decreased (-0.02%) to 67.539% when pulling **432b0d1a8d1b7a0fd8e7f6749e186d072bee7daf on JDK17** into **8a039ebd0a9add5fe3460555b6d8ce42af50b437 on master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921939608/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921947497","html_url":"https://github.com/apache/iotdb/pull/3998#issuecomment-921947497","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3998","id":921947497,"node_id":"IC_kwDOCXnElM42881p","user":{"login":"sonarqubecloud[bot]","id":39514782,"node_id":"MDM6Qm90Mzk1MTQ3ODI=","avatar_url":"https://avatars.githubusercontent.com/in/12526?v=4","gravatar_id":"","url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D","html_url":"https://github.com/apps/sonarqubecloud","followers_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/followers","following_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/repos","events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/sonarqubecloud%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2021-09-17T17:03:01Z","updated_at":"2021-09-17T17:03:01Z","author_association":"NONE","body":"Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; ![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3998&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3998&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3998&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3998&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3998&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3998&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3998&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3998&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=apache_incubator-iotdb&pullRequest=3998&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3998&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3998&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=apache_incubator-iotdb&pullRequest=3998&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3998&metric=coverage&view=list) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=apache_incubator-iotdb&pullRequest=3998&metric=duplicated_lines_density&view=list) No Duplication information\n\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/921947497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922151903","html_url":"https://github.com/apache/iotdb/pull/3918#issuecomment-922151903","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3918","id":922151903,"node_id":"IC_kwDOCXnElM429uvf","user":{"login":"qiaojialin","id":7240743,"node_id":"MDQ6VXNlcjcyNDA3NDM=","avatar_url":"https://avatars.githubusercontent.com/u/7240743?v=4","gravatar_id":"","url":"https://api.github.com/users/qiaojialin","html_url":"https://github.com/qiaojialin","followers_url":"https://api.github.com/users/qiaojialin/followers","following_url":"https://api.github.com/users/qiaojialin/following{/other_user}","gists_url":"https://api.github.com/users/qiaojialin/gists{/gist_id}","starred_url":"https://api.github.com/users/qiaojialin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qiaojialin/subscriptions","organizations_url":"https://api.github.com/users/qiaojialin/orgs","repos_url":"https://api.github.com/users/qiaojialin/repos","events_url":"https://api.github.com/users/qiaojialin/events{/privacy}","received_events_url":"https://api.github.com/users/qiaojialin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-18T01:04:09Z","updated_at":"2021-09-18T01:04:09Z","author_association":"MEMBER","body":"> Hi, it seems that this change breaks the backward compatibility?\r\n> \r\n> Let's say we have 3 time series: root.sg.d.s1, root.sg.d.s2, and root.sg.d.t.s1.\r\n> \r\n> Before this change, the following query produces a result set that contains all of the time series.\r\n> \r\n> ```\r\n> select * from root.sg.d\r\n> ```\r\n> \r\n> After this change, it produces only root.sg.d.s1 and root.sg.d.s2, right?\r\n\r\nYes, after this change, ```select * from root.sg.d``` will be ```select ** from root.sg.d```","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922151903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922155114","html_url":"https://github.com/apache/iotdb/pull/3999#issuecomment-922155114","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3999","id":922155114,"node_id":"IC_kwDOCXnElM429vhq","user":{"login":"neuyilan","id":6237070,"node_id":"MDQ6VXNlcjYyMzcwNzA=","avatar_url":"https://avatars.githubusercontent.com/u/6237070?v=4","gravatar_id":"","url":"https://api.github.com/users/neuyilan","html_url":"https://github.com/neuyilan","followers_url":"https://api.github.com/users/neuyilan/followers","following_url":"https://api.github.com/users/neuyilan/following{/other_user}","gists_url":"https://api.github.com/users/neuyilan/gists{/gist_id}","starred_url":"https://api.github.com/users/neuyilan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neuyilan/subscriptions","organizations_url":"https://api.github.com/users/neuyilan/orgs","repos_url":"https://api.github.com/users/neuyilan/repos","events_url":"https://api.github.com/users/neuyilan/events{/privacy}","received_events_url":"https://api.github.com/users/neuyilan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-18T01:24:49Z","updated_at":"2021-09-18T01:24:49Z","author_association":"MEMBER","body":"Thanks for your effort, I find you have post https://github.com/apache/iotdb/pull/3879 in the master branch, however, when I use benchmark insertRecords interface with auto-create schame to test, the cluster is stuck and no timeseries is inserted.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922155114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922156796","html_url":"https://github.com/apache/iotdb/pull/3983#issuecomment-922156796","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3983","id":922156796,"node_id":"IC_kwDOCXnElM429v78","user":{"login":"yschengzi","id":87161145,"node_id":"MDQ6VXNlcjg3MTYxMTQ1","avatar_url":"https://avatars.githubusercontent.com/u/87161145?v=4","gravatar_id":"","url":"https://api.github.com/users/yschengzi","html_url":"https://github.com/yschengzi","followers_url":"https://api.github.com/users/yschengzi/followers","following_url":"https://api.github.com/users/yschengzi/following{/other_user}","gists_url":"https://api.github.com/users/yschengzi/gists{/gist_id}","starred_url":"https://api.github.com/users/yschengzi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yschengzi/subscriptions","organizations_url":"https://api.github.com/users/yschengzi/orgs","repos_url":"https://api.github.com/users/yschengzi/repos","events_url":"https://api.github.com/users/yschengzi/events{/privacy}","received_events_url":"https://api.github.com/users/yschengzi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-18T01:36:30Z","updated_at":"2021-09-18T01:42:20Z","author_association":"CONTRIBUTOR","body":"> You can revert the commit [9ba55d9](https://github.com/apache/iotdb/commit/9ba55d99d1439a4dab1623c9b4e896ee266f4aa6) and [c3a8735](https://github.com/apache/iotdb/commit/c3a8735356513bae022475da0dce4c8017610d6e) by `git revert`...\r\n\r\nokk, i wil do it now","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922156796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922159993","html_url":"https://github.com/apache/iotdb/pull/3993#issuecomment-922159993","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3993","id":922159993,"node_id":"IC_kwDOCXnElM429wt5","user":{"login":"chengjianyun","id":6150814,"node_id":"MDQ6VXNlcjYxNTA4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6150814?v=4","gravatar_id":"","url":"https://api.github.com/users/chengjianyun","html_url":"https://github.com/chengjianyun","followers_url":"https://api.github.com/users/chengjianyun/followers","following_url":"https://api.github.com/users/chengjianyun/following{/other_user}","gists_url":"https://api.github.com/users/chengjianyun/gists{/gist_id}","starred_url":"https://api.github.com/users/chengjianyun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengjianyun/subscriptions","organizations_url":"https://api.github.com/users/chengjianyun/orgs","repos_url":"https://api.github.com/users/chengjianyun/repos","events_url":"https://api.github.com/users/chengjianyun/events{/privacy}","received_events_url":"https://api.github.com/users/chengjianyun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-18T01:58:09Z","updated_at":"2021-09-18T01:58:09Z","author_association":"CONTRIBUTOR","body":"Please help merge the PR to unblock most of IT.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922159993/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922162650","html_url":"https://github.com/apache/iotdb/pull/3915#issuecomment-922162650","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3915","id":922162650,"node_id":"IC_kwDOCXnElM429xXa","user":{"login":"cigarl","id":44458757,"node_id":"MDQ6VXNlcjQ0NDU4NzU3","avatar_url":"https://avatars.githubusercontent.com/u/44458757?v=4","gravatar_id":"","url":"https://api.github.com/users/cigarl","html_url":"https://github.com/cigarl","followers_url":"https://api.github.com/users/cigarl/followers","following_url":"https://api.github.com/users/cigarl/following{/other_user}","gists_url":"https://api.github.com/users/cigarl/gists{/gist_id}","starred_url":"https://api.github.com/users/cigarl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cigarl/subscriptions","organizations_url":"https://api.github.com/users/cigarl/orgs","repos_url":"https://api.github.com/users/cigarl/repos","events_url":"https://api.github.com/users/cigarl/events{/privacy}","received_events_url":"https://api.github.com/users/cigarl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-18T02:16:26Z","updated_at":"2021-09-18T02:16:26Z","author_association":"CONTRIBUTOR","body":"apply spotless to trigger _Checks_","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922162650/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922208942","html_url":"https://github.com/apache/iotdb/pull/4002#issuecomment-922208942","issue_url":"https://api.github.com/repos/apache/iotdb/issues/4002","id":922208942,"node_id":"IC_kwDOCXnElM4298qu","user":{"login":"HTHou","id":25913899,"node_id":"MDQ6VXNlcjI1OTEzODk5","avatar_url":"https://avatars.githubusercontent.com/u/25913899?v=4","gravatar_id":"","url":"https://api.github.com/users/HTHou","html_url":"https://github.com/HTHou","followers_url":"https://api.github.com/users/HTHou/followers","following_url":"https://api.github.com/users/HTHou/following{/other_user}","gists_url":"https://api.github.com/users/HTHou/gists{/gist_id}","starred_url":"https://api.github.com/users/HTHou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HTHou/subscriptions","organizations_url":"https://api.github.com/users/HTHou/orgs","repos_url":"https://api.github.com/users/HTHou/repos","events_url":"https://api.github.com/users/HTHou/events{/privacy}","received_events_url":"https://api.github.com/users/HTHou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-18T05:56:47Z","updated_at":"2021-09-18T05:56:47Z","author_association":"CONTRIBUTOR","body":"Consider add some user guide of `unload` and `remove` command?","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922208942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922232325","html_url":"https://github.com/apache/iotdb/pull/4002#issuecomment-922232325","issue_url":"https://api.github.com/repos/apache/iotdb/issues/4002","id":922232325,"node_id":"IC_kwDOCXnElM42-CYF","user":{"login":"HeimingZ","id":43991780,"node_id":"MDQ6VXNlcjQzOTkxNzgw","avatar_url":"https://avatars.githubusercontent.com/u/43991780?v=4","gravatar_id":"","url":"https://api.github.com/users/HeimingZ","html_url":"https://github.com/HeimingZ","followers_url":"https://api.github.com/users/HeimingZ/followers","following_url":"https://api.github.com/users/HeimingZ/following{/other_user}","gists_url":"https://api.github.com/users/HeimingZ/gists{/gist_id}","starred_url":"https://api.github.com/users/HeimingZ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeimingZ/subscriptions","organizations_url":"https://api.github.com/users/HeimingZ/orgs","repos_url":"https://api.github.com/users/HeimingZ/repos","events_url":"https://api.github.com/users/HeimingZ/events{/privacy}","received_events_url":"https://api.github.com/users/HeimingZ/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-18T07:25:56Z","updated_at":"2021-09-18T07:25:56Z","author_association":"CONTRIBUTOR","body":"> Consider add some user guide of `unload` and `remove` command?\r\n\r\nAlready modify user guide 'Load External TsFile Tool' under 'System Tools'. :)","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922232325/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922415636","html_url":"https://github.com/apache/iotdb/pull/3995#issuecomment-922415636","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3995","id":922415636,"node_id":"IC_kwDOCXnElM42-vIU","user":{"login":"HTHou","id":25913899,"node_id":"MDQ6VXNlcjI1OTEzODk5","avatar_url":"https://avatars.githubusercontent.com/u/25913899?v=4","gravatar_id":"","url":"https://api.github.com/users/HTHou","html_url":"https://github.com/HTHou","followers_url":"https://api.github.com/users/HTHou/followers","following_url":"https://api.github.com/users/HTHou/following{/other_user}","gists_url":"https://api.github.com/users/HTHou/gists{/gist_id}","starred_url":"https://api.github.com/users/HTHou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HTHou/subscriptions","organizations_url":"https://api.github.com/users/HTHou/orgs","repos_url":"https://api.github.com/users/HTHou/repos","events_url":"https://api.github.com/users/HTHou/events{/privacy}","received_events_url":"https://api.github.com/users/HTHou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-19T04:59:52Z","updated_at":"2021-09-19T04:59:52Z","author_association":"CONTRIBUTOR","body":"I just come up with another idea on the train. :) Is it necessary to maintain bitmaps in normal TVList? \r\n\r\nThe insertTablet logic in TVList is actually calls the System.arrayCopy to copy the timestamps and values array into TVList. If we check the bitmap passed from outside here and split the arrays accordingly, skip copying the range that the bitmap marked. Then we don’t even need to change the sort, encoding and query logic anymore. \r\n\r\nHow do you think? Should we do some experiment to compare the current implement in this pr and the idea above?","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922415636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922480378","html_url":"https://github.com/apache/iotdb/pull/3995#issuecomment-922480378","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3995","id":922480378,"node_id":"IC_kwDOCXnElM42--76","user":{"login":"HeimingZ","id":43991780,"node_id":"MDQ6VXNlcjQzOTkxNzgw","avatar_url":"https://avatars.githubusercontent.com/u/43991780?v=4","gravatar_id":"","url":"https://api.github.com/users/HeimingZ","html_url":"https://github.com/HeimingZ","followers_url":"https://api.github.com/users/HeimingZ/followers","following_url":"https://api.github.com/users/HeimingZ/following{/other_user}","gists_url":"https://api.github.com/users/HeimingZ/gists{/gist_id}","starred_url":"https://api.github.com/users/HeimingZ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeimingZ/subscriptions","organizations_url":"https://api.github.com/users/HeimingZ/orgs","repos_url":"https://api.github.com/users/HeimingZ/repos","events_url":"https://api.github.com/users/HeimingZ/events{/privacy}","received_events_url":"https://api.github.com/users/HeimingZ/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-19T14:12:44Z","updated_at":"2021-09-19T14:12:44Z","author_association":"CONTRIBUTOR","body":"> I just come up with another idea on the train. :) Is it necessary to maintain bitmaps in normal TVList?\r\n> \r\n> The insertTablet logic in TVList is actually calls the System.arrayCopy to copy the timestamps and values array into TVList. If we check the bitmap passed from outside here and split the arrays accordingly, skip copying the range that the bitmap marked. Then we don’t even need to change the sort, encoding and query logic anymore.\r\n> \r\n> How do you think? Should we do some experiment to compare the current implement in this pr and the idea above?\r\n\r\nI think it is ok to remove bitmaps in normal TVList, the write performance may a little bit worse than current implement, but more space is saved and the sort performance is much more better.\r\n\r\nShould I implement this in another PR?","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922480378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922574669","html_url":"https://github.com/apache/iotdb/pull/3995#issuecomment-922574669","issue_url":"https://api.github.com/repos/apache/iotdb/issues/3995","id":922574669,"node_id":"IC_kwDOCXnElM42_V9N","user":{"login":"HTHou","id":25913899,"node_id":"MDQ6VXNlcjI1OTEzODk5","avatar_url":"https://avatars.githubusercontent.com/u/25913899?v=4","gravatar_id":"","url":"https://api.github.com/users/HTHou","html_url":"https://github.com/HTHou","followers_url":"https://api.github.com/users/HTHou/followers","following_url":"https://api.github.com/users/HTHou/following{/other_user}","gists_url":"https://api.github.com/users/HTHou/gists{/gist_id}","starred_url":"https://api.github.com/users/HTHou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HTHou/subscriptions","organizations_url":"https://api.github.com/users/HTHou/orgs","repos_url":"https://api.github.com/users/HTHou/repos","events_url":"https://api.github.com/users/HTHou/events{/privacy}","received_events_url":"https://api.github.com/users/HTHou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-20T00:59:36Z","updated_at":"2021-09-20T00:59:36Z","author_association":"CONTRIBUTOR","body":"How do you think? @qiaojialin ","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/922574669/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/923837546","html_url":"https://github.com/apache/iotdb/pull/4004#issuecomment-923837546","issue_url":"https://api.github.com/repos/apache/iotdb/issues/4004","id":923837546,"node_id":"IC_kwDOCXnElM43EKRq","user":{"login":"ericpai","id":3821212,"node_id":"MDQ6VXNlcjM4MjEyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/3821212?v=4","gravatar_id":"","url":"https://api.github.com/users/ericpai","html_url":"https://github.com/ericpai","followers_url":"https://api.github.com/users/ericpai/followers","following_url":"https://api.github.com/users/ericpai/following{/other_user}","gists_url":"https://api.github.com/users/ericpai/gists{/gist_id}","starred_url":"https://api.github.com/users/ericpai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ericpai/subscriptions","organizations_url":"https://api.github.com/users/ericpai/orgs","repos_url":"https://api.github.com/users/ericpai/repos","events_url":"https://api.github.com/users/ericpai/events{/privacy}","received_events_url":"https://api.github.com/users/ericpai/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-21T10:16:01Z","updated_at":"2021-09-21T10:16:01Z","author_association":"MEMBER","body":"@SteveYurongSu This PR is ready for reviewing, thanks.","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/923837546/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/924501466","html_url":"https://github.com/apache/iotdb/pull/4004#issuecomment-924501466","issue_url":"https://api.github.com/repos/apache/iotdb/issues/4004","id":924501466,"node_id":"IC_kwDOCXnElM43GsXa","user":{"login":"SteveYurongSu","id":30497621,"node_id":"MDQ6VXNlcjMwNDk3NjIx","avatar_url":"https://avatars.githubusercontent.com/u/30497621?v=4","gravatar_id":"","url":"https://api.github.com/users/SteveYurongSu","html_url":"https://github.com/SteveYurongSu","followers_url":"https://api.github.com/users/SteveYurongSu/followers","following_url":"https://api.github.com/users/SteveYurongSu/following{/other_user}","gists_url":"https://api.github.com/users/SteveYurongSu/gists{/gist_id}","starred_url":"https://api.github.com/users/SteveYurongSu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SteveYurongSu/subscriptions","organizations_url":"https://api.github.com/users/SteveYurongSu/orgs","repos_url":"https://api.github.com/users/SteveYurongSu/repos","events_url":"https://api.github.com/users/SteveYurongSu/events{/privacy}","received_events_url":"https://api.github.com/users/SteveYurongSu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-22T01:11:30Z","updated_at":"2021-09-22T01:11:30Z","author_association":"MEMBER","body":"> @SteveYurongSu This PR is ready for reviewing, thanks.\r\n\r\nThanks for your contribution. I will check it ASAP :D","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/924501466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/924502285","html_url":"https://github.com/apache/iotdb/pull/4004#issuecomment-924502285","issue_url":"https://api.github.com/repos/apache/iotdb/issues/4004","id":924502285,"node_id":"IC_kwDOCXnElM43GskN","user":{"login":"SteveYurongSu","id":30497621,"node_id":"MDQ6VXNlcjMwNDk3NjIx","avatar_url":"https://avatars.githubusercontent.com/u/30497621?v=4","gravatar_id":"","url":"https://api.github.com/users/SteveYurongSu","html_url":"https://github.com/SteveYurongSu","followers_url":"https://api.github.com/users/SteveYurongSu/followers","following_url":"https://api.github.com/users/SteveYurongSu/following{/other_user}","gists_url":"https://api.github.com/users/SteveYurongSu/gists{/gist_id}","starred_url":"https://api.github.com/users/SteveYurongSu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SteveYurongSu/subscriptions","organizations_url":"https://api.github.com/users/SteveYurongSu/orgs","repos_url":"https://api.github.com/users/SteveYurongSu/repos","events_url":"https://api.github.com/users/SteveYurongSu/events{/privacy}","received_events_url":"https://api.github.com/users/SteveYurongSu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-22T01:13:32Z","updated_at":"2021-09-22T01:13:32Z","author_association":"MEMBER","body":"Disscusion: #3992 ","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/924502285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/924555947","html_url":"https://github.com/apache/iotdb/pull/4007#issuecomment-924555947","issue_url":"https://api.github.com/repos/apache/iotdb/issues/4007","id":924555947,"node_id":"IC_kwDOCXnElM43G5qr","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-22T03:39:40Z","updated_at":"2021-09-22T03:39:40Z","author_association":"NONE","body":"\n[![Coverage Status](https://coveralls.io/builds/42982888/badge)](https://coveralls.io/builds/42982888)\n\nCoverage decreased (-0.03%) to 67.398% when pulling **f40bd92a19b611db6d61502f03f2e4e4e24d9652 on jamber001:IOTDB-1718** into **c75a71f76c10a3f79b905df3daeef5429704a7f7 on apache:master**.\n","reactions":{"url":"https://api.github.com/repos/apache/iotdb/issues/comments/924555947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]