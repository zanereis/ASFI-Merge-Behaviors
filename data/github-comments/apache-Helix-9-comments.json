[{"url":"https://api.github.com/repos/apache/helix/issues/comments/571727613","html_url":"https://github.com/apache/helix/pull/670#issuecomment-571727613","issue_url":"https://api.github.com/repos/apache/helix/issues/670","id":571727613,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MTcyNzYxMw==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-07T19:10:23Z","updated_at":"2020-01-07T19:10:23Z","author_association":"CONTRIBUTOR","body":"LGTM. +1","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/571727613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/571894621","html_url":"https://github.com/apache/helix/pull/642#issuecomment-571894621","issue_url":"https://api.github.com/repos/apache/helix/issues/642","id":571894621,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MTg5NDYyMQ==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-08T05:15:25Z","updated_at":"2020-01-08T05:15:25Z","author_association":"CONTRIBUTOR","body":"Test results:\r\n\r\n[INFO] Results:\r\n[INFO]\r\n[ERROR] Failures:\r\n[ERROR]   TestAddNodeAfterControllerStart.testDistributed:165 » ThreadTimeout Method org...\r\n[ERROR]   TestJobQueueCleanUp.testJobQueueAutoCleanUp » ThreadTimeout Method org.testng....\r\n[INFO]\r\n[ERROR] Tests run: 896, Failures: 2, Errors: 0, Skipped: 0\r\n[INFO]\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  01:05 h\r\n[INFO] Finished at: 2020-01-07T18:48:16-08:00\r\n\r\n\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.891 s - in org.apache.helix.integration.TestAddNodeAfterControllerStart\r\n[INFO]\r\n[INFO] Results:\r\n[INFO]\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\r\n[INFO]\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  12.397 s\r\n[INFO] Finished at: 2020-01-07T21:02:37-08:00\r\n[INFO] ------------------------------------------------------------------------\r\n\r\n\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.03 s - in org.apache.helix.integration.task.TestJobQueueCleanUp\r\n[INFO]\r\n[INFO] Results:\r\n[INFO]\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\r\n[INFO]\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  14.887 s\r\n[INFO] Finished at: 2020-01-07T21:13:52-08:00\r\n[INFO] ------------------------------------------------------------------------\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/571894621/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/572300360","html_url":"https://github.com/apache/helix/pull/642#issuecomment-572300360","issue_url":"https://api.github.com/repos/apache/helix/issues/642","id":572300360,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjMwMDM2MA==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-08T23:03:51Z","updated_at":"2020-01-08T23:03:51Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @kaisun2000 @jiajunwang \r\n\r\nFinal commit message:\r\n```\r\nThere is zk session race condition in zk helix manager. Zk session may expire and change during handling new session. If the expected session is expired when handling new session, the ephemeral node should NOT be created.\r\n\r\nChange list:\r\n- Change API create() in ZkClient to accept zk sessionId as a parameter. Add a new public API createEphemeral(final String path, final Object data, final String sessionId) to create an ephemeral node by the expected zk session.\r\n- Fire new session events and all events(child/data change events) to right after the first SyncConnected state is received in zk client.\r\n- Filter out stale sessions in handling new session.\r\n- Add multiple unit tests to cover the cases.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/572300360/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/572410639","html_url":"https://github.com/apache/helix/pull/642#issuecomment-572410639","issue_url":"https://api.github.com/repos/apache/helix/issues/642","id":572410639,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjQxMDYzOQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T06:26:51Z","updated_at":"2020-01-09T06:26:51Z","author_association":"CONTRIBUTOR","body":"TestAddNodeAfterControllerStart is rarely seen in the failure test list. Could you please run this test multiple times (use the scripts/runSingleTest.sh), or the whole mvn tests again if possible to ensure we are not introducing any problem with the change?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/572410639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/572419383","html_url":"https://github.com/apache/helix/pull/642#issuecomment-572419383","issue_url":"https://api.github.com/repos/apache/helix/issues/642","id":572419383,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjQxOTM4Mw==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T06:56:53Z","updated_at":"2020-01-09T07:09:06Z","author_association":"CONTRIBUTOR","body":"I did run this test 10 times which all passed when I was surprised to see\r\nthis failure first time. Let me check the result of my recent run tonight.\r\n\r\nAll tests pass.\r\n\r\n[INFO] Tests run: 896, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3,408.61 s - in TestSuite\r\n[INFO]\r\n[INFO] Results:\r\n[INFO]\r\n[INFO] Tests run: 896, Failures: 0, Errors: 0, Skipped: 0\r\n[INFO]\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  56:53 min\r\n[INFO] Finished at: 2020-01-08T19:52:39-08:00\r\n[INFO] ------------------------------------------------------------------------\r\n\r\nAlso passed 10 times TestAddNodeAfterControllerStart.testDistributed.\r\n\r\n\r\nOn Wed, Jan 8, 2020 at 10:26 PM Jiajun Wang <notifications@github.com>\r\nwrote:\r\n\r\n> TestAddNodeAfterControllerStart is rarely seen in the failure test list.\r\n> Could you please run this test multiple times (use the\r\n> scripts/runSingleTest.sh), or the whole mvn tests again if possible to\r\n> ensure we are not introducing any problem with the change?\r\n>\r\n\r\n>","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/572419383/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/572785205","html_url":"https://github.com/apache/helix/pull/677#issuecomment-572785205","issue_url":"https://api.github.com/repos/apache/helix/issues/677","id":572785205,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mjc4NTIwNQ==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T22:25:11Z","updated_at":"2020-01-09T22:25:11Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang \r\n\r\nCommit message:\r\n```\r\nzkClient's getSessionId() could bring in session race condition: session A is connected in waitUntilConnected, but when zkClient.getSession() is called in zkHelixManager, session A might be already expired and so zkClient.getSession() gets session B. This session ID is critical for the firs time handling new session after zkclient is created in zkHelixManager.\r\n\r\nSolution: add a new method waitForEstablishedSession() to wait for SynCconnected state and return the session id before unlocking the eventLock.\r\n\r\nChange list:\r\n- Add a new method waitForEstablishedSession()\r\n- Add a unit test to cover the new method.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/572785205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/572789322","html_url":"https://github.com/apache/helix/pull/679#issuecomment-572789322","issue_url":"https://api.github.com/repos/apache/helix/issues/679","id":572789322,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mjc4OTMyMg==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T22:38:04Z","updated_at":"2020-01-09T22:38:04Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @pkuwm ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/572789322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/572797351","html_url":"https://github.com/apache/helix/pull/662#issuecomment-572797351","issue_url":"https://api.github.com/repos/apache/helix/issues/662","id":572797351,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mjc5NzM1MQ==","user":{"login":"junkaixue","id":6695617,"node_id":"MDQ6VXNlcjY2OTU2MTc=","avatar_url":"https://avatars.githubusercontent.com/u/6695617?v=4","gravatar_id":"","url":"https://api.github.com/users/junkaixue","html_url":"https://github.com/junkaixue","followers_url":"https://api.github.com/users/junkaixue/followers","following_url":"https://api.github.com/users/junkaixue/following{/other_user}","gists_url":"https://api.github.com/users/junkaixue/gists{/gist_id}","starred_url":"https://api.github.com/users/junkaixue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junkaixue/subscriptions","organizations_url":"https://api.github.com/users/junkaixue/orgs","repos_url":"https://api.github.com/users/junkaixue/repos","events_url":"https://api.github.com/users/junkaixue/events{/privacy}","received_events_url":"https://api.github.com/users/junkaixue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T23:04:27Z","updated_at":"2020-01-09T23:04:27Z","author_association":"CONTRIBUTOR","body":"Logically, it sounds good to me. But I think this is not the majority contribution in LeaderSwitch when controller is trying acquiring leadership, right? \r\n\r\nHow much it reduces the overhead?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/572797351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/572805514","html_url":"https://github.com/apache/helix/pull/662#issuecomment-572805514","issue_url":"https://api.github.com/repos/apache/helix/issues/662","id":572805514,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjgwNTUxNA==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T23:33:02Z","updated_at":"2020-01-10T00:07:10Z","author_association":"CONTRIBUTOR","body":"> Logically, it sounds good to me. But I think this is not the majority contribution in LeaderSwitch when controller is trying acquiring leadership, right?\r\n> \r\n> How much it reduces the overhead?\r\n\r\nNo, the optimization is only for leader -> standby, one data point shows a 10X latency improvement (from 1700ms -> 170ms); For optimizing the other part of the story: standby -> leader, there're different options, I will explore them later in different PRs. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/572805514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/572834404","html_url":"https://github.com/apache/helix/issues/322#issuecomment-572834404","issue_url":"https://api.github.com/repos/apache/helix/issues/322","id":572834404,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjgzNDQwNA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T01:37:06Z","updated_at":"2020-01-10T01:37:06Z","author_association":"CONTRIBUTOR","body":"@alirezazamani, I think this one has been fixed. Could you please confirm and close it?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/572834404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/572849996","html_url":"https://github.com/apache/helix/pull/677#issuecomment-572849996","issue_url":"https://api.github.com/repos/apache/helix/issues/677","id":572849996,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mjg0OTk5Ng==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T02:52:14Z","updated_at":"2020-01-10T02:52:14Z","author_association":"CONTRIBUTOR","body":"Overall, let me summarize the history, the invariant which should lead to a working solution and where can be further improved. \r\n\r\nThe history was about auto-reconnect. Here, ZkClient contains a connection object and connection object wrap a native Zookeeper instance (client object representing a session). ZkClient also has its own eventthread (Note this is different from Zookeeper instance eventthread. ZkClient pass its process() to native Zookeeper and this process() would run on native Zookeeper event thread processing state change and data change notification, and put the event of state change or data change to ZkClient event thread for processing. ZkClient further provides auto-reconnect functionality as Zookeeper client can have disconnected state and reconnect later automatically. However, if Zookeeper client can't reconnect in time, it would be expired by the server. This is why ZkClient would do auto-reconnect. \r\n\r\nHere, the invariants are the following:\r\n1/ Each native Zookeeper object conceptually denotes one session, would have only one session ID, it would not change over time.\r\n2/ The Zookeeper object would only get its session ID the first time connected (SynConnected state change notification arrives) Otherwise, you would see the sessionID as 0.\r\n\r\nThis invariant would be important for us to reason the correctness of the code. \r\n\r\nSo reconnect only happens when sessionExpired event notification received and a new Zookeeper object would be created.\r\n\r\nNote before this fix, the bug lies in the fact that an event thrown by zookeeper native thread would be later processed by ZkClient event thread. By the time ZkClient event thread process the event, they can happen when new session (thus new Zookeeper object) is on. \r\n\r\nThe general idea is to add the sessionID information with the event running on ZKClient event thread. Thus they can detect stale session and act accordingly. (Mainly for ephemeral node creation case)\r\n\r\nBefore this batch of change, the handleNewSession() callback from ZKHelixManager would be called when sessionExpired notification delivered to the ZKClient. The thinking is that because auto-connect would happen anyway. \r\nIn this batch of change, we need to pass the sesssionID to handleNewSession(). Thus, we can not call handleNewSession() immediately for the reason that before the first synconnect notification to the new session arrives, there is no valid sessionID. \r\nThus, we made the change to deliver handleNewSession() only when the synconnected is delivered for the new Zookeeper object when reconnect happens. \r\n\r\nAll the above are done before this change. \r\n\r\nHowever, there is still an issue. The first time when zkClient is created in the ZKHelixManager, handleNewSession would only be subscribed a little bit later. There is a possibility that this handleNewSession would be later than the first SynConnect get delivered. That is why waitForEstablishedSession() is added in this diff. \r\n\r\nActually, the alternative approach can be that creating ZkClient and add the subscriber (handleNewSession in this case) can be an atomic operation. That way, it would miss the first handleNewSession. This can be a potential better alternative. \r\n \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/572849996/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/573150744","html_url":"https://github.com/apache/helix/issues/322#issuecomment-573150744","issue_url":"https://api.github.com/repos/apache/helix/issues/322","id":573150744,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzE1MDc0NA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T18:25:05Z","updated_at":"2020-01-10T18:25:05Z","author_association":"CONTRIBUTOR","body":"Confirmed with @alirezazamani offline.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/573150744/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/573813357","html_url":"https://github.com/apache/helix/pull/673#issuecomment-573813357","issue_url":"https://api.github.com/repos/apache/helix/issues/673","id":573813357,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzgxMzM1Nw==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T18:50:17Z","updated_at":"2020-01-13T18:50:17Z","author_association":"CONTRIBUTOR","body":"What is this test result from? Did you run the test on the helix-lock module or helix-core?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/573813357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/573820490","html_url":"https://github.com/apache/helix/pull/673#issuecomment-573820490","issue_url":"https://api.github.com/repos/apache/helix/issues/673","id":573820490,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzgyMDQ5MA==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T19:06:43Z","updated_at":"2020-01-13T19:06:43Z","author_association":"CONTRIBUTOR","body":"> What is this test result from? Did you run the test on the helix-lock module or helix-core?\r\n\r\nYeah, this is helix-core. Just wanted to show that the new module doesn't break it. But you're right. It doesn't test new module. We will have test when we add implementation code in lock module.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/573820490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/573918795","html_url":"https://github.com/apache/helix/issues/680#issuecomment-573918795","issue_url":"https://api.github.com/repos/apache/helix/issues/680","id":573918795,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzkxODc5NQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T23:14:39Z","updated_at":"2020-01-13T23:14:39Z","author_association":"CONTRIBUTOR","body":"I had some discussion with Jack offline. My take away is that the AutoRebalanceStrategy with OnlineOffline state model might work for Pinot for now. But it has some limitations and may impact future changes. For example, this strategy is not rack-aware. As for the OnlineOffline state model, once there are more than 2 replicas, we will have multiple online replicas. I assume it might cause issues.\r\n\r\nIn addition, I'm not sure what does \"simplified\" mean for Pinot? The CrushEd algorithm is internally more complicated, but it is more stable and performs better than the legacy strategy. So eventually, the CrushEd strategy should help to simplify the application code more. I remember it is part of the reason we decided to go with the CrushEd strategy.\r\n\r\n@dasahcc @lei-xia Could you please also take a look in case I missed anything.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/573918795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/573929154","html_url":"https://github.com/apache/helix/issues/680#issuecomment-573929154","issue_url":"https://api.github.com/repos/apache/helix/issues/680","id":573929154,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzkyOTE1NA==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T23:48:29Z","updated_at":"2020-01-13T23:48:29Z","author_association":"MEMBER","body":"Thanks Jiajun for the response. Pinot doesn't need rack-awareness for\ncontrollers since they are stateless and each partition (which is a\npinot-table) is independent.\n\nOut of curiosity, what is the problem with OnlineOffline model if there are\nmore than 2 replicas?\n\nCrushEd implementation throws an illegal exception even though the scenario\nis valid and happens every time at startup. We don't see this behavior with\nAutoRebalanceStrategy.\n\n\nOn Mon, Jan 13, 2020 at 3:14 PM Jiajun Wang <notifications@github.com>\nwrote:\n\n> I had some discussion with Jack offline. My take away is that the\n> AutoRebalanceStrategy with OnlineOffline state model might work for Pinot\n> for now. But it has some limitations and may impact future changes. For\n> example, this strategy is not rack-aware. As for the OnlineOffline state\n> model, once there are more than 2 replicas, we will have multiple online\n> replicas. I assume it might cause issues.\n>\n> In addition, I'm not sure what does \"simplified\" mean for Pinot? The\n> CrushEd algorithm is internally more complicated, but it is more stable and\n> performs better than the legacy strategy. So eventually, the CrushEd\n> strategy should help to simplify the application code more. I remember it\n> is part of the reason we decided to go with the CrushEd strategy.\n>\n> @dasahcc <https://github.com/dasahcc> @lei-xia\n> <https://github.com/lei-xia> Could you please also take a look in case I\n> missed anything.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/helix/issues/680?email_source=notifications&email_token=AAGPWZ2KICDEM7RAEEAQB6TQ5TYV7A5CNFSM4KGKEUY2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEI2U4SY#issuecomment-573918795>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAGPWZYNXLISMY3OPK5DR7DQ5TYV7ANCNFSM4KGKEUYQ>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/573929154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/573936705","html_url":"https://github.com/apache/helix/issues/680#issuecomment-573936705","issue_url":"https://api.github.com/repos/apache/helix/issues/680","id":573936705,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzkzNjcwNQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T00:14:44Z","updated_at":"2020-01-14T00:14:44Z","author_association":"CONTRIBUTOR","body":"Hi @kishoreg,\r\n\r\nI agree with the first point, that's why I think there is no problem to switch for now.\r\n\r\nRegarding the OnlineOffline state model, Helix will try to bring all the replicas to the topstate \"online\". But what Pinot needs is only one topstate replica, right? That is the thing in my mind. Please correct me if I misunderstand the usage.\r\n\r\nI also took a quick look at the illegal exception thread. On my understanding, the error log happens due to a lack of participants during the initial process. Once there are enough participants to become alive, the controller will be able to rebalance automatically. The only difference between CrushEd and AutoRebalanceStrategy is that CrushEd complains about it and print an error log, while the AutoRebalanceStrategy silently returns an empty mapping without printing error log.\r\nGiven this, it won't cause any trouble. Could you please elaborate on the valid scenario that you mentioned? If we are actually talking about different scenarios, we can help to revisit the logic and see if there is any issue in the CrushEd strategy.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/573936705/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/573938432","html_url":"https://github.com/apache/helix/issues/680#issuecomment-573938432","issue_url":"https://api.github.com/repos/apache/helix/issues/680","id":573938432,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzkzODQzMg==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T00:21:17Z","updated_at":"2020-01-14T00:21:17Z","author_association":"MEMBER","body":"The algorithm should not throw an exception, that’s not part of the\nstrategy interface/contract and is not consistent with other strategies.\n\nThrowing illegal state exception is not very useful.\n\nOn Mon, Jan 13, 2020 at 4:14 PM Jiajun Wang <notifications@github.com>\nwrote:\n\n> Hi @kishoreg <https://github.com/kishoreg>,\n>\n> I agree with the first point, that's why I think there is no problem to\n> switch for now.\n>\n> Regarding the OnlineOffline state model, Helix will try to bring all the\n> replicas to the topstate \"online\". But what Pinot needs is only one\n> topstate replica, right? That is the thing in my mind. Please correct me if\n> I misunderstand the usage.\n>\n> I also took a quick look at the illegal exception thread. On my\n> understanding, the error log happens due to a lack of participants during\n> the initial process. Once there are enough participants to become alive,\n> the controller will be able to rebalance automatically. The only difference\n> between CrushEd and AutoRebalanceStrategy is that CrushEd complains about\n> it and print an error log, while the AutoRebalanceStrategy silently returns\n> an empty mapping without printing error log.\n> Given this, it won't cause any trouble. Could you please elaborate on the\n> valid scenario that you mentioned? If we are actually talking about\n> different scenarios, we can help to revisit the logic and see if there is\n> any issue in the CrushEd strategy.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/helix/issues/680?email_source=notifications&email_token=AAGPWZ542EKWAAW3XNWDZJTQ5T7XJA5CNFSM4KGKEUY2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEI2ZIQI#issuecomment-573936705>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAGPWZ65NGRJWEQH2IOZF6LQ5T7XJANCNFSM4KGKEUYQ>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/573938432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/573941576","html_url":"https://github.com/apache/helix/issues/680#issuecomment-573941576","issue_url":"https://api.github.com/repos/apache/helix/issues/680","id":573941576,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mzk0MTU3Ng==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T00:33:37Z","updated_at":"2020-01-14T00:33:37Z","author_association":"CONTRIBUTOR","body":"The reason for this Exception, as far as I can remember, is to terminate the pipeline if the rebalancer cannot calculate the new mapping. Otherwise, the later stages will execute based on an incomplete or even empty mapping. This could be dangerous.\r\nBut I agree that we should be able to handle the empty cluster case more gracefully. In this case, an empty mapping is the only option that the rebalancer can return. Let me talk with the team at tomorrow's standup meeting.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/573941576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/574404289","html_url":"https://github.com/apache/helix/pull/673#issuecomment-574404289","issue_url":"https://api.github.com/repos/apache/helix/issues/673","id":574404289,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDQwNDI4OQ==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T22:28:44Z","updated_at":"2020-01-14T22:28:44Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang \r\nFinal commit message \"Add Helix Lock module\"","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/574404289/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/574442679","html_url":"https://github.com/apache/helix/issues/680#issuecomment-574442679","issue_url":"https://api.github.com/repos/apache/helix/issues/680","id":574442679,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDQ0MjY3OQ==","user":{"login":"jackjlli","id":35080149,"node_id":"MDQ6VXNlcjM1MDgwMTQ5","avatar_url":"https://avatars.githubusercontent.com/u/35080149?v=4","gravatar_id":"","url":"https://api.github.com/users/jackjlli","html_url":"https://github.com/jackjlli","followers_url":"https://api.github.com/users/jackjlli/followers","following_url":"https://api.github.com/users/jackjlli/following{/other_user}","gists_url":"https://api.github.com/users/jackjlli/gists{/gist_id}","starred_url":"https://api.github.com/users/jackjlli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jackjlli/subscriptions","organizations_url":"https://api.github.com/users/jackjlli/orgs","repos_url":"https://api.github.com/users/jackjlli/repos","events_url":"https://api.github.com/users/jackjlli/events{/privacy}","received_events_url":"https://api.github.com/users/jackjlli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T00:43:12Z","updated_at":"2020-01-15T00:43:12Z","author_association":"MEMBER","body":"From the users perspective, the exception shouldn't be thrown at the first place because it's misleading to the users that they thought they've done sth wrong. \r\nIt'd be good to better handle this scenario by avoiding any exception when starting.\r\n\r\nAnother dimension is that all the algorithm behaviors should be uniformed.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/574442679/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/574476131","html_url":"https://github.com/apache/helix/pull/557#issuecomment-574476131","issue_url":"https://api.github.com/repos/apache/helix/issues/557","id":574476131,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDQ3NjEzMQ==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T03:14:11Z","updated_at":"2020-01-15T03:14:11Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang \r\n\r\n```\r\nWe need to monitor instance utilization in purpose of understanding what the instance capacity is.\r\n\r\nChange list:\r\n- Change instance monitor to update capacity\r\n- Change getAttribute to throw AttributeNotFoundException in DynamicMBeanProvider\r\n- Combine max usage and instance capacity update into one method in cluster status monitor\r\n- Add unit test\r\n```","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/574476131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/574525849","html_url":"https://github.com/apache/helix/pull/558#issuecomment-574525849","issue_url":"https://api.github.com/repos/apache/helix/issues/558","id":574525849,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDUyNTg0OQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T07:06:14Z","updated_at":"2020-01-15T07:06:14Z","author_association":"CONTRIBUTOR","body":"> @kaisun2000 I think Hunter is working on this task now, could you please confirm if this PR is still necessary?\r\n\r\n@kaisun2000 Ping : )","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/574525849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/574783546","html_url":"https://github.com/apache/helix/pull/558#issuecomment-574783546","issue_url":"https://api.github.com/repos/apache/helix/issues/558","id":574783546,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDc4MzU0Ng==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T18:10:42Z","updated_at":"2020-01-15T18:10:42Z","author_association":"CONTRIBUTOR","body":"Confirmed with Kai offline, this is no longer needed.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/574783546/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/574786584","html_url":"https://github.com/apache/helix/pull/597#issuecomment-574786584","issue_url":"https://api.github.com/repos/apache/helix/issues/597","id":574786584,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDc4NjU4NA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T18:18:23Z","updated_at":"2020-01-15T18:18:23Z","author_association":"CONTRIBUTOR","body":"@narendly Could help to confirm if we want to do this upgrade? Moreover, I didn't see this item in the ivy file. Not sure if it will become a potential problem?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/574786584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/574809553","html_url":"https://github.com/apache/helix/issues/680#issuecomment-574809553","issue_url":"https://api.github.com/repos/apache/helix/issues/680","id":574809553,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDgwOTU1Mw==","user":{"login":"jackjlli","id":35080149,"node_id":"MDQ6VXNlcjM1MDgwMTQ5","avatar_url":"https://avatars.githubusercontent.com/u/35080149?v=4","gravatar_id":"","url":"https://api.github.com/users/jackjlli","html_url":"https://github.com/jackjlli","followers_url":"https://api.github.com/users/jackjlli/followers","following_url":"https://api.github.com/users/jackjlli/following{/other_user}","gists_url":"https://api.github.com/users/jackjlli/gists{/gist_id}","starred_url":"https://api.github.com/users/jackjlli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jackjlli/subscriptions","organizations_url":"https://api.github.com/users/jackjlli/orgs","repos_url":"https://api.github.com/users/jackjlli/repos","events_url":"https://api.github.com/users/jackjlli/events{/privacy}","received_events_url":"https://api.github.com/users/jackjlli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T19:07:57Z","updated_at":"2020-01-15T19:07:57Z","author_association":"MEMBER","body":"This is the workaround regarding to this issue:\r\nhttps://github.com/apache/incubator-pinot/pull/4985\r\nThe idea is that, before the first Pinot controller full starts up, the leadControllerResource won't turn on FULL-AUTO rebalance strategy.\r\n\r\nWe'll also wait for Helix team to uniform the algorithm behaviors before closing this issue.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/574809553/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/575298525","html_url":"https://github.com/apache/helix/issues/683#issuecomment-575298525","issue_url":"https://api.github.com/repos/apache/helix/issues/683","id":575298525,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTI5ODUyNQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-16T19:07:38Z","updated_at":"2020-01-16T19:09:12Z","author_association":"CONTRIBUTOR","body":"Thanks for reporting the issue. Since there are 2 delete operations, it is possible that the config path delete succeeds but the instance path delete fails. It might be caused by a temporary ZK connection issue or a race condition. The later one may result in a failure in deleting the instance node. In either case, there should be an error log recorded for the initial drop instance call failure.\r\nCould you please check the earlier log and see what's in that original error message to confirm?\r\n\r\nFYI, in our later version 0.8.4, we added a retry logic to resolve the possible race condition. https://github.com/apache/helix/commit/7cc2a830a72b162f6bbf29dcd446cc12ded60cd5","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/575298525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/575307435","html_url":"https://github.com/apache/helix/pull/671#issuecomment-575307435","issue_url":"https://api.github.com/repos/apache/helix/issues/671","id":575307435,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTMwNzQzNQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-16T19:29:03Z","updated_at":"2020-01-16T19:29:03Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/575307435/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/575307730","html_url":"https://github.com/apache/helix/pull/671#issuecomment-575307730","issue_url":"https://api.github.com/repos/apache/helix/issues/671","id":575307730,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTMwNzczMA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-16T19:29:41Z","updated_at":"2020-01-16T19:29:41Z","author_association":"CONTRIBUTOR","body":"Final commit message:\r\n\r\nAdd ZooKeeperAccessor to helix-rest\r\n\r\nIn order to provide basic ZkClient functionalities (CRUD) in helix-rest, we want to add a ZooKeeperAccessor class that supports endpoints like get(), getChildren(), and exists().\r\n\r\nChangelist:\r\n\r\nFix the double-checked locking idiom for byte array ZkBaseDataAccessor\r\nAdd ZooKeeperAccessor\r\nAdd tests\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/575307730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/575406518","html_url":"https://github.com/apache/helix/issues/641#issuecomment-575406518","issue_url":"https://api.github.com/repos/apache/helix/issues/641","id":575406518,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTQwNjUxOA==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-17T00:12:04Z","updated_at":"2020-01-17T00:12:04Z","author_association":"CONTRIBUTOR","body":"Related issues that are needed to fix this issue.\r\n\r\n- https://github.com/apache/helix/issues/643\r\n\r\n- https://github.com/apache/helix/issues/676\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/575406518/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/575539052","html_url":"https://github.com/apache/helix/issues/660#issuecomment-575539052","issue_url":"https://api.github.com/repos/apache/helix/issues/660","id":575539052,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTUzOTA1Mg==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-17T09:07:21Z","updated_at":"2020-01-17T09:07:21Z","author_association":"CONTRIBUTOR","body":"I tried some options. The step one mentioned before is doable. But step two is concerning because of one case. If a new instance joining the cluster at the moment of a leadership switch, we might end up assign nothing to it since the baseline will only assign newly added resources. So before we confirm if there is any real problem, let's just keep the original design that the leadership switch will cause the rebalancer to re-evaluate all partitions assignment.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/575539052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/575819824","html_url":"https://github.com/apache/helix/issues/689#issuecomment-575819824","issue_url":"https://api.github.com/repos/apache/helix/issues/689","id":575819824,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTgxOTgyNA==","user":{"login":"mgao0","id":31704180,"node_id":"MDQ6VXNlcjMxNzA0MTgw","avatar_url":"https://avatars.githubusercontent.com/u/31704180?v=4","gravatar_id":"","url":"https://api.github.com/users/mgao0","html_url":"https://github.com/mgao0","followers_url":"https://api.github.com/users/mgao0/followers","following_url":"https://api.github.com/users/mgao0/following{/other_user}","gists_url":"https://api.github.com/users/mgao0/gists{/gist_id}","starred_url":"https://api.github.com/users/mgao0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgao0/subscriptions","organizations_url":"https://api.github.com/users/mgao0/orgs","repos_url":"https://api.github.com/users/mgao0/repos","events_url":"https://api.github.com/users/mgao0/events{/privacy}","received_events_url":"https://api.github.com/users/mgao0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-17T22:28:04Z","updated_at":"2020-01-17T22:28:04Z","author_association":"CONTRIBUTOR","body":"@jiajunwang ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/575819824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/575820939","html_url":"https://github.com/apache/helix/issues/689#issuecomment-575820939","issue_url":"https://api.github.com/repos/apache/helix/issues/689","id":575820939,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTgyMDkzOQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-17T22:32:37Z","updated_at":"2020-01-17T22:32:37Z","author_association":"CONTRIBUTOR","body":"@mgao0 Thanks.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/575820939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/576025796","html_url":"https://github.com/apache/helix/pull/675#issuecomment-576025796","issue_url":"https://api.github.com/repos/apache/helix/issues/675","id":576025796,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NjAyNTc5Ng==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-19T17:15:15Z","updated_at":"2020-01-19T17:15:15Z","author_association":"NONE","body":"This PR is ready to be merged, approved by @dasahcc.\r\n\r\nFinal Commit Message:\r\nTitle:\r\nAdd REST API for Cluster Creation with CloudConfig\r\n\r\nBody:\r\nThis commit contains the relevant REST APIs for cluster creation.\r\nThis change allows user to create cluster with CloudConfig.\r\nMultiple tests have been added in order to check the functionality of REST calls.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/576025796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/576035214","html_url":"https://github.com/apache/helix/pull/682#issuecomment-576035214","issue_url":"https://api.github.com/repos/apache/helix/issues/682","id":576035214,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NjAzNTIxNA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-19T18:59:17Z","updated_at":"2020-01-19T18:59:17Z","author_association":"CONTRIBUTOR","body":"Could we please have the issue, full description that includes the motivation of this PR? If it is for a new feature, some kind of design would be preferred.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/576035214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/576859353","html_url":"https://github.com/apache/helix/pull/653#issuecomment-576859353","issue_url":"https://api.github.com/repos/apache/helix/issues/653","id":576859353,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Njg1OTM1Mw==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-21T20:11:13Z","updated_at":"2020-01-21T20:11:13Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang \r\nFinal commit message \"Add Helix property factory and class\"","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/576859353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/576864173","html_url":"https://github.com/apache/helix/pull/653#issuecomment-576864173","issue_url":"https://api.github.com/repos/apache/helix/issues/653","id":576864173,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Njg2NDE3Mw==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-21T20:23:15Z","updated_at":"2020-01-21T20:23:15Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang\r\nFinal commit message \r\nAdd Helix property factory and class.\r\n- Add Helix property singleton factory. The factory returns Helix property with default values, and clients may override these values;\r\n- Add Helix manager property. It further holds Helix cloud properties and some other properties specific to the manager, defined in helix-manager.properties file.\r\n- Add Helix cloud property. It holds cloud related properties, which comes from cloud config and client specified file, e.g., for Azure, the file is azure-cloud.properties. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/576864173/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/576936779","html_url":"https://github.com/apache/helix/pull/693#issuecomment-576936779","issue_url":"https://api.github.com/repos/apache/helix/issues/693","id":576936779,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NjkzNjc3OQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-21T23:33:19Z","updated_at":"2020-01-21T23:33:19Z","author_association":"CONTRIBUTOR","body":"Looks good. But please rebase the PR so we are seeing your change only.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/576936779/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577010852","html_url":"https://github.com/apache/helix/issues/683#issuecomment-577010852","issue_url":"https://api.github.com/repos/apache/helix/issues/683","id":577010852,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzAxMDg1Mg==","user":{"login":"codeon","id":922899,"node_id":"MDQ6VXNlcjkyMjg5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/922899?v=4","gravatar_id":"","url":"https://api.github.com/users/codeon","html_url":"https://github.com/codeon","followers_url":"https://api.github.com/users/codeon/followers","following_url":"https://api.github.com/users/codeon/following{/other_user}","gists_url":"https://api.github.com/users/codeon/gists{/gist_id}","starred_url":"https://api.github.com/users/codeon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codeon/subscriptions","organizations_url":"https://api.github.com/users/codeon/orgs","repos_url":"https://api.github.com/users/codeon/repos","events_url":"https://api.github.com/users/codeon/events{/privacy}","received_events_url":"https://api.github.com/users/codeon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-22T05:11:48Z","updated_at":"2020-01-22T05:11:48Z","author_association":"NONE","body":"Thanks, we will try upgrading and update.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577010852/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577333169","html_url":"https://github.com/apache/helix/pull/686#issuecomment-577333169","issue_url":"https://api.github.com/repos/apache/helix/issues/686","id":577333169,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzMzMzE2OQ==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-22T18:56:26Z","updated_at":"2020-01-22T18:56:26Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang \r\n\r\n```\r\nWe would like to monitor the usage of each capacity for the resource partitions: gauge of the average partition weight for each CAPACITY key.\r\n\r\nChange list:\r\n- Add partition weight gauge metric to resource monitor.\r\n- Add two unit tests to cover new code.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577333169/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577336183","html_url":"https://github.com/apache/helix/issues/685#issuecomment-577336183","issue_url":"https://api.github.com/repos/apache/helix/issues/685","id":577336183,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzMzNjE4Mw==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-22T19:03:31Z","updated_at":"2020-01-22T19:03:31Z","author_association":"CONTRIBUTOR","body":"Code merged","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577336183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577428394","html_url":"https://github.com/apache/helix/issues/660#issuecomment-577428394","issue_url":"https://api.github.com/repos/apache/helix/issues/660","id":577428394,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzQyODM5NA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-22T23:06:13Z","updated_at":"2020-01-22T23:06:13Z","author_association":"CONTRIBUTOR","body":"@jiajunwang Let's be clear about terminology.\r\n\r\nController leader switch might cause additional/unexpected **rebalance** or **movement**? I think from the context, what you meant was movement since resetting the change detector would certainly trigger another rebalance (since resetting it would create a big delta).\r\n\r\nCould you confirm that this understanding is correct? @jiajunwang ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577428394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577429092","html_url":"https://github.com/apache/helix/pull/690#issuecomment-577429092","issue_url":"https://api.github.com/repos/apache/helix/issues/690","id":577429092,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzQyOTA5Mg==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-22T23:08:28Z","updated_at":"2020-01-22T23:09:59Z","author_association":"CONTRIBUTOR","body":"@jiajunwang Could we separate the scope for this change?\r\n\r\n1. Is it possible to create a PR that includes the change on resetting the cluster data change detector?\r\n2. The next PR would be the movement of the rebalancer to Generic Helix Controller. It's not too clear why this is necessary \r\n\r\n> Move the stateful WAGED rebalancer to the GenericHelixController object instead of the rebalance stage. This is for resolving the possible race condition between the event processing thread and leader switch handling thread.\r\n\r\nCould you explain this further? I am afraid in terms of design, we might be introducing a new dependency (between GenericHelixController and the rebalancer/stages). This doesn't seem too great to me because Helix's design I believe aims to keep them independent.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577429092/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577445579","html_url":"https://github.com/apache/helix/pull/690#issuecomment-577445579","issue_url":"https://api.github.com/repos/apache/helix/issues/690","id":577445579,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzQ0NTU3OQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-23T00:08:39Z","updated_at":"2020-01-23T00:08:39Z","author_association":"CONTRIBUTOR","body":"> @jiajunwang Could we separate the scope for this change?\r\n> \r\n> 1. Is it possible to create a PR that includes the change on resetting the cluster data change detector?\r\n> 2. The next PR would be the movement of the rebalancer to Generic Helix Controller. It's not too clear why this is necessary\r\n> \r\n> > Move the stateful WAGED rebalancer to the GenericHelixController object instead of the rebalance stage. This is for resolving the possible race condition between the event processing thread and leader switch handling thread.\r\n> \r\n> Could you explain this further? I am afraid in terms of design, we might be introducing a new dependency (between GenericHelixController and the rebalancer/stages). This doesn't seem too great to me because Helix's design I believe aims to keep them independent.\r\n\r\nSeparate change is a good idea, will do so. So I will create another PR before this one. Just adding reset methods.\r\nAs for the additional dependency that you mentioned,\r\n1. Another option is to keep the assignment metadata store and change detector in the controller. But that actually makes the story more complicated and introduce some skip level dependencies. I tried, this design is not looking nice.\r\n2. Even with this change, GenericHelixController does not depend on the stage.\r\n3. GenericHelixController will be bound with the WAGED rebalancer. Since it is stateful, tracking it in the controller makes more sense than a certain stage as we are doing now. Note that the stages are better to be stateless. But I agree it is not perfect.\r\nLike what we did for the several other stateful objects in the controller instance, I don't have a better option for now. Please let me know if you have a good idea.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577445579/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577448680","html_url":"https://github.com/apache/helix/pull/690#issuecomment-577448680","issue_url":"https://api.github.com/repos/apache/helix/issues/690","id":577448680,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzQ0ODY4MA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-23T00:21:11Z","updated_at":"2020-01-23T00:21:11Z","author_association":"CONTRIBUTOR","body":"Split the reset logic to https://github.com/apache/helix/pull/696 as suggested. @narendly Please review that one first.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577448680/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577462460","html_url":"https://github.com/apache/helix/pull/690#issuecomment-577462460","issue_url":"https://api.github.com/repos/apache/helix/issues/690","id":577462460,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzQ2MjQ2MA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-23T01:21:11Z","updated_at":"2020-01-23T01:21:11Z","author_association":"CONTRIBUTOR","body":"@narendly Thanks for the review, I took a quick look. The comments will be addressed in this PR after we finished https://github.com/apache/helix/pull/696. Please move to there and review that PR first : )","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577462460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577464225","html_url":"https://github.com/apache/helix/pull/682#issuecomment-577464225","issue_url":"https://api.github.com/repos/apache/helix/issues/682","id":577464225,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzQ2NDIyNQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-23T01:29:26Z","updated_at":"2020-01-23T01:29:34Z","author_association":"CONTRIBUTOR","body":"> Could we please have the issue, full description that includes the motivation of this PR? If it is for a new feature, some kind of design would be preferred.\r\n\r\n\r\n+1. Please review pull request guidelines on the sidebar.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577464225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577464352","html_url":"https://github.com/apache/helix/pull/682#issuecomment-577464352","issue_url":"https://api.github.com/repos/apache/helix/issues/682","id":577464352,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzQ2NDM1Mg==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-23T01:29:54Z","updated_at":"2020-01-23T01:29:54Z","author_association":"CONTRIBUTOR","body":"@nealsun-linkedin Please fix the title accordingly.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577464352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577837681","html_url":"https://github.com/apache/helix/pull/696#issuecomment-577837681","issue_url":"https://api.github.com/repos/apache/helix/issues/696","id":577837681,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzgzNzY4MQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-23T19:29:51Z","updated_at":"2020-01-23T19:29:51Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577837681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577846740","html_url":"https://github.com/apache/helix/pull/693#issuecomment-577846740","issue_url":"https://api.github.com/repos/apache/helix/issues/693","id":577846740,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Nzg0Njc0MA==","user":{"login":"mgao0","id":31704180,"node_id":"MDQ6VXNlcjMxNzA0MTgw","avatar_url":"https://avatars.githubusercontent.com/u/31704180?v=4","gravatar_id":"","url":"https://api.github.com/users/mgao0","html_url":"https://github.com/mgao0","followers_url":"https://api.github.com/users/mgao0/followers","following_url":"https://api.github.com/users/mgao0/following{/other_user}","gists_url":"https://api.github.com/users/mgao0/gists{/gist_id}","starred_url":"https://api.github.com/users/mgao0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgao0/subscriptions","organizations_url":"https://api.github.com/users/mgao0/orgs","repos_url":"https://api.github.com/users/mgao0/repos","events_url":"https://api.github.com/users/mgao0/events{/privacy}","received_events_url":"https://api.github.com/users/mgao0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-23T19:52:46Z","updated_at":"2020-01-23T19:52:46Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @pkuwm @alirezazamani ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577846740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577846878","html_url":"https://github.com/apache/helix/pull/693#issuecomment-577846878","issue_url":"https://api.github.com/repos/apache/helix/issues/693","id":577846878,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Nzg0Njg3OA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-23T19:53:08Z","updated_at":"2020-01-23T19:53:08Z","author_association":"CONTRIBUTOR","body":"It would be easier if we have beforeTest() and afterTest() methods which create and clean up the root path before and after each tests.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577846878/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/577890940","html_url":"https://github.com/apache/helix/pull/700#issuecomment-577890940","issue_url":"https://api.github.com/repos/apache/helix/issues/700","id":577890940,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Nzg5MDk0MA==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-23T21:43:33Z","updated_at":"2020-01-23T21:43:48Z","author_association":"CONTRIBUTOR","body":"Thanks for the prompt review, @jiajunwang @narendly !\r\nI've run the tests again and all passed.\r\n\r\nThis PR is ready to be merged, approved by @jiajunwang @narendly \r\n\r\n```\r\nLive instance creation is still using the old API createEphemeral(path, data) without the session ID, resulting in zk session race condition being not completely fixed.\r\n\r\nSo this commit changes the api to use createEphemeral(path, data, sessionId) for zk session validation and live instance creation. A new unit test is also added to cover session expiry in participant manager when creating live instance.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/577890940/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/578260151","html_url":"https://github.com/apache/helix/pull/693#issuecomment-578260151","issue_url":"https://api.github.com/repos/apache/helix/issues/693","id":578260151,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODI2MDE1MQ==","user":{"login":"mgao0","id":31704180,"node_id":"MDQ6VXNlcjMxNzA0MTgw","avatar_url":"https://avatars.githubusercontent.com/u/31704180?v=4","gravatar_id":"","url":"https://api.github.com/users/mgao0","html_url":"https://github.com/mgao0","followers_url":"https://api.github.com/users/mgao0/followers","following_url":"https://api.github.com/users/mgao0/following{/other_user}","gists_url":"https://api.github.com/users/mgao0/gists{/gist_id}","starred_url":"https://api.github.com/users/mgao0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgao0/subscriptions","organizations_url":"https://api.github.com/users/mgao0/orgs","repos_url":"https://api.github.com/users/mgao0/repos","events_url":"https://api.github.com/users/mgao0/events{/privacy}","received_events_url":"https://api.github.com/users/mgao0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T19:07:48Z","updated_at":"2020-01-24T19:07:48Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang \r\nFinal commit message:\r\nRemoved useless znodes to resolve dependency between test methods in TestZKUtil","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/578260151/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/578977742","html_url":"https://github.com/apache/helix/pull/690#issuecomment-578977742","issue_url":"https://api.github.com/repos/apache/helix/issues/690","id":578977742,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODk3Nzc0Mg==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-27T22:06:52Z","updated_at":"2020-01-27T22:06:52Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly \r\n\r\nI have added TODOs regarding the potential concerns. Since they are related to the possible future improvements or new features, we will revisit those logics by then.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/578977742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/579456336","html_url":"https://github.com/apache/helix/pull/682#issuecomment-579456336","issue_url":"https://api.github.com/repos/apache/helix/issues/682","id":579456336,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTQ1NjMzNg==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T21:07:53Z","updated_at":"2020-01-28T21:07:53Z","author_association":"CONTRIBUTOR","body":"Replying to both comments from @jiajunwang and @narendly here, as both comments revolve around `getZkRealmAddress()`. \r\nI agree that `getZkRealmAddress()` should not be used for non-leaf nodes. As of right now, I have added the exception throwing behavior per @narendly 's suggestion, however, at this moment I do not agree with this approach. Throwing an exception implies that `getZkRealmAddress()` should not be called under certain conditions, and that `zkRealmAddress` should not exist under these conditions; it is a better practice to ensure that such a function is unavailable in the first place (under these conditions), and that the object is always in a valid state. \r\nI believe @jiajunwang 's proposed design is one of the only ways to achieve this, but it'll be a complete redo on the current design. Per @narendly 's suggestions, I purpose to move on with the current design for now, and revisit this class as more usage to this class is consolidated. With more usage, we will have a better context on how the class should behave, which can help making a decision. This class has been stalling the progress on other components for longer than planned, which we should avoid. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/579456336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/579469196","html_url":"https://github.com/apache/helix/pull/682#issuecomment-579469196","issue_url":"https://api.github.com/repos/apache/helix/issues/682","id":579469196,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTQ2OTE5Ng==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T21:39:57Z","updated_at":"2020-01-28T21:39:57Z","author_association":"CONTRIBUTOR","body":"> Replying to both comments from @jiajunwang and @narendly here, as both comments revolve around `getZkRealmAddress()`.\r\n> I agree that `getZkRealmAddress()` should not be used for non-leaf nodes. As of right now, I have added the exception throwing behavior per @narendly 's suggestion, however, at this moment I do not agree with this approach. Throwing an exception implies that `getZkRealmAddress()` should not be called under certain conditions, and that `zkRealmAddress` should not exist under these conditions; it is a better practice to ensure that such a function is unavailable in the first place (under these conditions), and that the object is always in a valid state.\r\n> I believe @jiajunwang 's proposed design is one of the only ways to achieve this, but it'll be a complete redo on the current design. Per @narendly 's suggestions, I purpose to move on with the current design for now, and revisit this class as more usage to this class is consolidated. With more usage, we will have a better context on how the class should behave, which can help making a decision. This class has been stalling the progress on other components for longer than planned, which we should avoid.\r\n\r\n@NealSun96 Let's do the right thing. Schedule is something we need to concern. But if you leave this kind of known potential issues at this early stage, it tends to cost you much more time later to fix later.\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/579469196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/579966732","html_url":"https://github.com/apache/helix/issues/701#issuecomment-579966732","issue_url":"https://api.github.com/repos/apache/helix/issues/701","id":579966732,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTk2NjczMg==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T21:24:54Z","updated_at":"2020-01-29T21:24:54Z","author_association":"CONTRIBUTOR","body":"Design pivot: based on the reviews gathered from the pull request #682 , there are concerns revolving the access to a trie node. Considering possible misuse, efforts were put in to ensure the integrity of a node, such as making the children unmodifiable and zkRealmAddress conditionally accessible; on top of that, opening up the trie node as a public interface also leads to potential repetition of trie traversal logic and exposure of unnecessary implementation details. Because of that, a new design is implemented, which encapsulates the trie node and instead allows user to interact with a trie class. The trie class offers a restrictive but sufficient set of operations that is expandable and is not prone to misuse. The trie class inherits from a generic interface, making it easy to substitute the trie solution with another brand new solution if we wish to do so in the future. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/579966732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/579978450","html_url":"https://github.com/apache/helix/pull/681#issuecomment-579978450","issue_url":"https://api.github.com/repos/apache/helix/issues/681","id":579978450,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTk3ODQ1MA==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T21:55:51Z","updated_at":"2020-01-29T21:55:51Z","author_association":"CONTRIBUTOR","body":"The PR is ready to be merged into Master, approved by @jiajunwang \r\n\r\nCommit:\r\nAdd integration tests for verifying controller's behavior on/off leadership of a cluster\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/579978450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/580032685","html_url":"https://github.com/apache/helix/issues/707#issuecomment-580032685","issue_url":"https://api.github.com/repos/apache/helix/issues/707","id":580032685,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDAzMjY4NQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T00:47:29Z","updated_at":"2020-01-30T00:47:29Z","author_association":"CONTRIBUTOR","body":"IllegalName: org/apache/helix/controller/rebalancer/waged/WagedRebalancer\r\njava.lang.ClassLoader.preDefineClass - Line 654 (ClassLoader.java)\r\njava.lang.ClassLoader.defineClass - Line 761 (ClassLoader.java)\r\njava.security.SecureClassLoader.defineClass - Line 142 (SecureClassLoader.java)\r\njava.net.URLClassLoader.defineClass - Line 467 (URLClassLoader.java)\r\njava.net.URLClassLoader.access$100 - Line 73 (URLClassLoader.java)\r\njava.net.URLClassLoader$1.run - Line 368 (URLClassLoader.java)\r\njava.net.URLClassLoader$1.run - Line 362 (URLClassLoader.java)\r\njava.security.AccessController.doPrivileged - Line -2 (AccessController.java)\r\njava.net.URLClassLoader.findClass - Line 361 (URLClassLoader.java)\r\norg.eclipse.jetty.webapp.WebAppClassLoader.foundClass - Line 649 (WebAppClassLoader.java)\r\norg.eclipse.jetty.webapp.WebAppClassLoader.loadClass - Line 555 (WebAppClassLoader.java)\r\njava.lang.ClassLoader.loadClass - Line 357 (ClassLoader.java)\r\norg.apache.helix.util.HelixUtil.loadClass - Line 133 (HelixUtil.java)\r\norg.apache.helix.controller.stages.BestPossibleStateCalcStage.getCustomizedRebalancer - Line 424 (BestPossibleStateCalcStage.java)\r\norg.apache.helix.controller.stages.BestPossibleStateCalcStage.getRebalancer - Line 442 (BestPossibleStateCalcStage.java)\r\norg.apache.helix.controller.stages.BestPossibleStateCalcStage.computeSingleResourceBestPossibleState - Line 342 (BestPossibleStateCalcStage.java)\r\norg.apache.helix.controller.stages.BestPossibleStateCalcStage.compute - Line 140 (BestPossibleStateCalcStage.java)\r\norg.apache.helix.controller.stages.BestPossibleStateCalcStage.process - Line 85 (BestPossibleStateCalcStage.java)\r\norg.apache.helix.controller.pipeline.Pipeline.handle - Line 68 (Pipeline.java)\r\norg.apache.helix.controller.GenericHelixController.handleEvent - Line 728 (GenericHelixController.java)\r\norg.apache.helix.controller.GenericHelixController.access$500 - Line 120 (GenericHelixController.java)\r\norg.apache.helix.controller.GenericHelixController$ClusterEventProcessor.run - Line 1266 (GenericHelixController.java)","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/580032685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/580104266","html_url":"https://github.com/apache/helix/issues/707#issuecomment-580104266","issue_url":"https://api.github.com/repos/apache/helix/issues/707","id":580104266,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDEwNDI2Ng==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T06:34:10Z","updated_at":"2020-01-30T06:34:10Z","author_association":"CONTRIBUTOR","body":"The root cause is job resource rebalance fetching logic.\r\n\r\n>     case TASK:\r\n>       rebalancer = getCustomizedRebalancer(idealState.getRebalancerClassName(), resourceName);\r\n>       break;\r\n\r\nIt should be a potential problem in the test only. Since in prod environment,  the job resources will never be configured with a Waged rebalancer.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/580104266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/580323410","html_url":"https://github.com/apache/helix/issues/707#issuecomment-580323410","issue_url":"https://api.github.com/repos/apache/helix/issues/707","id":580323410,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDMyMzQxMA==","user":{"login":"lei-xia","id":9325494,"node_id":"MDQ6VXNlcjkzMjU0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/9325494?v=4","gravatar_id":"","url":"https://api.github.com/users/lei-xia","html_url":"https://github.com/lei-xia","followers_url":"https://api.github.com/users/lei-xia/followers","following_url":"https://api.github.com/users/lei-xia/following{/other_user}","gists_url":"https://api.github.com/users/lei-xia/gists{/gist_id}","starred_url":"https://api.github.com/users/lei-xia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lei-xia/subscriptions","organizations_url":"https://api.github.com/users/lei-xia/orgs","repos_url":"https://api.github.com/users/lei-xia/repos","events_url":"https://api.github.com/users/lei-xia/events{/privacy}","received_events_url":"https://api.github.com/users/lei-xia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T16:03:16Z","updated_at":"2020-01-30T16:03:16Z","author_association":"MEMBER","body":"Just curious, why a Job resource even being configured to use Waged rebalancer?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/580323410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/580348842","html_url":"https://github.com/apache/helix/issues/707#issuecomment-580348842","issue_url":"https://api.github.com/repos/apache/helix/issues/707","id":580348842,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDM0ODg0Mg==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T16:53:21Z","updated_at":"2020-01-30T16:53:21Z","author_association":"CONTRIBUTOR","body":"It's a problematic test script. Not quite possible in a product. But the error message is a real bug though.\n\nGet Outlook for Android<https://aka.ms/ghei36>\n\n________________________________\nFrom: Lei Xia <notifications@github.com>\nSent: Thursday, January 30, 2020 8:03:16 AM\nTo: apache/helix <helix@noreply.github.com>\nCc: Jiajun Wang <jjwang@linkedin.com>; Assign <assign@noreply.github.com>\nSubject: Re: [apache/helix] NoClassDefFoundError because of WAGED rebalancer configured for job resource. (#707)\n\n\nJust curious, why a Job resource even being configured to use Waged rebalancer?\n\n—\nYou are receiving this because you were assigned.\nReply to this email directly, view it on GitHub<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fapache%2Fhelix%2Fissues%2F707%3Femail_source%3Dnotifications%26email_token%3DAANYM2AQAYE5PPOHUZDVV2DRAL24JA5CNFSM4KNN7UTKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEKLQQUQ%23issuecomment-580323410&data=02%7C01%7Cjjwang%40linkedin.com%7Cda91bb60118249cdde7408d7a59decda%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637159970016014501&sdata=khca2pIog%2FvMItBC2%2FR%2Fyh%2Bk4Wzv9UWuWVSUGoB8a8U%3D&reserved=0>, or unsubscribe<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAANYM2FKK3PF7OGGCXMAG3LRAL24JANCNFSM4KNN7UTA&data=02%7C01%7Cjjwang%40linkedin.com%7Cda91bb60118249cdde7408d7a59decda%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637159970016024492&sdata=WzDg0PN7n16zmKX99bSN45q3DVSDp0tiDvcukDGBPsM%3D&reserved=0>.\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/580348842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/580387263","html_url":"https://github.com/apache/helix/pull/703#issuecomment-580387263","issue_url":"https://api.github.com/repos/apache/helix/issues/703","id":580387263,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDM4NzI2Mw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T18:22:24Z","updated_at":"2020-01-30T18:22:24Z","author_association":"CONTRIBUTOR","body":"Please ensure you addressed the other's comments as well.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/580387263/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/580411088","html_url":"https://github.com/apache/helix/pull/703#issuecomment-580411088","issue_url":"https://api.github.com/repos/apache/helix/issues/703","id":580411088,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDQxMTA4OA==","user":{"login":"mgao0","id":31704180,"node_id":"MDQ6VXNlcjMxNzA0MTgw","avatar_url":"https://avatars.githubusercontent.com/u/31704180?v=4","gravatar_id":"","url":"https://api.github.com/users/mgao0","html_url":"https://github.com/mgao0","followers_url":"https://api.github.com/users/mgao0/followers","following_url":"https://api.github.com/users/mgao0/following{/other_user}","gists_url":"https://api.github.com/users/mgao0/gists{/gist_id}","starred_url":"https://api.github.com/users/mgao0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgao0/subscriptions","organizations_url":"https://api.github.com/users/mgao0/orgs","repos_url":"https://api.github.com/users/mgao0/repos","events_url":"https://api.github.com/users/mgao0/events{/privacy}","received_events_url":"https://api.github.com/users/mgao0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T19:18:14Z","updated_at":"2020-01-30T19:18:14Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/580411088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/580473400","html_url":"https://github.com/apache/helix/pull/597#issuecomment-580473400","issue_url":"https://api.github.com/repos/apache/helix/issues/597","id":580473400,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDQ3MzQwMA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T21:41:38Z","updated_at":"2020-01-30T21:41:38Z","author_association":"CONTRIBUTOR","body":"Tested and merged.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/580473400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/580546460","html_url":"https://github.com/apache/helix/pull/706#issuecomment-580546460","issue_url":"https://api.github.com/repos/apache/helix/issues/706","id":580546460,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDU0NjQ2MA==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T01:53:22Z","updated_at":"2020-01-31T01:53:22Z","author_association":"CONTRIBUTOR","body":"Please remember to create the new branch for merging as you mentioned. \r\nThis PR is ready to be merged, approved by @narendly ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/580546460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/580861070","html_url":"https://github.com/apache/helix/pull/706#issuecomment-580861070","issue_url":"https://api.github.com/repos/apache/helix/issues/706","id":580861070,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDg2MTA3MA==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T18:48:01Z","updated_at":"2020-01-31T18:48:01Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/580861070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/580864897","html_url":"https://github.com/apache/helix/pull/706#issuecomment-580864897","issue_url":"https://api.github.com/repos/apache/helix/issues/706","id":580864897,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDg2NDg5Nw==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T18:57:37Z","updated_at":"2020-01-31T18:57:37Z","author_association":"CONTRIBUTOR","body":"Final commit message:\r\n\r\nAdd MetadataStoreRoutingData interface and TrieRoutingData class to helix-rest\r\n\r\nThe TrieRoutingData class constructs a trie structure for \"metadata store sharding keys - metadata store realm addressses\" pairs to allow faster lookup operations. The MetadataStoreRoutingData interface allows generalized access to routing data. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/580864897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/580970958","html_url":"https://github.com/apache/helix/pull/710#issuecomment-580970958","issue_url":"https://api.github.com/repos/apache/helix/issues/710","id":580970958,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDk3MDk1OA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-01T00:53:21Z","updated_at":"2020-02-01T00:53:21Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @NealSun96 ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/580970958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/580975216","html_url":"https://github.com/apache/helix/pull/682#issuecomment-580975216","issue_url":"https://api.github.com/repos/apache/helix/issues/682","id":580975216,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDk3NTIxNg==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-01T01:27:30Z","updated_at":"2020-02-01T01:27:30Z","author_association":"CONTRIBUTOR","body":"This PR is replaced by #706 , closing. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/580975216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/581082479","html_url":"https://github.com/apache/helix/pull/714#issuecomment-581082479","issue_url":"https://api.github.com/repos/apache/helix/issues/714","id":581082479,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTA4MjQ3OQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-02T00:01:37Z","updated_at":"2020-02-02T00:01:37Z","author_association":"CONTRIBUTOR","body":"Good work! We could use a dedicated HelixZkClient and ZNRecord for the time being. Let's fill in the test next :)","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/581082479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/581703091","html_url":"https://github.com/apache/helix/pull/705#issuecomment-581703091","issue_url":"https://api.github.com/repos/apache/helix/issues/705","id":581703091,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTcwMzA5MQ==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-04T01:44:51Z","updated_at":"2020-02-04T01:44:51Z","author_association":"NONE","body":"This PR is ready to be merged, approved by @narendly .\r\n\r\nTitle: \r\nAdd workflow garbage collector\r\n\r\nBody:\r\nThe workflow garbage collection is added which scans all the workflow context,\r\nand delete them if workflow config does not exists.\r\nTest is added which checks the functionality of workflow garbage collection.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/581703091/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/581707438","html_url":"https://github.com/apache/helix/pull/717#issuecomment-581707438","issue_url":"https://api.github.com/repos/apache/helix/issues/717","id":581707438,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTcwNzQzOA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-04T02:05:16Z","updated_at":"2020-02-04T02:05:16Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @alirezazamani ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/581707438/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/581772043","html_url":"https://github.com/apache/helix/pull/719#issuecomment-581772043","issue_url":"https://api.github.com/repos/apache/helix/issues/719","id":581772043,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTc3MjA0Mw==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-04T07:06:34Z","updated_at":"2020-02-04T07:06:34Z","author_association":"CONTRIBUTOR","body":"> I think Mockito can mock it without start any server, if it is purely memory test usage. Overall, I am fine with either way.\r\n\r\nMockito and the likes (for example, MockServer) do not work for this use case. Please refer to my response. This needs to be a mock service.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/581772043/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/582067530","html_url":"https://github.com/apache/helix/pull/720#issuecomment-582067530","issue_url":"https://api.github.com/repos/apache/helix/issues/720","id":582067530,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjA2NzUzMA==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-04T19:10:13Z","updated_at":"2020-02-04T19:10:13Z","author_association":"CONTRIBUTOR","body":"As I recall from the design discussion, there should be a method that returns all the \"sharding key - realm address\" mapping. This method will be used to transfer all routing data across REST so that the routing data cache can be constructed from it (without accessing ZK for data).\r\nFor this purpose, we can use the \"get mapping under path\" method and pass in \"/\" for the path, but that will be using one method for two purposes. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/582067530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/582092795","html_url":"https://github.com/apache/helix/pull/712#issuecomment-582092795","issue_url":"https://api.github.com/repos/apache/helix/issues/712","id":582092795,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjA5Mjc5NQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-04T20:10:20Z","updated_at":"2020-02-04T20:10:20Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang\r\n\r\nUpgrade ZkTestBase with multi-ZK support in helix-core\r\n-----\r\nPrior to instrumenting Helix APIs and components so that they would be aware of multiple ZKs for horizontal scalability, we need to have a way to run all integration tests involving ZooKeeper in different environments: one with a single ZK and another with multiple ZKs.\r\nChangelist:\r\n\r\nImplement the logic in ZkTestBase so that in conjunction with maven-surefire-plugin configs, there will be two executions of the test suite\r\nRemove system property variable from default-test since it's unnecessary","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/582092795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/582106046","html_url":"https://github.com/apache/helix/pull/720#issuecomment-582106046","issue_url":"https://api.github.com/repos/apache/helix/issues/720","id":582106046,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjEwNjA0Ng==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-04T20:43:37Z","updated_at":"2020-02-04T20:43:37Z","author_association":"CONTRIBUTOR","body":"@all\r\n\r\nThis PR is a draft and is not ready for review. This depends on https://github.com/apache/helix/pull/714. #714 ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/582106046/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/582160649","html_url":"https://github.com/apache/helix/pull/724#issuecomment-582160649","issue_url":"https://api.github.com/repos/apache/helix/issues/724","id":582160649,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjE2MDY0OQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-04T23:10:04Z","updated_at":"2020-02-04T23:10:04Z","author_association":"CONTRIBUTOR","body":"Thanks for the approval, I'm running the final integration test with some example customer clusters. This is to ensure backward compatibility.\r\nI will merge the code after.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/582160649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/582163798","html_url":"https://github.com/apache/helix/pull/719#issuecomment-582163798","issue_url":"https://api.github.com/repos/apache/helix/issues/719","id":582163798,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjE2Mzc5OA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-04T23:20:32Z","updated_at":"2020-02-04T23:20:32Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @dasahcc .\r\n\r\nAdd MockMetadataStoreDirectoryServer\r\n-----\r\n\r\nIn order to support ZK horizontal scalability, we need to have Metadata Store Directory Service, which is a feature provided by Helix REST. Helix APIs that talk to ZooKeeper will query against this service at initialization to fetch all metadata store routing keys.\r\nFor Helix application developers, this means that there's potentially a lot to do for setting up a testing environment assuming multiple ZKs. This MockMetadataStoreDirectoryServer makes it easy to test by abstracting out the work of having to set up and write metadata store routing information to the routing ZK.\r\nChangelist:\r\n1. Implement Mock MSDS\r\n2. Write a test in main()","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/582163798/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/582201976","html_url":"https://github.com/apache/helix/pull/714#issuecomment-582201976","issue_url":"https://api.github.com/repos/apache/helix/issues/714","id":582201976,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjIwMTk3Ng==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-05T01:43:58Z","updated_at":"2020-02-05T01:48:13Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly\r\nFinal commit message:\r\n# Add MetadataStoreRoutingDataReader interface and ZkRoutingDataReader class to helix-rest #\r\nThis PR adds an interface and an implementation for metadata store routing data accessing. The interface works directly with MetadataStoreRoutingData, acting as an abstract layer that allows the data to be accessed from different sources. The implementation focuses on accessing data from ZooKeeper.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/582201976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/582216698","html_url":"https://github.com/apache/helix/pull/688#issuecomment-582216698","issue_url":"https://api.github.com/repos/apache/helix/issues/688","id":582216698,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjIxNjY5OA==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-05T02:51:46Z","updated_at":"2020-02-05T02:51:46Z","author_association":"CONTRIBUTOR","body":"Look good to me. Don't forget to run the unit test one more time.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/582216698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/582564566","html_url":"https://github.com/apache/helix/pull/720#issuecomment-582564566","issue_url":"https://api.github.com/repos/apache/helix/issues/720","id":582564566,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjU2NDU2Ng==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-05T19:12:13Z","updated_at":"2020-02-05T19:12:13Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @dasahcc .\r\n\r\nAdd MetadataStoreDirectory and ZkMetadataStoreDirectory\r\n---\r\nMetadataStoreDirectory is an object that provides Metadata Store Directory APIs (routing APIs, CRUD of routing data, etc.). Helix REST will use this object to serve Metadata Store Directory Service REST endpoints.\r\nAlso, it will make appropriate changes to the ZK access layer to listen on changes on the routing data.\r\n\r\nChangelist:\r\nRefactor AbstractTestClass to make multi-ZK setup work\r\nAdd implementation of MetadataStoreDirectory\r\nAdd TestZkMetadataStoreDirectory","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/582564566/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/582587770","html_url":"https://github.com/apache/helix/pull/723#issuecomment-582587770","issue_url":"https://api.github.com/repos/apache/helix/issues/723","id":582587770,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjU4Nzc3MA==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-05T20:05:54Z","updated_at":"2020-02-05T20:05:54Z","author_association":"NONE","body":"This PR is ready to be merged, approved by @zhangmeng916 \r\n\r\nTitle:\r\nAdd CustomizedView Helix property\r\n\r\nBody:\r\nThis commit contains the bare minimum properties for CustomizedView Helix property.\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/582587770/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/582613372","html_url":"https://github.com/apache/helix/pull/724#issuecomment-582613372","issue_url":"https://api.github.com/repos/apache/helix/issues/724","id":582613372,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MjYxMzM3Mg==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-05T21:08:42Z","updated_at":"2020-02-05T21:08:42Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @dasahcc \r\n\r\nAdditional tests have been done using multiple nodes clusters in the simulation environment. We cloned and tested with 3 of our customer prod clusters. The existing feature works as the same.\r\nMoreover, tested with task framework features with the same simulation environment. All green.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/582613372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/583089987","html_url":"https://github.com/apache/helix/pull/695#issuecomment-583089987","issue_url":"https://api.github.com/repos/apache/helix/issues/695","id":583089987,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MzA4OTk4Nw==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-06T20:16:48Z","updated_at":"2020-02-06T20:16:48Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @alirezazamani \r\nFinal commit message:\r\nModify participant logic to add logic for instance auto registration to a Helix cluster.\r\nAuto registration differs with existing auto join in that auto registration will retrieve the fault domain information for the instance and populate it under instanceConfig. With auto registration on, user does not need to manually populate instance information in Zookeeper.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/583089987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/583092487","html_url":"https://github.com/apache/helix/issues/707#issuecomment-583092487","issue_url":"https://api.github.com/repos/apache/helix/issues/707","id":583092487,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MzA5MjQ4Nw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-06T20:20:58Z","updated_at":"2020-02-06T20:20:58Z","author_association":"CONTRIBUTOR","body":"I took a closer look. Might not be related to the job resources. Let me try if I can reproduce the issue.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/583092487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/583165043","html_url":"https://github.com/apache/helix/issues/707#issuecomment-583165043","issue_url":"https://api.github.com/repos/apache/helix/issues/707","id":583165043,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MzE2NTA0Mw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-06T23:39:44Z","updated_at":"2020-02-06T23:39:44Z","author_association":"CONTRIBUTOR","body":"It is most likely to be a lib version mismatch. As I checked the code, if there is any logic error, the class should be able to initialize the same, and we will get a casting failure instead of class not found.\r\nClose this issue since it is only seen in the tests with the new build (and mixed lib version probably).","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/583165043/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/583641649","html_url":"https://github.com/apache/helix/issues/733#issuecomment-583641649","issue_url":"https://api.github.com/repos/apache/helix/issues/733","id":583641649,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MzY0MTY0OQ==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-07T22:20:48Z","updated_at":"2020-02-07T22:20:48Z","author_association":"CONTRIBUTOR","body":"@jiajunwang @dasahcc @kaisun2000 to track the progress of the remaining watcher leakage fix; \r\n\r\nOne possible approach is to change the `exists` type watcher to `data` type watcher during handling new session","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/583641649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/583643465","html_url":"https://github.com/apache/helix/pull/688#issuecomment-583643465","issue_url":"https://api.github.com/repos/apache/helix/issues/688","id":583643465,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MzY0MzQ2NQ==","user":{"login":"i3wangyi","id":2618776,"node_id":"MDQ6VXNlcjI2MTg3NzY=","avatar_url":"https://avatars.githubusercontent.com/u/2618776?v=4","gravatar_id":"","url":"https://api.github.com/users/i3wangyi","html_url":"https://github.com/i3wangyi","followers_url":"https://api.github.com/users/i3wangyi/followers","following_url":"https://api.github.com/users/i3wangyi/following{/other_user}","gists_url":"https://api.github.com/users/i3wangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/i3wangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/i3wangyi/subscriptions","organizations_url":"https://api.github.com/users/i3wangyi/orgs","repos_url":"https://api.github.com/users/i3wangyi/repos","events_url":"https://api.github.com/users/i3wangyi/events{/privacy}","received_events_url":"https://api.github.com/users/i3wangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-07T22:26:46Z","updated_at":"2020-02-07T22:26:46Z","author_association":"CONTRIBUTOR","body":"The PR is ready to be merged into master, approved by @jiajunwang @kaisun2000 \r\n\r\nCommit message:\r\n```\r\n Fix the zk watcher leakage issue when znode is deleted\r\n    - Leverage the EventType (NodeDeleted) to verify if the path is deleted\r\n    - If it's deleted, no need to re-install the watcher\r\n```","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/583643465/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/583647908","html_url":"https://github.com/apache/helix/pull/698#issuecomment-583647908","issue_url":"https://api.github.com/repos/apache/helix/issues/698","id":583647908,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MzY0NzkwOA==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-07T22:42:47Z","updated_at":"2020-02-07T22:42:47Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @dasahcc and @alirezazamani \r\nFinal Commit Message:\r\nImplement Azure cloud instance information processor. The processor performs the functions of fetching and parsing instance information from Azure cloud environment. The endpoint that the processor queries is a globally standard url, called Azure Instance Metadata Service.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/583647908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/583771824","html_url":"https://github.com/apache/helix/pull/731#issuecomment-583771824","issue_url":"https://api.github.com/repos/apache/helix/issues/731","id":583771824,"node_id":"MDEyOklzc3VlQ29tbWVudDU4Mzc3MTgyNA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-08T20:06:25Z","updated_at":"2020-02-08T20:06:25Z","author_association":"CONTRIBUTOR","body":"@NealSun96  \r\nWe also discussed adding validation at different stages of I/O for routing data. If that is not going to be in this PR, that's fine, but please create a GitHub issue that contains 1) what the validation will be 2) how you'll validate 3) where the validation logic should be added.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/583771824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/583805359","html_url":"https://github.com/apache/helix/pull/735#issuecomment-583805359","issue_url":"https://api.github.com/repos/apache/helix/issues/735","id":583805359,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MzgwNTM1OQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-09T05:05:58Z","updated_at":"2020-02-09T05:05:58Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/583805359/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/584290121","html_url":"https://github.com/apache/helix/pull/727#issuecomment-584290121","issue_url":"https://api.github.com/repos/apache/helix/issues/727","id":584290121,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NDI5MDEyMQ==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-10T18:46:57Z","updated_at":"2020-02-10T18:46:57Z","author_association":"CONTRIBUTOR","body":"A generic comment on all writer logics: some deletion operations can lead to a data state that is deemed \"invalid\" by `ZkRoutingDataReader`. For example, removing the last realmAddress, or removing the last sharding key for a realmAddress.\r\nQuestions:\r\n1. Do we allow that to happen? \r\n2. If we don't allow that to happen, should the logic for checking these situations be a part of this PR, or a part of the validation logic PR?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/584290121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/584302971","html_url":"https://github.com/apache/helix/pull/731#issuecomment-584302971","issue_url":"https://api.github.com/repos/apache/helix/issues/731","id":584302971,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NDMwMjk3MQ==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-10T19:16:17Z","updated_at":"2020-02-10T19:16:17Z","author_association":"CONTRIBUTOR","body":"> Please address pending comments before marking it as ready for check-in.\r\n\r\nThe validation logic will be on `TrieRoutingDataWriter` and is therefore not a part of this PR. The issue has been created: #737 ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/584302971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/584308561","html_url":"https://github.com/apache/helix/pull/727#issuecomment-584308561","issue_url":"https://api.github.com/repos/apache/helix/issues/727","id":584308561,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NDMwODU2MQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-10T19:28:54Z","updated_at":"2020-02-10T19:28:54Z","author_association":"CONTRIBUTOR","body":"> A generic comment on all writer logics: some deletion operations can lead to a data state that is deemed \"invalid\" by `ZkRoutingDataReader`. For example, removing the last realmAddress, or removing the last sharding key for a realmAddress.\r\n> Questions:\r\n> \r\n> 1. Do we allow that to happen?\r\n> 2. If we don't allow that to happen, should the logic for checking these situations be a part of this PR, or a part of the validation logic PR?\r\n\r\nCould you include some specific examples? We could do either, but since other changes might be dependent on this diff, we could create an issue with your specific TODOs so that we could include that change in other PRs. @NealSun96 ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/584308561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/584335976","html_url":"https://github.com/apache/helix/pull/727#issuecomment-584335976","issue_url":"https://api.github.com/repos/apache/helix/issues/727","id":584335976,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NDMzNTk3Ng==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-10T20:23:41Z","updated_at":"2020-02-10T20:24:48Z","author_association":"CONTRIBUTOR","body":"> > A generic comment on all writer logics: some deletion operations can lead to a data state that is deemed \"invalid\" by `ZkRoutingDataReader`. For example, removing the last realmAddress, or removing the last sharding key for a realmAddress.\r\n> > Questions:\r\n> > \r\n> > 1. Do we allow that to happen?\r\n> > 2. If we don't allow that to happen, should the logic for checking these situations be a part of this PR, or a part of the validation logic PR?\r\n> \r\n> Could you include some specific examples? We could do either, but since other changes might be dependent on this diff, we could create an issue with your specific TODOs so that we could include that change in other PRs. @NealSun96\r\n\r\nExamples: \r\n1. \"realmAddress1\" is the only realm address for namespace \"x\", and the user wants to call `deleteMetadataStoreRealm(\"realmAddress1\")`.\r\n2. \"/a/b/c\" is the only sharding key for \"realmAddressX\", and the user wants to call `deleteShardingKey(\"realmAddressX\", \"/a/b/c\")` which will leave the list field with 0 sharding key. \r\n\r\nWe still need to think about the question 1 I posted in my first comment: do we allow this to happen? From the operations alone, they don't seem \"illegal\" - users should be allowed to delete things regardless if they are the last elements. But if they are allowed to do that, `ZkRoutingDataReader` will throw exceptions as it's attempting to read because it will complain \"There are no metadata store realms defined\" for case 1 and \"Realm address does not have a value\" for case 2. \r\nIn my opinion, users should be allowed to delete regardless. When the last element is removed, the deletion should propagate up. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/584335976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/584373317","html_url":"https://github.com/apache/helix/pull/740#issuecomment-584373317","issue_url":"https://api.github.com/repos/apache/helix/issues/740","id":584373317,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NDM3MzMxNw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-10T21:46:52Z","updated_at":"2020-02-10T21:46:52Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @alirezazamani ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/584373317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/584413855","html_url":"https://github.com/apache/helix/pull/731#issuecomment-584413855","issue_url":"https://api.github.com/repos/apache/helix/issues/731","id":584413855,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NDQxMzg1NQ==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-10T23:44:15Z","updated_at":"2020-02-10T23:44:15Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly\r\nFinal commit message:\r\n## Add TrieRoutingData constructor ##\r\nThis PR adds a constructor to TrieRoutingData. The constructor takes in a mapping of sharding keys to realm addresses and parses it into a trie. Also, TrieRoutingData now treats sharding keys without leading slashes as invalid. Related changes are made due to the addition of the constructor: TrieNode is made private; missing logic is added for refreshRoutingData in ZkMetadataStoreDirectory. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/584413855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/584429052","html_url":"https://github.com/apache/helix/pull/727#issuecomment-584429052","issue_url":"https://api.github.com/repos/apache/helix/issues/727","id":584429052,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NDQyOTA1Mg==","user":{"login":"junkaixue","id":6695617,"node_id":"MDQ6VXNlcjY2OTU2MTc=","avatar_url":"https://avatars.githubusercontent.com/u/6695617?v=4","gravatar_id":"","url":"https://api.github.com/users/junkaixue","html_url":"https://github.com/junkaixue","followers_url":"https://api.github.com/users/junkaixue/followers","following_url":"https://api.github.com/users/junkaixue/following{/other_user}","gists_url":"https://api.github.com/users/junkaixue/gists{/gist_id}","starred_url":"https://api.github.com/users/junkaixue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junkaixue/subscriptions","organizations_url":"https://api.github.com/users/junkaixue/orgs","repos_url":"https://api.github.com/users/junkaixue/repos","events_url":"https://api.github.com/users/junkaixue/events{/privacy}","received_events_url":"https://api.github.com/users/junkaixue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-11T00:44:02Z","updated_at":"2020-02-11T00:44:02Z","author_association":"CONTRIBUTOR","body":"Remember to resolve the conflict","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/584429052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/584431516","html_url":"https://github.com/apache/helix/pull/727#issuecomment-584431516","issue_url":"https://api.github.com/repos/apache/helix/issues/727","id":584431516,"node_id":"MDEyOklzc3VlQ29tbWVudDU4NDQzMTUxNg==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-11T00:54:45Z","updated_at":"2020-02-11T00:54:45Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @dasahcc .\r\n\r\nAdd MetadataStoreRoutingDataWriter with DistributedLeaderElection\r\n\r\nWe need a separate ZkClient-based writer that could allow users to write routing data to ZK. This diff adds such an interface, an implementation, and a distributed lock implementation that could help users to manipulate the routing data.\r\n\r\nChangelist:\r\n\r\nAdd ZkRoutingDataWriter (+ interface)\r\nAdd ZkDistributedLock (+ interface) to guarantee that there's at most one active writer at a time (where there are multiple Helix REST deployables)\r\nAdd a test for ZkRoutingDataWriter\r\nIntegrate ZkRoutingDataWriter with ZkMetadataStoreDirectory\r\nAdd test methods to TestZkMetadataStoreDirectory\r\nAdd ZkDistributedElection to replace ZkDistributedLock (and move ZkDistributedLock to a separate PR)","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/584431516/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]