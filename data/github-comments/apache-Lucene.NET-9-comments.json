[{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/642533649","html_url":"https://github.com/apache/lucenenet/issues/286#issuecomment-642533649","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/286","id":642533649,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MjUzMzY0OQ==","user":{"login":"iwillspeak","id":1004401,"node_id":"MDQ6VXNlcjEwMDQ0MDE=","avatar_url":"https://avatars.githubusercontent.com/u/1004401?v=4","gravatar_id":"","url":"https://api.github.com/users/iwillspeak","html_url":"https://github.com/iwillspeak","followers_url":"https://api.github.com/users/iwillspeak/followers","following_url":"https://api.github.com/users/iwillspeak/following{/other_user}","gists_url":"https://api.github.com/users/iwillspeak/gists{/gist_id}","starred_url":"https://api.github.com/users/iwillspeak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iwillspeak/subscriptions","organizations_url":"https://api.github.com/users/iwillspeak/orgs","repos_url":"https://api.github.com/users/iwillspeak/repos","events_url":"https://api.github.com/users/iwillspeak/events{/privacy}","received_events_url":"https://api.github.com/users/iwillspeak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-11T09:36:25Z","updated_at":"2020-06-11T09:36:25Z","author_association":"NONE","body":"I was able to work around this by excluding the analyzers from `Lucene.Net`:\r\n\r\n```msbuild\r\n<PackageReference Include=\"Lucene.Net\" Version=\"4.8.0-beta00008\" NoWarn=\"NU5104;AD0001\">\r\n  <ExcludeAssets>analyzers</ExcludeAssets>\r\n</PackageReference>\r\n```\r\n\r\nYou'll need to make sure that you kill any existing background compiler processes though after making that change otherwise the analyzer will remain loaded.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/642533649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/645058841","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-645058841","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":645058841,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NTA1ODg0MQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-16T23:17:57Z","updated_at":"2020-06-16T23:17:57Z","author_association":"CONTRIBUTOR","body":"Thanks for the report. The stack trace is helpful as it indicates an index read failure, but could you provide more sample setup code? It would be helpful if you could provide the following:\r\n\r\n1. Which Lucene version compatibility setting you are using\r\n3. Sample code to create an index (including field/analyzer setup)\r\n4. Sample query code to read the index\r\n5. Some sample data\r\n\r\nIt is much more likely we will solve this if we have code that can be run to duplicate the conditions at the time of the exception, either as a standalone console app or a test.\r\n\r\nI suspect there may be a mismatch between the `BlockTreeTermsWriter` and the `BlockTreeTermsReader`. It may be unrelated, but there is a comment in the code [in the `BlockTreeTermsWriter`](https://github.com/apache/lucenenet/blob/a7f7c40895b156681beaea22e1da8f46e265a98c/src/Lucene.Net/Codecs/BlockTreeTermsWriter.cs#L438-L440) that indicates an index out of range exception when asserting the \"floor blocks\" data. Floor blocks are used if you have more than 48 terms in a block.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/645058841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/645421710","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-645421710","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":645421710,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NTQyMTcxMA==","user":{"login":"jregnier","id":8887814,"node_id":"MDQ6VXNlcjg4ODc4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8887814?v=4","gravatar_id":"","url":"https://api.github.com/users/jregnier","html_url":"https://github.com/jregnier","followers_url":"https://api.github.com/users/jregnier/followers","following_url":"https://api.github.com/users/jregnier/following{/other_user}","gists_url":"https://api.github.com/users/jregnier/gists{/gist_id}","starred_url":"https://api.github.com/users/jregnier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jregnier/subscriptions","organizations_url":"https://api.github.com/users/jregnier/orgs","repos_url":"https://api.github.com/users/jregnier/repos","events_url":"https://api.github.com/users/jregnier/events{/privacy}","received_events_url":"https://api.github.com/users/jregnier/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-17T14:48:45Z","updated_at":"2020-06-17T14:48:45Z","author_association":"NONE","body":"Thanks for the quick response, I can't really supply the sample data since it could be many things. The data is very diverse. Hopefully, the breakdown of my setup will be enough.\r\n\r\n`analyzer uses a chartokenizer with a lowercase filter\r\n\r\nvar dir = FSDirectory.Open(indexFolderPath);\r\nvar indexConfig = new IndexWriterConfig(LuceneVersion.LUCENE_48, {analyzer});\r\n_writer = new IndexWriter(dir, indexConfig);\r\n\r\nvar parentDocument = new Document();\r\nparentDocument.Add({BinaryDocValuesField});\r\nparentDocument.Add({StringField});\r\nparentDocument.Add({StringField});\r\nparentDocument.Add({StringField});\r\n\r\nvar childDocument = new Document();\r\nchildDocument.Add({StringField});\r\nchildDocument.Add({StringField});\r\nchildDocument.Add({TextField}) // not stored;\r\nchildDocument.Add({StringField}) // only some documents will have this;\r\n\r\n// we are creating a parent child relationship with this list of documents\r\n_writer.AddDocuments(documentList)\r\n\r\n_reader = DirectoryReader.Open(FSDirectory.Open(indexFolderPath));\r\n_searcher = new IndexSearcher(_reader);\r\nBooleanQuery.MaxClauseCount = int.MaxValue;\r\n\r\nvar searchString = \"value:*test search string*\"\r\nvar terms = new SpanMultiTermQueryWrapper<WildcardQuery>(new WildcardQuery(new Term(fieldName, word)) // terms is a list of these for each word\r\nvar childQuery = new SpanNearQuery(terms, 0, true)\r\n\r\nvar parentFilter = new FixedBitSetCachingWrapperFilter(\r\n\tnew QueryWrapperFilter(\r\n\t\tnew TermQuery(\r\n\t\t\tnew Term(fieldName, value))));\r\n\r\nvar query = ToParentBlockJoinQuery(childQuery, parentFilter, ScoreMode.Max);\r\n\r\nvar sort = new Sort(new SortField(null, SortFieldType.DOC));\r\nreturn _searcher.Search(query, _reader.NumDocs, sort)`","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/645421710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/648119529","html_url":"https://github.com/apache/lucenenet/issues/295#issuecomment-648119529","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/295","id":648119529,"node_id":"MDEyOklzc3VlQ29tbWVudDY0ODExOTUyOQ==","user":{"login":"bongohrtech","id":27625802,"node_id":"MDQ6VXNlcjI3NjI1ODAy","avatar_url":"https://avatars.githubusercontent.com/u/27625802?v=4","gravatar_id":"","url":"https://api.github.com/users/bongohrtech","html_url":"https://github.com/bongohrtech","followers_url":"https://api.github.com/users/bongohrtech/followers","following_url":"https://api.github.com/users/bongohrtech/following{/other_user}","gists_url":"https://api.github.com/users/bongohrtech/gists{/gist_id}","starred_url":"https://api.github.com/users/bongohrtech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bongohrtech/subscriptions","organizations_url":"https://api.github.com/users/bongohrtech/orgs","repos_url":"https://api.github.com/users/bongohrtech/repos","events_url":"https://api.github.com/users/bongohrtech/events{/privacy}","received_events_url":"https://api.github.com/users/bongohrtech/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-23T12:41:39Z","updated_at":"2020-06-23T12:41:39Z","author_association":"CONTRIBUTOR","body":"I believe NUnit should have an overload for numeric types but when comparing type long this seems to take a very long time to resolve. Using an overload a == b seems to result in much faster performance. The same is true for byte comparison.\r\n\r\nThis as been added to the Assert.cs file which overloads AreEqual for long and byte","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/648119529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/648122779","html_url":"https://github.com/apache/lucenenet/issues/295#issuecomment-648122779","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/295","id":648122779,"node_id":"MDEyOklzc3VlQ29tbWVudDY0ODEyMjc3OQ==","user":{"login":"bongohrtech","id":27625802,"node_id":"MDQ6VXNlcjI3NjI1ODAy","avatar_url":"https://avatars.githubusercontent.com/u/27625802?v=4","gravatar_id":"","url":"https://api.github.com/users/bongohrtech","html_url":"https://github.com/bongohrtech","followers_url":"https://api.github.com/users/bongohrtech/followers","following_url":"https://api.github.com/users/bongohrtech/following{/other_user}","gists_url":"https://api.github.com/users/bongohrtech/gists{/gist_id}","starred_url":"https://api.github.com/users/bongohrtech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bongohrtech/subscriptions","organizations_url":"https://api.github.com/users/bongohrtech/orgs","repos_url":"https://api.github.com/users/bongohrtech/repos","events_url":"https://api.github.com/users/bongohrtech/events{/privacy}","received_events_url":"https://api.github.com/users/bongohrtech/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-23T12:48:03Z","updated_at":"2020-06-23T13:22:25Z","author_association":"CONTRIBUTOR","body":"Tests in T-U seem to have been resolved where there is the most delay. \r\nAdding the following line will force the tests to use the overloaded methods. \r\n\r\nusing Assert = Lucene.Net.TestFramework.Assert;\r\n\r\nassertEquals in LuceneTestCase has also been modified to use the same equivalence checks","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/648122779/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/648164251","html_url":"https://github.com/apache/lucenenet/issues/295#issuecomment-648164251","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/295","id":648164251,"node_id":"MDEyOklzc3VlQ29tbWVudDY0ODE2NDI1MQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-23T13:53:53Z","updated_at":"2020-06-23T13:53:53Z","author_association":"CONTRIBUTOR","body":"@bongohrtech - Good find. There are several tests that are passing value types through `Assert.AreEqual(object, object)` in a tight loop, causing lots of box/unbox operations. And of course, this problem isn't limited to the `Lucene.Net.Util` namespace.\r\n\r\nI have confirmed that changing this gets both T-U and U-Z projects to run in under 3.5 minutes, which were more like 11 minutes before.\r\n\r\nWe should aim to apply this fix on all of the projects starting with the longest running ones:\r\n\r\n- `Lucene.Net.Tests._E-I`\r\n- `Lucene.Net.Tests.Analysis.Common`\r\n- `Lucene.Net.Tests.Codecs`\r\n- `Lucene.Net.Tests._A-D`\r\n- `Lucene.Net.Tests._J-S`\r\n\r\nWe can probably also consolidate some of the 5 Lucene.Net test projects that were broken up, which should help to speed up the overall time in Azure DevOps.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/648164251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/651117339","html_url":"https://github.com/apache/lucenenet/issues/267#issuecomment-651117339","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/267","id":651117339,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTExNzMzOQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-29T13:22:40Z","updated_at":"2020-06-29T13:28:38Z","author_association":"CONTRIBUTOR","body":"It turns out this is a design feature of Lucene that is used for testing. The asserts were failing by design in order to be \"caught\" in the [BaseTermVectorsFormatTestCase](https://github.com/apache/lucenenet/blob/cffc8ddd668841eaf82cf759f976ba90aa233002/src/Lucene.Net.TestFramework/Index/BaseTermVectorsFormatTestCase.cs#L637-L647). This becomes an issue on .NET Standard, because it is set up to cause a fatal crash when an assertion is thrown (when running in VSTest).\r\n\r\nI am still analyzing what the options are, but I suspect that consistently throwing an `InvalidOperationException` rather than using `Debug.Assert` in each of the `DocsAndPostionsEnum` subclasses will likely be the answer.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/651117339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/657122285","html_url":"https://github.com/apache/lucenenet/issues/246#issuecomment-657122285","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/246","id":657122285,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzEyMjI4NQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-11T20:10:13Z","updated_at":"2020-07-11T20:10:13Z","author_association":"CONTRIBUTOR","body":"I am closing this issue, as there hasn't been activity for some time. Feel free to reopen it if there are any additional updates.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/657122285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/657130656","html_url":"https://github.com/apache/lucenenet/issues/271#issuecomment-657130656","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/271","id":657130656,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzEzMDY1Ng==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-11T21:11:33Z","updated_at":"2020-07-11T21:11:33Z","author_association":"CONTRIBUTOR","body":"I looked into this a little, and it appears that the bug that was fixed in the test framework didn't solve this. When adding a `Dispose(bool)` override to the `ICUCollationKeyFilter`, `Dispose(true)` is still being called followed by additional calls to `IncrementToken()`.\r\n\r\nThis is occuring in `DocFieldProcessor` which [does a tight loop](https://github.com/apache/lucenenet/blob/081edeed35b190c1d535dcfdfeb91143f0ef818f/src/Lucene.Net/Index/DocFieldProcessor.cs#L280-L284) around some fields. It is possible that the consumer will dispose the `TokenFilter` in one loop and then another loop will retrieve the same instance of that `TokenFilter` by calling `Field.GetTokenStream(Analyzer)` and call `IncrementToken()` on it after it is disposed.\r\n\r\nAt this point I haven't confirmed this is how it works in Java so it is still unclear if this is expected behavior or a bug. If the former, we should consider the possibility of making `TokenStream` \"close\" and do that separately than \"dispose\" (see #265).","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/657130656/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/657138665","html_url":"https://github.com/apache/lucenenet/issues/286#issuecomment-657138665","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/286","id":657138665,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzEzODY2NQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-11T22:18:56Z","updated_at":"2020-07-11T22:18:56Z","author_association":"CONTRIBUTOR","body":"I started looking into this and couldn't reproduce it. Then I realized I was using 4.8.0-beta00009 instead of 4.8.0-beta00008 and sure enough, 4.8.0-beta00008 is presenting the problem. Since we didn't change anything regarding the analyzers between those 2 versions, I am at a loss to explain why the problem existed in the first place or why it suddenly disappeared.\r\n\r\nDoing a fresh build from source also doesn't present the problem.\r\n\r\nI am closing this issue for now, but feel free to reopen it if you see this problem appear in a future release.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/657138665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/661002167","html_url":"https://github.com/apache/lucenenet/pull/310#issuecomment-661002167","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/310","id":661002167,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTAwMjE2Nw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T12:34:53Z","updated_at":"2020-07-20T12:34:53Z","author_association":"CONTRIBUTOR","body":"Thanks for putting this together.\r\n\r\nI suspect the reason you are not seeing an improvement between versions is because you are using a `RAMDirectory`, which bypasses the codecs and some other components that we have improved.\r\n\r\nI added benchmarks using the `IndexFiles` and `SearchFiles` from `Lucene.Net.Demo` as templates. These are set up to use a fixed seed to generate the same data over and over again so we don't have to add several megabytes of test files to the repo just to do a benchmark.\r\n\r\nIndex speed doesn't seem to have improved, but search speed has doubled since 4.8.0-beta00005 (the one with the most downloads on NuGet.org). Here are the results for .NET Core 3.1 on on Windows.\r\n\r\n## Indexing\r\n\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.12.1, OS=Windows 10.0.18363.900 (1909/November2018Update/19H2)\r\nIntel Core i7-8850H CPU 2.60GHz (Coffee Lake), 1 CPU, 12 logical and 6 physical cores\r\n.NET Core SDK=3.1.301\r\n  [Host]          : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT  [AttachedDebugger]\r\n  4.8.0-beta00005 : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT\r\n  4.8.0-beta00006 : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT\r\n  4.8.0-beta00007 : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT\r\n  4.8.0-beta00008 : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT\r\n  4.8.0-beta00009 : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT\r\n  4.8.0-beta00010 : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT\r\n\r\nInvocationCount=1  IterationCount=15  LaunchCount=2  \r\nUnrollFactor=1  WarmupCount=10  \r\n\r\n```\r\n|     Method |             Job |                            NuGetReferences |     Mean |    Error |   StdDev |      Gen 0 |     Gen 1 |     Gen 2 | Allocated |\r\n|----------- |---------------- |------------------------------------------- |---------:|---------:|---------:|-----------:|----------:|----------:|----------:|\r\n| IndexFiles | 4.8.0-beta00005 | Lucene.Net.Analysis.Common 4.8.0-beta00005 | 734.9 ms | 37.14 ms | 55.58 ms | 44000.0000 | 8000.0000 | 7000.0000 | 221.09 MB |\r\n| IndexFiles | 4.8.0-beta00006 | Lucene.Net.Analysis.Common 4.8.0-beta00006 | 703.7 ms | 13.92 ms | 20.83 ms | 44000.0000 | 8000.0000 | 7000.0000 | 221.07 MB |\r\n| IndexFiles | 4.8.0-beta00007 | Lucene.Net.Analysis.Common 4.8.0-beta00007 | 705.3 ms | 15.95 ms | 23.38 ms | 43000.0000 | 8000.0000 | 7000.0000 |    221 MB |\r\n| IndexFiles | 4.8.0-beta00008 | Lucene.Net.Analysis.Common 4.8.0-beta00008 | 747.0 ms | 42.43 ms | 59.47 ms | 44000.0000 | 8000.0000 | 7000.0000 | 221.39 MB |\r\n| IndexFiles | 4.8.0-beta00009 | Lucene.Net.Analysis.Common 4.8.0-beta00009 | 725.3 ms | 25.59 ms | 36.70 ms | 44000.0000 | 8000.0000 | 7000.0000 | 221.31 MB |\r\n| IndexFiles | 4.8.0-beta00010 | Lucene.Net.Analysis.Common 4.8.0-beta00010 | 724.1 ms | 15.41 ms | 22.10 ms | 44000.0000 | 8000.0000 | 7000.0000 | 221.23 MB |\r\n\r\n## Searching\r\n\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.12.1, OS=Windows 10.0.18363.900 (1909/November2018Update/19H2)\r\nIntel Core i7-8850H CPU 2.60GHz (Coffee Lake), 1 CPU, 12 logical and 6 physical cores\r\n.NET Core SDK=3.1.301\r\n  [Host]          : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT  [AttachedDebugger]\r\n  4.8.0-beta00005 : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT\r\n  4.8.0-beta00006 : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT\r\n  4.8.0-beta00007 : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT\r\n  4.8.0-beta00008 : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT\r\n  4.8.0-beta00009 : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT\r\n  4.8.0-beta00010 : .NET Core 3.1.5 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.27001), X64 RyuJIT\r\n\r\nIterationCount=100  LaunchCount=3  WarmupCount=15  \r\n\r\n```\r\n|      Method |             Job |                                                                   NuGetReferences |      Mean |    Error |    StdDev |    Median |     Gen 0 |     Gen 1 | Gen 2 | Allocated |\r\n|------------ |---------------- |---------------------------------------------------------------------------------- |----------:|---------:|----------:|----------:|----------:|----------:|------:|----------:|\r\n| SearchFiles | 4.8.0-beta00005 | Lucene.Net.Analysis.Common 4.8.0-beta00005,Lucene.Net.QueryParser 4.8.0-beta00005 | 171.18 ms | 2.004 ms | 10.283 ms | 169.51 ms | 9000.0000 | 1000.0000 |     - |  41.35 MB |\r\n| SearchFiles | 4.8.0-beta00006 | Lucene.Net.Analysis.Common 4.8.0-beta00006,Lucene.Net.QueryParser 4.8.0-beta00006 | 169.86 ms | 2.666 ms | 13.754 ms | 168.14 ms | 9000.0000 | 1000.0000 |     - |  41.35 MB |\r\n| SearchFiles | 4.8.0-beta00007 | Lucene.Net.Analysis.Common 4.8.0-beta00007,Lucene.Net.QueryParser 4.8.0-beta00007 | 173.67 ms | 3.417 ms | 17.595 ms | 169.20 ms | 9000.0000 | 1000.0000 |     - |  41.26 MB |\r\n| SearchFiles | 4.8.0-beta00008 | Lucene.Net.Analysis.Common 4.8.0-beta00008,Lucene.Net.QueryParser 4.8.0-beta00008 |  95.97 ms | 1.178 ms |  6.068 ms |  95.84 ms | 8666.6667 |  500.0000 |     - |  40.33 MB |\r\n| SearchFiles | 4.8.0-beta00009 | Lucene.Net.Analysis.Common 4.8.0-beta00009,Lucene.Net.QueryParser 4.8.0-beta00009 |  93.31 ms | 0.776 ms |  3.890 ms |  93.60 ms | 8666.6667 |  500.0000 |     - |  40.33 MB |\r\n| SearchFiles | 4.8.0-beta00010 | Lucene.Net.Analysis.Common 4.8.0-beta00010,Lucene.Net.QueryParser 4.8.0-beta00010 |  85.79 ms | 0.307 ms |  1.552 ms |  85.70 ms | 8666.6667 |  500.0000 |     - |  40.19 MB |\r\n\r\n\r\nIt would be good to set up a stage on Azure DevOps to run these (off by default) so we can see the results on different operating systems and target frameworks.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/661002167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/661310572","html_url":"https://github.com/apache/lucenenet/issues/311#issuecomment-661310572","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/311","id":661310572,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTMxMDU3Mg==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T20:16:46Z","updated_at":"2020-07-20T20:16:46Z","author_association":"CONTRIBUTOR","body":"Thanks for the report.\r\n\r\nI was able to reproduce this. It is only happening on .NET Framework and only if you are using `Microsoft.Extensions.Configuration` higher than version 1.1.2 within your project. For compatibility reasons, we reference `Microsoft.Extensions.Configuration.Abstractions` version 1.1.2 in .NET Framework, since higher versions only support .NET Framework 4.6.1 and higher.\r\n\r\nThere was a breaking change introduced in `IConfigurationBuilder` between `Microsoft.Extensions.Configuration.Abstractions` version 1.1.2 and version 2.0.0 where `IConfigurationBuilder.Properties` was changed from `Dictionary<string, object>` to `IDictionary<string, object>` so the `DefaultConfigurationFactory` currently requires you to use components from `Microsoft.Extensions.Configuration` version 1.1.2 on .NET Framework.\r\n\r\nIf downgrading `Microsoft.Extensions.Configuration` is not an option, then you must downgrade to `Lucene.Net` version 4.8.0-beta-00008.\r\n\r\nWe need to get rid of the `IConfigurationBuilder` implementation to fix this problem, as the only requirement we have internally is to implement `IConfiguration` to provide a logical default that reads system variables. Unfortunately, this issue is also preventing .NET Framework users from providing their own `IConfigurationFactory` implementation to override because the exception occurs in the initialization before an alternative implementation can be set.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/661310572/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/661311314","html_url":"https://github.com/apache/lucenenet/issues/311#issuecomment-661311314","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/311","id":661311314,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTMxMTMxNA==","user":{"login":"ensemblebd","id":13471536,"node_id":"MDQ6VXNlcjEzNDcxNTM2","avatar_url":"https://avatars.githubusercontent.com/u/13471536?v=4","gravatar_id":"","url":"https://api.github.com/users/ensemblebd","html_url":"https://github.com/ensemblebd","followers_url":"https://api.github.com/users/ensemblebd/followers","following_url":"https://api.github.com/users/ensemblebd/following{/other_user}","gists_url":"https://api.github.com/users/ensemblebd/gists{/gist_id}","starred_url":"https://api.github.com/users/ensemblebd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ensemblebd/subscriptions","organizations_url":"https://api.github.com/users/ensemblebd/orgs","repos_url":"https://api.github.com/users/ensemblebd/repos","events_url":"https://api.github.com/users/ensemblebd/events{/privacy}","received_events_url":"https://api.github.com/users/ensemblebd/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T20:18:23Z","updated_at":"2020-07-20T20:18:23Z","author_association":"NONE","body":"Thank you so much!! ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/661311314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/661644111","html_url":"https://github.com/apache/lucenenet/pull/313#issuecomment-661644111","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/313","id":661644111,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTY0NDExMQ==","user":{"login":"bongohrtech","id":27625802,"node_id":"MDQ6VXNlcjI3NjI1ODAy","avatar_url":"https://avatars.githubusercontent.com/u/27625802?v=4","gravatar_id":"","url":"https://api.github.com/users/bongohrtech","html_url":"https://github.com/bongohrtech","followers_url":"https://api.github.com/users/bongohrtech/followers","following_url":"https://api.github.com/users/bongohrtech/following{/other_user}","gists_url":"https://api.github.com/users/bongohrtech/gists{/gist_id}","starred_url":"https://api.github.com/users/bongohrtech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bongohrtech/subscriptions","organizations_url":"https://api.github.com/users/bongohrtech/orgs","repos_url":"https://api.github.com/users/bongohrtech/repos","events_url":"https://api.github.com/users/bongohrtech/events{/privacy}","received_events_url":"https://api.github.com/users/bongohrtech/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-21T05:35:41Z","updated_at":"2020-07-21T05:35:41Z","author_association":"CONTRIBUTOR","body":"FindFirstFailing and Seed attribute files allow to specify a particular seed to run a test under","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/661644111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/661843488","html_url":"https://github.com/apache/lucenenet/pull/313#issuecomment-661843488","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/313","id":661843488,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTg0MzQ4OA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-21T12:55:35Z","updated_at":"2020-07-21T12:55:35Z","author_association":"CONTRIBUTOR","body":"Its a bit strange, but although this seems to have fixed the `TestRandomStrings` tests for `TestICUFoldingFilter` and `TestThaiAnalyzer`, the `TestThaiAnalzyer::TestRandomHugeStrings()` test still fails. But digging into it, they both terminate in the same place, the only difference is the `maxWordLength` parameter is increased.\r\n\r\nI suspect we may have a difference in behavior somewhere in `TestUtil.RandomAnalysisString(Random, int, bool)` that may be causing some rare weirdness. Sadly, `TestUtil` has no tests to verify the behavior is doing what it should be doing.\r\n\r\n`TestUtil.RandomAnalysisString()` is also called by `Lucene.Net.Analysis.NGram.EdgeNGramTokenizerTest::TestFullUTF8Range()` and `Lucene.Net.Analysis.NGram.NGramTokenizerTest::TestFullUTF8Range()`, both which are also randomly failing. Perhaps one of the paths that `TestUtil.RandomSubString()` is going down is broken, which would explain the randomness. I suggest to divide and conquer - keep excluding the random paths until you find the one that causes the failure to stop happening. That would probably be a bit quicker than reviewing every one of those methods and comparing them against the Java implementation.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/661843488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/662446497","html_url":"https://github.com/apache/lucenenet/issues/281#issuecomment-662446497","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/281","id":662446497,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjQ0NjQ5Nw==","user":{"login":"Matt2843","id":11424782,"node_id":"MDQ6VXNlcjExNDI0Nzgy","avatar_url":"https://avatars.githubusercontent.com/u/11424782?v=4","gravatar_id":"","url":"https://api.github.com/users/Matt2843","html_url":"https://github.com/Matt2843","followers_url":"https://api.github.com/users/Matt2843/followers","following_url":"https://api.github.com/users/Matt2843/following{/other_user}","gists_url":"https://api.github.com/users/Matt2843/gists{/gist_id}","starred_url":"https://api.github.com/users/Matt2843/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Matt2843/subscriptions","organizations_url":"https://api.github.com/users/Matt2843/orgs","repos_url":"https://api.github.com/users/Matt2843/repos","events_url":"https://api.github.com/users/Matt2843/events{/privacy}","received_events_url":"https://api.github.com/users/Matt2843/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-22T13:15:50Z","updated_at":"2020-07-22T13:15:50Z","author_association":"NONE","body":"Personally used this version of Luke on a daily basis for a good while with Lucene.NET 4.8.0 beta indexes (the Luke GUI from the jar file) and have not experienced any issues yet - the indexes I inspect with Luke are however very similar.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/662446497/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663343798","html_url":"https://github.com/apache/lucenenet/pull/313#issuecomment-663343798","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/313","id":663343798,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzM0Mzc5OA==","user":{"login":"bongohrtech","id":27625802,"node_id":"MDQ6VXNlcjI3NjI1ODAy","avatar_url":"https://avatars.githubusercontent.com/u/27625802?v=4","gravatar_id":"","url":"https://api.github.com/users/bongohrtech","html_url":"https://github.com/bongohrtech","followers_url":"https://api.github.com/users/bongohrtech/followers","following_url":"https://api.github.com/users/bongohrtech/following{/other_user}","gists_url":"https://api.github.com/users/bongohrtech/gists{/gist_id}","starred_url":"https://api.github.com/users/bongohrtech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bongohrtech/subscriptions","organizations_url":"https://api.github.com/users/bongohrtech/orgs","repos_url":"https://api.github.com/users/bongohrtech/repos","events_url":"https://api.github.com/users/bongohrtech/events{/privacy}","received_events_url":"https://api.github.com/users/bongohrtech/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T04:41:54Z","updated_at":"2020-07-24T04:41:54Z","author_association":"CONTRIBUTOR","body":"> Its a bit strange, but although this seems to have fixed the `TestRandomStrings` tests for `TestICUFoldingFilter` and `TestThaiAnalyzer`, the `TestThaiAnalzyer::TestRandomHugeStrings()` test still fails. But digging into it, they both terminate in the same place, the only difference is the `maxWordLength` parameter is increased.\r\n> \r\n> I suspect we may have a difference in behavior somewhere in `TestUtil.RandomAnalysisString(Random, int, bool)` that may be causing some rare weirdness. Sadly, `TestUtil` has no tests to verify the behavior is doing what it should be doing.\r\n> \r\n> `TestUtil.RandomAnalysisString()` is also called by `Lucene.Net.Analysis.NGram.EdgeNGramTokenizerTest::TestFullUTF8Range()` and `Lucene.Net.Analysis.NGram.NGramTokenizerTest::TestFullUTF8Range()`, both which are also randomly failing. Perhaps one of the paths that `TestUtil.RandomSubString()` is going down is broken, which would explain the randomness. I suggest to divide and conquer - keep excluding the random paths until you find the one that causes the failure to stop happening. That would probably be a bit quicker than reviewing every one of those methods and comparing them against the Java implementation.\r\n\r\nI am not seeing the failing tests for TestRandomHugeStrings - can you rerun and perhaps send the seed failing? Ive run this several times and havent hit this issue. However, maybe this is because im using the FindFirstFailingSeed attribute - this sets NUnit.Framework.Internal.Randomizer.InitialSeed and NUnit.Framework.Internal.TestExecutionContext.CurrentContext.CurrentTest.Seed to the same seed which are not under normal conditions. \r\n\r\nRandomAnalysisString is producing the same result each time, I verified this by writing the hashed outputs to a file with the iteration and comparing them on subsequent runs. All identical. I can include this code in the pull request if you want to review?\r\n\r\nI will take a look at those other tests now (Lucene.Net.Analysis.NGram.EdgeNGramTokenizerTest::TestFullUTF8Range()/Lucene.Net.Analysis.NGram.NGramTokenizerTest::TestFullUTF8Range())\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663343798/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663348518","html_url":"https://github.com/apache/lucenenet/pull/313#issuecomment-663348518","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/313","id":663348518,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzM0ODUxOA==","user":{"login":"bongohrtech","id":27625802,"node_id":"MDQ6VXNlcjI3NjI1ODAy","avatar_url":"https://avatars.githubusercontent.com/u/27625802?v=4","gravatar_id":"","url":"https://api.github.com/users/bongohrtech","html_url":"https://github.com/bongohrtech","followers_url":"https://api.github.com/users/bongohrtech/followers","following_url":"https://api.github.com/users/bongohrtech/following{/other_user}","gists_url":"https://api.github.com/users/bongohrtech/gists{/gist_id}","starred_url":"https://api.github.com/users/bongohrtech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bongohrtech/subscriptions","organizations_url":"https://api.github.com/users/bongohrtech/orgs","repos_url":"https://api.github.com/users/bongohrtech/repos","events_url":"https://api.github.com/users/bongohrtech/events{/privacy}","received_events_url":"https://api.github.com/users/bongohrtech/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T05:06:51Z","updated_at":"2020-07-24T05:06:51Z","author_association":"CONTRIBUTOR","body":"Seems both these tests call RandomUnicodeString which is predictably failing on the same seed. This one is solvable i think. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663348518/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663372626","html_url":"https://github.com/apache/lucenenet/pull/313#issuecomment-663372626","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/313","id":663372626,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzM3MjYyNg==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T06:47:14Z","updated_at":"2020-07-24T06:47:14Z","author_association":"CONTRIBUTOR","body":"> I will take a look at those other tests now (Lucene.Net.Analysis.NGram.EdgeNGramTokenizerTest::TestFullUTF8Range()/Lucene.Net.Analysis.NGram.NGramTokenizerTest::TestFullUTF8Range())\r\n\r\nThere's no need. This has been patched already in #316.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663372626/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663433775","html_url":"https://github.com/apache/lucenenet/pull/313#issuecomment-663433775","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/313","id":663433775,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzQzMzc3NQ==","user":{"login":"bongohrtech","id":27625802,"node_id":"MDQ6VXNlcjI3NjI1ODAy","avatar_url":"https://avatars.githubusercontent.com/u/27625802?v=4","gravatar_id":"","url":"https://api.github.com/users/bongohrtech","html_url":"https://github.com/bongohrtech","followers_url":"https://api.github.com/users/bongohrtech/followers","following_url":"https://api.github.com/users/bongohrtech/following{/other_user}","gists_url":"https://api.github.com/users/bongohrtech/gists{/gist_id}","starred_url":"https://api.github.com/users/bongohrtech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bongohrtech/subscriptions","organizations_url":"https://api.github.com/users/bongohrtech/orgs","repos_url":"https://api.github.com/users/bongohrtech/repos","events_url":"https://api.github.com/users/bongohrtech/events{/privacy}","received_events_url":"https://api.github.com/users/bongohrtech/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T09:09:27Z","updated_at":"2020-07-24T09:09:27Z","author_association":"CONTRIBUTOR","body":"> > I will take a look at those other tests now (Lucene.Net.Analysis.NGram.EdgeNGramTokenizerTest::TestFullUTF8Range()/Lucene.Net.Analysis.NGram.NGramTokenizerTest::TestFullUTF8Range())\r\n> \r\n> There's no need. This has been patched already in #316.\r\n\r\nAck I wish I had checked my email earlier, this does seem to fix the error. I had found a seed that failed but didnt understand why. I suspected IncrementToken() but clearly not the issue","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663433775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663459085","html_url":"https://github.com/apache/lucenenet/pull/313#issuecomment-663459085","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/313","id":663459085,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzQ1OTA4NQ==","user":{"login":"bongohrtech","id":27625802,"node_id":"MDQ6VXNlcjI3NjI1ODAy","avatar_url":"https://avatars.githubusercontent.com/u/27625802?v=4","gravatar_id":"","url":"https://api.github.com/users/bongohrtech","html_url":"https://github.com/bongohrtech","followers_url":"https://api.github.com/users/bongohrtech/followers","following_url":"https://api.github.com/users/bongohrtech/following{/other_user}","gists_url":"https://api.github.com/users/bongohrtech/gists{/gist_id}","starred_url":"https://api.github.com/users/bongohrtech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bongohrtech/subscriptions","organizations_url":"https://api.github.com/users/bongohrtech/orgs","repos_url":"https://api.github.com/users/bongohrtech/repos","events_url":"https://api.github.com/users/bongohrtech/events{/privacy}","received_events_url":"https://api.github.com/users/bongohrtech/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T09:50:34Z","updated_at":"2020-07-24T09:50:34Z","author_association":"CONTRIBUTOR","body":"Adding this before the test runs\r\n            NUnit.Framework.Internal.Randomizer.InitialSeed = NUnit.Framework.Internal.TestExecutionContext.CurrentContext.CurrentTest.Seed;\r\n\r\nseems to stop the tests erroring. Is this hiding something tho? If there is one random using a different seed, this shouldn't cause an issue. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663459085/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663676427","html_url":"https://github.com/apache/lucenenet/issues/286#issuecomment-663676427","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/286","id":663676427,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzY3NjQyNw==","user":{"login":"deanmarcussen","id":13782679,"node_id":"MDQ6VXNlcjEzNzgyNjc5","avatar_url":"https://avatars.githubusercontent.com/u/13782679?v=4","gravatar_id":"","url":"https://api.github.com/users/deanmarcussen","html_url":"https://github.com/deanmarcussen","followers_url":"https://api.github.com/users/deanmarcussen/followers","following_url":"https://api.github.com/users/deanmarcussen/following{/other_user}","gists_url":"https://api.github.com/users/deanmarcussen/gists{/gist_id}","starred_url":"https://api.github.com/users/deanmarcussen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deanmarcussen/subscriptions","organizations_url":"https://api.github.com/users/deanmarcussen/orgs","repos_url":"https://api.github.com/users/deanmarcussen/repos","events_url":"https://api.github.com/users/deanmarcussen/events{/privacy}","received_events_url":"https://api.github.com/users/deanmarcussen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T18:35:14Z","updated_at":"2020-07-24T18:35:14Z","author_association":"NONE","body":"For info this issue resurfaced on `4.8.0-beta00010` for me.\r\n\r\nDowngraded to `4.8.0-beta00009` worked fine, downgraded to `4.8.0-beta00008` same error.\r\n\r\nResolved by upgrading the dotnet core sdk (I was one dot release behind)\r\n\r\nMacOS","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663676427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663681169","html_url":"https://github.com/apache/lucenenet/issues/286#issuecomment-663681169","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/286","id":663681169,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzY4MTE2OQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T18:47:19Z","updated_at":"2020-07-24T18:47:19Z","author_association":"CONTRIBUTOR","body":"Strange. My guess is a bug in certain SDKs. I confirmed that `4.8.0-beta00010` and  `4.8.0-beta00011` didn't present the problem before starting the release vote.\r\n\r\nJust out of curiosity, does upgrading the SDK \"fix\" `4.8.0-beta00008`? I am seeing the problem in that version, but not in any of the others. I am using SDK version `3.1.301` to build locally and on the CI environment. I also checked both .NET Framework 4.7.2 and .NET Core 3.1 and the behavior seemed consistent on both targets.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663681169/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663833490","html_url":"https://github.com/apache/lucenenet/issues/286#issuecomment-663833490","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/286","id":663833490,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzgzMzQ5MA==","user":{"login":"deanmarcussen","id":13782679,"node_id":"MDQ6VXNlcjEzNzgyNjc5","avatar_url":"https://avatars.githubusercontent.com/u/13782679?v=4","gravatar_id":"","url":"https://api.github.com/users/deanmarcussen","html_url":"https://github.com/deanmarcussen","followers_url":"https://api.github.com/users/deanmarcussen/followers","following_url":"https://api.github.com/users/deanmarcussen/following{/other_user}","gists_url":"https://api.github.com/users/deanmarcussen/gists{/gist_id}","starred_url":"https://api.github.com/users/deanmarcussen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deanmarcussen/subscriptions","organizations_url":"https://api.github.com/users/deanmarcussen/orgs","repos_url":"https://api.github.com/users/deanmarcussen/repos","events_url":"https://api.github.com/users/deanmarcussen/events{/privacy}","received_events_url":"https://api.github.com/users/deanmarcussen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-25T09:23:16Z","updated_at":"2020-07-25T09:23:16Z","author_association":"NONE","body":"Our CI built `4.8.0-beta00011` fine as well.\r\n\r\nThink I figured it out.\r\n\r\nNuGet version weirdness / background dotnet / OmniSharp processes keeping the wrong dll version in memory (what @iwillspeak  refers to essentially, about the analyzer staying loaded in memory)\r\n\r\nWith SDK `3.1.302`\r\nWent to build `4.8.0-beta00011` and it failed.\r\nDropping back to every other version, since `4.8.0-beta00008` and it succeeded\r\n\r\nDropped back to `3.1.106` and everything started failing except `4.8.0-beta00010`\r\n\r\nCleared out the `NuGet` cache of all my `Lucene.Net` packages and went back to SDK `3.1.302` and `4.8.0-beta00011` and it builds ok.\r\n\r\nDrop back to version `4.8.0-beta00010` and it builds.\r\nThen build `4.8.0-beta00011` and it fails.\r\nDelete the `4.8.0-beta00010` from the NuGet cache and version `4.8.0-beta00011` builds fine.\r\n\r\nDo the above process again with a `killall dotnet` between version upgrades and it built the new version fine.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/663833490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/664470139","html_url":"https://github.com/apache/lucenenet/issues/317#issuecomment-664470139","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/317","id":664470139,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDQ3MDEzOQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-27T15:36:42Z","updated_at":"2020-07-27T15:37:46Z","author_association":"CONTRIBUTOR","body":"Yes, this is expected behavior, as the target we are currently using for .NET Framework is `net45`. Unfortunately, newer versions of `Microsoft.Extensions.Configuration.Abstractions` only support `net461` so we had to reference version 1.1.2 on .NET Standard 1.1.\r\n\r\nHowever, there is an easy workaround. Since we are not constraining the version, simply install the latest [`Microsoft.Extensions.Configuration.Abstactions`](https://www.nuget.org/packages/Microsoft.Extensions.Configuration.Abstractions/3.1.6) version 3.1.6 before you install Lucene.Net, then it won't install any of the .NET Standard 1.x dependencies since a compatible version will already exist in your project.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/664470139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/664499191","html_url":"https://github.com/apache/lucenenet/issues/317#issuecomment-664499191","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/317","id":664499191,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDQ5OTE5MQ==","user":{"login":"tmc101","id":11647741,"node_id":"MDQ6VXNlcjExNjQ3NzQx","avatar_url":"https://avatars.githubusercontent.com/u/11647741?v=4","gravatar_id":"","url":"https://api.github.com/users/tmc101","html_url":"https://github.com/tmc101","followers_url":"https://api.github.com/users/tmc101/followers","following_url":"https://api.github.com/users/tmc101/following{/other_user}","gists_url":"https://api.github.com/users/tmc101/gists{/gist_id}","starred_url":"https://api.github.com/users/tmc101/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmc101/subscriptions","organizations_url":"https://api.github.com/users/tmc101/orgs","repos_url":"https://api.github.com/users/tmc101/repos","events_url":"https://api.github.com/users/tmc101/events{/privacy}","received_events_url":"https://api.github.com/users/tmc101/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-27T16:25:10Z","updated_at":"2020-07-27T16:25:10Z","author_association":"NONE","body":"Thanks.\r\n\r\nThe workaround worked - but now I'm seeing:\r\n\r\n![image](https://user-images.githubusercontent.com/11647741/88565330-53208500-d02c-11ea-83b1-0cbf83009f44.png)\r\n\r\nThis seems to be #286 - I'll wait to see what happens there.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/664499191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/665266574","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-665266574","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":665266574,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTI2NjU3NA==","user":{"login":"jregnier","id":8887814,"node_id":"MDQ6VXNlcjg4ODc4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8887814?v=4","gravatar_id":"","url":"https://api.github.com/users/jregnier","html_url":"https://github.com/jregnier","followers_url":"https://api.github.com/users/jregnier/followers","following_url":"https://api.github.com/users/jregnier/following{/other_user}","gists_url":"https://api.github.com/users/jregnier/gists{/gist_id}","starred_url":"https://api.github.com/users/jregnier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jregnier/subscriptions","organizations_url":"https://api.github.com/users/jregnier/orgs","repos_url":"https://api.github.com/users/jregnier/repos","events_url":"https://api.github.com/users/jregnier/events{/privacy}","received_events_url":"https://api.github.com/users/jregnier/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-28T20:29:30Z","updated_at":"2020-07-28T20:29:30Z","author_association":"NONE","body":"any ideas on this???","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/665266574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/665507225","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-665507225","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":665507225,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTUwNzIyNQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-29T08:08:13Z","updated_at":"2020-07-29T08:08:13Z","author_association":"CONTRIBUTOR","body":"I traced an issue that was causing another `IndexOutOfRangeException` in the `ThaiTokenizer` to an invalid cast from `int` to `char` that was causing it to filter out surrogate pairs when it shouldn't have been. This is the second such issue I found this week, and searching through the analyzers for the string `(char)`, this appears to be a problem that affects several of them. This is definitely a bug that we will need to address.\r\n\r\nIt might also be useful to know whether the problem you are seeing is happening in all cultures. In Java, none of the methods are culture-sensitive, so to match the behavior we should be using the invariant culture. .NET has [several methods that are culture-sensitive by default](https://docs.microsoft.com/en-us/dotnet/standard/base-types/best-practices-strings). While we have gone through to ensure we are not calling any of them in places where we shouldn't be, there could be a case or two that were missed or were recently added. If you switch the current thread to the invariant culture, does it cause the problem to go away?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/665507225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/665513766","html_url":"https://github.com/apache/lucenenet/issues/318#issuecomment-665513766","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/318","id":665513766,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTUxMzc2Ng==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-29T08:20:42Z","updated_at":"2020-07-29T08:20:42Z","author_association":"CONTRIBUTOR","body":"We apologize for the confusion. The releases are legitimate, it is just that there are still several manual steps with releasing the documentation, so it has fallen a bit behind. The list of changes can be found on the [releases page](https://github.com/apache/lucenenet/releases). We haven't had many new features in awhile, we are mainly focused on improving performance, and have [doubled search speed since 4.8.0-beta0007](https://github.com/apache/lucenenet/pull/310#issuecomment-661002167).\r\n\r\n4.8.0-beta00011 was an unplanned release to fix a bug introduced in 4.8.0-beta00009 that affects .NET Framework users that have `Microsoft.Extensions.Configuration.Abstractions` higher than 1.1.2 installed in their project.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/665513766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/665516967","html_url":"https://github.com/apache/lucenenet/issues/319#issuecomment-665516967","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/319","id":665516967,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTUxNjk2Nw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-29T08:26:34Z","updated_at":"2020-07-29T08:26:34Z","author_association":"CONTRIBUTOR","body":"What version are you seeing this in? And does the behavior differ between versions?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/665516967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/665518934","html_url":"https://github.com/apache/lucenenet/issues/319#issuecomment-665518934","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/319","id":665518934,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTUxODkzNA==","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-29T08:29:57Z","updated_at":"2020-07-29T08:29:57Z","author_association":"CONTRIBUTOR","body":"> What version are you seeing this in? And does the behavior differ between versions?\r\n\r\nlatest (beta 11, it was also on previous versions from the beta 8, maybe even before but this issue was on beta 8)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/665518934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/665838664","html_url":"https://github.com/apache/lucenenet/issues/318#issuecomment-665838664","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/318","id":665838664,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTgzODY2NA==","user":{"login":"jregnier","id":8887814,"node_id":"MDQ6VXNlcjg4ODc4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8887814?v=4","gravatar_id":"","url":"https://api.github.com/users/jregnier","html_url":"https://github.com/jregnier","followers_url":"https://api.github.com/users/jregnier/followers","following_url":"https://api.github.com/users/jregnier/following{/other_user}","gists_url":"https://api.github.com/users/jregnier/gists{/gist_id}","starred_url":"https://api.github.com/users/jregnier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jregnier/subscriptions","organizations_url":"https://api.github.com/users/jregnier/orgs","repos_url":"https://api.github.com/users/jregnier/repos","events_url":"https://api.github.com/users/jregnier/events{/privacy}","received_events_url":"https://api.github.com/users/jregnier/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-29T18:49:07Z","updated_at":"2020-07-29T18:49:07Z","author_association":"NONE","body":"Thanks for the reply. That's perfect, doubled the speed!! that's extremely exciting.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/665838664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666064558","html_url":"https://github.com/apache/lucenenet/issues/318#issuecomment-666064558","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/318","id":666064558,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NjA2NDU1OA==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-30T03:11:02Z","updated_at":"2020-07-30T03:11:02Z","author_association":"CONTRIBUTOR","body":"FYI I've also just published the download pages for beta00010 and beta00011: https://lucenenet.apache.org/download/download.html (just needs a ctrl + f5 refresh). ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666064558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666122407","html_url":"https://github.com/apache/lucenenet/issues/308#issuecomment-666122407","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/308","id":666122407,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NjEyMjQwNw==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-30T05:22:42Z","updated_at":"2020-07-30T05:22:42Z","author_association":"CONTRIBUTOR","body":"Just adding some notes here for now, with the change here https://github.com/apache/lucenenet/pull/312 this fixes a deadlocking scenario which i was encountering when trying to debug this. Now that there is no deadlock the tests will work as expected however using a custom nunit test runner attribute (FindFirstFailingSeed) I still see that the test runs slow. While debugging it and stepping through the code we no longer see deadlocks so I can actively step through the code but when using the Parallel Stacks view in VS or just the Threads window we can see there's always many threads waiting on a single lock. \r\n\r\nSome main things to note:\r\n\r\n* Quite a lot of threads call into IndexWriter.CopySegmentAsIs and then wait on\r\n  * `Debug.Assert(!SlowFileExists(directory, newFileName), \"file \\\"\" + newFileName + \"\\\" already exists; siFiles=\" + string.Format(J2N.Text.StringFormatter.InvariantCulture, \"{0}\", siFiles));`  ... Since this only runs in Debug builds, i wonder if the unit tests on the build server are running in debug mode? This assertion actually comes with a lot of overhead!! It also takes a lock on the same lock that we are waiting on within `MockDirectoryWrapper.locker`. \r\n  * And then later on `info.Info.Dir.Copy(directory, file, newFileName, context);` ... This also takes a lock on the same lock we are waiting within `MockDirectoryWrapper.locker` because it calls into `MockDirectoryWrapper.Copy` which takes a lock \r\n    * ... Actually, it turns out that `MockDirectoryWrapper.Copy` will force a recursive lock on `MockDirectoryWrapper.locker` even with our changes/fixes to recursive locking. This is because: `MockDirectoryWrapper.Copy` (Lock!) -> `Directory.Copy` -> `IOUtils.DisposeWhileHandlingException(priorException, os, @is)` (where os == MockIndexOutputWrapper) -> `MockIndexOutputWrapper.Dispose` -> `MockDirectoryWrapper.RemoveIndexOutput` (Recursive lock!)\r\n\r\nI think the above few things probably plays a role in the performance of this test so need to investigate this a little more. Since there is a recursive lock via indirect references that general means there can be deadlocks again but seeing as though there are so many locks trying to be taken anyways this will slow things down quite a lot.\r\n    \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666122407/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666186961","html_url":"https://github.com/apache/lucenenet/issues/308#issuecomment-666186961","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/308","id":666186961,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NjE4Njk2MQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-30T07:26:46Z","updated_at":"2020-07-30T15:56:59Z","author_association":"CONTRIBUTOR","body":"> Debug.Assert(!SlowFileExists(directory, newFileName), \"file \\\"\" + newFileName + \"\\\" already exists; siFiles=\" + string.Format(J2N.Text.StringFormatter.InvariantCulture, \"{0}\", siFiles)); ... Since this only runs in Debug builds, i wonder if the unit tests on the build server are running in debug mode? This assertion actually comes with a lot of overhead!! It also takes a lock on the same lock that we are waiting on within MockDirectoryWrapper.locker.\r\n\r\nThis goes to the heart of one of a few dozen issues that I have written down in a notebook that I haven't reported on GitHub yet.\r\n\r\nIn Java, it is possible to turn on and off asserts in a production build, they aren't simply compiled out of the build. They are turned on during testing. What this effectively means is that there are a whole suite of tests (namely anything that is using `System.Diagnostics.Debug.Assert()` currently) that we are completely skipping. To make matters even more complicated, some parts of the test framework are designed to catch the `AssertionError` that is thrown from those asserts when they fail and ignore them, and other parts are designed to fail the test in those cases.\r\n\r\nI recently \"fixed\" a related issue (#299) by throwing `InvalidOperationException`, but I see that may have been the wrong approach, since the test framework has different behavior for `AssertionException` and `InvalidOperationException` in some cases.\r\n\r\nI have been considering ways of reproducing the Java assertion behavior without producing negative performance impacts in production. But one of the main things to note is that `Debug.Assert()` is implemented as a regular function in .NET, meaning that both parameters are resolved first before it is called. Putting an expensive function call and/or expensive string building operation there is what is causing this problem in Debug builds. In Java, the asserts are not implemented as a function, and I suspect the compiler doesn't run the string building operation unless the assert fails, and I am sure neither of them are run if assertions are disabled.\r\n\r\nWhat is needed is to come up with a solution that allows us to turn on asserts during testing in a way that doesn't hamper debug or runtime performance. One option I have been considering is to create a wrapper for `Debug.Assert`, something like:\r\n\r\n```c#\r\n\r\ninternal static class Debugging\r\n{\r\n\r\n    public static bool AssertsEnabled { get; set; } = SystemProperties.GetPropertyAsBoolean(\"assert\", false);\r\n\r\n    [MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n    public static void Assert(Func<bool> conditionFactory, Func<string> messageFactory)\r\n    {\r\n        if (AssertsEnabled)\r\n        {\r\n            if (!conditionFactory())\r\n                throw new AssertionException(messageFactory());\r\n        }\r\n        else\r\n        {\r\n            Debug.Assert(conditionFactory(), messageFactory()); // Note this line is completely removed from Release builds\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nWhich can be used like:\r\n\r\n```c#\r\nDebugging.Assert(() => !SlowFileExists(directory, newFileName), () => \"file \\\"\" + newFileName + \"\\\" already exists; siFiles=\" + string.Format(J2N.Text.StringFormatter.InvariantCulture, \"{0}\", siFiles));\r\n```\r\n\r\nI suspect to get optimal production performance, we will probably also have to duplicate the `AssertsEnabled` check, even though it is not DRY. That will completely cut off the execution path to the fallback `Debug.Assert()` call in debug mode, but being that it is implemented as a function, it is probably best that we don't include it for debugging anyway and just rely on turning assertions \"on\" or \"off\".\r\n\r\n```c#\r\nif (Debugging.AssertsEnabled)\r\n    Debugging.Assert(() => !SlowFileExists(directory, newFileName), () => \"file \\\"\" + newFileName + \"\\\" already exists; siFiles=\" + string.Format(J2N.Text.StringFormatter.InvariantCulture, \"{0}\", siFiles));\r\n```\r\n\r\nDo note that the `AssertionException` already exists in the test framework. I have been trying to avoid putting testing code in the release, but it appears in order to duplicate this behavior we will either need to or come up with a solution that involves injecting a class for testing purposes or include it in the release code. Certainly to turn \"on\" and \"off\" asserts in production, it would be easier to follow the former approach.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666186961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666371974","html_url":"https://github.com/apache/lucenenet/issues/318#issuecomment-666371974","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/318","id":666371974,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NjM3MTk3NA==","user":{"login":"jregnier","id":8887814,"node_id":"MDQ6VXNlcjg4ODc4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8887814?v=4","gravatar_id":"","url":"https://api.github.com/users/jregnier","html_url":"https://github.com/jregnier","followers_url":"https://api.github.com/users/jregnier/followers","following_url":"https://api.github.com/users/jregnier/following{/other_user}","gists_url":"https://api.github.com/users/jregnier/gists{/gist_id}","starred_url":"https://api.github.com/users/jregnier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jregnier/subscriptions","organizations_url":"https://api.github.com/users/jregnier/orgs","repos_url":"https://api.github.com/users/jregnier/repos","events_url":"https://api.github.com/users/jregnier/events{/privacy}","received_events_url":"https://api.github.com/users/jregnier/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-30T13:41:48Z","updated_at":"2020-07-30T13:41:48Z","author_association":"NONE","body":"Perfect! thanks for the great works guys","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666371974/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666463512","html_url":"https://github.com/apache/lucenenet/issues/284#issuecomment-666463512","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/284","id":666463512,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NjQ2MzUxMg==","user":{"login":"mikeren2014","id":15608957,"node_id":"MDQ6VXNlcjE1NjA4OTU3","avatar_url":"https://avatars.githubusercontent.com/u/15608957?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeren2014","html_url":"https://github.com/mikeren2014","followers_url":"https://api.github.com/users/mikeren2014/followers","following_url":"https://api.github.com/users/mikeren2014/following{/other_user}","gists_url":"https://api.github.com/users/mikeren2014/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeren2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeren2014/subscriptions","organizations_url":"https://api.github.com/users/mikeren2014/orgs","repos_url":"https://api.github.com/users/mikeren2014/repos","events_url":"https://api.github.com/users/mikeren2014/events{/privacy}","received_events_url":"https://api.github.com/users/mikeren2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-30T15:33:43Z","updated_at":"2020-07-30T15:33:43Z","author_association":"NONE","body":"Anyone knows which Java version the latest Lucene.Net maps to?\r\n\r\nAnd why Lucene.Net has no stable version released for such a long time?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666463512/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666504940","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-666504940","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":666504940,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NjUwNDk0MA==","user":{"login":"mlaufer","id":5954692,"node_id":"MDQ6VXNlcjU5NTQ2OTI=","avatar_url":"https://avatars.githubusercontent.com/u/5954692?v=4","gravatar_id":"","url":"https://api.github.com/users/mlaufer","html_url":"https://github.com/mlaufer","followers_url":"https://api.github.com/users/mlaufer/followers","following_url":"https://api.github.com/users/mlaufer/following{/other_user}","gists_url":"https://api.github.com/users/mlaufer/gists{/gist_id}","starred_url":"https://api.github.com/users/mlaufer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mlaufer/subscriptions","organizations_url":"https://api.github.com/users/mlaufer/orgs","repos_url":"https://api.github.com/users/mlaufer/repos","events_url":"https://api.github.com/users/mlaufer/events{/privacy}","received_events_url":"https://api.github.com/users/mlaufer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-30T16:24:18Z","updated_at":"2020-07-30T16:24:18Z","author_association":"NONE","body":"Hi @NightOwl888,\r\n\r\nI can basically confirm the behavior described here when using FuzzyQuery, most of the times it works, but sometimes searches fail with a pretty similar exception tho: \r\n\r\n`System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at Lucene.Net.Util.Automaton.UTF32ToUTF8.Convert(Automaton utf32)\r\n   at Lucene.Net.Util.Automaton.CompiledAutomaton..ctor(Automaton automaton, Nullable`1 finite, Boolean simplify)\r\n   at Lucene.Net.Search.FuzzyTermsEnum.InitAutomata(Int32 maxDistance)\r\n   at Lucene.Net.Search.FuzzyTermsEnum.GetAutomatonEnum(Int32 editDistance, BytesRef lastTerm)\r\n   at Lucene.Net.Search.FuzzyTermsEnum.MaxEditDistanceChanged(BytesRef lastTerm, Int32 maxEdits, Boolean init)\r\n   at Lucene.Net.Search.FuzzyTermsEnum..ctor(Terms terms, AttributeSource atts, Term term, Single minSimilarity, Int32 prefixLength, Boolean transpositions)\r\n   at Lucene.Net.Search.FuzzyQuery.GetTermsEnum(Terms terms, AttributeSource atts)\r\n   at Lucene.Net.Search.TermCollectingRewrite`1.CollectTerms(IndexReader reader, MultiTermQuery query, TermCollector collector)\r\n   at Lucene.Net.Search.TopTermsRewrite`1.Rewrite(IndexReader reader, MultiTermQuery query)\r\n   at Lucene.Net.Search.BooleanQuery.Rewrite(IndexReader reader)\r\n   at Lucene.Net.Search.BooleanQuery.Rewrite(IndexReader reader)\r\n   at Lucene.Net.Search.BooleanQuery.Rewrite(IndexReader reader)\r\n   at Lucene.Net.Search.IndexSearcher.Rewrite(Query original)\r\n   at Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query query)\r\n   at Lucene.Net.Search.IndexSearcher.Search(Query query, Int32 n, Sort sort)`\r\n\r\nWe are using Lucene 4.8. For now, we are \"solving\" this by using a try catch around the Search() and catch it to do retry of the search, which greatly reduces the amount of failed searches.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666504940/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666915768","html_url":"https://github.com/apache/lucenenet/issues/284#issuecomment-666915768","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/284","id":666915768,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NjkxNTc2OA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T04:42:47Z","updated_at":"2020-07-31T04:42:47Z","author_association":"CONTRIBUTOR","body":"> Anyone knows which Java version the latest Lucene.Net maps to?\r\n\r\nLucene 4.8.0 supports Java 4, 5, and 6.\r\n\r\n> And why Lucene.Net has no stable version released for such a long time?\r\n\r\nQuite simply, because there haven't been enough people contributing, and we only recently got any sponsorship. There has been 5000+ hours contributed since 2014 on Lucene.NET 4.8.0, of which I have personally contributed about 4000 hours. Lucene.NET was pretty much ported in 2017, but we are now trying to finish up all of the dependencies that didn't exist in .NET (namely [ICU4N](https://github.com/NightOwl888/ICU4N) and [J2N](https://github.com/NightOwl888/J2N)), testing on different platforms and operating systems, and implement enough of the features of the test framework that we can be reasonably sure that we aren't getting false positives. There is also some research to do to work out how to implement some of the features properly on the .NET platform, quite a bit of cleanup work of the APIs, and more performance tuning to do. Not to mention chasing down bug reports and answering user inquiries that we could use help with.\r\n\r\nThere are around 1100-1200 hours of work left to complete Lucene.NET 4.8.0 to production with its dependencies. Microsoft has recently sponsored 200 hours, and is considering more funding. We are also getting some funding from iTextSharp. But, for a project of this size and complexity we are going to need more contributions, more funding, or both to see this through to the point it is enterprise-ready.\r\n\r\nFor anyone interested in sponsoring the project, either do so through our personal GitHub sponsors accounts or contact me via the email address on my profile and I will provide details on how to sponsor the project as a whole. Or, if you would like to make a contribution, do note that anything marked `up-for-grabs` is free for anyone to start working on - simply leave a message on the issue and we will assign it to you.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666915768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666959114","html_url":"https://github.com/apache/lucenenet/issues/319#issuecomment-666959114","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/319","id":666959114,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Njk1OTExNA==","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T06:44:45Z","updated_at":"2020-07-31T06:44:45Z","author_association":"CONTRIBUTOR","body":"maybe this can give more information, i noticed this exception too, (very rarely)\r\n\r\n```csharp\r\nSystem.ArgumentOutOfRangeException: Index and count must refer to a location within the buffer.  Parameter name: bytes  \r\n   at System.Text.UTF8Encoding.GetString(Byte[] bytes, Int32 index, Int32 count)  \r\n   at Lucene.Net.Spatial.Prefix.Tree.Cell.get_TokenString()  \r\n   at Lucene.Net.Spatial.Prefix.Tree.GeohashPrefixTree.GhCell.get_Center()  \r\n   at Lucene.Net.Spatial.Util.ShapeFieldCacheProvider`1.<GetCache>b__5_0(IndexReader key)  \r\n   at System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(TKey key, CreateValueCallback createValueCallback)  \r\n   at Lucene.Net.Spatial.Util.ShapeFieldCacheDistanceValueSource.CachedDistanceFunctionValue..ctor(AtomicReader reader, ShapeFieldCacheDistanceValueSource enclosingInstance)  \r\n   at Lucene.Net.Spatial.Util.ShapeFieldCacheDistanceValueSource.GetValues(IDictionary context, AtomicReaderContext readerContext)  \r\n   at Lucene.Net.Queries.Function.ValueSource.ValueSourceComparer.SetNextReader(AtomicReaderContext context)  \r\n   at Lucene.Net.Search.TopFieldCollector.OneComparerNonScoringCollector.SetNextReader(AtomicReaderContext context)  \r\n   at Lucene.Net.IndexSearcher.Search.Search(IList`1 leaves, Weight weight, ICollector collector)  \r\n   at Lucene.Net.IndexSearcher.Search.Search(IList`1 leaves, Weight weight, FieldDoc after, Int32 nDocs, Sort sort, Boolean fillFields, Boolean doDocScores, Boolean doMaxScore)  \r\n   at Lucene.Net.IndexSearcher.Search.Search(Weight weight, FieldDoc after, Int32 nDocs, Sort sort, Boolean fillFields, Boolean doDocScores, Boolean doMaxScore)  \r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/666959114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667153497","html_url":"https://github.com/apache/lucenenet/issues/284#issuecomment-667153497","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/284","id":667153497,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzE1MzQ5Nw==","user":{"login":"mikeren2014","id":15608957,"node_id":"MDQ6VXNlcjE1NjA4OTU3","avatar_url":"https://avatars.githubusercontent.com/u/15608957?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeren2014","html_url":"https://github.com/mikeren2014","followers_url":"https://api.github.com/users/mikeren2014/followers","following_url":"https://api.github.com/users/mikeren2014/following{/other_user}","gists_url":"https://api.github.com/users/mikeren2014/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeren2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeren2014/subscriptions","organizations_url":"https://api.github.com/users/mikeren2014/orgs","repos_url":"https://api.github.com/users/mikeren2014/repos","events_url":"https://api.github.com/users/mikeren2014/events{/privacy}","received_events_url":"https://api.github.com/users/mikeren2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T14:38:30Z","updated_at":"2020-07-31T14:38:30Z","author_association":"NONE","body":"Thanks so much for your response. @NightOwl888 \r\n\r\n> > Anyone knows which Java version the latest Lucene.Net maps to?\r\n> \r\n> >>Lucene 4.8.0 supports Java 4, 5, and 6.\r\n\r\nSorry, I mean the Java Lucene version. I am seeing that the latest Java Lucene is 8.6.0. Does Lucene.Net 4.8.0 match Lucene 4.8.0? I am asking because I cannot believe it falls behind so much. \r\n\r\n> > And why Lucene.Net has no stable version released for such a long time?\r\n> \r\n>>> Quite simply, because there haven't been enough people contributing, and we only recently got any sponsorship. \r\n\r\nI didn't know that there are so few people contributing for such a complicated project. Thank you so much for your effort on this! I  hope you can find more contributors. This is really a wonderful project for .net developers. Hoping that it is going well.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667153497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667202834","html_url":"https://github.com/apache/lucenenet/issues/284#issuecomment-667202834","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/284","id":667202834,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzIwMjgzNA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T16:08:43Z","updated_at":"2020-08-02T17:03:05Z","author_association":"CONTRIBUTOR","body":"> Sorry, I mean the Java Lucene version. I am seeing that the latest Java Lucene is 8.6.0. Does Lucene.Net 4.8.0 match Lucene 4.8.0?\r\n\r\nThe core Lucene.Net project is based on 4.8.0. Most of the submodules including `Lucene.Net.Analysis.Common` are based on 4.8.1. Some of the other analysis modules were ported from 7.2.0 and 8.2.0 (which were the latest at the time we ported them).\r\n\r\n> I am asking because I cannot believe it falls behind so much.\r\n\r\nThat is the battle we are fighting. People get the impression that we are far behind because of the number of years it has taken and the fact there are 4 major versions between Lucene.NET and Lucene.\r\n\r\nLast I checked (I believe it was 8.3.0), there were exactly 7 new modules and about 12 new features of any consequence added since 4.8.0. That's it. Look at the source code if you don't believe it. There was a discussion back in 2018 that I wasn't part of where some people said they are withholding their support because we are not targeting the latest version. I am curious to know whether they realize:\r\n\r\n- Lucene.NET 4.8.0 is almost stable and has been since that conversation happened in 2018\r\n- We have been working on Lucene.NET's dependencies since then (that both 4.8.0 and 8.x require)\r\n- It would take around 1800 hours to upgrade from 4.8.0 to 8.x, not including the 1100-1200 hours we have yet to complete now\r\n- Changing gears now will rob the .NET community of a stable Lucene.NET 4.8.0 in 2021, and take at least an extra year to stabilize and roll out\r\n- We are planning to upgrade to 8.x after the release of Lucene.NET 4.8.0 is stable and we have secured enough funding to get started\r\n- 8.x has only about 12 new features that 4.8.0 doesn't have that are of any consequence\r\n\r\nI am also curious to know which of the 12 or so new features that people think are so important that they are withholding their support, and how they could ever think it would be worth it for us to derail the whole project for at least a year to try to reach that goal. Not to mention robbing the entire .NET community of a stable 4.8.0 while they wait for that work to be completed.\r\n\r\nOur sponsors at Microsoft don't agree with those people. They don't even agree with us that it is worth it to upgrade to 8.x after the release of 4.8.0. Sure there are bug fixes and performance benefits in the new version, but the total benefit for the cost just isn't there.\r\n\r\nUnfortunately the gap between the reality of the situation and the impression that people get about how far we are behind is a big one, and that situation isn't going to change until we either reach a stable 4.8.0 or the community provides enough funding for the extra 1800 hours of labor involved in re-targeting to 8.x.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667202834/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667322958","html_url":"https://github.com/apache/lucenenet/issues/284#issuecomment-667322958","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/284","id":667322958,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzMyMjk1OA==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T19:53:03Z","updated_at":"2020-07-31T19:53:03Z","author_association":"CONTRIBUTOR","body":"@NightOwl888 Thank you for this response and succinct comparison of 4.8 vs 8.3 as well as highlighting the gap between perception and reality with regard to the differences between those to versions.  This is enlightening to me and explains a lot.  The strategy of getting 4.8 released before working towards the latest version makes perfect sense.  I truly wish I had some bandwidth to help contribute.  In the future I hope to get myself to a position where I can.  In my mind, there is no more worthy open source project in the .Net ecosystem then Lucene.Net to warrant developer contributions.  This code base and the functionality it provides is truly impressive.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667322958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667692212","html_url":"https://github.com/apache/lucenenet/pull/313#issuecomment-667692212","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/313","id":667692212,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzY5MjIxMg==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-02T16:02:52Z","updated_at":"2020-08-02T16:02:52Z","author_association":"CONTRIBUTOR","body":"> Adding this before the test runs\r\nNUnit.Framework.Internal.Randomizer.InitialSeed = NUnit.Framework.Internal.TestExecutionContext.CurrentContext.CurrentTest.Seed;\r\n\r\n> seems to stop the tests erroring. Is this hiding something tho? If there is one random using a different seed, this shouldn't cause an issue.\r\n\r\nBefore the test runs how? I tried adding it to the beginning of the test and it didn't seem to make a difference.\r\n\r\nI took a deep dive into this and there were several contributors causing these tests to fail. \r\n\r\n- The culture sensitivity was broken by the change of default when we switched to `J2N.Character` in 4.8.0-beta00008 without specifying `CultureInfo.InvariantCulture`. Fixed in #321.\r\n- The `ThaiWordBreaker` wasn't set up to handle surrogate pairs, so would fail when there were surrogate pairs in the random input. Fixed in #322.\r\n- Something is causing `ThaiAnalyzer` to fail when using concurrency. This one I haven't found the cause, but being that the behavior changed when I added a `.Clone()` to each of the prototypes, I suspect the issue lies in `ICU4N.RuleBasedBreakIterator` where it loads the Thai break engine. Adding locking also seems to make it fail less, but it still does occasionally. We need to add some concurrency tests to ICU4N for `BreakIterator` when using Thai to see if we can make it fail - there were no tests for concurrency in ICU4J.\r\n\r\nThere doesn't appear to be anything wrong with `BaseTokenStreamTestCase`, but when I commented out the concurrency check inside `CheckAnalysisConsistency()`, I ran the `TestRandomHugeStrings()` and `TestRandomStrings() tests 10000 times in a row each without a failure. Putting the concurrency check back in makes the failure happen after a few hundred runs.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667692212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667698917","html_url":"https://github.com/apache/lucenenet/issues/284#issuecomment-667698917","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/284","id":667698917,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzY5ODkxNw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-02T17:00:49Z","updated_at":"2020-08-02T17:00:49Z","author_association":"CONTRIBUTOR","body":"@rclabo - Thanks for the kind words and support. As you might have noticed, I have changed my tune a little. We totally understand if people don't have the kind of bandwidth it takes to contribute, especially being that there is a bit of a learning curve before a contribution can even begin. In fact, when I lived in the U.S., I couldn't imagine how anyone could find the time to do open source work. But if that is indeed the case, we ask that those people show their support by making a small monetary contribution instead. We'd rather see this project crowdfunded by several hundred parties than have one or two companies carry the whole load on their backs, anyway.\r\n\r\nhttps://github.com/sponsors/NightOwl888\r\nhttps://github.com/sponsors/Shazwazza\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667698917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667715786","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-667715786","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":667715786,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzcxNTc4Ng==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-02T19:37:33Z","updated_at":"2020-08-02T19:37:33Z","author_association":"CONTRIBUTOR","body":"Okay, I have fixed some culture sensitivity issues with the analyzers that could be leading to this. Could someone please check [the packages in the nuget artifact here](https://dev.azure.com/LuceneNET-Temp/Lucene.NET/_build/results?buildId=1027&view=artifacts&type=publishedArtifacts) to see whether the `IndexOutOfRangeException` still exists?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667715786/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667973199","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-667973199","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":667973199,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Nzk3MzE5OQ==","user":{"login":"mlaufer","id":5954692,"node_id":"MDQ6VXNlcjU5NTQ2OTI=","avatar_url":"https://avatars.githubusercontent.com/u/5954692?v=4","gravatar_id":"","url":"https://api.github.com/users/mlaufer","html_url":"https://github.com/mlaufer","followers_url":"https://api.github.com/users/mlaufer/followers","following_url":"https://api.github.com/users/mlaufer/following{/other_user}","gists_url":"https://api.github.com/users/mlaufer/gists{/gist_id}","starred_url":"https://api.github.com/users/mlaufer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mlaufer/subscriptions","organizations_url":"https://api.github.com/users/mlaufer/orgs","repos_url":"https://api.github.com/users/mlaufer/repos","events_url":"https://api.github.com/users/mlaufer/events{/privacy}","received_events_url":"https://api.github.com/users/mlaufer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-03T11:36:45Z","updated_at":"2020-08-03T11:46:41Z","author_association":"NONE","body":"I installed the nugt artifact locally and the error seems to not occur as often as before, but I'm still able to reproduce it:\r\n\r\n```\r\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at Lucene.Net.Util.Automaton.UTF32ToUTF8.Convert(Automaton utf32)\r\n   at Lucene.Net.Util.Automaton.CompiledAutomaton..ctor(Automaton automaton, Nullable`1 finite, Boolean simplify)\r\n   at Lucene.Net.Search.FuzzyTermsEnum.InitAutomata(Int32 maxDistance)\r\n   at Lucene.Net.Search.FuzzyTermsEnum.GetAutomatonEnum(Int32 editDistance, BytesRef lastTerm)\r\n   at Lucene.Net.Search.FuzzyTermsEnum.MaxEditDistanceChanged(BytesRef lastTerm, Int32 maxEdits, Boolean init)\r\n   at Lucene.Net.Search.FuzzyTermsEnum..ctor(Terms terms, AttributeSource atts, Term term, Single minSimilarity, Int32 prefixLength, Boolean transpositions)\r\n   at Lucene.Net.Search.FuzzyQuery.GetTermsEnum(Terms terms, AttributeSource atts)\r\n   at Lucene.Net.Search.TermCollectingRewrite`1.CollectTerms(IndexReader reader, MultiTermQuery query, TermCollector collector)\r\n   at Lucene.Net.Search.TopTermsRewrite`1.Rewrite(IndexReader reader, MultiTermQuery query)\r\n   at Lucene.Net.Search.BooleanQuery.Rewrite(IndexReader reader)\r\n   at Lucene.Net.Search.BooleanQuery.Rewrite(IndexReader reader)\r\n   at Lucene.Net.Search.BooleanQuery.Rewrite(IndexReader reader)\r\n   at Lucene.Net.Search.IndexSearcher.Rewrite(Query original)\r\n   at Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query query)\r\n   at Lucene.Net.Search.IndexSearcher.Search(Query query, Int32 n, Sort sort)\r\n```\r\n\r\nWith the added retry functionality, I wasn't able to produce the errors two times in a row using the same FuzzyQuery. So it seems to be nearly fixed, with only a small bug remaining","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/667973199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/668003921","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-668003921","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":668003921,"node_id":"MDEyOklzc3VlQ29tbWVudDY2ODAwMzkyMQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-03T12:48:40Z","updated_at":"2020-08-03T12:49:56Z","author_association":"CONTRIBUTOR","body":"Thanks for the info. I suspect this is a different issue than the one from the OP.\r\n\r\nCan you tell me which version the error first appeared in? There have been some recent changes to both `Automaton` and `FuzzyTermsEnum` to improve performance and I am sure it can be narrowed to a few suspect commits pretty easily.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/668003921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/668009001","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-668009001","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":668009001,"node_id":"MDEyOklzc3VlQ29tbWVudDY2ODAwOTAwMQ==","user":{"login":"mlaufer","id":5954692,"node_id":"MDQ6VXNlcjU5NTQ2OTI=","avatar_url":"https://avatars.githubusercontent.com/u/5954692?v=4","gravatar_id":"","url":"https://api.github.com/users/mlaufer","html_url":"https://github.com/mlaufer","followers_url":"https://api.github.com/users/mlaufer/followers","following_url":"https://api.github.com/users/mlaufer/following{/other_user}","gists_url":"https://api.github.com/users/mlaufer/gists{/gist_id}","starred_url":"https://api.github.com/users/mlaufer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mlaufer/subscriptions","organizations_url":"https://api.github.com/users/mlaufer/orgs","repos_url":"https://api.github.com/users/mlaufer/repos","events_url":"https://api.github.com/users/mlaufer/events{/privacy}","received_events_url":"https://api.github.com/users/mlaufer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-03T13:00:21Z","updated_at":"2020-08-03T13:53:30Z","author_association":"NONE","body":"We just recently implemented the FuzzyQuery on 4.8.0-beta00008 and updated to 4.8.0-beta00011, so the error could have happened in an earlier version. I will try a downgrade to an older version and check if the error still occurs and get back to you.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/668009001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/668023250","html_url":"https://github.com/apache/lucenenet/issues/284#issuecomment-668023250","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/284","id":668023250,"node_id":"MDEyOklzc3VlQ29tbWVudDY2ODAyMzI1MA==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-03T13:29:08Z","updated_at":"2020-08-03T13:29:08Z","author_association":"CONTRIBUTOR","body":"@NightOwl888 - I think that's also a great approach.  If we could get a large community supporting the project with small monetary contributions that would be awesome.  Still, I also think we need to get more devs coding and supporting the project with their skills.  I truly hope to be a part of that down the road.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/668023250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/668034914","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-668034914","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":668034914,"node_id":"MDEyOklzc3VlQ29tbWVudDY2ODAzNDkxNA==","user":{"login":"mlaufer","id":5954692,"node_id":"MDQ6VXNlcjU5NTQ2OTI=","avatar_url":"https://avatars.githubusercontent.com/u/5954692?v=4","gravatar_id":"","url":"https://api.github.com/users/mlaufer","html_url":"https://github.com/mlaufer","followers_url":"https://api.github.com/users/mlaufer/followers","following_url":"https://api.github.com/users/mlaufer/following{/other_user}","gists_url":"https://api.github.com/users/mlaufer/gists{/gist_id}","starred_url":"https://api.github.com/users/mlaufer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mlaufer/subscriptions","organizations_url":"https://api.github.com/users/mlaufer/orgs","repos_url":"https://api.github.com/users/mlaufer/repos","events_url":"https://api.github.com/users/mlaufer/events{/privacy}","received_events_url":"https://api.github.com/users/mlaufer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-03T13:52:00Z","updated_at":"2020-08-03T14:00:11Z","author_association":"NONE","body":"I'm unable to reproduce the bug on 4.8.0-beta00006, I will try 4.8.0-beta00007 next. Hope this helps. \r\n\r\nI was also unable to reproduce on 4.8.0-beta00007.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/668034914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/668208832","html_url":"https://github.com/apache/lucenenet/issues/323#issuecomment-668208832","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/323","id":668208832,"node_id":"MDEyOklzc3VlQ29tbWVudDY2ODIwODgzMg==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-03T19:47:06Z","updated_at":"2020-08-03T19:47:06Z","author_association":"CONTRIBUTOR","body":"Thanks for the report.\r\n\r\nWhat packages do you have from `Microsoft.Extensions.Configuration` installed in your project? And what versions?\r\n\r\nI was able to reproduce this. I still need to look into why this is happening. The `Providers` property hasn't changed from `IEnumerable<IConfigurationProvider>`, so it is a bit odd that it is throwing an exception.\r\n\r\nFortunately, this time there is a workaround. You can bypass the `ConfigurationRoot` provider by injecting your own at application startup. Just provide your existing `IConfiguration` instance to `ConfigurationFactory`, or use the below code as the default.\r\n\r\n```c#\r\nIConfiguration configuration = new ConfigurationBuilder().AddEnvironmentVariables(\"lucene:\").Build();\r\n\r\nLucene.Net.Configuration.ConfigurationSettings.SetConfigurationFactory(new ConfigurationFactory(configuration));\r\n```\r\n\r\nHere is one way to implement `ConfigurationFactory`. You could alternatively use a `Func<IConfiguration>` in the constructor and actively read it on the fly from its source if you need to.\r\n\r\n```c#\r\n    public class ConfigurationFactory : Lucene.Net.Configuration.IConfigurationFactory\r\n    {\r\n        private readonly IConfiguration configuration;\r\n\r\n        public ConfigurationFactory(IConfiguration configuration)\r\n        {\r\n            this.configuration = configuration ?? throw new ArgumentNullException(nameof(configuration));\r\n        }\r\n\r\n        public IConfiguration GetConfiguration() => configuration;\r\n    }\r\n```\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/668208832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/668279480","html_url":"https://github.com/apache/lucenenet/issues/323#issuecomment-668279480","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/323","id":668279480,"node_id":"MDEyOklzc3VlQ29tbWVudDY2ODI3OTQ4MA==","user":{"login":"JohnDuerden","id":651700,"node_id":"MDQ6VXNlcjY1MTcwMA==","avatar_url":"https://avatars.githubusercontent.com/u/651700?v=4","gravatar_id":"","url":"https://api.github.com/users/JohnDuerden","html_url":"https://github.com/JohnDuerden","followers_url":"https://api.github.com/users/JohnDuerden/followers","following_url":"https://api.github.com/users/JohnDuerden/following{/other_user}","gists_url":"https://api.github.com/users/JohnDuerden/gists{/gist_id}","starred_url":"https://api.github.com/users/JohnDuerden/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JohnDuerden/subscriptions","organizations_url":"https://api.github.com/users/JohnDuerden/orgs","repos_url":"https://api.github.com/users/JohnDuerden/repos","events_url":"https://api.github.com/users/JohnDuerden/events{/privacy}","received_events_url":"https://api.github.com/users/JohnDuerden/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-03T22:53:48Z","updated_at":"2020-08-03T22:59:04Z","author_association":"NONE","body":"Thanks for the very prompt response. The work around worked fine. The Microsoft.Extensions.Configuration packages I had installed were  Microsoft.Extensions.Configuration.Abstractions and Microsoft.Extensions.Configuration.Binder. I have added for the workaround Microsoft.Extensions.Configuration.EnvironmentVariablers. The versions are all 3.1.6. The packages I had installed are prereqs to support the Microsoft.Extensions.Logging implementation.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/668279480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/670690698","html_url":"https://github.com/apache/lucenenet/issues/324#issuecomment-670690698","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/324","id":670690698,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDY5MDY5OA==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-07T20:03:36Z","updated_at":"2020-08-07T20:03:36Z","author_association":"CONTRIBUTOR","body":"Can you provide more detail on how you implemented your  parent child relationship?  Also when you do a search on the child documents, how are you then loading the parent document associated with each child?  Finally, what version of Lucene.Net are you using?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/670690698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/670698083","html_url":"https://github.com/apache/lucenenet/issues/324#issuecomment-670698083","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/324","id":670698083,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDY5ODA4Mw==","user":{"login":"jregnier","id":8887814,"node_id":"MDQ6VXNlcjg4ODc4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8887814?v=4","gravatar_id":"","url":"https://api.github.com/users/jregnier","html_url":"https://github.com/jregnier","followers_url":"https://api.github.com/users/jregnier/followers","following_url":"https://api.github.com/users/jregnier/following{/other_user}","gists_url":"https://api.github.com/users/jregnier/gists{/gist_id}","starred_url":"https://api.github.com/users/jregnier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jregnier/subscriptions","organizations_url":"https://api.github.com/users/jregnier/orgs","repos_url":"https://api.github.com/users/jregnier/repos","events_url":"https://api.github.com/users/jregnier/events{/privacy}","received_events_url":"https://api.github.com/users/jregnier/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-07T20:23:11Z","updated_at":"2020-08-07T20:23:11Z","author_association":"NONE","body":"thanks for the response, see below \r\n\r\n`analyzer uses a chartokenizer with a lowercase filter\r\n\r\nvar dir = FSDirectory.Open(indexFolderPath);\r\nvar indexConfig = new IndexWriterConfig(LuceneVersion.LUCENE_48, {analyzer});\r\n_writer = new IndexWriter(dir, indexConfig);\r\n\r\nvar parentDocument = new Document();\r\nparentDocument.Add({BinaryDocValuesField});\r\nparentDocument.Add({StringField});\r\nparentDocument.Add({StringField});\r\nparentDocument.Add({StringField});\r\n\r\nvar childDocument = new Document();\r\nchildDocument.Add({StringField});\r\nchildDocument.Add({StringField});\r\nchildDocument.Add({TextField}) // not stored;\r\nchildDocument.Add({StringField}) // only some documents will have this;\r\n\r\n// we are creating a parent child relationship with this list of documents\r\n_writer.AddDocuments(documentList)\r\n\r\n_reader = DirectoryReader.Open(FSDirectory.Open(indexFolderPath));\r\n_searcher = new IndexSearcher(_reader);\r\nBooleanQuery.MaxClauseCount = int.MaxValue;\r\n\r\nvar searchString = \"value:test search string\"\r\nvar terms = new SpanMultiTermQueryWrapper(new WildcardQuery(new Term(fieldName, word)) // terms is a list of these for each word\r\nvar childQuery = new SpanNearQuery(terms, 0, true)\r\n\r\nvar parentFilter = new FixedBitSetCachingWrapperFilter(\r\n   new QueryWrapperFilter(\r\n      new TermQuery(\r\n         new Term(fieldName, value))));\r\n\r\nvar query = ToParentBlockJoinQuery(childQuery, parentFilter, ScoreMode.Max);\r\n\r\nvar sort = new Sort(new SortField(null, SortFieldType.DOC));\r\nreturn _searcher.Search(query, _reader.NumDocs, sort)`","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/670698083/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/670708435","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-670708435","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":670708435,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDcwODQzNQ==","user":{"login":"jregnier","id":8887814,"node_id":"MDQ6VXNlcjg4ODc4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8887814?v=4","gravatar_id":"","url":"https://api.github.com/users/jregnier","html_url":"https://github.com/jregnier","followers_url":"https://api.github.com/users/jregnier/followers","following_url":"https://api.github.com/users/jregnier/following{/other_user}","gists_url":"https://api.github.com/users/jregnier/gists{/gist_id}","starred_url":"https://api.github.com/users/jregnier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jregnier/subscriptions","organizations_url":"https://api.github.com/users/jregnier/orgs","repos_url":"https://api.github.com/users/jregnier/repos","events_url":"https://api.github.com/users/jregnier/events{/privacy}","received_events_url":"https://api.github.com/users/jregnier/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-07T20:53:04Z","updated_at":"2020-08-07T20:53:04Z","author_association":"NONE","body":"Sorry been off for a few days, I'm unfortunately not able to repro it on my side so I can't really test it out","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/670708435/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/670718913","html_url":"https://github.com/apache/lucenenet/issues/324#issuecomment-670718913","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/324","id":670718913,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MDcxODkxMw==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-07T21:23:44Z","updated_at":"2020-08-07T21:23:44Z","author_association":"CONTRIBUTOR","body":"Thanks that helpful and answers the questions I raised.  Unfortunately several methods being used are ones that I don't have experience with and the code is too psudo codish for me to easily repo the issue and work towards a solution.  So I'm gonna hope that someone with more experience than I jumps in to help.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/670718913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/671398005","html_url":"https://github.com/apache/lucenenet/issues/324#issuecomment-671398005","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/324","id":671398005,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTM5ODAwNQ==","user":{"login":"jregnier","id":8887814,"node_id":"MDQ6VXNlcjg4ODc4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8887814?v=4","gravatar_id":"","url":"https://api.github.com/users/jregnier","html_url":"https://github.com/jregnier","followers_url":"https://api.github.com/users/jregnier/followers","following_url":"https://api.github.com/users/jregnier/following{/other_user}","gists_url":"https://api.github.com/users/jregnier/gists{/gist_id}","starred_url":"https://api.github.com/users/jregnier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jregnier/subscriptions","organizations_url":"https://api.github.com/users/jregnier/orgs","repos_url":"https://api.github.com/users/jregnier/repos","events_url":"https://api.github.com/users/jregnier/events{/privacy}","received_events_url":"https://api.github.com/users/jregnier/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-10T14:42:53Z","updated_at":"2020-08-10T14:42:53Z","author_association":"NONE","body":"So I ended up figuring it out, turns out you can combine 2 ToParentBlockJoinQuery into a BooleanQuery so I just added an exclude query and voila. Thanks for the help","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/671398005/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/671766858","html_url":"https://github.com/apache/lucenenet/pull/325#issuecomment-671766858","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/325","id":671766858,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTc2Njg1OA==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-11T06:59:50Z","updated_at":"2020-08-11T06:59:50Z","author_association":"CONTRIBUTOR","body":"I've run all tests locally twice with these changes. The first time was fine but the second time yielded one error:\r\n\r\n`TestSnapshotDeletionPolicy.TestMultiThreadedSnapshotting`\r\n\r\n## Error\r\n\r\n```\r\n TestMultiThreadedSnapshotting\r\n   Source: TestSnapshotDeletionPolicy.cs line 352\r\n   Duration: 16 ms\r\n\r\n  Message: \r\n    System.Exception : Method Debug.Assert failed with 'DWPT must never be null here since we hold the lock and it holds documents\r\n    ', and was translated to Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException to avoid terminating the process hosting the test.\r\n    Data:\r\n      OriginalMessage: System.Exception: Method Debug.Assert failed with 'DWPT must never be null here since we hold the lock and it holds documents\r\n    ', and was translated to Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException to avoid terminating the process hosting the test.\r\n     ---> Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException: Method Debug.Assert failed with 'DWPT must never be null here since we hold the lock and it holds documents\r\n    ', and was translated to Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException to avoid terminating the process hosting the test.\r\n       at Lucene.Net.Index.DocumentsWriterFlushControl.AddFlushableState(ThreadState perThread) in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net\\Index\\DocumentsWriterFlushControl.cs:line 711\r\n       at Lucene.Net.Index.DocumentsWriterFlushControl.MarkForFullFlush() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net\\Index\\DocumentsWriterFlushControl.cs:line 644\r\n       at Lucene.Net.Index.DocumentsWriter.FlushAllThreads(IndexWriter indexWriter) in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net\\Index\\DocumentsWriter.cs:line 738\r\n       at Lucene.Net.Index.IndexWriter.PrepareCommitInternal() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net\\Index\\IndexWriter.cs:line 3557\r\n       at Lucene.Net.Index.IndexWriter.CommitInternal() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net\\Index\\IndexWriter.cs:line 3750\r\n       at Lucene.Net.Index.IndexWriter.Commit() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net\\Index\\IndexWriter.cs:line 3709\r\n       at Lucene.Net.Index.TestSnapshotDeletionPolicy.ThreadAnonymousInnerClassHelper2.Run() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.Tests\\Index\\TestSnapshotDeletionPolicy.cs:line 414\r\n       at J2N.Threading.ThreadJob.SafeRun(ThreadStart start)\r\n       at J2N.Threading.ThreadJob.<.ctor>b__4_0()\r\n       at System.Threading.ThreadHelper.ThreadStart_Context(Object state)\r\n       at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n       at System.Threading.ThreadHelper.ThreadStart()\r\n    \r\n       --- End of inner exception stack trace ---\r\n       at Lucene.Net.Index.TestSnapshotDeletionPolicy.ThreadAnonymousInnerClassHelper2.Run() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.Tests\\Index\\TestSnapshotDeletionPolicy.cs:line 419\r\n       at J2N.Threading.ThreadJob.SafeRun(ThreadStart start)\r\n    \r\n      ----> Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException : Method Debug.Assert failed with 'DWPT must never be null here since we hold the lock and it holds documents\r\n    ', and was translated to Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException to avoid terminating the process hosting the test.\r\n  Stack Trace: \r\n    ThreadJob.Join()\r\n    TestSnapshotDeletionPolicy.TestMultiThreadedSnapshotting() line 374\r\n    --DebugAssertException\r\n    DocumentsWriterFlushControl.AddFlushableState(ThreadState perThread) line 711\r\n    DocumentsWriterFlushControl.MarkForFullFlush() line 644\r\n    DocumentsWriter.FlushAllThreads(IndexWriter indexWriter) line 738\r\n    IndexWriter.PrepareCommitInternal() line 3557\r\n    IndexWriter.CommitInternal() line 3750\r\n    IndexWriter.Commit() line 3709\r\n    ThreadAnonymousInnerClassHelper2.Run() line 414\r\n    ThreadJob.SafeRun(ThreadStart start)\r\n    <.ctor>b__4_0()\r\n    ThreadHelper.ThreadStart_Context(Object state)\r\n    ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n    ThreadHelper.ThreadStart()\r\n```\r\n\r\n## Full output\r\n\r\n```\r\nTest Name:\tTestMultiThreadedSnapshotting\r\nTest Outcome:\tFailed\r\nResult Message:\t\r\nSystem.Exception : Method Debug.Assert failed with 'DWPT must never be null here since we hold the lock and it holds documents\r\n', and was translated to Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException to avoid terminating the process hosting the test.\r\nData:\r\n  OriginalMessage: System.Exception: Method Debug.Assert failed with 'DWPT must never be null here since we hold the lock and it holds documents\r\n', and was translated to Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException to avoid terminating the process hosting the test.\r\n ---> Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException: Method Debug.Assert failed with 'DWPT must never be null here since we hold the lock and it holds documents\r\n', and was translated to Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException to avoid terminating the process hosting the test.\r\n   at Lucene.Net.Index.DocumentsWriterFlushControl.AddFlushableState(ThreadState perThread) in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net\\Index\\DocumentsWriterFlushControl.cs:line 711\r\n   at Lucene.Net.Index.DocumentsWriterFlushControl.MarkForFullFlush() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net\\Index\\DocumentsWriterFlushControl.cs:line 644\r\n   at Lucene.Net.Index.DocumentsWriter.FlushAllThreads(IndexWriter indexWriter) in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net\\Index\\DocumentsWriter.cs:line 738\r\n   at Lucene.Net.Index.IndexWriter.PrepareCommitInternal() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net\\Index\\IndexWriter.cs:line 3557\r\n   at Lucene.Net.Index.IndexWriter.CommitInternal() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net\\Index\\IndexWriter.cs:line 3750\r\n   at Lucene.Net.Index.IndexWriter.Commit() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net\\Index\\IndexWriter.cs:line 3709\r\n   at Lucene.Net.Index.TestSnapshotDeletionPolicy.ThreadAnonymousInnerClassHelper2.Run() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.Tests\\Index\\TestSnapshotDeletionPolicy.cs:line 414\r\n   at J2N.Threading.ThreadJob.SafeRun(ThreadStart start)\r\n   at J2N.Threading.ThreadJob.<.ctor>b__4_0()\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(Object state)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n\r\n   --- End of inner exception stack trace ---\r\n   at Lucene.Net.Index.TestSnapshotDeletionPolicy.ThreadAnonymousInnerClassHelper2.Run() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.Tests\\Index\\TestSnapshotDeletionPolicy.cs:line 419\r\n   at J2N.Threading.ThreadJob.SafeRun(ThreadStart start)\r\n\r\n  ----> Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException : Method Debug.Assert failed with 'DWPT must never be null here since we hold the lock and it holds documents\r\n', and was translated to Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException to avoid terminating the process hosting the test.\r\nResult StandardOutput:\t\r\nCulture: ru-KZ\r\nTime Zone: (UTC+04:00) Astrakhan, Ulyanovsk\r\nDefault Codec: CheapBastard (CheapBastardCodec)\r\nDefault Similarity: RandomSimilarityProvider(queryNorm=False,coord=crazy): {}\r\nNightly: False\r\nWeekly: False\r\nSlow: True\r\nAwaits Fix: False\r\nDirectory: random\r\nVerbose: True\r\nRandom Multiplier: 1\r\nIFD 281 [11.08.2020 16:13:17; NonParallelWorker]: init: current segments file is \"\"; deletionPolicy=Lucene.Net.Index.SnapshotDeletionPolicy\r\nIFD 281 [11.08.2020 16:13:17; NonParallelWorker]: now checkpoint \"\" [0 segments ; isCommit = False]\r\nIFD 281 [11.08.2020 16:13:17; NonParallelWorker]: 0 msec to checkpoint\r\nIW 281 [11.08.2020 16:13:17; NonParallelWorker]: init: create=True\r\nIW 281 [11.08.2020 16:13:17; NonParallelWorker]: \r\ndir=MockDirectoryWrapper(RAMDirectory@47038e lockFactory=Lucene.Net.Store.SingleInstanceLockFactory)\r\nindex=\r\nversion=4.8.0\r\nmatchVersion=LUCENE_48\r\nanalyzer=MockAnalyzer\r\nramBufferSizeMB=16\r\nmaxBufferedDocs=-1\r\nmaxBufferedDeleteTerms=-1\r\nmergedSegmentWarmer=\r\nreaderTermsIndexDivisor=3\r\ntermIndexInterval=32\r\ndelPolicy=SnapshotDeletionPolicy\r\ncommit=null\r\nopenMode=CREATE_OR_APPEND\r\nsimilarity=RandomSimilarityProvider\r\nmergeScheduler=ConcurrentMergeScheduler: maxThreadCount=1, maxMergeCount=2, mergeThreadPriority=-1\r\ndefault WRITE_LOCK_TIMEOUT=1000\r\nwriteLockTimeout=1000\r\ncodec=CheapBastard\r\ninfoStream=ThreadNameFixingPrintStreamInfoStream\r\nmergePolicy=[TieredMergePolicy: maxMergeAtOnce=17, maxMergeAtOnceExplicit=11, maxMergedSegmentMB=27,6845703125, floorSegmentMB=0,9677734375, forceMergeDeletesPctAllowed=28,449725810647813, segmentsPerTier=15, maxCFSSegmentSizeMB=8796093022207,999, noCFSRatio=1\r\nindexerThreadPool=Lucene.Net.Index.ThreadAffinityDocumentsWriterThreadPool\r\nreaderPooling=True\r\nperThreadHardLimitMB=1945\r\nuseCompoundFile=True\r\ncheckIntegrityAtMerge=False\r\n\r\nIW 281 [11.08.2020 16:13:17; t0]: commit: start\r\nIW 281 [11.08.2020 16:13:17; t0]: commit: enter lock\r\nIW 281 [11.08.2020 16:13:17; t0]: commit: now prepare\r\nIW 281 [11.08.2020 16:13:17; t0]: prepareCommit: flush\r\nIW 281 [11.08.2020 16:13:17; t0]:   index before flush \r\nDW 281 [11.08.2020 16:13:17; t0]: startFullFlush\r\nDW 281 [11.08.2020 16:13:17; t0]: anyChanges? numDocsInRam=1 deletes=False hasTickets:False pendingChangesInFullFlush: False\r\nDWFC 281 [11.08.2020 16:13:17; t0]: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_0, aborting=False, numDocsInRAM=1, deleteQueue=DWDQ: [ generation: 0 ]]\r\nDWPT 281 [11.08.2020 16:13:17; t0]: flush postings as segment _0 numDocs=1\r\nDWPT 281 [11.08.2020 16:13:17; t0]: new segment has 0 deleted docs\r\nDWPT 281 [11.08.2020 16:13:17; t0]: new segment has no vectors; no norms; no docValues; no prox; no freqs\r\nDWPT 281 [11.08.2020 16:13:17; t0]: flushedFiles=[_0.fdt, _0.fdx, _0.doc, _0.tim, _0.tip, _0.fnm]\r\nDWPT 281 [11.08.2020 16:13:17; t0]: flushed codec=CheapBastard\r\nDWPT 281 [11.08.2020 16:13:17; t0]: flushed: segment=_0 ramUsed=0 MB newFlushedSize(includes docstores)=0.00033473968505859375 MB docs/MB=2987.3960113960115\r\nIW 281 [11.08.2020 16:13:17; t0]: create compound file _0.cfs\r\nDW 281 [11.08.2020 16:13:17; t0]: publishFlushedSegment seg-private updates=\r\nIW 281 [11.08.2020 16:13:17; t0]: publishFlushedSegment\r\nIW 281 [11.08.2020 16:13:17; t0]: publish sets newSegment delGen=1 seg=_0(4.8):c1\r\nIFD 281 [11.08.2020 16:13:17; t0]: now checkpoint \"_0(4.8):c1\" [1 segments ; isCommit = False]\r\nIFD 281 [11.08.2020 16:13:17; t0]: 0 msec to checkpoint\r\nIFD 281 [11.08.2020 16:13:17; t0]: delete new file \"_0.fdt\"\r\nIFD 281 [11.08.2020 16:13:17; t0]: delete \"_0.fdt\"\r\nIFD 281 [11.08.2020 16:13:17; t0]: delete new file \"_0.fdx\"\r\nIFD 281 [11.08.2020 16:13:17; t0]: delete \"_0.fdx\"\r\nIFD 281 [11.08.2020 16:13:17; t0]: delete new file \"_0.doc\"\r\nIFD 281 [11.08.2020 16:13:17; t0]: delete \"_0.doc\"\r\nIFD 281 [11.08.2020 16:13:17; t0]: delete new file \"_0.tim\"\r\nIFD 281 [11.08.2020 16:13:17; t0]: delete \"_0.tim\"\r\nIW 281 [11.08.2020 16:13:17; t1]: commit: start\r\nIFD 281 [11.08.2020 16:13:17; t0]: delete new file \"_0.tip\"\r\nIFD 281 [11.08.2020 16:13:17; t0]: delete \"_0.tip\"\r\nIFD 281 [11.08.2020 16:13:17; t0]: delete new file \"_0.fnm\"\r\nIFD 281 [11.08.2020 16:13:17; t0]: delete \"_0.fnm\"\r\nIW 281 [11.08.2020 16:13:17; t0]: apply all deletes during flush\r\nBD 281 [11.08.2020 16:13:17; t0]: applyDeletes: no deletes; skipping\r\nBD 281 [11.08.2020 16:13:17; t0]: prune sis=Lucene.Net.Index.SegmentInfos minGen=1 packetCount=0\r\nDW 281 [11.08.2020 16:13:17; t0]: t0 finishFullFlush success=True\r\nTMP 281 [11.08.2020 16:13:17; t0]: findMerges: 1 segments\r\nTMP 281 [11.08.2020 16:13:17; t0]:   seg=_0(4.8):c1 size=0,000 MB [floored]\r\nTMP 281 [11.08.2020 16:13:17; t0]:   allowedSegmentCount=1 vs count=1 (eligible count=1) tooBigCount=0\r\nCMS 281 [11.08.2020 16:13:17; t0]: now merge\r\nCMS 281 [11.08.2020 16:13:17; t0]:   index: _0(4.8):c1\r\nCMS 281 [11.08.2020 16:13:17; t0]:   no more merges pending; now return\r\nIW 281 [11.08.2020 16:13:17; t0]: StartCommit(): start\r\nIW 281 [11.08.2020 16:13:17; t0]: startCommit index=_0(4.8):c1 changeCount=4\r\nIW 281 [11.08.2020 16:13:17; t0]: done all syncs: [_0.cfs, _0.cfe, _0.si]\r\nIW 281 [11.08.2020 16:13:17; t0]: commit: pendingCommit != null\r\nIW 281 [11.08.2020 16:13:17; t0]: commit: wrote segments file \"segments_1\"\r\nIFD 281 [11.08.2020 16:13:17; t0]: now checkpoint \"_0(4.8):c1\" [1 segments ; isCommit = True]\r\nIW 281 [11.08.2020 16:13:17; t2]: commit: start\r\nIFD 281 [11.08.2020 16:13:17; t0]: 0 msec to checkpoint\r\nIW 281 [11.08.2020 16:13:17; t0]: commit: done\r\nIW 281 [11.08.2020 16:13:17; t1]: commit: enter lock\r\nIW 281 [11.08.2020 16:13:17; t1]: commit: now prepare\r\nIW 281 [11.08.2020 16:13:17; t1]: prepareCommit: flush\r\nIW 281 [11.08.2020 16:13:17; t1]:   index before flush _0(4.8):c1\r\nDW 281 [11.08.2020 16:13:17; t1]: startFullFlush\r\nDW 281 [11.08.2020 16:13:17; t1]: anyChanges? numDocsInRam=2 deletes=False hasTickets:False pendingChangesInFullFlush: False\r\nDWFC 281 [11.08.2020 16:13:17; t1]: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_1, aborting=False, numDocsInRAM=2, deleteQueue=DWDQ: [ generation: 1 ]]\r\nDWPT 281 [11.08.2020 16:13:17; t1]: flush postings as segment _1 numDocs=2\r\nIW 281 [11.08.2020 16:13:17; t3]: commit: start\r\nDWPT 281 [11.08.2020 16:13:17; t1]: new segment has 0 deleted docs\r\nDWPT 281 [11.08.2020 16:13:17; t1]: new segment has no vectors; no norms; no docValues; no prox; no freqs\r\nDWPT 281 [11.08.2020 16:13:17; t1]: flushedFiles=[_1.fdt, _1.fdx, _1.doc, _1.tim, _1.tip, _1.fnm]\r\nDWPT 281 [11.08.2020 16:13:17; t1]: flushed codec=CheapBastard\r\nDWPT 281 [11.08.2020 16:13:17; t1]: flushed: segment=_1 ramUsed=0 MB newFlushedSize(includes docstores)=0.00034332275390625 MB docs/MB=5825.422222222222\r\nIW 281 [11.08.2020 16:13:17; t1]: create compound file _1.cfs\r\nIW 281 [11.08.2020 16:13:17; t4]: commit: start\r\nDW 281 [11.08.2020 16:13:17; t1]: publishFlushedSegment seg-private updates=\r\nIW 281 [11.08.2020 16:13:17; t1]: publishFlushedSegment\r\nIW 281 [11.08.2020 16:13:17; t1]: publish sets newSegment delGen=3 seg=_1(4.8):c2\r\nIFD 281 [11.08.2020 16:13:17; t1]: now checkpoint \"_0(4.8):c1 _1(4.8):c2\" [2 segments ; isCommit = False]\r\nIFD 281 [11.08.2020 16:13:17; t1]: 0 msec to checkpoint\r\nIFD 281 [11.08.2020 16:13:17; t1]: delete new file \"_1.fdt\"\r\nIW 281 [11.08.2020 16:13:17; t5]: commit: start\r\nIFD 281 [11.08.2020 16:13:17; t1]: delete \"_1.fdt\"\r\nIFD 281 [11.08.2020 16:13:17; t1]: delete new file \"_1.fdx\"\r\nIFD 281 [11.08.2020 16:13:17; t1]: delete \"_1.fdx\"\r\nIFD 281 [11.08.2020 16:13:17; t1]: delete new file \"_1.doc\"\r\nIFD 281 [11.08.2020 16:13:17; t1]: delete \"_1.doc\"\r\nIFD 281 [11.08.2020 16:13:17; t1]: delete new file \"_1.tim\"\r\nIFD 281 [11.08.2020 16:13:17; t1]: delete \"_1.tim\"\r\nIFD 281 [11.08.2020 16:13:17; t1]: delete new file \"_1.tip\"\r\nIFD 281 [11.08.2020 16:13:17; t1]: delete \"_1.tip\"\r\nIFD 281 [11.08.2020 16:13:17; t1]: delete new file \"_1.fnm\"\r\nIFD 281 [11.08.2020 16:13:17; t1]: delete \"_1.fnm\"\r\nIW 281 [11.08.2020 16:13:17; t1]: apply all deletes during flush\r\nBD 281 [11.08.2020 16:13:17; t1]: applyDeletes: no deletes; skipping\r\nBD 281 [11.08.2020 16:13:17; t1]: prune sis=Lucene.Net.Index.SegmentInfos minGen=1 packetCount=0\r\nDW 281 [11.08.2020 16:13:17; t1]: t1 finishFullFlush success=True\r\nTMP 281 [11.08.2020 16:13:17; t1]: findMerges: 2 segments\r\nTMP 281 [11.08.2020 16:13:17; t1]:   seg=_1(4.8):c2 size=0,000 MB [floored]\r\nTMP 281 [11.08.2020 16:13:17; t1]:   seg=_0(4.8):c1 size=0,000 MB [floored]\r\nTMP 281 [11.08.2020 16:13:17; t1]:   allowedSegmentCount=1 vs count=2 (eligible count=2) tooBigCount=0\r\nCMS 281 [11.08.2020 16:13:17; t1]: now merge\r\nCMS 281 [11.08.2020 16:13:17; t1]:   index: _0(4.8):c1 _1(4.8):c2\r\nCMS 281 [11.08.2020 16:13:17; t1]:   no more merges pending; now return\r\nIW 281 [11.08.2020 16:13:17; t1]: StartCommit(): start\r\nIW 281 [11.08.2020 16:13:17; t1]: startCommit index=_0(4.8):c1 _1(4.8):c2 changeCount=6\r\nIW 281 [11.08.2020 16:13:17; t1]: done all syncs: [_0.cfs, _0.cfe, _0.si, _1.cfs, _1.cfe, _1.si]\r\nIW 281 [11.08.2020 16:13:17; t1]: commit: pendingCommit != null\r\nIW 281 [11.08.2020 16:13:17; t6]: commit: start\r\nIW 281 [11.08.2020 16:13:17; t1]: commit: wrote segments file \"segments_2\"\r\nIFD 281 [11.08.2020 16:13:17; t1]: now checkpoint \"_0(4.8):c1 _1(4.8):c2\" [2 segments ; isCommit = True]\r\nIFD 281 [11.08.2020 16:13:17; t1]: 0 msec to checkpoint\r\nIW 281 [11.08.2020 16:13:17; t1]: commit: done\r\nIW 281 [11.08.2020 16:13:17; t2]: commit: enter lock\r\nIW 281 [11.08.2020 16:13:17; t2]: commit: now prepare\r\nIW 281 [11.08.2020 16:13:17; t2]: prepareCommit: flush\r\nIW 281 [11.08.2020 16:13:17; t2]:   index before flush _0(4.8):c1 _1(4.8):c2\r\nDW 281 [11.08.2020 16:13:17; t2]: startFullFlush\r\nDW 281 [11.08.2020 16:13:17; t2]: anyChanges? numDocsInRam=4 deletes=False hasTickets:False pendingChangesInFullFlush: False\r\nDWFC 281 [11.08.2020 16:13:17; t2]: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_2, aborting=False, numDocsInRAM=4, deleteQueue=DWDQ: [ generation: 2 ]]\r\nIW 281 [11.08.2020 16:13:17; t2]: hit exception during prepareCommit\r\nDW 281 [11.08.2020 16:13:17; t2]: t2 finishFullFlush success=False\r\nDWFC 281 [11.08.2020 16:13:17; t7]: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_2, aborting=False, numDocsInRAM=4, deleteQueue=DWDQ: [ generation: 2 ]]\r\nIW 281 [11.08.2020 16:13:17; t7]: commit: start\r\nIW 281 [11.08.2020 16:13:17; t9]: commit: start\r\nIW 281 [11.08.2020 16:13:17; t8]: commit: start\r\nIW 281 [11.08.2020 16:13:17; t3]: commit: enter lock\r\nIW 281 [11.08.2020 16:13:17; t3]: commit: now prepare\r\nIW 281 [11.08.2020 16:13:17; t3]: prepareCommit: flush\r\nIW 281 [11.08.2020 16:13:17; t3]:   index before flush _0(4.8):c1 _1(4.8):c2\r\nDW 281 [11.08.2020 16:13:17; t3]: startFullFlush\r\nDW 281 [11.08.2020 16:13:17; t3]: anyChanges? numDocsInRam=7 deletes=False hasTickets:False pendingChangesInFullFlush: False\r\nIW 281 [11.08.2020 16:13:17; t3]: hit exception during prepareCommit\r\nDW 281 [11.08.2020 16:13:17; t3]: t3 finishFullFlush success=False\r\nIW 281 [11.08.2020 16:13:17; t4]: commit: enter lock\r\nIW 281 [11.08.2020 16:13:17; t4]: commit: now prepare\r\nIW 281 [11.08.2020 16:13:17; t4]: prepareCommit: flush\r\nIW 281 [11.08.2020 16:13:17; t4]:   index before flush _0(4.8):c1 _1(4.8):c2\r\nDW 281 [11.08.2020 16:13:17; t4]: startFullFlush\r\nDW 281 [11.08.2020 16:13:17; t4]: anyChanges? numDocsInRam=7 deletes=False hasTickets:False pendingChangesInFullFlush: False\r\nIW 281 [11.08.2020 16:13:17; t4]: hit exception during prepareCommit\r\nDW 281 [11.08.2020 16:13:17; t4]: t4 finishFullFlush success=False\r\nIW 281 [11.08.2020 16:13:17; t5]: commit: enter lock\r\nIW 281 [11.08.2020 16:13:17; t5]: commit: now prepare\r\nIW 281 [11.08.2020 16:13:17; t5]: prepareCommit: flush\r\nIW 281 [11.08.2020 16:13:17; t5]:   index before flush _0(4.8):c1 _1(4.8):c2\r\nDW 281 [11.08.2020 16:13:17; t5]: startFullFlush\r\nDW 281 [11.08.2020 16:13:17; t5]: anyChanges? numDocsInRam=7 deletes=False hasTickets:False pendingChangesInFullFlush: False\r\nIW 281 [11.08.2020 16:13:17; t5]: hit exception during prepareCommit\r\nDW 281 [11.08.2020 16:13:17; t5]: t5 finishFullFlush success=False\r\nIW 281 [11.08.2020 16:13:17; t6]: commit: enter lock\r\nIW 281 [11.08.2020 16:13:17; t6]: commit: now prepare\r\nIW 281 [11.08.2020 16:13:17; t6]: prepareCommit: flush\r\nIW 281 [11.08.2020 16:13:17; t6]:   index before flush _0(4.8):c1 _1(4.8):c2\r\nDW 281 [11.08.2020 16:13:17; t6]: startFullFlush\r\nDW 281 [11.08.2020 16:13:17; t6]: anyChanges? numDocsInRam=7 deletes=False hasTickets:False pendingChangesInFullFlush: False\r\nIW 281 [11.08.2020 16:13:17; t6]: hit exception during prepareCommit\r\nDW 281 [11.08.2020 16:13:17; t6]: t6 finishFullFlush success=False\r\nIW 281 [11.08.2020 16:13:17; t9]: commit: enter lock\r\nIW 281 [11.08.2020 16:13:17; t9]: commit: now prepare\r\nIW 281 [11.08.2020 16:13:17; t9]: prepareCommit: flush\r\nIW 281 [11.08.2020 16:13:17; t9]:   index before flush _0(4.8):c1 _1(4.8):c2\r\nDW 281 [11.08.2020 16:13:17; t9]: startFullFlush\r\nDW 281 [11.08.2020 16:13:17; t9]: anyChanges? numDocsInRam=7 deletes=False hasTickets:False pendingChangesInFullFlush: False\r\nIW 281 [11.08.2020 16:13:17; t9]: hit exception during prepareCommit\r\nDW 281 [11.08.2020 16:13:17; t9]: t9 finishFullFlush success=False\r\nIW 281 [11.08.2020 16:13:17; t8]: commit: enter lock\r\nIW 281 [11.08.2020 16:13:17; t8]: commit: now prepare\r\nIW 281 [11.08.2020 16:13:17; t8]: prepareCommit: flush\r\nIW 281 [11.08.2020 16:13:17; t8]:   index before flush _0(4.8):c1 _1(4.8):c2\r\nDW 281 [11.08.2020 16:13:17; t8]: startFullFlush\r\nDW 281 [11.08.2020 16:13:17; t8]: anyChanges? numDocsInRam=7 deletes=False hasTickets:False pendingChangesInFullFlush: False\r\nIW 281 [11.08.2020 16:13:17; t8]: hit exception during prepareCommit\r\nDW 281 [11.08.2020 16:13:17; t8]: t8 finishFullFlush success=False\r\nIW 281 [11.08.2020 16:13:17; t7]: commit: enter lock\r\nIW 281 [11.08.2020 16:13:17; t7]: commit: now prepare\r\nIW 281 [11.08.2020 16:13:17; t7]: prepareCommit: flush\r\nIW 281 [11.08.2020 16:13:17; t7]:   index before flush _0(4.8):c1 _1(4.8):c2\r\nDW 281 [11.08.2020 16:13:17; t7]: startFullFlush\r\nDW 281 [11.08.2020 16:13:17; t7]: anyChanges? numDocsInRam=7 deletes=False hasTickets:False pendingChangesInFullFlush: False\r\nIW 281 [11.08.2020 16:13:17; t7]: hit exception during prepareCommit\r\nDW 281 [11.08.2020 16:13:17; t7]: t7 finishFullFlush success=False\r\n```","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/671766858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/671864177","html_url":"https://github.com/apache/lucenenet/pull/325#issuecomment-671864177","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/325","id":671864177,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTg2NDE3Nw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-11T10:24:57Z","updated_at":"2020-08-11T10:24:57Z","author_association":"CONTRIBUTOR","body":"Thanks for the info. I haven't been running the tests in debug mode, and [as I mentioned here](https://github.com/apache/lucenenet/issues/308#issuecomment-666186961), there are a suite of tests that are enabled in debug mode we have been skipping. Once we fix the ability to \"turn on assert\" in release mode, there will probably be some problems to address that we haven't been aware of because all of the assert \"tests\" are currently being skipped.\r\n\r\nOf course, it would be best to fix it that way. Currently, both the \"Verbose\" setting and the asserts are turned on when running in debug mode. Verbose makes it painfully slow. It would be better if we could turn each of them on and off independently.\r\n\r\nNot that this problem isn't concerning, but I suspect that it isn't a new problem that was introduced by this PR, which can be confirmed by running the master branch in debug mode. We should probably also check out each tag to determine which release this first appeared in, as I am sure that earlier betas did not throw this exception. When we released 4.8.0-beta00004, the tests were run in debug mode - we switched to running them in release mode at a later point (for sure by 4.8.0-beta00007). IIRC, the primary reason for the switch was because Microsoft changed the behavior of `Debug.Assert` to [crash the test framework when an assert fails](https://github.com/microsoft/vstest/issues/1022) instead of [outputting any useful information](https://github.com/dotnet/runtime/issues/9551) and continuing. But, we also set it up to test the very same binaries that were being released on Azure DevOps, which are always compiled in release mode.\r\n\r\nThat being said, if we can confirm this PR isn't introducing any new problems (other than the threading contention and ICU test failures, which are also on our radar to fix), we can merge it.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/671864177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/671915691","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-671915691","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":671915691,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MTkxNTY5MQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-11T12:27:05Z","updated_at":"2020-08-11T12:27:05Z","author_association":"CONTRIBUTOR","body":"@mlaufer - Since you are able to reliably reproduce this, is it possible you can submit a PR with a test that fails  (no matter how rarely) with this problem?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/671915691/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/672154841","html_url":"https://github.com/apache/lucenenet/pull/325#issuecomment-672154841","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/325","id":672154841,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MjE1NDg0MQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-11T18:16:14Z","updated_at":"2020-08-11T18:21:39Z","author_association":"CONTRIBUTOR","body":"I confirmed that the error exists in the master branch, and I got it to occur on `beta00006` on the second try with a `[Repeat(5000)]` attribute. It does not occur in `beta00005` running 100,000 times.\r\n\r\nI also noticed that if the repeat attribute is changed to 10,000 times it will cause an `OutOfMemoryException`.\r\n\r\nI also saw this error occur from the same test:\r\n\r\n```\r\n\r\nTest Name:\tTestMultiThreadedSnapshotting\r\nTest FullName:\tLucene.Net.Tests._I-J.Lucene.Net.Index.TestSnapshotDeletionPolicy.TestMultiThreadedSnapshotting\r\nTest Source:\tF:\\Projects\\lucenenet\\src\\Lucene.Net.Tests\\Index\\TestSnapshotDeletionPolicy.cs : line 353\r\nTest Outcome:\tFailed\r\nTest Duration:\t0:00:00\r\n\r\nTest Name:\tTestMultiThreadedSnapshotting\r\nTest Outcome:\tFailed\r\nResult StackTrace:\t\r\nat J2N.Threading.ThreadJob.Join()\r\n   at Lucene.Net.Index.TestSnapshotDeletionPolicy.TestMultiThreadedSnapshotting() in F:\\Projects\\lucenenet\\src\\Lucene.Net.Tests\\Index\\TestSnapshotDeletionPolicy.cs:line 375\r\n--DebugAssertException\r\nResult Message:\t\r\nSystem.Exception : Method <method> failed with 'full flush buffer should be empty: System.Collections.Generic.List`1[Lucene.Net.Index.DocumentsWriterPerThread]\r\n', and was translated to Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException to avoid terminating the process hosting the test.\r\nData:\r\n  OriginalMessage: System.Exception: Method <method> failed with 'full flush buffer should be empty: System.Collections.Generic.List`1[Lucene.Net.Index.DocumentsWriterPerThread]\r\n', and was translated to Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException to avoid terminating the process hosting the test.\r\n ---> Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException: Method <method> failed with 'full flush buffer should be empty: System.Collections.Generic.List`1[Lucene.Net.Index.DocumentsWriterPerThread]\r\n', and was translated to Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException to avoid terminating the process hosting the test.\r\n\r\n   --- End of inner exception stack trace ---\r\n   at Lucene.Net.Index.TestSnapshotDeletionPolicy.ThreadAnonymousInnerClassHelper2.Run() in F:\\Projects\\lucenenet\\src\\Lucene.Net.Tests\\Index\\TestSnapshotDeletionPolicy.cs:line 420\r\n   at J2N.Threading.ThreadJob.SafeRun(ThreadStart start)\r\n\r\n  ----> Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException : Method <method> failed with 'full flush buffer should be empty: System.Collections.Generic.List`1[Lucene.Net.Index.DocumentsWriterPerThread]\r\n', and was translated to Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException to avoid terminating the process hosting the test.\r\nResult StandardOutput:\t\r\nCulture: ru-KZ\r\nTime Zone: (UTC+04:00) Astrakhan, Ulyanovsk\r\nDefault Codec: CheapBastard (CheapBastardCodec)\r\nDefault Similarity: RandomSimilarityProvider(queryNorm=False,coord=crazy): {}\r\nNightly: False\r\nWeekly: False\r\nSlow: True\r\nAwaits Fix: False\r\nDirectory: random\r\nVerbose: True\r\nRandom Multiplier: 1\r\nIFD 1 [11.08.2020 18:10:18; NonParallelWorker]: init: current segments file is \"\"; deletionPolicy=Lucene.Net.Index.SnapshotDeletionPolicy\r\nIFD 1 [11.08.2020 18:10:18; NonParallelWorker]: now checkpoint \"\" [0 segments ; isCommit = False]\r\nIFD 1 [11.08.2020 18:10:18; NonParallelWorker]: 1 msec to checkpoint\r\nIW 1 [11.08.2020 18:10:18; NonParallelWorker]: init: create=True\r\nIW 1 [11.08.2020 18:10:18; NonParallelWorker]: \r\ndir=MockDirectoryWrapper(RAMDirectory@548c1d lockFactory=Lucene.Net.Store.SingleInstanceLockFactory)\r\nindex=\r\nversion=4.8.0\r\nmatchVersion=LUCENE_48\r\nanalyzer=MockAnalyzer\r\nramBufferSizeMB=16\r\nmaxBufferedDocs=493\r\nmaxBufferedDeleteTerms=-1\r\nmergedSegmentWarmer=\r\nreaderTermsIndexDivisor=2\r\ntermIndexInterval=58\r\ndelPolicy=SnapshotDeletionPolicy\r\ncommit=null\r\nopenMode=CREATE_OR_APPEND\r\nsimilarity=RandomSimilarityProvider\r\nmergeScheduler=ConcurrentMergeScheduler: maxThreadCount=1, maxMergeCount=2, mergeThreadPriority=-1\r\ndefault WRITE_LOCK_TIMEOUT=1000\r\nwriteLockTimeout=1000\r\ncodec=CheapBastard\r\ninfoStream=ThreadNameFixingPrintStreamInfoStream\r\nmergePolicy=[LogDocMergePolicy: minMergeSize=1000, mergeFactor=13, maxMergeSize=9223372036854775807, maxMergeSizeForForcedMerge=9223372036854775807, calibrateSizeByDeletes=True, maxMergeDocs=2147483647, maxCFSSegmentSizeMB=8796093022207,999, noCFSRatio=1]\r\nindexerThreadPool=Lucene.Net.Index.ThreadAffinityDocumentsWriterThreadPool\r\nreaderPooling=True\r\nperThreadHardLimitMB=1945\r\nuseCompoundFile=True\r\ncheckIntegrityAtMerge=False\r\n\r\nIW 1 [11.08.2020 18:10:18; t6]: commit: start\r\nIW 1 [11.08.2020 18:10:18; t5]: commit: start\r\nIW 1 [11.08.2020 18:10:18; t2]: commit: start\r\nIW 1 [11.08.2020 18:10:18; t6]: commit: enter lock\r\nIW 1 [11.08.2020 18:10:18; t1]: commit: start\r\nIW 1 [11.08.2020 18:10:18; t3]: commit: start\r\nIW 1 [11.08.2020 18:10:18; t6]: commit: now prepare\r\nIW 1 [11.08.2020 18:10:18; t9]: commit: start\r\nIW 1 [11.08.2020 18:10:18; t7]: commit: start\r\nIW 1 [11.08.2020 18:10:18; t8]: commit: start\r\nIW 1 [11.08.2020 18:10:18; t0]: commit: start\r\nIW 1 [11.08.2020 18:10:18; t4]: commit: start\r\nIW 1 [11.08.2020 18:10:18; t6]: prepareCommit: flush\r\nIW 1 [11.08.2020 18:10:18; t6]:   index before flush \r\nDW 1 [11.08.2020 18:10:18; t6]: startFullFlush\r\nDW 1 [11.08.2020 18:10:18; t6]: anyChanges? numDocsInRam=10 deletes=False hasTickets:False pendingChangesInFullFlush: False\r\nDWFC 1 [11.08.2020 18:10:18; t6]: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_0, aborting=False, numDocsInRAM=2, deleteQueue=DWDQ: [ generation: 0 ]]\r\nDWFC 1 [11.08.2020 18:10:18; t6]: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_1, aborting=False, numDocsInRAM=2, deleteQueue=DWDQ: [ generation: 0 ]]\r\nDWFC 1 [11.08.2020 18:10:18; t6]: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_6, aborting=False, numDocsInRAM=1, deleteQueue=DWDQ: [ generation: 0 ]]\r\nDWFC 1 [11.08.2020 18:10:18; t6]: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_2, aborting=False, numDocsInRAM=1, deleteQueue=DWDQ: [ generation: 0 ]]\r\nDWFC 1 [11.08.2020 18:10:18; t6]: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_3, aborting=False, numDocsInRAM=1, deleteQueue=DWDQ: [ generation: 0 ]]\r\nDWFC 1 [11.08.2020 18:10:18; t6]: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_4, aborting=False, numDocsInRAM=1, deleteQueue=DWDQ: [ generation: 0 ]]\r\nDWFC 1 [11.08.2020 18:10:18; t6]: addFlushableState DocumentsWriterPerThread [pendingDeletes=gen=0, segment=_5, aborting=False, numDocsInRAM=1, deleteQueue=DWDQ: [ generation: 0 ]]\r\nDWFC 1 [11.08.2020 18:10:18; t6]: addFlushableState Docume< Truncated >\r\n\r\n\r\n\r\n```\r\n\r\nI have opened #326 to put a higher priority on this task - we need to get the \"asserts\" working in Release mode to ensure that our test suite is testing everything that it is supposed to so more issues like this don't creep in without us being aware of them.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/672154841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/672427463","html_url":"https://github.com/apache/lucenenet/pull/325#issuecomment-672427463","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/325","id":672427463,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MjQyNzQ2Mw==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-12T01:21:36Z","updated_at":"2020-08-12T01:21:36Z","author_association":"CONTRIBUTOR","body":"Yes of course I forgot about the release vs debug. I've just compiled and re-ran all tests locally in Release and I get 2 other failing tests. I'll keep re-running them to see what happens.\r\n\r\n## TestThaiAnalyzer\r\n\r\n### TestRandomHugeStrings\r\n\r\n```\r\nTest Name:\tTestRandomHugeStrings\r\nTest Outcome:\tFailed\r\nResult Message:\t\r\nMultiple failures or warnings in test:\r\n  1) Expected: 𢌑, Actual: 𢌑𧥣𧡐\r\n\r\nterm 79, output[i] = 𢌑, termAtt = 𢌑𧥣𧡐\r\n  2) Thread threw exception: NUnit.Framework.AssertionException: Expected: 𢌑, Actual: 𢌑𧥣𧡐\r\n\r\nterm 79, output[i] = 𢌑, termAtt = 𢌑𧥣𧡐\r\n   at NUnit.Framework.Assert.ReportFailure(String message)\r\n   at NUnit.Framework.Assert.Fail(String message, Object[] args)\r\n   at Lucene.Net.Analysis.BaseTokenStreamTestCase.AssertTokenStreamContents(TokenStream ts, String[] output, Int32[] startOffsets, Int32[] endOffsets, String[] types, Int32[] posIncrements, Int32[] posLengths, Nullable`1 finalOffset, Nullable`1 finalPosInc, Boolean[] keywordAtts, Boolean offsetsAreCorrect, Byte[][] payloads) in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.TestFramework\\Analysis\\BaseTokenStreamTestCase.cs:line 147\r\n   at Lucene.Net.Analysis.BaseTokenStreamTestCase.CheckAnalysisConsistency(Random random, Analyzer a, Boolean useCharFilter, String text, Boolean offsetsAreCorrect, Field field) in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.TestFramework\\Analysis\\BaseTokenStreamTestCase.cs:line 1243\r\n   at Lucene.Net.Analysis.BaseTokenStreamTestCase.CheckRandomData(Random random, Analyzer a, Int32 iterations, Int32 maxWordLength, Boolean useCharFilter, Boolean simple, Boolean offsetsAreCorrect, RandomIndexWriter iw) in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.TestFramework\\Analysis\\BaseTokenStreamTestCase.cs:line 928\r\n   at Lucene.Net.Analysis.BaseTokenStreamTestCase.AnalysisThread.Run() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.TestFramework\\Analysis\\BaseTokenStreamTestCase.cs:line 716\r\nResult StandardOutput:\t\r\nCulture: ru-KZ\r\nTime Zone: (UTC+04:00) Astrakhan, Ulyanovsk\r\nDefault Codec: CheapBastard (CheapBastardCodec)\r\nDefault Similarity: RandomSimilarityProvider(queryNorm=False,coord=crazy): {}\r\nNightly: False\r\nWeekly: False\r\nSlow: True\r\nAwaits Fix: False\r\nDirectory: random\r\nVerbose: False\r\nRandom Multiplier: 1\r\nResult StandardError:\tTEST FAIL: useCharFilter=True text='rmoirou \\ud808\\udd1a\\ud808\\ude88\\ud808\\udc0c\\ud808\\udc99 \\u2079\\u208a\\u2078\\u2083\\u209b\\u2089\\u209e\\u209b OpbRmje \\u2040\\u2039\\u2068\\u2028\\u2021\\u2058\\u2000 vewlawvj xmychadgx \\ue4f0\\u3027\\u075d\\ued92\\u5a89\\ud809\\udf8fW \\ud800\\udd6f\\ud800\\udd57\\ud800\\udd7f\\ud800\\udd83 wwjp[ofa okgaPVG \\u1ddd\\u1dfe\\u1dc4\\u1dfa\\u1dd8\\u1df7\\u1df6 \\ud834\\udf58\\ud834\\udf4a\\ud834\\udf1b\\ud834\\udf0c qwloruoa kkltpvazd \\ud455\\ud9c3\\udc07#\\ud8ee\\udd14\\u9522\\ud9a0\\udddf 1487093 \\u1dfd\\u1ddc\\u1de1\\u1dd5\\u1ded\\u1df3\\u1dde \\\"dmez\\n&# sorektwg \\ud802\\ude11\\ud802\\ude03\\ud802\\ude1d\\ud802\\ude24 \\ued55\\u06c2\\uecbe\\ue74a\\u0122\\ufa11\\uec79\\uc74a\\ue489 yaajotppi \\ueaf4\\ud95c\\uddfa\\u0438\\ud9d7\\udea7\\uf743 \\ua918\\ua915\\ua929\\ua909\\ua908\\ua916\\ua906\\ua903 ntkytorv \\udb07\\ude55\\u8b30\\u0743\\u01d0\\u3385\\^N pVdyRaaQm dignitnz luymwyrou <??><scri bwepgcu \\u0539\\u0584\\u0559\\u0538\\u055b\\u053a\\u057d\\u0543\\u0547 mcjfvjm \\u2745\\u2708\\u277e\\u273f\\u270c\\u2716\\u279b \\uaa72\\uaa67\\uaa75\\uaa7d\\uaa7a\\uaa64\\uaa6b\\uaa68\\uaa68 \\u0d8f\\u0dcb\\u0dc4\\u0dcb\\u0da8\\u0db3\\u0dcd lbdayvgd \\\"pdq300 hktjwdi dxiqscwg ciujlwr ylaizewky tormunoc \\u2ae9\\u2a91\\u2a5c\\u2a96\\u2a36\\u2a5d\\u2abb\\u2a5c\\u2ac7 \\u07dc\\u07e9\\u07fe\\u07c2\\u07f8\\u07d5\\u07d9 \\uf378\\u0414F\\u028a\\^Cm\\udae6\\ude6e \\u3114\\u3104\\u3115\\u3115\\u312d\\u3126\\u3115 sasvdqqv \\u221a\\u229e\\u227a\\u2283\\u226b\\u2201\\u2289\\u2288\\u221a vuqpcmx v).(p{1,5 8647639 )\\ud638\\ud93e\\udce8\\u10e8\\ufc9b\\ue030g \\u0516\\u0506\\u0516\\u051e\\u051e\\u052e\\u050c aqtjdfar bjbcrnoet yrfveks uikpqsp dmpskdygo zfggtvc \\u2148\\u2122\\u212f\\u212f\\u2140\\u2132\\u2102\\u211f\\u2109 xlnbxgfw \\u2eb9\\u2edf\\u2e89\\u2eb6\\u2eee\\u2ee5\\u2ee0 \\u1619\\u15eb\\u159c\\u1493\\u1577\\u15c5\\u15b6\\u15e0\\u165f \\ud85b\\udd64\\ud848\\udf11\\ud85e\\udd63\\ud85e\\udc50 ndswolowm \\u0b41\\u0b09\\u0b73\\u0b11\\u0b45\\u0b71\\u0b7e cuutfob mleqclxfr \\u878e\\ue4ec\\uf2ae$\\u84e5e\\uf0f5&= \\u2d7d\\u2d78\\u2d6f\\u2d5c\\u2d3d\\u2d36\\u2d59\\u2d5e\\u2d49 gnlvk?{0, dznvsio rqebnglv nrvscgsec \\u24af\\u24e5\\u247b\\u24c8\\u249a\\u24b8\\u2465 \\u319a\\u3195\\u3192\\u319a\\u3198\\u3193\\u3198 h|y)|m| ybehrjjcb hmniijop kehjhwlk vsltivma clialaw lhrksdYj </script \\udaf3\\udddfr\\u00f8\\ud8d3\\udf3b\\u057a\\uff7e\\uee88 actpozjps \\ufe06\\ufe0a\\ufe05\\ufe0a\\ufe0d\\ufe0c\\ufe0c\\ufe0e\\ufe0b \\u3013\\u3021\\u3029\\u3034\\u300a\\u3022\\u3034 gyfcgqi \\u29e8\\u7f3e\\u1824\\ubb99\\u0209\\ue40d\\^^J\\u067a njpaiduk \\u87c7\\ud9d4\\udc93a\\u6573\\ue5db\\ufbb5 vstyhiz ugkvvgjm \\u0fb4\\^C\\u0ea4\\ud812\\udc90\\u9228\\u04b3\\ufc61 Hnrhhtbf hwlrolay nuahyrlfr \\u01aa\\u01fd\\u0184\\u01d5\\u0209\\u023d\\u01a6\\u0205 ayoiyujin jvdpqddc mxlcomhs evtwxxu \\ud800\\uddff\\ud800\\uddd3\\ud800\\uddd5\\ud800\\uddeb \\uaa65\\uaa71\\uaa7c\\uaa65\\uaa75\\uaa6c\\uaa76\\uaa63 hochnclbf \\^F\\u02f5\\ucf32\\u02e6$W\\u0418 hjelclwu \\u0009\\udba0\\udf29\\u8c73\\u8d23\\ufb95\\u0190\\uf6bc \\u01c9\\u0242\\u022d\\u0219\\u01ea\\u0181\\u018b\\u01d9\\u0188 {0,5}{1 zcvwdetp tgvrjvlg \\\"\\\\\\\"&ibs jxslhxgwu hqmxluyd qqugmva +\\udafd\\udf91\\^T\\u0498\\u5fda\\ue000\\u07b2 \\u0dc3\\u0dde\\u0ddf\\u0dfc\\u0d8d\\u0da6\\u0d9f\\u0da4 jeluicdd \\ud802\\udd02\\ud802\\udd00\\ud802\\udd06\\ud802\\udd1b L\\uda18\\udf9a\\u06c5\\ud8b0\\udeda=gU kfwialw \\ue900\\udb2c\\udf97nIv\\u891cA fucubvrdg ukbxqzec </sCRIP ){0,5}x ihecpbi \\u1748\\u175b\\u1740\\u1747\\u174a\\u1749\\u1756 \\u03c7\\u03f5\\u0393\\u03e5\\u0399\\u03c7\\u03d6\\u037f xcfvdnuez \\u279a\\u2774\\u271b\\u2761\\u2782\\u2799\\u2765 (s{0,5}m \\uf900\\u80ab\\u03e9\\u05ac\\u8170\\ued25\\u1c76\\ue337 fhbryuxb xdaorabo jwtphtn \\ud802\\udf75\\ud802\\udf61\\ud802\\udf6e\\ud802\\udf73 emtmjqvbn mzrywmne mqivodbsg i\\udb27\\udcb2\\uf927h:\\uf23c\\uf40b\\^\\ mkocfyo \\u9197q\\u04fb\\u000bN\\uf49c\\u1e96 vbraceuwn dtkwxhuml \\u2fb4\\u2f27\\u2f22\\u2f93\\u2f75\\u2fc2\\u2f27\\u2f00 zcuwxuxqm \\^Q\\u2492\\u827a\\ud882\\udc1dF\\u1729\\uf055\\u5583 nj\\u05dd\\^D\\uec7eW\\u9a8c\\u000b\\u6382 \\n\\\"</scr Ek\\udaea\\udcb1\\udbba\\udc48+ \\ua22e\\ua3ce\\ua0d2\\ua336\\ua347\\ua1b4\\ua0cf\\ua380 -xm-[)]-x lypfcott \\u2cda\\u2c8b\\u2cd8\\u2c98\\u2c95\\u2c8e\\u2ccf\\u2cc7 gG0\\u065e\\u01f3\\ue133\\n bffxuwf \\ud834\\udf35\\ud834\\udf2f\\ud834\\udf49 slfswjdwr vdeylfnlg 6@;I\\^_x\\ue55a\\u03c9 fskagwq \\u23f0\\u2334\\u23e8\\u233a\\u234e\\u239d\\u2370\\u230b --><?>< \\u1db3\\u1d98\\u1d98\\u1d9d\\u1dbb\\u1da4\\u1d81\\u1db9 wwdnamhh |{0,5}. lbdcogw sptrttla fjbtbwldf \\u3357\\u33b2\\u33b6\\u33e3\\u334c\\u33b5\\u331e\\u3341\\u3366 x]i-)cg{ zsbucou qrosvse \\^D\\u0257I`\\uaf37\\ufe46\\ufd19\\ufc48X thgpjsxxf \\ud800\\udf0c\\ud800\\udf12\\ud800\\udf02\\ud800\\udf07 \\u0c87\\u0caa\\u0cc5\\u0caa\\u0cca\\u0ca0\\u0cf3\\u0cd0 puoonjjj \\ufeb4\\u06b0^\\u82eb\\u07d7\\u073e\\u5e92\\u07b2 azjmwas anznlfu \\ua978\\ua969\\ua96f\\ua97b\\ua96d\\ua974\\ua972 \\ud982\\ude8f\\udb3e\\udc51\\u5f48L#\\ufa35 xxmhkqeo \\n<?</   vzaafeks jscsanj PqYDdUba ><  ilpn     </scri serjmhzze >\\\\'&#x'< sseadyg \\u1a6c\\u1a6c\\u1a64\\u1aae\\u1a3b\\u1a80\\u1a38\\u1a81 \\u00ec\\uec6a\\^[\\ufa27\\u05a7\\ub238\\ufb24 \\u175c\\u1742\\u175b\\u1759\\u174d\\u1741\\u1757 \\uec7a\\uda6f\\udd0e\\ufa81\\ufe3b\\ue58ei qmjoynxl iuhbxrzf otrxvlx wqcbkpi sbibimzk \\ufb21\\u8bd1\\ue379\\u0169\\ue0db\\^Q\\ud9a2\\udcdd zvuvbvcil l4\\ue3d5\\uda78\\ude99\\uefe6\\ub1ad \\ud809\\udc3f\\ud809\\udc3b\\ud809\\udc33\\ud809\\udc6a fsaovmazv dhijpniru jwlwgrf </script <!--#</s uaaggsana bpbqcifax okauyoc \\u0580\\u74ae\\u0865\\uf01b\\u0169\\ufd0d\\ua2fc\\uebb4\\u01d6 lwiybeep bnjryrlvo pcpooyvi \\ud802\\udc4e\\ud802\\udc55\\ud802\\udc59\\ud802\\udc43 \\ua709\\ua708\\ua716\\ua709\\ua711\\ua717\\ua70f\\ua708 </   vkvf zlsymyy nfecdocw njonsmqxv \\u302d\\u3022\\u300f\\u3008\\u3013\\u3023\\u303e\\u3020\\u3039 \\uf64c\\ud80a\\ude17\\u65dfh\\ud9cc\\udd32 \\u2324\\u230f\\u23d8\\u2359\\u23ce\\u23d8\\u234d i0\\uecdf\\u5532\\u3235\\ufd20\\uf094\\ub6aa nifwpewv \\uffb6\\u1767\\u034b\\u02d3\\ue53f\\ue426 \\u3205\\u322d\\u321b\\u326d\\u32e6\\u32db\\u32b8\\u325c *\\udbcb\\ude20C\\^P\\^Y\\u0342\\u8817\\uf136 <Br>&#</s vpdfytj E\\u834e\\udb8d\\udf11\\uf955\\u02d4\\u067f ufziceoei ylckoelia oddhlvoqn <bR-->?> \\uaa77\\uaa6d\\uaa73\\uaa7f\\uaa76\\uaa6e\\uaa76\\uaa79 bivdqxu ><!--<scr meopvvpn cvweclmh dqaxzvqu &#<     pbcipst \\u1ce9\\u1ce8\\u1cd0\\u1cf3\\u1cdd\\u1ce8\\u1cf7\\u1cd9\\u1cd0 \\u31f4\\u31f4\\u31fb\\u31fd\\u31f1\\u31ff\\u31f6\\u31f2\\u31f1 zxkhlbylx \\u07e4\\u07c1\\u07c1\\u07d9\\u07dd\\u07eb\\u07ff\\u07e0\\u07f3 yyghomsb {1,5}e{0, </p>>\\\\\\\"< vveklwysz vuxkwrss q[{0,5}{ xkhstiv <script \\u17af\\u179b\\u17ea\\u17a0\\u17aa\\u17d2\\u17d0\\u17f4 dswmzexh eXxbgfdt mztjmskr kbwayivtt \\ua4b4\\ud8fb\\udc2a\\ue961\\uf6a9\\u0331\\u3306 \\ufe54\\ufe54\\ufe50\\ufe63\\ufe59\\ufe5e\\ufe66\\ufe5b oppvqpqk xuhgeua [|eo.cw \\u072b\\u07c0\\^\\\\uefd5\\^S\\u7583\\^^ \\udbb9\\udd6e\\u8f3d\\u93a5\\u238ff\\ucf12 irdbfznbm \\u03a5\\u03d9\\u03da\\u03d7\\u0397\\u03e8\\u03b8\\u0394\\u039e tzypkxru \\ub477\\ue920\\uaf8a\\u8246\\ufbf4\\u049b\\uec8c {\\ud93c\\udf15\\uc959\\udb45\\ude8d\\u4047 zsydygyzh \\ufad4\\ufab8\\uf91c\\ufa9e\\ufa9b\\ufa61\\ufaa7\\ufa13 \\ua6b6\\ua6bc\\ua6ca\\ua6c3\\ua6de\\ua6b0\\ua6cb syjcqiawr psprfwqs itxpuomi r[)|s.|nv alnnqdy \\u2c7c\\u2c69\\u2c7f\\u2c68\\u2c60\\u2c74\\u2c6e \\^G\\u00d8\\u111d\\u02ca\\ue00b\\ucb33L cjgvndvgt naxjzld \\ud802\\ude1e\\ud802\\ude14\\ud802\\ude0a\\ud802\\ude2f ifzhhsi pd?])dc \\uabf3\\uabfa\\uabea\\uabf8\\uabe9\\uabd9\\uabf3\\uabda bridupl \\u115e\\u1197\\u110d\\u11d6\\u11cd\\u1181\\u1156\\u118d \\u11b3\\u1110\\u118e\\u112d\\u11ab\\u11f9\\u1119\\u1199\\u1193 \\ud808\\udc58\\ud808\\udc13\\ud808\\udf89\\ud808\\udda9 jnxpqwxk ot{0,5}p) \\ud802\\udd06\\ud802\\udd16\\ud802\\udd0e \\uf675\\ue48f\\u0420\\ufcba\\u0255\\^U -qtg{1,5 cpdzksooj \\u2396\\u2366\\u2374\\u237e\\u23ca\\u2396\\u2358\\u23df\\u2363 \\ua836\\ua835\\ua836\\ua838\\ua83b\\ua832\\ua837\\ua831 jezabnsa \\uefb1\\uece3\\u0636\\u06bfp\\u1a9e dpkrxpmv \\ua7bd\\ua7dc\\ua7da\\ua793\\ua76a\\ua7a0\\ua786\\ua798\\ua7ec \\\\'</scrip bprkoukk jrawcus \\udb9f\\udeac\\ud858\\udd64\\u2c53T\\uf6a5\\^Q\\u07c0 \\u0409\\ud9a5\\udf9c\\u05cb\\u077e\\u6f0d\\uc8fc\\u0681\\ufaa0 \\u2d1f\\u2d2a\\u2d0e\\u2d0d\\u2d07\\u2d1a\\u2d03\\u2d19 rgzdibfvu \\u9984\\u07e7\\ud833\\udc9d\\u0116\\u5431\\u3dc6e \\u2271\\u2296\\u22ac\\u22f4\\u2225\\u226a\\u2245\\u2249 \\u5704\\ue605\\ud96c\\udf21\\ub004\\ue11a\\u043b\\u0009 yjzkjjmeu \\u042f\\u01ed\\u04e0\\ud8ce\\udda7\\u2c4e3 axvvopdzb \\uda39\\udea9'\\uf100k\\u036a\\^H\\u05df mwgbdbtrg dovdrhuym sppagdl \\u4a08\\udbb5\\udcf2\\u01e4\\^F\\ue605 unbchdl \\ud800\\udf34\\ud800\\udf35\\ud800\\udf42\\ud800\\udf37 &#372777 \\u01d6X\\ue5d9\\ueb3b\\u03af\\u03a6\\ue647\\ue47f phzhyjbut hxwjhgzdl \\u3155\\u318b\\u3186\\u318b\\u3137\\u3168\\u3135 ZLHhohJY \\ud801\\udc15\\ud801\\udc18\\ud801\\udc2a \\u06a0\\ud912\\udc54M\\ud8ee\\ude52\\uda45\\ude35 \\ufe6b\\ufe5c\\ufe5a\\ufe52\\ufe63\\ufe68\\ufe57\\ufe65 )l.gt-(.) jfnzuroij ozvcbrydm \\u29f3\\u299a\\u29be\\u29f9\\u29bb\\u298f\\u29e5\\u29c8 \\udaf6\\udd6e \\u8164\\u0282\\udb4f\\udc38\\uea05 vkimckyjd \\u2578\\u252d\\u250f\\u2534\\u2523\\u253d\\u2505\\u257f xqblmmg mpvhtlu bjmmdvr \\u252a\\u255a\\u2524\\u2568\\u2524\\u253a\\u2543 mwuytzozb \\u2869\\udae6\\udd1d2\\u01747\\ufe52\\u493a \\\\';<?;12 ihitinvb uykdosn betomli xwkpnhet \\ud867\\udcda\\ud84d\\ude3f\\ud859\\udc55\\ud84d\\udf1e \\ua49e\\ua4c5\\ua493\\ua4a1\\ua4ad\\ua4b3\\ua490 \\u1636\\u1522\\u1457\\u1595\\u15d3\\u1606\\u142a R\\ucb69\\uf110\\^Gj\\u1895\\u0211\\ufed9 \\u18db\\u18f1\\u18e2\\u18e5\\u18e1\\u18e3\\u18f5\\u18e5 \\ueb63\\u01c75o>\\^O\\u07d9 ajhxeoji \\ua6ca\\ua6f5\\ua6cf\\ua6e1\\ua6e1\\ua6aa\\ua6bc lhvvznt yxozzqk sxxcbvde \\uec03\\u5f7d\\uf159\\u0281\\uac8dy\\u8016\\udbcb\\udfaf \\ucd19\\ufa0a\\uf4b7\\ud86a\\udeeb\\u51ad\\u1f01\\ucc53d \\u0d3c\\u0d0c\\u0d1d\\u0d11\\u0d6c\\u0d0c\\u0d41\\u0d5b \\ua135\\ua031\\ua140\\ua46d\\ua3cd\\ua17f\\ua366\\ua19c ohtjeha gew{1,5} \\ud800\\udf98\\ud800\\udf8b\\ud800\\udf90\\ud800\\udf87 \\u32b6\\u3272\\u3282\\u320f\\u3238\\u32c4\\u32c3 \\udb40\\udc66\\udb40\\udc0a\\udb40\\udc16 mbtvntaq \\uebdb\\u00df\\uf480E\\u47a0z\\ubfb2 aoqzljxl \\u0556\\u0576\\u0564\\u056c\\u056c\\u0550\\u0581\\u0585\\u0580 \\u89f1`\\ua24d\\ud878\\udf07\\u0577B tdojvfu *\\ue958\\uf18a\\u5a57\\^]\\uad0f{\\u5568 v\\n<\\u07c7\\u0243\\u66dc7 m\\ud864\\udecc\\ud946\\udcfc\\u07f9\\uf8c6\\u010f \\u247c\\u24c9\\u24c5\\u24d1\\u24ac\\u2476\\u247a\\u24de }\\u070c\\uf15a\\uebc7\\ueab9\\u5eed\\u468e\\u0690 oxpluod cbbtosj \\u2dd2\\u2d95\\u2dcb\\u2dd1\\u2d8b\\u2d98\\u2d96\\u2db2 uygolnl fhglcic \\ud809\\udc45\\ud809\\udc3b\\ud809\\udc6b\\ud809\\udc59 ?sr(wi(i? pvphhdcx ilppxjnrj gpjacpkyw gwbzgtqtj fmojstnk zthobwt nwe{1,5}] spqjveifo tnlzczf (\\u9dc2\\ud9d8\\udca7\\^V\\ue25d\\ue2f9\\ud6e3 jajlqgu \\uc1d6\\u051d\\u0997\\u065f\\u07af\\u1731k\\u8807 \\u4b4b\\u0765\\u0515\\^Q\\ub6e7N\\ud838\\udf54 \\u1b69\\u1b48\\u1b5f\\u1b71\\u1b34\\u1b1f\\u1b6f cztqxvgm \\u02f7!rm\\ua005\\ud803\\udd72\\u074e O\\u1747M\\uf90f\\ueb80\\ud8f3\\udc70 \\u0430\\uee9c\\uda4a\\udcba\\u133an\\u53fd\\u7c42\\u61c8 aiibnvf \\ufe50\\ufe6d\\ufe53\\ufe57\\ufe64\\ufe67\\ufe69\\ufe5b lcqpmaw fohfeysra wzspzwmon mdzmskpui \\ua598\\ua541\\ua607\\ua5de\\ua543\\ua579\\ua50f\\ua590 XgZdlMe fjuvybfp \\u02a7\\u0276\\u027c\\u2c6e\\u02a9\\u0282\\u01b7 qw.r{0,5 \\ue261\\ue393\\ufe93\\ud9ef\\udc48#j mbcecutxn \\ufa6a\\^Q\\^O\\u07d8\\ud9d5\\ude8d\\ud97a\\udecb@ \\u048e\\ucc6el\\uf466\\uda1c\\ude59\\u02d3\\ue377 vikyrub 13158513 \\ud800\\udd3f\\ud800\\udd32\\ud800\\udd00\\ud800\\udd0f jandkrsqp \\uda35\\udca0\\ue7ac\\ud830\\udc41\\udbcb\\udf16} \\ud83c\\ude0e\\ud83c\\ude5d\\ud83c\\ude4f\\ud83c\\ude94 midzjoyq \\u119e\\uf208\\ufea4\\uff18\\ufa0f5\\u058e \\uf0c9\\u00af\\u00df\\ud86c\\udd2e\\udbef\\udf7a kflnhwgs \\u7482\\u048a\\u074f\\uf819\\u067c-I \\ud8cf\\udc6f\\uec13,\\u0129\\ue52c gypeecxl \\u1b5a\\u1b2d\\u1b7b\\u1b30\\u1b34\\u1b39\\u1b7a \\u109b\\u1074\\u1017\\u104e\\u102d\\u105f\\u1032\\u102e fygbnpotp gkeafjtg UZxWFdvy gpsvexk \\u727e\\^Zy\\uda2d\\udd49\\udace\\udf96 &#--><! chvgvzs k.y)z]|]( bbobpho ekrzvlvz \\ue5e2\\ue21f\\udaa9\\udf1e10\\u1427\\uf5c2 ovyuwqll imycshl \\ud8c0\\udcff8I\\uf2e2\\ufaa0\\ud818\\ude07 \\uda3d\\udf0bg\\u2c5e\\ud914\\udd98\\^^\\u592c \\u258f\\u2594\\u259a\\u2581\\u2586\\u2595\\u2590\\u2598 qmwquum wsvfruf \\u2c73\\u2c70\\u2c6f\\u2c70\\u2c72\\u2c7e\\u2c62 \\ud96e\\udf16\\u17c2\\ueacb8\\ufea6s \\ufbb2\\uaccb\\u49d6W\\u07ca\\ud8fc\\udf37 ofbqdse ecadnhh ykryxgrtd jqvbsvy \\uab13\\uf997S\\uda06\\udd62\\udb6d\\uddd6\\u0359\\u6e42 |t{1,5}|j \\u034d\\u3950\\ud9b5\\udf12\\\\\\ue980\\ubb04 \\u210a\\u2106\\u213d\\u2110\\u2136\\u212c\\u2129\\u2132\\u2102 quihentsa pwssuec \\u319d\\u3199\\u319e\\u3198\\u319d\\u319e\\u319c\\u3191\\u319d \\u024b\\uab35\\ud948\\ude3c\\uabec\\udbcc\\udcd2\\u060d kmlntxmj kmzduuas \\u21a7\\u21ca\\u21b9\\u21be\\u21fb\\u21ed\\u21a1\\u21b8 <script> </script \\uda7d\\ude18\\u0423<\\^Y\\ue774 </script> \\ufd2c\\u145b\\u0588\\u057a\\uf8e0\\u10c9\\ufbaa\\u2f12 \\u0b98\\u0bfe\\u0bbc\\u0be2\\u0bee\\u0b98\\u0bca rtqolvc nwmfulksq sodmqnuyu \\ud803\\udc28\\ud803\\udc12\\ud803\\udc0b\\ud803\\udc49 \\u0708\\uebdb\\u0183\\^Dw\\ue0cfhq \\ud802\\udf37\\ud802\\udf12\\ud802\\udf11\\ud802\\udf29 pcfromfn \\^P\\u0009!=<D7C\\^A \\u18be\\u18e5\\u18fa\\u18c1\\u18b5\\u18e8\\u18f6 \\ud800\\udd10\\ud800\\udd3e\\ud800\\udd2a\\ud800\\udd28 afdljtq orhlwkn \\u1072\\u1004\\u1001\\u1007\\u1069\\u1042\\u104b\\u1079 \\u310e\\u310c\\u310a\\u310b\\u311e\\u310b\\u312f\\u3122 \\ua4b6\\ua4c3\\ua4b0\\ua4c9\\ua4bc\\ua4b6\\ua4b0 pwszneyo \\uedf5g\\u0009\\uf581>\\ud9c8\\udcf4 \\uabcc\\uabee\\uabf5\\uabd3\\uabec\\uabf6\\uabd4\\uabe1 <scRiPt \\ud834\\udd84\\ud834\\udde8\\ud834\\udd7c\\ud834\\udd82 l0\\^P\\^[\\ue529\\ud93a\\ude73\\u0207 \\u1e39\\u1edd\\u1ec7\\u1e1a\\u1e90\\u1e0b\\u1ef6\\u1ea2 \\ufe95\\ufea5\\ufecc\\ufeb8\\ufed8\\ufee3\\ufefe\\ufecb brzwmvjvz \\u2d1e\\u2d26\\u2d1d\\u2d00\\u2d01\\u2d0d\\u2d01 \\\\'&#>\\\\\\\" efxgczhte yBIueEda sdgqvnc \\ud82f\\udec8\\u6206\\u037d\\udbc5\\udc55\\uf9c7\\ud9f4\\uddcf evaqczfcg |q({1,5}o kjnlasan \\ufe08\\ufe02\\ufe0a\\ufe06\\ufe03\\ufe04\\ufe0f\\ufe04 \\ueff3P\\u2a82\\u0913\\ud827\\ude82\\u022e \\ud834\\udf7a\\ud834\\udf6f\\ud834\\udf63\\ud834\\udf78 \\^^\\u079c]\\u01ad\\u4819\\ud82b\\udfbfaA waebltqb \\u04a8\\u9ec5\\ud8b9\\udff2\\ub2b5\\u06ed\\ud9f3\\ude2c\\u039b ciolsrbj vd-{1,5}? aoffhni -df-?z(f \\u1d82\\u1db3\\u1da3\\u1d9a\\u1da4\\u1d8b\\u1dbe\\u1d80 \\ud802\\udd1c\\ud802\\udd11\\ud802\\udd02\\ud802\\udd0a -g{1,5} \\ufe18\\ufe1a\\ufe17\\ufe14\\ufe12\\ufe15\\ufe19\\ufe12 iippsej \\u044b\\ued87\\u61ba\\uf81b\\u011f\\u160b\\u6a4d Z\\u5147\\u0745\\ub4f1\\n\\uecad\\u07b8 \\u0716\\u5a10\\udb24\\udf82\\u00c2\\ua4b9 \\u31aa\\u31ae\\u31a0\\u31af\\u31bd\\u31aa\\u31aa\\u31bd\\u31a3 eyb-{0,5} ahzesvry rtgaehshs dapujfsz \\^E\\u5ec3\\ue273\\u456e\\u5c8b\\u0297\\u7892\\^OT \\u6dbd\\ufa6c\\u15e9\\u05ec\\^X\\ud9d5\\udce9 \\ua4cd\\ua493\\ua4c0\\ua4a8\\ua4cb\\ua491\\ua4bb\\ua49e qfgxpxtic \\ueae1\\u01dd\\u1547\\u0180\\u00df\\u0679w\\u04ca@ d]x?u|? \\\\\\\"\\\\\\\"?>\\\\\\\"\\\\ chmnlkxz pfwfodw xvunlpd \\u077d\\u075e\\u0752\\u076f\\u0760\\u075b\\u0754\\u077b\\u0763 (zsx{1, \\\"?>'</p xjsrhbezs verhwtho ttbdfcdai \\u2cbb\\u2cd8\\u2cb8\\u2ce8\\u2cc5\\u2cac\\u2cfc \\ud800\\ude86\\ud800\\ude93\\ud800\\ude9a\\ud800\\ude8a tpsyxrz \\u00e5\\u6548\\u7c5f\\uea44\\uecce\\u0347\\^A\\uf127\\^U qasgzlvlh \\ue914\\u8d93\\ufd1e\\u059c5\\u074a\\u6971\\^R \\u0355\\u0436\\ud988\\udf3a}\\\\\\u02e4\\u3c1bO D\\ue5f9[\\u0426\\udaad\\ude7a\\^^\\^E kdyrhgos \\ud803\\ude6f\\ud803\\ude65\\ud803\\ude6c\\ud803\\ude71 bthilhly zfxnajxbk iwgbnlosn smWkRFvr ytjgoesrt yezaqmbua \\u0ae1\\u0aeb\\u0ac6\\u0a8d\\u0adb\\u0ac2\\u0adf\\u0aa1         ptodmfn \\u1b41\\u1b72\\u1b1e\\u1b00\\u1b56\\u1b5d\\u1b3c \\u4ddd\\u4dd5\\u4dcb\\u4df5\\u4dfa\\u4dcf\\u4df3 poxzluqs .eus{1, ufwspuuu \\u30f1\\u0604\\u0713\\uf977\\u1490\\^E\\u03b1Sg \\u01e5\\u469b\\u5a7c\\u2bd7\\u068d\\uda18\\udc83G\\u0224 rqoppyypk \\ua81dn\\u0611\\u0009\\u3d2a\\\\ bopwldew {\\^^<\\u0673\\u041b\\ud57e\\u464e\\ua884 ciqsawsik \\uf96a\\u48db\\u044eV6\\u6820\\u026e\\u3477 nspyshu diinlypyy rgzxwyzq rflidrja clabuitt gvzxdsi \\u208a\\u2071\\u2089\\u2071\\u2081\\u2084\\u208a\\u2076 xwsbcxy svyxcjll REDfywsim zykehicia \\u0607\\u062e\\uc410\\uf43d\\uda27\\ude7f\\u00a9\\uc110\\u038d xildafrwb \\u0749\\ufa10\\ue286\\ueff4\\u04a2\\^A\\u0731 \\u05b0\\ufafa\\ue0ec\\ueaa1\\ud891\\ude00\\u0009 \\u16ce\\u16f1\\u16df\\u16c6\\u16b0\\u16a3\\u16ec\\u16ab \\ud800\\udd62\\ud800\\udd49\\ud800\\udd8d\\ud800\\udd55 \\ud82d\\udfdd\\udaec\\uddd1\\u0771k\\u0580\\u37e0\\u037c \\udade\\udc2e\\udb9c\\udf67#\\uba9d\\^^\\ua198 ]\\ud8dc\\udc38'\\ue67e\\u07e8 fphajfxnv \\u0466\\ud8c8\\udf7b\\uda1f\\udf0d\\u0560\\u8a13\\udacc\\ude48 enpbuye ojxxrniq dshgiinyb mtanfsdvp \\ud803\\ude7a\\ud803\\ude7a\\ud803\\ude66\\ud803\\ude7b \\ud802\\udc5e\\ud802\\udc52\\ud802\\udc5d \\uaa65\\uaa68\\uaa6f\\uaa71\\uaa75\\uaa77\\uaa6f kcoepdmop qwuosoej \\ueb16\\u0483\\u0199\\ud969\\udfaa\\uda7a\\udc50 \\u277d\\u27b5\\u27ab\\u2709\\u2733\\u277d\\u278e\\u274c a]q[knl- dvwpstdh bJk-gzs{ \\ud808\\uddbb\\ud808\\ude5e\\ud808\\udc26\\ud808\\udffc bjvchmve suirqzkkm \\u2de7\\u2de6\\u2df7\\u2df1\\u2dfd\\u2de3\\u2de5\\u2dee \\udb56\\udcdeW\\^Y\\u04e8\\ud89a\\uddbd cpyjjxtja \\udb7b\\ude3e\\ud8cb\\udc2e8\\uff58\\uda52\\udc69 \\ud931\\udeb6\\u02ec\\u02bf\\^W\\uda29\\udfff ehpumjjq psecrcdwx \\u2ce5\\u2ce5\\u2cd1\\u2cee\\u2cdd\\u2ca4\\u2c9b geupcpmv jswDYnF dochounge \\udb75\\udea7\\ud92d\\udca6\\^R\\ufc9e\\uca4c harylko whmuyjt ko)hc{0, yqduoufny \\u3f20\\udb45\\udfcfj\\u2cad\\u01ed\\ue020 sgurrpx lbfjxnv \\ua84c\\ua85e\\ua842\\ua843\\ua84e\\ua861\\ua85e\\ua866 njddumd hgrmcrj \\u0112\\^Z\\u2610\\ud83b\\udf26\\u5b12\\u4971\\ud919\\udccb lmvthdtr \\ufb14\\ufb23\\ufb03\\ufb02\\ufb35\\ufb29\\ufb18\\ufb03 _\\^O\\u036d\\ud9ee\\udfac\\u0361\\ud992\\udd8a\\u52e8 z{1,5}]da hswfutfd \\ud800\\udfb7\\ud800\\udfd8\\ud800\\udfa0 vxtfqzo ijbyldwgt juqtmfys kFysniiJ \\\\\\\"&#xc8 y)|w.w] \\ud800\\udd8e\\ud800\\udd52\\ud800\\udd53\\ud800\\udd89 jegyzlru kqovrysp )s){1,5}. \\u1730\\u172a\\u172f\\u1720\\u1735\\u1737\\u1739 vlhwieu'\r\n```\r\n\r\n### TestRandomStrings\r\n\r\n```\r\nTest Name:\tTestRandomStrings\r\nTest Outcome:\tFailed\r\nResult Message:\t\r\nThread threw exception: System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at Lucene.Net.Analysis.Th.ThaiWordBreaker.GetNext() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.Analysis.Common\\Analysis\\Th\\ThaiTokenizer.cs:line 178\r\n   at Lucene.Net.Analysis.Th.ThaiWordBreaker.Next() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.Analysis.Common\\Analysis\\Th\\ThaiTokenizer.cs:line 166\r\n   at Lucene.Net.Analysis.Th.ThaiTokenizer.IncrementWord() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.Analysis.Common\\Analysis\\Th\\ThaiTokenizer.cs:line 106\r\n   at Lucene.Net.Analysis.Util.SegmentingTokenizerBase.IncrementToken() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.Analysis.Common\\Analysis\\Util\\SegmentingTokenizerBase.cs:line 87\r\n   at Lucene.Net.Analysis.Core.LowerCaseFilter.IncrementToken() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.Analysis.Common\\Analysis\\Core\\LowerCaseFilter.cs:line 59\r\n   at Lucene.Net.Analysis.Util.FilteringTokenFilter.IncrementToken() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.Analysis.Common\\Analysis\\Util\\FilteringTokenFilter.cs:line 89\r\n   at Lucene.Net.Analysis.BaseTokenStreamTestCase.AssertTokenStreamContents(TokenStream ts, String[] output, Int32[] startOffsets, Int32[] endOffsets, String[] types, Int32[] posIncrements, Int32[] posLengths, Nullable`1 finalOffset, Nullable`1 finalPosInc, Boolean[] keywordAtts, Boolean offsetsAreCorrect, Byte[][] payloads) in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.TestFramework\\Analysis\\BaseTokenStreamTestCase.cs:line 242\r\n   at Lucene.Net.Analysis.BaseTokenStreamTestCase.CheckAnalysisConsistency(Random random, Analyzer a, Boolean useCharFilter, String text, Boolean offsetsAreCorrect, Field field) in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.TestFramework\\Analysis\\BaseTokenStreamTestCase.cs:line 1243\r\n   at Lucene.Net.Analysis.BaseTokenStreamTestCase.CheckRandomData(Random random, Analyzer a, Int32 iterations, Int32 maxWordLength, Boolean useCharFilter, Boolean simple, Boolean offsetsAreCorrect, RandomIndexWriter iw) in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.TestFramework\\Analysis\\BaseTokenStreamTestCase.cs:line 928\r\n   at Lucene.Net.Analysis.BaseTokenStreamTestCase.AnalysisThread.Run() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.TestFramework\\Analysis\\BaseTokenStreamTestCase.cs:line 716\r\nResult StandardOutput:\t\r\nCulture: ru-KZ\r\nTime Zone: (UTC+04:00) Astrakhan, Ulyanovsk\r\nDefault Codec: CheapBastard (CheapBastardCodec)\r\nDefault Similarity: RandomSimilarityProvider(queryNorm=False,coord=crazy): {}\r\nNightly: False\r\nWeekly: False\r\nSlow: True\r\nAwaits Fix: False\r\nDirectory: random\r\nVerbose: False\r\nRandom Multiplier: 1\r\nResult StandardError:\tTEST FAIL: useCharFilter=True text='\\uf79b\\u7e48\\u0412\\n\\ud895\\udff53`'\r\n\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/672427463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/672466206","html_url":"https://github.com/apache/lucenenet/pull/325#issuecomment-672466206","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/325","id":672466206,"node_id":"MDEyOklzc3VlQ29tbWVudDY3MjQ2NjIwNg==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-12T02:13:21Z","updated_at":"2020-08-12T02:13:21Z","author_association":"CONTRIBUTOR","body":"Just ran it again and get a different failure. I'm going to close the solution, rebuild and re-run and see what happens, not sure if these are false positives or not.\r\n\r\n##  TestICUTokenizerCJK.cs\r\n\r\n### TestRandomStrings\r\n\r\n```\r\nTest Name:\tTestRandomStrings\r\nTest Outcome:\tFailed\r\nResult Message:\t\r\nMultiple failures or warnings in test:\r\n  1) Expected: 〹〤, Actual: 〹\r\n\r\nterm 1, output[i] = 〹〤, termAtt = 〹\r\n  2) Thread threw exception: NUnit.Framework.AssertionException: Expected: 〹〤, Actual: 〹\r\n\r\nterm 1, output[i] = 〹〤, termAtt = 〹\r\n   at NUnit.Framework.Assert.ReportFailure(String message)\r\n   at NUnit.Framework.Assert.Fail(String message, Object[] args)\r\n   at Lucene.Net.Analysis.BaseTokenStreamTestCase.AssertTokenStreamContents(TokenStream ts, String[] output, Int32[] startOffsets, Int32[] endOffsets, String[] types, Int32[] posIncrements, Int32[] posLengths, Nullable`1 finalOffset, Nullable`1 finalPosInc, Boolean[] keywordAtts, Boolean offsetsAreCorrect, Byte[][] payloads) in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.TestFramework\\Analysis\\BaseTokenStreamTestCase.cs:line 147\r\n   at Lucene.Net.Analysis.BaseTokenStreamTestCase.CheckAnalysisConsistency(Random random, Analyzer a, Boolean useCharFilter, String text, Boolean offsetsAreCorrect, Field field) in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.TestFramework\\Analysis\\BaseTokenStreamTestCase.cs:line 1248\r\n   at Lucene.Net.Analysis.BaseTokenStreamTestCase.CheckRandomData(Random random, Analyzer a, Int32 iterations, Int32 maxWordLength, Boolean useCharFilter, Boolean simple, Boolean offsetsAreCorrect, RandomIndexWriter iw) in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.TestFramework\\Analysis\\BaseTokenStreamTestCase.cs:line 928\r\n   at Lucene.Net.Analysis.BaseTokenStreamTestCase.AnalysisThread.Run() in C:\\Users\\Shannon\\Documents\\_Projects\\Lucene.Net\\Lucenenet.4.x-copy\\src\\Lucene.Net.TestFramework\\Analysis\\BaseTokenStreamTestCase.cs:line 716\r\nResult StandardOutput:\t\r\nCulture: ru-KZ\r\nTime Zone: (UTC+04:00) Astrakhan, Ulyanovsk\r\nDefault Codec: CheapBastard (CheapBastardCodec)\r\nDefault Similarity: RandomSimilarityProvider(queryNorm=False,coord=crazy): {}\r\nNightly: False\r\nWeekly: False\r\nSlow: True\r\nAwaits Fix: False\r\nDirectory: random\r\nVerbose: False\r\nRandom Multiplier: 1\r\nResult StandardError:\tTEST FAIL: useCharFilter=False text='\\u300f\\u3011\\u302b\\u3039\\u3039\\u3024 \\uc58a\\^P\\ud815\\udd05\\ucc84\\uc07e bpy'\r\n``","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/672466206/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/674324678","html_url":"https://github.com/apache/lucenenet/issues/286#issuecomment-674324678","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/286","id":674324678,"node_id":"MDEyOklzc3VlQ29tbWVudDY3NDMyNDY3OA==","user":{"login":"Piedone","id":1976647,"node_id":"MDQ6VXNlcjE5NzY2NDc=","avatar_url":"https://avatars.githubusercontent.com/u/1976647?v=4","gravatar_id":"","url":"https://api.github.com/users/Piedone","html_url":"https://github.com/Piedone","followers_url":"https://api.github.com/users/Piedone/followers","following_url":"https://api.github.com/users/Piedone/following{/other_user}","gists_url":"https://api.github.com/users/Piedone/gists{/gist_id}","starred_url":"https://api.github.com/users/Piedone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Piedone/subscriptions","organizations_url":"https://api.github.com/users/Piedone/orgs","repos_url":"https://api.github.com/users/Piedone/repos","events_url":"https://api.github.com/users/Piedone/events{/privacy}","received_events_url":"https://api.github.com/users/Piedone/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-15T00:53:34Z","updated_at":"2020-08-15T00:53:34Z","author_association":"NONE","body":"I'm getting the warning on `4.8.0-beta00010` with SDK v`3.1.302`. Cleared the NuGet cache, restarted (Windows Server). There are no other versions restored and visible in the NuGet cache so indeed this is the only version being used.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/674324678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/678416415","html_url":"https://github.com/apache/lucenenet/issues/323#issuecomment-678416415","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/323","id":678416415,"node_id":"MDEyOklzc3VlQ29tbWVudDY3ODQxNjQxNQ==","user":{"login":"AlexanderKot","id":1678749,"node_id":"MDQ6VXNlcjE2Nzg3NDk=","avatar_url":"https://avatars.githubusercontent.com/u/1678749?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderKot","html_url":"https://github.com/AlexanderKot","followers_url":"https://api.github.com/users/AlexanderKot/followers","following_url":"https://api.github.com/users/AlexanderKot/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderKot/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderKot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderKot/subscriptions","organizations_url":"https://api.github.com/users/AlexanderKot/orgs","repos_url":"https://api.github.com/users/AlexanderKot/repos","events_url":"https://api.github.com/users/AlexanderKot/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderKot/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-21T17:59:10Z","updated_at":"2020-08-21T17:59:10Z","author_association":"NONE","body":"Have the same issue after migrating 4.8.0-beta00005 -> 4.8.0-beta00011\r\nMicrosoft.Extensions.Configuration 3/17 is used\r\nWorkaround helped.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/678416415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/679378842","html_url":"https://github.com/apache/lucenenet/pull/313#issuecomment-679378842","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/313","id":679378842,"node_id":"MDEyOklzc3VlQ29tbWVudDY3OTM3ODg0Mg==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-24T21:35:28Z","updated_at":"2020-08-24T21:35:28Z","author_association":"CONTRIBUTOR","body":"The concurrency issue with `ICUTokenizer` has now been temporarily addressed in #328.\r\n\r\nAs for changing the `Random` class instantiation, there doesn't seem to be any effect when doing it this way. I am closing this because it doesn't address the issues described in #288. Of course, we should have a `FindFirstFailingSeed` feature to assist with debugging, but depending on what random number generator implementation we use, it may need to be very different than the one here.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/679378842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/679379623","html_url":"https://github.com/apache/lucenenet/issues/249#issuecomment-679379623","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/249","id":679379623,"node_id":"MDEyOklzc3VlQ29tbWVudDY3OTM3OTYyMw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-24T21:37:22Z","updated_at":"2020-08-24T21:37:22Z","author_association":"CONTRIBUTOR","body":"Closing this because there is nothing here that can be reproduced and we have approximately doubled performance since this was reported.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/679379623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/684792520","html_url":"https://github.com/apache/lucenenet/issues/333#issuecomment-684792520","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/333","id":684792520,"node_id":"MDEyOklzc3VlQ29tbWVudDY4NDc5MjUyMA==","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-01T11:45:51Z","updated_at":"2020-09-01T11:45:51Z","author_association":"CONTRIBUTOR","body":"this is interesting, but this such a different doesn't make scene.\r\n\r\n10 seconds to 52 minutes (~180K seconds) is not reasonable in any way.\r\nso this is probably a typo, but still, even 5X difference is not realistic.\r\n\r\ni think you should re-test your program.\r\ni do believe there are many places we can optimize Lucene and do even better than java thanks to better capabilities of dot net.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/684792520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/685039718","html_url":"https://github.com/apache/lucenenet/issues/333#issuecomment-685039718","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/333","id":685039718,"node_id":"MDEyOklzc3VlQ29tbWVudDY4NTAzOTcxOA==","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-01T18:05:19Z","updated_at":"2020-09-01T18:05:50Z","author_association":"CONTRIBUTOR","body":"This certainly sounds oversuspicious, we have an index with over a million documents, each with thousands of fields.\r\n\r\nIf i do a free text search (meaning it accesses all fields) starting and ending with a wildcard (eg. ```*a*```), which is probably the worst case scenario I can think of, it takes merely ~50 seconds, that is including loading the actual 9 megabytes of data the search produces and returning it over the wire. (not completely satisfying, but considering the punishment I just directed at the index + wire, it's somewhat understandable)...  ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/685039718/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/685451453","html_url":"https://github.com/apache/lucenenet/issues/333#issuecomment-685451453","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/333","id":685451453,"node_id":"MDEyOklzc3VlQ29tbWVudDY4NTQ1MTQ1Mw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-02T08:45:35Z","updated_at":"2020-09-02T08:45:35Z","author_association":"CONTRIBUTOR","body":"Without seeing your test, there is not a lot I can tell you. You didn't even mention what versions of Lucene/Lucene.NET you are testing. Of course, the only apples to apples way to test this would be either to run:\r\n\r\n- Lucene.NET 3.0.3 against its closest counterpart in Lucene, 3.0.1\r\n- Lucene.NET 4.8.0 against Lucene 4.8.0\r\n\r\nSince Lucene 4.8.0 was designed to run with Java 6, you would also need to get a copy of a Java 6 runtime to run it on. And since Java 6 is not available for download from any official source anymore, I strongly suspect you are not doing either of these exact version tests on the version of Java it was designed to run on.\r\n\r\nDo note that we have recently [set up benchmarks](https://github.com/apache/lucenenet/pull/310) across each of the betas, and we have approximately doubled search performance since 4.8.0-beta00007, so if you are testing on an older beta you will definitely see performance degradation.\r\n\r\nOf course, it is possible you have stumbled upon a severe bottleneck in a specific Analyzer, Tokenizer, Codec, Query, or other component, but again, without seeing the code there isn't much we can do. Could you post this POC somewhere in a form where it can be *run* in both Java and .NET without too much extra configuration, and some setup instructions to get it up and running?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/685451453/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/685552220","html_url":"https://github.com/apache/lucenenet/issues/333#issuecomment-685552220","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/333","id":685552220,"node_id":"MDEyOklzc3VlQ29tbWVudDY4NTU1MjIyMA==","user":{"login":"parikshitphukan17","id":36994133,"node_id":"MDQ6VXNlcjM2OTk0MTMz","avatar_url":"https://avatars.githubusercontent.com/u/36994133?v=4","gravatar_id":"","url":"https://api.github.com/users/parikshitphukan17","html_url":"https://github.com/parikshitphukan17","followers_url":"https://api.github.com/users/parikshitphukan17/followers","following_url":"https://api.github.com/users/parikshitphukan17/following{/other_user}","gists_url":"https://api.github.com/users/parikshitphukan17/gists{/gist_id}","starred_url":"https://api.github.com/users/parikshitphukan17/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/parikshitphukan17/subscriptions","organizations_url":"https://api.github.com/users/parikshitphukan17/orgs","repos_url":"https://api.github.com/users/parikshitphukan17/repos","events_url":"https://api.github.com/users/parikshitphukan17/events{/privacy}","received_events_url":"https://api.github.com/users/parikshitphukan17/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-02T10:10:43Z","updated_at":"2020-09-02T10:12:36Z","author_association":"NONE","body":"Hi, \r\nSorry for not giving the specifics of the POC that I made. They are as follows:\r\n\r\nLucene java version 8.6.0\r\nLucenenet ver 3.03\r\n\r\nUnfortunately, I am using multiple libraries for text extraction thus requiring some additional configuration. What I can do is post the index creation and search code snippet that I used for Lucenenet. Would that be enough? I won't be posting the Java version as its working fine and I do not need help with that but do let me know if you need that too.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/685552220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/688178992","html_url":"https://github.com/apache/lucenenet/issues/333#issuecomment-688178992","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/333","id":688178992,"node_id":"MDEyOklzc3VlQ29tbWVudDY4ODE3ODk5Mg==","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-07T08:59:47Z","updated_at":"2020-09-07T08:59:47Z","author_association":"CONTRIBUTOR","body":"Considering that your request concerns a \"Difference\" between the two, posting both is still relevant if anyone is to help you with spotting any notable difference in the two implementations...\r\n\r\nOther things that might prove interesting is:\r\n - Storage information (Storage can in many cases be a bottleneck, this can especially be the case if you store and retrieve the documents in the index...)\r\n - Index size (Both for Java and .NET) - That is the files in the index.\r\n - Memory Capacity and Footprint (Both for Java and .NET)\r\n\r\nThat being said... Currently 4.8 have full focus, so you may ultimately be better of asking this on forums such as StackOverflow etc.\r\nIf there is a severe bottleneck in Lucene.NET 3.0.3 I very much doubt that the team will be addressing that problem at this point though, instead full focus is given to get the 4.8 version out and then likely point to that as a solution instead - Obviously if the problem can be replicated on Lucene.NET 4.8.0 then it will be addressed.\r\n\r\nBut posting your code and any other information you could think of that was relevant here and/or in a StackOverflow question could mean someone could point to something that is not done in a optimal way. As i said above, we have over 4 times the documents and a huge amount of fields, and I can't even get near what you describe even with the most evil queries I can imagine. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/688178992/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/690289515","html_url":"https://github.com/apache/lucenenet/issues/336#issuecomment-690289515","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/336","id":690289515,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MDI4OTUxNQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-10T13:29:16Z","updated_at":"2020-09-10T13:29:16Z","author_association":"CONTRIBUTOR","body":"4.8.0-beta00006 is more than a year old and has not been tested with .NET Core 3.1. Could you please confirm this problem exists in the latest version, 4.8.0-beta00011?\r\n\r\nThat being said, it seems unlikely that this problem can be caused by the released binaries unless you are using a really old version of NuGet to install them (thus getting the wrong target DLL in your project) or you are using the source code directly without the proper conditional compilation symbols. There is a conditional section to remove the `memoryMappedFileSecurity` parameter when using .NET Standard. For 4.8.0-beta00006, .NET Standard 2.0 would normally be the target that is installed when the consuming project targets .NET Standard 3.1 and you are using a recent version of NuGet to install it.\r\n\r\n```c#\r\n            if (input.memoryMappedFile == null)\r\n            {\r\n                input.memoryMappedFile = MemoryMappedFile.CreateFromFile(\r\n                    fileStream: fc, \r\n                    mapName: null, \r\n                    capacity: length, \r\n                    access: MemoryMappedFileAccess.Read,\r\n#if !NETSTANDARD\r\n                    memoryMappedFileSecurity: null,\r\n#endif\r\n                    inheritability: HandleInheritability.Inheritable, \r\n                    leaveOpen: true); // LUCENENET: We explicitly dispose the FileStream separately.\r\n            }\r\n```\r\n\r\nOf course, if compiling from source, this (unintuitively) means that you will need to use a `NETSTANDARD` compilation symbol to target .NET Core 3.1 directly, otherwise it will call the wrong overload.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/690289515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/692747950","html_url":"https://github.com/apache/lucenenet/pull/212#issuecomment-692747950","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/212","id":692747950,"node_id":"MDEyOklzc3VlQ29tbWVudDY5Mjc0Nzk1MA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-15T14:21:25Z","updated_at":"2020-09-15T14:21:25Z","author_association":"CONTRIBUTOR","body":"Thanks for the PR, but we decided to take another approach that removes the Java-style iterators entirely rather than simply wrapping them.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/692747950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/692757842","html_url":"https://github.com/apache/lucenenet/issues/279#issuecomment-692757842","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/279","id":692757842,"node_id":"MDEyOklzc3VlQ29tbWVudDY5Mjc1Nzg0Mg==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-15T14:36:39Z","updated_at":"2020-09-15T14:36:39Z","author_association":"CONTRIBUTOR","body":"This was partially addressed in #341. However, there are still a few iterators to convert, if sensible.\r\n\r\n1. `DocIdBitSetIterator` and all subclasses\r\n2. `CharacterIterator`\r\n3. `BreakIterator` and all subclasses","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/692757842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/693274279","html_url":"https://github.com/apache/lucenenet/issues/297#issuecomment-693274279","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/297","id":693274279,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzI3NDI3OQ==","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-16T09:01:42Z","updated_at":"2020-09-16T10:30:46Z","author_association":"CONTRIBUTOR","body":"I threw a very quick-n-dirty benchmark together just to get an early idea.\r\n\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.12.1, OS=Windows 10.0.18363.1016 (1909/November2018Update/19H2)\r\nIntel Core i7-6700 CPU 3.40GHz (Skylake), 1 CPU, 8 logical and 4 physical cores\r\n.NET Core SDK=5.0.100-preview.7.20366.15\r\n  [Host]     : .NET Core 3.1.6 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.31603), X64 RyuJIT\r\n  DefaultJob : .NET Core 3.1.6 (CoreCLR 4.700.20.26901, CoreFX 4.700.20.31603), X64 RyuJIT\r\n\r\n\r\n```\r\n|         Method |     Mean |    Error |   StdDev |\r\n|--------------- |---------:|---------:|---------:|\r\n| MathUtil_Acosh | 115.0 μs |  2.26 μs |  3.58 μs |\r\n|     Math_Acosh | 243.6 μs |  4.74 μs |  6.94 μs |\r\n| MathUtil_Asinh | 111.5 μs |  1.55 μs |  1.45 μs |\r\n|     Math_Asinh | 306.2 μs |  3.28 μs |  2.91 μs |\r\n|   MathUtil_Log | 139.7 μs |  2.79 μs |  4.42 μs |\r\n|       Math_Log | 180.5 μs |  2.39 μs |  1.99 μs |\r\n| MathUtil_Atanh | 649.9 μs | 10.32 μs |  8.06 μs |\r\n|     Math_Atanh | 519.9 μs | 10.33 μs | 11.48 μs |\r\n\r\nThere is quite a few things to sort out, like platformes etc. but just wanted to add the early indications.\r\nThis is the numbers for running the computation over 10.000 randomly selected doubles from 0 to ~int.max...\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/693274279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/693387353","html_url":"https://github.com/apache/lucenenet/issues/297#issuecomment-693387353","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/297","id":693387353,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzM4NzM1Mw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-16T12:58:15Z","updated_at":"2020-09-16T12:58:15Z","author_association":"CONTRIBUTOR","body":"@jeme \r\n\r\nThanks for the info. These results are similar to the benchmark that I did earlier. I find the results a bit surprising since Microsoft implemented these functions in C++, but apparently ours are more efficient except for `Atanh`.\r\n\r\nWhen I posted this task, I was working under the assumption that these methods were being used by other Lucene.NET components, thus having a potential impact on performance. But according to code lens, the only methods that are referenced (other than in tests) are `Log(long, int)` and `Gcd(long, long)`, neither of which have a counterpart in .NET. \r\n\r\n`Gcd(long, long)` is the only one that actually has an impact in the latest codecs and it has already been modified to use J2N's version of `TrailingZeroCount()` which will call the hardware intrinsic method on .NET Core 3.x and Windows if we add a .NET Core 3.x target framework to Lucene.NET.\r\n\r\nThat being said, since there doesn't appear to be anything impactful we can improve on `MathUtil` itself, we should focus our optimization efforts elsewhere.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/693387353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/693447089","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-693447089","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":693447089,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzQ0NzA4OQ==","user":{"login":"epDugas","id":54030313,"node_id":"MDQ6VXNlcjU0MDMwMzEz","avatar_url":"https://avatars.githubusercontent.com/u/54030313?v=4","gravatar_id":"","url":"https://api.github.com/users/epDugas","html_url":"https://github.com/epDugas","followers_url":"https://api.github.com/users/epDugas/followers","following_url":"https://api.github.com/users/epDugas/following{/other_user}","gists_url":"https://api.github.com/users/epDugas/gists{/gist_id}","starred_url":"https://api.github.com/users/epDugas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epDugas/subscriptions","organizations_url":"https://api.github.com/users/epDugas/orgs","repos_url":"https://api.github.com/users/epDugas/repos","events_url":"https://api.github.com/users/epDugas/events{/privacy}","received_events_url":"https://api.github.com/users/epDugas/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-16T14:33:54Z","updated_at":"2020-09-16T20:50:12Z","author_association":"NONE","body":"If it helps any:\r\nI get same exception, with same StackTrace, when using WildcardQuery on a particular StringField (the field contains a string of ints). If I wrap the WildcardQuery in a single item BooleanQuery, I do not experience the issue. This seems to happen when I add a StringField that is the Reverse of another. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/693447089/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/693725221","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-693725221","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":693725221,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzcyNTIyMQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-16T23:49:50Z","updated_at":"2020-09-16T23:49:50Z","author_association":"CONTRIBUTOR","body":"Could someone please provide a minimal example I can run? Even with the descriptions here, there is not enough info to piece together both the code and the data to reproduce this without research and trial and err. There is probably a test that is similar enough to what you are doing in [`TestWildcard`](https://github.com/apache/lucenenet/blob/fc2da940da3ca32c2fe6ae9caf69f36b69f3de7f/src/Lucene.Net.Tests/Search/TestWildcard.cs) to use as a starting point, just modify it accordingly and post it here so we can run it. If you need to, use the `[Repeat]` attribute to run it multiple times to force a failure.\r\n\r\nAlso, what platform is this happening on and is this x86 or x64?\r\n\r\nNote there are now [8 known failing tests](https://github.com/apache/lucenenet/issues/269) on .NET Framework under x86 in 4.8.0-beta00011 and prior, several of which relate to `FuzzyTermsEnum` and `TopTermsRewrite`. These test failures go away with optimizations disabled, indicating they are likely JIT optimization bugs of some kind. Even in 4.8.0-beta00012 there are still 4 tests failing, and it will be difficult to pin these down because the failures are not happening in debug mode. These tests do not fail on .NET Core/x86 or on .NET Framework/x64.\r\n\r\n4.8.0-beta00012 can be downloaded at https://dist.apache.org/repos/dist/dev/lucenenet/ (it is currently pending the [release vote](https://lucenenet.apache.org/contributing/make-release.html), which takes 72 hours). Could someone please confirm this problem still exists on 4.8.0-beta00012?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/693725221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/695834160","html_url":"https://github.com/apache/lucenenet/issues/343#issuecomment-695834160","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/343","id":695834160,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NTgzNDE2MA==","user":{"login":"TheBeardedLlama","id":1180470,"node_id":"MDQ6VXNlcjExODA0NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1180470?v=4","gravatar_id":"","url":"https://api.github.com/users/TheBeardedLlama","html_url":"https://github.com/TheBeardedLlama","followers_url":"https://api.github.com/users/TheBeardedLlama/followers","following_url":"https://api.github.com/users/TheBeardedLlama/following{/other_user}","gists_url":"https://api.github.com/users/TheBeardedLlama/gists{/gist_id}","starred_url":"https://api.github.com/users/TheBeardedLlama/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TheBeardedLlama/subscriptions","organizations_url":"https://api.github.com/users/TheBeardedLlama/orgs","repos_url":"https://api.github.com/users/TheBeardedLlama/repos","events_url":"https://api.github.com/users/TheBeardedLlama/events{/privacy}","received_events_url":"https://api.github.com/users/TheBeardedLlama/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-20T20:45:12Z","updated_at":"2020-09-20T20:45:12Z","author_association":"NONE","body":"probably mistake in the packaging of the most recent release\r\n\r\nshould be easy to resolve with a quick PR","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/695834160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/695835126","html_url":"https://github.com/apache/lucenenet/issues/343#issuecomment-695835126","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/343","id":695835126,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NTgzNTEyNg==","user":{"login":"nazjunaid","id":162324,"node_id":"MDQ6VXNlcjE2MjMyNA==","avatar_url":"https://avatars.githubusercontent.com/u/162324?v=4","gravatar_id":"","url":"https://api.github.com/users/nazjunaid","html_url":"https://github.com/nazjunaid","followers_url":"https://api.github.com/users/nazjunaid/followers","following_url":"https://api.github.com/users/nazjunaid/following{/other_user}","gists_url":"https://api.github.com/users/nazjunaid/gists{/gist_id}","starred_url":"https://api.github.com/users/nazjunaid/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nazjunaid/subscriptions","organizations_url":"https://api.github.com/users/nazjunaid/orgs","repos_url":"https://api.github.com/users/nazjunaid/repos","events_url":"https://api.github.com/users/nazjunaid/events{/privacy}","received_events_url":"https://api.github.com/users/nazjunaid/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-20T20:54:02Z","updated_at":"2020-09-20T20:54:02Z","author_association":"CONTRIBUTOR","body":"Just had a dig around looks like it's coming from J2N\r\n\r\nhttps://github.com/NightOwl888/J2N/blob/ee502ac09b9ea6b84ff36c2778665991cfe612ac/build/nuget.props","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/695835126/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/695836426","html_url":"https://github.com/apache/lucenenet/issues/343#issuecomment-695836426","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/343","id":695836426,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NTgzNjQyNg==","user":{"login":"TheBeardedLlama","id":1180470,"node_id":"MDQ6VXNlcjExODA0NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1180470?v=4","gravatar_id":"","url":"https://api.github.com/users/TheBeardedLlama","html_url":"https://github.com/TheBeardedLlama","followers_url":"https://api.github.com/users/TheBeardedLlama/followers","following_url":"https://api.github.com/users/TheBeardedLlama/following{/other_user}","gists_url":"https://api.github.com/users/TheBeardedLlama/gists{/gist_id}","starred_url":"https://api.github.com/users/TheBeardedLlama/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TheBeardedLlama/subscriptions","organizations_url":"https://api.github.com/users/TheBeardedLlama/orgs","repos_url":"https://api.github.com/users/TheBeardedLlama/repos","events_url":"https://api.github.com/users/TheBeardedLlama/events{/privacy}","received_events_url":"https://api.github.com/users/TheBeardedLlama/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-20T21:06:12Z","updated_at":"2020-09-20T21:06:12Z","author_association":"NONE","body":"ah yeah\r\n\r\nconsidering they're in beta, they could easily do a new release removing those I guess","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/695836426/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696139096","html_url":"https://github.com/apache/lucenenet/issues/343#issuecomment-696139096","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/343","id":696139096,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjEzOTA5Ng==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-21T14:09:38Z","updated_at":"2020-09-21T14:09:38Z","author_association":"CONTRIBUTOR","body":"This has now been addressed in\r\n\r\n* [J2N v2.0.0-beta-0010](https://github.com/NightOwl888/J2N/releases/tag/v2.0.0-beta-0010)\r\n* [ICU4N v60.1.0-alpha.353](https://github.com/NightOwl888/ICU4N/releases/tag/v60.1.0-alpha.353)\r\n\r\nTo target Lucene.Net 4.8.0-beta00012 or lower, you will need to install\r\n\r\n* [J2N v2.0.0-beta-0010](https://github.com/NightOwl888/J2N/releases/tag/v2.0.0-beta-0010) prior to installing Lucene.Net (or any assembly that depends on it)\r\n* [ICU4N v60.1.0-alpha.353](https://github.com/NightOwl888/ICU4N/releases/tag/v60.1.0-alpha.353) prior to installing Lucene.Net.ICU (or any assembly that depends on it)\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696139096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696156234","html_url":"https://github.com/apache/lucenenet/issues/336#issuecomment-696156234","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/336","id":696156234,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjE1NjIzNA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-21T14:34:18Z","updated_at":"2020-09-21T14:34:18Z","author_association":"CONTRIBUTOR","body":"We've updated the compilation symbols so they don't depend directly on the target framework:\r\n\r\n```c#\r\n            if (input.memoryMappedFile == null)\r\n            {\r\n                input.memoryMappedFile = MemoryMappedFile.CreateFromFile(\r\n                    fileStream: fc, \r\n                    mapName: null, \r\n                    capacity: length, \r\n                    access: MemoryMappedFileAccess.Read,\r\n#if FEATURE_MEMORYMAPPEDFILESECURITY\r\n                    memoryMappedFileSecurity: null,\r\n#endif\r\n                    inheritability: HandleInheritability.Inheritable, \r\n                    leaveOpen: true); // LUCENENET: We explicitly dispose the FileStream separately.\r\n            }\r\n```\r\n\r\nThis makes the default disable the `memoryMappedFileSecurity` parameter unless the `FEATURE_MEMORYMAPPEDFILESECURITY` compilation symbol is added. The [Directory.Build.targets](https://github.com/apache/lucenenet/blob/b2f737de07242869819054642081337812488903/Directory.Build.targets) file maps the target framework to features for the entire solution.\r\n\r\nThere really doesn't seem to be any more to do here, so I am closing this issue.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696156234/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696157947","html_url":"https://github.com/apache/lucenenet/issues/248#issuecomment-696157947","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/248","id":696157947,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjE1Nzk0Nw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-21T14:37:14Z","updated_at":"2020-09-21T14:37:14Z","author_association":"CONTRIBUTOR","body":"Closing as duplicate of #255 (which was added to JIRA prior to this issue).","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696157947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696300662","html_url":"https://github.com/apache/lucenenet/issues/296#issuecomment-696300662","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/296","id":696300662,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjMwMDY2Mg==","user":{"login":"epDugas","id":54030313,"node_id":"MDQ6VXNlcjU0MDMwMzEz","avatar_url":"https://avatars.githubusercontent.com/u/54030313?v=4","gravatar_id":"","url":"https://api.github.com/users/epDugas","html_url":"https://github.com/epDugas","followers_url":"https://api.github.com/users/epDugas/followers","following_url":"https://api.github.com/users/epDugas/following{/other_user}","gists_url":"https://api.github.com/users/epDugas/gists{/gist_id}","starred_url":"https://api.github.com/users/epDugas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epDugas/subscriptions","organizations_url":"https://api.github.com/users/epDugas/orgs","repos_url":"https://api.github.com/users/epDugas/repos","events_url":"https://api.github.com/users/epDugas/events{/privacy}","received_events_url":"https://api.github.com/users/epDugas/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-21T18:46:48Z","updated_at":"2020-09-21T19:23:43Z","author_association":"NONE","body":"Platform = x64.\r\nBuild = 4.8.0-beta00012\r\nExample (Note: before adding reversed fields, the issue does not present itself):\r\n\r\nAnalyzer: KeywordAnalyzer\r\n\r\nField Definitions:\r\nnew StringField(\"Address\", string.Empty, Field.Store.YES)\r\nnew StringField(\"Address\" + \"_Reversed, string.Empty, Field.Store.YES)\r\nnew StringField(\"Zip\", string.Empty, Field.Store.YES)\r\nnew StringField(\"Zip\" + \"_Reversed\", string.Empty, Field.Store.YES)\r\n\r\nQuery:\r\nvar query = new BooleanQuery\r\n {\r\n  { new WildcardQuery(new Term(\"Address\", \"*hwy*\")), Occur.MUST },\r\n  { new WildcardQuery(new Term(\"Zip\", \"*06*\")), Occur.MUST },\r\n  };\r\n\r\nindexSearcher.Search(query, 10)\r\n\r\nNOTE: If I name the \"reversed\" columns \"_Reversed\" + Name, the issue goes away.\r\n\r\nI apologize, I don't have the data to reproduce the exception any longer, as I rebuilt the index with a different name for the reversed columns, and the issue seems to have gone away, and to rebuild with the field names that were problematic takes a long time...","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696300662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696558106","html_url":"https://github.com/apache/lucenenet/pull/344#issuecomment-696558106","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/344","id":696558106,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjU1ODEwNg==","user":{"login":"theolivenbaum","id":8791811,"node_id":"MDQ6VXNlcjg3OTE4MTE=","avatar_url":"https://avatars.githubusercontent.com/u/8791811?v=4","gravatar_id":"","url":"https://api.github.com/users/theolivenbaum","html_url":"https://github.com/theolivenbaum","followers_url":"https://api.github.com/users/theolivenbaum/followers","following_url":"https://api.github.com/users/theolivenbaum/following{/other_user}","gists_url":"https://api.github.com/users/theolivenbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/theolivenbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theolivenbaum/subscriptions","organizations_url":"https://api.github.com/users/theolivenbaum/orgs","repos_url":"https://api.github.com/users/theolivenbaum/repos","events_url":"https://api.github.com/users/theolivenbaum/events{/privacy}","received_events_url":"https://api.github.com/users/theolivenbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T07:34:36Z","updated_at":"2020-09-22T07:34:36Z","author_association":"CONTRIBUTOR","body":"Hi @NightOwl888 , good point regarding the comments, will keep it in mind for future commits!\r\n\r\nOne thing that comes to mind, what's the official goal reg. version parity with the Java Lucene source-code? Besides keeping binary compatibility with 4.8, is the goal to evolve exactly as in the original source-code / binary protocol, or is LuceneNet planning to diverge from it? Just to understand what kind of code changes could be introduced here :)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696558106/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696585044","html_url":"https://github.com/apache/lucenenet/pull/344#issuecomment-696585044","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/344","id":696585044,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjU4NTA0NA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T08:35:35Z","updated_at":"2020-09-22T08:35:35Z","author_association":"CONTRIBUTOR","body":"> One thing that comes to mind, what's the official goal reg. version parity with the Java Lucene source-code? Besides keeping binary compatibility with 4.8, is the goal to evolve exactly as in the original source-code / binary protocol, or is LuceneNet planning to diverge from it? Just to understand what kind of code changes could be introduced here :)\r\n\r\nOur goal is to keep enough parity with Java so when it comes time to upgrade we can usually map a type and its members in Java to its counterpart in .NET. We try to separate what is essentially the application design from the language features of Java. In general, we don't want to diverge too much from the original design unless it is to use a .NET convention instead of a Java convention, some examples:\r\n\r\n* Converting Java iterators to .NET enumerators\r\n* Naming conventions (Java `.size()` to .NET `Count`, for example)\r\n* Java uses `begin` and exclusive `end` index, .NET uses `startIndex`, `length`\r\n* Java tends to nest public types inside of each other and in .NET public types are in namespaces (except in collections)\r\n* Java tends to use abstract classes and leverage the language feature of anonymous classes to implement methods inline, in .NET it is generally better to make constructors with delegate parameters to pass the method implementations and not make the class abstract\r\n\r\nSo in general, a type in .NET should represent a similar type in Java with a similar name and similar purpose. As long as the type has similar members and has the same purpose it did in Java, we can modify its internal workings to make it more efficient, if needed.\r\n\r\nThat being said, if a part of the public API design is inefficient in .NET, doesn't follow a common .NET practice, or can be adapted to make it more usable (such as enabling LINQ support or type initialization support), it warrants further discussion. For the time being, we hold development discussions on the [dev mailing list](https://lucenenet.apache.org/contributing/index.html#start-a-discussion).\r\n\r\nBTW - It appears that the `Cache` type only needed to be non-generic to make it fit into the collection so it can be enumerated over. I am in the process of changing it now, but we can now remove a lot of casting and [some boxing/unboxing](https://github.com/apache/lucenenet/blob/de5251c848b79223d394778cbb17ffc1388877ba/src/Lucene.Net/Search/FieldCacheImpl.cs#L1773) from `FieldCacheImpl` by making `Cache` generic and getting rid of the loops that iterate over the fields and just call the individual member variables directly.\r\n\r\nSpeaking of which, if you find any other places where boxing/unboxing is a problem, please open an issue and/or submit a PR to fix it. We ended up with some boxing and quite a bit of extra casting when converting from Java, and it is worth a look to see if we can remove it and still have all of the tests pass, if possible.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696585044/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696722983","html_url":"https://github.com/apache/lucenenet/pull/345#issuecomment-696722983","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/345","id":696722983,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjcyMjk4Mw==","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T13:30:21Z","updated_at":"2020-09-22T13:30:21Z","author_association":"CONTRIBUTOR","body":"Great PR! I'm happy with all changes except the pattern a is object instead a != null.\r\n!= null is more readable for me, but its a matter of personal preferences.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696722983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696762466","html_url":"https://github.com/apache/lucenenet/issues/346#issuecomment-696762466","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/346","id":696762466,"node_id":"MDEyOklzc3VlQ29tbWVudDY5Njc2MjQ2Ng==","user":{"login":"theolivenbaum","id":8791811,"node_id":"MDQ6VXNlcjg3OTE4MTE=","avatar_url":"https://avatars.githubusercontent.com/u/8791811?v=4","gravatar_id":"","url":"https://api.github.com/users/theolivenbaum","html_url":"https://github.com/theolivenbaum","followers_url":"https://api.github.com/users/theolivenbaum/followers","following_url":"https://api.github.com/users/theolivenbaum/following{/other_user}","gists_url":"https://api.github.com/users/theolivenbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/theolivenbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theolivenbaum/subscriptions","organizations_url":"https://api.github.com/users/theolivenbaum/orgs","repos_url":"https://api.github.com/users/theolivenbaum/repos","events_url":"https://api.github.com/users/theolivenbaum/events{/privacy}","received_events_url":"https://api.github.com/users/theolivenbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T14:34:23Z","updated_at":"2020-09-22T14:34:23Z","author_association":"CONTRIBUTOR","body":"Changed here: https://github.com/apache/lucenenet/pull/345/commits/be2e7bdf01d335530c0a38a7ae230e307b383c3c\r\nBut happy to port it to a separate PR in case that one has too much for reviewing :)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696762466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696764142","html_url":"https://github.com/apache/lucenenet/issues/346#issuecomment-696764142","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/346","id":696764142,"node_id":"MDEyOklzc3VlQ29tbWVudDY5Njc2NDE0Mg==","user":{"login":"theolivenbaum","id":8791811,"node_id":"MDQ6VXNlcjg3OTE4MTE=","avatar_url":"https://avatars.githubusercontent.com/u/8791811?v=4","gravatar_id":"","url":"https://api.github.com/users/theolivenbaum","html_url":"https://github.com/theolivenbaum","followers_url":"https://api.github.com/users/theolivenbaum/followers","following_url":"https://api.github.com/users/theolivenbaum/following{/other_user}","gists_url":"https://api.github.com/users/theolivenbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/theolivenbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theolivenbaum/subscriptions","organizations_url":"https://api.github.com/users/theolivenbaum/orgs","repos_url":"https://api.github.com/users/theolivenbaum/repos","events_url":"https://api.github.com/users/theolivenbaum/events{/privacy}","received_events_url":"https://api.github.com/users/theolivenbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T14:37:04Z","updated_at":"2020-09-22T14:37:04Z","author_association":"CONTRIBUTOR","body":"Changing to a Lazy variable improves it but still quite heavy for that - would be better to fully remove from there, any thoughts @NightOwl888 ?\r\n\r\n![image](https://user-images.githubusercontent.com/8791811/93896926-cc1d1f80-fcf1-11ea-97e9-dd801d354053.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696764142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696769684","html_url":"https://github.com/apache/lucenenet/issues/346#issuecomment-696769684","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/346","id":696769684,"node_id":"MDEyOklzc3VlQ29tbWVudDY5Njc2OTY4NA==","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T14:46:04Z","updated_at":"2020-09-22T14:46:04Z","author_association":"CONTRIBUTOR","body":"this seems expensive, \r\nI would do this all assertion in conditional compilation debug flag.\r\n\r\n@NightOwl888, any reason its not in compilation flag? \r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696769684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696770379","html_url":"https://github.com/apache/lucenenet/pull/345#issuecomment-696770379","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/345","id":696770379,"node_id":"MDEyOklzc3VlQ29tbWVudDY5Njc3MDM3OQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T14:47:14Z","updated_at":"2020-09-22T14:47:14Z","author_association":"CONTRIBUTOR","body":"> change (a != null && a is MyClass) to a is MyClass mc\r\n\r\nCareful, although VS2019 tries to get you to do this, I am fairly certain it reduces performance (need some benchmarks to verify). The optimizations in Lucene are verbose, but they are often more performant than the shorter syntax. I saw at least 1 place where the check for null first before the check for the cast had a major impact on performance. \r\n\r\nAlso, if there are many cases where the cast `a is MyClass mc` will not pass, we are throwing away an extra variable declaration that wouldn't be needed if it were inside of the `if` block. Ideally, we would not allocate memory unless absolutely necessary.\r\n\r\nThat said, `is null` instead of `== null` doesn't have a huge performance impact and is more robust because it circumvents any `==` operator overload.\r\n\r\n> Also changed a few fields to read-only, and one regex variable to static as suggested by the analyzer too.\r\n\r\nUsually this is the correct decision. Look out for `readonly` on `struct`, though - I have seen it have a seriously negative impact on performance. Do note that Java doesn't have structs, so we should also be looking for opportunities for them to improve performance.\r\n\r\n> Regarding your previous comment, do you think this kind of changes needs the \"LUCENENET\" comments you mentioned?\r\n\r\nIn general, if the change is due to a syntax or platform difference between .NET and Java, the comment isn't strictly necessary. If the change actually reflects a change to Lucene's design, then it should definitely be commented.\r\n\r\n> By the way, is there any docs or quick start on running the tests locally? And are the tests run automatically on PR, or manually? Just to know if I should bother trying to set it up locally, or easier to let them run and just check the results...\r\n\r\nThe best way (although it takes longer) is to run it on Azure DevOps. You can set it up on any free Azure DevOps account by following the instructions on the [README](https://github.com/apache/lucenenet/blob/master/README.md#building-and-testing).\r\n\r\nDue to permission issues, we cannot enable Azure DevOps to run on PRs, so they should be run first before you submit the PR and we will run them again several times before approving it.\r\n\r\nCareful, we don't usually want to make broad sweeping changes like this without thorough testing, otherwise it could take days to figure out why some of the tests don't pass. The tests depend directly on the asserts, so already this could lead to problems if it is not fully verified.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696770379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696779612","html_url":"https://github.com/apache/lucenenet/issues/346#issuecomment-696779612","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/346","id":696779612,"node_id":"MDEyOklzc3VlQ29tbWVudDY5Njc3OTYxMg==","user":{"login":"theolivenbaum","id":8791811,"node_id":"MDQ6VXNlcjg3OTE4MTE=","avatar_url":"https://avatars.githubusercontent.com/u/8791811?v=4","gravatar_id":"","url":"https://api.github.com/users/theolivenbaum","html_url":"https://github.com/theolivenbaum","followers_url":"https://api.github.com/users/theolivenbaum/followers","following_url":"https://api.github.com/users/theolivenbaum/following{/other_user}","gists_url":"https://api.github.com/users/theolivenbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/theolivenbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theolivenbaum/subscriptions","organizations_url":"https://api.github.com/users/theolivenbaum/orgs","repos_url":"https://api.github.com/users/theolivenbaum/repos","events_url":"https://api.github.com/users/theolivenbaum/events{/privacy}","received_events_url":"https://api.github.com/users/theolivenbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T15:01:34Z","updated_at":"2020-09-22T15:01:34Z","author_association":"CONTRIBUTOR","body":"The only place I saw this being set so far is under Lucene.Net.Index.CheckIndex, so I added a conditional compilation there too:\r\n\r\nhttps://github.com/apache/lucenenet/pull/345/commits/5a14eaaf8190d81755f48981552ebe16ee046b80#diff-3f750f45c88050fc4fbd6a09ee4c638cR54\r\n\r\nBut I have unloaded some projects (VS was too slow with everything loaded), so might be missing something...\r\nIn any case, unless there is a need for this as a settable value in release mode, probably good to remove it","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696779612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696780561","html_url":"https://github.com/apache/lucenenet/issues/346#issuecomment-696780561","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/346","id":696780561,"node_id":"MDEyOklzc3VlQ29tbWVudDY5Njc4MDU2MQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T15:03:13Z","updated_at":"2020-09-22T15:04:20Z","author_association":"CONTRIBUTOR","body":"See #326 for an explanation of this. We need this feature for the tests to work right in Release mode and for other features, such as CheckIndex  to work properly.\r\n\r\nThe designers of Lucene decided to make the asserts into *test conditions*, so without them we are literally skipping tests.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696780561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696811978","html_url":"https://github.com/apache/lucenenet/pull/345#issuecomment-696811978","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/345","id":696811978,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjgxMTk3OA==","user":{"login":"theolivenbaum","id":8791811,"node_id":"MDQ6VXNlcjg3OTE4MTE=","avatar_url":"https://avatars.githubusercontent.com/u/8791811?v=4","gravatar_id":"","url":"https://api.github.com/users/theolivenbaum","html_url":"https://github.com/theolivenbaum","followers_url":"https://api.github.com/users/theolivenbaum/followers","following_url":"https://api.github.com/users/theolivenbaum/following{/other_user}","gists_url":"https://api.github.com/users/theolivenbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/theolivenbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theolivenbaum/subscriptions","organizations_url":"https://api.github.com/users/theolivenbaum/orgs","repos_url":"https://api.github.com/users/theolivenbaum/repos","events_url":"https://api.github.com/users/theolivenbaum/events{/privacy}","received_events_url":"https://api.github.com/users/theolivenbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T15:55:09Z","updated_at":"2020-09-22T15:55:09Z","author_association":"CONTRIBUTOR","body":"@eladmarg : I also find it more readable (looking forward for the `is not null` from C#9, but is object I avoids having to call the the equality operator.\r\n\r\n@NightOwl888 interesting point... From looking on the generated ASM:\r\n\r\nhttps://sharplab.io/#v2:C4LghgzgtgPgAgJgIwFgBQ64GYAEBLAO2AFMAnAMzAGNicBJAWQE86izKacBvAX3U1yIczAMIAbSBBwh6zViQrVaXHHwzrsOOEgBsWhDgAqxCMG7oclnBaubteuABYcAQQAUjFm0WcqASnM0K2D8cjcqHABCAF4cAgBXMTEcADIUnAi8KVEJCCkqf0CQ4q0kAE43ACIACzJiSr8AbhtitWC2qxatQV0tZwAhDzlvDlpCri7gvDCImLjEsQCJoJLggDcwUhwoMCYAI1pYiMhhJnFJZpXVy2m3Hf3aOYSkv2Xrku0KmrqGy/fLDqtLqA6xXbqlBzOERDLwKUYZJaTKy3TLZM65fJUBCIsGrT5VWqkepNJEA4HoHhAA\r\n\r\nThe `is MyClass c` produces a smaller code (which could be better for inlining the function), but I agree it could be a problem if the method is called often with the case where the cast is mostly false and it would be better to have it fail.\r\n\r\nIs it possible to run the benchmark on this PR to see if there is any measurable impact?\r\n\r\n@NightOwl888  For the readonly vs structs: had that issue before on our code-base as well :) \r\nIt also seems like there are plenty of opportunities to reduce allocations by using structs, will check next week when I've some time again if I notice anything on our own usage of Lucene.NET.\r\n\r\nI'll take a look on the readme - somehow I missed that when I first glanced through it... As we also use Azure Devops, should be fine to configure it on our account there!\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696811978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696835930","html_url":"https://github.com/apache/lucenenet/pull/345#issuecomment-696835930","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/345","id":696835930,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjgzNTkzMA==","user":{"login":"theolivenbaum","id":8791811,"node_id":"MDQ6VXNlcjg3OTE4MTE=","avatar_url":"https://avatars.githubusercontent.com/u/8791811?v=4","gravatar_id":"","url":"https://api.github.com/users/theolivenbaum","html_url":"https://github.com/theolivenbaum","followers_url":"https://api.github.com/users/theolivenbaum/followers","following_url":"https://api.github.com/users/theolivenbaum/following{/other_user}","gists_url":"https://api.github.com/users/theolivenbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/theolivenbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theolivenbaum/subscriptions","organizations_url":"https://api.github.com/users/theolivenbaum/orgs","repos_url":"https://api.github.com/users/theolivenbaum/repos","events_url":"https://api.github.com/users/theolivenbaum/events{/privacy}","received_events_url":"https://api.github.com/users/theolivenbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T16:31:53Z","updated_at":"2020-09-22T16:31:53Z","author_association":"CONTRIBUTOR","body":"@NightOwl888 just checking on [sharplab again](https://sharplab.io/#v2:C4LghgzgtgPgAgJgIwFgBQ64GYAEBLAO2AFMAnAMzAGNicBJAWQE86izKacBvAX3U1yIczAMIAbSBBwh6zViQrVaXHHwzrsOOEgBsWhDgAqxCMG7oclnBaubteuABYcAQQAUjFm0WcqASnM0K2D8cjcqHABCAF4cAgBXMTEcADIUnAi8KVEJCCkqf0CQ4q0kAE5wqgA6AHFiYEMmAAdiNz8/AG4bYrVg3qturUFdLWcAIQ85bw5aQq5B4LwwiJi4xLEA+aCS4IA3MFIcKDAmACNaWIjIYSZxSS7tncslt2Oz2lWEpL8tp5LtCpvc61eqNFptToLEr9HqDGHWR5DUoOZwiSZeBQzDKbKHPZb4bK3XL5KgIHGInYAyoIEENZqtdoPHbwnjBQaDOwjJw4AAi6Pk7CU2KKJRemSkAHtTgArYhUMxpDIEm53PIZUnkv6WKkFGl1Ongxm41Rw9A8IA). It seems both these options produce the exact same IL/ASM:\r\n\r\n```\r\n    public static void A(IMyInterface c) {\r\n        if(c != null && c is MyClass cc) {\r\n            Console.WriteLine(cc.GetType());\r\n        }\r\n    }\r\n```\r\n\r\n```\r\n    public static void D(IMyInterface c) {\r\n        if(c is object && c is MyClass cc2) {\r\n            Console.WriteLine(cc2.GetType());\r\n        }\r\n    }\r\n```\r\n\r\nDo you prefer I undo the pattern matching changes, or add the extra `is object` to them so moving forward you also don't get the warning on VS?\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696835930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696844345","html_url":"https://github.com/apache/lucenenet/pull/345#issuecomment-696844345","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/345","id":696844345,"node_id":"MDEyOklzc3VlQ29tbWVudDY5Njg0NDM0NQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T16:47:41Z","updated_at":"2020-09-22T16:47:41Z","author_association":"CONTRIBUTOR","body":"Interesting. I suspect they wouldn't produce the same IL if the type in the comparison had the `!=` operator overloaded - then it may produce very different results, and in fact depending on the implementation it might not produce expected results. `is` is safer because it doesn't take the operator overloads into account.\r\n\r\nThat said, I am on board with elad in that using `== object` is not very intuitive for a `null` check. I prefer:\r\n\r\n```c#\r\n    public static void A(IMyInterface c) {\r\n        if(!(c is null) && c is MyClass cc) {\r\n            Console.WriteLine(cc.GetType());\r\n        }\r\n    }\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696844345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696850081","html_url":"https://github.com/apache/lucenenet/pull/345#issuecomment-696850081","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/345","id":696850081,"node_id":"MDEyOklzc3VlQ29tbWVudDY5Njg1MDA4MQ==","user":{"login":"theolivenbaum","id":8791811,"node_id":"MDQ6VXNlcjg3OTE4MTE=","avatar_url":"https://avatars.githubusercontent.com/u/8791811?v=4","gravatar_id":"","url":"https://api.github.com/users/theolivenbaum","html_url":"https://github.com/theolivenbaum","followers_url":"https://api.github.com/users/theolivenbaum/followers","following_url":"https://api.github.com/users/theolivenbaum/following{/other_user}","gists_url":"https://api.github.com/users/theolivenbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/theolivenbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theolivenbaum/subscriptions","organizations_url":"https://api.github.com/users/theolivenbaum/orgs","repos_url":"https://api.github.com/users/theolivenbaum/repos","events_url":"https://api.github.com/users/theolivenbaum/events{/privacy}","received_events_url":"https://api.github.com/users/theolivenbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T16:58:30Z","updated_at":"2020-09-22T16:58:30Z","author_association":"CONTRIBUTOR","body":"@NightOwl888 yeah for sure different IL for the != case, but I did check if any operator overloads would cause issues with the changes.\r\n\r\nMy only minor issue with the `!(c is null)` option is that when the `is not null` finally becomes available, it will be harder to do a replace all :) \r\nBut happy to change to the `!(c is null)` case for now","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/696850081/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]