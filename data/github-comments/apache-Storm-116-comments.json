[{"url":"https://api.github.com/repos/apache/storm/issues/comments/145631129","html_url":"https://github.com/apache/storm/pull/766#issuecomment-145631129","issue_url":"https://api.github.com/repos/apache/storm/issues/766","id":145631129,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTYzMTEyOQ==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T18:54:45Z","updated_at":"2015-10-05T18:54:45Z","author_association":"CONTRIBUTOR","body":"Thanks @Parth-Brahmbhatt @revans2. I upmerged against master. It is ready to merge now.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/145631129/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612478628","html_url":"https://github.com/apache/storm/issues/4254#issuecomment-2612478628","issue_url":"https://api.github.com/repos/apache/storm/issues/4254","id":2612478628,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0Nzg2Mjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T18:54:46Z","updated_at":"2025-01-24T13:00:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/766#issuecomment-145631129\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/766#issuecomment-145631129</a></p>\n\n<p>    Thanks @Parth-Brahmbhatt @revans2. I upmerged against master. It is ready to merge now.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612478628/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/145632654","html_url":"https://github.com/apache/storm/pull/554#issuecomment-145632654","issue_url":"https://api.github.com/repos/apache/storm/issues/554","id":145632654,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTYzMjY1NA==","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T19:01:03Z","updated_at":"2015-10-05T19:01:03Z","author_association":"NONE","body":"ok working on it\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/145632654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612546896","html_url":"https://github.com/apache/storm/issues/4661#issuecomment-2612546896","issue_url":"https://api.github.com/repos/apache/storm/issues/4661","id":2612546896,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NDY4OTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T19:01:04Z","updated_at":"2025-01-24T13:35:18Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/554#issuecomment-145632654\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/554#issuecomment-145632654</a></p>\n\n<p>    ok working on it</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612546896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/145635463","html_url":"https://github.com/apache/storm/pull/766#issuecomment-145635463","issue_url":"https://api.github.com/repos/apache/storm/issues/766","id":145635463,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTYzNTQ2Mw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T19:12:56Z","updated_at":"2015-10-05T19:12:56Z","author_association":"CONTRIBUTOR","body":"Still +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/145635463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612478634","html_url":"https://github.com/apache/storm/issues/4254#issuecomment-2612478634","issue_url":"https://api.github.com/repos/apache/storm/issues/4254","id":2612478634,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0Nzg2MzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T19:12:57Z","updated_at":"2025-01-24T13:00:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/766#issuecomment-145635463\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/766#issuecomment-145635463</a></p>\n\n<p>    Still +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612478634/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612594975","html_url":"https://github.com/apache/storm/issues/4853#issuecomment-2612594975","issue_url":"https://api.github.com/repos/apache/storm/issues/4853","id":2612594975,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTQ5NzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T19:20:03Z","updated_at":"2025-01-24T13:58:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user choang commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/705#discussion_r41185141\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/705#discussion_r41185141</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/README.md &#8212;<br/>\n    @@ -86,7 +93,7 @@ The KafkaConfig class also has bunch of public variables that controls your appl<br/>\n public int fetchMaxWait = 10000;<br/>\n public int bufferSizeBytes = 1024 * 1024;<br/>\n public MultiScheme scheme = new RawMultiScheme();</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>public boolean ignoreZkOffsets = false;<br/>\n    +    public boolean ignoreStoredOffsets = false;\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    is there a mechanism/section in the release notes to call out this change?  changing this var name would break existing code.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612594975/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612478639","html_url":"https://github.com/apache/storm/issues/4254#issuecomment-2612478639","issue_url":"https://api.github.com/repos/apache/storm/issues/4254","id":2612478639,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0Nzg2Mzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T19:22:44Z","updated_at":"2025-01-24T13:00:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/766\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/766</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612478639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612594976","html_url":"https://github.com/apache/storm/issues/4853#issuecomment-2612594976","issue_url":"https://api.github.com/repos/apache/storm/issues/4853","id":2612594976,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTQ5NzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T19:23:52Z","updated_at":"2025-01-24T13:58:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user choang commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/705#discussion_r41185586\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/705#discussion_r41185586</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/src/jvm/storm/kafka/KafkaDataStore.java &#8212;<br/>\n    @@ -0,0 +1,219 @@<br/>\n    +package storm.kafka;<br/>\n    +<br/>\n    +import com.google.common.collect.Maps;<br/>\n    +import kafka.api.ConsumerMetadataRequest;<br/>\n    +import kafka.common.ErrorMapping;<br/>\n    +import kafka.common.OffsetAndMetadata;<br/>\n    +import kafka.common.OffsetMetadataAndError;<br/>\n    +import kafka.common.TopicAndPartition;<br/>\n    +import kafka.javaapi.ConsumerMetadataResponse;<br/>\n    +import kafka.javaapi.OffsetCommitRequest;<br/>\n    +import kafka.javaapi.OffsetCommitResponse;<br/>\n    +import kafka.javaapi.OffsetFetchRequest;<br/>\n    +import kafka.javaapi.OffsetFetchResponse;<br/>\n    +import kafka.network.BlockingChannel;<br/>\n    +import org.json.simple.JSONValue;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class KafkaDataStore implements StateStore {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(KafkaDataStore.class);<br/>\n    +<br/>\n    +    private SpoutConfig _spoutConfig;<br/>\n    +    private Partition _partition;<br/>\n    +<br/>\n    +    private String _consumerGroupId;<br/>\n    +    private String _consumerClientId;<br/>\n    +    private int _stateOpTimeout;<br/>\n    +    private int _stateOpMaxRetry;<br/>\n    +<br/>\n    +    private int _correlationId = 0;<br/>\n    +    private BlockingChannel _offsetManager;<br/>\n    +<br/>\n    +    public KafkaDataStore(Map stormConf, SpoutConfig spoutConfig, Partition partition) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    you shouldn't need <tt>stormConf</tt> or <tt>spoutConfig</tt> to instantiate.  I believe you would just need:</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>broker connect (host:port)</li>\n\t<li>consumerId</li>\n\t<li>optional topic? not sure</li>\n</ul>\n\n\n<p>    Your store should support all partitions, so leave out <tt>partition</tt>.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612594976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612478643","html_url":"https://github.com/apache/storm/issues/4254#issuecomment-2612478643","issue_url":"https://api.github.com/repos/apache/storm/issues/4254","id":2612478643,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0Nzg2NDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T19:24:19Z","updated_at":"2025-01-24T13:00:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks Kishor and Alessandro for all of the work on this.  It looks great. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612478643/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612594981","html_url":"https://github.com/apache/storm/issues/4853#issuecomment-2612594981","issue_url":"https://api.github.com/repos/apache/storm/issues/4853","id":2612594981,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTQ5ODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T19:27:49Z","updated_at":"2025-01-24T13:58:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user choang commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/705#discussion_r41186043\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/705#discussion_r41186043</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/src/jvm/storm/kafka/StateStore.java &#8212;<br/>\n    @@ -0,0 +1,43 @@<br/>\n    +package storm.kafka;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +/**<br/>\n    + * Abstraction of a partition state storage.<br/>\n    + *<br/>\n    + * The partition state usually is kept in Json format in the store and in Map format in runtime memory. An example<br/>\n    + * is shown below:<br/>\n    + *<br/>\n    + * Json:<br/>\n    + *  {<br/>\n    + *      \"broker\": </p>\n{\n    + *  \"host\": \"kafka.sample.net\",\n    + *  \"port\": 9092\n    + *      }\n<p>,<br/>\n    + *      \"offset\": 4285,<br/>\n    + *      \"partition\": 1,<br/>\n    + *      \"topic\": \"testTopic\",<br/>\n    + *      \"topology\": </p>\n{\n    + *  \"id\": \"fce905ff-25e0 -409e-bc3a-d855f 787d13b\",\n    + *  \"name\": \"Test Topology\"\n    + *      }\n<p>    + *  }<br/>\n    + *<br/>\n    + * Memory:<br/>\n    + *  Map<Object, Object> data = (Map<Object, Object>) ImmutableMap.builder()<br/>\n    + *.put(\"topology\", ImmutableMap.of(<br/>\n    + *\"id\", \"fce905ff-25e0 -409e-bc3a-d855f 787d13b\",<br/>\n    + *\"name\", \"Test Topology\"))<br/>\n    + *.put(\"offset\", 4285)<br/>\n    + *.put(\"partition\", 1)<br/>\n    + *.put(\"broker\", ImmutableMap.of(<br/>\n    + *\"host\", \"kafka.sample.net\",<br/>\n    + *\"port\", 9092))<br/>\n    + *.put(\"topic\", \"testTopic\").build();<br/>\n    + */<br/>\n    +public interface StateStore {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    extends <tt>Closeable</tt></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612594981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/145642316","html_url":"https://github.com/apache/storm/pull/692#issuecomment-145642316","issue_url":"https://api.github.com/repos/apache/storm/issues/692","id":145642316,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTY0MjMxNg==","user":{"login":"priyank5485","id":5192436,"node_id":"MDQ6VXNlcjUxOTI0MzY=","avatar_url":"https://avatars.githubusercontent.com/u/5192436?v=4","gravatar_id":"","url":"https://api.github.com/users/priyank5485","html_url":"https://github.com/priyank5485","followers_url":"https://api.github.com/users/priyank5485/followers","following_url":"https://api.github.com/users/priyank5485/following{/other_user}","gists_url":"https://api.github.com/users/priyank5485/gists{/gist_id}","starred_url":"https://api.github.com/users/priyank5485/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/priyank5485/subscriptions","organizations_url":"https://api.github.com/users/priyank5485/orgs","repos_url":"https://api.github.com/users/priyank5485/repos","events_url":"https://api.github.com/users/priyank5485/events{/privacy}","received_events_url":"https://api.github.com/users/priyank5485/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T19:31:19Z","updated_at":"2015-10-05T19:31:19Z","author_association":"CONTRIBUTOR","body":"@revans2 I think what you mentioned above would not happen. I mean the part where you say that storm running in unsecured mode and hdfs in secured mode will disable security. Please correct me if i am wrong. I am new to this. But the way i imagine it will work is that the proxy user functionality code(which is doAs part) will be executed only after the user is logged in to HDFS. In secured mode user will already be validated using keytab. Above that hdfs needs config entries in core-site.xml which is needed for the proxy user functionality to work. Please look at the configurations section at http://hadoop.apache.org/docs/r2.7.1/hadoop-project-dist/hadoop-common/Superusers.html \nhdfs in that case would make sure that if the logged in user is not authorized to impersonate as some other user based on that config it will throw an exception. Again, there is a good chance i might be missing something here. Please correct me if i am wrong. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/145642316/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612588128","html_url":"https://github.com/apache/storm/issues/4835#issuecomment-2612588128","issue_url":"https://api.github.com/repos/apache/storm/issues/4835","id":2612588128,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1ODgxMjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T19:31:20Z","updated_at":"2025-01-24T13:55:24Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user priyank5485 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/692#issuecomment-145642316\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/692#issuecomment-145642316</a></p>\n\n<p>    @revans2 I think what you mentioned above would not happen. I mean the part where you say that storm running in unsecured mode and hdfs in secured mode will disable security. Please correct me if i am wrong. I am new to this. But the way i imagine it will work is that the proxy user functionality code(which is doAs part) will be executed only after the user is logged in to HDFS. In secured mode user will already be validated using keytab. Above that hdfs needs config entries in core-site.xml which is needed for the proxy user functionality to work. Please look at the configurations section at <a href=\"http://hadoop.apache.org/docs/r2.7.1/hadoop-project-dist/hadoop-common/Superusers.html\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://hadoop.apache.org/docs/r2.7.1/hadoop-project-dist/hadoop-common/Superusers.html</a> <br/>\n    hdfs in that case would make sure that if the logged in user is not authorized to impersonate as some other user based on that config it will throw an exception. Again, there is a good chance i might be missing something here. Please correct me if i am wrong. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612588128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612594987","html_url":"https://github.com/apache/storm/issues/4853#issuecomment-2612594987","issue_url":"https://api.github.com/repos/apache/storm/issues/4853","id":2612594987,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTQ5ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T19:36:34Z","updated_at":"2025-01-24T13:58:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user choang commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/705#discussion_r41186998\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/705#discussion_r41186998</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/src/jvm/storm/kafka/KafkaSpout.java &#8212;<br/>\n    @@ -43,19 +42,19 @@ public MessageAndRealOffset(Message msg, long offset) {<br/>\n     }<br/>\n }</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>static enum EmitState {<br/>\n    +    enum EmitState \n{\n     EMITTED_MORE_LEFT,\n     EMITTED_END,\n     NO_EMITTED\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>public static final Logger LOG = LoggerFactory.getLogger(KafkaSpout.class);<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(KafkaSpout.class);</li>\n</ul>\n\n\n<p> SpoutConfig _spoutConfig;<br/>\n SpoutOutputCollector _collector;<br/>\n PartitionCoordinator _coordinator;<br/>\n DynamicPartitionConnections _connections;</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>ZkState _state;<br/>\n    +    PartitionStateManagerFactory _partitionStateManagerFactory;\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    instead of a factory, you can make the developer declare the StateStore:<br/>\n    ```<br/>\n    public void createTopology() </p>\n{\nSpout spout = new KafkaSpout(..., new KafkaStateStore(...));\n    ...\n    }\n<p>    ```</p>\n\n<p>    This should keep the KafkaSpout code much simpler and more explicit, and eliminate the need for a factory.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612594987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/145663357","html_url":"https://github.com/apache/storm/pull/554#issuecomment-145663357","issue_url":"https://api.github.com/repos/apache/storm/issues/554","id":145663357,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTY2MzM1Nw==","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T20:45:45Z","updated_at":"2015-10-05T20:45:45Z","author_association":"NONE","body":"OK, I upmerged, and then had to upmerge again right after that.  I double-checked that uptimeSeconds appear in the places they should, and that I was able to change the log level for a worker running ExclamationTopology.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/145663357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612546899","html_url":"https://github.com/apache/storm/issues/4661#issuecomment-2612546899","issue_url":"https://api.github.com/repos/apache/storm/issues/4661","id":2612546899,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NDY4OTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T20:45:46Z","updated_at":"2025-01-24T13:35:18Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/554#issuecomment-145663357\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/554#issuecomment-145663357</a></p>\n\n<p>    OK, I upmerged, and then had to upmerge again right after that.  I double-checked that uptimeSeconds appear in the places they should, and that I was able to change the log level for a worker running ExclamationTopology.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612546899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/145666276","html_url":"https://github.com/apache/storm/pull/554#issuecomment-145666276","issue_url":"https://api.github.com/repos/apache/storm/issues/554","id":145666276,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTY2NjI3Ng==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T20:57:28Z","updated_at":"2015-10-05T20:57:28Z","author_association":"CONTRIBUTOR","body":"Still +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/145666276/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612546901","html_url":"https://github.com/apache/storm/issues/4661#issuecomment-2612546901","issue_url":"https://api.github.com/repos/apache/storm/issues/4661","id":2612546901,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NDY5MDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T20:57:29Z","updated_at":"2025-01-24T13:35:18Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/554#issuecomment-145666276\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/554#issuecomment-145666276</a></p>\n\n<p>    Still +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612546901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612546906","html_url":"https://github.com/apache/storm/issues/4661#issuecomment-2612546906","issue_url":"https://api.github.com/repos/apache/storm/issues/4661","id":2612546906,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NDY5MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T21:00:51Z","updated_at":"2025-01-24T13:35:18Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/554\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/554</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612546906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612546909","html_url":"https://github.com/apache/storm/issues/4661#issuecomment-2612546909","issue_url":"https://api.github.com/repos/apache/storm/issues/4661","id":2612546909,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NDY5MDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-05T21:01:32Z","updated_at":"2025-01-24T13:35:18Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagit\" class=\"user-hover\" rel=\"dagit\">Derek Dagit</a>,</p>\n\n<p>I merged this into master.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612546909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/145868091","html_url":"https://github.com/apache/storm/pull/692#issuecomment-145868091","issue_url":"https://api.github.com/repos/apache/storm/issues/692","id":145868091,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTg2ODA5MQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T14:08:52Z","updated_at":"2015-10-06T14:08:52Z","author_association":"CONTRIBUTOR","body":"@priyank5485 You are correct that the name-node needs to be configured to explicitly allow super users and/or groups and optionally restrict those to specific hosts.  My issue is not with the code but with how it is intended to be used which is why I am -0.  I will not block this going in, but I will not support it either.  From the description of STORM-997\n\n> In a non-secure environment, Storm HDFS component that provides interaction with HDFS from storm currently does that as the user storm with which the worker process had been started. We want to allow the component to interact with hdfs as the user provided instead of user running the worker process.\n\nTo me that sounds like I have an \"guest\" account on my computer that everyone logs in to.  Some of the users don't want to be \"guest\" so instead of giving them all a separate login and password.  I will grant \"guest\" sudo privileges so they can become any user.\n\nThe issue is the chain of attach.  If storm is \"non-secure\" anyone with access to the nimbus thrift port can run arbitrary code on the storm cluster.  If you configure HDFS so the \"storm\" user can become anyone on HDFS anyone with access to the nimbus thrift port now has complete access to all of HDFS.  You have effectively made HDFS as secure as your storm cluster which by definition is \"non-secure\".\n\nTo really make this correct you either want to make storm secure (give each user their own login and password to your computer, and have them stop using \"guest\") or at a minimum severely restrict what the storm user can do on HDFS.  To do that I would think you could make AutoTGT work with an insecure storm cluster.  This would not be that hard, we just have to let it look someplace else for the TGT, instead of relying on the StormClient section of the jaas.conf.  Or update AutoHDFS to work in insecure mode and have some configuration to restrict which delegation tokens it will fetch for users of this cluster.  To be sure that works you have to be sure \"nimbus\" is a different user from \"storm\", or at least HDFS will only allow super user access from nimbus.\n\nThis is still not great because anyone with access to ZK could now steal either the TGT or the delegation tokens, but you have only made some very specific HDFS accounts \"non-secure\" instead of all of HDFS.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/145868091/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612588132","html_url":"https://github.com/apache/storm/issues/4835#issuecomment-2612588132","issue_url":"https://api.github.com/repos/apache/storm/issues/4835","id":2612588132,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1ODgxMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T14:08:54Z","updated_at":"2025-01-24T13:55:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/692#issuecomment-145868091\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/692#issuecomment-145868091</a></p>\n\n<p>    @priyank5485 You are correct that the name-node needs to be configured to explicitly allow super users and/or groups and optionally restrict those to specific hosts.  My issue is not with the code but with how it is intended to be used which is why I am -0.  I will not block this going in, but I will not support it either.  From the description of <a href=\"https://issues.apache.org/jira/browse/STORM-997\" title=\"Add support for user specified UGI - (UserGroupInformation) for storm hdfs connector\" class=\"issue-link\" data-issue-key=\"STORM-997\"><del>STORM-997</del></a></p>\n\n<p>    > In a non-secure environment, Storm HDFS component that provides interaction with HDFS from storm currently does that as the user storm with which the worker process had been started. We want to allow the component to interact with hdfs as the user provided instead of user running the worker process.</p>\n\n<p>    To me that sounds like I have an \"guest\" account on my computer that everyone logs in to.  Some of the users don't want to be \"guest\" so instead of giving them all a separate login and password.  I will grant \"guest\" sudo privileges so they can become any user.</p>\n\n<p>    The issue is the chain of attach.  If storm is \"non-secure\" anyone with access to the nimbus thrift port can run arbitrary code on the storm cluster.  If you configure HDFS so the \"storm\" user can become anyone on HDFS anyone with access to the nimbus thrift port now has complete access to all of HDFS.  You have effectively made HDFS as secure as your storm cluster which by definition is \"non-secure\".</p>\n\n<p>    To really make this correct you either want to make storm secure (give each user their own login and password to your computer, and have them stop using \"guest\") or at a minimum severely restrict what the storm user can do on HDFS.  To do that I would think you could make AutoTGT work with an insecure storm cluster.  This would not be that hard, we just have to let it look someplace else for the TGT, instead of relying on the StormClient section of the jaas.conf.  Or update AutoHDFS to work in insecure mode and have some configuration to restrict which delegation tokens it will fetch for users of this cluster.  To be sure that works you have to be sure \"nimbus\" is a different user from \"storm\", or at least HDFS will only allow super user access from nimbus.</p>\n\n<p>    This is still not great because anyone with access to ZK could now steal either the TGT or the delegation tokens, but you have only made some very specific HDFS accounts \"non-secure\" instead of all of HDFS.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612588132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571336","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571336","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571336,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzEzMzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T15:54:55Z","updated_at":"2025-01-24T13:47:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#discussion_r41283265\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#discussion_r41283265</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/scheduler/resource/strategies/ResourceAwareStrategy.java &#8212;<br/>\n    @@ -0,0 +1,478 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package backtype.storm.scheduler.resource.strategies;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.LinkedList;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Map.Entry;<br/>\n    +import java.util.Queue;<br/>\n    +import java.util.TreeMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Iterator;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import backtype.storm.scheduler.Cluster;<br/>\n    +import backtype.storm.scheduler.ExecutorDetails;<br/>\n    +import backtype.storm.scheduler.Topologies;<br/>\n    +import backtype.storm.scheduler.TopologyDetails;<br/>\n    +import backtype.storm.scheduler.WorkerSlot;<br/>\n    +import backtype.storm.scheduler.resource.Component;<br/>\n    +import backtype.storm.scheduler.resource.RAS_Node;<br/>\n    +<br/>\n    +public class ResourceAwareStrategy implements IStrategy {<br/>\n    +    private Logger LOG = null;<br/>\n    +    private Topologies _topologies;<br/>\n    +    private Cluster _cluster;<br/>\n    +    //Map key is the supervisor id and the value is the corresponding RAS_Node Object <br/>\n    +    private Map<String, RAS_Node> _availNodes;<br/>\n    +    private RAS_Node refNode = null;<br/>\n    +    /**<br/>\n    +     * supervisor id -> Node<br/>\n    +     */<br/>\n    +    private Map<String, RAS_Node> _nodes;<br/>\n    +    private Map<String, List<String>> _clusterInfo;<br/>\n    +<br/>\n    +    private final double CPU_WEIGHT = 1.0;<br/>\n    +    private final double MEM_WEIGHT = 1.0;<br/>\n    +    private final double NETWORK_WEIGHT = 1.0;<br/>\n    +<br/>\n    +    public ResourceAwareStrategy(Cluster cluster, Topologies topologies) </p>\n{\n    +_topologies = topologies;\n    +_cluster = cluster;\n    +_nodes = RAS_Node.getAllNodesFrom(cluster, _topologies);\n    +_availNodes = this.getAvailNodes();\n    +this.LOG = LoggerFactory.getLogger(this.getClass());\n    +_clusterInfo = cluster.getNetworkTopography();\n    +LOG.debug(this.getClusterInfo());\n    +    }\n<p>    +<br/>\n    +    //the returned TreeMap keeps the Components sorted<br/>\n    +    private TreeMap<Integer, List<ExecutorDetails>> getPriorityToExecutorDetailsListMap(<br/>\n    +    Queue<Component> ordered__Component_list, Collection<ExecutorDetails> unassignedExecutors) {<br/>\n    +TreeMap<Integer, List<ExecutorDetails>> retMap = new TreeMap<Integer, List<ExecutorDetails>>();<br/>\n    +Integer rank = 0;<br/>\n    +for (Component ras_comp : ordered__Component_list) {<br/>\n    +    retMap.put(rank, new ArrayList<ExecutorDetails>());<br/>\n    +    for(ExecutorDetails exec : ras_comp.execs) {<br/>\n    +if(unassignedExecutors.contains(exec)) </p>\n{\n    +    retMap.get(rank).add(exec);\n    +}\n<p>    +    }<br/>\n    +    rank++;<br/>\n    +}<br/>\n    +return retMap;<br/>\n    +    }<br/>\n    +<br/>\n    +    public Map<WorkerSlot, Collection<ExecutorDetails>> schedule(TopologyDetails td) {<br/>\n    +if (_availNodes.size() <= 0) </p>\n{\n    +    LOG.warn(\"No available nodes to schedule tasks on!\");\n    +    return null;\n    +}\n<p>    +Collection<ExecutorDetails> unassignedExecutors = _cluster.getUnassignedExecutors(td);<br/>\n    +Map<WorkerSlot, Collection<ExecutorDetails>> schedulerAssignmentMap = new HashMap<WorkerSlot, Collection<ExecutorDetails>>();<br/>\n    +LOG.debug(\"ExecutorsNeedScheduling: {}\", unassignedExecutors);<br/>\n    +Collection<ExecutorDetails> scheduledTasks = new ArrayList<ExecutorDetails>();<br/>\n    +List<Component> spouts = this.getSpouts(_topologies, td);<br/>\n    +<br/>\n    +if (spouts.size() == 0) </p>\n{\n    +    LOG.error(\"Cannot find a Spout!\");\n    +    return null;\n    +}\n<p>    +<br/>\n    +Queue<Component> ordered__Component_list = bfs(_topologies, td, spouts);<br/>\n    +<br/>\n    +Map<Integer, List<ExecutorDetails>> priorityToExecutorMap = getPriorityToExecutorDetailsListMap(ordered__Component_list, unassignedExecutors);<br/>\n    +Collection<ExecutorDetails> executorsNotScheduled = new HashSet<ExecutorDetails>(unassignedExecutors);<br/>\n    +Integer longestPriorityListSize = this.getLongestPriorityListSize(priorityToExecutorMap);<br/>\n    +//Pick the first executor with priority one, then the 1st exec with priority 2, so on an so forth. <br/>\n    +//Once we reach the last priority, we go back to priority 1 and schedule the second task with priority 1.<br/>\n    +for (int i = 0; i < longestPriorityListSize; i++) {<br/>\n    +    for (Entry<Integer, List<ExecutorDetails>> entry : priorityToExecutorMap.entrySet()) {<br/>\n    +Iterator<ExecutorDetails> it = entry.getValue().iterator();<br/>\n    +if (it.hasNext()) {<br/>\n    +    ExecutorDetails exec = it.next();<br/>\n    +    LOG.debug(\"\\n\\nAttempting to schedule: {} of component {}<span class=\"error\">&#91;avail {}&#93;</span> with rank {}\",<br/>\n    +    new Object[] </p>\n{ exec, td.getExecutorToComponent().get(exec),\n    +    td.getTaskResourceReqList(exec), entry.getKey() }\n<p>);<br/>\n    +    WorkerSlot targetSlot = this.findWorkerForExec(exec, td, schedulerAssignmentMap);<br/>\n    +    if (targetSlot != null) {<br/>\n    +RAS_Node targetNode = this.idToNode(targetSlot.getNodeId());<br/>\n    +if(!schedulerAssignmentMap.containsKey(targetSlot)) </p>\n{\n    +    schedulerAssignmentMap.put(targetSlot, new LinkedList<ExecutorDetails>());\n    +}\n<p>    +       <br/>\n    +schedulerAssignmentMap.get(targetSlot).add(exec);<br/>\n    +targetNode.consumeResourcesforTask(exec, td);<br/>\n    +scheduledTasks.add(exec);<br/>\n    +LOG.debug(\"TASK {} assigned to Node: {} avail <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> total <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> on slot: {}\", exec,<br/>\n    +targetNode, targetNode.getAvailableMemoryResources(),<br/>\n    +targetNode.getAvailableCpuResources(), targetNode.getTotalMemoryResources(),<br/>\n    +targetNode.getTotalCpuResources(), targetSlot);<br/>\n    +    } else {<br/>\n    +LOG.error(\"Not Enough Resources to schedule Task {}\", exec);<br/>\n    +    }<br/>\n    +    it.remove();<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +executorsNotScheduled.removeAll(scheduledTasks);<br/>\n    +LOG.debug(\"/* Scheduling left over task (most likely sys tasks) */\");<br/>\n    +// schedule left over system tasks<br/>\n    +for (ExecutorDetails exec : executorsNotScheduled) {<br/>\n    +    WorkerSlot targetSlot = this.findWorkerForExec(exec, td, schedulerAssignmentMap);<br/>\n    +    if (targetSlot != null) {<br/>\n    +RAS_Node targetNode = this.idToNode(targetSlot.getNodeId());<br/>\n    +if(schedulerAssignmentMap.containsKey(targetSlot) == false) </p>\n{\n    +    schedulerAssignmentMap.put(targetSlot, new LinkedList<ExecutorDetails>());\n    +}\n<p>    +       <br/>\n    +schedulerAssignmentMap.get(targetSlot).add(exec);<br/>\n    +targetNode.consumeResourcesforTask(exec, td);<br/>\n    +scheduledTasks.add(exec);<br/>\n    +LOG.debug(\"TASK {} assigned to Node: {} avail <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> total <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> on slot: {}\", exec,<br/>\n    +targetNode, targetNode.getAvailableMemoryResources(),<br/>\n    +targetNode.getAvailableCpuResources(), targetNode.getTotalMemoryResources(),<br/>\n    +targetNode.getTotalCpuResources(), targetSlot);<br/>\n    +    } else {<br/>\n    +LOG.error(\"Not Enough Resources to schedule Task {}\", exec);<br/>\n    +    }<br/>\n    +}<br/>\n    +executorsNotScheduled.removeAll(scheduledTasks);<br/>\n    +if (executorsNotScheduled.size() > 0) {<br/>\n    +    LOG.error(\"Not all executors successfully scheduled: {}\",<br/>\n    +    executorsNotScheduled);<br/>\n    +    schedulerAssignmentMap = null;<br/>\n    +} else </p>\n{\n    +    LOG.debug(\"All resources successfully scheduled!\");\n    +}\n<p>    +if (schedulerAssignmentMap == null) {<br/>\n    +    LOG.error(\"Topology {} not successfully scheduled!\", td.getId());<br/>\n    +}<br/>\n    +return schedulerAssignmentMap;<br/>\n    +    }<br/>\n    +<br/>\n    +    private WorkerSlot findWorkerForExec(ExecutorDetails exec, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) {<br/>\n    +      WorkerSlot ws = null;<br/>\n    +      // first scheduling<br/>\n    +      if (this.refNode == null) </p>\n{\n    +  String clus = this.getBestClustering();\n    +  ws = this.getBestWorker(exec, td, clus, scheduleAssignmentMap);\n    +      }\n<p> else </p>\n{\n    +  ws = this.getBestWorker(exec, td, scheduleAssignmentMap);\n    +      }\n<p>    +      if(ws != null) </p>\n{\n    +  this.refNode = this.idToNode(ws.getNodeId());\n    +      }\n<p>    +      LOG.debug(\"reference node for the resource aware scheduler is: {}\", this.refNode);<br/>\n    +      return ws;<br/>\n    +    }<br/>\n    +<br/>\n    +    private WorkerSlot getBestWorker(ExecutorDetails exec, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) </p>\n{\n    +return this.getBestWorker(exec, td, null, scheduleAssignmentMap);\n    +    }\n<p>    +<br/>\n    +    private WorkerSlot getBestWorker(ExecutorDetails exec, TopologyDetails td, String clusterId, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) {<br/>\n    +double taskMem = td.getTotalMemReqTask(exec);<br/>\n    +double taskCPU = td.getTotalCpuReqTask(exec);<br/>\n    +List<RAS_Node> nodes;<br/>\n    +if(clusterId != null) </p>\n{\n    +    nodes = this.getAvailableNodesFromCluster(clusterId);\n    +    \n    +}\n<p> else </p>\n{\n    +    nodes = this.getAvailableNodes();\n    +}\n<p>    +TreeMap<Double, RAS_Node> nodeRankMap = new TreeMap<Double, RAS_Node>();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    May add some brief comments to introduce the logic of choosing best node here.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571338","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571338","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571338,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzEzMzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T15:56:31Z","updated_at":"2025-01-24T13:47:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#discussion_r41283467\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#discussion_r41283467</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/scheduler/resource/strategies/ResourceAwareStrategy.java &#8212;<br/>\n    @@ -0,0 +1,478 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package backtype.storm.scheduler.resource.strategies;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.LinkedList;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Map.Entry;<br/>\n    +import java.util.Queue;<br/>\n    +import java.util.TreeMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Iterator;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import backtype.storm.scheduler.Cluster;<br/>\n    +import backtype.storm.scheduler.ExecutorDetails;<br/>\n    +import backtype.storm.scheduler.Topologies;<br/>\n    +import backtype.storm.scheduler.TopologyDetails;<br/>\n    +import backtype.storm.scheduler.WorkerSlot;<br/>\n    +import backtype.storm.scheduler.resource.Component;<br/>\n    +import backtype.storm.scheduler.resource.RAS_Node;<br/>\n    +<br/>\n    +public class ResourceAwareStrategy implements IStrategy {<br/>\n    +    private Logger LOG = null;<br/>\n    +    private Topologies _topologies;<br/>\n    +    private Cluster _cluster;<br/>\n    +    //Map key is the supervisor id and the value is the corresponding RAS_Node Object <br/>\n    +    private Map<String, RAS_Node> _availNodes;<br/>\n    +    private RAS_Node refNode = null;<br/>\n    +    /**<br/>\n    +     * supervisor id -> Node<br/>\n    +     */<br/>\n    +    private Map<String, RAS_Node> _nodes;<br/>\n    +    private Map<String, List<String>> _clusterInfo;<br/>\n    +<br/>\n    +    private final double CPU_WEIGHT = 1.0;<br/>\n    +    private final double MEM_WEIGHT = 1.0;<br/>\n    +    private final double NETWORK_WEIGHT = 1.0;<br/>\n    +<br/>\n    +    public ResourceAwareStrategy(Cluster cluster, Topologies topologies) </p>\n{\n    +_topologies = topologies;\n    +_cluster = cluster;\n    +_nodes = RAS_Node.getAllNodesFrom(cluster, _topologies);\n    +_availNodes = this.getAvailNodes();\n    +this.LOG = LoggerFactory.getLogger(this.getClass());\n    +_clusterInfo = cluster.getNetworkTopography();\n    +LOG.debug(this.getClusterInfo());\n    +    }\n<p>    +<br/>\n    +    //the returned TreeMap keeps the Components sorted<br/>\n    +    private TreeMap<Integer, List<ExecutorDetails>> getPriorityToExecutorDetailsListMap(<br/>\n    +    Queue<Component> ordered__Component_list, Collection<ExecutorDetails> unassignedExecutors) {<br/>\n    +TreeMap<Integer, List<ExecutorDetails>> retMap = new TreeMap<Integer, List<ExecutorDetails>>();<br/>\n    +Integer rank = 0;<br/>\n    +for (Component ras_comp : ordered__Component_list) {<br/>\n    +    retMap.put(rank, new ArrayList<ExecutorDetails>());<br/>\n    +    for(ExecutorDetails exec : ras_comp.execs) {<br/>\n    +if(unassignedExecutors.contains(exec)) </p>\n{\n    +    retMap.get(rank).add(exec);\n    +}\n<p>    +    }<br/>\n    +    rank++;<br/>\n    +}<br/>\n    +return retMap;<br/>\n    +    }<br/>\n    +<br/>\n    +    public Map<WorkerSlot, Collection<ExecutorDetails>> schedule(TopologyDetails td) {<br/>\n    +if (_availNodes.size() <= 0) </p>\n{\n    +    LOG.warn(\"No available nodes to schedule tasks on!\");\n    +    return null;\n    +}\n<p>    +Collection<ExecutorDetails> unassignedExecutors = _cluster.getUnassignedExecutors(td);<br/>\n    +Map<WorkerSlot, Collection<ExecutorDetails>> schedulerAssignmentMap = new HashMap<WorkerSlot, Collection<ExecutorDetails>>();<br/>\n    +LOG.debug(\"ExecutorsNeedScheduling: {}\", unassignedExecutors);<br/>\n    +Collection<ExecutorDetails> scheduledTasks = new ArrayList<ExecutorDetails>();<br/>\n    +List<Component> spouts = this.getSpouts(_topologies, td);<br/>\n    +<br/>\n    +if (spouts.size() == 0) </p>\n{\n    +    LOG.error(\"Cannot find a Spout!\");\n    +    return null;\n    +}\n<p>    +<br/>\n    +Queue<Component> ordered__Component_list = bfs(_topologies, td, spouts);<br/>\n    +<br/>\n    +Map<Integer, List<ExecutorDetails>> priorityToExecutorMap = getPriorityToExecutorDetailsListMap(ordered__Component_list, unassignedExecutors);<br/>\n    +Collection<ExecutorDetails> executorsNotScheduled = new HashSet<ExecutorDetails>(unassignedExecutors);<br/>\n    +Integer longestPriorityListSize = this.getLongestPriorityListSize(priorityToExecutorMap);<br/>\n    +//Pick the first executor with priority one, then the 1st exec with priority 2, so on an so forth. <br/>\n    +//Once we reach the last priority, we go back to priority 1 and schedule the second task with priority 1.<br/>\n    +for (int i = 0; i < longestPriorityListSize; i++) {<br/>\n    +    for (Entry<Integer, List<ExecutorDetails>> entry : priorityToExecutorMap.entrySet()) {<br/>\n    +Iterator<ExecutorDetails> it = entry.getValue().iterator();<br/>\n    +if (it.hasNext()) {<br/>\n    +    ExecutorDetails exec = it.next();<br/>\n    +    LOG.debug(\"\\n\\nAttempting to schedule: {} of component {}<span class=\"error\">&#91;avail {}&#93;</span> with rank {}\",<br/>\n    +    new Object[] </p>\n{ exec, td.getExecutorToComponent().get(exec),\n    +    td.getTaskResourceReqList(exec), entry.getKey() }\n<p>);<br/>\n    +    WorkerSlot targetSlot = this.findWorkerForExec(exec, td, schedulerAssignmentMap);<br/>\n    +    if (targetSlot != null) {<br/>\n    +RAS_Node targetNode = this.idToNode(targetSlot.getNodeId());<br/>\n    +if(!schedulerAssignmentMap.containsKey(targetSlot)) </p>\n{\n    +    schedulerAssignmentMap.put(targetSlot, new LinkedList<ExecutorDetails>());\n    +}\n<p>    +       <br/>\n    +schedulerAssignmentMap.get(targetSlot).add(exec);<br/>\n    +targetNode.consumeResourcesforTask(exec, td);<br/>\n    +scheduledTasks.add(exec);<br/>\n    +LOG.debug(\"TASK {} assigned to Node: {} avail <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> total <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> on slot: {}\", exec,<br/>\n    +targetNode, targetNode.getAvailableMemoryResources(),<br/>\n    +targetNode.getAvailableCpuResources(), targetNode.getTotalMemoryResources(),<br/>\n    +targetNode.getTotalCpuResources(), targetSlot);<br/>\n    +    } else {<br/>\n    +LOG.error(\"Not Enough Resources to schedule Task {}\", exec);<br/>\n    +    }<br/>\n    +    it.remove();<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +executorsNotScheduled.removeAll(scheduledTasks);<br/>\n    +LOG.debug(\"/* Scheduling left over task (most likely sys tasks) */\");<br/>\n    +// schedule left over system tasks<br/>\n    +for (ExecutorDetails exec : executorsNotScheduled) {<br/>\n    +    WorkerSlot targetSlot = this.findWorkerForExec(exec, td, schedulerAssignmentMap);<br/>\n    +    if (targetSlot != null) {<br/>\n    +RAS_Node targetNode = this.idToNode(targetSlot.getNodeId());<br/>\n    +if(schedulerAssignmentMap.containsKey(targetSlot) == false) </p>\n{\n    +    schedulerAssignmentMap.put(targetSlot, new LinkedList<ExecutorDetails>());\n    +}\n<p>    +       <br/>\n    +schedulerAssignmentMap.get(targetSlot).add(exec);<br/>\n    +targetNode.consumeResourcesforTask(exec, td);<br/>\n    +scheduledTasks.add(exec);<br/>\n    +LOG.debug(\"TASK {} assigned to Node: {} avail <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> total <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> on slot: {}\", exec,<br/>\n    +targetNode, targetNode.getAvailableMemoryResources(),<br/>\n    +targetNode.getAvailableCpuResources(), targetNode.getTotalMemoryResources(),<br/>\n    +targetNode.getTotalCpuResources(), targetSlot);<br/>\n    +    } else {<br/>\n    +LOG.error(\"Not Enough Resources to schedule Task {}\", exec);<br/>\n    +    }<br/>\n    +}<br/>\n    +executorsNotScheduled.removeAll(scheduledTasks);<br/>\n    +if (executorsNotScheduled.size() > 0) {<br/>\n    +    LOG.error(\"Not all executors successfully scheduled: {}\",<br/>\n    +    executorsNotScheduled);<br/>\n    +    schedulerAssignmentMap = null;<br/>\n    +} else </p>\n{\n    +    LOG.debug(\"All resources successfully scheduled!\");\n    +}\n<p>    +if (schedulerAssignmentMap == null) {<br/>\n    +    LOG.error(\"Topology {} not successfully scheduled!\", td.getId());<br/>\n    +}<br/>\n    +return schedulerAssignmentMap;<br/>\n    +    }<br/>\n    +<br/>\n    +    private WorkerSlot findWorkerForExec(ExecutorDetails exec, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) {<br/>\n    +      WorkerSlot ws = null;<br/>\n    +      // first scheduling<br/>\n    +      if (this.refNode == null) </p>\n{\n    +  String clus = this.getBestClustering();\n    +  ws = this.getBestWorker(exec, td, clus, scheduleAssignmentMap);\n    +      }\n<p> else </p>\n{\n    +  ws = this.getBestWorker(exec, td, scheduleAssignmentMap);\n    +      }\n<p>    +      if(ws != null) </p>\n{\n    +  this.refNode = this.idToNode(ws.getNodeId());\n    +      }\n<p>    +      LOG.debug(\"reference node for the resource aware scheduler is: {}\", this.refNode);<br/>\n    +      return ws;<br/>\n    +    }<br/>\n    +<br/>\n    +    private WorkerSlot getBestWorker(ExecutorDetails exec, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) </p>\n{\n    +return this.getBestWorker(exec, td, null, scheduleAssignmentMap);\n    +    }\n<p>    +<br/>\n    +    private WorkerSlot getBestWorker(ExecutorDetails exec, TopologyDetails td, String clusterId, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) {<br/>\n    +double taskMem = td.getTotalMemReqTask(exec);<br/>\n    +double taskCPU = td.getTotalCpuReqTask(exec);<br/>\n    +List<RAS_Node> nodes;<br/>\n    +if(clusterId != null) </p>\n{\n    +    nodes = this.getAvailableNodesFromCluster(clusterId);\n    +    \n    +}\n<p> else </p>\n{\n    +    nodes = this.getAvailableNodes();\n    +}\n<p>    +TreeMap<Double, RAS_Node> nodeRankMap = new TreeMap<Double, RAS_Node>();<br/>\n    +for (RAS_Node n : nodes) {<br/>\n    +    if(n.getFreeSlots().size()>0) {<br/>\n    +if (n.getAvailableMemoryResources() >= taskMem<br/>\n    +      && n.getAvailableCpuResources() >= taskCPU) {<br/>\n    +  double a = Math.pow((taskCPU - n.getAvailableCpuResources())<br/>\n    +  * this.CPU_WEIGHT, 2);<br/>\n    +  double b = Math.pow((taskMem - n.getAvailableMemoryResources())<br/>\n    +  * this.MEM_WEIGHT, 2);<br/>\n    +  double c = 0.0;<br/>\n    +  if(this.refNode != null) </p>\n{\n    +      c = Math.pow(this.distToNode(this.refNode, n)\n    +      * this.NETWORK_WEIGHT, 2);\n    +  }\n<p>    +  double distance = Math.sqrt(a + b + c);<br/>\n    +  nodeRankMap.put(distance, n);<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +for(Map.Entry<Double, RAS_Node> entry : nodeRankMap.entrySet()) {<br/>\n    +    RAS_Node n = entry.getValue();<br/>\n    +    for(WorkerSlot ws : n.getFreeSlots()) {<br/>\n    +if(checkWorkerConstraints(exec, ws, td, scheduleAssignmentMap)) </p>\n{\n    +    return ws;\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    private String getBestClustering() {<br/>\n    +String bestCluster = null;<br/>\n    +Double mostRes = 0.0;<br/>\n    +for (Entry<String, List<String>> cluster : _clusterInfo<br/>\n    +.entrySet()) {<br/>\n    +    Double clusterTotalRes = this.getTotalClusterRes(cluster.getValue());<br/>\n    +    if (clusterTotalRes > mostRes) </p>\n{\n    +mostRes = clusterTotalRes;\n    +bestCluster = cluster.getKey();\n    +    }\n<p>    +}<br/>\n    +return bestCluster;<br/>\n    +    }<br/>\n    +<br/>\n    +    private Double getTotalClusterRes(List<String> cluster) {<br/>\n    +Double res = 0.0;<br/>\n    +for (String node : cluster) </p>\n{\n    +    res += _availNodes.get(this.NodeHostnameToId(node))\n    +    .getAvailableMemoryResources()\n    +    + _availNodes.get(this.NodeHostnameToId(node))\n    +    .getAvailableCpuResources();\n    +}\n<p>    +return res;<br/>\n    +    }<br/>\n    +<br/>\n    +    private Double distToNode(RAS_Node src, RAS_Node dest) {<br/>\n    +if (src.getId().equals(dest.getId())==true) </p>\n{\n    +    return 1.0;\n    +}\n<p>else if (this.NodeToCluster(src) == this.NodeToCluster(dest)) </p>\n{\n    +    return 2.0;\n    +}\n<p> else </p>\n{\n    +    return 3.0;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private String NodeToCluster(RAS_Node node) {<br/>\n    +for (Entry<String, List<String>> entry : _clusterInfo<br/>\n    +.entrySet()) {<br/>\n    +    if (entry.getValue().contains(node.getHostname())) </p>\n{\n    +return entry.getKey();\n    +    }\n<p>    +}<br/>\n    +LOG.error(\"Node: {} not found in any clusters\", node.getHostname());<br/>\n    +return null;<br/>\n    +    }<br/>\n    +    <br/>\n    +    private List<RAS_Node> getAvailableNodes() {<br/>\n    +LinkedList<RAS_Node> nodes = new LinkedList<RAS_Node>();<br/>\n    +for (String clusterId : _clusterInfo.keySet()) </p>\n{\n    +    nodes.addAll(this.getAvailableNodesFromCluster(clusterId));\n    +}\n<p>    +return nodes;<br/>\n    +    }<br/>\n    +<br/>\n    +    private List<RAS_Node> getAvailableNodesFromCluster(String clus) {<br/>\n    +List<RAS_Node> retList = new ArrayList<RAS_Node>();<br/>\n    +for (String node_id : _clusterInfo.get(clus)) </p>\n{\n    +    retList.add(_availNodes.get(this\n    +    .NodeHostnameToId(node_id)));\n    +}\n<p>    +return retList;<br/>\n    +    }<br/>\n    +<br/>\n    +    private List<WorkerSlot> getAvailableWorkersFromCluster(String clusterId) {<br/>\n    +List<RAS_Node> nodes = this.getAvailableNodesFromCluster(clusterId);<br/>\n    +List<WorkerSlot> workers = new LinkedList<WorkerSlot>();<br/>\n    +for(RAS_Node node : nodes) </p>\n{\n    +    workers.addAll(node.getFreeSlots());\n    +}\n<p>    +return workers;<br/>\n    +    }<br/>\n    +<br/>\n    +    private List<WorkerSlot> getAvailableWorker() {<br/>\n    +List<WorkerSlot> workers = new LinkedList<WorkerSlot>();<br/>\n    +for (String clusterId : _clusterInfo.keySet()) </p>\n{\n    +    workers.addAll(this.getAvailableWorkersFromCluster(clusterId));\n    +}\n<p>    +return workers;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * In case in the future RAS can only use a subset of nodes<br/>\n    +     */<br/>\n    +    private Map<String, RAS_Node> getAvailNodes() </p>\n{\n    +return _nodes;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Breadth first traversal of the topology DAG<br/>\n    +     * @param topologies<br/>\n    +     * @param td<br/>\n    +     * @param spouts<br/>\n    +     * @return A partial ordering of components<br/>\n    +     */<br/>\n    +    private Queue<Component> bfs(Topologies topologies, TopologyDetails td, List<Component> spouts) {<br/>\n    +// Since queue is a interface<br/>\n    +Queue<Component> ordered__Component_list = new LinkedList<Component>();<br/>\n    +HashMap<String, Component> visited = new HashMap<String, Component>();<br/>\n    +<br/>\n    +/* start from each spout that is not visited, each does a breadth-first traverse */<br/>\n    +for (Component spout : spouts) {<br/>\n    +    if (!visited.containsKey(spout.id)) {<br/>\n    +Queue<Component> queue = new LinkedList<Component>();<br/>\n    +queue.offer(spout);<br/>\n    +while (!queue.isEmpty()) {<br/>\n    +    Component comp = queue.poll();<br/>\n    +    visited.put(comp.id, comp);<br/>\n    +    ordered__Component_list.add(comp);<br/>\n    +    List<String> neighbors = new ArrayList<String>();<br/>\n    +    neighbors.addAll(comp.children);<br/>\n    +    neighbors.addAll(comp.parents);<br/>\n    +    for (String nbID : neighbors) {<br/>\n    +if (!visited.containsKey(nbID)) </p>\n{\n    +    Component child = topologies.getAllComponents().get(td.getId()).get(nbID);\n    +    queue.offer(child);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +return ordered__Component_list;<br/>\n    +    }<br/>\n    +<br/>\n    +    private List<Component> getSpouts(Topologies topologies, TopologyDetails td) {<br/>\n    +List<Component> spouts = new ArrayList<Component>();<br/>\n    +for (Component c : topologies.getAllComponents().get(td.getId())<br/>\n    +.values()) {<br/>\n    +    if (c.type == Component.ComponentType.SPOUT) </p>\n{\n    +spouts.add(c);\n    +    }\n<p>    +}<br/>\n    +return spouts;<br/>\n    +    }<br/>\n    +<br/>\n    +    private Integer getLongestPriorityListSize(Map<Integer, List<ExecutorDetails>> priorityToExecutorMap) {<br/>\n    +Integer mostNum = 0;<br/>\n    +for (List<ExecutorDetails> execs : priorityToExecutorMap.values()) {<br/>\n    +    Integer numExecs = execs.size();<br/>\n    +    if (mostNum < numExecs) </p>\n{\n    +mostNum = numExecs;\n    +    }\n<p>    +}<br/>\n    +return mostNum;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Get the remaining amount memory that can be assigned to a worker given the set worker max heap size<br/>\n    +     * @param ws<br/>\n    +     * @param td<br/>\n    +     * @param scheduleAssignmentMap<br/>\n    +     * @return The remaining amount of memory<br/>\n    +     */<br/>\n    +    private Double getWorkerScheduledMemoryAvailable(WorkerSlot ws, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) </p>\n{\n    +Double memScheduleUsed = this.getWorkerScheduledMemoryUse(ws, td, scheduleAssignmentMap);\n    +return td.getTopologyWorkerMaxHeapSize() - memScheduleUsed;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Get the amount of memory already assigned to a worker<br/>\n    +     * @param ws<br/>\n    +     * @param td<br/>\n    +     * @param scheduleAssignmentMap<br/>\n    +     * @return the amount of memory<br/>\n    +     */<br/>\n    +    private Double getWorkerScheduledMemoryUse(WorkerSlot ws, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) {<br/>\n    +Double totalMem = 0.0;<br/>\n    +Collection<ExecutorDetails> execs = scheduleAssignmentMap.get(ws);<br/>\n    +if(execs != null) {<br/>\n    +    for(ExecutorDetails exec : execs) </p>\n{\n    +totalMem += td.getTotalMemReqTask(exec);\n    +    }\n<p>    +} <br/>\n    +return totalMem;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Checks whether we can schedule an Executor exec on the worker slot ws<br/>\n    +     * @param exec<br/>\n    +     * @param ws<br/>\n    +     * @param td<br/>\n    +     * @param scheduleAssignmentMap<br/>\n    +     * @return a boolean: True denoting the exec can be scheduled on ws and false if it cannot<br/>\n    +     */<br/>\n    +    private boolean checkWorkerConstraints(ExecutorDetails exec, WorkerSlot ws, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Since we now only consider the memory when checkWorkerConstraints, may add some comments saying that we will also check CPU constraint in the near future.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571342","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571342","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571342,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzEzNDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T16:11:57Z","updated_at":"2025-01-24T13:47:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#discussion_r41285663\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#discussion_r41285663</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/utils/Utils.java &#8212;<br/>\n    @@ -18,10 +18,7 @@<br/>\n     package backtype.storm.utils;</p>\n\n<p>     import backtype.storm.Config;<br/>\n    -import backtype.storm.generated.AuthorizationException;<br/>\n    -import backtype.storm.generated.ComponentCommon;<br/>\n    -import backtype.storm.generated.ComponentObject;<br/>\n    -import backtype.storm.generated.StormTopology;<br/>\n    +import backtype.storm.generated.*;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    May expand this.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571342/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612608475","html_url":"https://github.com/apache/storm/issues/4928#issuecomment-2612608475","issue_url":"https://api.github.com/repos/apache/storm/issues/4928","id":2612608475,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDg0NzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T18:35:16Z","updated_at":"2025-01-24T14:04:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user schonfeld opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/783\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/783</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1090\" title=\"Nimbus HA should support `storm.local.hostname`\" class=\"issue-link\" data-issue-key=\"STORM-1090\"><del>STORM-1090</del></a> Nimbus HA should support `storm.local.hostname`</p>\n\n<p>    Nimbus HA's `NimbusInfo` class relies on each nimbus's hostname for network reachability. This is a show-stopper in situations that utilize Config.STORM_LOCAL_HOSTNAME / `storm.local.hostname`.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/schonfeld/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/schonfeld/storm</a> nimbus-ha-support-storm-local-hostname</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/783.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/783.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #783</p>\n\n<hr />\n<p>commit ed7b4869d3cfd53279d34bf300abdf6fb50958b6<br/>\nAuthor: Michael Schonfeld <michael@schonfeld.org><br/>\nDate:   2015-10-06T16:31:03Z</p>\n\n<p>    nimbus host should support Config.STORM_LOCAL_HOSTNAME</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612608475/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612608627","html_url":"https://github.com/apache/storm/issues/4929#issuecomment-2612608627","issue_url":"https://api.github.com/repos/apache/storm/issues/4929","id":2612608627,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDg2Mjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T19:57:13Z","updated_at":"2025-01-24T14:04:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user dossett opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/784\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/784</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1091\" title=\"Add unit test for tick tuples to HiveBolt and HdfsBolt\" class=\"issue-link\" data-issue-key=\"STORM-1091\"><del>STORM-1091</del></a>: Add tick tuple unit tests for hdfs and hive bolts</p>\n\n<p>    As I mentioned in the JIRA, I relocated MockTupleHelpers from storm-starter to the test module of storm-core.  This required some pom changes in storm-core and the modules that use the MockTupleHelpers class.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/dossett/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/dossett/storm</a> ticktests</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/784.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/784.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #784</p>\n\n<hr />\n<p>commit c85086693519a87436a0c96c361d0f5e640bc3b5<br/>\nAuthor: Aaron Dossett <aaron.dossett@target.com><br/>\nDate:   2015-10-06T19:55:14Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1091\" title=\"Add unit test for tick tuples to HiveBolt and HdfsBolt\" class=\"issue-link\" data-issue-key=\"STORM-1091\"><del>STORM-1091</del></a>: Add tick tuple unit tests for hdfs and hive bolts</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612608627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/145991606","html_url":"https://github.com/apache/storm/pull/751#issuecomment-145991606","issue_url":"https://api.github.com/repos/apache/storm/issues/751","id":145991606,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTk5MTYwNg==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T20:33:28Z","updated_at":"2015-10-06T20:33:28Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/145991606/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/145992723","html_url":"https://github.com/apache/storm/pull/751#issuecomment-145992723","issue_url":"https://api.github.com/repos/apache/storm/issues/751","id":145992723,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTk5MjcyMw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T20:36:34Z","updated_at":"2015-10-06T20:36:34Z","author_association":"CONTRIBUTOR","body":"@erikdw Thanks for making it consistent, I merged into master.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/145992723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/145993674","html_url":"https://github.com/apache/storm/pull/758#issuecomment-145993674","issue_url":"https://api.github.com/repos/apache/storm/issues/758","id":145993674,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTk5MzY3NA==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T20:39:54Z","updated_at":"2015-10-06T20:39:54Z","author_association":"CONTRIBUTOR","body":"+1, too.\n@prokopowicz \nSince this is a bug, I'd like to record this to JIRA issue before merging. Could you file a JIRA, please?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/145993674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/145997525","html_url":"https://github.com/apache/storm/pull/783#issuecomment-145997525","issue_url":"https://api.github.com/repos/apache/storm/issues/783","id":145997525,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTk5NzUyNQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T20:54:10Z","updated_at":"2015-10-06T20:54:10Z","author_association":"CONTRIBUTOR","body":"+1\nConfig.STORM_LOCAL_HOSTNAME is already used for supervisors/workers to report its hostname to nimbus, so it makes sense for nimbuses to report its hostname by STORM_LOCAL_HOSTNAME to each other.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/145997525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612608479","html_url":"https://github.com/apache/storm/issues/4928#issuecomment-2612608479","issue_url":"https://api.github.com/repos/apache/storm/issues/4928","id":2612608479,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDg0Nzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T20:54:11Z","updated_at":"2025-01-24T14:04:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/783#issuecomment-145997525\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/783#issuecomment-145997525</a></p>\n\n<p>    +1<br/>\n    Config.STORM_LOCAL_HOSTNAME is already used for supervisors/workers to report its hostname to nimbus, so it makes sense for nimbuses to report its hostname by STORM_LOCAL_HOSTNAME to each other.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612608479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/145997708","html_url":"https://github.com/apache/storm/pull/751#issuecomment-145997708","issue_url":"https://api.github.com/repos/apache/storm/issues/751","id":145997708,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NTk5NzcwOA==","user":{"login":"erikdw","id":1111441,"node_id":"MDQ6VXNlcjExMTE0NDE=","avatar_url":"https://avatars.githubusercontent.com/u/1111441?v=4","gravatar_id":"","url":"https://api.github.com/users/erikdw","html_url":"https://github.com/erikdw","followers_url":"https://api.github.com/users/erikdw/followers","following_url":"https://api.github.com/users/erikdw/following{/other_user}","gists_url":"https://api.github.com/users/erikdw/gists{/gist_id}","starred_url":"https://api.github.com/users/erikdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikdw/subscriptions","organizations_url":"https://api.github.com/users/erikdw/orgs","repos_url":"https://api.github.com/users/erikdw/repos","events_url":"https://api.github.com/users/erikdw/events{/privacy}","received_events_url":"https://api.github.com/users/erikdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T20:54:54Z","updated_at":"2015-10-06T20:54:54Z","author_association":"CONTRIBUTOR","body":"@HeartSaVioR : thanks for accepting & merging!\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/145997708/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146001197","html_url":"https://github.com/apache/storm/pull/784#issuecomment-146001197","issue_url":"https://api.github.com/repos/apache/storm/issues/784","id":146001197,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjAwMTE5Nw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T21:07:48Z","updated_at":"2015-10-06T21:07:48Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146001197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612608630","html_url":"https://github.com/apache/storm/issues/4929#issuecomment-2612608630","issue_url":"https://api.github.com/repos/apache/storm/issues/4929","id":2612608630,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDg2MzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T21:07:50Z","updated_at":"2025-01-24T14:04:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/784#issuecomment-146001197\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/784#issuecomment-146001197</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612608630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612594994","html_url":"https://github.com/apache/storm/issues/4853#issuecomment-2612594994","issue_url":"https://api.github.com/repos/apache/storm/issues/4853","id":2612594994,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTQ5OTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T21:13:52Z","updated_at":"2025-01-24T13:58:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user choang commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/705#discussion_r41323220\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/705#discussion_r41323220</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/src/jvm/storm/kafka/KafkaStateStore.java &#8212;<br/>\n    @@ -0,0 +1,220 @@<br/>\n    +package storm.kafka;<br/>\n    +<br/>\n    +import com.google.common.collect.Maps;<br/>\n    +import kafka.api.ConsumerMetadataRequest;<br/>\n    +import kafka.common.ErrorMapping;<br/>\n    +import kafka.common.OffsetAndMetadata;<br/>\n    +import kafka.common.OffsetMetadataAndError;<br/>\n    +import kafka.common.TopicAndPartition;<br/>\n    +import kafka.javaapi.*;<br/>\n    +import kafka.network.BlockingChannel;<br/>\n    +import org.json.simple.JSONValue;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class KafkaStateStore implements StateStore {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(KafkaStateStore.class);<br/>\n    +<br/>\n    +    private SpoutConfig _spoutConfig;<br/>\n    +<br/>\n    +    private int _correlationId = 0;<br/>\n    +    // <a href=\"https://en.wikipedia.org/wiki/Double-checked_locking#Usage_in_Java\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://en.wikipedia.org/wiki/Double-checked_locking#Usage_in_Java</a><br/>\n    +    private volatile BlockingChannel _offsetManager;<br/>\n    +<br/>\n    +    public KafkaStateStore(Map stormConf, SpoutConfig spoutConfig) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    <tt>stormConf</tt> isn't used so remove.  By using <tt>spoutConfig</tt>, you are bleeding the spout state into the store.  I understand it is for convenience, but using explicit would be better, so perhaps you can create a <tt>KafkaStoreConfig</tt>.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612594994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612594999","html_url":"https://github.com/apache/storm/issues/4853#issuecomment-2612594999","issue_url":"https://api.github.com/repos/apache/storm/issues/4853","id":2612594999,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTQ5OTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T21:18:52Z","updated_at":"2025-01-24T13:58:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user choang commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/705#discussion_r41323806\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/705#discussion_r41323806</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/src/jvm/storm/kafka/PartitionManager.java &#8212;<br/>\n    @@ -252,28 +253,26 @@ public void fail(Long offset) {<br/>\n public void commit() {<br/>\n     long lastCompletedOffset = lastCompletedOffset();<br/>\n     if (_committedTo != lastCompletedOffset) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>LOG.debug(\"Writing last completed offset (\" + lastCompletedOffset + \") to ZK for \" + _partition + \" for topology: \" + _topologyInstanceId);<br/>\n    +    LOG.debug(\"Writing last completed offset (\" + lastCompletedOffset + \") for \" + _partition + \" for topology: \" + _topologyInstanceId);<br/>\n Map<Object, Object> data = (Map<Object, Object>) ImmutableMap.builder()</li>\n\t<li>.put(\"topology\", ImmutableMap.of(\"id\", _topologyInstanceId,<br/>\n    +    .put(\"topology\", ImmutableMap.of(\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    the auto formatting could be improved <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/sad.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/>  Probably not worth your time to do this as I face the same issue, and fall back to my own formatting.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612594999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612595006","html_url":"https://github.com/apache/storm/issues/4853#issuecomment-2612595006","issue_url":"https://api.github.com/repos/apache/storm/issues/4853","id":2612595006,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTUwMDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T21:21:07Z","updated_at":"2025-01-24T13:58:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user choang commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/705#discussion_r41324097\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/705#discussion_r41324097</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/src/jvm/storm/kafka/ZkStateStore.java &#8212;<br/>\n    @@ -54,50 +56,76 @@ public CuratorFramework getCurator() </p>\n{\n     return _curator;\n }\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>public ZkState(Map stateConf) {</li>\n\t<li>stateConf = new HashMap(stateConf);<br/>\n    +    public ZkStateStore(Map conf, SpoutConfig spoutConfig) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    similar comment as the KafkaStateStore constructor parameters.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612595006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146005945","html_url":"https://github.com/apache/storm/pull/705#issuecomment-146005945","issue_url":"https://api.github.com/repos/apache/storm/issues/705","id":146005945,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjAwNTk0NQ==","user":{"login":"choang","id":602917,"node_id":"MDQ6VXNlcjYwMjkxNw==","avatar_url":"https://avatars.githubusercontent.com/u/602917?v=4","gravatar_id":"","url":"https://api.github.com/users/choang","html_url":"https://github.com/choang","followers_url":"https://api.github.com/users/choang/followers","following_url":"https://api.github.com/users/choang/following{/other_user}","gists_url":"https://api.github.com/users/choang/gists{/gist_id}","starred_url":"https://api.github.com/users/choang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/choang/subscriptions","organizations_url":"https://api.github.com/users/choang/orgs","repos_url":"https://api.github.com/users/choang/repos","events_url":"https://api.github.com/users/choang/events{/privacy}","received_events_url":"https://api.github.com/users/choang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T21:22:29Z","updated_at":"2015-10-06T21:22:29Z","author_association":"NONE","body":"looks really good.  just had a few nits that shouldn't block.  I also don't have a vote, so you'll need to find a proper reviewer :)\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146005945/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612595012","html_url":"https://github.com/apache/storm/issues/4853#issuecomment-2612595012","issue_url":"https://api.github.com/repos/apache/storm/issues/4853","id":2612595012,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTUwMTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T21:22:30Z","updated_at":"2025-01-24T13:58:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user choang commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/705#issuecomment-146005945\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/705#issuecomment-146005945</a></p>\n\n<p>    looks really good.  just had a few nits that shouldn't block.  I also don't have a vote, so you'll need to find a proper reviewer <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612595012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146006292","html_url":"https://github.com/apache/storm/pull/705#issuecomment-146006292","issue_url":"https://api.github.com/repos/apache/storm/issues/705","id":146006292,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjAwNjI5Mg==","user":{"login":"ooasis","id":10720176,"node_id":"MDQ6VXNlcjEwNzIwMTc2","avatar_url":"https://avatars.githubusercontent.com/u/10720176?v=4","gravatar_id":"","url":"https://api.github.com/users/ooasis","html_url":"https://github.com/ooasis","followers_url":"https://api.github.com/users/ooasis/followers","following_url":"https://api.github.com/users/ooasis/following{/other_user}","gists_url":"https://api.github.com/users/ooasis/gists{/gist_id}","starred_url":"https://api.github.com/users/ooasis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ooasis/subscriptions","organizations_url":"https://api.github.com/users/ooasis/orgs","repos_url":"https://api.github.com/users/ooasis/repos","events_url":"https://api.github.com/users/ooasis/events{/privacy}","received_events_url":"https://api.github.com/users/ooasis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T21:24:01Z","updated_at":"2015-10-06T21:24:01Z","author_association":"NONE","body":"@choang thanks for the code review. Your comment on sharing the kafka store for all partitions is really helpful and I was able to cleanup a lot of unnecessary logic.  I still have some code to check in and need to run a few tests.  Maybe you can hold on for a while as I don't want to waste your time on the changing code base.  I will try to write a response as soon as I get some time.  Thanks again.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146006292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612595015","html_url":"https://github.com/apache/storm/issues/4853#issuecomment-2612595015","issue_url":"https://api.github.com/repos/apache/storm/issues/4853","id":2612595015,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTUwMTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T21:24:02Z","updated_at":"2025-01-24T13:58:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hsun-cnnxty commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/705#issuecomment-146006292\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/705#issuecomment-146006292</a></p>\n\n<p>    @choang thanks for the code review. Your comment on sharing the kafka store for all partitions is really helpful and I was able to cleanup a lot of unnecessary logic.  I still have some code to check in and need to run a few tests.  Maybe you can hold on for a while as I don't want to waste your time on the changing code base.  I will try to write a response as soon as I get some time.  Thanks again.</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612595015/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607222","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607222","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607222,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDcyMjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-06T23:06:59Z","updated_at":"2025-01-24T14:03:32Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user jerrypeng opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1084\" title=\"Improve Storm config validation process to use java annotations instead of *_SCHEMA format\" class=\"issue-link\" data-issue-key=\"STORM-1084\"><del>STORM-1084</del></a> - Improve Storm config validation process to use java annotations instead of *_SCHEMA format</p>\n\n<p>    So currently we specify validators:</p>\n\n<p>    public static final String STORM_MESSAGING_NETTY_MIN_SLEEP_MS = \"storm.messaging.netty.min_wait_ms\";</p>\n\n<p>    public static final Object STORM_MESSAGING_NETTY_MIN_SLEEP_MS_SCHEMA = ConfigValidation.IntegerValidator;</p>\n\n<p>    A better way to do this is using annotations. Something like:</p>\n\n<p>    @IntegerValidator<br/>\n    public static final String STORM_MESSAGING_NETTY_MIN_SLEEP_MS = \"storm.messaging.netty.min_wait_ms\";</p>\n\n<p>    Do this has many advantages. For one you can stack multiple annotations:</p>\n\n<p>    @IntegerValidator<br/>\n    @NotNull<br/>\n    public static final String STORM_MESSAGING_NETTY_MIN_SLEEP_MS = \"storm.messaging.netty.min_wait_ms\";</p>\n\n<p>    And we don't have to write another validator for strings that cannot be null<br/>\n    And we can pass parameters into the annotations:</p>\n\n<p>    @PositiveIntegerValidator(notNull=true)<br/>\n    public static final String DRPC_REQUEST_TIMEOUT_SECS = \"drpc.request.timeout.secs\";</p>\n\n<p>    instead of having to write another validator: ConfigValidation.NotNullPosIntegerValidator for checking for not null</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/jerrypeng/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/jerrypeng/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1084\" title=\"Improve Storm config validation process to use java annotations instead of *_SCHEMA format\" class=\"issue-link\" data-issue-key=\"STORM-1084\"><del>STORM-1084</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #785</p>\n\n<hr />\n<p>commit cfc11637132320b18208bb463d21f33665faf2c1<br/>\nAuthor: Boyang Jerry Peng <jerrypeng@yahoo-inc.com><br/>\nDate:   2015-10-06T23:01:25Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1084\" title=\"Improve Storm config validation process to use java annotations instead of *_SCHEMA format\" class=\"issue-link\" data-issue-key=\"STORM-1084\"><del>STORM-1084</del></a> - Improve Storm config validation process to use java annotations instead of *_SCHEMA format</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146045675","html_url":"https://github.com/apache/storm/pull/750#issuecomment-146045675","issue_url":"https://api.github.com/repos/apache/storm/issues/750","id":146045675,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjA0NTY3NQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T00:48:44Z","updated_at":"2015-10-07T00:48:44Z","author_association":"CONTRIBUTOR","body":"@revans2 \nIt just dropped throughput when tuples are being failed. \nIt occurred nearly end of performance test, so I'd like to test it again with longer test duration.\nIf it occurs nearly end of performance test again, I also treat it to other issue, maybe transfer issue while worker shutdown.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146045675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470478","html_url":"https://github.com/apache/storm/issues/4192#issuecomment-2612470478","issue_url":"https://api.github.com/repos/apache/storm/issues/4192","id":2612470478,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NzA0Nzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T00:48:45Z","updated_at":"2025-01-24T12:56:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/750#issuecomment-146045675\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/750#issuecomment-146045675</a></p>\n\n<p>    @revans2 <br/>\n    It just dropped throughput when tuples are being failed. <br/>\n    It occurred nearly end of performance test, so I'd like to test it again with longer test duration.<br/>\n    If it occurs nearly end of performance test again, I also treat it to other issue, maybe transfer issue while worker shutdown.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470478/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571346","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571346","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571346,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzEzNDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T02:58:06Z","updated_at":"2025-01-24T13:47:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#discussion_r41347349\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#discussion_r41347349</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/scheduler/resource/strategies/ResourceAwareStrategy.java &#8212;<br/>\n    @@ -0,0 +1,478 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package backtype.storm.scheduler.resource.strategies;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.LinkedList;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Map.Entry;<br/>\n    +import java.util.Queue;<br/>\n    +import java.util.TreeMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Iterator;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import backtype.storm.scheduler.Cluster;<br/>\n    +import backtype.storm.scheduler.ExecutorDetails;<br/>\n    +import backtype.storm.scheduler.Topologies;<br/>\n    +import backtype.storm.scheduler.TopologyDetails;<br/>\n    +import backtype.storm.scheduler.WorkerSlot;<br/>\n    +import backtype.storm.scheduler.resource.Component;<br/>\n    +import backtype.storm.scheduler.resource.RAS_Node;<br/>\n    +<br/>\n    +public class ResourceAwareStrategy implements IStrategy {<br/>\n    +    private Logger LOG = null;<br/>\n    +    private Topologies _topologies;<br/>\n    +    private Cluster _cluster;<br/>\n    +    //Map key is the supervisor id and the value is the corresponding RAS_Node Object <br/>\n    +    private Map<String, RAS_Node> _availNodes;<br/>\n    +    private RAS_Node refNode = null;<br/>\n    +    /**<br/>\n    +     * supervisor id -> Node<br/>\n    +     */<br/>\n    +    private Map<String, RAS_Node> _nodes;<br/>\n    +    private Map<String, List<String>> _clusterInfo;<br/>\n    +<br/>\n    +    private final double CPU_WEIGHT = 1.0;<br/>\n    +    private final double MEM_WEIGHT = 1.0;<br/>\n    +    private final double NETWORK_WEIGHT = 1.0;<br/>\n    +<br/>\n    +    public ResourceAwareStrategy(Cluster cluster, Topologies topologies) </p>\n{\n    +_topologies = topologies;\n    +_cluster = cluster;\n    +_nodes = RAS_Node.getAllNodesFrom(cluster, _topologies);\n    +_availNodes = this.getAvailNodes();\n    +this.LOG = LoggerFactory.getLogger(this.getClass());\n    +_clusterInfo = cluster.getNetworkTopography();\n    +LOG.debug(this.getClusterInfo());\n    +    }\n<p>    +<br/>\n    +    //the returned TreeMap keeps the Components sorted<br/>\n    +    private TreeMap<Integer, List<ExecutorDetails>> getPriorityToExecutorDetailsListMap(<br/>\n    +    Queue<Component> ordered__Component_list, Collection<ExecutorDetails> unassignedExecutors) {<br/>\n    +TreeMap<Integer, List<ExecutorDetails>> retMap = new TreeMap<Integer, List<ExecutorDetails>>();<br/>\n    +Integer rank = 0;<br/>\n    +for (Component ras_comp : ordered__Component_list) {<br/>\n    +    retMap.put(rank, new ArrayList<ExecutorDetails>());<br/>\n    +    for(ExecutorDetails exec : ras_comp.execs) {<br/>\n    +if(unassignedExecutors.contains(exec)) </p>\n{\n    +    retMap.get(rank).add(exec);\n    +}\n<p>    +    }<br/>\n    +    rank++;<br/>\n    +}<br/>\n    +return retMap;<br/>\n    +    }<br/>\n    +<br/>\n    +    public Map<WorkerSlot, Collection<ExecutorDetails>> schedule(TopologyDetails td) {<br/>\n    +if (_availNodes.size() <= 0) </p>\n{\n    +    LOG.warn(\"No available nodes to schedule tasks on!\");\n    +    return null;\n    +}\n<p>    +Collection<ExecutorDetails> unassignedExecutors = _cluster.getUnassignedExecutors(td);<br/>\n    +Map<WorkerSlot, Collection<ExecutorDetails>> schedulerAssignmentMap = new HashMap<WorkerSlot, Collection<ExecutorDetails>>();<br/>\n    +LOG.debug(\"ExecutorsNeedScheduling: {}\", unassignedExecutors);<br/>\n    +Collection<ExecutorDetails> scheduledTasks = new ArrayList<ExecutorDetails>();<br/>\n    +List<Component> spouts = this.getSpouts(_topologies, td);<br/>\n    +<br/>\n    +if (spouts.size() == 0) </p>\n{\n    +    LOG.error(\"Cannot find a Spout!\");\n    +    return null;\n    +}\n<p>    +<br/>\n    +Queue<Component> ordered__Component_list = bfs(_topologies, td, spouts);<br/>\n    +<br/>\n    +Map<Integer, List<ExecutorDetails>> priorityToExecutorMap = getPriorityToExecutorDetailsListMap(ordered__Component_list, unassignedExecutors);<br/>\n    +Collection<ExecutorDetails> executorsNotScheduled = new HashSet<ExecutorDetails>(unassignedExecutors);<br/>\n    +Integer longestPriorityListSize = this.getLongestPriorityListSize(priorityToExecutorMap);<br/>\n    +//Pick the first executor with priority one, then the 1st exec with priority 2, so on an so forth. <br/>\n    +//Once we reach the last priority, we go back to priority 1 and schedule the second task with priority 1.<br/>\n    +for (int i = 0; i < longestPriorityListSize; i++) {<br/>\n    +    for (Entry<Integer, List<ExecutorDetails>> entry : priorityToExecutorMap.entrySet()) {<br/>\n    +Iterator<ExecutorDetails> it = entry.getValue().iterator();<br/>\n    +if (it.hasNext()) {<br/>\n    +    ExecutorDetails exec = it.next();<br/>\n    +    LOG.debug(\"\\n\\nAttempting to schedule: {} of component {}<span class=\"error\">&#91;avail {}&#93;</span> with rank {}\",<br/>\n    +    new Object[] </p>\n{ exec, td.getExecutorToComponent().get(exec),\n    +    td.getTaskResourceReqList(exec), entry.getKey() }\n<p>);<br/>\n    +    WorkerSlot targetSlot = this.findWorkerForExec(exec, td, schedulerAssignmentMap);<br/>\n    +    if (targetSlot != null) {<br/>\n    +RAS_Node targetNode = this.idToNode(targetSlot.getNodeId());<br/>\n    +if(!schedulerAssignmentMap.containsKey(targetSlot)) </p>\n{\n    +    schedulerAssignmentMap.put(targetSlot, new LinkedList<ExecutorDetails>());\n    +}\n<p>    +       <br/>\n    +schedulerAssignmentMap.get(targetSlot).add(exec);<br/>\n    +targetNode.consumeResourcesforTask(exec, td);<br/>\n    +scheduledTasks.add(exec);<br/>\n    +LOG.debug(\"TASK {} assigned to Node: {} avail <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> total <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> on slot: {}\", exec,<br/>\n    +targetNode, targetNode.getAvailableMemoryResources(),<br/>\n    +targetNode.getAvailableCpuResources(), targetNode.getTotalMemoryResources(),<br/>\n    +targetNode.getTotalCpuResources(), targetSlot);<br/>\n    +    } else {<br/>\n    +LOG.error(\"Not Enough Resources to schedule Task {}\", exec);<br/>\n    +    }<br/>\n    +    it.remove();<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +executorsNotScheduled.removeAll(scheduledTasks);<br/>\n    +LOG.debug(\"/* Scheduling left over task (most likely sys tasks) */\");<br/>\n    +// schedule left over system tasks<br/>\n    +for (ExecutorDetails exec : executorsNotScheduled) {<br/>\n    +    WorkerSlot targetSlot = this.findWorkerForExec(exec, td, schedulerAssignmentMap);<br/>\n    +    if (targetSlot != null) {<br/>\n    +RAS_Node targetNode = this.idToNode(targetSlot.getNodeId());<br/>\n    +if(schedulerAssignmentMap.containsKey(targetSlot) == false) </p>\n{\n    +    schedulerAssignmentMap.put(targetSlot, new LinkedList<ExecutorDetails>());\n    +}\n<p>    +       <br/>\n    +schedulerAssignmentMap.get(targetSlot).add(exec);<br/>\n    +targetNode.consumeResourcesforTask(exec, td);<br/>\n    +scheduledTasks.add(exec);<br/>\n    +LOG.debug(\"TASK {} assigned to Node: {} avail <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> total <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> on slot: {}\", exec,<br/>\n    +targetNode, targetNode.getAvailableMemoryResources(),<br/>\n    +targetNode.getAvailableCpuResources(), targetNode.getTotalMemoryResources(),<br/>\n    +targetNode.getTotalCpuResources(), targetSlot);<br/>\n    +    } else {<br/>\n    +LOG.error(\"Not Enough Resources to schedule Task {}\", exec);<br/>\n    +    }<br/>\n    +}<br/>\n    +executorsNotScheduled.removeAll(scheduledTasks);<br/>\n    +if (executorsNotScheduled.size() > 0) {<br/>\n    +    LOG.error(\"Not all executors successfully scheduled: {}\",<br/>\n    +    executorsNotScheduled);<br/>\n    +    schedulerAssignmentMap = null;<br/>\n    +} else </p>\n{\n    +    LOG.debug(\"All resources successfully scheduled!\");\n    +}\n<p>    +if (schedulerAssignmentMap == null) {<br/>\n    +    LOG.error(\"Topology {} not successfully scheduled!\", td.getId());<br/>\n    +}<br/>\n    +return schedulerAssignmentMap;<br/>\n    +    }<br/>\n    +<br/>\n    +    private WorkerSlot findWorkerForExec(ExecutorDetails exec, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) {<br/>\n    +      WorkerSlot ws = null;<br/>\n    +      // first scheduling<br/>\n    +      if (this.refNode == null) </p>\n{\n    +  String clus = this.getBestClustering();\n    +  ws = this.getBestWorker(exec, td, clus, scheduleAssignmentMap);\n    +      }\n<p> else </p>\n{\n    +  ws = this.getBestWorker(exec, td, scheduleAssignmentMap);\n    +      }\n<p>    +      if(ws != null) </p>\n{\n    +  this.refNode = this.idToNode(ws.getNodeId());\n    +      }\n<p>    +      LOG.debug(\"reference node for the resource aware scheduler is: {}\", this.refNode);<br/>\n    +      return ws;<br/>\n    +    }<br/>\n    +<br/>\n    +    private WorkerSlot getBestWorker(ExecutorDetails exec, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) </p>\n{\n    +return this.getBestWorker(exec, td, null, scheduleAssignmentMap);\n    +    }\n<p>    +<br/>\n    +    private WorkerSlot getBestWorker(ExecutorDetails exec, TopologyDetails td, String clusterId, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) {<br/>\n    +double taskMem = td.getTotalMemReqTask(exec);<br/>\n    +double taskCPU = td.getTotalCpuReqTask(exec);<br/>\n    +List<RAS_Node> nodes;<br/>\n    +if(clusterId != null) </p>\n{\n    +    nodes = this.getAvailableNodesFromCluster(clusterId);\n    +    \n    +}\n<p> else </p>\n{\n    +    nodes = this.getAvailableNodes();\n    +}\n<p>    +TreeMap<Double, RAS_Node> nodeRankMap = new TreeMap<Double, RAS_Node>();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    will add comments</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571352","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571352","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571352,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzEzNTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T02:59:26Z","updated_at":"2025-01-24T13:47:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#discussion_r41347393\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#discussion_r41347393</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/scheduler/resource/strategies/ResourceAwareStrategy.java &#8212;<br/>\n    @@ -0,0 +1,478 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package backtype.storm.scheduler.resource.strategies;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.LinkedList;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Map.Entry;<br/>\n    +import java.util.Queue;<br/>\n    +import java.util.TreeMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Iterator;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import backtype.storm.scheduler.Cluster;<br/>\n    +import backtype.storm.scheduler.ExecutorDetails;<br/>\n    +import backtype.storm.scheduler.Topologies;<br/>\n    +import backtype.storm.scheduler.TopologyDetails;<br/>\n    +import backtype.storm.scheduler.WorkerSlot;<br/>\n    +import backtype.storm.scheduler.resource.Component;<br/>\n    +import backtype.storm.scheduler.resource.RAS_Node;<br/>\n    +<br/>\n    +public class ResourceAwareStrategy implements IStrategy {<br/>\n    +    private Logger LOG = null;<br/>\n    +    private Topologies _topologies;<br/>\n    +    private Cluster _cluster;<br/>\n    +    //Map key is the supervisor id and the value is the corresponding RAS_Node Object <br/>\n    +    private Map<String, RAS_Node> _availNodes;<br/>\n    +    private RAS_Node refNode = null;<br/>\n    +    /**<br/>\n    +     * supervisor id -> Node<br/>\n    +     */<br/>\n    +    private Map<String, RAS_Node> _nodes;<br/>\n    +    private Map<String, List<String>> _clusterInfo;<br/>\n    +<br/>\n    +    private final double CPU_WEIGHT = 1.0;<br/>\n    +    private final double MEM_WEIGHT = 1.0;<br/>\n    +    private final double NETWORK_WEIGHT = 1.0;<br/>\n    +<br/>\n    +    public ResourceAwareStrategy(Cluster cluster, Topologies topologies) </p>\n{\n    +_topologies = topologies;\n    +_cluster = cluster;\n    +_nodes = RAS_Node.getAllNodesFrom(cluster, _topologies);\n    +_availNodes = this.getAvailNodes();\n    +this.LOG = LoggerFactory.getLogger(this.getClass());\n    +_clusterInfo = cluster.getNetworkTopography();\n    +LOG.debug(this.getClusterInfo());\n    +    }\n<p>    +<br/>\n    +    //the returned TreeMap keeps the Components sorted<br/>\n    +    private TreeMap<Integer, List<ExecutorDetails>> getPriorityToExecutorDetailsListMap(<br/>\n    +    Queue<Component> ordered__Component_list, Collection<ExecutorDetails> unassignedExecutors) {<br/>\n    +TreeMap<Integer, List<ExecutorDetails>> retMap = new TreeMap<Integer, List<ExecutorDetails>>();<br/>\n    +Integer rank = 0;<br/>\n    +for (Component ras_comp : ordered__Component_list) {<br/>\n    +    retMap.put(rank, new ArrayList<ExecutorDetails>());<br/>\n    +    for(ExecutorDetails exec : ras_comp.execs) {<br/>\n    +if(unassignedExecutors.contains(exec)) </p>\n{\n    +    retMap.get(rank).add(exec);\n    +}\n<p>    +    }<br/>\n    +    rank++;<br/>\n    +}<br/>\n    +return retMap;<br/>\n    +    }<br/>\n    +<br/>\n    +    public Map<WorkerSlot, Collection<ExecutorDetails>> schedule(TopologyDetails td) {<br/>\n    +if (_availNodes.size() <= 0) </p>\n{\n    +    LOG.warn(\"No available nodes to schedule tasks on!\");\n    +    return null;\n    +}\n<p>    +Collection<ExecutorDetails> unassignedExecutors = _cluster.getUnassignedExecutors(td);<br/>\n    +Map<WorkerSlot, Collection<ExecutorDetails>> schedulerAssignmentMap = new HashMap<WorkerSlot, Collection<ExecutorDetails>>();<br/>\n    +LOG.debug(\"ExecutorsNeedScheduling: {}\", unassignedExecutors);<br/>\n    +Collection<ExecutorDetails> scheduledTasks = new ArrayList<ExecutorDetails>();<br/>\n    +List<Component> spouts = this.getSpouts(_topologies, td);<br/>\n    +<br/>\n    +if (spouts.size() == 0) </p>\n{\n    +    LOG.error(\"Cannot find a Spout!\");\n    +    return null;\n    +}\n<p>    +<br/>\n    +Queue<Component> ordered__Component_list = bfs(_topologies, td, spouts);<br/>\n    +<br/>\n    +Map<Integer, List<ExecutorDetails>> priorityToExecutorMap = getPriorityToExecutorDetailsListMap(ordered__Component_list, unassignedExecutors);<br/>\n    +Collection<ExecutorDetails> executorsNotScheduled = new HashSet<ExecutorDetails>(unassignedExecutors);<br/>\n    +Integer longestPriorityListSize = this.getLongestPriorityListSize(priorityToExecutorMap);<br/>\n    +//Pick the first executor with priority one, then the 1st exec with priority 2, so on an so forth. <br/>\n    +//Once we reach the last priority, we go back to priority 1 and schedule the second task with priority 1.<br/>\n    +for (int i = 0; i < longestPriorityListSize; i++) {<br/>\n    +    for (Entry<Integer, List<ExecutorDetails>> entry : priorityToExecutorMap.entrySet()) {<br/>\n    +Iterator<ExecutorDetails> it = entry.getValue().iterator();<br/>\n    +if (it.hasNext()) {<br/>\n    +    ExecutorDetails exec = it.next();<br/>\n    +    LOG.debug(\"\\n\\nAttempting to schedule: {} of component {}<span class=\"error\">&#91;avail {}&#93;</span> with rank {}\",<br/>\n    +    new Object[] </p>\n{ exec, td.getExecutorToComponent().get(exec),\n    +    td.getTaskResourceReqList(exec), entry.getKey() }\n<p>);<br/>\n    +    WorkerSlot targetSlot = this.findWorkerForExec(exec, td, schedulerAssignmentMap);<br/>\n    +    if (targetSlot != null) {<br/>\n    +RAS_Node targetNode = this.idToNode(targetSlot.getNodeId());<br/>\n    +if(!schedulerAssignmentMap.containsKey(targetSlot)) </p>\n{\n    +    schedulerAssignmentMap.put(targetSlot, new LinkedList<ExecutorDetails>());\n    +}\n<p>    +       <br/>\n    +schedulerAssignmentMap.get(targetSlot).add(exec);<br/>\n    +targetNode.consumeResourcesforTask(exec, td);<br/>\n    +scheduledTasks.add(exec);<br/>\n    +LOG.debug(\"TASK {} assigned to Node: {} avail <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> total <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> on slot: {}\", exec,<br/>\n    +targetNode, targetNode.getAvailableMemoryResources(),<br/>\n    +targetNode.getAvailableCpuResources(), targetNode.getTotalMemoryResources(),<br/>\n    +targetNode.getTotalCpuResources(), targetSlot);<br/>\n    +    } else {<br/>\n    +LOG.error(\"Not Enough Resources to schedule Task {}\", exec);<br/>\n    +    }<br/>\n    +    it.remove();<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +executorsNotScheduled.removeAll(scheduledTasks);<br/>\n    +LOG.debug(\"/* Scheduling left over task (most likely sys tasks) */\");<br/>\n    +// schedule left over system tasks<br/>\n    +for (ExecutorDetails exec : executorsNotScheduled) {<br/>\n    +    WorkerSlot targetSlot = this.findWorkerForExec(exec, td, schedulerAssignmentMap);<br/>\n    +    if (targetSlot != null) {<br/>\n    +RAS_Node targetNode = this.idToNode(targetSlot.getNodeId());<br/>\n    +if(schedulerAssignmentMap.containsKey(targetSlot) == false) </p>\n{\n    +    schedulerAssignmentMap.put(targetSlot, new LinkedList<ExecutorDetails>());\n    +}\n<p>    +       <br/>\n    +schedulerAssignmentMap.get(targetSlot).add(exec);<br/>\n    +targetNode.consumeResourcesforTask(exec, td);<br/>\n    +scheduledTasks.add(exec);<br/>\n    +LOG.debug(\"TASK {} assigned to Node: {} avail <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> total <span class=\"error\">&#91;mem: {} cpu: {}&#93;</span> on slot: {}\", exec,<br/>\n    +targetNode, targetNode.getAvailableMemoryResources(),<br/>\n    +targetNode.getAvailableCpuResources(), targetNode.getTotalMemoryResources(),<br/>\n    +targetNode.getTotalCpuResources(), targetSlot);<br/>\n    +    } else {<br/>\n    +LOG.error(\"Not Enough Resources to schedule Task {}\", exec);<br/>\n    +    }<br/>\n    +}<br/>\n    +executorsNotScheduled.removeAll(scheduledTasks);<br/>\n    +if (executorsNotScheduled.size() > 0) {<br/>\n    +    LOG.error(\"Not all executors successfully scheduled: {}\",<br/>\n    +    executorsNotScheduled);<br/>\n    +    schedulerAssignmentMap = null;<br/>\n    +} else </p>\n{\n    +    LOG.debug(\"All resources successfully scheduled!\");\n    +}\n<p>    +if (schedulerAssignmentMap == null) {<br/>\n    +    LOG.error(\"Topology {} not successfully scheduled!\", td.getId());<br/>\n    +}<br/>\n    +return schedulerAssignmentMap;<br/>\n    +    }<br/>\n    +<br/>\n    +    private WorkerSlot findWorkerForExec(ExecutorDetails exec, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) {<br/>\n    +      WorkerSlot ws = null;<br/>\n    +      // first scheduling<br/>\n    +      if (this.refNode == null) </p>\n{\n    +  String clus = this.getBestClustering();\n    +  ws = this.getBestWorker(exec, td, clus, scheduleAssignmentMap);\n    +      }\n<p> else </p>\n{\n    +  ws = this.getBestWorker(exec, td, scheduleAssignmentMap);\n    +      }\n<p>    +      if(ws != null) </p>\n{\n    +  this.refNode = this.idToNode(ws.getNodeId());\n    +      }\n<p>    +      LOG.debug(\"reference node for the resource aware scheduler is: {}\", this.refNode);<br/>\n    +      return ws;<br/>\n    +    }<br/>\n    +<br/>\n    +    private WorkerSlot getBestWorker(ExecutorDetails exec, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) </p>\n{\n    +return this.getBestWorker(exec, td, null, scheduleAssignmentMap);\n    +    }\n<p>    +<br/>\n    +    private WorkerSlot getBestWorker(ExecutorDetails exec, TopologyDetails td, String clusterId, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) {<br/>\n    +double taskMem = td.getTotalMemReqTask(exec);<br/>\n    +double taskCPU = td.getTotalCpuReqTask(exec);<br/>\n    +List<RAS_Node> nodes;<br/>\n    +if(clusterId != null) </p>\n{\n    +    nodes = this.getAvailableNodesFromCluster(clusterId);\n    +    \n    +}\n<p> else </p>\n{\n    +    nodes = this.getAvailableNodes();\n    +}\n<p>    +TreeMap<Double, RAS_Node> nodeRankMap = new TreeMap<Double, RAS_Node>();<br/>\n    +for (RAS_Node n : nodes) {<br/>\n    +    if(n.getFreeSlots().size()>0) {<br/>\n    +if (n.getAvailableMemoryResources() >= taskMem<br/>\n    +      && n.getAvailableCpuResources() >= taskCPU) {<br/>\n    +  double a = Math.pow((taskCPU - n.getAvailableCpuResources())<br/>\n    +  * this.CPU_WEIGHT, 2);<br/>\n    +  double b = Math.pow((taskMem - n.getAvailableMemoryResources())<br/>\n    +  * this.MEM_WEIGHT, 2);<br/>\n    +  double c = 0.0;<br/>\n    +  if(this.refNode != null) </p>\n{\n    +      c = Math.pow(this.distToNode(this.refNode, n)\n    +      * this.NETWORK_WEIGHT, 2);\n    +  }\n<p>    +  double distance = Math.sqrt(a + b + c);<br/>\n    +  nodeRankMap.put(distance, n);<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +for(Map.Entry<Double, RAS_Node> entry : nodeRankMap.entrySet()) {<br/>\n    +    RAS_Node n = entry.getValue();<br/>\n    +    for(WorkerSlot ws : n.getFreeSlots()) {<br/>\n    +if(checkWorkerConstraints(exec, ws, td, scheduleAssignmentMap)) </p>\n{\n    +    return ws;\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    private String getBestClustering() {<br/>\n    +String bestCluster = null;<br/>\n    +Double mostRes = 0.0;<br/>\n    +for (Entry<String, List<String>> cluster : _clusterInfo<br/>\n    +.entrySet()) {<br/>\n    +    Double clusterTotalRes = this.getTotalClusterRes(cluster.getValue());<br/>\n    +    if (clusterTotalRes > mostRes) </p>\n{\n    +mostRes = clusterTotalRes;\n    +bestCluster = cluster.getKey();\n    +    }\n<p>    +}<br/>\n    +return bestCluster;<br/>\n    +    }<br/>\n    +<br/>\n    +    private Double getTotalClusterRes(List<String> cluster) {<br/>\n    +Double res = 0.0;<br/>\n    +for (String node : cluster) </p>\n{\n    +    res += _availNodes.get(this.NodeHostnameToId(node))\n    +    .getAvailableMemoryResources()\n    +    + _availNodes.get(this.NodeHostnameToId(node))\n    +    .getAvailableCpuResources();\n    +}\n<p>    +return res;<br/>\n    +    }<br/>\n    +<br/>\n    +    private Double distToNode(RAS_Node src, RAS_Node dest) {<br/>\n    +if (src.getId().equals(dest.getId())==true) </p>\n{\n    +    return 1.0;\n    +}\n<p>else if (this.NodeToCluster(src) == this.NodeToCluster(dest)) </p>\n{\n    +    return 2.0;\n    +}\n<p> else </p>\n{\n    +    return 3.0;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    private String NodeToCluster(RAS_Node node) {<br/>\n    +for (Entry<String, List<String>> entry : _clusterInfo<br/>\n    +.entrySet()) {<br/>\n    +    if (entry.getValue().contains(node.getHostname())) </p>\n{\n    +return entry.getKey();\n    +    }\n<p>    +}<br/>\n    +LOG.error(\"Node: {} not found in any clusters\", node.getHostname());<br/>\n    +return null;<br/>\n    +    }<br/>\n    +    <br/>\n    +    private List<RAS_Node> getAvailableNodes() {<br/>\n    +LinkedList<RAS_Node> nodes = new LinkedList<RAS_Node>();<br/>\n    +for (String clusterId : _clusterInfo.keySet()) </p>\n{\n    +    nodes.addAll(this.getAvailableNodesFromCluster(clusterId));\n    +}\n<p>    +return nodes;<br/>\n    +    }<br/>\n    +<br/>\n    +    private List<RAS_Node> getAvailableNodesFromCluster(String clus) {<br/>\n    +List<RAS_Node> retList = new ArrayList<RAS_Node>();<br/>\n    +for (String node_id : _clusterInfo.get(clus)) </p>\n{\n    +    retList.add(_availNodes.get(this\n    +    .NodeHostnameToId(node_id)));\n    +}\n<p>    +return retList;<br/>\n    +    }<br/>\n    +<br/>\n    +    private List<WorkerSlot> getAvailableWorkersFromCluster(String clusterId) {<br/>\n    +List<RAS_Node> nodes = this.getAvailableNodesFromCluster(clusterId);<br/>\n    +List<WorkerSlot> workers = new LinkedList<WorkerSlot>();<br/>\n    +for(RAS_Node node : nodes) </p>\n{\n    +    workers.addAll(node.getFreeSlots());\n    +}\n<p>    +return workers;<br/>\n    +    }<br/>\n    +<br/>\n    +    private List<WorkerSlot> getAvailableWorker() {<br/>\n    +List<WorkerSlot> workers = new LinkedList<WorkerSlot>();<br/>\n    +for (String clusterId : _clusterInfo.keySet()) </p>\n{\n    +    workers.addAll(this.getAvailableWorkersFromCluster(clusterId));\n    +}\n<p>    +return workers;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * In case in the future RAS can only use a subset of nodes<br/>\n    +     */<br/>\n    +    private Map<String, RAS_Node> getAvailNodes() </p>\n{\n    +return _nodes;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Breadth first traversal of the topology DAG<br/>\n    +     * @param topologies<br/>\n    +     * @param td<br/>\n    +     * @param spouts<br/>\n    +     * @return A partial ordering of components<br/>\n    +     */<br/>\n    +    private Queue<Component> bfs(Topologies topologies, TopologyDetails td, List<Component> spouts) {<br/>\n    +// Since queue is a interface<br/>\n    +Queue<Component> ordered__Component_list = new LinkedList<Component>();<br/>\n    +HashMap<String, Component> visited = new HashMap<String, Component>();<br/>\n    +<br/>\n    +/* start from each spout that is not visited, each does a breadth-first traverse */<br/>\n    +for (Component spout : spouts) {<br/>\n    +    if (!visited.containsKey(spout.id)) {<br/>\n    +Queue<Component> queue = new LinkedList<Component>();<br/>\n    +queue.offer(spout);<br/>\n    +while (!queue.isEmpty()) {<br/>\n    +    Component comp = queue.poll();<br/>\n    +    visited.put(comp.id, comp);<br/>\n    +    ordered__Component_list.add(comp);<br/>\n    +    List<String> neighbors = new ArrayList<String>();<br/>\n    +    neighbors.addAll(comp.children);<br/>\n    +    neighbors.addAll(comp.parents);<br/>\n    +    for (String nbID : neighbors) {<br/>\n    +if (!visited.containsKey(nbID)) </p>\n{\n    +    Component child = topologies.getAllComponents().get(td.getId()).get(nbID);\n    +    queue.offer(child);\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +return ordered__Component_list;<br/>\n    +    }<br/>\n    +<br/>\n    +    private List<Component> getSpouts(Topologies topologies, TopologyDetails td) {<br/>\n    +List<Component> spouts = new ArrayList<Component>();<br/>\n    +for (Component c : topologies.getAllComponents().get(td.getId())<br/>\n    +.values()) {<br/>\n    +    if (c.type == Component.ComponentType.SPOUT) </p>\n{\n    +spouts.add(c);\n    +    }\n<p>    +}<br/>\n    +return spouts;<br/>\n    +    }<br/>\n    +<br/>\n    +    private Integer getLongestPriorityListSize(Map<Integer, List<ExecutorDetails>> priorityToExecutorMap) {<br/>\n    +Integer mostNum = 0;<br/>\n    +for (List<ExecutorDetails> execs : priorityToExecutorMap.values()) {<br/>\n    +    Integer numExecs = execs.size();<br/>\n    +    if (mostNum < numExecs) </p>\n{\n    +mostNum = numExecs;\n    +    }\n<p>    +}<br/>\n    +return mostNum;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Get the remaining amount memory that can be assigned to a worker given the set worker max heap size<br/>\n    +     * @param ws<br/>\n    +     * @param td<br/>\n    +     * @param scheduleAssignmentMap<br/>\n    +     * @return The remaining amount of memory<br/>\n    +     */<br/>\n    +    private Double getWorkerScheduledMemoryAvailable(WorkerSlot ws, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) </p>\n{\n    +Double memScheduleUsed = this.getWorkerScheduledMemoryUse(ws, td, scheduleAssignmentMap);\n    +return td.getTopologyWorkerMaxHeapSize() - memScheduleUsed;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Get the amount of memory already assigned to a worker<br/>\n    +     * @param ws<br/>\n    +     * @param td<br/>\n    +     * @param scheduleAssignmentMap<br/>\n    +     * @return the amount of memory<br/>\n    +     */<br/>\n    +    private Double getWorkerScheduledMemoryUse(WorkerSlot ws, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) {<br/>\n    +Double totalMem = 0.0;<br/>\n    +Collection<ExecutorDetails> execs = scheduleAssignmentMap.get(ws);<br/>\n    +if(execs != null) {<br/>\n    +    for(ExecutorDetails exec : execs) </p>\n{\n    +totalMem += td.getTotalMemReqTask(exec);\n    +    }\n<p>    +} <br/>\n    +return totalMem;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Checks whether we can schedule an Executor exec on the worker slot ws<br/>\n    +     * @param exec<br/>\n    +     * @param ws<br/>\n    +     * @param td<br/>\n    +     * @param scheduleAssignmentMap<br/>\n    +     * @return a boolean: True denoting the exec can be scheduled on ws and false if it cannot<br/>\n    +     */<br/>\n    +    private boolean checkWorkerConstraints(ExecutorDetails exec, WorkerSlot ws, TopologyDetails td, Map<WorkerSlot, Collection<ExecutorDetails>> scheduleAssignmentMap) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    will add comment</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571357","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571357","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571357,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzEzNTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T03:00:52Z","updated_at":"2025-01-24T13:47:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#discussion_r41347451\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#discussion_r41347451</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/utils/Utils.java &#8212;<br/>\n    @@ -18,10 +18,7 @@<br/>\n     package backtype.storm.utils;</p>\n\n<p>     import backtype.storm.Config;<br/>\n    -import backtype.storm.generated.AuthorizationException;<br/>\n    -import backtype.storm.generated.ComponentCommon;<br/>\n    -import backtype.storm.generated.ComponentObject;<br/>\n    -import backtype.storm.generated.StormTopology;<br/>\n    +import backtype.storm.generated.*;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    will expand</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146066442","html_url":"https://github.com/apache/storm/pull/746#issuecomment-146066442","issue_url":"https://api.github.com/repos/apache/storm/issues/746","id":146066442,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjA2NjQ0Mg==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T03:09:32Z","updated_at":"2015-10-07T03:09:32Z","author_association":"CONTRIBUTOR","body":"@zhuoliu Thanks for your review.  I think just push a commit that I think address all your comments\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146066442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571367","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571367","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571367,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzEzNjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T03:09:34Z","updated_at":"2025-01-24T13:47:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#issuecomment-146066442\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#issuecomment-146066442</a></p>\n\n<p>    @zhuoliu Thanks for your review.  I think just push a commit that I think address all your comments</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612606665","html_url":"https://github.com/apache/storm/issues/4918#issuecomment-2612606665","issue_url":"https://api.github.com/repos/apache/storm/issues/4918","id":2612606665,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDY2NjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T07:42:28Z","updated_at":"2025-01-24T14:03:17Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/778\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/778</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612606665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146106627","html_url":"https://github.com/apache/storm/pull/667#issuecomment-146106627","issue_url":"https://api.github.com/repos/apache/storm/issues/667","id":146106627,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjEwNjYyNw==","user":{"login":"caishize","id":1617316,"node_id":"MDQ6VXNlcjE2MTczMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1617316?v=4","gravatar_id":"","url":"https://api.github.com/users/caishize","html_url":"https://github.com/caishize","followers_url":"https://api.github.com/users/caishize/followers","following_url":"https://api.github.com/users/caishize/following{/other_user}","gists_url":"https://api.github.com/users/caishize/gists{/gist_id}","starred_url":"https://api.github.com/users/caishize/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/caishize/subscriptions","organizations_url":"https://api.github.com/users/caishize/orgs","repos_url":"https://api.github.com/users/caishize/repos","events_url":"https://api.github.com/users/caishize/events{/privacy}","received_events_url":"https://api.github.com/users/caishize/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T08:02:12Z","updated_at":"2015-10-07T08:02:12Z","author_association":"NONE","body":"Yes,there's an update haven't been  submitted, but it still only works on an Linux operating system which has the  cgroup installed..\n\nSent from my iPhone\n\n> On Oct 3, 2015, at 11:46 PM, Robert (Bobby) Evans notifications@github.com wrote:\n> \n> @caishize Any update on this? I really would like to have cgroup support, and this should work really well with the resource aware scheduling we are working on, on another JIRA.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146106627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571369","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571369","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571369,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzEzNjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T08:56:20Z","updated_at":"2025-01-24T13:47:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user erikdw commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#discussion_r41366160\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#discussion_r41366160</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/scheduler/resource/strategies/IStrategy.java &#8212;<br/>\n    @@ -0,0 +1,37 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package backtype.storm.scheduler.resource.strategies;<br/>\n    +<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +import backtype.storm.scheduler.Topologies;<br/>\n    +import backtype.storm.scheduler.ExecutorDetails;<br/>\n    +import backtype.storm.scheduler.TopologyDetails;<br/>\n    +import backtype.storm.scheduler.WorkerSlot;<br/>\n    +import backtype.storm.scheduler.resource.RAS_Node;<br/>\n    +<br/>\n    +/**<br/>\n    + * An interface to for implementing different scheduling strategies for the resource aware scheduling<br/>\n    + * In the future stategies will be pluggable<br/>\n    + */<br/>\n    +public interface IStrategy {<br/>\n    +<br/>\n    +\tpublic Map<WorkerSlot, Collection<ExecutorDetails>> schedule(TopologyDetails td);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    this is either a tab (evil) or 8 spaces.  It seems most of this java code has 4 space indents.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571369/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612532251","html_url":"https://github.com/apache/storm/issues/4559#issuecomment-2612532251","issue_url":"https://api.github.com/repos/apache/storm/issues/4559","id":2612532251,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MzIyNTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T08:57:39Z","updated_at":"2025-01-24T13:28:18Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cody\">cody</a>:</i>\n<p>seems that storm.taobao.org has a zk error which causes the cluster page fail to load. <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=longda\" class=\"user-hover\" rel=\"longda\">Longda Feng</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612532251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571375","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571375","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571375,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzEzNzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T08:59:39Z","updated_at":"2025-01-24T13:47:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user erikdw commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#discussion_r41366483\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#discussion_r41366483</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/networktopography/DNSToSwitchMapping.java &#8212;<br/>\n    @@ -0,0 +1,50 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + *     <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.networktopography;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +/**<br/>\n    + * An interface that must be implemented to allow pluggable<br/>\n    + * DNS-name/IP-address to RackID resolvers.<br/>\n    + *<br/>\n    + */<br/>\n    +public interface DNSToSwitchMapping {<br/>\n    +  public final static String DEFAULT_RACK = \"/default-rack\";<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    please use consistent indentation.  The java code in the storm project seems to use 4-space indents.  This applies to this file as well as AbstractDNSToSwitchMapping.java.  Maybe others that I've missed with all the generated code making this a bit hard to read through.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571382","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571382","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571382,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzEzODI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T09:01:58Z","updated_at":"2025-01-24T13:47:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user erikdw commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#discussion_r41366711\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#discussion_r41366711</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/scheduler/Cluster.java &#8212;<br/>\n    @@ -438,6 +451,35 @@ public SupervisorDetails getSupervisorById(String nodeId) </p>\n{\n     return this.supervisors;\n }\n\n<p>    +    /*<br/>\n    +    * Note: Make sure the proper conf was passed into the Cluster constructor before calling this function<br/>\n    +    * It tries to load the proper network topography detection plugin specified in the config.<br/>\n    +    */<br/>\n    +    public Map<String, List<String>> getNetworkTopography() {<br/>\n    +if (networkTopography == null) {<br/>\n    +    networkTopography = new HashMap<String, List<String>>();<br/>\n    +    ArrayList<String> supervisorHostNames = new ArrayList<String>();<br/>\n    +    for (SupervisorDetails s : supervisors.values()) </p>\n{\n    +supervisorHostNames.add(s.getHost());\n    +    }\n<p>    +<br/>\n    +    String clazz = (String) conf.get(Config.STORM_NETWORK_TOPOGRAPHY_PLUGIN);<br/>\n    +    DNSToSwitchMapping topographyMapper = (DNSToSwitchMapping) Utils.newInstance(clazz);<br/>\n    +<br/>\n    +    Map <String,String> resolvedSuperVisors = topographyMapper.resolve(supervisorHostNames);<br/>\n    +    for(String hostName: resolvedSuperVisors.keySet()) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Please use consistent for/if/while styling.  i.e., most of your new code is `for(`, but some (see 9 lines above) is `for (`.   It <b>seems</b> like the storm project is more consistently using `for (`.<br/>\n    This comment also applies to the `){` at the end of various lines.  That should always be `) {` IMNSHO.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146187081","html_url":"https://github.com/apache/storm/pull/758#issuecomment-146187081","issue_url":"https://api.github.com/repos/apache/storm/issues/758","id":146187081,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjE4NzA4MQ==","user":{"login":"Crim","id":571653,"node_id":"MDQ6VXNlcjU3MTY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/571653?v=4","gravatar_id":"","url":"https://api.github.com/users/Crim","html_url":"https://github.com/Crim","followers_url":"https://api.github.com/users/Crim/followers","following_url":"https://api.github.com/users/Crim/following{/other_user}","gists_url":"https://api.github.com/users/Crim/gists{/gist_id}","starred_url":"https://api.github.com/users/Crim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Crim/subscriptions","organizations_url":"https://api.github.com/users/Crim/orgs","repos_url":"https://api.github.com/users/Crim/repos","events_url":"https://api.github.com/users/Crim/events{/privacy}","received_events_url":"https://api.github.com/users/Crim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T12:50:27Z","updated_at":"2015-10-07T12:50:27Z","author_association":"CONTRIBUTOR","body":"+1 running into this issue as well\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146187081/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607226","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607226","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607226,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDcyMjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T14:35:27Z","updated_at":"2025-01-24T14:03:32Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#discussion_r41397418\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#discussion_r41397418</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/validation/ConfigValidation.java &#8212;<br/>\n    @@ -0,0 +1,359 @@<br/>\n    +package backtype.storm.validation;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Needs that Apache header.  Also not completely sure why we changed the package.  Not important though.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607232","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607232","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607232,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDcyMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T14:35:54Z","updated_at":"2025-01-24T14:03:32Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#discussion_r41397489\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#discussion_r41397489</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/validation/ConfigValidation.java &#8212;<br/>\n    @@ -0,0 +1,359 @@<br/>\n    +package backtype.storm.validation;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.lang.annotation.Annotation;<br/>\n    +import java.lang.reflect.Field;<br/>\n    +import java.lang.reflect.InvocationTargetException;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +<br/>\n    +/**<br/>\n    + * Created by jerrypeng on 10/1/15.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Please provide a description of the class instead of your name and date.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607232/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607239","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607239","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607239,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDcyMzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T14:50:59Z","updated_at":"2025-01-24T14:03:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#discussion_r41399571\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#discussion_r41399571</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/validation/ConfigValidation.java &#8212;<br/>\n    @@ -0,0 +1,359 @@<br/>\n    +package backtype.storm.validation;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I created another package because I added a couple other files related to config validation</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607239/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607245","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607245","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607245,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDcyNDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T14:52:26Z","updated_at":"2025-01-24T14:03:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#discussion_r41399786\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#discussion_r41399786</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/validation/ConfigValidation.java &#8212;<br/>\n    @@ -0,0 +1,359 @@<br/>\n    +package backtype.storm.validation;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.lang.annotation.Annotation;<br/>\n    +import java.lang.reflect.Field;<br/>\n    +import java.lang.reflect.InvocationTargetException;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +<br/>\n    +/**<br/>\n    + * Created by jerrypeng on 10/1/15.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    will add</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146227524","html_url":"https://github.com/apache/storm/pull/758#issuecomment-146227524","issue_url":"https://api.github.com/repos/apache/storm/issues/758","id":146227524,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjIyNzUyNA==","user":{"login":"prokopowicz","id":6181084,"node_id":"MDQ6VXNlcjYxODEwODQ=","avatar_url":"https://avatars.githubusercontent.com/u/6181084?v=4","gravatar_id":"","url":"https://api.github.com/users/prokopowicz","html_url":"https://github.com/prokopowicz","followers_url":"https://api.github.com/users/prokopowicz/followers","following_url":"https://api.github.com/users/prokopowicz/following{/other_user}","gists_url":"https://api.github.com/users/prokopowicz/gists{/gist_id}","starred_url":"https://api.github.com/users/prokopowicz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prokopowicz/subscriptions","organizations_url":"https://api.github.com/users/prokopowicz/orgs","repos_url":"https://api.github.com/users/prokopowicz/repos","events_url":"https://api.github.com/users/prokopowicz/events{/privacy}","received_events_url":"https://api.github.com/users/prokopowicz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T15:18:21Z","updated_at":"2015-10-07T15:18:21Z","author_association":"NONE","body":"I issued this JIRA regarding the bug:\n\nhttps://issues.apache.org/jira/browse/STORM-1094\n\nOn Tue, Oct 6, 2015 at 3:40 PM, Jungtaek Lim notifications@github.com\nwrote:\n\n> +1, too.\n> @prokopowicz https://github.com/prokopowicz\n> Since this is a bug, I'd like to record this to JIRA issue before merging.\n> Could you file a JIRA, please?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/storm/pull/758#issuecomment-145993674.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146227524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609006","html_url":"https://github.com/apache/storm/issues/4932#issuecomment-2612609006","issue_url":"https://api.github.com/repos/apache/storm/issues/4932","id":2612609006,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDkwMDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T15:18:22Z","updated_at":"2025-01-24T14:04:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user prokopowicz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/758#issuecomment-146227524\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/758#issuecomment-146227524</a></p>\n\n<p>    I issued this JIRA regarding the bug:</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1094\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1094</a></p>\n\n\n<p>    On Tue, Oct 6, 2015 at 3:40 PM, Jungtaek Lim <notifications@github.com><br/>\n    wrote:</p>\n\n<p>    > +1, too.<br/>\n    > @prokopowicz <<a href=\"https://github.com/prokopowicz\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/prokopowicz</a>><br/>\n    > Since this is a bug, I'd like to record this to JIRA issue before merging.<br/>\n    > Could you file a JIRA, please?<br/>\n    ><br/>\n    > —<br/>\n    > Reply to this email directly or view it on GitHub<br/>\n    > <<a href=\"https://github.com/apache/storm/pull/758#issuecomment-145993674\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/758#issuecomment-145993674</a>>.<br/>\n    ></p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571385","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571385","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571385,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzEzODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T16:07:16Z","updated_at":"2025-01-24T13:47:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#discussion_r41409816\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#discussion_r41409816</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/scheduler/resource/strategies/IStrategy.java &#8212;<br/>\n    @@ -0,0 +1,37 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package backtype.storm.scheduler.resource.strategies;<br/>\n    +<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +import backtype.storm.scheduler.Topologies;<br/>\n    +import backtype.storm.scheduler.ExecutorDetails;<br/>\n    +import backtype.storm.scheduler.TopologyDetails;<br/>\n    +import backtype.storm.scheduler.WorkerSlot;<br/>\n    +import backtype.storm.scheduler.resource.RAS_Node;<br/>\n    +<br/>\n    +/**<br/>\n    + * An interface to for implementing different scheduling strategies for the resource aware scheduling<br/>\n    + * In the future stategies will be pluggable<br/>\n    + */<br/>\n    +public interface IStrategy {<br/>\n    +<br/>\n    +\tpublic Map<WorkerSlot, Collection<ExecutorDetails>> schedule(TopologyDetails td);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    will reformate</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571390","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571390","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571390,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzEzOTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T16:09:10Z","updated_at":"2025-01-24T13:47:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#discussion_r41410090\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#discussion_r41410090</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/networktopography/DNSToSwitchMapping.java &#8212;<br/>\n    @@ -0,0 +1,50 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + *     <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.networktopography;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +/**<br/>\n    + * An interface that must be implemented to allow pluggable<br/>\n    + * DNS-name/IP-address to RackID resolvers.<br/>\n    + *<br/>\n    + */<br/>\n    +public interface DNSToSwitchMapping {<br/>\n    +  public final static String DEFAULT_RACK = \"/default-rack\";<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    will reformat</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571390/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146246638","html_url":"https://github.com/apache/storm/pull/785#issuecomment-146246638","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":146246638,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjI0NjYzOA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T16:09:29Z","updated_at":"2015-10-07T16:09:29Z","author_association":"CONTRIBUTOR","body":"@jerrypeng \nI keep going back and forth on how we want the annotations to work. Right now they are more or less a one to one translation of what we had before.  Admittedly it is a lot cleaner than it was before, but I almost want to combine some of the validators together.  Like\n\n```\n@IntegerValidator(min=0, nullAllowed=true)\npublic static final String SOME_CONFIG=\"some.config\";\n```\n\ninstead of\n\n```\n@PositiveIntegerValidator\npublic static final String SOME_CONFIG=\"some.config\";\n```\n\nI'm also not sure about having validator at the end of each annotation.  But I don't think we can have a validator named the same as a common class.  I want to think this through a bit more.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146246638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607248","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607248","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607248,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDcyNDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T16:09:30Z","updated_at":"2025-01-24T14:03:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-146246638\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-146246638</a></p>\n\n<p>    @jerrypeng <br/>\n    I keep going back and forth on how we want the annotations to work. Right now they are more or less a one to one translation of what we had before.  Admittedly it is a lot cleaner than it was before, but I almost want to combine some of the validators together.  Like</p>\n\n<p>    ```<br/>\n    @IntegerValidator(min=0, nullAllowed=true)<br/>\n    public static final String SOME_CONFIG=\"some.config\";<br/>\n    ```</p>\n\n<p>    instead of</p>\n\n<p>    ```<br/>\n    @PositiveIntegerValidator<br/>\n    public static final String SOME_CONFIG=\"some.config\";<br/>\n    ```</p>\n\n<p>    I'm also not sure about having validator at the end of each annotation.  But I don't think we can have a validator named the same as a common class.  I want to think this through a bit more.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607248/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146248606","html_url":"https://github.com/apache/storm/pull/785#issuecomment-146248606","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":146248606,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjI0ODYwNg==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T16:14:58Z","updated_at":"2015-10-07T16:18:25Z","author_association":"CONTRIBUTOR","body":"Well for some for annotations I call a common validator and just pass in the type that needs to be validated, such as @String @Boolean validators.  With the existing code, a user can set a nullAllowed value for every field that needs to be validated\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146248606/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607258","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607258","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607258,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDcyNTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T16:15:00Z","updated_at":"2025-01-24T14:03:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-146248606\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-146248606</a></p>\n\n<p>    Well for some for annotations I call a common validator and just pass in the type that needs to be validated, such as @String @Boolean validators.  </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607258/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146248821","html_url":"https://github.com/apache/storm/pull/785#issuecomment-146248821","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":146248821,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjI0ODgyMQ==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T16:15:52Z","updated_at":"2015-10-07T16:16:38Z","author_association":"CONTRIBUTOR","body":"Writing another validator like IntegerValidator(min=0, nullAllowed=true) is a trivial task, but I think we need to first focus on setting a standard of using annotations in general.  There could be a lot of refactoring done for the validator but I am not sure if that is in the scope of this Jira\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146248821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607266","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607266","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607266,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDcyNjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T16:15:53Z","updated_at":"2025-01-24T14:03:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-146248821\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-146248821</a></p>\n\n<p>    Writing another validator like IntegerValidator(min=0, nullAllowed=true) is a trivial task, but I think we need to first focus on setting a standard of using annotations in general.  There could be a lot of refactoring done for the validator's but I am not sure if that is in the scope of this Jira</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146249930","html_url":"https://github.com/apache/storm/pull/785#issuecomment-146249930","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":146249930,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjI0OTkzMA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T16:18:38Z","updated_at":"2015-10-07T16:18:38Z","author_association":"CONTRIBUTOR","body":"Could we use nested annotations for the complex types?\n\nhttps://blogs.oracle.com/toddfast/entry/creating_nested_complex_java_annotations\n\n```\n@MapType(key=@StringType, value=@NumberType)\npublic static final ...;\n```\n\ninstead of \n\n```\n@MapOfStringToNumberValidator\n```\n\nWe might be able to add in an `@Or`  annotation so we could get some of the complex validators to be built up from smaller validators.  So we don't need a once off Validator.\n\n```\n@StringOrStringListValidator\n```\n\nwould become \n\n```\n@OR(@StringType, @ListType(@StringType))\n```\n\nTo me this just gives users better options so they don't have to create custom validators and annotations whenever a new data structure is needed.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146249930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607267","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607267","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607267,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDcyNjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T16:18:40Z","updated_at":"2025-01-24T14:03:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-146249930\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-146249930</a></p>\n\n<p>    Could we use nested annotations for the complex types?</p>\n\n<p>    <a href=\"https://blogs.oracle.com/toddfast/entry/creating_nested_complex_java_annotations\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://blogs.oracle.com/toddfast/entry/creating_nested_complex_java_annotations</a></p>\n\n<p>    ```<br/>\n    @MapType(key=@StringType, value=@NumberType)<br/>\n    public static final ...;<br/>\n    ```</p>\n\n<p>    instead of </p>\n\n<p>    ```<br/>\n    @MapOfStringToNumberValidator<br/>\n    ```</p>\n\n<p>    We might be able to add in an `@Or`  annotation so we could get some of the complex validators to be built up from smaller validators.  So we don't need a once off Validator.</p>\n\n<p>    ```<br/>\n    @StringOrStringListValidator<br/>\n    ```<br/>\n    would become </p>\n\n<p>    ```<br/>\n    @OR(@StringType, @ListType(@StringType))<br/>\n    ```</p>\n\n<p>    To me this just gives users better options so they don't have to create custom validators and annotations whenever a new data structure is needed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146250340","html_url":"https://github.com/apache/storm/pull/785#issuecomment-146250340","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":146250340,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjI1MDM0MA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T16:20:27Z","updated_at":"2015-10-07T16:20:27Z","author_association":"CONTRIBUTOR","body":"@jerrypeng I agree that we want a base set of annotations, and we can adjust what they do.  I am just concerned about making that base set as flexible and complete as possible.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146250340/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607270","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607270","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607270,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDcyNzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T16:20:28Z","updated_at":"2025-01-24T14:03:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-146250340\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-146250340</a></p>\n\n<p>    @jerrypeng I agree that we want a base set of annotations, and we can adjust what they do.  I am just concerned about making that base set as flexible and complete as possible.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607270/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571398","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571398","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571398,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzEzOTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T16:26:14Z","updated_at":"2025-01-24T13:47:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#discussion_r41412262\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#discussion_r41412262</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/scheduler/Cluster.java &#8212;<br/>\n    @@ -438,6 +451,35 @@ public SupervisorDetails getSupervisorById(String nodeId) </p>\n{\n     return this.supervisors;\n }\n\n<p>    +    /*<br/>\n    +    * Note: Make sure the proper conf was passed into the Cluster constructor before calling this function<br/>\n    +    * It tries to load the proper network topography detection plugin specified in the config.<br/>\n    +    */<br/>\n    +    public Map<String, List<String>> getNetworkTopography() {<br/>\n    +if (networkTopography == null) {<br/>\n    +    networkTopography = new HashMap<String, List<String>>();<br/>\n    +    ArrayList<String> supervisorHostNames = new ArrayList<String>();<br/>\n    +    for (SupervisorDetails s : supervisors.values()) </p>\n{\n    +supervisorHostNames.add(s.getHost());\n    +    }\n<p>    +<br/>\n    +    String clazz = (String) conf.get(Config.STORM_NETWORK_TOPOGRAPHY_PLUGIN);<br/>\n    +    DNSToSwitchMapping topographyMapper = (DNSToSwitchMapping) Utils.newInstance(clazz);<br/>\n    +<br/>\n    +    Map <String,String> resolvedSuperVisors = topographyMapper.resolve(supervisorHostNames);<br/>\n    +    for(String hostName: resolvedSuperVisors.keySet()) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    will fix</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571398/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146266179","html_url":"https://github.com/apache/storm/pull/746#issuecomment-146266179","issue_url":"https://api.github.com/repos/apache/storm/issues/746","id":146266179,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjI2NjE3OQ==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T17:15:34Z","updated_at":"2015-10-07T17:15:34Z","author_association":"CONTRIBUTOR","body":"@erikdw thank you for your review.  I reformated some of the files based on your suggestions\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146266179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571402","html_url":"https://github.com/apache/storm/issues/4732#issuecomment-2612571402","issue_url":"https://api.github.com/repos/apache/storm/issues/4732","id":2612571402,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NzE0MDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T17:15:36Z","updated_at":"2025-01-24T13:47:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/746#issuecomment-146266179\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/746#issuecomment-146266179</a></p>\n\n<p>    @erikdw thank you for your review.  I reformated some of the files based on your suggestions</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612571402/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146272172","html_url":"https://github.com/apache/storm/pull/785#issuecomment-146272172","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":146272172,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjI3MjE3Mg==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T17:38:04Z","updated_at":"2015-10-07T17:38:04Z","author_association":"CONTRIBUTOR","body":"@revans2 your suggestion are great, but the parameters passed into java annotations have to declared to be a specific type thus we could not have: \n\n@MapType(key=@StringType, value=@NumberType)\npublic static final ...;\n\nbut maybe something like:\n\n@MapType(key=@TypeValidator(type = String.class), value=@TypeValidator(type = Number.class))\npublic static final ...;\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146272172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607277","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607277","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607277,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDcyNzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T17:38:05Z","updated_at":"2025-01-24T14:03:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-146272172\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-146272172</a></p>\n\n<p>    @revans2 your suggestion are great, but the parameters passed into java annotations have to declared to be a specific type thus we could not have: </p>\n\n<p>    @MapType(key=@StringType, value=@NumberType)<br/>\n    public static final ...;</p>\n\n<p>    but maybe something like:</p>\n\n<p>    @MapType(key=@TypeValidator(type = String.class), value=@TypeValidator(type = Number.class))<br/>\n    public static final ...;</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609121","html_url":"https://github.com/apache/storm/issues/4933#issuecomment-2612609121","issue_url":"https://api.github.com/repos/apache/storm/issues/4933","id":2612609121,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDkxMjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T21:11:23Z","updated_at":"2025-01-24T14:04:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user mjsax opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/786\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/786</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1095\" title=\"Tuple.getSourceGlobalStreamid() has wrong camel-case naming\" class=\"issue-link\" data-issue-key=\"STORM-1095\"><del>STORM-1095</del></a> Tuple.getSourceGlobalStreamid() has wrong camel-case naming</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/mjsax/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/mjsax/storm</a> storm-1095</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/786.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/786.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #786</p>\n\n<hr />\n<p>commit f10b9d4d826ac25b32c1fc92f2da06af873a6cb8<br/>\nAuthor: mjsax <mjsax@informatik.hu-berlin.de><br/>\nDate:   2015-10-07T19:24:24Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1095\" title=\"Tuple.getSourceGlobalStreamid() has wrong camel-case naming\" class=\"issue-link\" data-issue-key=\"STORM-1095\"><del>STORM-1095</del></a> Tuple.getSourceGlobalStreamid() has wrong camel-case naming</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146341025","html_url":"https://github.com/apache/storm/pull/786#issuecomment-146341025","issue_url":"https://api.github.com/repos/apache/storm/issues/786","id":146341025,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjM0MTAyNQ==","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T21:39:56Z","updated_at":"2015-10-07T21:39:56Z","author_association":"MEMBER","body":"Should we consider overloading and deprecating vs. renaming to preserve backwards compatibility for the short term?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146341025/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609127","html_url":"https://github.com/apache/storm/issues/4933#issuecomment-2612609127","issue_url":"https://api.github.com/repos/apache/storm/issues/4933","id":2612609127,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDkxMjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T21:39:58Z","updated_at":"2025-01-24T14:04:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/786#issuecomment-146341025\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/786#issuecomment-146341025</a></p>\n\n<p>    Should we consider overloading and deprecating vs. renaming to preserve backwards compatibility for the short term?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609251","html_url":"https://github.com/apache/storm/issues/4934#issuecomment-2612609251","issue_url":"https://api.github.com/repos/apache/storm/issues/4934","id":2612609251,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDkyNTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T21:40:32Z","updated_at":"2025-01-24T14:04:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user revans2 opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/787\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/787</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1096\" title=\"UI tries to impersonate wrong user when getting topology conf for authorization, impersonation is allowed by default\" class=\"issue-link\" data-issue-key=\"STORM-1096\"><del>STORM-1096</del></a>: Fix some issues with impersonation on the UI</p>\n\n<p>    Conflicts:<br/>\n    \tstorm-core/src/clj/backtype/storm/ui/core.clj</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/revans2/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/revans2/incubator-storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1096\" title=\"UI tries to impersonate wrong user when getting topology conf for authorization, impersonation is allowed by default\" class=\"issue-link\" data-issue-key=\"STORM-1096\"><del>STORM-1096</del></a>-0.10.x</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/787.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/787.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #787</p>\n\n<hr />\n<p>commit b4806113a7b06a93ea737f681e966701397e539c<br/>\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com><br/>\nDate:   2015-10-07T21:03:38Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1096\" title=\"UI tries to impersonate wrong user when getting topology conf for authorization, impersonation is allowed by default\" class=\"issue-link\" data-issue-key=\"STORM-1096\"><del>STORM-1096</del></a>: Fix some issues with impersonation on the UI</p>\n\n<p>    Conflicts:<br/>\n    \tstorm-core/src/clj/backtype/storm/ui/core.clj</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609256","html_url":"https://github.com/apache/storm/issues/4934#issuecomment-2612609256","issue_url":"https://api.github.com/repos/apache/storm/issues/4934","id":2612609256,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDkyNTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T21:40:34Z","updated_at":"2025-01-24T14:04:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user revans2 opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/788\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/788</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1096\" title=\"UI tries to impersonate wrong user when getting topology conf for authorization, impersonation is allowed by default\" class=\"issue-link\" data-issue-key=\"STORM-1096\"><del>STORM-1096</del></a>: Fix some issues with impersonation on the UI</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/revans2/incubator-storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/revans2/incubator-storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1096\" title=\"UI tries to impersonate wrong user when getting topology conf for authorization, impersonation is allowed by default\" class=\"issue-link\" data-issue-key=\"STORM-1096\"><del>STORM-1096</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/788.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/788.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #788</p>\n\n<hr />\n<p>commit 0476b92dd82e726adab200d5a77944a5f4f3883c<br/>\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com><br/>\nDate:   2015-10-07T21:03:38Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1096\" title=\"UI tries to impersonate wrong user when getting topology conf for authorization, impersonation is allowed by default\" class=\"issue-link\" data-issue-key=\"STORM-1096\"><del>STORM-1096</del></a>: Fix some issues with impersonation on the UI</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146343033","html_url":"https://github.com/apache/storm/pull/786#issuecomment-146343033","issue_url":"https://api.github.com/repos/apache/storm/issues/786","id":146343033,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjM0MzAzMw==","user":{"login":"mjsax","id":8959638,"node_id":"MDQ6VXNlcjg5NTk2Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/8959638?v=4","gravatar_id":"","url":"https://api.github.com/users/mjsax","html_url":"https://github.com/mjsax","followers_url":"https://api.github.com/users/mjsax/followers","following_url":"https://api.github.com/users/mjsax/following{/other_user}","gists_url":"https://api.github.com/users/mjsax/gists{/gist_id}","starred_url":"https://api.github.com/users/mjsax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjsax/subscriptions","organizations_url":"https://api.github.com/users/mjsax/orgs","repos_url":"https://api.github.com/users/mjsax/repos","events_url":"https://api.github.com/users/mjsax/events{/privacy}","received_events_url":"https://api.github.com/users/mjsax/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T21:49:25Z","updated_at":"2015-10-07T21:49:25Z","author_association":"MEMBER","body":"It's up to you. I had this issues in mind, too... API breaking changes might be inconvenient/problematic. Just let me know your decision.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146343033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609133","html_url":"https://github.com/apache/storm/issues/4933#issuecomment-2612609133","issue_url":"https://api.github.com/repos/apache/storm/issues/4933","id":2612609133,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDkxMzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T21:49:26Z","updated_at":"2025-01-24T14:04:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user mjsax commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/786#issuecomment-146343033\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/786#issuecomment-146343033</a></p>\n\n<p>    It's up to you. I had this issues in mind, too... API breaking changes might be inconvenient/problematic. Just let me know your decision.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146351227","html_url":"https://github.com/apache/storm/pull/786#issuecomment-146351227","issue_url":"https://api.github.com/repos/apache/storm/issues/786","id":146351227,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjM1MTIyNw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T22:30:09Z","updated_at":"2015-10-07T22:30:09Z","author_association":"CONTRIBUTOR","body":"@ptgoetz @mjsax \nIn order to keep backward compatibility, I think we need to decide when to break backward compatibility.\n\nAfter Storm 0.9.3, seems like we try to respect semver. (Right?)\nIf I'm right we can say that we'll break backward compatibility for each major version release. \nFirst version would be 1.0.0.\n\nWe can mark @Deprecated to legacy with leaving vaild reason and when to remove.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146351227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609136","html_url":"https://github.com/apache/storm/issues/4933#issuecomment-2612609136","issue_url":"https://api.github.com/repos/apache/storm/issues/4933","id":2612609136,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDkxMzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T22:30:11Z","updated_at":"2025-01-24T14:04:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/786#issuecomment-146351227\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/786#issuecomment-146351227</a></p>\n\n<p>    @ptgoetz @mjsax <br/>\n    In order to keep backward compatibility, I think we need to decide when to break backward compatibility.</p>\n\n<p>    After Storm 0.9.3, seems like we try to respect semver. (Right?)<br/>\n    If I'm right we can say that we'll break backward compatibility for each major version release. <br/>\n    First version would be 1.0.0.</p>\n\n<p>    We can mark @Deprecated to legacy with leaving vaild reason and when to remove.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146361062","html_url":"https://github.com/apache/storm/pull/786#issuecomment-146361062","issue_url":"https://api.github.com/repos/apache/storm/issues/786","id":146361062,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjM2MTA2Mg==","user":{"login":"mjsax","id":8959638,"node_id":"MDQ6VXNlcjg5NTk2Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/8959638?v=4","gravatar_id":"","url":"https://api.github.com/users/mjsax","html_url":"https://github.com/mjsax","followers_url":"https://api.github.com/users/mjsax/followers","following_url":"https://api.github.com/users/mjsax/following{/other_user}","gists_url":"https://api.github.com/users/mjsax/gists{/gist_id}","starred_url":"https://api.github.com/users/mjsax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjsax/subscriptions","organizations_url":"https://api.github.com/users/mjsax/orgs","repos_url":"https://api.github.com/users/mjsax/repos","events_url":"https://api.github.com/users/mjsax/events{/privacy}","received_events_url":"https://api.github.com/users/mjsax/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T23:07:43Z","updated_at":"2015-10-07T23:07:43Z","author_association":"MEMBER","body":"Just updated this PR.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146361062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609143","html_url":"https://github.com/apache/storm/issues/4933#issuecomment-2612609143","issue_url":"https://api.github.com/repos/apache/storm/issues/4933","id":2612609143,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDkxNDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-07T23:07:46Z","updated_at":"2025-01-24T14:04:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user mjsax commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/786#issuecomment-146361062\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/786#issuecomment-146361062</a></p>\n\n<p>    Just updated this PR.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612606671","html_url":"https://github.com/apache/storm/issues/4918#issuecomment-2612606671","issue_url":"https://api.github.com/repos/apache/storm/issues/4918","id":2612606671,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDY2NzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-08T06:14:22Z","updated_at":"2025-01-24T14:03:17Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=wheat9\">wheat9</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sriharsha\" class=\"user-hover\" rel=\"sriharsha\">Harsha</a> for the reviews and commits.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612606671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607618","html_url":"https://github.com/apache/storm/issues/4923#issuecomment-2612607618","issue_url":"https://api.github.com/repos/apache/storm/issues/4923","id":2612607618,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc2MTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-08T06:17:47Z","updated_at":"2025-01-24T14:03:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user haohui opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/789\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/789</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1085\" title=\"Compile comparison, arithmetic, and field reference expressions\" class=\"issue-link\" data-issue-key=\"STORM-1085\"><del>STORM-1085</del></a>. Compile comparison, arithmetic, and field reference expressions.</p>\n\n<p>    This PR augments the compilers to compile the comparison, arithmetic and field references in SQL expressions.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/haohui/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/haohui/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1085\" title=\"Compile comparison, arithmetic, and field reference expressions\" class=\"issue-link\" data-issue-key=\"STORM-1085\"><del>STORM-1085</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/789.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/789.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #789</p>\n\n<hr />\n<p>commit 739749196aeacb448fc12f017cbfa9dc7c61d41f<br/>\nAuthor: Haohui Mai <wheat9@apache.org><br/>\nDate:   2015-10-01T21:12:29Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1085\" title=\"Compile comparison, arithmetic, and field reference expressions\" class=\"issue-link\" data-issue-key=\"STORM-1085\"><del>STORM-1085</del></a>. Compile comparison, arithmetic, and field reference expressions.</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607618/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146548927","html_url":"https://github.com/apache/storm/pull/787#issuecomment-146548927","issue_url":"https://api.github.com/repos/apache/storm/issues/787","id":146548927,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjU0ODkyNw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-08T13:41:35Z","updated_at":"2015-10-08T13:41:35Z","author_association":"CONTRIBUTOR","body":"The test failure was the intermittent kafka issue.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146548927/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609262","html_url":"https://github.com/apache/storm/issues/4934#issuecomment-2612609262","issue_url":"https://api.github.com/repos/apache/storm/issues/4934","id":2612609262,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDkyNjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-08T13:41:36Z","updated_at":"2025-01-24T14:04:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/787#issuecomment-146548927\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/787#issuecomment-146548927</a></p>\n\n<p>    The test failure was the intermittent kafka issue.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146558088","html_url":"https://github.com/apache/storm/pull/787#issuecomment-146558088","issue_url":"https://api.github.com/repos/apache/storm/issues/787","id":146558088,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjU1ODA4OA==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-08T14:12:38Z","updated_at":"2015-10-08T14:12:38Z","author_association":"CONTRIBUTOR","body":"+1. Good catch.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146558088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609270","html_url":"https://github.com/apache/storm/issues/4934#issuecomment-2612609270","issue_url":"https://api.github.com/repos/apache/storm/issues/4934","id":2612609270,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDkyNzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-08T14:12:40Z","updated_at":"2025-01-24T14:04:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/787#issuecomment-146558088\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/787#issuecomment-146558088</a></p>\n\n<p>    +1. Good catch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612609270/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146558153","html_url":"https://github.com/apache/storm/pull/785#issuecomment-146558153","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":146558153,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjU1ODE1Mw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-08T14:12:55Z","updated_at":"2015-10-08T14:12:55Z","author_association":"CONTRIBUTOR","body":"hmmm.  You are right, and there is no inheritance in annotations.  So we cannot get that to work.  Let me think about it a bit more.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146558153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607284","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607284","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607284,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDcyODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-08T14:12:57Z","updated_at":"2025-01-24T14:03:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-146558153\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-146558153</a></p>\n\n<p>    hmmm.  You are right, and there is no inheritance in annotations.  So we cannot get that to work.  Let me think about it a bit more.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/146558244","html_url":"https://github.com/apache/storm/pull/788#issuecomment-146558244","issue_url":"https://api.github.com/repos/apache/storm/issues/788","id":146558244,"node_id":"MDEyOklzc3VlQ29tbWVudDE0NjU1ODI0NA==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-08T14:13:15Z","updated_at":"2015-10-08T14:13:15Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/146558244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]