[{"url":"https://api.github.com/repos/apache/storm/issues/comments/173776737","html_url":"https://github.com/apache/storm/pull/459#issuecomment-173776737","issue_url":"https://api.github.com/repos/apache/storm/issues/459","id":173776737,"node_id":"MDEyOklzc3VlQ29tbWVudDE3Mzc3NjczNw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T02:04:11Z","updated_at":"2016-01-22T02:04:11Z","author_association":"CONTRIBUTOR","body":"@knusbaum \nKindly reminder: are you still a -1 on this?\nIt may be better to write explicitly that any types can be here so that we can distinguish it is by intention and not missed to write type information.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/173776737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612534335","html_url":"https://github.com/apache/storm/issues/4575#issuecomment-2612534335","issue_url":"https://api.github.com/repos/apache/storm/issues/4575","id":2612534335,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MzQzMzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T02:37:49Z","updated_at":"2025-01-24T13:29:18Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Since we assume process is shutdown normally, I don't think we should call Runtime.halt(int) so that shutdown hook to be not called.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612534335/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/173798895","html_url":"https://github.com/apache/storm/pull/489#issuecomment-173798895","issue_url":"https://api.github.com/repos/apache/storm/issues/489","id":173798895,"node_id":"MDEyOklzc3VlQ29tbWVudDE3Mzc5ODg5NQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T03:55:02Z","updated_at":"2016-01-22T03:55:02Z","author_association":"CONTRIBUTOR","body":"Seems like issue is not valid cause we replace IOUtils.toString(processErrorStream) with processErrorStream.available().\nMaybe it was handled from another pull request.\n\nThen for me this PR just refactors duplicate codes.\nI think it is still fine, but not mandatory. And it should be treated to other issue since this issue is no longer valid.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/173798895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612534245","html_url":"https://github.com/apache/storm/issues/4574#issuecomment-2612534245","issue_url":"https://api.github.com/repos/apache/storm/issues/4574","id":2612534245,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MzQyNDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T03:55:03Z","updated_at":"2025-01-24T13:29:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/489#issuecomment-173798895\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/489#issuecomment-173798895</a></p>\n\n<p>    Seems like issue is not valid cause we replace IOUtils.toString(processErrorStream) with processErrorStream.available().<br/>\n    Maybe it was handled from another pull request.</p>\n\n<p>    Then for me this PR just refactors duplicate codes.<br/>\n    I think it is still fine, but not mandatory. And it should be treated to other issue since this issue is no longer valid.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612534245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/173799264","html_url":"https://github.com/apache/storm/pull/489#issuecomment-173799264","issue_url":"https://api.github.com/repos/apache/storm/issues/489","id":173799264,"node_id":"MDEyOklzc3VlQ29tbWVudDE3Mzc5OTI2NA==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T03:56:09Z","updated_at":"2016-01-22T03:56:09Z","author_association":"CONTRIBUTOR","body":"@reembs Would you like me to follow up this PR, or would you close it?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/173799264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612534249","html_url":"https://github.com/apache/storm/issues/4574#issuecomment-2612534249","issue_url":"https://api.github.com/repos/apache/storm/issues/4574","id":2612534249,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MzQyNDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T03:56:10Z","updated_at":"2025-01-24T13:29:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/489#issuecomment-173799264\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/489#issuecomment-173799264</a></p>\n\n<p>    @reembs Would you like me to follow up this PR, or would you close it?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612534249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612539685","html_url":"https://github.com/apache/storm/issues/4609#issuecomment-2612539685","issue_url":"https://api.github.com/repos/apache/storm/issues/4609","id":2612539685,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Mzk2ODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T04:07:43Z","updated_at":"2025-01-24T13:31:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>FYI: Travis CI - JDK version matrix (Oracle JDK 7 / 8) was applied to Apache Storm.<br/>\nI think we can close this issue.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612539685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/173801187","html_url":"https://github.com/apache/storm/pull/519#issuecomment-173801187","issue_url":"https://api.github.com/repos/apache/storm/issues/519","id":173801187,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzgwMTE4Nw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T04:09:07Z","updated_at":"2016-01-22T04:09:07Z","author_association":"CONTRIBUTOR","body":"IMO, since we're relying on JDK 7, we can close this pull request.\n@Lewuathe Could you please close this pull request, or would you don't mind that I close this?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/173801187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612539690","html_url":"https://github.com/apache/storm/issues/4609#issuecomment-2612539690","issue_url":"https://api.github.com/repos/apache/storm/issues/4609","id":2612539690,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Mzk2OTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T04:09:08Z","updated_at":"2025-01-24T13:31:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/519#issuecomment-173801187\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/519#issuecomment-173801187</a></p>\n\n<p>    IMO, since we're relying on JDK 7, we can close this pull request.<br/>\n    @Lewuathe Could you please close this pull request, or would you don't mind that I close this?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612539690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/173802479","html_url":"https://github.com/apache/storm/pull/519#issuecomment-173802479","issue_url":"https://api.github.com/repos/apache/storm/issues/519","id":173802479,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzgwMjQ3OQ==","user":{"login":"Lewuathe","id":1713047,"node_id":"MDQ6VXNlcjE3MTMwNDc=","avatar_url":"https://avatars.githubusercontent.com/u/1713047?v=4","gravatar_id":"","url":"https://api.github.com/users/Lewuathe","html_url":"https://github.com/Lewuathe","followers_url":"https://api.github.com/users/Lewuathe/followers","following_url":"https://api.github.com/users/Lewuathe/following{/other_user}","gists_url":"https://api.github.com/users/Lewuathe/gists{/gist_id}","starred_url":"https://api.github.com/users/Lewuathe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Lewuathe/subscriptions","organizations_url":"https://api.github.com/users/Lewuathe/orgs","repos_url":"https://api.github.com/users/Lewuathe/repos","events_url":"https://api.github.com/users/Lewuathe/events{/privacy}","received_events_url":"https://api.github.com/users/Lewuathe/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T04:23:25Z","updated_at":"2016-01-22T04:23:25Z","author_association":"CONTRIBUTOR","body":"Sure, I'll close this. Thanks.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/173802479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612539696","html_url":"https://github.com/apache/storm/issues/4609#issuecomment-2612539696","issue_url":"https://api.github.com/repos/apache/storm/issues/4609","id":2612539696,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Mzk2OTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T04:23:26Z","updated_at":"2025-01-24T13:31:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Lewuathe commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/519#issuecomment-173802479\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/519#issuecomment-173802479</a></p>\n\n<p>    Sure, I'll close this. Thanks.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612539696/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612539698","html_url":"https://github.com/apache/storm/issues/4609#issuecomment-2612539698","issue_url":"https://api.github.com/repos/apache/storm/issues/4609","id":2612539698,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Mzk2OTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T04:23:26Z","updated_at":"2025-01-24T13:31:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Lewuathe closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/519\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/519</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612539698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697565","html_url":"https://github.com/apache/storm/issues/5285#issuecomment-2612697565","issue_url":"https://api.github.com/repos/apache/storm/issues/5285","id":2612697565,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTc1NjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T06:08:47Z","updated_at":"2025-01-24T14:43:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user jerrypeng opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1033\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1033</a></p>\n\n<p>    Backport <a href=\"https://issues.apache.org/jira/browse/STORM-1450\" title=\"Fix bugs and refactor code in ResourceAwareScheduler\" class=\"issue-link\" data-issue-key=\"STORM-1450\"><del>STORM-1450</del></a> to Storm-1.x branch</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/jerrypeng/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/jerrypeng/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1450\" title=\"Fix bugs and refactor code in ResourceAwareScheduler\" class=\"issue-link\" data-issue-key=\"STORM-1450\"><del>STORM-1450</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1033.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1033.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1033</p>\n\n<hr />\n<p>commit 829ea117c8b382ef72d3c5df841534b89f06dffa<br/>\nAuthor: Boyang Jerry Peng <jerrypeng@yahoo-inc.com><br/>\nDate:   2016-01-13T18:28:38Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1450\" title=\"Fix bugs and refactor code in ResourceAwareScheduler\" class=\"issue-link\" data-issue-key=\"STORM-1450\"><del>STORM-1450</del></a> - Fix bugs and refactor code in ResourceAwareScheduler</p>\n\n<p>commit 688366902d98a7fdc17d854a33ff975c6a60ccab<br/>\nAuthor: Boyang Jerry Peng <jerrypeng@yahoo-inc.com><br/>\nDate:   2016-01-13T20:13:54Z</p>\n\n<p>    adding an additional test and cleaning up</p>\n\n<p>commit 4722c6f5d467c147996a027d00baf867cf6bc54d<br/>\nAuthor: Boyang Jerry Peng <jerrypeng@yahoo-inc.com><br/>\nDate:   2016-01-14T20:53:02Z</p>\n\n<p>    deleting unneccessary code</p>\n\n<p>commit 052941084bc7fcaee3d433d39d2bcc7a9953c69a<br/>\nAuthor: Boyang Jerry Peng <jerrypeng@yahoo-inc.com><br/>\nDate:   2016-01-15T05:33:28Z</p>\n\n<p>    edits based on comments</p>\n\n<p>commit e0e415fd10557bb79f9e0a53647086e71932429b<br/>\nAuthor: Boyang Jerry Peng <jerrypeng@yahoo-inc.com><br/>\nDate:   2016-01-22T06:07:20Z</p>\n\n<p>    added comment on a function</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697565/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/173821645","html_url":"https://github.com/apache/storm/pull/1016#issuecomment-173821645","issue_url":"https://api.github.com/repos/apache/storm/issues/1016","id":173821645,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzgyMTY0NQ==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T06:10:51Z","updated_at":"2016-01-22T06:10:51Z","author_association":"CONTRIBUTOR","body":"thanks @HeartSaVioR! I just put up a PR for the backport\n\nhttps://github.com/apache/storm/pull/1033\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/173821645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697573","html_url":"https://github.com/apache/storm/issues/5285#issuecomment-2612697573","issue_url":"https://api.github.com/repos/apache/storm/issues/5285","id":2612697573,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTc1NzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T06:10:52Z","updated_at":"2025-01-24T14:43:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1016#issuecomment-173821645\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1016#issuecomment-173821645</a></p>\n\n<p>    thanks @HeartSaVioR! I just put up a PR for the backport</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1033\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1033</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/173824017","html_url":"https://github.com/apache/storm/pull/1016#issuecomment-173824017","issue_url":"https://api.github.com/repos/apache/storm/issues/1016","id":173824017,"node_id":"MDEyOklzc3VlQ29tbWVudDE3MzgyNDAxNw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T06:27:59Z","updated_at":"2016-01-22T06:27:59Z","author_association":"CONTRIBUTOR","body":"@jerrypeng \nSorry I think I pushed merged commit to 1.x, but I forgot to merge branch then push only README commit. ;(\nSince 1.x-branch is not diverged to master yet, it doesn't require additional pull request to backport.\n\nIt's backported now. Could you check below commit and close #1033 if something is not wrong?\nhttps://github.com/apache/storm/commit/3e119eef2f5a81aca85ca9ee93a712cf0202ba0e\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/173824017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697577","html_url":"https://github.com/apache/storm/issues/5285#issuecomment-2612697577","issue_url":"https://api.github.com/repos/apache/storm/issues/5285","id":2612697577,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTc1Nzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T06:28:00Z","updated_at":"2025-01-24T14:43:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1016#issuecomment-173824017\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1016#issuecomment-173824017</a></p>\n\n<p>    @jerrypeng <br/>\n    Sorry I think I pushed merged commit to 1.x, but I forgot to merge branch then push only README commit. ;(<br/>\n    Since 1.x-branch is not diverged to master yet, it doesn't require additional pull request to backport.</p>\n\n<p>    It's backported now. Could you check below commit and close #1033 if something is not wrong?<br/>\n    <a href=\"https://github.com/apache/storm/commit/3e119eef2f5a81aca85ca9ee93a712cf0202ba0e\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/commit/3e119eef2f5a81aca85ca9ee93a712cf0202ba0e</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697577/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703751","html_url":"https://github.com/apache/storm/issues/5321#issuecomment-2612703751","issue_url":"https://api.github.com/repos/apache/storm/issues/5321","id":2612703751,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDM3NTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T10:07:23Z","updated_at":"2025-01-24T14:45:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user arunmahadevan opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1034\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1034</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1486\" title=\"Fix Storm-kafka documentation to reflect changes from STORM-1220\" class=\"issue-link\" data-issue-key=\"STORM-1486\"><del>STORM-1486</del></a> Fix storm-kafa documentation</p>\n\n<p>    Fix storm-kafka documentation to reflect changes from <a href=\"https://issues.apache.org/jira/browse/STORM-1220\" title=\"Avoid double copying in the Kafka spout\" class=\"issue-link\" data-issue-key=\"STORM-1220\"><del>STORM-1220</del></a> and also<br/>\n    document the version incompatiblity of pre 1.x kafka-spout with storm 1.0 and later.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/arunmahadevan/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/arunmahadevan/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1486\" title=\"Fix Storm-kafka documentation to reflect changes from STORM-1220\" class=\"issue-link\" data-issue-key=\"STORM-1486\"><del>STORM-1486</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1034.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1034.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1034</p>\n\n<hr />\n<p>commit 32258ebe1fb98908a985757702ddd41a5d3d0abc<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2016-01-22T10:00:04Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1486\" title=\"Fix Storm-kafka documentation to reflect changes from STORM-1220\" class=\"issue-link\" data-issue-key=\"STORM-1486\"><del>STORM-1486</del></a> Fix storm-kafa documentation</p>\n\n<p>    Fix storm-kafka documentation to reflect changes from <a href=\"https://issues.apache.org/jira/browse/STORM-1220\" title=\"Avoid double copying in the Kafka spout\" class=\"issue-link\" data-issue-key=\"STORM-1220\"><del>STORM-1220</del></a> and also<br/>\n    document the version incompatiblity of pre 1.x kafka-spout with storm 1.0 and later.</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/173947220","html_url":"https://github.com/apache/storm/pull/1034#issuecomment-173947220","issue_url":"https://api.github.com/repos/apache/storm/issues/1034","id":173947220,"node_id":"MDEyOklzc3VlQ29tbWVudDE3Mzk0NzIyMA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T15:17:03Z","updated_at":"2016-01-22T15:17:03Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/173947220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703754","html_url":"https://github.com/apache/storm/issues/5321#issuecomment-2612703754","issue_url":"https://api.github.com/repos/apache/storm/issues/5321","id":2612703754,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDM3NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T15:17:08Z","updated_at":"2025-01-24T14:45:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1034#issuecomment-173947220\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1034#issuecomment-173947220</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/173961349","html_url":"https://github.com/apache/storm/pull/1016#issuecomment-173961349","issue_url":"https://api.github.com/repos/apache/storm/issues/1016","id":173961349,"node_id":"MDEyOklzc3VlQ29tbWVudDE3Mzk2MTM0OQ==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T15:59:47Z","updated_at":"2016-01-22T15:59:47Z","author_association":"CONTRIBUTOR","body":"@HeartSaVioR thanks! everything looks correct.  I will close #1033\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/173961349/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697582","html_url":"https://github.com/apache/storm/issues/5285#issuecomment-2612697582","issue_url":"https://api.github.com/repos/apache/storm/issues/5285","id":2612697582,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTc1ODI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T15:59:48Z","updated_at":"2025-01-24T14:43:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1016#issuecomment-173961349\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1016#issuecomment-173961349</a></p>\n\n<p>    @HeartSaVioR thanks! everything looks correct.  I will close #1033</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697586","html_url":"https://github.com/apache/storm/issues/5285#issuecomment-2612697586","issue_url":"https://api.github.com/repos/apache/storm/issues/5285","id":2612697586,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTc1ODY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T16:00:08Z","updated_at":"2025-01-24T14:43:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1033\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1033</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612697586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470117","html_url":"https://github.com/apache/storm/issues/4191#issuecomment-2612470117","issue_url":"https://api.github.com/repos/apache/storm/issues/4191","id":2612470117,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NzAxMTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T16:01:37Z","updated_at":"2025-01-24T12:55:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/215#discussion_r50553677\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/215#discussion_r50553677</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/ui/core.clj &#8212;<br/>\n    @@ -47,33 +52,19 @@<br/>\n  <span class=\"error\">&#91;~nimbus-sym (*STORM-CONF* NIMBUS-HOST) (*STORM-CONF* NIMBUS-THRIFT-PORT)&#93;</span><br/>\n  ~@body))</p>\n\n<p>    -(defn authorized-ui-user?</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li><span class=\"error\">&#91;user conf topology-conf&#93;</span></li>\n\t<li>(let [ui-users (concat (conf UI-USERS)</li>\n\t<li>(conf NIMBUS-ADMINS)</li>\n\t<li>(topology-conf UI-USERS)</li>\n\t<li>(topology-conf TOPOLOGY-USERS))]</li>\n\t<li>(or (blank? (conf UI-FILTER))</li>\n\t<li>(and (not (blank? user))</li>\n\t<li>(some #(= % user) ui-users)))))<br/>\n    -<br/>\n    -(defn assert-authorized-ui-user</li>\n\t<li><span class=\"error\">&#91;user conf topology-conf&#93;</span></li>\n\t<li>(if (not (authorized-ui-user? user conf topology-conf))</li>\n\t<li>;;TODO need a better exception here so the UI can appear better</li>\n\t<li>(throw (RuntimeException. (str \"User \" user \" is not authorized.\")))))<br/>\n    -<br/>\n    <del>(defn</del> ui-actions-enabled?</li>\n\t<li>[]</li>\n\t<li>(= \"true\" (lower-case (<b>STORM-CONF</b> UI-ACTIONS-ENABLED))))\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    yes that was missed.  If you want to clean it up feel free to file a JIRA and do it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470119","html_url":"https://github.com/apache/storm/issues/4191#issuecomment-2612470119","issue_url":"https://api.github.com/repos/apache/storm/issues/4191","id":2612470119,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NzAxMTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T16:08:22Z","updated_at":"2025-01-24T12:55:58Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/215#discussion_r50554555\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/215#discussion_r50554555</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/ui/core.clj &#8212;<br/>\n    @@ -47,33 +52,19 @@<br/>\n  <span class=\"error\">&#91;~nimbus-sym (*STORM-CONF* NIMBUS-HOST) (*STORM-CONF* NIMBUS-THRIFT-PORT)&#93;</span><br/>\n  ~@body))</p>\n\n<p>    -(defn authorized-ui-user?</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li><span class=\"error\">&#91;user conf topology-conf&#93;</span></li>\n\t<li>(let [ui-users (concat (conf UI-USERS)</li>\n\t<li>(conf NIMBUS-ADMINS)</li>\n\t<li>(topology-conf UI-USERS)</li>\n\t<li>(topology-conf TOPOLOGY-USERS))]</li>\n\t<li>(or (blank? (conf UI-FILTER))</li>\n\t<li>(and (not (blank? user))</li>\n\t<li>(some #(= % user) ui-users)))))<br/>\n    -<br/>\n    -(defn assert-authorized-ui-user</li>\n\t<li><span class=\"error\">&#91;user conf topology-conf&#93;</span></li>\n\t<li>(if (not (authorized-ui-user? user conf topology-conf))</li>\n\t<li>;;TODO need a better exception here so the UI can appear better</li>\n\t<li>(throw (RuntimeException. (str \"User \" user \" is not authorized.\")))))<br/>\n    -<br/>\n    <del>(defn</del> ui-actions-enabled?</li>\n\t<li>[]</li>\n\t<li>(= \"true\" (lower-case (<b>STORM-CONF</b> UI-ACTIONS-ENABLED))))\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Agreed, good find.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174003350","html_url":"https://github.com/apache/storm/pull/1021#issuecomment-174003350","issue_url":"https://api.github.com/repos/apache/storm/issues/1021","id":174003350,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDAwMzM1MA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T18:32:31Z","updated_at":"2016-01-22T18:32:31Z","author_association":"CONTRIBUTOR","body":"+1 looks OK to me.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174003350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702339","html_url":"https://github.com/apache/storm/issues/5314#issuecomment-2612702339","issue_url":"https://api.github.com/repos/apache/storm/issues/5314","id":2612702339,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDIzMzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T18:32:34Z","updated_at":"2025-01-24T14:45:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1021#issuecomment-174003350\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1021#issuecomment-174003350</a></p>\n\n<p>    +1 looks OK to me.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174012240","html_url":"https://github.com/apache/storm/pull/1026#issuecomment-174012240","issue_url":"https://api.github.com/repos/apache/storm/issues/1026","id":174012240,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDAxMjI0MA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T18:58:27Z","updated_at":"2016-01-22T18:58:27Z","author_association":"CONTRIBUTOR","body":"First of all travis saw a compilation failure.\n\n```\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /home/travis/build/apache/storm/external/storm-kafka/src/jvm/org/apache/storm/kafka/KafkaSpout.java:[103,39] cannot find symbol\n  symbol:   method setLatestEmittedOffset(org.apache.storm.kafka.Partition,long)\n  location: variable _kafkaOffsetMetric of type org.apache.storm.kafka.KafkaUtils.KafkaOffsetMetric\n[ERROR] /home/travis/build/apache/storm/external/storm-kafka/src/jvm/org/apache/storm/kafka/trident/TridentKafkaEmitter.java:[68,27] cannot find symbol\n  symbol:   method setLatestEmittedOffset(org.apache.storm.kafka.Partition,java.lang.Long)\n  location: variable _kafkaOffsetMetric of type org.apache.storm.kafka.KafkaUtils.KafkaOffsetMetric\n```\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174012240/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698408","html_url":"https://github.com/apache/storm/issues/5290#issuecomment-2612698408","issue_url":"https://api.github.com/repos/apache/storm/issues/5290","id":2612698408,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTg0MDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T18:58:28Z","updated_at":"2025-01-24T14:43:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1026#issuecomment-174012240\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1026#issuecomment-174012240</a></p>\n\n<p>    First of all travis saw a compilation failure.<br/>\n    ```<br/>\n    <span class=\"error\">&#91;INFO&#93;</span> -------------------------------------------------------------<br/>\n    <span class=\"error\">&#91;ERROR&#93;</span> COMPILATION ERROR : <br/>\n    <span class=\"error\">&#91;INFO&#93;</span> -------------------------------------------------------------<br/>\n    <span class=\"error\">&#91;ERROR&#93;</span> /home/travis/build/apache/storm/external/storm-kafka/src/jvm/org/apache/storm/kafka/KafkaSpout.java:<span class=\"error\">&#91;103,39&#93;</span> cannot find symbol<br/>\n      symbol:   method setLatestEmittedOffset(org.apache.storm.kafka.Partition,long)<br/>\n      location: variable _kafkaOffsetMetric of type org.apache.storm.kafka.KafkaUtils.KafkaOffsetMetric<br/>\n    <span class=\"error\">&#91;ERROR&#93;</span> /home/travis/build/apache/storm/external/storm-kafka/src/jvm/org/apache/storm/kafka/trident/TridentKafkaEmitter.java:<span class=\"error\">&#91;68,27&#93;</span> cannot find symbol<br/>\n      symbol:   method setLatestEmittedOffset(org.apache.storm.kafka.Partition,java.lang.Long)<br/>\n      location: variable _kafkaOffsetMetric of type org.apache.storm.kafka.KafkaUtils.KafkaOffsetMetric<br/>\n    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698408/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174013629","html_url":"https://github.com/apache/storm/pull/1026#issuecomment-174013629","issue_url":"https://api.github.com/repos/apache/storm/issues/1026","id":174013629,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDAxMzYyOQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T19:04:27Z","updated_at":"2016-01-22T19:04:27Z","author_association":"CONTRIBUTOR","body":"Other then that it looks OK to me.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174013629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698413","html_url":"https://github.com/apache/storm/issues/5290#issuecomment-2612698413","issue_url":"https://api.github.com/repos/apache/storm/issues/5290","id":2612698413,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTg0MTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T19:04:27Z","updated_at":"2025-01-24T14:43:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1026#issuecomment-174013629\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1026#issuecomment-174013629</a></p>\n\n<p>    Other then that it looks OK to me.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633698","html_url":"https://github.com/apache/storm/issues/5052#issuecomment-2612633698","issue_url":"https://api.github.com/repos/apache/storm/issues/5052","id":2612633698,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzM2OTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T19:14:01Z","updated_at":"2025-01-24T14:15:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1029#discussion_r50577550\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1029#discussion_r50577550</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/trident/operation/Operation.java &#8212;<br/>\n    @@ -20,7 +20,26 @@<br/>\n     import java.io.Serializable;<br/>\n     import java.util.Map;</p>\n\n<p>    +/**<br/>\n    + * Parent interface for Trident `Filter`s and `Function`s.<br/>\n    + *<br/>\n    + * `Operation` defines two lifecycle methods for Trident components. The `prepare()` method is called once when the<br/>\n    + * `Operation` is first initialized. The `cleanup()` method is called in local mode when the local cluster is<br/>\n    + * being shut down.<br/>\n    + */<br/>\n     public interface Operation extends Serializable {<br/>\n    +    /**<br/>\n    +     * Called when the `Operation` is first initialized.<br/>\n    +     * @param conf the Storm configuration map<br/>\n    +     * @param context the operation context which provides information such as the number of partitions in the stream,<br/>\n    +     *and the current partition index. It also provides methods for registering operation-specific<br/>\n    +     *metrics.<br/>\n    +     * @see storm.trident.operation.TridentOperationContext<br/>\n    +     */<br/>\n void prepare(Map conf, TridentOperationContext context);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * When running in local mode, called when the local cluster is being shut down.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    ping? I am +1 after this is fixed</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633701","html_url":"https://github.com/apache/storm/issues/5052#issuecomment-2612633701","issue_url":"https://api.github.com/repos/apache/storm/issues/5052","id":2612633701,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzM3MDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T19:15:17Z","updated_at":"2025-01-24T14:15:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1029#discussion_r50577719\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1029#discussion_r50577719</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/trident/operation/Operation.java &#8212;<br/>\n    @@ -20,7 +20,26 @@<br/>\n     import java.io.Serializable;<br/>\n     import java.util.Map;</p>\n\n<p>    +/**<br/>\n    + * Parent interface for Trident `Filter`s and `Function`s.<br/>\n    + *<br/>\n    + * `Operation` defines two lifecycle methods for Trident components. The `prepare()` method is called once when the<br/>\n    + * `Operation` is first initialized. The `cleanup()` method is called in local mode when the local cluster is<br/>\n    + * being shut down.<br/>\n    + */<br/>\n     public interface Operation extends Serializable {<br/>\n    +    /**<br/>\n    +     * Called when the `Operation` is first initialized.<br/>\n    +     * @param conf the Storm configuration map<br/>\n    +     * @param context the operation context which provides information such as the number of partitions in the stream,<br/>\n    +     *and the current partition index. It also provides methods for registering operation-specific<br/>\n    +     *metrics.<br/>\n    +     * @see storm.trident.operation.TridentOperationContext<br/>\n    +     */<br/>\n void prepare(Map conf, TridentOperationContext context);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * When running in local mode, called when the local cluster is being shut down.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Never mind this is fine.  I missed the fix somehow.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174016131","html_url":"https://github.com/apache/storm/pull/1029#issuecomment-174016131","issue_url":"https://api.github.com/repos/apache/storm/issues/1029","id":174016131,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDAxNjEzMQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T19:15:19Z","updated_at":"2016-01-22T19:15:19Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174016131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633706","html_url":"https://github.com/apache/storm/issues/5052#issuecomment-2612633706","issue_url":"https://api.github.com/repos/apache/storm/issues/5052","id":2612633706,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzM3MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T19:15:21Z","updated_at":"2025-01-24T14:15:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1029#issuecomment-174016131\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1029#issuecomment-174016131</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649853","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612649853","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612649853,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDk4NTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T19:21:52Z","updated_at":"2025-01-24T14:22:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=knusbaum\">knusbaum</a>:</i>\n<p>Is this actively being worked on? If not I will pick this issue up.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174039448","html_url":"https://github.com/apache/storm/pull/1034#issuecomment-174039448","issue_url":"https://api.github.com/repos/apache/storm/issues/1034","id":174039448,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDAzOTQ0OA==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T20:36:47Z","updated_at":"2016-01-22T20:36:47Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174039448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703759","html_url":"https://github.com/apache/storm/issues/5321#issuecomment-2612703759","issue_url":"https://api.github.com/repos/apache/storm/issues/5321","id":2612703759,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDM3NTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T20:36:49Z","updated_at":"2025-01-24T14:45:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1034#issuecomment-174039448\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1034#issuecomment-174039448</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703759/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174048104","html_url":"https://github.com/apache/storm/pull/1029#issuecomment-174048104","issue_url":"https://api.github.com/repos/apache/storm/issues/1029","id":174048104,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDA0ODEwNA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T21:05:41Z","updated_at":"2016-01-22T21:05:41Z","author_association":"CONTRIBUTOR","body":"@ptgoetz can I assume that you want this in 1.x as well?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174048104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633710","html_url":"https://github.com/apache/storm/issues/5052#issuecomment-2612633710","issue_url":"https://api.github.com/repos/apache/storm/issues/5052","id":2612633710,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzM3MTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T21:05:43Z","updated_at":"2025-01-24T14:15:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1029#issuecomment-174048104\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1029#issuecomment-174048104</a></p>\n\n<p>    @ptgoetz can I assume that you want this in 1.x as well?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174062054","html_url":"https://github.com/apache/storm/pull/1029#issuecomment-174062054","issue_url":"https://api.github.com/repos/apache/storm/issues/1029","id":174062054,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDA2MjA1NA==","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T21:45:48Z","updated_at":"2016-01-22T21:45:48Z","author_association":"MEMBER","body":"@revans2 Yes, please.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174062054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633713","html_url":"https://github.com/apache/storm/issues/5052#issuecomment-2612633713","issue_url":"https://api.github.com/repos/apache/storm/issues/5052","id":2612633713,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzM3MTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T21:45:49Z","updated_at":"2025-01-24T14:15:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1029#issuecomment-174062054\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1029#issuecomment-174062054</a></p>\n\n<p>    @revans2 Yes, please.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633713/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643869","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643869","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643869,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM4Njk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:03:42Z","updated_at":"2025-01-24T14:19:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#discussion_r50597227\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#discussion_r50597227</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/ConfigUtils.java &#8212;<br/>\n    @@ -0,0 +1,678 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.validation.ConfigValidation;<br/>\n    +import org.apache.storm.generated.StormTopology;<br/>\n    +import org.apache.commons.io.FileUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.*;<br/>\n    +import java.lang.reflect.Field;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Collections;<br/>\n    +import java.net.URLEncoder;<br/>\n    +<br/>\n    +public class ConfigUtils {<br/>\n    +    private final static Logger LOG = LoggerFactory.getLogger(ConfigUtils.class);<br/>\n    +    public final static String RESOURCES_SUBDIR = \"resources\";<br/>\n    +    public final static String NIMBUS_DO_NOT_REASSIGN = \"NIMBUS-DO-NOT-REASSIGN\";<br/>\n    +    public static final String FILE_SEPARATOR = File.separator;<br/>\n    +<br/>\n    +    public static String getLogDir() {<br/>\n    +String dir;<br/>\n    +Map conf;<br/>\n    +if (System.getProperty(\"storm.log.dir\") != null) </p>\n{\n    +    dir = System.getProperty(\"storm.log.dir\");\n    +}\n<p> else if ((conf = readStormConfig()).get(\"storm.log.dir\") != null) </p>\n{\n    +    dir = String.valueOf(conf.get(\"storm.log.dir\"));\n    +}\n<p> else {<br/>\n    +    if (System.getProperty(\"storm.home\") != null) </p>\n{\n    +dir = System.getProperty(\"storm.home\") + FILE_SEPARATOR + \"logs\";\n    +    }\n<p> else </p>\n{\n    +dir = FILE_SEPARATOR + \"logs\";\n    +    }\n<p>    +}<br/>\n    +try </p>\n{\n    +    return new File(dir).getCanonicalPath();\n    +}\n<p> catch (IOException ex) </p>\n{\n    +    throw new IllegalArgumentException(\"Illegal storm.log.dir in conf: \" + dir);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String clojureConfigName(String name) </p>\n{\n    +return name.toUpperCase().replace(\"_\", \"-\");\n    +    }\n<p>    +<br/>\n    +    // ALL-CONFIGS is only used by executor.clj once, do we want to do it here? TODO<br/>\n    +    public static List<Object> All_CONFIGS() {<br/>\n    +List<Object> ret = new ArrayList<Object>();<br/>\n    +Config config = new Config();<br/>\n    +Class<?> ConfigClass = config.getClass();<br/>\n    +Field[] fields = ConfigClass.getFields();<br/>\n    +for (int i = 0; i < fields.length; i++) {<br/>\n    +    try </p>\n{\n    +Object obj = fields[i].get(null);\n    +ret.add(obj);\n    +    }\n<p> catch (IllegalArgumentException e) </p>\n{\n    +LOG.error(e.getMessage(), e);\n    +    } catch (IllegalAccessException e) {    +LOG.error(e.getMessage(), e);    +    }\n<p>    +}<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String clusterMode(Map conf) </p>\n{\n    +String mode = (String)conf.get(Config.STORM_CLUSTER_MODE);\n    +return mode;\n    +    }\n<p>    +<br/>\n    +    public static boolean isLocalMode(Map conf) {<br/>\n    +String mode = (String)conf.get(Config.STORM_CLUSTER_MODE);<br/>\n    +if (mode != null) {<br/>\n    +    if (\"local\".equals(mode)) </p>\n{\n    +return true;\n    +    }\n<p>    +    if (\"distributed\".equals(mode)) </p>\n{\n    +return false;\n    +    }\n<p>    +}<br/>\n    +throw new IllegalArgumentException(\"Illegal cluster mode in conf: \" + mode);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static int samplingRate(Map conf) {<br/>\n    +double rate = Utils.getDouble(conf.get(Config.TOPOLOGY_STATS_SAMPLE_RATE));<br/>\n    +if (rate != 0) </p>\n{\n    +    return (int) (1 / rate);\n    +}\n<p>    +throw new IllegalArgumentException(\"Illegal topology.stats.sample.rate in conf: \" + rate);<br/>\n    +    }<br/>\n    +<br/>\n    +    // public static mkStatsSampler // depends on Utils.evenSampler() TODO, this is sth we need to do after util<br/>\n    +    // public static readDefaultConfig // depends on Utils.clojurifyStructure and Utils.readDefaultConfig // TODO<br/>\n    +    // validate-configs-with-schemas is just a wrapper of ConfigValidation.validateFields(conf)<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedStormConfig mocked = new SetMockedStormConfig(conf)) </p>\n{\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedStormConfig. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedStormConfig implements Closeable {<br/>\n    +public SetMockedStormConfig(Map conf) {\n    +    mockedStormConfig = conf;\n    +}<br/>\n    +<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedStormConfig = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedStormConfig = null;<br/>\n    +    public static Map readStormConfig() {\n    +if (mockedStormConfig != null) return mockedStormConfig;\n    +Map conf = Utils.readStormConfig();\n    +ConfigValidation.validateFields(conf);\n    +return conf;\n    +    }<br/>\n    +<br/>\n    +    public static Map readYamlConfig(String name, boolean mustExist) {\n    +Map conf = Utils.findAndReadConfigFile(name, mustExist);\n    +ConfigValidation.validateFields(conf);\n    +return conf;\n    +    }<br/>\n    +<br/>\n    +    public static Map readYamlConfig(String name) {\n    +return  readYamlConfig(name, true);\n    +    }<br/>\n    +<br/>\n    +    public static String absoluteStormLocalDir(Map conf) {<br/>\n    +String stormHome = System.getProperty(\"storm.home\");<br/>\n    +String localDir = (String) conf.get(Config.STORM_LOCAL_DIR);<br/>\n    +if (localDir == null) {\n    +    return (stormHome + FILE_SEPARATOR + \"storm-local\");\n    +} else {<br/>\n    +    if (new File(localDir).isAbsolute()) {\n    +return localDir;\n    +    } else {\n    +return (stormHome + FILE_SEPARATOR + localDir);\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String absoluteHealthCheckDir(Map conf) {<br/>\n    +String stormHome = System.getProperty(\"storm.home\");<br/>\n    +String healthCheckDir = (String)conf.get(Config.STORM_HEALTH_CHECK_DIR);<br/>\n    +if (healthCheckDir == null) {\n    +    return (stormHome + FILE_SEPARATOR + \"healthchecks\");\n    +} else {<br/>\n    +    if (new File(healthCheckDir).isAbsolute()) {\n    +return healthCheckDir;\n    +    } else {\n    +return (stormHome + FILE_SEPARATOR + healthCheckDir);\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String masterLocalDir(Map conf) throws IOException {\n    +String ret = String.valueOf(conf.get(Config.STORM_LOCAL_DIR)) + FILE_SEPARATOR + \"nimbus\";\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormJarKey(String topologyId) {\n    +return (topologyId + \"-stormjar.jar\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormCodeKey(String topologyId) {\n    +return (topologyId + \"-stormcode.ser\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormConfKey(String topologyId) {\n    +return (topologyId + \"-stormconf.ser\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormDistRoot(Map conf) throws IOException {\n    +String ret = stormDistPath(masterLocalDir(conf));\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormDistRoot(Map conf, String stormId) throws IOException {\n    +return (masterStormDistRoot(conf) + FILE_SEPARATOR + stormId);\n    +    }<br/>\n    +<br/>\n    +    public static String stormDistPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +// we do this since to concat a null String will actually concat a \"null\", which is not the expected: \"\"<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return ret + FILE_SEPARATOR + \"stormdist\";<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map readSupervisorStormConfGivenPath(Map conf, String stormConfPath) throws  IOException {\n    +Map ret = new HashMap(conf);\n    +ret.putAll(Utils.fromCompressedJsonConf(FileUtils.readFileToByteArray(new File(stormConfPath))));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormJarPath(String stormRoot) {\n    +return (stormRoot + FILE_SEPARATOR + \"stormjar.jar\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterInbox(Map conf) throws IOException {\n    +String ret = masterLocalDir(conf) + FILE_SEPARATOR + \"inbox\";\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterInimbusDir(Map conf) throws IOException {\n    +return (masterLocalDir(conf) + FILE_SEPARATOR + \"inimbus\");\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorLocalDir mocked = new SetMockedSupervisorLocalDir(dir)) {    +    //    run test ...    +    // }\n<p>    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorLocalDir. dir)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorLocalDir implements Closeable {<br/>\n    +public SetMockedSupervisorLocalDir(String dir) </p>\n{\n    +    mockedSupervisorLocalDir = dir;\n    +}\n<p>    +@Override<br/>\n    +public void close() </p>\n{\n    +    mockedSupervisorLocalDir = null;\n    +}\n<p>    +    }<br/>\n    +    private static String mockedSupervisorLocalDir = null;<br/>\n    +    public static String supervisorLocalDir(Map conf) throws IOException {<br/>\n    +if (mockedSupervisorLocalDir != null) </p>\n{\n    +    return null;\n    +}<br/>\n    +String ret = absoluteStormLocalDir(conf) + FILE_SEPARATOR + \"supervisor\";<br/>\n    +FileUtils.forceMkdir(new File(ret));<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorIsupervisorDir(Map conf) throws IOException {\n    +return ((supervisorLocalDir(conf) + FILE_SEPARATOR + \"isupervisor\"));\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorStormDistRoot mocked = new SetMockedSupervisorStormDistRoot(conf)) {\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorStormDistRoot. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorStormDistRoot implements Closeable {<br/>\n    +public SetMockedSupervisorStormDistRoot(Map conf) {\n    +    mockedSupervisorStormDistRoot = conf;\n    +}<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedSupervisorStormDistRoot = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedSupervisorStormDistRoot = null;<br/>\n    +    public static String supervisorStormDistRoot(Map conf) throws IOException {<br/>\n    +if (mockedSupervisorStormDistRoot != null) {    +    return null;    +}\n<p>    +return stormDistPath(supervisorLocalDir(conf));<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormDistRoot(Map conf, String stormId) throws IOException {<br/>\n    +if (mockedSupervisorStormDistRoot != null) </p>\n{\n    +    return null;\n    +}\n<p>    +return supervisorStormDistRoot(conf) + FILE_SEPARATOR + URLEncoder.encode(stormId, \"UTF-8\");<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormJarPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +// we do this since to concat a null String will actually concat a \"null\", which is not the expected: \"\"<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Make sense, addressed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643869/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643873","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643873","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643873,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM4NzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:03:52Z","updated_at":"2025-01-24T14:19:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#discussion_r50597247\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#discussion_r50597247</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/ConfigUtils.java &#8212;<br/>\n    @@ -0,0 +1,678 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.validation.ConfigValidation;<br/>\n    +import org.apache.storm.generated.StormTopology;<br/>\n    +import org.apache.commons.io.FileUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.*;<br/>\n    +import java.lang.reflect.Field;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Collections;<br/>\n    +import java.net.URLEncoder;<br/>\n    +<br/>\n    +public class ConfigUtils {<br/>\n    +    private final static Logger LOG = LoggerFactory.getLogger(ConfigUtils.class);<br/>\n    +    public final static String RESOURCES_SUBDIR = \"resources\";<br/>\n    +    public final static String NIMBUS_DO_NOT_REASSIGN = \"NIMBUS-DO-NOT-REASSIGN\";<br/>\n    +    public static final String FILE_SEPARATOR = File.separator;<br/>\n    +<br/>\n    +    public static String getLogDir() {<br/>\n    +String dir;<br/>\n    +Map conf;<br/>\n    +if (System.getProperty(\"storm.log.dir\") != null) </p>\n{\n    +    dir = System.getProperty(\"storm.log.dir\");\n    +}\n<p> else if ((conf = readStormConfig()).get(\"storm.log.dir\") != null) </p>\n{\n    +    dir = String.valueOf(conf.get(\"storm.log.dir\"));\n    +}\n<p> else {<br/>\n    +    if (System.getProperty(\"storm.home\") != null) </p>\n{\n    +dir = System.getProperty(\"storm.home\") + FILE_SEPARATOR + \"logs\";\n    +    }\n<p> else </p>\n{\n    +dir = FILE_SEPARATOR + \"logs\";\n    +    }\n<p>    +}<br/>\n    +try </p>\n{\n    +    return new File(dir).getCanonicalPath();\n    +}\n<p> catch (IOException ex) </p>\n{\n    +    throw new IllegalArgumentException(\"Illegal storm.log.dir in conf: \" + dir);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String clojureConfigName(String name) </p>\n{\n    +return name.toUpperCase().replace(\"_\", \"-\");\n    +    }\n<p>    +<br/>\n    +    // ALL-CONFIGS is only used by executor.clj once, do we want to do it here? TODO<br/>\n    +    public static List<Object> All_CONFIGS() {<br/>\n    +List<Object> ret = new ArrayList<Object>();<br/>\n    +Config config = new Config();<br/>\n    +Class<?> ConfigClass = config.getClass();<br/>\n    +Field[] fields = ConfigClass.getFields();<br/>\n    +for (int i = 0; i < fields.length; i++) {<br/>\n    +    try </p>\n{\n    +Object obj = fields[i].get(null);\n    +ret.add(obj);\n    +    }\n<p> catch (IllegalArgumentException e) </p>\n{\n    +LOG.error(e.getMessage(), e);\n    +    } catch (IllegalAccessException e) {    +LOG.error(e.getMessage(), e);    +    }\n<p>    +}<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String clusterMode(Map conf) </p>\n{\n    +String mode = (String)conf.get(Config.STORM_CLUSTER_MODE);\n    +return mode;\n    +    }\n<p>    +<br/>\n    +    public static boolean isLocalMode(Map conf) {<br/>\n    +String mode = (String)conf.get(Config.STORM_CLUSTER_MODE);<br/>\n    +if (mode != null) {<br/>\n    +    if (\"local\".equals(mode)) </p>\n{\n    +return true;\n    +    }\n<p>    +    if (\"distributed\".equals(mode)) </p>\n{\n    +return false;\n    +    }\n<p>    +}<br/>\n    +throw new IllegalArgumentException(\"Illegal cluster mode in conf: \" + mode);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static int samplingRate(Map conf) {<br/>\n    +double rate = Utils.getDouble(conf.get(Config.TOPOLOGY_STATS_SAMPLE_RATE));<br/>\n    +if (rate != 0) </p>\n{\n    +    return (int) (1 / rate);\n    +}\n<p>    +throw new IllegalArgumentException(\"Illegal topology.stats.sample.rate in conf: \" + rate);<br/>\n    +    }<br/>\n    +<br/>\n    +    // public static mkStatsSampler // depends on Utils.evenSampler() TODO, this is sth we need to do after util<br/>\n    +    // public static readDefaultConfig // depends on Utils.clojurifyStructure and Utils.readDefaultConfig // TODO<br/>\n    +    // validate-configs-with-schemas is just a wrapper of ConfigValidation.validateFields(conf)<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedStormConfig mocked = new SetMockedStormConfig(conf)) </p>\n{\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedStormConfig. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedStormConfig implements Closeable {<br/>\n    +public SetMockedStormConfig(Map conf) {\n    +    mockedStormConfig = conf;\n    +}<br/>\n    +<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedStormConfig = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedStormConfig = null;<br/>\n    +    public static Map readStormConfig() {\n    +if (mockedStormConfig != null) return mockedStormConfig;\n    +Map conf = Utils.readStormConfig();\n    +ConfigValidation.validateFields(conf);\n    +return conf;\n    +    }<br/>\n    +<br/>\n    +    public static Map readYamlConfig(String name, boolean mustExist) {\n    +Map conf = Utils.findAndReadConfigFile(name, mustExist);\n    +ConfigValidation.validateFields(conf);\n    +return conf;\n    +    }<br/>\n    +<br/>\n    +    public static Map readYamlConfig(String name) {\n    +return  readYamlConfig(name, true);\n    +    }<br/>\n    +<br/>\n    +    public static String absoluteStormLocalDir(Map conf) {<br/>\n    +String stormHome = System.getProperty(\"storm.home\");<br/>\n    +String localDir = (String) conf.get(Config.STORM_LOCAL_DIR);<br/>\n    +if (localDir == null) {\n    +    return (stormHome + FILE_SEPARATOR + \"storm-local\");\n    +} else {<br/>\n    +    if (new File(localDir).isAbsolute()) {\n    +return localDir;\n    +    } else {\n    +return (stormHome + FILE_SEPARATOR + localDir);\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String absoluteHealthCheckDir(Map conf) {<br/>\n    +String stormHome = System.getProperty(\"storm.home\");<br/>\n    +String healthCheckDir = (String)conf.get(Config.STORM_HEALTH_CHECK_DIR);<br/>\n    +if (healthCheckDir == null) {\n    +    return (stormHome + FILE_SEPARATOR + \"healthchecks\");\n    +} else {<br/>\n    +    if (new File(healthCheckDir).isAbsolute()) {\n    +return healthCheckDir;\n    +    } else {\n    +return (stormHome + FILE_SEPARATOR + healthCheckDir);\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String masterLocalDir(Map conf) throws IOException {\n    +String ret = String.valueOf(conf.get(Config.STORM_LOCAL_DIR)) + FILE_SEPARATOR + \"nimbus\";\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormJarKey(String topologyId) {\n    +return (topologyId + \"-stormjar.jar\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormCodeKey(String topologyId) {\n    +return (topologyId + \"-stormcode.ser\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormConfKey(String topologyId) {\n    +return (topologyId + \"-stormconf.ser\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormDistRoot(Map conf) throws IOException {\n    +String ret = stormDistPath(masterLocalDir(conf));\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormDistRoot(Map conf, String stormId) throws IOException {\n    +return (masterStormDistRoot(conf) + FILE_SEPARATOR + stormId);\n    +    }<br/>\n    +<br/>\n    +    public static String stormDistPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +// we do this since to concat a null String will actually concat a \"null\", which is not the expected: \"\"<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return ret + FILE_SEPARATOR + \"stormdist\";<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map readSupervisorStormConfGivenPath(Map conf, String stormConfPath) throws  IOException {\n    +Map ret = new HashMap(conf);\n    +ret.putAll(Utils.fromCompressedJsonConf(FileUtils.readFileToByteArray(new File(stormConfPath))));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormJarPath(String stormRoot) {\n    +return (stormRoot + FILE_SEPARATOR + \"stormjar.jar\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterInbox(Map conf) throws IOException {\n    +String ret = masterLocalDir(conf) + FILE_SEPARATOR + \"inbox\";\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterInimbusDir(Map conf) throws IOException {\n    +return (masterLocalDir(conf) + FILE_SEPARATOR + \"inimbus\");\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorLocalDir mocked = new SetMockedSupervisorLocalDir(dir)) {    +    //    run test ...    +    // }\n<p>    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorLocalDir. dir)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorLocalDir implements Closeable {<br/>\n    +public SetMockedSupervisorLocalDir(String dir) </p>\n{\n    +    mockedSupervisorLocalDir = dir;\n    +}\n<p>    +@Override<br/>\n    +public void close() </p>\n{\n    +    mockedSupervisorLocalDir = null;\n    +}\n<p>    +    }<br/>\n    +    private static String mockedSupervisorLocalDir = null;<br/>\n    +    public static String supervisorLocalDir(Map conf) throws IOException {<br/>\n    +if (mockedSupervisorLocalDir != null) </p>\n{\n    +    return null;\n    +}<br/>\n    +String ret = absoluteStormLocalDir(conf) + FILE_SEPARATOR + \"supervisor\";<br/>\n    +FileUtils.forceMkdir(new File(ret));<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorIsupervisorDir(Map conf) throws IOException {\n    +return ((supervisorLocalDir(conf) + FILE_SEPARATOR + \"isupervisor\"));\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorStormDistRoot mocked = new SetMockedSupervisorStormDistRoot(conf)) {\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorStormDistRoot. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorStormDistRoot implements Closeable {<br/>\n    +public SetMockedSupervisorStormDistRoot(Map conf) {\n    +    mockedSupervisorStormDistRoot = conf;\n    +}<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedSupervisorStormDistRoot = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedSupervisorStormDistRoot = null;<br/>\n    +    public static String supervisorStormDistRoot(Map conf) throws IOException {<br/>\n    +if (mockedSupervisorStormDistRoot != null) {    +    return null;    +}\n<p>    +return stormDistPath(supervisorLocalDir(conf));<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormDistRoot(Map conf, String stormId) throws IOException {<br/>\n    +if (mockedSupervisorStormDistRoot != null) </p>\n{\n    +    return null;\n    +}<br/>\n    +return supervisorStormDistRoot(conf) + FILE_SEPARATOR + URLEncoder.encode(stormId, \"UTF-8\");<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormJarPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +// we do this since to concat a null String will actually concat a \"null\", which is not the expected: \"\"<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return (ret + FILE_SEPARATOR + \"stormjar.jar\");<br/>\n    +    }<br/>\n    +<br/>\n    +    /* Never get used TODO : may delete it*/<br/>\n    +    public static String supervisorStormMetaFilePath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +if (stormRoot != null) {    +    ret = stormRoot;    +}<br/>\n    +return (ret + FILE_SEPARATOR + \"storm-code-distributor.meta\");<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormCodePath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return (ret + FILE_SEPARATOR + \"stormcode.ser\");<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormConfPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +if (stormRoot != null) {    +    ret = stormRoot;    +}<br/>\n    +return (ret + FILE_SEPARATOR + \"stormconf.ser\");<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorTmpDir(Map conf) throws IOException {\n    +String ret = supervisorLocalDir(conf) + FILE_SEPARATOR + \"tmp\";\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormResourcesPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +// we do this since to concat a null String will actually concat a \"null\", which is not the expected: \"\"<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return (ret + FILE_SEPARATOR + RESOURCES_SUBDIR);<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorState mocked = new SetMockedSupervisorState(conf)) {\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorState. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorState implements Closeable {<br/>\n    +public SetMockedSupervisorState(Map conf) {\n    +    mockedSupervisorState = conf;\n    +}<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedSupervisorState = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedSupervisorState = null;<br/>\n    +    public static LocalState supervisorState(Map conf) throws IOException {<br/>\n    +if (mockedSupervisorState != null) {    +    return null;    +}\n<p>    +return new LocalState((supervisorLocalDir(conf) + FILE_SEPARATOR + \"localstate\"));<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedNimbusTopoHistoryState mocked = new SetMockedNimbusTopoHistoryState(conf)) </p>\n{\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedNimbusTopoHistoryState. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedNimbusTopoHistoryState implements Closeable {<br/>\n    +public SetMockedNimbusTopoHistoryState(Map conf) {\n    +    mockedNimbusTopoHistoryState = conf;\n    +}<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedNimbusTopoHistoryState = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedNimbusTopoHistoryState = null;<br/>\n    +    public static LocalState nimbusTopoHistoryState(Map conf) throws IOException {<br/>\n    +if (mockedNimbusTopoHistoryState != null) {\n    +    return null;\n    +}<br/>\n    +return new LocalState((masterLocalDir(conf) + FILE_SEPARATOR + \"history\"));<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorStormConf mocked = new SetMockedSupervisorStormConf(conf)) {    +    //    run test ...    +    // }\n<p>    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorStormConf. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorStormConf implements Closeable {<br/>\n    +public SetMockedSupervisorStormConf(Map conf) </p>\n{\n    +    mockedSupervisorStormConf = conf;\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void close() </p>\n{\n    +    mockedSupervisorStormConf = null;\n    +}\n<p>    +    }<br/>\n    +    private static Map mockedSupervisorStormConf = null;<br/>\n    +    public static Map readSupervisorStormConf(Map conf, String stormId) throws IOException {<br/>\n    +if (mockedSupervisorStormConf != null) </p>\n{\n    +    return mockedSupervisorStormConf;\n    +}\n<p>    +String stormRoot = supervisorStormDistRoot(conf, stormId);<br/>\n    +String confPath = supervisorStormConfPath(stormRoot);<br/>\n    +return readSupervisorStormConfGivenPath(conf, confPath);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static StormTopology readSupervisorTopology(Map conf, String stormId) throws IOException </p>\n{\n    +String stormRoot = supervisorStormDistRoot(conf, stormId);\n    +String topologyPath = supervisorStormCodePath(stormRoot);\n    +return Utils.deserialize(FileUtils.readFileToByteArray(new File(topologyPath)), StormTopology.class);\n    +    }\n<p>    +<br/>\n    +    public static String workerUserRoot(Map conf) </p>\n{\n    +return (absoluteStormLocalDir(conf) + FILE_SEPARATOR + \"workers-users\");\n    +    }\n<p>    +<br/>\n    +    /* Never get used TODO : may delete it*/<br/>\n    +    public static String workerUserFile(Map conf, String workerId) </p>\n{\n    +return (workerUserRoot(conf) + FILE_SEPARATOR + workerId);\n    +    }\n<p>    +<br/>\n    +    public static String getWorkerUser(Map conf, String workerId) {<br/>\n    +LOG.info(\"GET worker-user for {}\", workerId);<br/>\n    +File file = new File(workerUserFile(conf, workerId));<br/>\n    +<br/>\n    +try (InputStream in = new FileInputStream(file);<br/>\n    +     Reader reader = new InputStreamReader(in);<br/>\n    +     BufferedReader br = new BufferedReader(reader)<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/wink.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> {<br/>\n    +    StringBuilder sb = new StringBuilder();<br/>\n    +    int r;<br/>\n    +    while ((r = br.read()) != -1) </p>\n{\n    +char ch = (char)r;\n    +sb.append(ch);\n    +    }\n<p>    +    String ret = sb.toString().trim();<br/>\n    +    return ret;<br/>\n    +} catch (IOException e) {<br/>\n    +    LOG.error(\"Failed to get worker user for {}.\", workerId);<br/>\n    +    return null;<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String getIdFromBlobKey(String key) {<br/>\n    +if (key == null) return null;<br/>\n    +final String STORM_JAR_SUFFIX = \"-stormjar.jar\";<br/>\n    +final String STORM_CODE_SUFFIX = \"-stormcode.ser\";<br/>\n    +final String STORM_CONF_SUFFIX = \"-stormconf.ser\";<br/>\n    +<br/>\n    +String ret = null;<br/>\n    +if (key.endsWith(STORM_JAR_SUFFIX)) </p>\n{\n    +    ret = key.substring(0, key.length() - STORM_JAR_SUFFIX.length());\n    +}\n<p> else if (key.endsWith(STORM_CODE_SUFFIX)) </p>\n{\n    +    ret = key.substring(0, key.length() - STORM_CODE_SUFFIX.length());\n    +}\n<p> else if (key.endsWith(STORM_CONF_SUFFIX)) </p>\n{\n    +    ret = key.substring(0, key.length() - STORM_CONF_SUFFIX.length());\n    +}\n<p>    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedWorkerUserWSE mocked = new SetMockedWorkerUserWSE(conf)) </p>\n{\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedWorkerUserWSE. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedWorkerUserWSE implements Closeable {<br/>\n    +public SetMockedWorkerUserWSE(Map conf) {\n    +    mockedWorkerUserWSE = conf;\n    +}<br/>\n    +<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedWorkerUserWSE = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedWorkerUserWSE = null;<br/>\n    +    public static void setWorkerUserWSE(Map conf, String workerId, String user) throws IOException {<br/>\n    +if (mockedWorkerUserWSE != null) {\n    +    return;\n    +}<br/>\n    +LOG.info(\"SET worker-user {} {}\", workerId, user);<br/>\n    +File file = new File(workerUserFile(conf, workerId));<br/>\n    +file.getParentFile().mkdirs();<br/>\n    +<br/>\n    +try (FileWriter fw = new FileWriter(file);<br/>\n    +     BufferedWriter writer = new BufferedWriter(fw)<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/wink.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> {\n    +    writer.write(user);\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void removeWorkerUserWSE(Map conf, String workerId) {<br/>\n    +LOG.info(\"REMOVE worker-user {}\", workerId);<br/>\n    +new File(workerUserFile(conf, workerId)).delete();<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedWorkerArtifactsRoot mocked = new SetMockedWorkerArtifactsRoot(conf)) {    +    //    run test ...    +    // }\n<p>    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedWorkerArtifactsRoot. root)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedWorkerArtifactsRoot implements Closeable {<br/>\n    +public SetMockedWorkerArtifactsRoot(String root) </p>\n{\n    +    mockedWorkerArtifactsRoot = root;\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void close() </p>\n{\n    +    mockedWorkerArtifactsRoot = null;\n    +}\n<p>    +    }<br/>\n    +    private static String mockedWorkerArtifactsRoot = null;<br/>\n    +    public static String workerArtifactsRoot(Map conf) {<br/>\n    +if (mockedWorkerArtifactsRoot != null) </p>\n{\n    +    return mockedWorkerArtifactsRoot;\n    +}\n<p>    +String artifactsDir = (String)conf.get(Config.STORM_WORKERS_ARTIFACTS_DIR);<br/>\n    +if (artifactsDir == null) </p>\n{\n    +    return (getLogDir() + FILE_SEPARATOR + \"workers-artifacts\");\n    +}\n<p> else {<br/>\n    +    if (new File(artifactsDir).isAbsolute()) </p>\n{\n    +return artifactsDir;\n    +    }\n<p> else </p>\n{\n    +return (getLogDir() + FILE_SEPARATOR + artifactsDir);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String workerArtifactsRoot(Map conf, String id) {<br/>\n    +if (mockedWorkerArtifactsRoot != null) </p>\n{\n    +    // if the mockedWorkerArtifactsRoot is set, return its value no matter what\n    +    return mockedWorkerArtifactsRoot;\n    +}<br/>\n    +return (workerArtifactsRoot(conf) + FILE_SEPARATOR + id);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String workerArtifactsRoot(Map conf, String id, Integer port) {<br/>\n    +if (mockedWorkerArtifactsRoot != null) {    +    // if the mockedWorkerArtifactsRoot is set, return its value no matter what    +    return mockedWorkerArtifactsRoot;    +}\n<p>    +return (workerArtifactsRoot(conf, id) + FILE_SEPARATOR + port);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String workerArtifactsPidPath(Map conf, String id, Integer port) </p>\n{\n    +return (workerArtifactsRoot(conf, id, port) + FILE_SEPARATOR +  \"worker.pid\");\n    +    }\n<p>    +<br/>\n    +    public static File getLogMetaDataFile(String fname) </p>\n{\n    +String[] subStrings = fname.split(FILE_SEPARATOR); // TODO: does this work well on windows?\n    +String id = subStrings[0];\n    +Integer port = Integer.parseInt(subStrings[1]);\n    +return getLogMetaDataFile(Utils.readStormConfig(), id, port);\n    +    }\n<p>    +<br/>\n    +    public static File getLogMetaDataFile(Map conf, String id, Integer port) </p>\n{\n    +String fname = workerArtifactsRoot(conf, id, port) + FILE_SEPARATOR + \"worker.yaml\";\n    +return new File(fname);\n    +    }\n<p>    +<br/>\n    +    public static File getWorkerDirFromRoot(String logRoot, String id, Integer port) </p>\n{\n    +return new File((logRoot + FILE_SEPARATOR + id + FILE_SEPARATOR + port));\n    +    }\n<p>    +<br/>\n    +    public static String workerRoot(Map conf) </p>\n{\n    +return (absoluteStormLocalDir(conf) + FILE_SEPARATOR + \"workers\");\n    +    }\n<p>    +<br/>\n    +    public static String workerRoot(Map conf, String id) </p>\n{\n    +return (workerRoot(conf) + FILE_SEPARATOR + id);\n    +    }\n<p>    +<br/>\n    +    public static String workerPidsRoot(Map conf, String id) </p>\n{\n    +return (workerRoot(conf, id) + FILE_SEPARATOR + \"pids\");\n    +    }\n<p>    +<br/>\n    +    public static String workerPidPath(Map conf, String id, String pid) </p>\n{\n    +return (workerPidsRoot(conf, id) + FILE_SEPARATOR + pid);\n    +    }\n<p>    +<br/>\n    +    public static String workerHeartbeatsRoot(Map conf, String id) </p>\n{\n    +return (workerRoot(conf, id) + FILE_SEPARATOR + \"heartbeats\");\n    +    }\n<p>    +<br/>\n    +    public static LocalState workerState(Map conf, String id) throws IOException </p>\n{\n    +return new LocalState(workerHeartbeatsRoot(conf, id));\n    +    }\n<p>    +<br/>\n    +    public static Map overrideLoginConfigWithSystemProperty(Map conf) { // note that we delete the return value<br/>\n    +String loginConfFile = System.getProperty(\"java.security.auth.login.config\");<br/>\n    +if (loginConfFile != null) </p>\n{\n    +     conf.put(\"java.security.auth.login.config\", loginConfFile);\n    +}\n<p>    +return conf;<br/>\n    +    }<br/>\n    +<br/>\n    +    /* TODO: make sure test these two functions in manual tests */<br/>\n    +    public static List<String> getTopoLogsUsers(Map topologyConf) {<br/>\n    +List<String> logsUsers = (List<String>)topologyConf.get(Config.LOGS_USERS);<br/>\n    +List<String> topologyUsers = (List<String>)topologyConf.get(Config.TOPOLOGY_USERS);<br/>\n    +Set<String> mergedUsers = new HashSet<String>();<br/>\n    +if (logsUsers != null) {<br/>\n    +    for (String user : logsUsers) {<br/>\n    +if (user != null) </p>\n{\n    +    mergedUsers.add(user);\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +if (topologyUsers != null) {<br/>\n    +    for (String user : topologyUsers) {<br/>\n    +if (user != null) {    +    mergedUsers.add(user);    +}\n<p>    +    }<br/>\n    +}<br/>\n    +List<String> ret = new ArrayList<String>(mergedUsers);<br/>\n    +Collections.sort(ret);<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static List<String> getTopoLogsGroups(Map topologyConf) {<br/>\n    +List<String> logsGroups = (List<String>)topologyConf.get(Config.LOGS_GROUPS);<br/>\n    +List<String> topologyGroups = (List<String>)topologyConf.get(Config.TOPOLOGY_GROUPS);<br/>\n    +Set<String> mergedGroups = new HashSet<String>();<br/>\n    +if (logsGroups != null) {<br/>\n    +    for (String group : logsGroups) {<br/>\n    +if (group != null) </p>\n{\n    +    mergedGroups.add(group);\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +if (topologyGroups != null) {<br/>\n    +    for (String group : topologyGroups) {<br/>\n    +if (group != null) {    +    mergedGroups.add(group);    +}\n<p>    +    }<br/>\n    +}<br/>\n    +List<String> ret = new ArrayList<String>(mergedGroups);<br/>\n    +Collections.sort(ret);<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +}<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Addressed.</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643873/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633718","html_url":"https://github.com/apache/storm/issues/5052#issuecomment-2612633718","issue_url":"https://api.github.com/repos/apache/storm/issues/5052","id":2612633718,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzM3MTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:04:04Z","updated_at":"2025-01-24T14:15:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1029\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1029</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633718/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643881","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643881","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643881,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM4ODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:04:19Z","updated_at":"2025-01-24T14:19:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#discussion_r50597310\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#discussion_r50597310</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/ConfigUtils.java &#8212;<br/>\n    @@ -0,0 +1,678 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.validation.ConfigValidation;<br/>\n    +import org.apache.storm.generated.StormTopology;<br/>\n    +import org.apache.commons.io.FileUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.*;<br/>\n    +import java.lang.reflect.Field;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Collections;<br/>\n    +import java.net.URLEncoder;<br/>\n    +<br/>\n    +public class ConfigUtils {<br/>\n    +    private final static Logger LOG = LoggerFactory.getLogger(ConfigUtils.class);<br/>\n    +    public final static String RESOURCES_SUBDIR = \"resources\";<br/>\n    +    public final static String NIMBUS_DO_NOT_REASSIGN = \"NIMBUS-DO-NOT-REASSIGN\";<br/>\n    +    public static final String FILE_SEPARATOR = File.separator;<br/>\n    +<br/>\n    +    public static String getLogDir() {<br/>\n    +String dir;<br/>\n    +Map conf;<br/>\n    +if (System.getProperty(\"storm.log.dir\") != null) </p>\n{\n    +    dir = System.getProperty(\"storm.log.dir\");\n    +}\n<p> else if ((conf = readStormConfig()).get(\"storm.log.dir\") != null) </p>\n{\n    +    dir = String.valueOf(conf.get(\"storm.log.dir\"));\n    +}\n<p> else {<br/>\n    +    if (System.getProperty(\"storm.home\") != null) </p>\n{\n    +dir = System.getProperty(\"storm.home\") + FILE_SEPARATOR + \"logs\";\n    +    }\n<p> else </p>\n{\n    +dir = FILE_SEPARATOR + \"logs\";\n    +    }\n<p>    +}<br/>\n    +try </p>\n{\n    +    return new File(dir).getCanonicalPath();\n    +}\n<p> catch (IOException ex) </p>\n{\n    +    throw new IllegalArgumentException(\"Illegal storm.log.dir in conf: \" + dir);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String clojureConfigName(String name) </p>\n{\n    +return name.toUpperCase().replace(\"_\", \"-\");\n    +    }\n<p>    +<br/>\n    +    // ALL-CONFIGS is only used by executor.clj once, do we want to do it here? TODO<br/>\n    +    public static List<Object> All_CONFIGS() {<br/>\n    +List<Object> ret = new ArrayList<Object>();<br/>\n    +Config config = new Config();<br/>\n    +Class<?> ConfigClass = config.getClass();<br/>\n    +Field[] fields = ConfigClass.getFields();<br/>\n    +for (int i = 0; i < fields.length; i++) {<br/>\n    +    try </p>\n{\n    +Object obj = fields[i].get(null);\n    +ret.add(obj);\n    +    }\n<p> catch (IllegalArgumentException e) </p>\n{\n    +LOG.error(e.getMessage(), e);\n    +    } catch (IllegalAccessException e) {    +LOG.error(e.getMessage(), e);    +    }\n<p>    +}<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String clusterMode(Map conf) </p>\n{\n    +String mode = (String)conf.get(Config.STORM_CLUSTER_MODE);\n    +return mode;\n    +    }\n<p>    +<br/>\n    +    public static boolean isLocalMode(Map conf) {<br/>\n    +String mode = (String)conf.get(Config.STORM_CLUSTER_MODE);<br/>\n    +if (mode != null) {<br/>\n    +    if (\"local\".equals(mode)) </p>\n{\n    +return true;\n    +    }\n<p>    +    if (\"distributed\".equals(mode)) </p>\n{\n    +return false;\n    +    }\n<p>    +}<br/>\n    +throw new IllegalArgumentException(\"Illegal cluster mode in conf: \" + mode);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static int samplingRate(Map conf) {<br/>\n    +double rate = Utils.getDouble(conf.get(Config.TOPOLOGY_STATS_SAMPLE_RATE));<br/>\n    +if (rate != 0) </p>\n{\n    +    return (int) (1 / rate);\n    +}\n<p>    +throw new IllegalArgumentException(\"Illegal topology.stats.sample.rate in conf: \" + rate);<br/>\n    +    }<br/>\n    +<br/>\n    +    // public static mkStatsSampler // depends on Utils.evenSampler() TODO, this is sth we need to do after util<br/>\n    +    // public static readDefaultConfig // depends on Utils.clojurifyStructure and Utils.readDefaultConfig // TODO<br/>\n    +    // validate-configs-with-schemas is just a wrapper of ConfigValidation.validateFields(conf)<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedStormConfig mocked = new SetMockedStormConfig(conf)) </p>\n{\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedStormConfig. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedStormConfig implements Closeable {<br/>\n    +public SetMockedStormConfig(Map conf) {\n    +    mockedStormConfig = conf;\n    +}<br/>\n    +<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedStormConfig = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedStormConfig = null;<br/>\n    +    public static Map readStormConfig() {\n    +if (mockedStormConfig != null) return mockedStormConfig;\n    +Map conf = Utils.readStormConfig();\n    +ConfigValidation.validateFields(conf);\n    +return conf;\n    +    }<br/>\n    +<br/>\n    +    public static Map readYamlConfig(String name, boolean mustExist) {\n    +Map conf = Utils.findAndReadConfigFile(name, mustExist);\n    +ConfigValidation.validateFields(conf);\n    +return conf;\n    +    }<br/>\n    +<br/>\n    +    public static Map readYamlConfig(String name) {\n    +return  readYamlConfig(name, true);\n    +    }<br/>\n    +<br/>\n    +    public static String absoluteStormLocalDir(Map conf) {<br/>\n    +String stormHome = System.getProperty(\"storm.home\");<br/>\n    +String localDir = (String) conf.get(Config.STORM_LOCAL_DIR);<br/>\n    +if (localDir == null) {\n    +    return (stormHome + FILE_SEPARATOR + \"storm-local\");\n    +} else {<br/>\n    +    if (new File(localDir).isAbsolute()) {\n    +return localDir;\n    +    } else {\n    +return (stormHome + FILE_SEPARATOR + localDir);\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String absoluteHealthCheckDir(Map conf) {<br/>\n    +String stormHome = System.getProperty(\"storm.home\");<br/>\n    +String healthCheckDir = (String)conf.get(Config.STORM_HEALTH_CHECK_DIR);<br/>\n    +if (healthCheckDir == null) {\n    +    return (stormHome + FILE_SEPARATOR + \"healthchecks\");\n    +} else {<br/>\n    +    if (new File(healthCheckDir).isAbsolute()) {\n    +return healthCheckDir;\n    +    } else {\n    +return (stormHome + FILE_SEPARATOR + healthCheckDir);\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String masterLocalDir(Map conf) throws IOException {\n    +String ret = String.valueOf(conf.get(Config.STORM_LOCAL_DIR)) + FILE_SEPARATOR + \"nimbus\";\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormJarKey(String topologyId) {\n    +return (topologyId + \"-stormjar.jar\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormCodeKey(String topologyId) {\n    +return (topologyId + \"-stormcode.ser\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormConfKey(String topologyId) {\n    +return (topologyId + \"-stormconf.ser\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormDistRoot(Map conf) throws IOException {\n    +String ret = stormDistPath(masterLocalDir(conf));\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormDistRoot(Map conf, String stormId) throws IOException {\n    +return (masterStormDistRoot(conf) + FILE_SEPARATOR + stormId);\n    +    }<br/>\n    +<br/>\n    +    public static String stormDistPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +// we do this since to concat a null String will actually concat a \"null\", which is not the expected: \"\"<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return ret + FILE_SEPARATOR + \"stormdist\";<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map readSupervisorStormConfGivenPath(Map conf, String stormConfPath) throws  IOException {\n    +Map ret = new HashMap(conf);\n    +ret.putAll(Utils.fromCompressedJsonConf(FileUtils.readFileToByteArray(new File(stormConfPath))));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormJarPath(String stormRoot) {\n    +return (stormRoot + FILE_SEPARATOR + \"stormjar.jar\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterInbox(Map conf) throws IOException {\n    +String ret = masterLocalDir(conf) + FILE_SEPARATOR + \"inbox\";\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterInimbusDir(Map conf) throws IOException {\n    +return (masterLocalDir(conf) + FILE_SEPARATOR + \"inimbus\");\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorLocalDir mocked = new SetMockedSupervisorLocalDir(dir)) {    +    //    run test ...    +    // }\n<p>    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorLocalDir. dir)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorLocalDir implements Closeable {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Now go with Derek's proposal for static mocking.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643881/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643887","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643887","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643887,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM4ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:04:34Z","updated_at":"2025-01-24T14:19:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#discussion_r50597332\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#discussion_r50597332</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/ConfigUtils.java &#8212;<br/>\n    @@ -0,0 +1,678 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.validation.ConfigValidation;<br/>\n    +import org.apache.storm.generated.StormTopology;<br/>\n    +import org.apache.commons.io.FileUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.*;<br/>\n    +import java.lang.reflect.Field;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Collections;<br/>\n    +import java.net.URLEncoder;<br/>\n    +<br/>\n    +public class ConfigUtils {<br/>\n    +    private final static Logger LOG = LoggerFactory.getLogger(ConfigUtils.class);<br/>\n    +    public final static String RESOURCES_SUBDIR = \"resources\";<br/>\n    +    public final static String NIMBUS_DO_NOT_REASSIGN = \"NIMBUS-DO-NOT-REASSIGN\";<br/>\n    +    public static final String FILE_SEPARATOR = File.separator;<br/>\n    +<br/>\n    +    public static String getLogDir() {<br/>\n    +String dir;<br/>\n    +Map conf;<br/>\n    +if (System.getProperty(\"storm.log.dir\") != null) </p>\n{\n    +    dir = System.getProperty(\"storm.log.dir\");\n    +}\n<p> else if ((conf = readStormConfig()).get(\"storm.log.dir\") != null) </p>\n{\n    +    dir = String.valueOf(conf.get(\"storm.log.dir\"));\n    +}\n<p> else {<br/>\n    +    if (System.getProperty(\"storm.home\") != null) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Fixed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174067689","html_url":"https://github.com/apache/storm/pull/1029#issuecomment-174067689","issue_url":"https://api.github.com/repos/apache/storm/issues/1029","id":174067689,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDA2NzY4OQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:05:26Z","updated_at":"2016-01-22T22:05:26Z","author_association":"CONTRIBUTOR","body":"@ptgoetz I merged this to master and 1.x-branch but I am not going to resolve the JIRA because like you said you are not done yet, and there is more to do for this.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174067689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633723","html_url":"https://github.com/apache/storm/issues/5052#issuecomment-2612633723","issue_url":"https://api.github.com/repos/apache/storm/issues/5052","id":2612633723,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzM3MjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:05:26Z","updated_at":"2025-01-24T14:15:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1029#issuecomment-174067689\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1029#issuecomment-174067689</a></p>\n\n<p>    @ptgoetz I merged this to master and 1.x-branch but I am not going to resolve the JIRA because like you said you are not done yet, and there is more to do for this.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612633723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703763","html_url":"https://github.com/apache/storm/issues/5321#issuecomment-2612703763","issue_url":"https://api.github.com/repos/apache/storm/issues/5321","id":2612703763,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDM3NjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:08:31Z","updated_at":"2025-01-24T14:45:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1034\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1034</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703763/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174069422","html_url":"https://github.com/apache/storm/pull/1030#issuecomment-174069422","issue_url":"https://api.github.com/repos/apache/storm/issues/1030","id":174069422,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDA2OTQyMg==","user":{"login":"zhuoliu","id":11683054,"node_id":"MDQ6VXNlcjExNjgzMDU0","avatar_url":"https://avatars.githubusercontent.com/u/11683054?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuoliu","html_url":"https://github.com/zhuoliu","followers_url":"https://api.github.com/users/zhuoliu/followers","following_url":"https://api.github.com/users/zhuoliu/following{/other_user}","gists_url":"https://api.github.com/users/zhuoliu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuoliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuoliu/subscriptions","organizations_url":"https://api.github.com/users/zhuoliu/orgs","repos_url":"https://api.github.com/users/zhuoliu/repos","events_url":"https://api.github.com/users/zhuoliu/events{/privacy}","received_events_url":"https://api.github.com/users/zhuoliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:11:30Z","updated_at":"2016-01-22T22:11:30Z","author_association":"NONE","body":"Thanks @revans2 @d2r @knusbaum for all your thorough comments, I addressed them. And I've taken Derek's proposed static mocking to replace the previous one.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174069422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643894","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643894","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643894,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM4OTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:11:31Z","updated_at":"2025-01-24T14:19:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#issuecomment-174069422\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#issuecomment-174069422</a></p>\n\n<p>    Thanks @revans2 @d2r @knusbaum for all your thorough comments, I addressed them. And I've taken Derek's proposed static mocking to replace the previous one.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703766","html_url":"https://github.com/apache/storm/issues/5321#issuecomment-2612703766","issue_url":"https://api.github.com/repos/apache/storm/issues/5321","id":2612703766,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDM3NjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:12:11Z","updated_at":"2025-01-24T14:45:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=arunmahadevan\" class=\"user-hover\" rel=\"arunmahadevan\">Arun Mahadevan</a>,</p>\n\n<p>I merged this into master and 1.x-branch</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643900","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643900","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643900,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM5MDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:30:28Z","updated_at":"2025-01-24T14:19:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#discussion_r50600024\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#discussion_r50600024</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/testing/staticmocking/MockedConfigUtils.java &#8212;<br/>\n    @@ -0,0 +1,31 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one or more<br/>\n    + * contributor license agreements.  See the NOTICE file distributed with<br/>\n    + * this work for additional information regarding copyright ownership.<br/>\n    + * The ASF licenses this file to you under the Apache License, Version<br/>\n    + * 2.0 (the \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.testing.staticmocking;<br/>\n    +<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +<br/>\n    +public class MockedConfigUtils extends ConfigUtils implements AutoCloseable {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Can we add some documentation about how to use this, like we had in the previous mocking code?  This is really minor though.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174074220","html_url":"https://github.com/apache/storm/pull/1030#issuecomment-174074220","issue_url":"https://api.github.com/repos/apache/storm/issues/1030","id":174074220,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDA3NDIyMA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:32:31Z","updated_at":"2016-01-22T22:32:31Z","author_association":"CONTRIBUTOR","body":"Just one very very minor comment.  I am +1 on this either way.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174074220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643906","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643906","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643906,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM5MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:32:33Z","updated_at":"2025-01-24T14:19:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#issuecomment-174074220\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#issuecomment-174074220</a></p>\n\n<p>    Just one very very minor comment.  I am +1 on this either way.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643911","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643911","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643911,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM5MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:34:12Z","updated_at":"2025-01-24T14:19:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#discussion_r50600384\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#discussion_r50600384</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/testing/staticmocking/MockedConfigUtils.java &#8212;<br/>\n    @@ -0,0 +1,31 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one or more<br/>\n    + * contributor license agreements.  See the NOTICE file distributed with<br/>\n    + * this work for additional information regarding copyright ownership.<br/>\n    + * The ASF licenses this file to you under the Apache License, Version<br/>\n    + * 2.0 (the \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.testing.staticmocking;<br/>\n    +<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +<br/>\n    +public class MockedConfigUtils extends ConfigUtils implements AutoCloseable {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Derek's repository has a file <span class=\"error\">&#91;package-info.java&#93;</span>(<a href=\"https://github.com/d2r/storm/blob/56d48faac918123af46f1e021e38549fa6a4cf6c/storm-core/src/jvm/org/apache/storm/testing/staticmocking/package-info.java\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/d2r/storm/blob/56d48faac918123af46f1e021e38549fa6a4cf6c/storm-core/src/jvm/org/apache/storm/testing/staticmocking/package-info.java</a>), which shows how to use it. Do I need to include that within this pull request or wait util JIRA to do that? @d2r @revans2 </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643911/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703572","html_url":"https://github.com/apache/storm/issues/5320#issuecomment-2612703572","issue_url":"https://api.github.com/repos/apache/storm/issues/5320","id":2612703572,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDM1NzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:38:03Z","updated_at":"2025-01-24T14:45:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1027\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1027</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643915","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643915","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643915,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM5MTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:39:29Z","updated_at":"2025-01-24T14:19:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#discussion_r50600899\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#discussion_r50600899</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/testing/staticmocking/MockedConfigUtils.java &#8212;<br/>\n    @@ -0,0 +1,31 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one or more<br/>\n    + * contributor license agreements.  See the NOTICE file distributed with<br/>\n    + * this work for additional information regarding copyright ownership.<br/>\n    + * The ASF licenses this file to you under the Apache License, Version<br/>\n    + * 2.0 (the \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.testing.staticmocking;<br/>\n    +<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +<br/>\n    +public class MockedConfigUtils extends ConfigUtils implements AutoCloseable {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Yep, the above documentation file will go in with util translation (<a href=\"https://issues.apache.org/jira/browse/STORM-1226\" title=\"Port backtype.storm.util to java\" class=\"issue-link\" data-issue-key=\"STORM-1226\"><del>STORM-1226</del></a>)<a href=\"https://issues.apache.org/jira/browse/STORM-1226\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1226</a>.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174077171","html_url":"https://github.com/apache/storm/pull/1028#issuecomment-174077171","issue_url":"https://api.github.com/repos/apache/storm/issues/1028","id":174077171,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDA3NzE3MQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:40:30Z","updated_at":"2016-01-22T22:40:30Z","author_association":"CONTRIBUTOR","body":"@kishorvpatil I cherry-picked #1027 to the 1.x-branch and it was clean/trivial so I think you can just close this pull request. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174077171/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703578","html_url":"https://github.com/apache/storm/issues/5320#issuecomment-2612703578","issue_url":"https://api.github.com/repos/apache/storm/issues/5320","id":2612703578,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDM1Nzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:40:31Z","updated_at":"2025-01-24T14:45:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1028#issuecomment-174077171\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1028#issuecomment-174077171</a></p>\n\n<p>    @kishorvpatil I cherry-picked #1027 to the 1.x-branch and it was clean/trivial so I think you can just close this pull request. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703578/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703581","html_url":"https://github.com/apache/storm/issues/5320#issuecomment-2612703581","issue_url":"https://api.github.com/repos/apache/storm/issues/5320","id":2612703581,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDM1ODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:41:02Z","updated_at":"2025-01-24T14:45:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kishorvpatil\" class=\"user-hover\" rel=\"kishorvpatil\">Kishor Patil</a>,</p>\n\n<p>I merged this into master and 1.x-branch</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643918","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643918","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643918,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM5MTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:53:19Z","updated_at":"2025-01-24T14:19:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#discussion_r50602239\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#discussion_r50602239</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/ConfigUtils.java &#8212;<br/>\n    @@ -0,0 +1,711 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.validation.ConfigValidation;<br/>\n    +import org.apache.storm.generated.StormTopology;<br/>\n    +import org.apache.commons.io.FileUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.*;<br/>\n    +import java.lang.reflect.Field;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Collections;<br/>\n    +<br/>\n    +public class ConfigUtils {<br/>\n    +    private final static Logger LOG = LoggerFactory.getLogger(ConfigUtils.class);<br/>\n    +    public final static String RESOURCES_SUBDIR = \"resources\";<br/>\n    +    public final static String NIMBUS_DO_NOT_REASSIGN = \"NIMBUS-DO-NOT-REASSIGN\";<br/>\n    +    public static final String FILE_SEPARATOR = File.separator;<br/>\n    +    public final static String LOG_DIR;<br/>\n    +<br/>\n    +    static {<br/>\n    +String dir;<br/>\n    +Map conf;<br/>\n    +if (System.getProperty(\"storm.log.dir\") != null) </p>\n{\n    +    dir = System.getProperty(\"storm.log.dir\");\n    +}\n<p> else if ((conf = readStormConfig()).get(\"storm.log.dir\") != null) </p>\n{\n    +    dir = String.valueOf(conf.get(\"storm.log.dir\"));\n    +}\n<p> else {<br/>\n    +    if (System.getProperty(\"storm.home\") != null) </p>\n{\n    +dir = System.getProperty(\"storm.home\") + FILE_SEPARATOR + \"logs\";\n    +    }\n<p> else </p>\n{\n    +dir = FILE_SEPARATOR + \"logs\";\n    +    }\n<p>    +}<br/>\n    +try </p>\n{\n    +    LOG_DIR = new File(dir).getCanonicalPath();\n    +}\n<p> catch (IOException ex) </p>\n{\n    +    throw new IllegalArgumentException(\"Illegal storm.log.dir in conf: \" + dir);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String clojureConfigName(String name) </p>\n{\n    +return name.toUpperCase().replace(\"_\", \"-\");\n    +    }\n<p>    +<br/>\n    +    // ALL-CONFIGS is only used by executor.clj once, do we want to do it here? TODO<br/>\n    +    public static List<Object> All_CONFIGS() {<br/>\n    +List<Object> ret = new ArrayList<Object>();<br/>\n    +Config config = new Config();<br/>\n    +Class<?> ConfigClass = config.getClass();<br/>\n    +Field[] fields = ConfigClass.getFields();<br/>\n    +for (int i = 0; i < fields.length; i++) {<br/>\n    +    try </p>\n{\n    +Object obj = fields[i].get(null);\n    +ret.add(obj);\n    +    }\n<p> catch (IllegalArgumentException e) </p>\n{\n    +LOG.error(e.getMessage(), e);\n    +    } catch (IllegalAccessException e) {    +LOG.error(e.getMessage(), e);    +    }\n<p>    +}<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String clusterMode(Map conf) </p>\n{\n    +String mode = (String) conf.get(Config.STORM_CLUSTER_MODE);\n    +return mode;\n    +\n    +    }\n<p>    +<br/>\n    +    public static boolean isLocalMode(Map conf) {<br/>\n    +String mode = (String) conf.get(Config.STORM_CLUSTER_MODE);<br/>\n    +if (mode != null) {<br/>\n    +    if (\"local\".equals(mode)) </p>\n{\n    +return true;\n    +    }\n<p>    +    if (\"distributed\".equals(mode)) </p>\n{\n    +return false;\n    +    }\n<p>    +}<br/>\n    +throw new IllegalArgumentException(\"Illegal cluster mode in conf: \" + mode);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static int samplingRate(Map conf) {<br/>\n    +double rate = Utils.getDouble(conf.get(Config.TOPOLOGY_STATS_SAMPLE_RATE));<br/>\n    +if (rate != 0) </p>\n{\n    +    return (int) (1 / rate);\n    +}\n<p>    +throw new IllegalArgumentException(\"Illegal topology.stats.sample.rate in conf: \" + rate);<br/>\n    +    }<br/>\n    +<br/>\n    +    // public static mkStatsSampler // depends on Utils.evenSampler() TODO, this is sth we need to do after util<br/>\n    +    // public static readDefaultConfig // depends on Utils.clojurifyStructure and Utils.readDefaultConfig // TODO<br/>\n    +    // validate-configs-with-schemas is just a wrapper of ConfigValidation.validateFields(conf)<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedStormConfig mocked = new SetMockedStormConfig(conf)) </p>\n{\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedStormConfig. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedStormConfig implements Closeable {<br/>\n    +public SetMockedStormConfig(Map conf) {\n    +    mockedStormConfig = conf;\n    +}<br/>\n    +<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedStormConfig = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedStormConfig = null;<br/>\n    +    public static Map readStormConfig() {\n    +if (mockedStormConfig != null) return mockedStormConfig;\n    +Map conf = Utils.readStormConfig();\n    +ConfigValidation.validateFields(conf);\n    +return conf;\n    +    }<br/>\n    +<br/>\n    +    public static Map readYamlConfig(String name, boolean mustExist) {\n    +Map conf = Utils.findAndReadConfigFile(name, mustExist);\n    +ConfigValidation.validateFields(conf);\n    +return conf;\n    +    }<br/>\n    +<br/>\n    +    public static Map readYamlConfig(String name) {\n    +return  readYamlConfig(name, true);\n    +    }<br/>\n    +<br/>\n    +    public static String absoluteStormLocalDir(Map conf) {<br/>\n    +String stormHome = System.getProperty(\"storm.home\");<br/>\n    +String localDir = (String) conf.get(Config.STORM_LOCAL_DIR);<br/>\n    +if (localDir == null) {\n    +    return (stormHome + FILE_SEPARATOR + \"storm-local\");\n    +} else {<br/>\n    +    if (new File(localDir).isAbsolute()) {\n    +return localDir;\n    +    } else {\n    +return (stormHome + FILE_SEPARATOR + localDir);\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String absoluteHealthCheckDir(Map conf) {<br/>\n    +String stormHome = System.getProperty(\"storm.home\");<br/>\n    +String healthCheckDir = String.valueOf(conf.get(Config.STORM_HEALTH_CHECK_DIR));<br/>\n    +if (healthCheckDir.equals(\"null\")) {\n    +    return (stormHome + FILE_SEPARATOR + \"healthchecks\");\n    +} else {<br/>\n    +    if (new File(healthCheckDir).isAbsolute()) {\n    +return healthCheckDir;\n    +    } else {\n    +return (stormHome + FILE_SEPARATOR + healthCheckDir);\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String masterLocalDir(Map conf) throws IOException {<br/>\n    +String ret = String.valueOf(conf.get(Config.STORM_LOCAL_DIR)) + FILE_SEPARATOR + \"nimbus\";<br/>\n    +try {\n    +    FileUtils.forceMkdir(new File(ret));\n    +} catch (IOException e) {\n    +    LOG.error(\"Failed to create dir \" + ret, e);\n    +    throw e;\n    +}<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +<br/>\n    +    public static String masterStormJarKey(String topologyId) {\n    +return (topologyId + \"-stormjar.jar\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormCodeKey(String topologyId) {\n    +return (topologyId + \"-stormcode.ser\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormConfKey(String topologyId) {\n    +return (topologyId + \"-stormconf.ser\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormDistRoot(Map conf) throws IOException {\n    +String ret = stormDistPath(masterLocalDir(conf));\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormDistRoot(Map conf, String stormId) throws IOException {\n    +return (masterStormDistRoot(conf) + FILE_SEPARATOR + stormId);\n    +    }<br/>\n    +<br/>\n    +    public static String stormDistPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +// we do this since to concat a null String will actually concat a \"null\", which is not the expected: \"\"<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return ret + FILE_SEPARATOR + \"stormdist\";<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String stormTmpPath(String stormRoot) {\n    +return stormRoot + FILE_SEPARATOR + \"tmp\";\n    +    }<br/>\n    +<br/>\n    +    /* Never get used TODO : delete it*/<br/>\n    +    public static String masterTmpDir(Map conf) throws IOException {\n    +String ret = stormTmpPath(masterLocalDir(conf));\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static Map readSupervisorStormConfGivenPath(Map conf, String stormConfPath) throws  IOException {\n    +Map ret = new HashMap(conf);\n    +ret.putAll(Utils.fromCompressedJsonConf(FileUtils.readFileToByteArray(new File(stormConfPath))));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    /* Never get used TODO : may delete it*/<br/>\n    +    public static String masterStormMetaFilePath(String stormRoot) {\n    +return (stormRoot + FILE_SEPARATOR + \"storm-code-distributor.meta\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormJarPath(String stormRoot) {\n    +return (stormRoot + FILE_SEPARATOR + \"stormjar.jar\");\n    +    }<br/>\n    +<br/>\n    +    /* Never get used TODO : may delete it*/<br/>\n    +    public static String masterStormCodePath(String stormRoot) {\n    +return (stormRoot + FILE_SEPARATOR + \"stormcode.ser\");\n    +    }<br/>\n    +<br/>\n    +    /* Never get used TODO : may delete it*/<br/>\n    +    public static String masterStormConfPath(String stormRoot) {\n    +return (stormRoot + FILE_SEPARATOR + \"stormconf.ser\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterInbox(Map conf) throws IOException {<br/>\n    +String ret = masterLocalDir(conf) + FILE_SEPARATOR + \"inbox\";<br/>\n    +try {    +    FileUtils.forceMkdir(new File(ret));    +} catch (IOException e) {\n    +    LOG.error(\"Failed to create dir \" + ret, e);\n    +    throw e;\n    +}<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String masterInimbusDir(Map conf) throws IOException {\n    +return (masterLocalDir(conf) + FILE_SEPARATOR + \"inimbus\");\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorLocalDir mocked = new SetMockedSupervisorLocalDir(dir)) {    +    //    run test ...    +    // }\n<p>    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorLocalDir. dir)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorLocalDir implements Closeable {<br/>\n    +public SetMockedSupervisorLocalDir(String dir) </p>\n{\n    +    mockedSupervisorLocalDir = dir;\n    +}\n<p>    +@Override<br/>\n    +public void close() </p>\n{\n    +    mockedSupervisorLocalDir = null;\n    +}\n<p>    +    }<br/>\n    +    private static String mockedSupervisorLocalDir = null;<br/>\n    +    public static String supervisorLocalDir(Map conf) throws IOException {<br/>\n    +if (mockedSupervisorLocalDir != null) </p>\n{\n    +    return null;\n    +}<br/>\n    +String ret = absoluteStormLocalDir(conf) + FILE_SEPARATOR + \"supervisor\";<br/>\n    +FileUtils.forceMkdir(new File(ret));<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorIsupervisorDir(Map conf) throws IOException {\n    +return ((supervisorLocalDir(conf) + FILE_SEPARATOR + \"isupervisor\"));\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorStormDistRoot mocked = new SetMockedSupervisorStormDistRoot(conf)) {\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorStormDistRoot. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorStormDistRoot implements Closeable {<br/>\n    +public SetMockedSupervisorStormDistRoot(Map conf) {\n    +    mockedSupervisorStormDistRoot = conf;\n    +}<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedSupervisorStormDistRoot = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedSupervisorStormDistRoot = null;<br/>\n    +    public static String supervisorStormDistRoot(Map conf) throws IOException {<br/>\n    +if (mockedSupervisorStormDistRoot != null) {    +    return null;    +}\n<p>    +return stormDistPath(supervisorLocalDir(conf)); // TODO: no need to forceMake here?, clj does not.<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormDistRoot(Map conf, String stormId) throws IOException {<br/>\n    +if (mockedSupervisorStormDistRoot != null) </p>\n{\n    +    return null;\n    +}<br/>\n    +return supervisorStormDistRoot(conf) + FILE_SEPARATOR + stormId; // TODO: need to (url-encode storm-id)? Not.<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormJarPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +// we do this since to concat a null String will actually concat a \"null\", which is not the expected: \"\"<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return (ret + FILE_SEPARATOR + \"stormjar.jar\");<br/>\n    +    }<br/>\n    +<br/>\n    +    /* Never get used TODO : may delete it*/<br/>\n    +    public static String supervisorStormMetaFilePath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +if (stormRoot != null) {    +    ret = stormRoot;    +}<br/>\n    +return (ret + FILE_SEPARATOR + \"storm-code-distributor.meta\");<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormCodePath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return (ret + FILE_SEPARATOR + \"stormcode.ser\");<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormConfPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +if (stormRoot != null) {    +    ret = stormRoot;    +}<br/>\n    +return (ret + FILE_SEPARATOR + \"stormconf.ser\");<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorTmpDir(Map conf) throws IOException {\n    +String ret = supervisorLocalDir(conf) + FILE_SEPARATOR + \"tmp\";\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormResourcesPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +// we do this since to concat a null String will actually concat a \"null\", which is not the expected: \"\"<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return (ret + FILE_SEPARATOR + RESOURCES_SUBDIR);<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorState mocked = new SetMockedSupervisorState(conf)) {\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorState. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorState implements Closeable {<br/>\n    +public SetMockedSupervisorState(Map conf) {\n    +    mockedSupervisorState = conf;\n    +}<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedSupervisorState = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedSupervisorState = null;<br/>\n    +    public static LocalState supervisorState(Map conf) throws IOException {<br/>\n    +if (mockedSupervisorState != null) {    +    return null;    +}\n<p>    +return new LocalState((supervisorLocalDir(conf) + FILE_SEPARATOR + \"localstate\"));<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedNimbusTopoHistoryState mocked = new SetMockedNimbusTopoHistoryState(conf)) </p>\n{\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedNimbusTopoHistoryState. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedNimbusTopoHistoryState implements Closeable {<br/>\n    +public SetMockedNimbusTopoHistoryState(Map conf) {\n    +    mockedNimbusTopoHistoryState = conf;\n    +}<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedNimbusTopoHistoryState = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedNimbusTopoHistoryState = null;<br/>\n    +    public static LocalState nimbusTopoHistoryState(Map conf) throws IOException {<br/>\n    +if (mockedNimbusTopoHistoryState != null) {\n    +    return null;\n    +}<br/>\n    +return new LocalState((masterLocalDir(conf) + FILE_SEPARATOR + \"history\"));<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorStormConf mocked = new SetMockedSupervisorStormConf(conf)) {    +    //    run test ...    +    // }\n<p>    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorStormConf. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorStormConf implements Closeable {<br/>\n    +public SetMockedSupervisorStormConf(Map conf) </p>\n{\n    +    mockedSupervisorStormConf = conf;\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void close() </p>\n{\n    +    mockedSupervisorStormConf = null;\n    +}\n<p>    +    }<br/>\n    +    private static Map mockedSupervisorStormConf = null;<br/>\n    +    public static Map readSupervisorStormConf(Map conf, String stormId) throws IOException {<br/>\n    +if (mockedSupervisorStormConf != null) </p>\n{\n    +    return mockedSupervisorStormConf;\n    +}\n<p>    +String stormRoot = supervisorStormDistRoot(conf, stormId);<br/>\n    +String confPath = supervisorStormConfPath(stormRoot);<br/>\n    +return readSupervisorStormConfGivenPath(conf, confPath);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static StormTopology readSupervisorTopology(Map conf, String stormId) throws IOException </p>\n{\n    +String stormRoot = supervisorStormDistRoot(conf, stormId);\n    +String topologyPath = supervisorStormCodePath(stormRoot);\n    +return Utils.deserialize(FileUtils.readFileToByteArray(new File(topologyPath)), StormTopology.class);\n    +    }\n<p>    +<br/>\n    +    public static String workerUserRoot(Map conf) </p>\n{\n    +return (absoluteStormLocalDir(conf) + FILE_SEPARATOR + \"/workers-users\");\n    +    }\n<p>    +<br/>\n    +    /* Never get used TODO : may delete it*/<br/>\n    +    public static String workerUserFile(Map conf, String workerId) </p>\n{\n    +return (workerUserRoot(conf) + FILE_SEPARATOR + workerId);\n    +    }\n<p>    +<br/>\n    +    public static String getWorkerUser(Map conf, String workerId) {<br/>\n    +LOG.info(\"GET worker-user for {}\", workerId);<br/>\n    +File file = new File(workerUserFile(conf, workerId));<br/>\n    +<br/>\n    +try (InputStream in = new FileInputStream(file);<br/>\n    +     Reader reader = new InputStreamReader(in);<br/>\n    +     BufferedReader br = new BufferedReader(reader)<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/wink.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> {<br/>\n    +    StringBuilder sb = new StringBuilder();<br/>\n    +    int r;<br/>\n    +    while ((r = br.read()) != -1) </p>\n{\n    +char ch = (char)r;\n    +sb.append(ch);\n    +    }\n<p>    +    String ret = sb.toString().trim();<br/>\n    +    return ret;<br/>\n    +} catch (IOException e) </p>\n{\n    +    LOG.error(\"Failed to get worker user for \" + workerId + \".\");\n    +    return null;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String getIdFromBlobKey(String key) {<br/>\n    +if (key == null) return null;<br/>\n    +String ret = null;<br/>\n    +if (key.endsWith(\"-stormjar.jar\")) </p>\n{\n    +    ret = key.substring(0, key.length() - 13);\n    +}\n<p> else if (key.endsWith(\"-stormcode.ser\")) </p>\n{\n    +    ret = key.substring(0, key.length() - 14);\n    +} else if (key.endsWith(\"-stormconf.ser\")) {    +    ret = key.substring(0, key.length() - 14);    +}\n<p>    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedWorkerUserWSE mocked = new SetMockedWorkerUserWSE(conf)) </p>\n{\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedWorkerUserWSE. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedWorkerUserWSE implements Closeable {<br/>\n    +public SetMockedWorkerUserWSE(Map conf) {\n    +    mockedWorkerUserWSE = conf;\n    +}<br/>\n    +<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedWorkerUserWSE = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedWorkerUserWSE = null;<br/>\n    +    public static void setWorkerUserWSE(Map conf, String workerId, String user) throws IOException {<br/>\n    +if (mockedWorkerUserWSE != null) {\n    +    return;\n    +}<br/>\n    +LOG.info(\"SET worker-user {} {}\", workerId, user);<br/>\n    +File file = new File(workerUserFile(conf, workerId));<br/>\n    +file.getParentFile().mkdirs();<br/>\n    +<br/>\n    +try (FileWriter fw = new FileWriter(file);<br/>\n    +     BufferedWriter writer = new BufferedWriter(fw)<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/wink.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> {\n    +    writer.write(user);\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void removeWorkerUserWSE(Map conf, String workerId) {<br/>\n    +LOG.info(\"REMOVE worker-user {}\", workerId);<br/>\n    +new File(workerUserFile(conf, workerId)).delete();<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedWorkerArtifactsRoot mocked = new SetMockedWorkerArtifactsRoot(conf)) {    +    //    run test ...    +    // }\n<p>    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedWorkerArtifactsRoot. root)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedWorkerArtifactsRoot implements Closeable {<br/>\n    +public SetMockedWorkerArtifactsRoot(String root) </p>\n{\n    +    mockedWorkerArtifactsRoot = root;\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void close() </p>\n{\n    +    mockedWorkerArtifactsRoot = null;\n    +}\n<p>    +    }<br/>\n    +    private static String mockedWorkerArtifactsRoot = null;<br/>\n    +    public static String workerArtifactsRoot(Map conf) {<br/>\n    +if (mockedWorkerArtifactsRoot != null) </p>\n{\n    +    return mockedWorkerArtifactsRoot;\n    +}<br/>\n    +String artifactsDir = (String)conf.get(Config.STORM_WORKERS_ARTIFACTS_DIR);<br/>\n    +if (artifactsDir == null) {\n    +    return (LOG_DIR + FILE_SEPARATOR + \"workers-artifacts\");\n    +} else {<br/>\n    +    if (new File(artifactsDir).isAbsolute()) {\n    +return artifactsDir;\n    +    } else {\n    +return (LOG_DIR + FILE_SEPARATOR + artifactsDir);\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String workerArtifactsRoot(Map conf, String id) {<br/>\n    +if (mockedWorkerArtifactsRoot != null) {    +    return mockedWorkerArtifactsRoot;    +}\n<p>    +return (workerArtifactsRoot(conf) + FILE_SEPARATOR + id);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String workerArtifactsRoot(Map conf, String id, Integer port) {<br/>\n    +if (mockedWorkerArtifactsRoot != null) </p>\n{\n    +    return mockedWorkerArtifactsRoot;\n    +}\n<p>    +return (workerArtifactsRoot(conf, id) + FILE_SEPARATOR + port);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String workerArtifactsPidPath(Map conf, String id, Integer port) </p>\n{\n    +return (workerArtifactsRoot(conf, id, port) + FILE_SEPARATOR +  \"worker.pid\");\n    +    }\n<p>    +<br/>\n    +    public static File getLogMetaDataFile(String fname) </p>\n{\n    +String[] subStrings = fname.split(FILE_SEPARATOR); // TODO: does this work well on windows?\n    +String id = subStrings[0];\n    +Integer port = Integer.parseInt(subStrings[1]);\n    +return getLogMetaDataFile(Utils.readStormConfig(), id, port);\n    +    }\n<p>    +<br/>\n    +    public static File getLogMetaDataFile(Map conf, String id, Integer port) </p>\n{\n    +String fname = workerArtifactsRoot(conf, id, port) + FILE_SEPARATOR + \"worker.yaml\";\n    +return new File(fname);\n    +    }\n<p>    +<br/>\n    +    public static File getWorkerDirFromRoot(String logRoot, String id, Integer port) </p>\n{\n    +return new File((logRoot + FILE_SEPARATOR + id + FILE_SEPARATOR + port));\n    +    }\n<p>    +<br/>\n    +    public static String workerRoot(Map conf) </p>\n{\n    +return (absoluteStormLocalDir(conf) + FILE_SEPARATOR + \"workers\");\n    +    }\n<p>    +<br/>\n    +    public static String workerRoot(Map conf, String id) </p>\n{\n    +return (workerRoot(conf) + FILE_SEPARATOR + id);\n    +    }\n<p>    +<br/>\n    +    public static String workerPidsRoot(Map conf, String id) </p>\n{\n    +return (workerRoot(conf, id) + FILE_SEPARATOR + \"pids\");\n    +    }\n<p>    +<br/>\n    +    public static String workerPidPath(Map conf, String id, String pid) </p>\n{\n    +return (workerPidsRoot(conf, id) + FILE_SEPARATOR + pid);\n    +    }\n<p>    +<br/>\n    +    public static String workerHeartbeatsRoot(Map conf, String id) </p>\n{\n    +return (workerRoot(conf, id) + FILE_SEPARATOR + \"heartbeats\");\n    +    }\n<p>    +<br/>\n    +    public static LocalState workerState(Map conf, String id) throws IOException </p>\n{\n    +return new LocalState(workerHeartbeatsRoot(conf, id));\n    +    }\n<p>    +<br/>\n    +    public static Map overrideLoginConfigWithSystemProperty(Map conf) { // note that we delete the return value<br/>\n    +String loginConfFile = System.getProperty(\"java.security.auth.login.config\");<br/>\n    +if (loginConfFile != null) </p>\n{\n    +     conf.put(\"java.security.auth.login.config\", loginConfFile);\n    +}\n<p>    +return conf;<br/>\n    +    }<br/>\n    +<br/>\n    +    /* TODO: make sure test these two functions in manual tests */<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Manually Tested, passed. I will remove this TODO.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612699504","html_url":"https://github.com/apache/storm/issues/5298#issuecomment-2612699504","issue_url":"https://api.github.com/repos/apache/storm/issues/5298","id":2612699504,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTk1MDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:55:20Z","updated_at":"2025-01-24T14:44:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=satish.duggana\" class=\"user-hover\" rel=\"satish.duggana\">Satish Duggana</a>,</p>\n\n<p>I merged this into master and branch-1.x</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612699504/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643921","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643921","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643921,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM5MjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T22:58:30Z","updated_at":"2025-01-24T14:19:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#discussion_r50602689\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#discussion_r50602689</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/ConfigUtils.java &#8212;<br/>\n    @@ -0,0 +1,711 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.utils;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.validation.ConfigValidation;<br/>\n    +import org.apache.storm.generated.StormTopology;<br/>\n    +import org.apache.commons.io.FileUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.*;<br/>\n    +import java.lang.reflect.Field;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Collections;<br/>\n    +<br/>\n    +public class ConfigUtils {<br/>\n    +    private final static Logger LOG = LoggerFactory.getLogger(ConfigUtils.class);<br/>\n    +    public final static String RESOURCES_SUBDIR = \"resources\";<br/>\n    +    public final static String NIMBUS_DO_NOT_REASSIGN = \"NIMBUS-DO-NOT-REASSIGN\";<br/>\n    +    public static final String FILE_SEPARATOR = File.separator;<br/>\n    +    public final static String LOG_DIR;<br/>\n    +<br/>\n    +    static {<br/>\n    +String dir;<br/>\n    +Map conf;<br/>\n    +if (System.getProperty(\"storm.log.dir\") != null) </p>\n{\n    +    dir = System.getProperty(\"storm.log.dir\");\n    +}\n<p> else if ((conf = readStormConfig()).get(\"storm.log.dir\") != null) </p>\n{\n    +    dir = String.valueOf(conf.get(\"storm.log.dir\"));\n    +}\n<p> else {<br/>\n    +    if (System.getProperty(\"storm.home\") != null) </p>\n{\n    +dir = System.getProperty(\"storm.home\") + FILE_SEPARATOR + \"logs\";\n    +    }\n<p> else </p>\n{\n    +dir = FILE_SEPARATOR + \"logs\";\n    +    }\n<p>    +}<br/>\n    +try </p>\n{\n    +    LOG_DIR = new File(dir).getCanonicalPath();\n    +}\n<p> catch (IOException ex) </p>\n{\n    +    throw new IllegalArgumentException(\"Illegal storm.log.dir in conf: \" + dir);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String clojureConfigName(String name) </p>\n{\n    +return name.toUpperCase().replace(\"_\", \"-\");\n    +    }\n<p>    +<br/>\n    +    // ALL-CONFIGS is only used by executor.clj once, do we want to do it here? TODO<br/>\n    +    public static List<Object> All_CONFIGS() {<br/>\n    +List<Object> ret = new ArrayList<Object>();<br/>\n    +Config config = new Config();<br/>\n    +Class<?> ConfigClass = config.getClass();<br/>\n    +Field[] fields = ConfigClass.getFields();<br/>\n    +for (int i = 0; i < fields.length; i++) {<br/>\n    +    try </p>\n{\n    +Object obj = fields[i].get(null);\n    +ret.add(obj);\n    +    }\n<p> catch (IllegalArgumentException e) </p>\n{\n    +LOG.error(e.getMessage(), e);\n    +    } catch (IllegalAccessException e) {    +LOG.error(e.getMessage(), e);    +    }\n<p>    +}<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String clusterMode(Map conf) </p>\n{\n    +String mode = (String) conf.get(Config.STORM_CLUSTER_MODE);\n    +return mode;\n    +\n    +    }\n<p>    +<br/>\n    +    public static boolean isLocalMode(Map conf) {<br/>\n    +String mode = (String) conf.get(Config.STORM_CLUSTER_MODE);<br/>\n    +if (mode != null) {<br/>\n    +    if (\"local\".equals(mode)) </p>\n{\n    +return true;\n    +    }\n<p>    +    if (\"distributed\".equals(mode)) </p>\n{\n    +return false;\n    +    }\n<p>    +}<br/>\n    +throw new IllegalArgumentException(\"Illegal cluster mode in conf: \" + mode);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static int samplingRate(Map conf) {<br/>\n    +double rate = Utils.getDouble(conf.get(Config.TOPOLOGY_STATS_SAMPLE_RATE));<br/>\n    +if (rate != 0) </p>\n{\n    +    return (int) (1 / rate);\n    +}\n<p>    +throw new IllegalArgumentException(\"Illegal topology.stats.sample.rate in conf: \" + rate);<br/>\n    +    }<br/>\n    +<br/>\n    +    // public static mkStatsSampler // depends on Utils.evenSampler() TODO, this is sth we need to do after util<br/>\n    +    // public static readDefaultConfig // depends on Utils.clojurifyStructure and Utils.readDefaultConfig // TODO<br/>\n    +    // validate-configs-with-schemas is just a wrapper of ConfigValidation.validateFields(conf)<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedStormConfig mocked = new SetMockedStormConfig(conf)) </p>\n{\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedStormConfig. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedStormConfig implements Closeable {<br/>\n    +public SetMockedStormConfig(Map conf) {\n    +    mockedStormConfig = conf;\n    +}<br/>\n    +<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedStormConfig = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedStormConfig = null;<br/>\n    +    public static Map readStormConfig() {\n    +if (mockedStormConfig != null) return mockedStormConfig;\n    +Map conf = Utils.readStormConfig();\n    +ConfigValidation.validateFields(conf);\n    +return conf;\n    +    }<br/>\n    +<br/>\n    +    public static Map readYamlConfig(String name, boolean mustExist) {\n    +Map conf = Utils.findAndReadConfigFile(name, mustExist);\n    +ConfigValidation.validateFields(conf);\n    +return conf;\n    +    }<br/>\n    +<br/>\n    +    public static Map readYamlConfig(String name) {\n    +return  readYamlConfig(name, true);\n    +    }<br/>\n    +<br/>\n    +    public static String absoluteStormLocalDir(Map conf) {<br/>\n    +String stormHome = System.getProperty(\"storm.home\");<br/>\n    +String localDir = (String) conf.get(Config.STORM_LOCAL_DIR);<br/>\n    +if (localDir == null) {\n    +    return (stormHome + FILE_SEPARATOR + \"storm-local\");\n    +} else {<br/>\n    +    if (new File(localDir).isAbsolute()) {\n    +return localDir;\n    +    } else {\n    +return (stormHome + FILE_SEPARATOR + localDir);\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String absoluteHealthCheckDir(Map conf) {<br/>\n    +String stormHome = System.getProperty(\"storm.home\");<br/>\n    +String healthCheckDir = String.valueOf(conf.get(Config.STORM_HEALTH_CHECK_DIR));<br/>\n    +if (healthCheckDir.equals(\"null\")) {\n    +    return (stormHome + FILE_SEPARATOR + \"healthchecks\");\n    +} else {<br/>\n    +    if (new File(healthCheckDir).isAbsolute()) {\n    +return healthCheckDir;\n    +    } else {\n    +return (stormHome + FILE_SEPARATOR + healthCheckDir);\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String masterLocalDir(Map conf) throws IOException {<br/>\n    +String ret = String.valueOf(conf.get(Config.STORM_LOCAL_DIR)) + FILE_SEPARATOR + \"nimbus\";<br/>\n    +try {\n    +    FileUtils.forceMkdir(new File(ret));\n    +} catch (IOException e) {\n    +    LOG.error(\"Failed to create dir \" + ret, e);\n    +    throw e;\n    +}<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +<br/>\n    +    public static String masterStormJarKey(String topologyId) {\n    +return (topologyId + \"-stormjar.jar\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormCodeKey(String topologyId) {\n    +return (topologyId + \"-stormcode.ser\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormConfKey(String topologyId) {\n    +return (topologyId + \"-stormconf.ser\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormDistRoot(Map conf) throws IOException {\n    +String ret = stormDistPath(masterLocalDir(conf));\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormDistRoot(Map conf, String stormId) throws IOException {\n    +return (masterStormDistRoot(conf) + FILE_SEPARATOR + stormId);\n    +    }<br/>\n    +<br/>\n    +    public static String stormDistPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +// we do this since to concat a null String will actually concat a \"null\", which is not the expected: \"\"<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return ret + FILE_SEPARATOR + \"stormdist\";<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String stormTmpPath(String stormRoot) {\n    +return stormRoot + FILE_SEPARATOR + \"tmp\";\n    +    }<br/>\n    +<br/>\n    +    /* Never get used TODO : delete it*/<br/>\n    +    public static String masterTmpDir(Map conf) throws IOException {\n    +String ret = stormTmpPath(masterLocalDir(conf));\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static Map readSupervisorStormConfGivenPath(Map conf, String stormConfPath) throws  IOException {\n    +Map ret = new HashMap(conf);\n    +ret.putAll(Utils.fromCompressedJsonConf(FileUtils.readFileToByteArray(new File(stormConfPath))));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    /* Never get used TODO : may delete it*/<br/>\n    +    public static String masterStormMetaFilePath(String stormRoot) {\n    +return (stormRoot + FILE_SEPARATOR + \"storm-code-distributor.meta\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterStormJarPath(String stormRoot) {\n    +return (stormRoot + FILE_SEPARATOR + \"stormjar.jar\");\n    +    }<br/>\n    +<br/>\n    +    /* Never get used TODO : may delete it*/<br/>\n    +    public static String masterStormCodePath(String stormRoot) {\n    +return (stormRoot + FILE_SEPARATOR + \"stormcode.ser\");\n    +    }<br/>\n    +<br/>\n    +    /* Never get used TODO : may delete it*/<br/>\n    +    public static String masterStormConfPath(String stormRoot) {\n    +return (stormRoot + FILE_SEPARATOR + \"stormconf.ser\");\n    +    }<br/>\n    +<br/>\n    +    public static String masterInbox(Map conf) throws IOException {<br/>\n    +String ret = masterLocalDir(conf) + FILE_SEPARATOR + \"inbox\";<br/>\n    +try {    +    FileUtils.forceMkdir(new File(ret));    +} catch (IOException e) {\n    +    LOG.error(\"Failed to create dir \" + ret, e);\n    +    throw e;\n    +}<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String masterInimbusDir(Map conf) throws IOException {\n    +return (masterLocalDir(conf) + FILE_SEPARATOR + \"inimbus\");\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorLocalDir mocked = new SetMockedSupervisorLocalDir(dir)) {    +    //    run test ...    +    // }\n<p>    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorLocalDir. dir)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorLocalDir implements Closeable {<br/>\n    +public SetMockedSupervisorLocalDir(String dir) </p>\n{\n    +    mockedSupervisorLocalDir = dir;\n    +}\n<p>    +@Override<br/>\n    +public void close() </p>\n{\n    +    mockedSupervisorLocalDir = null;\n    +}\n<p>    +    }<br/>\n    +    private static String mockedSupervisorLocalDir = null;<br/>\n    +    public static String supervisorLocalDir(Map conf) throws IOException {<br/>\n    +if (mockedSupervisorLocalDir != null) </p>\n{\n    +    return null;\n    +}<br/>\n    +String ret = absoluteStormLocalDir(conf) + FILE_SEPARATOR + \"supervisor\";<br/>\n    +FileUtils.forceMkdir(new File(ret));<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorIsupervisorDir(Map conf) throws IOException {\n    +return ((supervisorLocalDir(conf) + FILE_SEPARATOR + \"isupervisor\"));\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorStormDistRoot mocked = new SetMockedSupervisorStormDistRoot(conf)) {\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorStormDistRoot. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorStormDistRoot implements Closeable {<br/>\n    +public SetMockedSupervisorStormDistRoot(Map conf) {\n    +    mockedSupervisorStormDistRoot = conf;\n    +}<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedSupervisorStormDistRoot = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedSupervisorStormDistRoot = null;<br/>\n    +    public static String supervisorStormDistRoot(Map conf) throws IOException {<br/>\n    +if (mockedSupervisorStormDistRoot != null) {    +    return null;    +}\n<p>    +return stormDistPath(supervisorLocalDir(conf)); // TODO: no need to forceMake here?, clj does not.<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormDistRoot(Map conf, String stormId) throws IOException {<br/>\n    +if (mockedSupervisorStormDistRoot != null) </p>\n{\n    +    return null;\n    +}<br/>\n    +return supervisorStormDistRoot(conf) + FILE_SEPARATOR + stormId; // TODO: need to (url-encode storm-id)? Not.<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormJarPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +// we do this since to concat a null String will actually concat a \"null\", which is not the expected: \"\"<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return (ret + FILE_SEPARATOR + \"stormjar.jar\");<br/>\n    +    }<br/>\n    +<br/>\n    +    /* Never get used TODO : may delete it*/<br/>\n    +    public static String supervisorStormMetaFilePath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +if (stormRoot != null) {    +    ret = stormRoot;    +}<br/>\n    +return (ret + FILE_SEPARATOR + \"storm-code-distributor.meta\");<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormCodePath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return (ret + FILE_SEPARATOR + \"stormcode.ser\");<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormConfPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +if (stormRoot != null) {    +    ret = stormRoot;    +}<br/>\n    +return (ret + FILE_SEPARATOR + \"stormconf.ser\");<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorTmpDir(Map conf) throws IOException {\n    +String ret = supervisorLocalDir(conf) + FILE_SEPARATOR + \"tmp\";\n    +FileUtils.forceMkdir(new File(ret));\n    +return ret;\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorStormResourcesPath(String stormRoot) {<br/>\n    +String ret = \"\";<br/>\n    +// we do this since to concat a null String will actually concat a \"null\", which is not the expected: \"\"<br/>\n    +if (stormRoot != null) {\n    +    ret = stormRoot;\n    +}<br/>\n    +return (ret + FILE_SEPARATOR + RESOURCES_SUBDIR);<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorState mocked = new SetMockedSupervisorState(conf)) {\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorState. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorState implements Closeable {<br/>\n    +public SetMockedSupervisorState(Map conf) {\n    +    mockedSupervisorState = conf;\n    +}<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedSupervisorState = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedSupervisorState = null;<br/>\n    +    public static LocalState supervisorState(Map conf) throws IOException {<br/>\n    +if (mockedSupervisorState != null) {    +    return null;    +}\n<p>    +return new LocalState((supervisorLocalDir(conf) + FILE_SEPARATOR + \"localstate\"));<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedNimbusTopoHistoryState mocked = new SetMockedNimbusTopoHistoryState(conf)) </p>\n{\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedNimbusTopoHistoryState. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedNimbusTopoHistoryState implements Closeable {<br/>\n    +public SetMockedNimbusTopoHistoryState(Map conf) {\n    +    mockedNimbusTopoHistoryState = conf;\n    +}<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedNimbusTopoHistoryState = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedNimbusTopoHistoryState = null;<br/>\n    +    public static LocalState nimbusTopoHistoryState(Map conf) throws IOException {<br/>\n    +if (mockedNimbusTopoHistoryState != null) {\n    +    return null;\n    +}<br/>\n    +return new LocalState((masterLocalDir(conf) + FILE_SEPARATOR + \"history\"));<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedSupervisorStormConf mocked = new SetMockedSupervisorStormConf(conf)) {    +    //    run test ...    +    // }\n<p>    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedSupervisorStormConf. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedSupervisorStormConf implements Closeable {<br/>\n    +public SetMockedSupervisorStormConf(Map conf) </p>\n{\n    +    mockedSupervisorStormConf = conf;\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void close() </p>\n{\n    +    mockedSupervisorStormConf = null;\n    +}\n<p>    +    }<br/>\n    +    private static Map mockedSupervisorStormConf = null;<br/>\n    +    public static Map readSupervisorStormConf(Map conf, String stormId) throws IOException {<br/>\n    +if (mockedSupervisorStormConf != null) </p>\n{\n    +    return mockedSupervisorStormConf;\n    +}\n<p>    +String stormRoot = supervisorStormDistRoot(conf, stormId);<br/>\n    +String confPath = supervisorStormConfPath(stormRoot);<br/>\n    +return readSupervisorStormConfGivenPath(conf, confPath);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static StormTopology readSupervisorTopology(Map conf, String stormId) throws IOException </p>\n{\n    +String stormRoot = supervisorStormDistRoot(conf, stormId);\n    +String topologyPath = supervisorStormCodePath(stormRoot);\n    +return Utils.deserialize(FileUtils.readFileToByteArray(new File(topologyPath)), StormTopology.class);\n    +    }\n<p>    +<br/>\n    +    public static String workerUserRoot(Map conf) </p>\n{\n    +return (absoluteStormLocalDir(conf) + FILE_SEPARATOR + \"/workers-users\");\n    +    }\n<p>    +<br/>\n    +    /* Never get used TODO : may delete it*/<br/>\n    +    public static String workerUserFile(Map conf, String workerId) </p>\n{\n    +return (workerUserRoot(conf) + FILE_SEPARATOR + workerId);\n    +    }\n<p>    +<br/>\n    +    public static String getWorkerUser(Map conf, String workerId) {<br/>\n    +LOG.info(\"GET worker-user for {}\", workerId);<br/>\n    +File file = new File(workerUserFile(conf, workerId));<br/>\n    +<br/>\n    +try (InputStream in = new FileInputStream(file);<br/>\n    +     Reader reader = new InputStreamReader(in);<br/>\n    +     BufferedReader br = new BufferedReader(reader)<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/wink.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> {<br/>\n    +    StringBuilder sb = new StringBuilder();<br/>\n    +    int r;<br/>\n    +    while ((r = br.read()) != -1) </p>\n{\n    +char ch = (char)r;\n    +sb.append(ch);\n    +    }\n<p>    +    String ret = sb.toString().trim();<br/>\n    +    return ret;<br/>\n    +} catch (IOException e) </p>\n{\n    +    LOG.error(\"Failed to get worker user for \" + workerId + \".\");\n    +    return null;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String getIdFromBlobKey(String key) {<br/>\n    +if (key == null) return null;<br/>\n    +String ret = null;<br/>\n    +if (key.endsWith(\"-stormjar.jar\")) </p>\n{\n    +    ret = key.substring(0, key.length() - 13);\n    +}\n<p> else if (key.endsWith(\"-stormcode.ser\")) </p>\n{\n    +    ret = key.substring(0, key.length() - 14);\n    +} else if (key.endsWith(\"-stormconf.ser\")) {    +    ret = key.substring(0, key.length() - 14);    +}\n<p>    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedWorkerUserWSE mocked = new SetMockedWorkerUserWSE(conf)) </p>\n{\n    +    //    run test ...\n    +    // }<br/>\n    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedWorkerUserWSE. conf)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedWorkerUserWSE implements Closeable {<br/>\n    +public SetMockedWorkerUserWSE(Map conf) {\n    +    mockedWorkerUserWSE = conf;\n    +}<br/>\n    +<br/>\n    +@Override<br/>\n    +public void close() {\n    +    mockedWorkerUserWSE = null;\n    +}<br/>\n    +    }<br/>\n    +    private static Map mockedWorkerUserWSE = null;<br/>\n    +    public static void setWorkerUserWSE(Map conf, String workerId, String user) throws IOException {<br/>\n    +if (mockedWorkerUserWSE != null) {\n    +    return;\n    +}<br/>\n    +LOG.info(\"SET worker-user {} {}\", workerId, user);<br/>\n    +File file = new File(workerUserFile(conf, workerId));<br/>\n    +file.getParentFile().mkdirs();<br/>\n    +<br/>\n    +try (FileWriter fw = new FileWriter(file);<br/>\n    +     BufferedWriter writer = new BufferedWriter(fw)<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/wink.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> {\n    +    writer.write(user);\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void removeWorkerUserWSE(Map conf, String workerId) {<br/>\n    +LOG.info(\"REMOVE worker-user {}\", workerId);<br/>\n    +new File(workerUserFile(conf, workerId)).delete();<br/>\n    +    }<br/>\n    +<br/>\n    +    //For testing only<br/>\n    +    // for java<br/>\n    +    // try (SetMockedWorkerArtifactsRoot mocked = new SetMockedWorkerArtifactsRoot(conf)) {    +    //    run test ...    +    // }\n<p>    +    //<br/>\n    +    // for clojure<br/>\n    +    // (with-open <span class=\"error\">&#91;mock (SetMockedWorkerArtifactsRoot. root)&#93;</span><br/>\n    +    //     run test ...)<br/>\n    +    public static class SetMockedWorkerArtifactsRoot implements Closeable {<br/>\n    +public SetMockedWorkerArtifactsRoot(String root) </p>\n{\n    +    mockedWorkerArtifactsRoot = root;\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void close() </p>\n{\n    +    mockedWorkerArtifactsRoot = null;\n    +}\n<p>    +    }<br/>\n    +    private static String mockedWorkerArtifactsRoot = null;<br/>\n    +    public static String workerArtifactsRoot(Map conf) {<br/>\n    +if (mockedWorkerArtifactsRoot != null) </p>\n{\n    +    return mockedWorkerArtifactsRoot;\n    +}<br/>\n    +String artifactsDir = (String)conf.get(Config.STORM_WORKERS_ARTIFACTS_DIR);<br/>\n    +if (artifactsDir == null) {\n    +    return (LOG_DIR + FILE_SEPARATOR + \"workers-artifacts\");\n    +} else {<br/>\n    +    if (new File(artifactsDir).isAbsolute()) {\n    +return artifactsDir;\n    +    } else {\n    +return (LOG_DIR + FILE_SEPARATOR + artifactsDir);\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String workerArtifactsRoot(Map conf, String id) {<br/>\n    +if (mockedWorkerArtifactsRoot != null) {    +    return mockedWorkerArtifactsRoot;    +}\n<p>    +return (workerArtifactsRoot(conf) + FILE_SEPARATOR + id);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String workerArtifactsRoot(Map conf, String id, Integer port) {<br/>\n    +if (mockedWorkerArtifactsRoot != null) </p>\n{\n    +    return mockedWorkerArtifactsRoot;\n    +}\n<p>    +return (workerArtifactsRoot(conf, id) + FILE_SEPARATOR + port);<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String workerArtifactsPidPath(Map conf, String id, Integer port) </p>\n{\n    +return (workerArtifactsRoot(conf, id, port) + FILE_SEPARATOR +  \"worker.pid\");\n    +    }\n<p>    +<br/>\n    +    public static File getLogMetaDataFile(String fname) {<br/>\n    +String[] subStrings = fname.split(FILE_SEPARATOR); // TODO: does this work well on windows?<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    A jira filed for that in <a href=\"https://issues.apache.org/jira/browse/STORM-1498\" title=\"In ConfigUtils.getLogMetaDataFile, file name split does not work with windows\" class=\"issue-link\" data-issue-key=\"STORM-1498\"><del>STORM-1498</del></a>(<a href=\"https://issues.apache.org/jira/browse/STORM-1498\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1498</a>).</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705136","html_url":"https://github.com/apache/storm/issues/5331#issuecomment-2612705136","issue_url":"https://api.github.com/repos/apache/storm/issues/5331","id":2612705136,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDUxMzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-22T23:09:43Z","updated_at":"2025-01-24T14:46:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user redsanket opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1035\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1035</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1496\" title=\"Nimbus periodically throws blobstore-related exception: No matching method found: readBlob for class java.lang.String\" class=\"issue-link\" data-issue-key=\"STORM-1496\"><del>STORM-1496</del></a> Nimbus periodically throws blobstore-related exception</p>\n\n<p>    I would like to have this merged in the master as well</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/redsanket/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/redsanket/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1496\" title=\"Nimbus periodically throws blobstore-related exception: No matching method found: readBlob for class java.lang.String\" class=\"issue-link\" data-issue-key=\"STORM-1496\"><del>STORM-1496</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1035.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1035.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1035</p>\n\n<hr />\n<p>commit 4a440b59890a87c7fbbd0dba66a9f52392448e26<br/>\nAuthor: Sanket <schintap@untilservice-lm><br/>\nDate:   2016-01-22T23:04:36Z</p>\n\n<p>    sporadic failures in blobstore <a href=\"https://issues.apache.org/jira/browse/STORM-1496\" title=\"Nimbus periodically throws blobstore-related exception: No matching method found: readBlob for class java.lang.String\" class=\"issue-link\" data-issue-key=\"STORM-1496\"><del>STORM-1496</del></a></p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705551","html_url":"https://github.com/apache/storm/issues/5334#issuecomment-2612705551","issue_url":"https://api.github.com/repos/apache/storm/issues/5334","id":2612705551,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDU1NTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-23T11:04:40Z","updated_at":"2025-01-24T14:46:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1036\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1036</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1499\" title=\"fix wrong package name for storm trident\" class=\"issue-link\" data-issue-key=\"STORM-1499\"><del>STORM-1499</del></a> fix wrong package name for storm trident</p>\n\n<p>    move `TestTridentTopology.java` from  storm.trident to org.apache.storm.trident</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1499\" title=\"fix wrong package name for storm trident\" class=\"issue-link\" data-issue-key=\"STORM-1499\"><del>STORM-1499</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1036.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1036.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1036</p>\n\n<hr />\n<p>commit ab76a9cfc6882e5823bc260db9fe7f650e948cb4<br/>\nAuthor: vesense <best.wangxin@163.com><br/>\nDate:   2016-01-23T11:02:09Z</p>\n\n<p>    fix wrong package name for storm trident</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174171783","html_url":"https://github.com/apache/storm/pull/1036#issuecomment-174171783","issue_url":"https://api.github.com/repos/apache/storm/issues/1036","id":174171783,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDE3MTc4Mw==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-23T11:07:27Z","updated_at":"2016-01-23T11:07:27Z","author_association":"MEMBER","body":"NOTE: It should be backported to 1.x-branch.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174171783/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705558","html_url":"https://github.com/apache/storm/issues/5334#issuecomment-2612705558","issue_url":"https://api.github.com/repos/apache/storm/issues/5334","id":2612705558,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDU1NTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-23T11:07:29Z","updated_at":"2025-01-24T14:46:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1036#issuecomment-174171783\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1036#issuecomment-174171783</a></p>\n\n<p>    NOTE: It should be backported to 1.x-branch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702901","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612702901","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612702901,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDI5MDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T09:27:29Z","updated_at":"2025-01-24T14:45:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1037\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1037</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1483\" title=\"add storm-mongodb connector\" class=\"issue-link\" data-issue-key=\"STORM-1483\"><del>STORM-1483</del></a> add storm-mongodb connector</p>\n\n<p>    Initial commit for code review.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> storm-mongodb</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1037.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1037.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1037</p>\n\n<hr />\n<p>commit c7c84409c38ae60a46d7ee1cce9ec5729d9e497d<br/>\nAuthor: Xin Wang <best.wangxin@163.com><br/>\nDate:   2016-01-17T09:28:33Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1483\" title=\"add storm-mongodb connector\" class=\"issue-link\" data-issue-key=\"STORM-1483\"><del>STORM-1483</del></a>: add storm-mongodb connector</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174293822","html_url":"https://github.com/apache/storm/pull/1037#issuecomment-174293822","issue_url":"https://api.github.com/repos/apache/storm/issues/1037","id":174293822,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDI5MzgyMg==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T12:55:24Z","updated_at":"2016-01-24T12:55:24Z","author_association":"CONTRIBUTOR","body":"This PR shows much more files than whats actually changed probably due to some merge issues. Since almost all the files for the mongodb connector are new, you could just cut a fresh branch out of latest master, cherry pick the commit and force push the changes to the same PR.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174293822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702908","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612702908","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612702908,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDI5MDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T12:55:27Z","updated_at":"2025-01-24T14:45:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1037#issuecomment-174293822\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1037#issuecomment-174293822</a></p>\n\n<p>    This PR shows much more files than whats actually changed probably due to some merge issues. Since almost all the files for the mongodb connector are new, you could just cut a fresh branch out of latest master, cherry pick the commit and force push the changes to the same PR.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702918","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612702918","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612702918,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDI5MTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T14:03:13Z","updated_at":"2025-01-24T14:45:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1483\" title=\"add storm-mongodb connector\" class=\"issue-link\" data-issue-key=\"STORM-1483\"><del>STORM-1483</del></a> add storm-mongodb connector</p>\n\n<p>    Initial commit for code review.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1483\" title=\"add storm-mongodb connector\" class=\"issue-link\" data-issue-key=\"STORM-1483\"><del>STORM-1483</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1038</p>\n\n<hr />\n<p>commit 1cee66b55797ce9fea3dc13d994687a560fd9882<br/>\nAuthor: Xin Wang <best.wangxin@163.com><br/>\nDate:   2016-01-24T14:05:23Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1483\" title=\"add storm-mongodb connector\" class=\"issue-link\" data-issue-key=\"STORM-1483\"><del>STORM-1483</del></a>: add storm-mongodb connector</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174301313","html_url":"https://github.com/apache/storm/pull/1037#issuecomment-174301313","issue_url":"https://api.github.com/repos/apache/storm/issues/1037","id":174301313,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDMwMTMxMw==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T14:14:36Z","updated_at":"2016-01-24T14:14:36Z","author_association":"MEMBER","body":"Yeah I met some conflicts on `pom.xml`, and the fix made too many files. I have created a new PR based on latest master. Please move to https://github.com/apache/storm/pull/1038\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174301313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702924","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612702924","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612702924,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDI5MjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T14:14:37Z","updated_at":"2025-01-24T14:45:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1037#issuecomment-174301313\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1037#issuecomment-174301313</a></p>\n\n<p>    Yeah I met some conflicts on `pom.xml`, and the fix made too many files. I have created a new PR based on latest master. Please move to <a href=\"https://github.com/apache/storm/pull/1038\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702924/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702929","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612702929","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612702929,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDI5Mjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T14:14:38Z","updated_at":"2025-01-24T14:45:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1037\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1037</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174301486","html_url":"https://github.com/apache/storm/pull/1037#issuecomment-174301486","issue_url":"https://api.github.com/repos/apache/storm/issues/1037","id":174301486,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDMwMTQ4Ng==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T14:17:08Z","updated_at":"2016-01-24T14:17:08Z","author_association":"MEMBER","body":"Thanks @arunmahadevan \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174301486/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702936","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612702936","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612702936,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDI5MzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T14:17:09Z","updated_at":"2025-01-24T14:45:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1037#issuecomment-174301486\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1037#issuecomment-174301486</a></p>\n\n<p>    Thanks @arunmahadevan </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174346772","html_url":"https://github.com/apache/storm/pull/1036#issuecomment-174346772","issue_url":"https://api.github.com/repos/apache/storm/issues/1036","id":174346772,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDM0Njc3Mg==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T22:19:43Z","updated_at":"2016-01-24T22:19:43Z","author_association":"CONTRIBUTOR","body":"+1 Nice finding\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174346772/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705565","html_url":"https://github.com/apache/storm/issues/5334#issuecomment-2612705565","issue_url":"https://api.github.com/repos/apache/storm/issues/5334","id":2612705565,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDU1NjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T22:19:44Z","updated_at":"2025-01-24T14:46:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1036#issuecomment-174346772\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1036#issuecomment-174346772</a></p>\n\n<p>    +1 Nice finding</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705565/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705570","html_url":"https://github.com/apache/storm/issues/5334#issuecomment-2612705570","issue_url":"https://api.github.com/repos/apache/storm/issues/5334","id":2612705570,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDU1NzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T22:40:01Z","updated_at":"2025-01-24T14:46:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1036\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1036</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705570/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705574","html_url":"https://github.com/apache/storm/issues/5334#issuecomment-2612705574","issue_url":"https://api.github.com/repos/apache/storm/issues/5334","id":2612705574,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDU1NzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T23:29:50Z","updated_at":"2025-01-24T14:46:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vesense\" class=\"user-hover\" rel=\"vesense\">Xin Wang</a>,<br/>\nI merged into master / 1.x-branch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612704992","html_url":"https://github.com/apache/storm/issues/5330#issuecomment-2612704992","issue_url":"https://api.github.com/repos/apache/storm/issues/5330","id":2612704992,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDQ5OTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-24T23:55:05Z","updated_at":"2025-01-24T14:46:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>It may be related to <a href=\"https://issues.apache.org/jira/browse/STORM-1496\" title=\"Nimbus periodically throws blobstore-related exception: No matching method found: readBlob for class java.lang.String\" class=\"issue-link\" data-issue-key=\"STORM-1496\"><del>STORM-1496</del></a> since I was seen stack trace logs in <a href=\"https://issues.apache.org/jira/browse/STORM-1496\" title=\"Nimbus periodically throws blobstore-related exception: No matching method found: readBlob for class java.lang.String\" class=\"issue-link\" data-issue-key=\"STORM-1496\"><del>STORM-1496</del></a> when clicking 'Topology Visualization' button.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612704992/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174358485","html_url":"https://github.com/apache/storm/pull/1035#issuecomment-174358485","issue_url":"https://api.github.com/repos/apache/storm/issues/1035","id":174358485,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDM1ODQ4NQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T00:45:29Z","updated_at":"2016-01-25T00:45:29Z","author_association":"CONTRIBUTOR","body":"+1 Confirmed that blobstore-related error log from nimbus.log are gone. Also it fixes misfunction of 'Topology Visualization'.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174358485/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705142","html_url":"https://github.com/apache/storm/issues/5331#issuecomment-2612705142","issue_url":"https://api.github.com/repos/apache/storm/issues/5331","id":2612705142,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDUxNDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T00:45:30Z","updated_at":"2025-01-24T14:46:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1035#issuecomment-174358485\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1035#issuecomment-174358485</a></p>\n\n<p>    +1 Confirmed that blobstore-related error log from nimbus.log are gone. Also it fixes misfunction of 'Topology Visualization'.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174359536","html_url":"https://github.com/apache/storm/pull/1035#issuecomment-174359536","issue_url":"https://api.github.com/repos/apache/storm/issues/1035","id":174359536,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDM1OTUzNg==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T00:48:17Z","updated_at":"2016-01-25T00:48:17Z","author_association":"CONTRIBUTOR","body":"@redsanket \nCould you create a pull request which targets to master? It is easier to merge & backport.\nThanks for quick fix!\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174359536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705146","html_url":"https://github.com/apache/storm/issues/5331#issuecomment-2612705146","issue_url":"https://api.github.com/repos/apache/storm/issues/5331","id":2612705146,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDUxNDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T00:48:19Z","updated_at":"2025-01-24T14:46:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1035#issuecomment-174359536\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1035#issuecomment-174359536</a></p>\n\n<p>    @redsanket <br/>\n    Could you create a pull request which targets to master? It is easier to merge & backport.<br/>\n    Thanks for quick fix!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705000","html_url":"https://github.com/apache/storm/issues/5330#issuecomment-2612705000","issue_url":"https://api.github.com/repos/apache/storm/issues/5330","id":2612705000,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDUwMDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T00:49:51Z","updated_at":"2025-01-24T14:46:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Confirmed that fix for <a href=\"https://issues.apache.org/jira/browse/STORM-1496\" title=\"Nimbus periodically throws blobstore-related exception: No matching method found: readBlob for class java.lang.String\" class=\"issue-link\" data-issue-key=\"STORM-1496\"><del>STORM-1496</del></a> (<a href=\"https://github.com/apache/storm/pull/1035\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1035</a>) also fixes misfunction of 'Topology Visualization'.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649856","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612649856","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612649856,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDk4NTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T01:52:11Z","updated_at":"2025-01-24T14:22:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=basti.lj\">basti.lj</a>:</i>\n<p>The porting is in progress.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612649856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702941","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612702941","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612702941,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDI5NDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T06:50:29Z","updated_at":"2025-01-24T14:45:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038#discussion_r50658222\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038#discussion_r50658222</a></p>\n\n<p>    &#8212; Diff: external/storm-mongodb/src/main/java/org/apache/storm/mongodb/bolt/MongoUpdateBolt.java &#8212;<br/>\n    @@ -0,0 +1,69 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mongodb.bolt;<br/>\n    +<br/>\n    +import org.apache.commons.lang.Validate;<br/>\n    +import org.apache.storm.mongodb.common.QueryFilterCreator;<br/>\n    +import org.apache.storm.mongodb.common.mapper.MongoMapper;<br/>\n    +import org.apache.storm.topology.OutputFieldsDeclarer;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.bson.Document;<br/>\n    +import org.bson.conversions.Bson;<br/>\n    +<br/>\n    +/**<br/>\n    + * Basic bolt for updating from MongoDB.<br/>\n    + *<br/>\n    + * Note: Each MongoUpdateBolt defined in a topology is tied to a specific collection.<br/>\n    + *<br/>\n    + */<br/>\n    +public class MongoUpdateBolt extends AbstractMongoBolt {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Why do we need two separate bolts - one for inserting and one for updating ? Can't we merge both of them into one using something like an `upsert` operation ? 'Insert if not exists' could be an option and if specified could insert the document if it does not exist.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702950","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612702950","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612702950,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDI5NTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T06:50:36Z","updated_at":"2025-01-24T14:45:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038#discussion_r50658230\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038#discussion_r50658230</a></p>\n\n<p>    &#8212; Diff: external/storm-mongodb/src/main/java/org/apache/storm/mongodb/common/MongoDBClient.java &#8212;<br/>\n    @@ -0,0 +1,66 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mongodb.common;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +<br/>\n    +import org.bson.Document;<br/>\n    +import org.bson.conversions.Bson;<br/>\n    +<br/>\n    +import com.mongodb.MongoClient;<br/>\n    +import com.mongodb.MongoClientURI;<br/>\n    +import com.mongodb.client.MongoCollection;<br/>\n    +import com.mongodb.client.MongoDatabase;<br/>\n    +<br/>\n    +public class MongoDBClient {<br/>\n    +<br/>\n    +    private MongoClient client;<br/>\n    +    private MongoCollection<Document> collection;<br/>\n    +<br/>\n    +    public MongoDBClient(String url, String collectionName) </p>\n{\n    +//Creates a MongoURI from the given string.\n    +MongoClientURI uri = new MongoClientURI(url);\n    +//Creates a MongoClient described by a URI.\n    +this.client = new MongoClient(uri);\n    +//Gets a Database.\n    +MongoDatabase db = client.getDatabase(uri.getDatabase());\n    +//Gets a collection.\n    +this.collection = db.getCollection(collectionName);\n    +    }\n<p>    +<br/>\n    +    public void insert(Document document) </p>\n{\n    +collection.insertOne(document);\n    +    }\n<p>    +<br/>\n    +    public void insert(List<Document> documents) </p>\n{\n    +//This method is equivalent to a call to the bulkWrite method.\n    +collection.insertMany(documents);\n    +    }\n<p>    +<br/>\n    +    public void update(Bson filter, Bson update) {<br/>\n    +//Update all documents in the collection <br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    These could be proper javadocs</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702960","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612702960","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612702960,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDI5NjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T06:50:44Z","updated_at":"2025-01-24T14:45:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038#discussion_r50658241\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038#discussion_r50658241</a></p>\n\n<p>    &#8212; Diff: external/storm-mongodb/src/main/java/org/apache/storm/mongodb/trident/state/MongoState.java &#8212;<br/>\n    @@ -0,0 +1,97 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mongodb.trident.state;<br/>\n    +<br/>\n    +import java.io.Serializable;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +import org.apache.commons.lang.Validate;<br/>\n    +import org.apache.storm.mongodb.common.MongoDBClient;<br/>\n    +import org.apache.storm.mongodb.common.mapper.MongoMapper;<br/>\n    +import org.apache.storm.trident.operation.TridentCollector;<br/>\n    +import org.apache.storm.trident.state.State;<br/>\n    +import org.apache.storm.trident.tuple.TridentTuple;<br/>\n    +import org.bson.Document;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import com.google.common.collect.Lists;<br/>\n    +<br/>\n    +public class MongoState implements State {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(MongoState.class);<br/>\n    +<br/>\n    +    private Options options;<br/>\n    +    private MongoDBClient mongoClient;<br/>\n    +    private Map map;<br/>\n    +<br/>\n    +    protected MongoState(Map map, int partitionIndex, int numPartitions, Options options) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    partitionIndex and numPartitions are not used so could be removed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702960/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702969","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612702969","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612702969,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDI5Njk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T06:50:56Z","updated_at":"2025-01-24T14:45:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038#discussion_r50658249\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038#discussion_r50658249</a></p>\n\n<p>    &#8212; Diff: external/storm-mongodb/src/main/java/org/apache/storm/mongodb/trident/state/MongoState.java &#8212;<br/>\n    @@ -0,0 +1,97 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mongodb.trident.state;<br/>\n    +<br/>\n    +import java.io.Serializable;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +import org.apache.commons.lang.Validate;<br/>\n    +import org.apache.storm.mongodb.common.MongoDBClient;<br/>\n    +import org.apache.storm.mongodb.common.mapper.MongoMapper;<br/>\n    +import org.apache.storm.trident.operation.TridentCollector;<br/>\n    +import org.apache.storm.trident.state.State;<br/>\n    +import org.apache.storm.trident.tuple.TridentTuple;<br/>\n    +import org.bson.Document;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import com.google.common.collect.Lists;<br/>\n    +<br/>\n    +public class MongoState implements State {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(MongoState.class);<br/>\n    +<br/>\n    +    private Options options;<br/>\n    +    private MongoDBClient mongoClient;<br/>\n    +    private Map map;<br/>\n    +<br/>\n    +    protected MongoState(Map map, int partitionIndex, int numPartitions, Options options) </p>\n{\n    +this.options = options;\n    +this.map = map;\n    +    }\n<p>    +<br/>\n    +    public static class Options implements Serializable {<br/>\n    +private String url;<br/>\n    +private String collectionName;<br/>\n    +private MongoMapper mapper;<br/>\n    +<br/>\n    +public Options withUrl(String url) </p>\n{\n    +    this.url = url;\n    +    return this;\n    +}\n<p>    +<br/>\n    +public Options withCollectionName(String collectionName) </p>\n{\n    +    this.collectionName = collectionName;\n    +    return this;\n    +}\n<p>    +<br/>\n    +public Options withMapper(MongoMapper mapper) </p>\n{\n    +    this.mapper = mapper;\n    +    return this;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    protected void prepare() </p>\n{\n    +Validate.notEmpty(options.url, \"url can not be blank or null\");\n    +Validate.notEmpty(options.collectionName, \"collectionName can not be blank or null\");\n    +Validate.notNull(options.mapper, \"MongoMapper can not be null\");\n    +\n    +this.mongoClient = new MongoDBClient(options.url, options.collectionName);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void beginCommit(Long txid) </p>\n{\n    +LOG.debug(\"beginCommit is noop.\");\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void commit(Long txid) </p>\n{\n    +LOG.debug(\"commit is noop.\");\n    +    }\n<p>    +<br/>\n    +    public void updateState(List<TridentTuple> tuples, TridentCollector collector) {<br/>\n    +List<Document> documents = Lists.newArrayList();<br/>\n    +for (TridentTuple tuple : tuples) </p>\n{\n    +    Document document = options.mapper.toDocument(tuple);\n    +    documents.add(document);\n    +}\n<p>    +this.mongoClient.insert(documents);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I think we should use `update` (with upsert) here.</p>\n\n<p>    `insert` is always going to create new documents. For instance, if using `MongoState` to store word counts, it will create multiple documents for the same word. Unless thats what we want, the values should be updated.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174418642","html_url":"https://github.com/apache/storm/pull/1038#issuecomment-174418642","issue_url":"https://api.github.com/repos/apache/storm/issues/1038","id":174418642,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDQxODY0Mg==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T06:52:44Z","updated_at":"2016-01-25T06:52:44Z","author_association":"CONTRIBUTOR","body":"Github shows `1,058 additions, 1,057 deletions not shown` for pom.xml but does not show any changes. If there are no changes, you could just revert the pom.xml.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174418642/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702974","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612702974","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612702974,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDI5NzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T06:52:45Z","updated_at":"2025-01-24T14:45:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038#issuecomment-174418642\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038#issuecomment-174418642</a></p>\n\n<p>    Github shows `1,058 additions, 1,057 deletions not shown` for pom.xml but does not show any changes. If there are no changes, you could just revert the pom.xml.</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702974/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/174419061","html_url":"https://github.com/apache/storm/pull/1038#issuecomment-174419061","issue_url":"https://api.github.com/repos/apache/storm/issues/1038","id":174419061,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NDQxOTA2MQ==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T06:55:03Z","updated_at":"2016-01-25T06:55:03Z","author_association":"CONTRIBUTOR","body":"May be not as a part of this PR, but would be good to have a `MapState` implementation for supporting trident's exactly once semantics. Take a look at `RedisMapState`, `HbaseMapState` etc. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/174419061/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702980","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612702980","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612702980,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDI5ODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T06:55:05Z","updated_at":"2025-01-24T14:45:31Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038#issuecomment-174419061\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038#issuecomment-174419061</a></p>\n\n<p>    May be not as a part of this PR, but would be good to have a `MapState` implementation for supporting trident's exactly once semantics. Take a look at `RedisMapState`, `HbaseMapState` etc. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612702980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643923","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643923","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643923,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM5MjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T15:03:33Z","updated_at":"2025-01-24T14:19:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#discussion_r50703615\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#discussion_r50703615</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/testing/staticmocking/MockedConfigUtils.java &#8212;<br/>\n    @@ -0,0 +1,31 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one or more<br/>\n    + * contributor license agreements.  See the NOTICE file distributed with<br/>\n    + * this work for additional information regarding copyright ownership.<br/>\n    + * The ASF licenses this file to you under the Apache License, Version<br/>\n    + * 2.0 (the \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.testing.staticmocking;<br/>\n    +<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +<br/>\n    +public class MockedConfigUtils extends ConfigUtils implements AutoCloseable {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    > Derek's repository has a file package-info.java, which shows how to use it. Do I need to include that within this pull request or wait util JIRA to do that? @d2r @revans2</p>\n\n<p>    For what it's worth, it is fine with me if you want to include that file in this pull request.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705681","html_url":"https://github.com/apache/storm/issues/5335#issuecomment-2612705681","issue_url":"https://api.github.com/repos/apache/storm/issues/5335","id":2612705681,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDU2ODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T15:03:53Z","updated_at":"2025-01-24T14:46:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=beginner\" class=\"user-hover\" rel=\"beginner\">beginner</a>,</p>\n\n<p>Please stop opening JIRA to ask for help.  I am happy to answer your question if you send an email to dev@storm.apache.org or user@storm.apache.org.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705271","html_url":"https://github.com/apache/storm/issues/5332#issuecomment-2612705271","issue_url":"https://api.github.com/repos/apache/storm/issues/5332","id":2612705271,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDUyNzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-25T15:25:32Z","updated_at":"2025-01-24T14:46:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>I am +1 for cleaning them all up.  They are not really needed any more.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612705271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]