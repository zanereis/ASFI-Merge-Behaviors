[{"url":"https://api.github.com/repos/apache/druid/issues/comments/451729346","html_url":"https://github.com/apache/druid/issues/6004#issuecomment-451729346","issue_url":"https://api.github.com/repos/apache/druid/issues/6004","id":451729346,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTcyOTM0Ng==","user":{"login":"richiesgr","id":163108,"node_id":"MDQ6VXNlcjE2MzEwOA==","avatar_url":"https://avatars.githubusercontent.com/u/163108?v=4","gravatar_id":"","url":"https://api.github.com/users/richiesgr","html_url":"https://github.com/richiesgr","followers_url":"https://api.github.com/users/richiesgr/followers","following_url":"https://api.github.com/users/richiesgr/following{/other_user}","gists_url":"https://api.github.com/users/richiesgr/gists{/gist_id}","starred_url":"https://api.github.com/users/richiesgr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/richiesgr/subscriptions","organizations_url":"https://api.github.com/users/richiesgr/orgs","repos_url":"https://api.github.com/users/richiesgr/repos","events_url":"https://api.github.com/users/richiesgr/events{/privacy}","received_events_url":"https://api.github.com/users/richiesgr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-06T09:59:17Z","updated_at":"2019-01-06T09:59:39Z","author_association":"NONE","body":"Hello \r\n@doc987 have you find a solution I would like to do exactly the same as you do \r\ngetting telegraf  JSON output directly ingested into Druid \r\nAny help ?\r\nThanks","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/451729346/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/451794740","html_url":"https://github.com/apache/druid/issues/6809#issuecomment-451794740","issue_url":"https://api.github.com/repos/apache/druid/issues/6809","id":451794740,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTc5NDc0MA==","user":{"login":"helianthuslulu","id":4606832,"node_id":"MDQ6VXNlcjQ2MDY4MzI=","avatar_url":"https://avatars.githubusercontent.com/u/4606832?v=4","gravatar_id":"","url":"https://api.github.com/users/helianthuslulu","html_url":"https://github.com/helianthuslulu","followers_url":"https://api.github.com/users/helianthuslulu/followers","following_url":"https://api.github.com/users/helianthuslulu/following{/other_user}","gists_url":"https://api.github.com/users/helianthuslulu/gists{/gist_id}","starred_url":"https://api.github.com/users/helianthuslulu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/helianthuslulu/subscriptions","organizations_url":"https://api.github.com/users/helianthuslulu/orgs","repos_url":"https://api.github.com/users/helianthuslulu/repos","events_url":"https://api.github.com/users/helianthuslulu/events{/privacy}","received_events_url":"https://api.github.com/users/helianthuslulu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T01:16:35Z","updated_at":"2019-01-07T01:16:35Z","author_association":"NONE","body":"@nishantmonu51 Thanks for your reply and prompt. I will check again(*￣︶￣)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/451794740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/451802372","html_url":"https://github.com/apache/druid/pull/6810#issuecomment-451802372","issue_url":"https://api.github.com/repos/apache/druid/issues/6810","id":451802372,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTgwMjM3Mg==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T02:20:50Z","updated_at":"2019-01-07T02:20:50Z","author_association":"CONTRIBUTOR","body":"Thanks @janeklb ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/451802372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/451802486","html_url":"https://github.com/apache/druid/pull/6794#issuecomment-451802486","issue_url":"https://api.github.com/repos/apache/druid/issues/6794","id":451802486,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTgwMjQ4Ng==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T02:21:35Z","updated_at":"2019-01-07T02:21:35Z","author_association":"CONTRIBUTOR","body":"👍 on this proposal - looks to be a win across the board","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/451802486/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/451833692","html_url":"https://github.com/apache/druid/pull/6092#issuecomment-451833692","issue_url":"https://api.github.com/repos/apache/druid/issues/6092","id":451833692,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTgzMzY5Mg==","user":{"login":"jinyangli34","id":36971524,"node_id":"MDQ6VXNlcjM2OTcxNTI0","avatar_url":"https://avatars.githubusercontent.com/u/36971524?v=4","gravatar_id":"","url":"https://api.github.com/users/jinyangli34","html_url":"https://github.com/jinyangli34","followers_url":"https://api.github.com/users/jinyangli34/followers","following_url":"https://api.github.com/users/jinyangli34/following{/other_user}","gists_url":"https://api.github.com/users/jinyangli34/gists{/gist_id}","starred_url":"https://api.github.com/users/jinyangli34/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jinyangli34/subscriptions","organizations_url":"https://api.github.com/users/jinyangli34/orgs","repos_url":"https://api.github.com/users/jinyangli34/repos","events_url":"https://api.github.com/users/jinyangli34/events{/privacy}","received_events_url":"https://api.github.com/users/jinyangli34/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T06:22:46Z","updated_at":"2019-01-07T06:22:46Z","author_association":"NONE","body":"@jon-wei sorry for the delay. Branch updated.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/451833692/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/451866399","html_url":"https://github.com/apache/druid/pull/6370#issuecomment-451866399","issue_url":"https://api.github.com/repos/apache/druid/issues/6370","id":451866399,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTg2NjM5OQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T09:04:25Z","updated_at":"2019-01-07T09:04:25Z","author_association":"MEMBER","body":"@drcrallen \r\n\r\n> Would it be possible to use a SegmentId interface everywhere, and simply have implementations similar to how LegacyDataSource works?\r\n\r\nI'm not sure what did you mean. This PR replaces `String` with `SegmentId` in all contexts except the following two:\r\n 1) Where `SegmentIdWithShardSpec` is already used. (Before this PR that class was called `SegmentIdentifier`, I renamed it to `SegmentIdWithShardSpec` to distinguish from `SegmentId`.) It's usually on the segment producing side of things, i. e. indexing. There is an explanation why it was decided to keep those two classes separate here: https://github.com/apache/incubator-druid/pull/6370/files#diff-bf0e586a3230572aa5c06beffc434b3fR34\r\n 2) In query result POJOs, where a segment id is transmitted from historicals to brokers alongs with results. There are comments in such sites explaining why `SegmentId` couldn't be used there, e. g. here: https://github.com/apache/incubator-druid/pull/6370/files#diff-bd80080a4bcd88fdc21ec62919733e76R35\r\n\r\n> Another question is if we even need the identifier field in the metadata anymore. If the uniqueness of a segment is a tuple of datasource, interval, version, and partition (which I think is correct) all that information is elsewhere in the metadata. Having an ID field explicitly doesn't get you much, or anything?\r\n\r\n`SegmentId` is not just \"id\", it's a useful metadata container, its fields are used. Note that this PR removes some fields from `DataSegment`, because they are duplicated by `SegmentId`: https://github.com/apache/incubator-druid/pull/6370/files#diff-93f2cf9022ac4126afc3ee5989f4f5bfL102","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/451866399/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/451881259","html_url":"https://github.com/apache/druid/pull/6370#issuecomment-451881259","issue_url":"https://api.github.com/repos/apache/druid/issues/6370","id":451881259,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTg4MTI1OQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T09:55:55Z","updated_at":"2019-01-07T09:55:55Z","author_association":"MEMBER","body":"@jihoonson `SegmentIdentifier` is renamed to `SegmentIdWithShardSpec` in this PR.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/451881259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/451905823","html_url":"https://github.com/apache/druid/issues/6809#issuecomment-451905823","issue_url":"https://api.github.com/repos/apache/druid/issues/6809","id":451905823,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTkwNTgyMw==","user":{"login":"helianthuslulu","id":4606832,"node_id":"MDQ6VXNlcjQ2MDY4MzI=","avatar_url":"https://avatars.githubusercontent.com/u/4606832?v=4","gravatar_id":"","url":"https://api.github.com/users/helianthuslulu","html_url":"https://github.com/helianthuslulu","followers_url":"https://api.github.com/users/helianthuslulu/followers","following_url":"https://api.github.com/users/helianthuslulu/following{/other_user}","gists_url":"https://api.github.com/users/helianthuslulu/gists{/gist_id}","starred_url":"https://api.github.com/users/helianthuslulu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/helianthuslulu/subscriptions","organizations_url":"https://api.github.com/users/helianthuslulu/orgs","repos_url":"https://api.github.com/users/helianthuslulu/repos","events_url":"https://api.github.com/users/helianthuslulu/events{/privacy}","received_events_url":"https://api.github.com/users/helianthuslulu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T11:27:52Z","updated_at":"2019-01-07T11:33:37Z","author_association":"NONE","body":"I used **imly built-in test cases** **wikipedia-2016-06-27-sampled.json** and **wikipedia-kafka-supervisor.json** for a test in **native druid 0.12.3**，but... also “Nothing to publish, skipping publish step” @nishantmonu51 could you please give me some other suggestions？ I read all the peon task log, but have no idea,so far.  this question is  the same as #6806","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/451905823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/451906060","html_url":"https://github.com/apache/druid/issues/6809#issuecomment-451906060","issue_url":"https://api.github.com/repos/apache/druid/issues/6809","id":451906060,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MTkwNjA2MA==","user":{"login":"helianthuslulu","id":4606832,"node_id":"MDQ6VXNlcjQ2MDY4MzI=","avatar_url":"https://avatars.githubusercontent.com/u/4606832?v=4","gravatar_id":"","url":"https://api.github.com/users/helianthuslulu","html_url":"https://github.com/helianthuslulu","followers_url":"https://api.github.com/users/helianthuslulu/followers","following_url":"https://api.github.com/users/helianthuslulu/following{/other_user}","gists_url":"https://api.github.com/users/helianthuslulu/gists{/gist_id}","starred_url":"https://api.github.com/users/helianthuslulu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/helianthuslulu/subscriptions","organizations_url":"https://api.github.com/users/helianthuslulu/orgs","repos_url":"https://api.github.com/users/helianthuslulu/repos","events_url":"https://api.github.com/users/helianthuslulu/events{/privacy}","received_events_url":"https://api.github.com/users/helianthuslulu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T11:28:49Z","updated_at":"2019-01-07T11:37:22Z","author_association":"NONE","body":"I test streaming function in imply using wikipedia-2016-06-27-sampled.json and wikipedia-kafka-supervisor.json , it works.  And I test batch ingestion in my native druid 0.12.3 env, it works as well. So I guess my druid env is OK.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/451906060/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452005420","html_url":"https://github.com/apache/druid/pull/6370#issuecomment-452005420","issue_url":"https://api.github.com/repos/apache/druid/issues/6370","id":452005420,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjAwNTQyMA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T17:03:20Z","updated_at":"2019-01-07T17:03:20Z","author_association":"CONTRIBUTOR","body":"> SegmentId is not just \"id\", it's a useful metadata container\r\n\r\nIs there a way we can avoid that? What I'm asking is if we can remove the string ID completely to avoid such a temptation. Having metadata serialization for machine consumption inside of a string is almost always problematic in the future. Having it *ONLY* for human consumption would be OK.\r\n\r\n`io.druid.query.spec.MultipleSpecificSegmentSpec` already references `io.druid.query.SegmentDescriptor`, which is mostly duplicated in `SegmentIdWithShardSpec`. Any need for a difference between the two classes is not clear. As such, can they be reconciled into a single metadata class that identifies whatever needs to be identified?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452005420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452037020","html_url":"https://github.com/apache/druid/issues/6445#issuecomment-452037020","issue_url":"https://api.github.com/repos/apache/druid/issues/6445","id":452037020,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjAzNzAyMA==","user":{"login":"bhavindshah34","id":46457010,"node_id":"MDQ6VXNlcjQ2NDU3MDEw","avatar_url":"https://avatars.githubusercontent.com/u/46457010?v=4","gravatar_id":"","url":"https://api.github.com/users/bhavindshah34","html_url":"https://github.com/bhavindshah34","followers_url":"https://api.github.com/users/bhavindshah34/followers","following_url":"https://api.github.com/users/bhavindshah34/following{/other_user}","gists_url":"https://api.github.com/users/bhavindshah34/gists{/gist_id}","starred_url":"https://api.github.com/users/bhavindshah34/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhavindshah34/subscriptions","organizations_url":"https://api.github.com/users/bhavindshah34/orgs","repos_url":"https://api.github.com/users/bhavindshah34/repos","events_url":"https://api.github.com/users/bhavindshah34/events{/privacy}","received_events_url":"https://api.github.com/users/bhavindshah34/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T18:40:21Z","updated_at":"2019-01-07T18:40:21Z","author_association":"NONE","body":"I am facing same issue , it seems limit seems to be 19. I am wondering if this issue is getting fixed in any newer version.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452037020/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452039792","html_url":"https://github.com/apache/druid/issues/6445#issuecomment-452039792","issue_url":"https://api.github.com/repos/apache/druid/issues/6445","id":452039792,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjAzOTc5Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T18:48:53Z","updated_at":"2019-01-07T18:48:53Z","author_association":"CONTRIBUTOR","body":"This was fixed in a newer version, and yeah, the limit was 19. Now it is unlimited.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452039792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452041780","html_url":"https://github.com/apache/druid/issues/6743#issuecomment-452041780","issue_url":"https://api.github.com/repos/apache/druid/issues/6743","id":452041780,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjA0MTc4MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T18:55:14Z","updated_at":"2019-01-07T18:55:14Z","author_association":"CONTRIBUTOR","body":"> Just wondering, is there a way we could move the DS library to core?\r\n\r\nPotentially - it could also make sense to move hyperUnique from core to an extension. I am not sure what makes the most sense. I started a new thread for this, since it's off topic from this issue: https://github.com/apache/incubator-druid/issues/6814\r\n\r\nOn topic for this issue, have you got any more thoughts about how we might allow aggregators to allocate extra memory?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452041780/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452056269","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-452056269","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":452056269,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjA1NjI2OQ==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T19:40:26Z","updated_at":"2019-01-07T19:40:26Z","author_association":"CONTRIBUTOR","body":"> Druid SQL's COUNT(DISTINCT x) operator uses hyperUnique currently.\r\n\r\nThis is side comment, but i think it is miss leading to expose the approximate count distinct as the default count distinct since it does not adhere to SQL standard.\r\n\r\nNow to the issue of moving form Hyper unique to HllSketch I am kind of sure this kind of question will re occur again and again and every-time that a new approximate method outperform a an old one or maybe offers different tradeoffs. This tells me that probably the best way to solve this is to add a built in UDF for every different sketch algorithm with its respective parameter, this will give the user access to all the core supported sketches without issue of compatibilities.   \r\n\r\n> The fact that the new one is in an extension and the old one is in core presents the opportunity for user confusion. Ideally they'd both be in core or both be in extensions.\r\n\r\nHaving HllSketch as part of core makes perfect sense to me the library has minimal dependency and does very well on what is suppose to do","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452056269/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452073707","html_url":"https://github.com/apache/druid/issues/6743#issuecomment-452073707","issue_url":"https://api.github.com/repos/apache/druid/issues/6743","id":452073707,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjA3MzcwNw==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T20:38:37Z","updated_at":"2019-01-07T20:38:37Z","author_association":"CONTRIBUTOR","body":"@gianm \r\n\r\n> Do you know if there's a way to use this functionality to track per-query memory usage? That would be ideal, since we don't want excessive memory use by one query to affect another unrelated query.\r\n\r\nThe mechanism I was referring to is in [Bits.java](http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/nio/Bits.java#l618) and is for the JVM.  It is not thread specific so not directly useful on a query basis.  However, Druid could create its own query direct-memory tracking mechanism as an \"extension\" of the underlying JVM mechanism.  \r\n\r\nThe way we leverage the nio/Bits tracking mechanism can be found in [memory/NioBits](https://github.com/DataSketches/memory/blob/master/src/main/java/com/yahoo/memory/NioBits.java).\r\n\r\n>  have you got any more thoughts about how we might allow aggregators to allocate extra memory?\r\n\r\nNo conclusions just yet. I will be studying this this week.  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452073707/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452102157","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-452102157","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":452102157,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjEwMjE1Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T22:18:43Z","updated_at":"2019-01-07T22:18:43Z","author_association":"CONTRIBUTOR","body":"Is it worth to make Druid compatible with various Guava version? Why don't we implement our own direct executor (as you did in #5413) or simply copy the latest Guava implementation?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452102157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452114923","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-452114923","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":452114923,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjExNDkyMw==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T23:08:11Z","updated_at":"2019-01-07T23:08:11Z","author_association":"CONTRIBUTOR","body":"i Agree with @jihoonson i think moving away from Guava by copying pasting code or doing our own stuff is far more worth it than trying to support multiple guava versions.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452114923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452118349","html_url":"https://github.com/apache/druid/pull/6794#issuecomment-452118349","issue_url":"https://api.github.com/repos/apache/druid/issues/6794","id":452118349,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjExODM0OQ==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T23:23:29Z","updated_at":"2019-01-07T23:23:29Z","author_association":"CONTRIBUTOR","body":"@gianm do you want to keep the discussion here or start an issue as design review? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452118349/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452118806","html_url":"https://github.com/apache/druid/pull/6794#issuecomment-452118806","issue_url":"https://api.github.com/repos/apache/druid/issues/6794","id":452118806,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjExODgwNg==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T23:25:37Z","updated_at":"2019-01-07T23:25:47Z","author_association":"CONTRIBUTOR","body":"Noticed that `advanceTo(offset)` is dropped from the Cursor API, am wondering if you think it is not needed or because the current implem is a synthetic sugar over `advance()` ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452118806/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452119348","html_url":"https://github.com/apache/druid/pull/6794#issuecomment-452119348","issue_url":"https://api.github.com/repos/apache/druid/issues/6794","id":452119348,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjExOTM0OA==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T23:27:59Z","updated_at":"2019-01-07T23:27:59Z","author_association":"CONTRIBUTOR","body":"Do you think the VectorCursor Api for Realtime based segments is going to be the same? or you have something else in mind? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452119348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452119992","html_url":"https://github.com/apache/druid/pull/6794#issuecomment-452119992","issue_url":"https://api.github.com/repos/apache/druid/issues/6794","id":452119992,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjExOTk5Mg==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T23:30:54Z","updated_at":"2019-01-07T23:32:25Z","author_association":"CONTRIBUTOR","body":"Also i saw this `org.apache.druid.segment.Cursor#advanceUninterruptibly` and `org.apache.druid.segment.Cursor#isDoneOrInterrupted` are removed can someone explain to me what is used for? and why we do not need it for Vector APIs","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452119992/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452121164","html_url":"https://github.com/apache/druid/pull/6794#issuecomment-452121164","issue_url":"https://api.github.com/repos/apache/druid/issues/6794","id":452121164,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjEyMTE2NA==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T23:36:25Z","updated_at":"2019-01-07T23:36:25Z","author_association":"CONTRIBUTOR","body":"wondering why we need to have `org.apache.druid.segment.vector.VectorColumnSelectorFactory#getMaxVectorSize` isn't enough to use the cursor one ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452121164/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452122860","html_url":"https://github.com/apache/druid/pull/6794#issuecomment-452122860","issue_url":"https://api.github.com/repos/apache/druid/issues/6794","id":452122860,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjEyMjg2MA==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-07T23:44:35Z","updated_at":"2019-01-07T23:44:35Z","author_association":"CONTRIBUTOR","body":"> Vectorizing other query engines: topN, scan, select, search.\r\n\r\nDo we really need to support select? IMO we need to drop it as soon as we can it causes lot of OOM and i don't see why would use it when you can use scan.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452122860/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452126454","html_url":"https://github.com/apache/druid/pull/6676#issuecomment-452126454","issue_url":"https://api.github.com/repos/apache/druid/issues/6676","id":452126454,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjEyNjQ1NA==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T00:02:54Z","updated_at":"2019-01-08T00:02:54Z","author_association":"CONTRIBUTOR","body":"Thanks @QiuMM! This issue caused us major confusion in our initial rollout of Druid (for better or for worse, our APM service uses untrusted timestamps from external users as Druid timestamps). This is huge for anybody receiving untrusted timestamps.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452126454/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452127401","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-452127401","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":452127401,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjEyNzQwMQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T00:07:44Z","updated_at":"2019-01-08T00:07:44Z","author_association":"CONTRIBUTOR","body":"@jihoonson I tried the \"our own implementation\" route, and there was too much nuance that I didn't want to deal with. Just fetching the guava stuff correctly was much easier, and puts the maintenance of proper implementation on the Guava libs instead of us. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452127401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452131052","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-452131052","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":452131052,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjEzMTA1Mg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T00:26:55Z","updated_at":"2019-01-08T00:26:55Z","author_association":"CONTRIBUTOR","body":"Then why don't we copy the latest (or whatever with less bugs) Guava implementation? I don't see the point of supporting various Guava versions at run time.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452131052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452159187","html_url":"https://github.com/apache/druid/issues/6790#issuecomment-452159187","issue_url":"https://api.github.com/repos/apache/druid/issues/6790","id":452159187,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjE1OTE4Nw==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T03:04:36Z","updated_at":"2019-01-08T03:04:36Z","author_association":"MEMBER","body":"@licl2014 why we have to consider if `resultsFuture.get()` has only one element, I didn't see any difference. Would you elaborate more?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452159187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452189552","html_url":"https://github.com/apache/druid/issues/6790#issuecomment-452189552","issue_url":"https://api.github.com/repos/apache/druid/issues/6790","id":452189552,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjE4OTU1Mg==","user":{"login":"licl2014","id":6941514,"node_id":"MDQ6VXNlcjY5NDE1MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6941514?v=4","gravatar_id":"","url":"https://api.github.com/users/licl2014","html_url":"https://github.com/licl2014","followers_url":"https://api.github.com/users/licl2014/followers","following_url":"https://api.github.com/users/licl2014/following{/other_user}","gists_url":"https://api.github.com/users/licl2014/gists{/gist_id}","starred_url":"https://api.github.com/users/licl2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/licl2014/subscriptions","organizations_url":"https://api.github.com/users/licl2014/orgs","repos_url":"https://api.github.com/users/licl2014/repos","events_url":"https://api.github.com/users/licl2014/events{/privacy}","received_events_url":"https://api.github.com/users/licl2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T06:26:16Z","updated_at":"2019-01-08T06:26:16Z","author_association":"CONTRIBUTOR","body":"@QiuMM thanks for your reply, if  `resultsFuture.get()` has only one element and the element is `Double.POSITIVE_INFINITY`, we should not assign segment on it,but now our processing logic as follows:\r\n>   if (server.lhs <= bestServers.get(0).lhs) { //eg. `<Double.POSITIVE_INFINITY, node1>`\r\n>       if (server.lhs < bestServers.get(0).lhs) {// `but we can't get here`\r\n>      bestServers.clear();\r\n>     }\r\n>     bestServers.add(server);//`so it will be added in bestServers`\r\n>   }","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452189552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452203763","html_url":"https://github.com/apache/druid/issues/5582#issuecomment-452203763","issue_url":"https://api.github.com/repos/apache/druid/issues/5582","id":452203763,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjIwMzc2Mw==","user":{"login":"maver1ck","id":4006010,"node_id":"MDQ6VXNlcjQwMDYwMTA=","avatar_url":"https://avatars.githubusercontent.com/u/4006010?v=4","gravatar_id":"","url":"https://api.github.com/users/maver1ck","html_url":"https://github.com/maver1ck","followers_url":"https://api.github.com/users/maver1ck/followers","following_url":"https://api.github.com/users/maver1ck/following{/other_user}","gists_url":"https://api.github.com/users/maver1ck/gists{/gist_id}","starred_url":"https://api.github.com/users/maver1ck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maver1ck/subscriptions","organizations_url":"https://api.github.com/users/maver1ck/orgs","repos_url":"https://api.github.com/users/maver1ck/repos","events_url":"https://api.github.com/users/maver1ck/events{/privacy}","received_events_url":"https://api.github.com/users/maver1ck/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T07:43:55Z","updated_at":"2019-01-08T07:43:55Z","author_association":"CONTRIBUTOR","body":"@rahulsingh303 I do a quick look at your chart but I think my PR is superior (i.e. it's using StatefulSets for historical and middlemanagers) and follows the rules of creating helm chart.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452203763/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452208014","html_url":"https://github.com/apache/druid/issues/6790#issuecomment-452208014","issue_url":"https://api.github.com/repos/apache/druid/issues/6790","id":452208014,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjIwODAxNA==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T08:03:25Z","updated_at":"2019-01-08T08:03:25Z","author_association":"MEMBER","body":"Hi, @licl2014 . In fact, there should be no problem here. As long as there is a normal server, those servers with cost value of `Double.POSITIVE_INFINITY` will be cleared from `bestServers` collection.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452208014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452218136","html_url":"https://github.com/apache/druid/issues/5656#issuecomment-452218136","issue_url":"https://api.github.com/repos/apache/druid/issues/5656","id":452218136,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjIxODEzNg==","user":{"login":"helianthuslulu","id":4606832,"node_id":"MDQ6VXNlcjQ2MDY4MzI=","avatar_url":"https://avatars.githubusercontent.com/u/4606832?v=4","gravatar_id":"","url":"https://api.github.com/users/helianthuslulu","html_url":"https://github.com/helianthuslulu","followers_url":"https://api.github.com/users/helianthuslulu/followers","following_url":"https://api.github.com/users/helianthuslulu/following{/other_user}","gists_url":"https://api.github.com/users/helianthuslulu/gists{/gist_id}","starred_url":"https://api.github.com/users/helianthuslulu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/helianthuslulu/subscriptions","organizations_url":"https://api.github.com/users/helianthuslulu/orgs","repos_url":"https://api.github.com/users/helianthuslulu/repos","events_url":"https://api.github.com/users/helianthuslulu/events{/privacy}","received_events_url":"https://api.github.com/users/helianthuslulu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T08:43:12Z","updated_at":"2019-01-08T11:34:11Z","author_association":"NONE","body":"Hi,team. I  met this problem now. I used community version：V 0.12.3  （not imply version）\r\nI proceed as follows:\r\n0)nohup bin/kafka-server-start.sh config/server.properties &\r\n```\r\n1)cd $KAFKA_HOME && \r\n./bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test-wiki\r\n```\r\n```\r\n2)cd $DRUID_HOME &&\r\ncurl -X POST -H'Content-Type:application/json' -d@quickstart/tutorial/wikipedia-kafka-supervisor.json http://101.8.101.20:8090/druid/indexer/v1/supervisor\r\n```\r\n```\r\n3)cd $KAFKA_HOME && \r\n./bin/kafka-console-producer.sh --broker-list localhost:9092 --topic wikipedia_sample < /opt/druid/quickstart/tutorial/wikiticker-2015-09-12-sampled.json\r\n```\r\nbut, task log shows \r\n\"2019-01-08T16:03:59,535 INFO [task-runner-0-priority-0] **io.druid.indexing.kafka.KafkaIndexTask - Pausing ingestion until resumed**\"\r\nand endly\r\n\"2019-01-08T16:03:59,599 INFO [publish-0] io.druid.segment.realtime.appenderator.BaseAppenderatorDriver - **Nothing to publish, skipping publish step**.\"\r\n\r\n Am i miss something? Could anyone help. I VERY MUCH appreciate all replies.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452218136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452219773","html_url":"https://github.com/apache/druid/issues/5656#issuecomment-452219773","issue_url":"https://api.github.com/repos/apache/druid/issues/5656","id":452219773,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjIxOTc3Mw==","user":{"login":"helianthuslulu","id":4606832,"node_id":"MDQ6VXNlcjQ2MDY4MzI=","avatar_url":"https://avatars.githubusercontent.com/u/4606832?v=4","gravatar_id":"","url":"https://api.github.com/users/helianthuslulu","html_url":"https://github.com/helianthuslulu","followers_url":"https://api.github.com/users/helianthuslulu/followers","following_url":"https://api.github.com/users/helianthuslulu/following{/other_user}","gists_url":"https://api.github.com/users/helianthuslulu/gists{/gist_id}","starred_url":"https://api.github.com/users/helianthuslulu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/helianthuslulu/subscriptions","organizations_url":"https://api.github.com/users/helianthuslulu/orgs","repos_url":"https://api.github.com/users/helianthuslulu/repos","events_url":"https://api.github.com/users/helianthuslulu/events{/privacy}","received_events_url":"https://api.github.com/users/helianthuslulu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T08:49:00Z","updated_at":"2019-01-08T08:50:54Z","author_association":"NONE","body":"The same data json and spec json were tested in imply version successfully.  I  found that Discover the differences by analyzing the imply task log and druid-0.12.3 task log.  I'm New At DRUID，so I will ask around and see if anyone can help.  Thanks.  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452219773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452286254","html_url":"https://github.com/apache/druid/issues/6790#issuecomment-452286254","issue_url":"https://api.github.com/repos/apache/druid/issues/6790","id":452286254,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjI4NjI1NA==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T12:47:47Z","updated_at":"2019-01-08T12:47:47Z","author_association":"MEMBER","body":"@licl2014 I know, but you have add below code, so there is no need to do anymore.\r\n```java\r\nif (bestServers.stream().allMatch(server -> server.lhs != Double.POSITIVE_INFINITY)) {\r\n   // Randomly choose a server from the best servers\r\n   bestServer = bestServers.get(ThreadLocalRandom.current().nextInt(bestServers.size()));\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452286254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452302063","html_url":"https://github.com/apache/druid/issues/6790#issuecomment-452302063","issue_url":"https://api.github.com/repos/apache/druid/issues/6790","id":452302063,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjMwMjA2Mw==","user":{"login":"licl2014","id":6941514,"node_id":"MDQ6VXNlcjY5NDE1MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6941514?v=4","gravatar_id":"","url":"https://api.github.com/users/licl2014","html_url":"https://github.com/licl2014","followers_url":"https://api.github.com/users/licl2014/followers","following_url":"https://api.github.com/users/licl2014/following{/other_user}","gists_url":"https://api.github.com/users/licl2014/gists{/gist_id}","starred_url":"https://api.github.com/users/licl2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/licl2014/subscriptions","organizations_url":"https://api.github.com/users/licl2014/orgs","repos_url":"https://api.github.com/users/licl2014/repos","events_url":"https://api.github.com/users/licl2014/events{/privacy}","received_events_url":"https://api.github.com/users/licl2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T13:42:01Z","updated_at":"2019-01-08T13:42:01Z","author_association":"CONTRIBUTOR","body":"@QiuMM yep!!!\r\nafter  `if (bestServers.stream().allMatch(server -> server.lhs != Double.POSITIVE_INFINITY))`, we couldn't consider if `resultsFuture.get()` has only one element.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452302063/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452302877","html_url":"https://github.com/apache/druid/issues/6790#issuecomment-452302877","issue_url":"https://api.github.com/repos/apache/druid/issues/6790","id":452302877,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjMwMjg3Nw==","user":{"login":"licl2014","id":6941514,"node_id":"MDQ6VXNlcjY5NDE1MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6941514?v=4","gravatar_id":"","url":"https://api.github.com/users/licl2014","html_url":"https://github.com/licl2014","followers_url":"https://api.github.com/users/licl2014/followers","following_url":"https://api.github.com/users/licl2014/following{/other_user}","gists_url":"https://api.github.com/users/licl2014/gists{/gist_id}","starred_url":"https://api.github.com/users/licl2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/licl2014/subscriptions","organizations_url":"https://api.github.com/users/licl2014/orgs","repos_url":"https://api.github.com/users/licl2014/repos","events_url":"https://api.github.com/users/licl2014/events{/privacy}","received_events_url":"https://api.github.com/users/licl2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T13:44:45Z","updated_at":"2019-01-08T13:44:45Z","author_association":"CONTRIBUTOR","body":"@asdf2014  yes, but  we should consider if all servers have  `Double.POSITIVE_INFINITY`","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452302877/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452314553","html_url":"https://github.com/apache/druid/issues/6820#issuecomment-452314553","issue_url":"https://api.github.com/repos/apache/druid/issues/6820","id":452314553,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjMxNDU1Mw==","user":{"login":"swd543","id":33709232,"node_id":"MDQ6VXNlcjMzNzA5MjMy","avatar_url":"https://avatars.githubusercontent.com/u/33709232?v=4","gravatar_id":"","url":"https://api.github.com/users/swd543","html_url":"https://github.com/swd543","followers_url":"https://api.github.com/users/swd543/followers","following_url":"https://api.github.com/users/swd543/following{/other_user}","gists_url":"https://api.github.com/users/swd543/gists{/gist_id}","starred_url":"https://api.github.com/users/swd543/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/swd543/subscriptions","organizations_url":"https://api.github.com/users/swd543/orgs","repos_url":"https://api.github.com/users/swd543/repos","events_url":"https://api.github.com/users/swd543/events{/privacy}","received_events_url":"https://api.github.com/users/swd543/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T14:20:31Z","updated_at":"2019-01-08T14:20:51Z","author_association":"NONE","body":"I fixed this issue by copying the files in `$HADOOP_HOME/etc/hadoop/*.xml` to `$DRUID_HOME/conf/druid/_common/`. Just a reminder to myself to read the docs before making a fool out of myself.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452314553/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452328130","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-452328130","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":452328130,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjMyODEzMA==","user":{"login":"edgan8","id":2577963,"node_id":"MDQ6VXNlcjI1Nzc5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/2577963?v=4","gravatar_id":"","url":"https://api.github.com/users/edgan8","html_url":"https://github.com/edgan8","followers_url":"https://api.github.com/users/edgan8/followers","following_url":"https://api.github.com/users/edgan8/following{/other_user}","gists_url":"https://api.github.com/users/edgan8/gists{/gist_id}","starred_url":"https://api.github.com/users/edgan8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edgan8/subscriptions","organizations_url":"https://api.github.com/users/edgan8/orgs","repos_url":"https://api.github.com/users/edgan8/repos","events_url":"https://api.github.com/users/edgan8/events{/privacy}","received_events_url":"https://api.github.com/users/edgan8/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T14:58:44Z","updated_at":"2019-01-08T14:58:44Z","author_association":"CONTRIBUTOR","body":"@jon-wei , @leventov this is ready for review again. Thanks for your help!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452328130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452358418","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-452358418","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":452358418,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjM1ODQxOA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T16:19:10Z","updated_at":"2019-01-08T16:19:10Z","author_association":"CONTRIBUTOR","body":"+1 for c/p'ing the latest Guava implementation as-is, like we did with Closer and splitToList. At least then we'll know what we're dealing with.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452358418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452364087","html_url":"https://github.com/apache/druid/pull/6794#issuecomment-452364087","issue_url":"https://api.github.com/repos/apache/druid/issues/6794","id":452364087,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjM2NDA4Nw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T16:34:29Z","updated_at":"2019-01-08T16:34:29Z","author_association":"CONTRIBUTOR","body":"@b-slim,\r\n\r\n> @gianm do you want to keep the discussion here or start an issue as design review?\r\n\r\nI was waiting to see how the thread on the dev list goes and then do what we decide there.\r\n\r\n> Noticed that advanceTo(offset) is dropped from the Cursor API, am wondering if you think it is not needed or because the current implem is a synthetic sugar over advance() ?\r\n\r\nI wasn't sure how to translate that specific API to the vectorized impl (it doesn't necessarily make sense to seek to a _specific_ offset when you're talking about blocks of rows) & thought it made more sense for the query engines that need it to do it themselves. It's only used in one place by the select query.\r\n\r\n> Do you think the VectorCursor Api for Realtime based segments is going to be the same? or you have something else in mind?\r\n\r\nIt should be the same, I think, just like the regular Cursor is the same. You would expect vectorization to not have as much of an impact on IncrementalIndex, because bulk column reads don't improve efficiency the same way they do on a QueryableIndex, but you might still see some benefit on other parts of the query pipeline.\r\n\r\n> Also i saw this org.apache.druid.segment.Cursor#advanceUninterruptibly and org.apache.druid.segment.Cursor#isDoneOrInterrupted are removed can someone explain to me what is used for? and why we do not need it for Vector APIs\r\n\r\nThey're used for topN prototypes & were added in #3889. I'm not sure if we'll want vectorized analogs or not. I am thinking that the topN prototype system is probably not _as_ necessary for a potentially vectorized topN engine, since part of the point of monomorphic processing is to reduce virtual method call overhead, but vectorization does that too (in a different way).\r\n\r\n> wondering why we need to have org.apache.druid.segment.vector.VectorColumnSelectorFactory#getMaxVectorSize isn't enough to use the cursor one ?\r\n\r\nI think it ended up being used by AggregatorFactories, which get a column selector factory when they factorize an aggregator, but not a cursor. It ended up being useful to add max/current vector size getters to a variety of places for reasons like that.\r\n\r\n> Do we really need to support select? IMO we need to drop it as soon as we can it causes lot of OOM and i don't see why would use it when you can use scan.\r\n\r\n#6088 is the only real reason to use select. I think when we have a solution to that problem we should definitely deprecate & drop it. I could see the potential to never vectorize it, and favor improving scan -> dropping select instead. It'd just be important to vectorize all query engines that exist at some point in time, if we want to get rid of the non-vectorized code paths.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452364087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452395160","html_url":"https://github.com/apache/druid/issues/6818#issuecomment-452395160","issue_url":"https://api.github.com/repos/apache/druid/issues/6818","id":452395160,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjM5NTE2MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T18:05:15Z","updated_at":"2019-01-08T18:05:15Z","author_association":"CONTRIBUTOR","body":"It might be an error with your extraction of the tarball. Or try checking the sha512 and gpg signature to make sure you got the right tarball.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452395160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452406554","html_url":"https://github.com/apache/druid/pull/5106#issuecomment-452406554","issue_url":"https://api.github.com/repos/apache/druid/issues/5106","id":452406554,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjQwNjU1NA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T18:41:09Z","updated_at":"2019-01-08T18:41:09Z","author_association":"CONTRIBUTOR","body":"Closing this, I don't have bandwidth to continue working on it at this time, and it conflicts with #6794 which is more important to me anyway. Will have to consider reviving in the future.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452406554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452462312","html_url":"https://github.com/apache/druid/pull/5541#issuecomment-452462312","issue_url":"https://api.github.com/repos/apache/druid/issues/5541","id":452462312,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjQ2MjMxMg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T21:42:51Z","updated_at":"2019-01-08T21:42:51Z","author_association":"CONTRIBUTOR","body":"Hi @Sarvesh1990, I'm going to close this, but thanks for the interest in contributing, and please reopen it if you have the time to work on it some more.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452462312/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452470092","html_url":"https://github.com/apache/druid/pull/6658#issuecomment-452470092","issue_url":"https://api.github.com/repos/apache/druid/issues/6658","id":452470092,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjQ3MDA5Mg==","user":{"login":"dclim","id":11050882,"node_id":"MDQ6VXNlcjExMDUwODgy","avatar_url":"https://avatars.githubusercontent.com/u/11050882?v=4","gravatar_id":"","url":"https://api.github.com/users/dclim","html_url":"https://github.com/dclim","followers_url":"https://api.github.com/users/dclim/followers","following_url":"https://api.github.com/users/dclim/following{/other_user}","gists_url":"https://api.github.com/users/dclim/gists{/gist_id}","starred_url":"https://api.github.com/users/dclim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dclim/subscriptions","organizations_url":"https://api.github.com/users/dclim/orgs","repos_url":"https://api.github.com/users/dclim/repos","events_url":"https://api.github.com/users/dclim/events{/privacy}","received_events_url":"https://api.github.com/users/dclim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T22:10:07Z","updated_at":"2019-01-08T22:10:07Z","author_association":"CONTRIBUTOR","body":"@hellobabygogo have you had a chance to review the PR comments?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452470092/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452490554","html_url":"https://github.com/apache/druid/pull/6782#issuecomment-452490554","issue_url":"https://api.github.com/repos/apache/druid/issues/6782","id":452490554,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjQ5MDU1NA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T23:33:22Z","updated_at":"2019-01-08T23:33:22Z","author_association":"CONTRIBUTOR","body":"@gianm thanks. I also changed \"compact task\" to \"compaction task\" for consistency.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452490554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452491537","html_url":"https://github.com/apache/druid/pull/6792#issuecomment-452491537","issue_url":"https://api.github.com/repos/apache/druid/issues/6792","id":452491537,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjQ5MTUzNw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-08T23:37:32Z","updated_at":"2019-01-08T23:37:32Z","author_association":"CONTRIBUTOR","body":"@surekhasaharan so sorry, I wasn't clear. I meant there're also some duplications in `TestQueryHelper` like `testSqlQueriesFromFile` and `testQueriesFromFile`. Can we remove them too?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452491537/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452512386","html_url":"https://github.com/apache/druid/pull/6761#issuecomment-452512386","issue_url":"https://api.github.com/repos/apache/druid/issues/6761","id":452512386,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjUxMjM4Ng==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T00:23:46Z","updated_at":"2019-01-09T00:23:46Z","author_association":"CONTRIBUTOR","body":"@nishantmonu51 Merged with master and fixed conflicts, can you take another look?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452512386/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452540941","html_url":"https://github.com/apache/druid/pull/6397#issuecomment-452540941","issue_url":"https://api.github.com/repos/apache/druid/issues/6397","id":452540941,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjU0MDk0MQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T01:43:48Z","updated_at":"2019-01-09T01:43:48Z","author_association":"MEMBER","body":"@dclim, @leventov (and anyone else interested) I think this PR is ready for review again. I think I've addressed all existing comments via code changes, apologies for the rebases - I jumped the gun a bit opening this before the rest of the bloom filter extension had stabilized. \r\n\r\nI've also added a bunch of methods to our copy of the Hive BloomKFilter to enable in situ manipulation of BloomKFilters that are serialized into a ByteBuffer, to allow much more memory efficient buffer aggs, which I will attempt to get pushed to the upstream implementation soon to avoid diverging too much. Additionally the documentation has been improved a bit for the extension, and have simplified the code where possible in response to comments.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452540941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452566872","html_url":"https://github.com/apache/druid/issues/6823#issuecomment-452566872","issue_url":"https://api.github.com/repos/apache/druid/issues/6823","id":452566872,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjU2Njg3Mg==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T04:19:23Z","updated_at":"2019-01-09T04:19:23Z","author_association":"MEMBER","body":"`DimFilterUtils` and `ExtractionCacheHelper` are probably other good candidates for this","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452566872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452567631","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-452567631","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":452567631,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjU2NzYzMQ==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T04:25:24Z","updated_at":"2019-01-09T04:25:24Z","author_association":"CONTRIBUTOR","body":"> The on-disk format is not compatible, and cannot be, due to the difference in hash functions used. \r\n\r\nLet me clarify the problem with the Druid-HLL sketch with respect to its use of Hash Functions.\r\n\r\n**The Druid-HLL sketch delegates the responsibility of hashing the input items to the user.**  \r\n\r\nThe only requirement is that the resulting hash be at least 10 bytes long.  Although this may seem to be advantageous by providing user flexibility, it has very serious drawbacks.\r\n\r\nWhen sketches are serialized and stored, the resulting data is a highly compressed jumble of bits similar to a picture image.  Unless you understand how to decode the sequence of bits and know exactly how it was encoded, the sketch image is not very useful. The chosen hashing function (including any seeding of the hash) determines how the bits are encoded. Although it is not required to know what hash function (and seed) was used to encode the sketch in order to decode it and obtain an estimate, any attempt to **merge** two sketches will result in garbage unless the same exact hash function (and seed) was used to create the two sketches. \r\n\r\nSuppose a user in department A creates a history of sketches using one hash function, and a user in department B creates a history of sketches using a slightly different hash function.  These two histories can never be merged together.   The Druid-HLL sketch therefore must rely on **human** coordination between the users that created and stored the sketches, and the users that wish to merge these sketches later on in some query process.  In fact these two groups of users could be separated not only by department, but by company and/or long periods of time. \r\n\r\nThe Druid-HLL sketch has no means of detecting that two sketches may have been created using different hash functions (or seed). in other words, this is a silent failure mechanism.  \r\n\r\n**The DataSketches-HLL sketch always uses the same hash function (and seed) and it cannot be changed by the user.**\r\n\r\nThis was an intentional design decision to prevent the above disaster that is almost guaranteed to happen in large corporations.  \r\n\r\n**The DataSketches-Theta (and Tuple and CPC) sketch families always use the same hash function, but do allow users to optionally specify a different seed.**\r\n\r\nThis was a specific design decision to provide certain groups that must sketch sensitive data with a bit more security in their stored data.  The chosen seed is never stored in the sketch image for this reason. \r\n\r\nHowever, the Theta sketches have a detection mechanism as a safety measure to detect if different seeds were used in the creation of the sketch images.  All merge operations first check if the sketches are, in fact, compatible, and throw an exception if not. \r\n\r\n> Patching hyperUnique's implementation to improve its error characteristics.\r\n\r\nThe design flaw that is causing the [poor error on merging](https://datasketches.github.io/docs/HLL/HllSketchVsDruidHyperLogLogCollector.html) is fundamental. The Druid-HLL sketch is not keeping sufficient information in its stored image to decode it accurately. Therefore, there is no fancy algorithm that exists that could reconstruct this missing data.  And the Druid-HLL sketch provides no warning mechanism that these estimation errors will occur.  \r\n\r\nEven if it was fixed with a new format that would retain the missing data, merging old sketches with new ones will still have the same error problems.  \r\n\r\nThe flaws in the design of the Druid-HLL sketch don't stop here, it has many other design problems.  I see no benefit to attempting to \"fix\" the Druid-HLL sketch as it would require a complete redesign from scratch.  -- But we have already designed a far superior HLL sketch as part of the DataSketches library.  I strongly suggest we document and communicate these issues to the user community, and suggest they migrate to the DataSketches library.\r\n\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452567631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452588365","html_url":"https://github.com/apache/druid/pull/6397#issuecomment-452588365","issue_url":"https://api.github.com/repos/apache/druid/issues/6397","id":452588365,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjU4ODM2NQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T06:38:34Z","updated_at":"2019-01-09T06:38:34Z","author_association":"MEMBER","body":"Oops, have some legitimate test failures after a few changes, fixing.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452588365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452674057","html_url":"https://github.com/apache/druid/issues/6827#issuecomment-452674057","issue_url":"https://api.github.com/repos/apache/druid/issues/6827","id":452674057,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjY3NDA1Nw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T12:06:38Z","updated_at":"2019-01-09T12:06:38Z","author_association":"MEMBER","body":"FYI @surekhasaharan @gianm ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452674057/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452676075","html_url":"https://github.com/apache/druid/pull/6370#issuecomment-452676075","issue_url":"https://api.github.com/repos/apache/druid/issues/6370","id":452676075,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjY3NjA3NQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T12:14:18Z","updated_at":"2019-01-09T12:14:18Z","author_association":"MEMBER","body":"> > SegmentId is not just \"id\", it's a useful metadata container\r\n\r\n> Is there a way we can avoid that? What I'm asking is if we can remove the string ID completely to avoid such a temptation. Having metadata serialization for machine consumption inside of a string is almost always problematic in the future. Having it ONLY for human consumption would be OK.\r\n\r\nWhy having `SegmentId` as a useful metadata container should be avoided? What temptation? I don't understand what are you asking here and what problem do you see.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452676075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452677984","html_url":"https://github.com/apache/druid/pull/6370#issuecomment-452677984","issue_url":"https://api.github.com/repos/apache/druid/issues/6370","id":452677984,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjY3Nzk4NA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T12:21:38Z","updated_at":"2019-01-09T12:21:38Z","author_association":"MEMBER","body":"> io.druid.query.SegmentDescriptor, which is mostly duplicated in SegmentIdWithShardSpec. Any need for a difference between the two classes is not clear. As such, can they be reconciled into a single metadata class that identifies whatever needs to be identified?\r\n\r\nThe Javadoc comment of `SegmentDescriptor` says:\r\n> The difference between this class and `{@link org.apache.druid.timeline.DataSegment}` is that this class is a \"light\" version of `{@link org.apache.druid.timeline.DataSegment}`, that only contains the interval, version, and partition number. SegmentDescriptor is used when Brokers tell data servers which segments to include for a particular query.\r\n\r\nTo me, this is clear enough. Before you asked, I didn't remember that at all, I went to `SegmentDescriptor` to read the Javadoc, so it's clear to me not because I'm deep in the context of those things. This comment is also duplicated in the header of `DataSegment`, but not in the Javadoc, because `DataSegment` is `@PublicApi` and I didn't want to contaminate it's class-level Javadoc with private details and explanations.\r\n\r\nAdditionally, I want to note that `SegmentDescriptor` has different names of JSON fields (\"itvl\", \"ver\" and \"part\") that makes reconciling it with `SegmentIdWithShardSpec` much harder practically.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452677984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452682953","html_url":"https://github.com/apache/druid/pull/6370#issuecomment-452682953","issue_url":"https://api.github.com/repos/apache/druid/issues/6370","id":452682953,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjY4Mjk1Mw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T12:40:53Z","updated_at":"2019-01-09T12:40:53Z","author_association":"MEMBER","body":"After writing the previous comment, I realized that `SegmentDescriptor` should be more properly compared with `SegmentId` rather than with `DataSegment`, it would be more apples-to-apples comparison. I updated the relevant comments to the following:\r\n\r\n> The difference between this class and `{@link org.apache.druid.query.SegmentDescriptor}` is that the latter is a \"light\" version of SegmentId, that only contains the interval, version, and partition number. It's used where the data source, another essential part of SegmentId is determined by the context (e. g. in `{@link org.apache.druid.client.CachingClusteredClient}`, where SegmentDescriptor is used when Brokers tell data servers which segments to include for a particular query) and where having lean JSON representations is important, because it's actively transferred detween Druid nodes. It's also for this reason that the JSON field names of SegmentDescriptor are abbreviated.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452682953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452770096","html_url":"https://github.com/apache/druid/issues/6827#issuecomment-452770096","issue_url":"https://api.github.com/repos/apache/druid/issues/6827","id":452770096,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjc3MDA5Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T16:58:10Z","updated_at":"2019-01-09T16:58:10Z","author_association":"CONTRIBUTOR","body":"I don't think it should be gigabytes of data, right? Assuming the collections are using references to existing objects and not copies of them, it should be a few hundred MB at worst. But yeah, it'd be good to avoid creating all-segment-sized collections to the degree possible, even if the objects are shared.\r\n\r\nWhat are the kinds of concurrency bugs you think might be likely to introduce when avoiding allocations in these methods? Would be helpful to know what you're thinking so they can be more easily avoided.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452770096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452803528","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-452803528","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":452803528,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjgwMzUyOA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T18:27:29Z","updated_at":"2019-01-09T18:27:29Z","author_association":"CONTRIBUTOR","body":"Not failing on arbitrary guava versions is a problem on our side related to things like gRPC extensions and building Druid libs in with Beam workloads. Making the Druid libs at least support a wide range of versions greatly reduces the surprising library conflicts that have to be resolved, and eliminates the temptation to shade-shade-shade a whole bunch of stuff.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452803528/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452803919","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-452803919","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":452803919,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjgwMzkxOQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T18:28:29Z","updated_at":"2019-01-09T18:28:29Z","author_association":"CONTRIBUTOR","body":"I would love to, for example, be able to have my internal fork of Druid run on the more recent Guava versions to be compatible with whatever extensions we want to use. But such a thing is not a drop-in exercise until issues like this one are resolved.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452803919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452810135","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-452810135","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":452810135,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjgxMDEzNQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T18:44:33Z","updated_at":"2019-01-09T18:44:33Z","author_association":"CONTRIBUTOR","body":"Copied over the Direct Executor Service. Luckily it isn't doing any package private mumbo jumbo, so the copy was pretty straight forward","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452810135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452811580","html_url":"https://github.com/apache/druid/issues/6823#issuecomment-452811580","issue_url":"https://api.github.com/repos/apache/druid/issues/6823","id":452811580,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjgxMTU4MA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T18:48:21Z","updated_at":"2019-01-09T18:48:21Z","author_association":"CONTRIBUTOR","body":"How does this play into proprietary extensions? For example, we have a lookup extension that has a special cache key generation mechanism. Is the intention that custom extensions use this enum to generate their cache keys?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452811580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452821612","html_url":"https://github.com/apache/druid/issues/6826#issuecomment-452821612","issue_url":"https://api.github.com/repos/apache/druid/issues/6826","id":452821612,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjgyMTYxMg==","user":{"login":"surekhasaharan","id":13008746,"node_id":"MDQ6VXNlcjEzMDA4NzQ2","avatar_url":"https://avatars.githubusercontent.com/u/13008746?v=4","gravatar_id":"","url":"https://api.github.com/users/surekhasaharan","html_url":"https://github.com/surekhasaharan","followers_url":"https://api.github.com/users/surekhasaharan/followers","following_url":"https://api.github.com/users/surekhasaharan/following{/other_user}","gists_url":"https://api.github.com/users/surekhasaharan/gists{/gist_id}","starred_url":"https://api.github.com/users/surekhasaharan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/surekhasaharan/subscriptions","organizations_url":"https://api.github.com/users/surekhasaharan/orgs","repos_url":"https://api.github.com/users/surekhasaharan/repos","events_url":"https://api.github.com/users/surekhasaharan/events{/privacy}","received_events_url":"https://api.github.com/users/surekhasaharan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T19:16:34Z","updated_at":"2019-01-09T19:16:34Z","author_association":"NONE","body":"Thanks @leventov , I want to clarify that even if `segment` is removed, the reference to `segment` is still there. So where do you think, it can cause a NPE ?  Though a null check for `dataSourceSegments` can be added before `SegmentMetadataHolder holder = dataSourceSegments.get(segment);`. Does that address your concern ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452821612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452834127","html_url":"https://github.com/apache/druid/pull/6813#issuecomment-452834127","issue_url":"https://api.github.com/repos/apache/druid/issues/6813","id":452834127,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjgzNDEyNw==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T19:51:38Z","updated_at":"2019-01-09T19:51:38Z","author_association":"CONTRIBUTOR","body":"Out of curiosity, https://github.com/apache/incubator-druid/pull/2859 added the ability to stream results back from the SQL databases that druid supports. Is there interest for the SQL firehose to hot have to copy locally first THEN feed in, but rather simply use the SQL streaming features to chunk up the work directly into the druid event plumbing?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452834127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452837532","html_url":"https://github.com/apache/druid/pull/6813#issuecomment-452837532","issue_url":"https://api.github.com/repos/apache/druid/issues/6813","id":452837532,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjgzNzUzMg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T20:02:21Z","updated_at":"2019-01-09T20:02:21Z","author_association":"CONTRIBUTOR","body":"@drcrallen please check the [original author's comment](https://github.com/apache/incubator-druid/pull/5441#issuecomment-382538838). I'm also not sure this is a good way. I feel like we need a sort of SQL indexing service (like Kafka indexing service) in the future.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452837532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452848932","html_url":"https://github.com/apache/druid/issues/6826#issuecomment-452848932","issue_url":"https://api.github.com/repos/apache/druid/issues/6826","id":452848932,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjg0ODkzMg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T20:43:18Z","updated_at":"2019-01-09T20:43:18Z","author_association":"CONTRIBUTOR","body":"I think the issue is that the segment might have been removed from `segmentMetadataInfo`, so there would no longer be any holder.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452848932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452855302","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-452855302","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":452855302,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjg1NTMwMg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T21:06:02Z","updated_at":"2019-01-09T21:06:02Z","author_association":"CONTRIBUTOR","body":"> The Druid-HLL sketch delegates the responsibility of hashing the input items to the user.\r\n\r\nThis isn't true in practice. The druid-hll library lets callers use any hash function, but Druid doesn't expose that to end users. It always uses `Hashing.murmur3_128()` to avoid the problems you mentioned.\r\n\r\n> The design flaw that is causing the poor error on merging is fundamental. The Druid-HLL sketch is not keeping sufficient information in its stored image to decode it accurately.\r\n\r\nOut of curiosity what is the missing information? I didn't see details on that in the link you provided.\r\n\r\n> I see no benefit to attempting to \"fix\" the Druid-HLL sketch as it would require a complete redesign from scratch.\r\n\r\nThe benefit would be giving users a migration path from a possibly large number of already-stored sketches, other than \"sorry, you have to reindex all of your historical data\". Which, for some users, may be inconvenient or impossible. Better would be \"you can migrate to a new format for newly ingested data, and it will give you better behavior for that new data, degrading to the old behavior if you query a time range that covers both the old and new formats.\" There is value in that if it is possible. (I don't feel like I understand the details well enough to say if it is possible.)\r\n\r\n> But we have already designed a far superior HLL sketch as part of the DataSketches library. I strongly suggest we document and communicate these issues to the user community, and suggest they migrate to the DataSketches library.\r\n\r\nIt does sound like you have designed a better one and thank you for that!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452855302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452859631","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-452859631","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":452859631,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjg1OTYzMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T21:16:20Z","updated_at":"2019-01-09T21:16:20Z","author_association":"CONTRIBUTOR","body":"> Now to the issue of moving form Hyper unique to HllSketch I am kind of sure this kind of question will re occur again and again and every-time that a new approximate method outperform a an old one or maybe offers different tradeoffs. This tells me that probably the best way to solve this is to add a built in UDF for every different sketch algorithm with its respective parameter, this will give the user access to all the core supported sketches without issue of compatibilities.\r\n\r\nI think we want to do that too (like, provide Druid SQL functions so users can choose whether to do approx count distinct with druid-hll, datasketches-hll, datasketches-theta, what-have-you). I think it'd also be nice to also have a generic `APPROX_COUNT_DISTINCT` function that uses the \"correct\" sketch aggregator based on what format of sketch you have actually stored in your segments. Something that makes life easier for users. And maybe give it a concept of the 'current best' one to use, and have it use that if you don't specify a specific one.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452859631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452896823","html_url":"https://github.com/apache/druid/pull/5871#issuecomment-452896823","issue_url":"https://api.github.com/repos/apache/druid/issues/5871","id":452896823,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjg5NjgyMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T22:41:34Z","updated_at":"2019-01-09T22:41:34Z","author_association":"CONTRIBUTOR","body":"@hellobabygogo, I'm closing this PR now, but thank you for your interest in contributing. Please reopen this if you figure out what the root cause is and this is the right way to fix it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452896823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452897332","html_url":"https://github.com/apache/druid/pull/6670#issuecomment-452897332","issue_url":"https://api.github.com/repos/apache/druid/issues/6670","id":452897332,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjg5NzMzMg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T22:43:25Z","updated_at":"2019-01-09T22:43:25Z","author_association":"CONTRIBUTOR","body":"@niketh would you please check my comment?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452897332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452897695","html_url":"https://github.com/apache/druid/pull/6672#issuecomment-452897695","issue_url":"https://api.github.com/repos/apache/druid/issues/6672","id":452897695,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjg5NzY5NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T22:44:44Z","updated_at":"2019-01-09T22:44:44Z","author_association":"CONTRIBUTOR","body":"Thanks @Tagar. I'm closing this PR now and please reopen it when you have time to continue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452897695/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452898132","html_url":"https://github.com/apache/druid/pull/6674#issuecomment-452898132","issue_url":"https://api.github.com/repos/apache/druid/issues/6674","id":452898132,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjg5ODEzMg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T22:46:24Z","updated_at":"2019-01-09T22:46:24Z","author_association":"CONTRIBUTOR","body":"Thanks @Tagar. I'm closing this PR, but please reopen if you have time to work on it more.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452898132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452916914","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-452916914","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":452916914,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjkxNjkxNA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-09T23:52:57Z","updated_at":"2019-01-09T23:52:57Z","author_association":"CONTRIBUTOR","body":"I can't see why teamcity is failing","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452916914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452928719","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-452928719","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":452928719,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjkyODcxOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T00:50:43Z","updated_at":"2019-01-10T00:50:43Z","author_association":"CONTRIBUTOR","body":"@drcrallen It looks like there's a reference to CallerRunsPolicy in a javadoc, a class that was not copied over. (You should be able to see this stuff by registering for a TeamCity acct.) Probably the right thing to do is edit the javadoc.\r\n\r\n![image](https://user-images.githubusercontent.com/1214075/50938767-8f7e9700-142e-11e9-9fb5-7f3791e1dfdb.png)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452928719/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452929179","html_url":"https://github.com/apache/druid/pull/6829#issuecomment-452929179","issue_url":"https://api.github.com/repos/apache/druid/issues/6829","id":452929179,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MjkyOTE3OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T00:53:13Z","updated_at":"2019-01-10T00:53:13Z","author_association":"CONTRIBUTOR","body":"Ah, interesting approach. Was using a \"cachingCost\" balancer and multithreading it not enough to speed up the coordinator for your needs?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452929179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452940686","html_url":"https://github.com/apache/druid/issues/6826#issuecomment-452940686","issue_url":"https://api.github.com/repos/apache/druid/issues/6826","id":452940686,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjk0MDY4Ng==","user":{"login":"surekhasaharan","id":13008746,"node_id":"MDQ6VXNlcjEzMDA4NzQ2","avatar_url":"https://avatars.githubusercontent.com/u/13008746?v=4","gravatar_id":"","url":"https://api.github.com/users/surekhasaharan","html_url":"https://github.com/surekhasaharan","followers_url":"https://api.github.com/users/surekhasaharan/followers","following_url":"https://api.github.com/users/surekhasaharan/following{/other_user}","gists_url":"https://api.github.com/users/surekhasaharan/gists{/gist_id}","starred_url":"https://api.github.com/users/surekhasaharan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/surekhasaharan/subscriptions","organizations_url":"https://api.github.com/users/surekhasaharan/orgs","repos_url":"https://api.github.com/users/surekhasaharan/repos","events_url":"https://api.github.com/users/surekhasaharan/events{/privacy}","received_events_url":"https://api.github.com/users/surekhasaharan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T01:53:49Z","updated_at":"2019-01-10T01:53:49Z","author_association":"NONE","body":"thanks @gianm , created a PR","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452940686/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452943951","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-452943951","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":452943951,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjk0Mzk1MQ==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T02:10:17Z","updated_at":"2019-01-10T02:10:17Z","author_association":"CONTRIBUTOR","body":"> This isn't true in practice. The Druid-HLL library lets callers use any hash function, but Druid doesn't expose that to end users. It always uses `Hashing.murmur3_128()` to avoid the problems you mentioned.\r\n\r\nWell that is a relief!  This reveals my lack of understanding of the internals of Druid, as I was just looking at the design of the HLL classes, and I shudder by what I see!  :)   \r\n\r\n> Out of curiosity what is the missing information? I didn't see details on that in the link you provided.\r\n\r\nIt is complicated and requires deep understanding of the HLL Stochastic process and how it evolves as a function of *n*.  Nonetheless, I will attempt to explain it.\r\n\r\nThe HLL algorithm is usually implemented with at least 2 distinct phases: sparse and dense.  The sparse phase is used for very low counts and saves space by not needing to allocate the full HLL dense array.  At some point, the sketch will graduate to dense mode and allocate the final full array of *k* slots.  (e.g., if logK=11, k=2048 slots).  For practical reasons a slot must be at least 6 bits.  Simple implementations of HLL assign a byte (8 bits) per slot so the space required for the sketch in dense mode (logK=11) would be 2048 bytes plus some header bytes.  More sophisticated implementations, like the Druid-HLL and the DataSketches-HLL, perform a form of compression so that each slot only requires 4-bits.  So now the total space required for the sketch would be 1024 bytes plus some header bytes.  However, this compression scheme only works \"most of the time\" and occasionally 4 bits is not enough.  When this happens, a special \"exception value\" is placed in the relevant slot which defers the lookup of the true value for that slot from small hash-map of exception values keyed off the slot address.  How often these \"exceptions\" occur is a function of the size of the sketch, *n*, and probabilistic occurrence of certain hash values.  So it is more likely to happen when merging lots of relatively large sketches together, which is what we do in our test.\r\n\r\nWe know from our own extensive characterization studies (that sometimes run for days!) that an HLL 4-bit sketch implementation where logK=11 needs at least 4 exception registers, and could require more, although it would be extremely rare; nevertheless, it can never be ruled out.  In theory, for a LogK=11 sketch, each exception register would need only 24 bits.  Since the DS-HLL sketch allows up to LogK=21, we use 32 bits per exception register. \r\n\r\nThe mistake that the developers of the Druid-HLL sketch made was that they only provided space for one exception register of 24 bits.  Due to insufficient understanding of the probabilities of exceptions and insufficient testing, they assumed only one register was enough and did not think through what the consequences would be. You can see this at the top of the HyperLogLogCollector class: The Header has only 7 bytes.  Byte 4 holds the exception value and bytes 5 and 6 hold the slot address.  The total space allocated for the sketch is 1024 + 7 = 1031 bytes.\r\n\r\nIf more than one slot (of the 2048 slots) needs an exception register, there is no place to record the exception, so the prior exception's record is overwritten.  Thus, information is lost.  The state of the HLL array is now corrupted and accurate recovery of the estimate is no longer possible.  The consequence is severe undercounting, which is revealed in our testing.\r\n\r\nI fully understand what the benefits would be, if it were possible to correct for this flaw.  But what you are asking for is the ability to **merge** the flawed HLL sketches with some new fixed HLL sketch.  The 4-bit compression algorithm is rather complex and would have to be completely be reviewed, redesigned and tested.  I don't have the time or motivation to attempt this type of redesign.  \r\n\r\nEven though we also use the MurmurHash3_64_128 hash function, we do use a specific static final non-zero seed.  Thus our hash functions are incompatible.  I'm not even sure that the guava hash implementation would necessarily produce the same bits even if the seed issue didn't exist, but this could be verified.\r\n\r\nEven producing a variation of our HLL sketch that could merge with the Druid-HLL sketch images would require considerable work, as we would have to extend our design to allow for variable seeds.\r\nThen we would have to design an adaptor that could merge from the Druid-HLL sketch, which is also not trivial.\r\n\r\nI will keep thinking about this, but don't get your hopes up :)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452943951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452955833","html_url":"https://github.com/apache/druid/pull/6829#issuecomment-452955833","issue_url":"https://api.github.com/repos/apache/druid/issues/6829","id":452955833,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjk1NTgzMw==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T03:16:29Z","updated_at":"2019-01-10T03:16:29Z","author_association":"CONTRIBUTOR","body":"Those are huge improvements, but we still have some choke times when new nodes come up (hardware failures or scale up). This was a relatively small change that is believed to have pretty good impact (aka, low hanging fruit). I'll have more info as time goes on. Right now I'm going to flag this as \"Design Review.\" It is intended to be a heads up more than a ready-for-merge proposal at this point.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452955833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452956274","html_url":"https://github.com/apache/druid/pull/6829#issuecomment-452956274","issue_url":"https://api.github.com/repos/apache/druid/issues/6829","id":452956274,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjk1NjI3NA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T03:19:13Z","updated_at":"2019-01-10T03:19:13Z","author_association":"CONTRIBUTOR","body":"In my fantasy world, historical nodes would self-assign their own segments and figure out amongst themselves in small cells (groups) how to rebalance. Then the coordinator would be more of a metadata and config proxy. I'm not quite ready to try and take that on though, especially if smaller changes can buy another order of magnitude in scale. Right now I'm seeing if a few smaller changes can help in the shorter term.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452956274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452962480","html_url":"https://github.com/apache/druid/issues/6831#issuecomment-452962480","issue_url":"https://api.github.com/repos/apache/druid/issues/6831","id":452962480,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjk2MjQ4MA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T03:56:03Z","updated_at":"2019-01-10T03:56:03Z","author_association":"CONTRIBUTOR","body":"oh, it is just a dependency thing. addinng\r\n\r\n```xml\r\n\r\n        <exclusion>\r\n          <groupId>com.google.guava</groupId>\r\n          <artifactId>guava</artifactId>\r\n        </exclusion>\r\n```\r\n\r\nto the pig dependency fixes it","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452962480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452981477","html_url":"https://github.com/apache/druid/issues/6832#issuecomment-452981477","issue_url":"https://api.github.com/repos/apache/druid/issues/6832","id":452981477,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjk4MTQ3Nw==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T06:05:38Z","updated_at":"2019-01-10T06:05:38Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452981477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/452984208","html_url":"https://github.com/apache/druid/pull/6833#issuecomment-452984208","issue_url":"https://api.github.com/repos/apache/druid/issues/6833","id":452984208,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1Mjk4NDIwOA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T06:21:39Z","updated_at":"2019-01-10T06:21:39Z","author_association":"MEMBER","body":"@gianm there are optional values in the test data, but they are eaten by the json flattener which input is always passed through when parsing and turned into nulls, which is how this was missed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/452984208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453030999","html_url":"https://github.com/apache/druid/issues/6823#issuecomment-453030999","issue_url":"https://api.github.com/repos/apache/druid/issues/6823","id":453030999,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzAzMDk5OQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T09:37:18Z","updated_at":"2019-01-10T09:37:18Z","author_association":"MEMBER","body":"Good point @drcrallen, I'm not sure how to best handle this. @leventov as the source of this request do you have any ideas?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453030999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453062222","html_url":"https://github.com/apache/druid/pull/6349#issuecomment-453062222","issue_url":"https://api.github.com/repos/apache/druid/issues/6349","id":453062222,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzA2MjIyMg==","user":{"login":"egor-ryashin","id":14215045,"node_id":"MDQ6VXNlcjE0MjE1MDQ1","avatar_url":"https://avatars.githubusercontent.com/u/14215045?v=4","gravatar_id":"","url":"https://api.github.com/users/egor-ryashin","html_url":"https://github.com/egor-ryashin","followers_url":"https://api.github.com/users/egor-ryashin/followers","following_url":"https://api.github.com/users/egor-ryashin/following{/other_user}","gists_url":"https://api.github.com/users/egor-ryashin/gists{/gist_id}","starred_url":"https://api.github.com/users/egor-ryashin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/egor-ryashin/subscriptions","organizations_url":"https://api.github.com/users/egor-ryashin/orgs","repos_url":"https://api.github.com/users/egor-ryashin/repos","events_url":"https://api.github.com/users/egor-ryashin/events{/privacy}","received_events_url":"https://api.github.com/users/egor-ryashin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T11:23:05Z","updated_at":"2019-01-10T11:23:05Z","author_association":"CONTRIBUTOR","body":"@clintropolis @drcrallen I wonder if I answered all your questions?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453062222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453064250","html_url":"https://github.com/apache/druid/pull/6740#issuecomment-453064250","issue_url":"https://api.github.com/repos/apache/druid/issues/6740","id":453064250,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzA2NDI1MA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T11:31:05Z","updated_at":"2019-01-10T11:31:05Z","author_association":"MEMBER","body":"@michael-trelinski as a side note, please don't \"mark converations as resolved\". I wish this Github feature could be turned off. As a reviewer I anyway have to revisit each conversation and verify myself that it's resolved, marking it as resolved just adds clicking work for me.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453064250/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453068505","html_url":"https://github.com/apache/druid/pull/6683#issuecomment-453068505","issue_url":"https://api.github.com/repos/apache/druid/issues/6683","id":453068505,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzA2ODUwNQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T11:47:35Z","updated_at":"2019-01-10T11:47:35Z","author_association":"MEMBER","body":"@kaijianding most answers to my questions that you given should be transformed into code comments, or the code should be altered in some other way. The objective is to approach the state that if I read the code for the first time, none of my questions were arisen.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453068505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453174011","html_url":"https://github.com/apache/druid/pull/6836#issuecomment-453174011","issue_url":"https://api.github.com/repos/apache/druid/issues/6836","id":453174011,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzE3NDAxMQ==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T17:06:13Z","updated_at":"2019-01-10T17:08:16Z","author_association":"MEMBER","body":"Changed the title with a more meaningful name. Issue #6416 .","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453174011/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453189777","html_url":"https://github.com/apache/druid/pull/6780#issuecomment-453189777","issue_url":"https://api.github.com/repos/apache/druid/issues/6780","id":453189777,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzE4OTc3Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T17:50:09Z","updated_at":"2019-01-10T17:50:09Z","author_association":"CONTRIBUTOR","body":"@QiuMM thanks for the review! \r\n@nishantmonu51 I'm merging this PR, but please leave any comments if you have more. I'll do in a follow-up pr.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453189777/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453190047","html_url":"https://github.com/apache/druid/pull/6370#issuecomment-453190047","issue_url":"https://api.github.com/repos/apache/druid/issues/6370","id":453190047,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzE5MDA0Nw==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T17:50:56Z","updated_at":"2019-01-10T17:50:56Z","author_association":"CONTRIBUTOR","body":"The issue I have with putting metadata inside a string inside an object is that there is no structure to the metadata anymore. In other words you are putting serialization mechanisms inside of serialization mechanisms which almost always leads to pain down the line when some corner of the system behaves differently than expected.\r\n\r\nThe serialization system within druid is json. As such, any metadata is expected to be expressed as json, with the ability for Jackson to deserialize it into objects for consumption in the code.\r\n\r\nOne of the few exceptions to this are places with URIs in the json because the URIs are usually generated or indicative of systems outside of druid. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453190047/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453207885","html_url":"https://github.com/apache/druid/pull/6836#issuecomment-453207885","issue_url":"https://api.github.com/repos/apache/druid/issues/6836","id":453207885,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzIwNzg4NQ==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T18:44:49Z","updated_at":"2019-01-10T18:44:49Z","author_association":"MEMBER","body":"@mohammadjkhan why closed?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453207885/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453211286","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-453211286","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":453211286,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzIxMTI4Ng==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T18:54:56Z","updated_at":"2019-01-10T18:54:56Z","author_association":"CONTRIBUTOR","body":"oh! login as guest works well now. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453211286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453219166","html_url":"https://github.com/apache/druid/pull/6836#issuecomment-453219166","issue_url":"https://api.github.com/repos/apache/druid/issues/6836","id":453219166,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzIxOTE2Ng==","user":{"login":"mohammadjkhan","id":18354068,"node_id":"MDQ6VXNlcjE4MzU0MDY4","avatar_url":"https://avatars.githubusercontent.com/u/18354068?v=4","gravatar_id":"","url":"https://api.github.com/users/mohammadjkhan","html_url":"https://github.com/mohammadjkhan","followers_url":"https://api.github.com/users/mohammadjkhan/followers","following_url":"https://api.github.com/users/mohammadjkhan/following{/other_user}","gists_url":"https://api.github.com/users/mohammadjkhan/gists{/gist_id}","starred_url":"https://api.github.com/users/mohammadjkhan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mohammadjkhan/subscriptions","organizations_url":"https://api.github.com/users/mohammadjkhan/orgs","repos_url":"https://api.github.com/users/mohammadjkhan/repos","events_url":"https://api.github.com/users/mohammadjkhan/events{/privacy}","received_events_url":"https://api.github.com/users/mohammadjkhan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T19:18:03Z","updated_at":"2019-01-10T19:27:03Z","author_association":"CONTRIBUTOR","body":"@QiuMM Because the build travis build failed. Also, it looks like I'll be making more changes. Could I know what's the process to follow for PRs? This is going to be my first PR for Druif project\r\nThanks!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453219166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453223897","html_url":"https://github.com/apache/druid/pull/6349#issuecomment-453223897","issue_url":"https://api.github.com/repos/apache/druid/issues/6349","id":453223897,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzIyMzg5Nw==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T19:31:43Z","updated_at":"2019-01-10T19:31:43Z","author_association":"MEMBER","body":"Oops, will have a look today","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453223897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453243461","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-453243461","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":453243461,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzI0MzQ2MQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T20:33:40Z","updated_at":"2019-01-10T20:33:40Z","author_association":"CONTRIBUTOR","body":"Ugh, if the import is there, failure because unused import (even though it is used in javadoc). If the import is not there it gets failure in teamcity due to unknown reference.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453243461/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453249745","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-453249745","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":453249745,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzI0OTc0NQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T20:54:00Z","updated_at":"2019-01-10T20:54:00Z","author_association":"CONTRIBUTOR","body":"I have never really found a good way around that particular weirdness with imports + javadocs. I usually deal with it by using fully qualified class names in javadocs (rather than import + short name). Or by avoiding `@link`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453249745/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453261106","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-453261106","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":453261106,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzI2MTEwNg==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T21:30:07Z","updated_at":"2019-01-10T21:30:48Z","author_association":"CONTRIBUTOR","body":"@gianm \r\nIt would help me a great deal if you could list the methods of HyperLogLogCollector (including constructors) that are actually used in Druid.\r\n\r\nThanks!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453261106/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453271743","html_url":"https://github.com/apache/druid/issues/6838#issuecomment-453271743","issue_url":"https://api.github.com/repos/apache/druid/issues/6838","id":453271743,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzI3MTc0Mw==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T22:03:46Z","updated_at":"2019-01-10T22:03:46Z","author_association":"CONTRIBUTOR","body":"I think this will be really useful for new users and managing large clusters. What is the plan for consolidating historical and MMs? The workloads for MMs and historicals are very different. Typically MMs don't need a lot of disk space, whereas Historicals do. Would this lead to overprovisioning of resources that are not fully used?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453271743/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453279391","html_url":"https://github.com/apache/druid/pull/6828#issuecomment-453279391","issue_url":"https://api.github.com/repos/apache/druid/issues/6828","id":453279391,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzI3OTM5MQ==","user":{"login":"ankit0811","id":12939079,"node_id":"MDQ6VXNlcjEyOTM5MDc5","avatar_url":"https://avatars.githubusercontent.com/u/12939079?v=4","gravatar_id":"","url":"https://api.github.com/users/ankit0811","html_url":"https://github.com/ankit0811","followers_url":"https://api.github.com/users/ankit0811/followers","following_url":"https://api.github.com/users/ankit0811/following{/other_user}","gists_url":"https://api.github.com/users/ankit0811/gists{/gist_id}","starred_url":"https://api.github.com/users/ankit0811/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ankit0811/subscriptions","organizations_url":"https://api.github.com/users/ankit0811/orgs","repos_url":"https://api.github.com/users/ankit0811/repos","events_url":"https://api.github.com/users/ankit0811/events{/privacy}","received_events_url":"https://api.github.com/users/ankit0811/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T22:27:20Z","updated_at":"2019-01-10T22:27:20Z","author_association":"CONTRIBUTOR","body":"@jihoonson @jon-wei can you pls look at this PR for the kill job proposal #6803\r\nThanks","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453279391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453296130","html_url":"https://github.com/apache/druid/issues/6838#issuecomment-453296130","issue_url":"https://api.github.com/repos/apache/druid/issues/6838","id":453296130,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzI5NjEzMA==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-10T23:17:30Z","updated_at":"2019-01-10T23:17:30Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453296130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453320348","html_url":"https://github.com/apache/druid/issues/6814#issuecomment-453320348","issue_url":"https://api.github.com/repos/apache/druid/issues/6814","id":453320348,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzMyMDM0OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T00:39:41Z","updated_at":"2019-01-11T00:39:41Z","author_association":"CONTRIBUTOR","body":"@leerho \"Find usages\" on each of those methods in IntelliJ (or the equivalent in Eclipse) should bring it to light relatively quickly. All the relevant usages would be: anything in Druid modules that are _not_ druid-hll. (Since anything that is only used by druid-hll is an \"internal\" thing.)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453320348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453337294","html_url":"https://github.com/apache/druid/pull/6804#issuecomment-453337294","issue_url":"https://api.github.com/repos/apache/druid/issues/6804","id":453337294,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzMzNzI5NA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T01:41:09Z","updated_at":"2019-01-11T01:41:09Z","author_association":"MEMBER","body":"LGTM :+1: after CI","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453337294/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453338371","html_url":"https://github.com/apache/druid/issues/6838#issuecomment-453338371","issue_url":"https://api.github.com/repos/apache/druid/issues/6838","id":453338371,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzMzODM3MQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T01:45:12Z","updated_at":"2019-01-11T01:45:12Z","author_association":"CONTRIBUTOR","body":"> What is the plan for consolidating historical and MMs? The workloads for MMs and historicals are very different. Typically MMs don't need a lot of disk space, whereas Historicals do. Would this lead to overprovisioning of resources that are not fully used?\r\n\r\nFor whether it makes sense to colocate MM and historical, it depends on load and access patterns; you could get more utilization of resources by colocating with the tradeoff of potential resource contention.\r\n\r\nFor consolidating the historical and MM at the process level, these are just some thoughts and beyond the scope of this proposal, but I think that consolidation of processes in that area could potentially help avoid overprovisioning if combined with other potential changes that move Druid away from static provisioning of resources towards more dynamic resource allocation, e.g:\r\n- Suppose that instead of statically assigning per-worker resources (identical across all workers) in config on the MM, the MM had just a pool of compute/mem/network resources that it can freely assign to tasks, this could help avoid overprovisioning when not all tasks have consistent resource requirements\r\n- Similarly, global resource pool with dynamic allocation in a combined historical/MM process (replacing cases where it makes sense to colocate them as separate processes) could enable more efficient resource usage and simpler operation vs. the current model where the user has to manually calculate and provision fixed resource limits for individual pieces. You could also do some other optimizations like shortcuts for segment handoff (if the segment would go to the same machine), or sharing lookup mappings in memory.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453338371/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/453341179","html_url":"https://github.com/apache/druid/pull/6670#issuecomment-453341179","issue_url":"https://api.github.com/repos/apache/druid/issues/6670","id":453341179,"node_id":"MDEyOklzc3VlQ29tbWVudDQ1MzM0MTE3OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-01-11T01:55:47Z","updated_at":"2019-01-11T01:55:47Z","author_association":"CONTRIBUTOR","body":"I'm going to close this PR. @niketh please reopen if you want to continue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/453341179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]