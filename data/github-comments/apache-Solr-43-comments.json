[{"url":"https://api.github.com/repos/apache/solr/issues/comments/1647882178","html_url":"https://github.com/apache/solr/pull/1805#issuecomment-1647882178","issue_url":"https://api.github.com/repos/apache/solr/issues/1805","id":1647882178,"node_id":"IC_kwDOFFj3yM5iOK_C","user":{"login":"epugh","id":22395,"node_id":"MDQ6VXNlcjIyMzk1","avatar_url":"https://avatars.githubusercontent.com/u/22395?v=4","gravatar_id":"","url":"https://api.github.com/users/epugh","html_url":"https://github.com/epugh","followers_url":"https://api.github.com/users/epugh/followers","following_url":"https://api.github.com/users/epugh/following{/other_user}","gists_url":"https://api.github.com/users/epugh/gists{/gist_id}","starred_url":"https://api.github.com/users/epugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epugh/subscriptions","organizations_url":"https://api.github.com/users/epugh/orgs","repos_url":"https://api.github.com/users/epugh/repos","events_url":"https://api.github.com/users/epugh/events{/privacy}","received_events_url":"https://api.github.com/users/epugh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-24T13:09:46Z","updated_at":"2023-07-24T13:09:46Z","author_association":"CONTRIBUTOR","body":"Great feedback @risdenk, especially on coming up with a better name ;-)","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1647882178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1647957316","html_url":"https://github.com/apache/solr/pull/1801#issuecomment-1647957316","issue_url":"https://api.github.com/repos/apache/solr/issues/1801","id":1647957316,"node_id":"IC_kwDOFFj3yM5iOdVE","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-24T13:50:10Z","updated_at":"2023-07-24T13:50:10Z","author_association":"CONTRIBUTOR","body":"Looks great; thanks for the doc-fix @rafalh !","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1647957316/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1647973043","html_url":"https://github.com/apache/solr/pull/1801#issuecomment-1647973043","issue_url":"https://api.github.com/repos/apache/solr/issues/1801","id":1647973043,"node_id":"IC_kwDOFFj3yM5iOhKz","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-24T13:58:25Z","updated_at":"2023-07-24T13:58:25Z","author_association":"CONTRIBUTOR","body":"One small note for next time - usually we ask contributors to develop against `main` rather than `branch_9x`. It just helps to keep things uniform I guess.\r\n\r\nAnyway, thanks again for the fix!","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1647973043/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1647992911","html_url":"https://github.com/apache/solr/pull/1790#issuecomment-1647992911","issue_url":"https://api.github.com/repos/apache/solr/issues/1790","id":1647992911,"node_id":"IC_kwDOFFj3yM5iOmBP","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-24T14:09:03Z","updated_at":"2023-07-24T14:09:03Z","author_association":"CONTRIBUTOR","body":"> I suspect the /api/c/ pattern was something our old home grown code supported that we don't have in the new V2 approach...\r\n\r\nYep, pretty much.  Technically, the new v2 framework supports it, but we are moving away from it for consistency/intuitiveness reasons.  \"Saving\" a few characters in a URL path isn't really worth the downsides of making the path less readable to users, and obscuring whether a given API call is a core vs a collection operation.  So as we've been making APIs more REST-ful some of them have dropped the abbreviated \"/c/\" syntax.\r\n\r\nThis PR LGTM.\r\n\r\nIMO the page could use some even more drastic changes; this is a good reminder for me to get to those for 9.4; thanks @mkhludnev !","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1647992911/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1648129495","html_url":"https://github.com/apache/solr/pull/1801#issuecomment-1648129495","issue_url":"https://api.github.com/repos/apache/solr/issues/1801","id":1648129495,"node_id":"IC_kwDOFFj3yM5iPHXX","user":{"login":"rafalh","id":160391,"node_id":"MDQ6VXNlcjE2MDM5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/160391?v=4","gravatar_id":"","url":"https://api.github.com/users/rafalh","html_url":"https://github.com/rafalh","followers_url":"https://api.github.com/users/rafalh/followers","following_url":"https://api.github.com/users/rafalh/following{/other_user}","gists_url":"https://api.github.com/users/rafalh/gists{/gist_id}","starred_url":"https://api.github.com/users/rafalh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafalh/subscriptions","organizations_url":"https://api.github.com/users/rafalh/orgs","repos_url":"https://api.github.com/users/rafalh/repos","events_url":"https://api.github.com/users/rafalh/events{/privacy}","received_events_url":"https://api.github.com/users/rafalh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-24T15:24:35Z","updated_at":"2023-07-24T15:24:35Z","author_association":"CONTRIBUTOR","body":"Thanks @gerlowskija for letting me know. Somehow I missed the `main` branch :sweat_smile: I think I've checked `master` branch and after realizing it has very old commits I through `branch_9x` is the main one...\r\nAnyway what do you think about cherry-picking it to `branch_9_3` as well? It would show up in docs earlier (before 9.4)","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1648129495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1648720273","html_url":"https://github.com/apache/solr/pull/1791#issuecomment-1648720273","issue_url":"https://api.github.com/repos/apache/solr/issues/1791","id":1648720273,"node_id":"IC_kwDOFFj3yM5iRXmR","user":{"login":"janhoy","id":409128,"node_id":"MDQ6VXNlcjQwOTEyOA==","avatar_url":"https://avatars.githubusercontent.com/u/409128?v=4","gravatar_id":"","url":"https://api.github.com/users/janhoy","html_url":"https://github.com/janhoy","followers_url":"https://api.github.com/users/janhoy/followers","following_url":"https://api.github.com/users/janhoy/following{/other_user}","gists_url":"https://api.github.com/users/janhoy/gists{/gist_id}","starred_url":"https://api.github.com/users/janhoy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janhoy/subscriptions","organizations_url":"https://api.github.com/users/janhoy/orgs","repos_url":"https://api.github.com/users/janhoy/repos","events_url":"https://api.github.com/users/janhoy/events{/privacy}","received_events_url":"https://api.github.com/users/janhoy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-24T22:40:37Z","updated_at":"2023-07-24T22:40:37Z","author_association":"CONTRIBUTOR","body":"I’m on vacation so please proceed without my review. I’m thrilled to see this be completed. Ok to support impl flow for 9.x but it should be removed for 10.0","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1648720273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1649751539","html_url":"https://github.com/apache/solr/pull/1785#issuecomment-1649751539","issue_url":"https://api.github.com/repos/apache/solr/issues/1785","id":1649751539,"node_id":"IC_kwDOFFj3yM5iVTXz","user":{"login":"epugh","id":22395,"node_id":"MDQ6VXNlcjIyMzk1","avatar_url":"https://avatars.githubusercontent.com/u/22395?v=4","gravatar_id":"","url":"https://api.github.com/users/epugh","html_url":"https://github.com/epugh","followers_url":"https://api.github.com/users/epugh/followers","following_url":"https://api.github.com/users/epugh/following{/other_user}","gists_url":"https://api.github.com/users/epugh/gists{/gist_id}","starred_url":"https://api.github.com/users/epugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epugh/subscriptions","organizations_url":"https://api.github.com/users/epugh/orgs","repos_url":"https://api.github.com/users/epugh/repos","events_url":"https://api.github.com/users/epugh/events{/privacy}","received_events_url":"https://api.github.com/users/epugh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-25T12:33:30Z","updated_at":"2023-07-25T12:33:30Z","author_association":"CONTRIBUTOR","body":"I have created https://issues.apache.org/jira/browse/SOLR-16903 to encourage migrating to Path everywhere....","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1649751539/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1651913195","html_url":"https://github.com/apache/solr/pull/1809#issuecomment-1651913195","issue_url":"https://api.github.com/repos/apache/solr/issues/1809","id":1651913195,"node_id":"IC_kwDOFFj3yM5idjHr","user":{"login":"HoustonPutman","id":3376422,"node_id":"MDQ6VXNlcjMzNzY0MjI=","avatar_url":"https://avatars.githubusercontent.com/u/3376422?v=4","gravatar_id":"","url":"https://api.github.com/users/HoustonPutman","html_url":"https://github.com/HoustonPutman","followers_url":"https://api.github.com/users/HoustonPutman/followers","following_url":"https://api.github.com/users/HoustonPutman/following{/other_user}","gists_url":"https://api.github.com/users/HoustonPutman/gists{/gist_id}","starred_url":"https://api.github.com/users/HoustonPutman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HoustonPutman/subscriptions","organizations_url":"https://api.github.com/users/HoustonPutman/orgs","repos_url":"https://api.github.com/users/HoustonPutman/repos","events_url":"https://api.github.com/users/HoustonPutman/events{/privacy}","received_events_url":"https://api.github.com/users/HoustonPutman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T14:24:15Z","updated_at":"2023-07-26T14:24:15Z","author_association":"CONTRIBUTOR","body":"Thank you for finding this! Would you mind creating a JIRA at https://issues.apache.org/jira/projects/SOLR/summary so that we can track this for the next release?\r\n\r\nOtherwise I'll test locally and commit once the JIRA has been created 🙂 ","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1651913195/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1651918804","html_url":"https://github.com/apache/solr/pull/1809#issuecomment-1651918804","issue_url":"https://api.github.com/repos/apache/solr/issues/1809","id":1651918804,"node_id":"IC_kwDOFFj3yM5idkfU","user":{"login":"osyoyu","id":1992308,"node_id":"MDQ6VXNlcjE5OTIzMDg=","avatar_url":"https://avatars.githubusercontent.com/u/1992308?v=4","gravatar_id":"","url":"https://api.github.com/users/osyoyu","html_url":"https://github.com/osyoyu","followers_url":"https://api.github.com/users/osyoyu/followers","following_url":"https://api.github.com/users/osyoyu/following{/other_user}","gists_url":"https://api.github.com/users/osyoyu/gists{/gist_id}","starred_url":"https://api.github.com/users/osyoyu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/osyoyu/subscriptions","organizations_url":"https://api.github.com/users/osyoyu/orgs","repos_url":"https://api.github.com/users/osyoyu/repos","events_url":"https://api.github.com/users/osyoyu/events{/privacy}","received_events_url":"https://api.github.com/users/osyoyu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T14:27:24Z","updated_at":"2023-07-26T14:27:24Z","author_association":"CONTRIBUTOR","body":"Sure 👍","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1651918804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1651953719","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1651953719","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1651953719,"node_id":"IC_kwDOFFj3yM5idtA3","user":{"login":"HoustonPutman","id":3376422,"node_id":"MDQ6VXNlcjMzNzY0MjI=","avatar_url":"https://avatars.githubusercontent.com/u/3376422?v=4","gravatar_id":"","url":"https://api.github.com/users/HoustonPutman","html_url":"https://github.com/HoustonPutman","followers_url":"https://api.github.com/users/HoustonPutman/followers","following_url":"https://api.github.com/users/HoustonPutman/following{/other_user}","gists_url":"https://api.github.com/users/HoustonPutman/gists{/gist_id}","starred_url":"https://api.github.com/users/HoustonPutman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HoustonPutman/subscriptions","organizations_url":"https://api.github.com/users/HoustonPutman/orgs","repos_url":"https://api.github.com/users/HoustonPutman/repos","events_url":"https://api.github.com/users/HoustonPutman/events{/privacy}","received_events_url":"https://api.github.com/users/HoustonPutman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T14:42:48Z","updated_at":"2023-07-26T14:42:48Z","author_association":"CONTRIBUTOR","body":"> Would this come to Solr 9 albeit in an opt-in module users would try (not required by SolrJ), then embrace it in Solr 10?\r\n\r\nSo the part used by users, being the actual clients that is generated code, will be packaged in SolrJ core (not a separate solrj module), so it can't really be opt-out. SolrJ core also doesn't need to depend on this `solrj-model` or `solrj-api` module, so that doesn't need to be opt-in or opt-out, only `solr-core` (and possibly Solr Modules) would depend on this new SolrJ module.\r\n\r\n> Might \"Api\" be a better name for this module? \"Model\" seems abstract.\r\n\r\nI think I agree here.\r\n\r\n> Putting \"I\" before the interfaces is something I normally kinda hate but if it's only a practice to be used here then I can accept it but not like it. Maybe \"Api\" prefix or suffix or none at all?\r\n\r\nI also really don't like the \"I\" thing. though, I'm not really sure what would be better. Maybe if we have an automated gradle check that ensures that the class starts with \"I\". I just want to make sure everything stays consistent.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1651953719/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1651971863","html_url":"https://github.com/apache/solr/pull/1778#issuecomment-1651971863","issue_url":"https://api.github.com/repos/apache/solr/issues/1778","id":1651971863,"node_id":"IC_kwDOFFj3yM5idxcX","user":{"login":"stillalex","id":61026,"node_id":"MDQ6VXNlcjYxMDI2","avatar_url":"https://avatars.githubusercontent.com/u/61026?v=4","gravatar_id":"","url":"https://api.github.com/users/stillalex","html_url":"https://github.com/stillalex","followers_url":"https://api.github.com/users/stillalex/followers","following_url":"https://api.github.com/users/stillalex/following{/other_user}","gists_url":"https://api.github.com/users/stillalex/gists{/gist_id}","starred_url":"https://api.github.com/users/stillalex/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stillalex/subscriptions","organizations_url":"https://api.github.com/users/stillalex/orgs","repos_url":"https://api.github.com/users/stillalex/repos","events_url":"https://api.github.com/users/stillalex/events{/privacy}","received_events_url":"https://api.github.com/users/stillalex/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T14:51:20Z","updated_at":"2023-07-26T14:51:20Z","author_association":"MEMBER","body":"> A bit of a larger macro question: should this PR modify an existing v2 API/request-handler to implement APIConfigProvider as a way to validate (and exhibit) the approach? Or would that bloat the PR too much (because it'd involve converting a new API to JAX-RS?)\r\n\r\nthis was my original thought, but to avoid this growing too large I was thinking we can push this in and pickup some API that needs it next, so we can iterate if needed. I also made sure this works by adding a test to showcase the functionality.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1651971863/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652097324","html_url":"https://github.com/apache/solr/pull/1809#issuecomment-1652097324","issue_url":"https://api.github.com/repos/apache/solr/issues/1809","id":1652097324,"node_id":"IC_kwDOFFj3yM5ieQEs","user":{"login":"osyoyu","id":1992308,"node_id":"MDQ6VXNlcjE5OTIzMDg=","avatar_url":"https://avatars.githubusercontent.com/u/1992308?v=4","gravatar_id":"","url":"https://api.github.com/users/osyoyu","html_url":"https://github.com/osyoyu","followers_url":"https://api.github.com/users/osyoyu/followers","following_url":"https://api.github.com/users/osyoyu/following{/other_user}","gists_url":"https://api.github.com/users/osyoyu/gists{/gist_id}","starred_url":"https://api.github.com/users/osyoyu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/osyoyu/subscriptions","organizations_url":"https://api.github.com/users/osyoyu/orgs","repos_url":"https://api.github.com/users/osyoyu/repos","events_url":"https://api.github.com/users/osyoyu/events{/privacy}","received_events_url":"https://api.github.com/users/osyoyu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T15:56:39Z","updated_at":"2023-07-26T15:56:39Z","author_association":"CONTRIBUTOR","body":"JIRA Issue created and commit message updated (force pushed). Let me know if I need to do something else!\r\nhttps://issues.apache.org/jira/browse/SOLR-16906","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652097324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652121987","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1652121987","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1652121987,"node_id":"IC_kwDOFFj3yM5ieWGD","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T16:12:56Z","updated_at":"2023-07-26T16:12:56Z","author_association":"CONTRIBUTOR","body":"> Might \"Api\" be a better name for this module? \"Model\" seems abstract.\r\n\r\n+1 - I waffled on the name a few times, but in hindsight I do think 'api' is better.\r\n\r\n> Putting \"I\" before the interfaces is something I normally kinda hate [...] Maybe \"Api\" prefix or suffix or none at all?\r\n\r\nI hate it as well, but I'm not sure how to differentiate between the API interfaces and the classes that implement them.  The implementing classes have an -API suffix, so that's already taken.  We could move the -API suffix to the interfaces and give the actual implementations an \"-Impl\" suffix, but I'm not really in love with that either.  Anyone have an idea that they like better than -API/-Impl or the \"I-\" prefix?  (Or have a preference between the two?)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652121987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652129601","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1652129601","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1652129601,"node_id":"IC_kwDOFFj3yM5ieX9B","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T16:18:16Z","updated_at":"2023-07-26T16:18:16Z","author_association":"CONTRIBUTOR","body":"One thing I don't think anyone has commented on yet is the structure of the generated SolrRequest classes - do those look reasonable as-is, or is there something missing?  (e.g. Factory or builder methods like we have in CollectionAdminRequest?). I guess there's no pressure to lock in the exact SolrRequest code at this point, since the APIs are v2 and therefore experimental and subject to change anyways.  But it feels remiss to not ask the question given the templates in this PR 🤷 ","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652129601/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652161175","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1652161175","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1652161175,"node_id":"IC_kwDOFFj3yM5iefqX","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T16:41:41Z","updated_at":"2023-07-26T16:41:41Z","author_association":"CONTRIBUTOR","body":"> We could move the -API suffix to the interfaces and give the actual implementations an \"-Impl\" suffix\r\n\r\nYes I think we should do that.  If our existing \"API\" classes *implement* the API, and we are introducing a new interface distinction that previously didn't exist then let's incorporate \"Impl\" into the name of the existing classes.  Even if it means a bunch of renames.  The \"Impl\" suffix is kinda common in such approaches.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652161175/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652258491","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1652258491","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1652258491,"node_id":"IC_kwDOFFj3yM5ie3a7","user":{"login":"HoustonPutman","id":3376422,"node_id":"MDQ6VXNlcjMzNzY0MjI=","avatar_url":"https://avatars.githubusercontent.com/u/3376422?v=4","gravatar_id":"","url":"https://api.github.com/users/HoustonPutman","html_url":"https://github.com/HoustonPutman","followers_url":"https://api.github.com/users/HoustonPutman/followers","following_url":"https://api.github.com/users/HoustonPutman/following{/other_user}","gists_url":"https://api.github.com/users/HoustonPutman/gists{/gist_id}","starred_url":"https://api.github.com/users/HoustonPutman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HoustonPutman/subscriptions","organizations_url":"https://api.github.com/users/HoustonPutman/orgs","repos_url":"https://api.github.com/users/HoustonPutman/repos","events_url":"https://api.github.com/users/HoustonPutman/events{/privacy}","received_events_url":"https://api.github.com/users/HoustonPutman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T17:55:08Z","updated_at":"2023-07-26T17:55:08Z","author_association":"CONTRIBUTOR","body":"I'd rather get rid of `Impl` all together. (As I'd like to get rid of it in the other places we use it as well, but that's a whole separate issue). So `CollectionBackupApi` and `CollectionBackup`, (it will be clear it's an `api`, since it lives in the `org.apache.solr.handler.admin.api` package).","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652258491/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652266356","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1652266356","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1652266356,"node_id":"IC_kwDOFFj3yM5ie5V0","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T18:01:44Z","updated_at":"2023-07-26T18:01:44Z","author_association":"CONTRIBUTOR","body":"+1 to your proposal Houston; I'm not a big fan of \"Impl\" either.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652266356/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652291513","html_url":"https://github.com/apache/solr/pull/1809#issuecomment-1652291513","issue_url":"https://api.github.com/repos/apache/solr/issues/1809","id":1652291513,"node_id":"IC_kwDOFFj3yM5ie_e5","user":{"login":"HoustonPutman","id":3376422,"node_id":"MDQ6VXNlcjMzNzY0MjI=","avatar_url":"https://avatars.githubusercontent.com/u/3376422?v=4","gravatar_id":"","url":"https://api.github.com/users/HoustonPutman","html_url":"https://github.com/HoustonPutman","followers_url":"https://api.github.com/users/HoustonPutman/followers","following_url":"https://api.github.com/users/HoustonPutman/following{/other_user}","gists_url":"https://api.github.com/users/HoustonPutman/gists{/gist_id}","starred_url":"https://api.github.com/users/HoustonPutman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HoustonPutman/subscriptions","organizations_url":"https://api.github.com/users/HoustonPutman/orgs","repos_url":"https://api.github.com/users/HoustonPutman/repos","events_url":"https://api.github.com/users/HoustonPutman/events{/privacy}","received_events_url":"https://api.github.com/users/HoustonPutman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T18:22:53Z","updated_at":"2023-07-26T18:22:53Z","author_association":"CONTRIBUTOR","body":"Let me know if you are ok with that name in the changelog entry.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652291513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652388788","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1652388788","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1652388788,"node_id":"IC_kwDOFFj3yM5ifXO0","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T19:41:55Z","updated_at":"2023-07-26T19:44:41Z","author_association":"CONTRIBUTOR","body":"> [Houston] SolrJ core also doesn't need to depend on this solrj-model or solrj-api module, so that doesn't need to be opt-in or opt-out\r\n\r\n😬 As things are today, SolrJ **is** dependent on the 'api' module.  The generated SolrRequest files are copied over to SolrJ and built into that jar, but those SolrRequest files rely on POJO classes from 'api' to represent the request and response bodies.\r\n\r\nAs an example, here's the ctor of the generated SolrRequest class called 'AddReplicaProperty'.  The `AddReplicaPropertyRequestBody` class is defined in the 'api' module.\r\n\r\n```\r\n    public AddReplicaProperty(\r\n        String collName, String shardName, String replicaName, String propName) {\r\n      super(\r\n          SolrRequest.METHOD.valueOf(\"PUT\"),\r\n          \"/collections/{collName}/shards/{shardName}/replicas/{replicaName}/properties/{propName}\"\r\n              .replace(\"{\" + \"collName\" + \"}\", collName)\r\n              .replace(\"{\" + \"shardName\" + \"}\", shardName)\r\n              .replace(\"{\" + \"replicaName\" + \"}\", replicaName)\r\n              .replace(\"{\" + \"propName\" + \"}\", propName));\r\n\r\n      ...<snip>...\r\n      this.requestBody = new AddReplicaPropertyRequestBody();\r\n    }\r\n```\r\n\r\n----\r\n\r\nNow, this isn't required - we can drop the solrj->api dependency if we really want - we'd just need to tweak our openapi-generator invocation to also generate \"model\" classes that are near duplicates of the POJOs that already live in the 'api' submodule.  I actually had that working earlier on in this POC but dropped it because at the time I didn't see a reason to generate classes that were such close duplicates of Java code we already had.  If you guys think generating models makes sense though, I'm OK with reversing course.\r\n\r\n> Would this come to Solr 9 albeit in an opt-in module users would try (not required by SolrJ), then embrace it in Solr 10?\r\n\r\nWould we really need to make the 'api' module \"opt-in\" for 9.x?  I'm sure I'm showing my naiveté here, but client libraries change their deps all the time in non-major releases, don't they?  What benefit does \"opt-in\" get our users?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652388788/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652481090","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1652481090","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1652481090,"node_id":"IC_kwDOFFj3yM5iftxC","user":{"login":"HoustonPutman","id":3376422,"node_id":"MDQ6VXNlcjMzNzY0MjI=","avatar_url":"https://avatars.githubusercontent.com/u/3376422?v=4","gravatar_id":"","url":"https://api.github.com/users/HoustonPutman","html_url":"https://github.com/HoustonPutman","followers_url":"https://api.github.com/users/HoustonPutman/followers","following_url":"https://api.github.com/users/HoustonPutman/following{/other_user}","gists_url":"https://api.github.com/users/HoustonPutman/gists{/gist_id}","starred_url":"https://api.github.com/users/HoustonPutman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HoustonPutman/subscriptions","organizations_url":"https://api.github.com/users/HoustonPutman/orgs","repos_url":"https://api.github.com/users/HoustonPutman/repos","events_url":"https://api.github.com/users/HoustonPutman/events{/privacy}","received_events_url":"https://api.github.com/users/HoustonPutman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T20:54:40Z","updated_at":"2023-07-26T20:54:40Z","author_association":"CONTRIBUTOR","body":"> Would we really need to make the 'api' module \"opt-in\" for 9.x? I'm sure I'm showing my naiveté here, but client libraries change their deps all the time in non-major releases, don't they? What benefit does \"opt-in\" get our users?\r\n\r\nI don't think it's possible to make the `api` module \"opt-in\". This is a first class feature, that's going to be intertwined with SolrJ.\r\n\r\n> 😬 As things are today, SolrJ **is** dependent on the 'api' module. The generated SolrRequest files are copied over to SolrJ and built into that jar, but those SolrRequest files rely on POJO classes from 'api' to represent the request and response bodies.\r\n\r\nAhh that makes sense, I guess having `api` be a dependency is of very little consequence.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652481090/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652534121","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1652534121","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1652534121,"node_id":"IC_kwDOFFj3yM5if6tp","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-26T21:40:15Z","updated_at":"2023-07-26T21:40:15Z","author_association":"CONTRIBUTOR","body":"Then could we embed \"api\"/model if it's inextricably a part of SolrJ?  (somehow put the same classes in the same JAR)","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652534121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652788638","html_url":"https://github.com/apache/solr/pull/1809#issuecomment-1652788638","issue_url":"https://api.github.com/repos/apache/solr/issues/1809","id":1652788638,"node_id":"IC_kwDOFFj3yM5ig42e","user":{"login":"osyoyu","id":1992308,"node_id":"MDQ6VXNlcjE5OTIzMDg=","avatar_url":"https://avatars.githubusercontent.com/u/1992308?v=4","gravatar_id":"","url":"https://api.github.com/users/osyoyu","html_url":"https://github.com/osyoyu","followers_url":"https://api.github.com/users/osyoyu/followers","following_url":"https://api.github.com/users/osyoyu/following{/other_user}","gists_url":"https://api.github.com/users/osyoyu/gists{/gist_id}","starred_url":"https://api.github.com/users/osyoyu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/osyoyu/subscriptions","organizations_url":"https://api.github.com/users/osyoyu/orgs","repos_url":"https://api.github.com/users/osyoyu/repos","events_url":"https://api.github.com/users/osyoyu/events{/privacy}","received_events_url":"https://api.github.com/users/osyoyu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-27T01:39:53Z","updated_at":"2023-07-27T01:39:53Z","author_association":"CONTRIBUTOR","body":"No problems with me. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1652788638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1653728521","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1653728521","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1653728521,"node_id":"IC_kwDOFFj3yM5ikeUJ","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-27T14:23:56Z","updated_at":"2023-07-27T14:23:56Z","author_association":"CONTRIBUTOR","body":"> Then could we embed \"api\"/model if it's inextricably a part of SolrJ?\r\n\r\nSolrJ needs to have the generated SolrRequest source code by the time 'compileJava' runs.  To generate those classes, we need to generate the OpenAPI spec first.  But to generate the OpenAPI spec, we need to have class files for the api/model classes already produced.\r\n\r\nSo to have everything in the same module, you'd need a way to tell gradle to compile some partition of its sourceSet, then run a bunch of other generation tasks, and then compile the remainder of its sourceSet.  Maybe that's possible?  If you can find a way to do it, I've got no objections.\r\n\r\nBut to a non-expert in gradle having separate modules feels like a reasonably intuitive way to represent the relationship between these two chunks of code though 🤷.\r\n\r\nCan you elaborate at all on the benefits of avoiding the additional module?  Is your concern around maintenance on the developer end?  Complexity on the user end?  Maybe there's something we can do to address those underlying concerns, even if we need to end up keeping the 'api' module around...","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1653728521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654192331","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1654192331","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1654192331,"node_id":"IC_kwDOFFj3yM5imPjL","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-27T18:28:40Z","updated_at":"2023-07-27T18:28:40Z","author_association":"CONTRIBUTOR","body":"My motivation is to provide an optimal experience to users -- a single JAR.  I recognize there isn't a strict requirement here.  For a how-to, a quick Google search turned up this promising information: https://stackoverflow.com/questions/29602095/gradle-how-to-generate-source-code-before-compilation-in-android-app","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654192331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654248946","html_url":"https://github.com/apache/solr/pull/1629#issuecomment-1654248946","issue_url":"https://api.github.com/repos/apache/solr/issues/1629","id":1654248946,"node_id":"IC_kwDOFFj3yM5imdXy","user":{"login":"HoustonPutman","id":3376422,"node_id":"MDQ6VXNlcjMzNzY0MjI=","avatar_url":"https://avatars.githubusercontent.com/u/3376422?v=4","gravatar_id":"","url":"https://api.github.com/users/HoustonPutman","html_url":"https://github.com/HoustonPutman","followers_url":"https://api.github.com/users/HoustonPutman/followers","following_url":"https://api.github.com/users/HoustonPutman/following{/other_user}","gists_url":"https://api.github.com/users/HoustonPutman/gists{/gist_id}","starred_url":"https://api.github.com/users/HoustonPutman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HoustonPutman/subscriptions","organizations_url":"https://api.github.com/users/HoustonPutman/orgs","repos_url":"https://api.github.com/users/HoustonPutman/repos","events_url":"https://api.github.com/users/HoustonPutman/events{/privacy}","received_events_url":"https://api.github.com/users/HoustonPutman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-27T18:56:12Z","updated_at":"2023-07-27T18:56:12Z","author_association":"CONTRIBUTOR","body":"backported to 9.4","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654248946/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654436038","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1654436038","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1654436038,"node_id":"IC_kwDOFFj3yM5inLDG","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-27T19:42:04Z","updated_at":"2023-07-27T19:43:37Z","author_association":"CONTRIBUTOR","body":"> My motivation is to provide an optimal experience to users -- a single JAR.\r\n\r\nI'm not sure I understand -- SolrJ has never been a single jar.  It uses a bunch of Jetty libs, SLF4J, Apache HttpComponents, Jackson (pending, with this PR).  Do you see the 'api' dep being more onerous than those in some way?  Or are you trying to preserve a potential a future where SolrJ is truly dependency-less in a way that it's not today?\r\n\r\n> Google search turned up this promising information\r\n\r\nThanks for the link!  Actually, we're already doing something similar to the accepted answer here, in that we're declaring compileJava to be dependent on our generation task (openApiGenerate).\r\n\r\nBut the applicability stops there unfortunately: it's just two very different kinds of generation.\r\n\r\nThe SO question is trying to do FMPP generation, which essentially acts like a C-preprocessor and does some primitive string-manipulation and macro-expansion.  The input is raw source files - or really any text you feed it, it doesn't even have to be code.  OTOH, the swagger-gradle-plugin we're using requires already-compiled class files as input.  They're just very different animals unfortunately.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654436038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654467889","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1654467889","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1654467889,"node_id":"IC_kwDOFFj3yM5inS0x","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-27T19:57:12Z","updated_at":"2023-07-27T19:57:12Z","author_association":"CONTRIBUTOR","body":"Okay fine.  What's *new* here is we are insisting that a SolrJ client be two JARs from the Solr project, in additional to dependency JARs.  Not ideal but if it's too hard to combine then okay.  I don't like that it exposes internal structure project build matters to the user/client who shouldn't care / observe it from their perspective.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654467889/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654598386","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1654598386","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1654598386,"node_id":"IC_kwDOFFj3yM5inyry","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-27T21:17:38Z","updated_at":"2023-07-28T15:03:15Z","author_association":"CONTRIBUTOR","body":"Alright - made some decent enough progress addressing review feedback, etc. that I'm taking this out of \"Draft\" mode!\r\n\r\nThere's still one big unanswered question that's come up so far: if we're adding Jackson to SolrJ do we want to add it as a \"normal\" dependency, or do we want to shade to save SolrJ users any potential version conflicts?\r\n\r\nBut of course there's still lots I'd appreciate feedback on.  Especially on the template for the generated files - do these SolrRequests and Responses look reasonable to folks?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654598386/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654677473","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1654677473","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1654677473,"node_id":"IC_kwDOFFj3yM5ioF_h","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-27T22:44:26Z","updated_at":"2023-07-27T22:44:26Z","author_association":"CONTRIBUTOR","body":"> So the part used by users, being the actual clients that is generated code, will be packaged in SolrJ core (not a separate solrj module), so it can't really be opt-out. \r\n\r\nIt can't be generated into the \"api\" module?  Forgive me if this is a stupid question or already covered... I'm new to this.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654677473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654679695","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1654679695","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1654679695,"node_id":"IC_kwDOFFj3yM5ioGiP","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-27T22:47:42Z","updated_at":"2023-07-27T22:47:42Z","author_association":"CONTRIBUTOR","body":"I reviewed the SolrRequests and Responses and they look good.  BTW I checked out the branch and generated them to look.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654679695/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654744305","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1654744305","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1654744305,"node_id":"IC_kwDOFFj3yM5ioWTx","user":{"login":"HoustonPutman","id":3376422,"node_id":"MDQ6VXNlcjMzNzY0MjI=","avatar_url":"https://avatars.githubusercontent.com/u/3376422?v=4","gravatar_id":"","url":"https://api.github.com/users/HoustonPutman","html_url":"https://github.com/HoustonPutman","followers_url":"https://api.github.com/users/HoustonPutman/followers","following_url":"https://api.github.com/users/HoustonPutman/following{/other_user}","gists_url":"https://api.github.com/users/HoustonPutman/gists{/gist_id}","starred_url":"https://api.github.com/users/HoustonPutman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HoustonPutman/subscriptions","organizations_url":"https://api.github.com/users/HoustonPutman/orgs","repos_url":"https://api.github.com/users/HoustonPutman/repos","events_url":"https://api.github.com/users/HoustonPutman/events{/privacy}","received_events_url":"https://api.github.com/users/HoustonPutman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-27T23:20:22Z","updated_at":"2023-07-27T23:20:22Z","author_association":"CONTRIBUTOR","body":"> > So the part used by users, being the actual clients that is generated code, will be packaged in SolrJ core (not a separate solrj module), so it can't really be opt-out.\r\n> \r\n> It can't be generated into the \"api\" module? Forgive me if this is a stupid question or already covered... I'm new to this.\r\n\r\nCorrect, the generated classes import stuff from SolrJ, so they have to be generated in SolrJ.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654744305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654836277","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1654836277","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1654836277,"node_id":"IC_kwDOFFj3yM5iosw1","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-28T01:20:38Z","updated_at":"2023-07-28T01:20:38Z","author_association":"CONTRIBUTOR","body":">  the generated classes import stuff from SolrJ, so they have to be generated in SolrJ\r\n\r\nThe \"api\" module could depend-on SolrJ, and thus the Jackson stuff added could be in \"api\" as well.  No?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1654836277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1655935475","html_url":"https://github.com/apache/solr/pull/1811#issuecomment-1655935475","issue_url":"https://api.github.com/repos/apache/solr/issues/1811","id":1655935475,"node_id":"IC_kwDOFFj3yM5is5Hz","user":{"login":"HoustonPutman","id":3376422,"node_id":"MDQ6VXNlcjMzNzY0MjI=","avatar_url":"https://avatars.githubusercontent.com/u/3376422?v=4","gravatar_id":"","url":"https://api.github.com/users/HoustonPutman","html_url":"https://github.com/HoustonPutman","followers_url":"https://api.github.com/users/HoustonPutman/followers","following_url":"https://api.github.com/users/HoustonPutman/following{/other_user}","gists_url":"https://api.github.com/users/HoustonPutman/gists{/gist_id}","starred_url":"https://api.github.com/users/HoustonPutman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HoustonPutman/subscriptions","organizations_url":"https://api.github.com/users/HoustonPutman/orgs","repos_url":"https://api.github.com/users/HoustonPutman/repos","events_url":"https://api.github.com/users/HoustonPutman/events{/privacy}","received_events_url":"https://api.github.com/users/HoustonPutman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-28T16:00:36Z","updated_at":"2023-07-28T16:00:36Z","author_association":"CONTRIBUTOR","body":"I added an integration test, which fails on `main` and passes on this PR. So I think this is good to go!\r\n\r\nThanks for finding this and making a fix 🙂 ","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1655935475/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1655987671","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1655987671","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1655987671,"node_id":"IC_kwDOFFj3yM5itF3X","user":{"login":"HoustonPutman","id":3376422,"node_id":"MDQ6VXNlcjMzNzY0MjI=","avatar_url":"https://avatars.githubusercontent.com/u/3376422?v=4","gravatar_id":"","url":"https://api.github.com/users/HoustonPutman","html_url":"https://github.com/HoustonPutman","followers_url":"https://api.github.com/users/HoustonPutman/followers","following_url":"https://api.github.com/users/HoustonPutman/following{/other_user}","gists_url":"https://api.github.com/users/HoustonPutman/gists{/gist_id}","starred_url":"https://api.github.com/users/HoustonPutman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HoustonPutman/subscriptions","organizations_url":"https://api.github.com/users/HoustonPutman/orgs","repos_url":"https://api.github.com/users/HoustonPutman/repos","events_url":"https://api.github.com/users/HoustonPutman/events{/privacy}","received_events_url":"https://api.github.com/users/HoustonPutman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-28T16:41:16Z","updated_at":"2023-07-28T16:41:16Z","author_association":"CONTRIBUTOR","body":"> The \"api\" module could depend-on SolrJ, and thus the Jackson stuff added could be in \"api\" as well. No?\r\n\r\nIf the \"api\" module were to have the API classes and the generated code, we would need multiple class generation steps, so that the API classes would be compiled, then the generated code would be generated from those class files, which would then be compiled. That's definitely more complicated than the workflow we have so far.\r\n\r\n> OTOH, the swagger-gradle-plugin we're using requires already-compiled class files as input. ","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1655987671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1656035802","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1656035802","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1656035802,"node_id":"IC_kwDOFFj3yM5itRna","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-28T17:15:38Z","updated_at":"2023-07-28T17:15:38Z","author_association":"CONTRIBUTOR","body":"+1 to what Houston said.  There's no great way to have `api` depend on `solrj` without a solve for the \"multiple class generation steps\" problem.  And if we find a way around that, we should just nuke 'api' altogether and move the code into SolrJ as David [suggested a few days back](https://github.com/apache/solr/pull/1793#issuecomment-1652534121).","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1656035802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1656227489","html_url":"https://github.com/apache/solr/pull/1810#issuecomment-1656227489","issue_url":"https://api.github.com/repos/apache/solr/issues/1810","id":1656227489,"node_id":"IC_kwDOFFj3yM5iuAah","user":{"login":"epugh","id":22395,"node_id":"MDQ6VXNlcjIyMzk1","avatar_url":"https://avatars.githubusercontent.com/u/22395?v=4","gravatar_id":"","url":"https://api.github.com/users/epugh","html_url":"https://github.com/epugh","followers_url":"https://api.github.com/users/epugh/followers","following_url":"https://api.github.com/users/epugh/following{/other_user}","gists_url":"https://api.github.com/users/epugh/gists{/gist_id}","starred_url":"https://api.github.com/users/epugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epugh/subscriptions","organizations_url":"https://api.github.com/users/epugh/orgs","repos_url":"https://api.github.com/users/epugh/repos","events_url":"https://api.github.com/users/epugh/events{/privacy}","received_events_url":"https://api.github.com/users/epugh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-28T19:37:39Z","updated_at":"2023-07-28T19:37:39Z","author_association":"CONTRIBUTOR","body":"Locally at least all the bats tests pass except for `test_placement_plugin.bats` who may actually be a bit flaky...","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1656227489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1656362394","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1656362394","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1656362394,"node_id":"IC_kwDOFFj3yM5iuhWa","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-28T21:42:52Z","updated_at":"2023-07-28T21:42:52Z","author_association":"CONTRIBUTOR","body":"If I spend some time figuring out how to iterate on this PR to keep SolrJ free of this stuff (particularly Jackson) by solving the \"multi-step code generation\" or whatever to keep \"api\" separate (and with no inward dependency from SolrJ) -- would that be appreciated?  If it's too ugly / awkward to maintain, we don't have to keep it.  I think there's value in keeping SolrJ more focused on being a useful client for query & indexing that doesn't require Jackson... and having an \"api\" module on the side for doing all the other (often \"admin\") requests into Solr.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1656362394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1656474286","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1656474286","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1656474286,"node_id":"IC_kwDOFFj3yM5iu8qu","user":{"login":"epugh","id":22395,"node_id":"MDQ6VXNlcjIyMzk1","avatar_url":"https://avatars.githubusercontent.com/u/22395?v=4","gravatar_id":"","url":"https://api.github.com/users/epugh","html_url":"https://github.com/epugh","followers_url":"https://api.github.com/users/epugh/followers","following_url":"https://api.github.com/users/epugh/following{/other_user}","gists_url":"https://api.github.com/users/epugh/gists{/gist_id}","starred_url":"https://api.github.com/users/epugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epugh/subscriptions","organizations_url":"https://api.github.com/users/epugh/orgs","repos_url":"https://api.github.com/users/epugh/repos","events_url":"https://api.github.com/users/epugh/events{/privacy}","received_events_url":"https://api.github.com/users/epugh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-28T23:58:42Z","updated_at":"2023-07-28T23:58:42Z","author_association":"CONTRIBUTOR","body":"What about having a SolrJ-Slim and SolrJ, the slim being the query/update interface..  Similar to our two Docker images?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1656474286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1658408834","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1658408834","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1658408834,"node_id":"IC_kwDOFFj3yM5i2U-C","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-31T13:46:36Z","updated_at":"2023-07-31T13:46:36Z","author_association":"CONTRIBUTOR","body":"> I think there's value in keeping SolrJ more focused on being a useful client for query & indexing that doesn't require Jackson... and having an \"api\" module on the side for doing all the other (often \"admin\") requests into Solr.\r\n\r\nI guess I just don't see a ton of user value in making that distinction.  Is this all just to save users the pain of a Jackson version conflict, or the few extra MB it'd take to shade Jackson in SolrJ?\r\n\r\nThe way I see it, there aren't tons and tons of users out there who query and index, but never need to create a collection.  So whatever division we make to isolate the Jackson dep will be meaningless to a majority of our users.\r\n\r\nAnd the few users who _can_ take advantage of such a distinction, probably shouldn't anyway.  Queries, etc. will probably be faster if they have Jackson available to use CBOR, the new transfer format Solr partially supports in 9.3.  Depending how much you trust the [perf tests done here](https://issues.apache.org/jira/browse/SOLR-16812)), CBOR appears to be Solr's most efficient transfer format - a serious upgrade over javabin that anyone concerned about latency is going to want to try.\r\n\r\nBut that's just my take 🤷 \r\n\r\n> If I spend some time figuring out how to iterate on this PR to keep SolrJ free of this stuff (particularly Jackson) by solving the \"multi-step code generation\" or whatever to keep \"api\" separate (and with no inward dependency from SolrJ) -- would that be appreciated?\r\n\r\nFor sure!  If you find a reasonably elegant way around the \"multi-step code generation\" thing, or find a way to avoid the extra module, I'm all for that.  I've been trying to bait folks into double-checking my sketchy gradle work throughout 😛  (Thanks to Houston for all the help so far!)\r\n\r\nAs I said, I'm personally skeptical of the value prop in creating a new user-facing module just for the purpose of segregating our Jackson surface area.  But if there's solid consensus around that, and you're willing to look into it, I'm open to being the minority there as well.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1658408834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1658564753","html_url":"https://github.com/apache/solr/pull/1481#issuecomment-1658564753","issue_url":"https://api.github.com/repos/apache/solr/issues/1481","id":1658564753,"node_id":"IC_kwDOFFj3yM5i27CR","user":{"login":"magibney","id":6225104,"node_id":"MDQ6VXNlcjYyMjUxMDQ=","avatar_url":"https://avatars.githubusercontent.com/u/6225104?v=4","gravatar_id":"","url":"https://api.github.com/users/magibney","html_url":"https://github.com/magibney","followers_url":"https://api.github.com/users/magibney/followers","following_url":"https://api.github.com/users/magibney/following{/other_user}","gists_url":"https://api.github.com/users/magibney/gists{/gist_id}","starred_url":"https://api.github.com/users/magibney/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magibney/subscriptions","organizations_url":"https://api.github.com/users/magibney/orgs","repos_url":"https://api.github.com/users/magibney/repos","events_url":"https://api.github.com/users/magibney/events{/privacy}","received_events_url":"https://api.github.com/users/magibney/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-31T15:08:45Z","updated_at":"2023-07-31T15:08:45Z","author_association":"CONTRIBUTOR","body":"This fell through the cracks; circling back now, I plan to merge this within the next couple of days, pending any objections/feedback. cc @dsmiley , @mkhludnev.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1658564753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1658993106","html_url":"https://github.com/apache/solr/pull/1808#issuecomment-1658993106","issue_url":"https://api.github.com/repos/apache/solr/issues/1808","id":1658993106,"node_id":"IC_kwDOFFj3yM5i4jnS","user":{"login":"epugh","id":22395,"node_id":"MDQ6VXNlcjIyMzk1","avatar_url":"https://avatars.githubusercontent.com/u/22395?v=4","gravatar_id":"","url":"https://api.github.com/users/epugh","html_url":"https://github.com/epugh","followers_url":"https://api.github.com/users/epugh/followers","following_url":"https://api.github.com/users/epugh/following{/other_user}","gists_url":"https://api.github.com/users/epugh/gists{/gist_id}","starred_url":"https://api.github.com/users/epugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epugh/subscriptions","organizations_url":"https://api.github.com/users/epugh/orgs","repos_url":"https://api.github.com/users/epugh/repos","events_url":"https://api.github.com/users/epugh/events{/privacy}","received_events_url":"https://api.github.com/users/epugh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-07-31T19:17:47Z","updated_at":"2023-07-31T19:17:47Z","author_association":"CONTRIBUTOR","body":"This PR is held up on getting SOLR-16911, PR #1810 committed first....","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1658993106/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1659426401","html_url":"https://github.com/apache/solr/pull/1821#issuecomment-1659426401","issue_url":"https://api.github.com/repos/apache/solr/issues/1821","id":1659426401,"node_id":"IC_kwDOFFj3yM5i6NZh","user":{"login":"solrbot","id":125606113,"node_id":"U_kgDOB3yY4Q","avatar_url":"https://avatars.githubusercontent.com/u/125606113?v=4","gravatar_id":"","url":"https://api.github.com/users/solrbot","html_url":"https://github.com/solrbot","followers_url":"https://api.github.com/users/solrbot/followers","following_url":"https://api.github.com/users/solrbot/following{/other_user}","gists_url":"https://api.github.com/users/solrbot/gists{/gist_id}","starred_url":"https://api.github.com/users/solrbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solrbot/subscriptions","organizations_url":"https://api.github.com/users/solrbot/orgs","repos_url":"https://api.github.com/users/solrbot/repos","events_url":"https://api.github.com/users/solrbot/events{/privacy}","received_events_url":"https://api.github.com/users/solrbot/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T01:25:26Z","updated_at":"2024-06-05T12:45:27Z","author_association":"COLLABORATOR","body":"### ⚠ Artifact update problem\n\nRenovate failed to update an artifact related to this branch. You probably do not want to merge this PR as-is.\n\n♻ Renovate will retry this branch, including artifacts, only when one of the following happens:\n\n - any of the package files in this branch needs updating, or \n - the branch becomes conflicted, or\n - you click the rebase/retry checkbox if found above, or\n - you rename this PR's title to start with \"rebase!\" to trigger it manually\n\nThe artifact failure details are included below:\n\n##### File name: undefined\n\n```\nCommand failed: ./gradlew updateLicenses\nSLF4J(W): No SLF4J providers were found.\nSLF4J(W): Defaulting to no-operation (NOP) logger implementation\nSLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:24: error: package org.eclipse.jetty.client.api does not exist\nimport org.eclipse.jetty.client.api.Authentication;\n                                   ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:25: error: package org.eclipse.jetty.client.api does not exist\nimport org.eclipse.jetty.client.api.ContentResponse;\n                                   ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:26: error: package org.eclipse.jetty.client.api does not exist\nimport org.eclipse.jetty.client.api.Request;\n                                   ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:30: error: cannot find symbol\npublic class SolrBasicAuthentication implements Authentication {\n                                                ^\n  symbol: class Authentication\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:48: error: cannot find symbol\n      Request request, ContentResponse response, HeaderInfo headerInfo, Attributes context) {\n      ^\n  symbol:   class Request\n  location: class SolrBasicAuthentication\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:48: error: cannot find symbol\n      Request request, ContentResponse response, HeaderInfo headerInfo, Attributes context) {\n                       ^\n  symbol:   class ContentResponse\n  location: class SolrBasicAuthentication\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:48: error: cannot find symbol\n      Request request, ContentResponse response, HeaderInfo headerInfo, Attributes context) {\n                                                 ^\n  symbol:   class HeaderInfo\n  location: class SolrBasicAuthentication\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:47: error: cannot find symbol\n  public Result authenticate(\n         ^\n  symbol:   class Result\n  location: class SolrBasicAuthentication\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Krb5HttpClientBuilder.java:44: error: cannot find symbol\nimport org.eclipse.jetty.client.HttpAuthenticationStore;\n                               ^\n  symbol:   class HttpAuthenticationStore\n  location: package org.eclipse.jetty.client\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Krb5HttpClientBuilder.java:46: error: package org.eclipse.jetty.client.util does not exist\nimport org.eclipse.jetty.client.util.SPNEGOAuthentication;\n                                    ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Krb5HttpClientBuilder.java:83: error: cannot find symbol\n  private SPNEGOAuthentication createSPNEGOAuthentication() {\n          ^\n  symbol:   class SPNEGOAuthentication\n  location: class Krb5HttpClientBuilder\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Krb5HttpClientBuilder.java:111: error: cannot find symbol\n      SPNEGOAuthentication authentication, Map<String, ?> options, String username) {\n      ^\n  symbol:   class SPNEGOAuthentication\n  location: class Krb5HttpClientBuilder\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpListenerFactory.java:20: error: package org.eclipse.jetty.client.api does not exist\nimport org.eclipse.jetty.client.api.Request;\n                                   ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpListenerFactory.java:21: error: package org.eclipse.jetty.client.api does not exist\nimport org.eclipse.jetty.client.api.Response;\n                                   ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpListenerFactory.java:22: error: package org.eclipse.jetty.client.api does not exist\nimport org.eclipse.jetty.client.api.Result;\n                                   ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:67: error: package org.eclipse.jetty.client.api does not exist\nimport org.eclipse.jetty.client.api.AuthenticationStore;\n                                   ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:68: error: package org.eclipse.jetty.client.api does not exist\nimport org.eclipse.jetty.client.api.Request;\n                                   ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:69: error: package org.eclipse.jetty.client.api does not exist\nimport org.eclipse.jetty.client.api.Response;\n                                   ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:70: error: package org.eclipse.jetty.client.api does not exist\nimport org.eclipse.jetty.client.api.Result;\n                                   ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:71: error: package org.eclipse.jetty.client.http does not exist\nimport org.eclipse.jetty.client.http.HttpClientTransportOverHTTP;\n                                    ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:72: error: package org.eclipse.jetty.client.util does not exist\nimport org.eclipse.jetty.client.util.FormRequestContent;\n                                    ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:73: error: package org.eclipse.jetty.client.util does not exist\nimport org.eclipse.jetty.client.util.InputStreamRequestContent;\n                                    ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:74: error: package org.eclipse.jetty.client.util does not exist\nimport org.eclipse.jetty.client.util.InputStreamResponseListener;\n                                    ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:75: error: package org.eclipse.jetty.client.util does not exist\nimport org.eclipse.jetty.client.util.MultiPartRequestContent;\n                                    ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:76: error: package org.eclipse.jetty.client.util does not exist\nimport org.eclipse.jetty.client.util.OutputStreamRequestContent;\n                                    ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:77: error: package org.eclipse.jetty.client.util does not exist\nimport org.eclipse.jetty.client.util.StringRequestContent;\n                                    ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:88: error: cannot find symbol\nimport org.eclipse.jetty.util.HttpCookieStore;\n                             ^\n  symbol:   class HttpCookieStore\n  location: package org.eclipse.jetty.util\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/AuthenticationStoreHolder.java:21: error: cannot find symbol\nimport org.eclipse.jetty.client.HttpAuthenticationStore;\n                               ^\n  symbol:   class HttpAuthenticationStore\n  location: package org.eclipse.jetty.client\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/AuthenticationStoreHolder.java:22: error: package org.eclipse.jetty.client.api does not exist\nimport org.eclipse.jetty.client.api.Authentication;\n                                   ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/AuthenticationStoreHolder.java:23: error: package org.eclipse.jetty.client.api does not exist\nimport org.eclipse.jetty.client.api.AuthenticationStore;\n                                   ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/AuthenticationStoreHolder.java:25: error: cannot find symbol\npublic class AuthenticationStoreHolder implements AuthenticationStore {\n                                                  ^\n  symbol: class AuthenticationStore\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:313: error: cannot find symbol\n  public void setAuthenticationStore(AuthenticationStore authenticationStore) {\n                                     ^\n  symbol:   class AuthenticationStore\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:537: error: cannot find symbol\n      SolrRequest<?> solrRequest, Response response, InputStream is, String urlExceptionMessage)\n                                  ^\n  symbol:   class Response\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:561: error: cannot find symbol\n  private void setBasicAuthHeader(SolrRequest<?> solrRequest, Request req) {\n                                                              ^\n  symbol:   class Request\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:572: error: cannot find symbol\n  private void decorateRequest(Request req, SolrRequest<?> solrRequest, boolean isAsync) {\n                               ^\n  symbol:   class Request\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:683: error: cannot find symbol\n  private Request sendRequest(MakeRequestReturnValue mrrv, InputStreamResponseListener listener)\n                                                           ^\n  symbol:   class InputStreamResponseListener\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:683: error: cannot find symbol\n  private Request sendRequest(MakeRequestReturnValue mrrv, InputStreamResponseListener listener)\n          ^\n  symbol:   class Request\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:696: error: cannot find symbol\n      Request req,\n      ^\n  symbol:   class Request\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:695: error: cannot find symbol\n  private Request fillContentStream(\n          ^\n  symbol:   class Request\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:604: error: cannot find symbol\n    final Request request;\n          ^\n  symbol:   class Request\n  location: class MakeRequestReturnValue\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:606: error: cannot find symbol\n    final OutputStreamRequestContent requestContent;\n          ^\n  symbol:   class OutputStreamRequestContent\n  location: class MakeRequestReturnValue\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:609: error: cannot find symbol\n        Request request,\n        ^\n  symbol:   class Request\n  location: class MakeRequestReturnValue\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:611: error: cannot find symbol\n        OutputStreamRequestContent requestContent) {\n        ^\n  symbol:   class OutputStreamRequestContent\n  location: class MakeRequestReturnValue\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:617: error: cannot find symbol\n    MakeRequestReturnValue(Request request) {\n                           ^\n  symbol:   class Request\n  location: class MakeRequestReturnValue\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:320: error: cannot find symbol\n    private final OutputStreamRequestContent content;\n                  ^\n  symbol:   class OutputStreamRequestContent\n  location: class OutStream\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:321: error: cannot find symbol\n    private final InputStreamResponseListener responseListener;\n                  ^\n  symbol:   class InputStreamResponseListener\n  location: class OutStream\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:327: error: cannot find symbol\n        OutputStreamRequestContent content,\n        ^\n  symbol:   class OutputStreamRequestContent\n  location: class OutStream\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:328: error: cannot find symbol\n        InputStreamResponseListener responseListener,\n        ^\n  symbol:   class InputStreamResponseListener\n  location: class OutStream\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:360: error: cannot find symbol\n    public InputStreamResponseListener getResponseListener() {\n           ^\n  symbol:   class InputStreamResponseListener\n  location: class OutStream\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/AuthenticationStoreHolder.java:27: error: cannot find symbol\n  private volatile AuthenticationStore authenticationStore;\n                   ^\n  symbol:   class AuthenticationStore\n  location: class AuthenticationStoreHolder\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/AuthenticationStoreHolder.java:33: error: cannot find symbol\n  public AuthenticationStoreHolder(AuthenticationStore authenticationStore) {\n                                   ^\n  symbol:   class AuthenticationStore\n  location: class AuthenticationStoreHolder\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/AuthenticationStoreHolder.java:37: error: cannot find symbol\n  public void updateAuthenticationStore(AuthenticationStore authenticationStore) {\n                                        ^\n  symbol:   class AuthenticationStore\n  location: class AuthenticationStoreHolder\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/AuthenticationStoreHolder.java:42: error: cannot find symbol\n  public void addAuthentication(Authentication authentication) {\n                                ^\n  symbol:   class Authentication\n  location: class AuthenticationStoreHolder\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/AuthenticationStoreHolder.java:47: error: cannot find symbol\n  public void removeAuthentication(Authentication authentication) {\n                                   ^\n  symbol:   class Authentication\n  location: class AuthenticationStoreHolder\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/AuthenticationStoreHolder.java:57: error: cannot find symbol\n  public Authentication findAuthentication(String type, URI uri, String realm) {\n         ^\n  symbol:   class Authentication\n  location: class AuthenticationStoreHolder\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/AuthenticationStoreHolder.java:62: error: package Authentication does not exist\n  public void addAuthenticationResult(Authentication.Result result) {\n                                                    ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/AuthenticationStoreHolder.java:67: error: package Authentication does not exist\n  public void removeAuthenticationResult(Authentication.Result result) {\n                                                       ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/AuthenticationStoreHolder.java:77: error: package Authentication does not exist\n  public Authentication.Result findAuthenticationResult(URI uri) {\n                       ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:795: error: package Request does not exist\n    private final Request.QueuedListener queuedListener;\n                         ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:796: error: package Response does not exist\n    private final Response.CompleteListener completeListener;\n                          ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpListenerFactory.java:26: error: package Request does not exist\n      implements Request.BeginListener, Response.CompleteListener, Request.QueuedListener {\n                        ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpListenerFactory.java:26: error: package Response does not exist\n      implements Request.BeginListener, Response.CompleteListener, Request.QueuedListener {\n                                                ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpListenerFactory.java:26: error: package Request does not exist\n      implements Request.BeginListener, Response.CompleteListener, Request.QueuedListener {\n                                                                          ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpListenerFactory.java:36: error: cannot find symbol\n    public void onBegin(Request request) {}\n                        ^\n  symbol:   class Request\n  location: class RequestResponseListener\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpListenerFactory.java:46: error: cannot find symbol\n    public void onQueued(Request request) {}\n                         ^\n  symbol:   class Request\n  location: class RequestResponseListener\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpListenerFactory.java:49: error: cannot find symbol\n    public void onComplete(Result result) {}\n                           ^\n  symbol:   class Result\n  location: class RequestResponseListener\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:1111: error: cannot find symbol\n    public void onBegin(Request request) {\n                        ^\n  symbol:   class Request\n  location: class MDCCopyHelper\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:1117: error: cannot find symbol\n    public void onComplete(Result result) {\n                           ^\n  symbol:   class Result\n  location: class MDCCopyHelper\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:1137: error: cannot find symbol\n      extends InputStreamResponseListener {\n              ^\n  symbol:   class InputStreamResponseListener\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/PreemptiveBasicAuthClientBuilderFactory.java:38: error: cannot find symbol\nimport org.eclipse.jetty.client.HttpAuthenticationStore;\n                               ^\n  symbol:   class HttpAuthenticationStore\n  location: package org.eclipse.jetty.client\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateHttp2SolrClient.java:44: error: package org.eclipse.jetty.client.api does not exist\nimport org.eclipse.jetty.client.api.Response;\n                                   ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateHttp2SolrClient.java:45: error: package org.eclipse.jetty.client.util does not exist\nimport org.eclipse.jetty.client.util.InputStreamResponseListener;\n                                    ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateHttp2SolrClient.java:634: error: cannot find symbol\n  public void onSuccess(Response resp, InputStream respBody) {\n                        ^\n  symbol:   class Response\n  location: class ConcurrentUpdateHttp2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:41: error: method does not override or implement a method from a supertype\n  @Override\n  ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:46: error: method does not override or implement a method from a supertype\n  @Override\n  ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:49: error: cannot find symbol\n    return new Result() {\n               ^\n  symbol:   class Result\n  location: class SolrBasicAuthentication\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:63: error: cannot find symbol\n      public void apply(Request request) {\n                        ^\n  symbol: class Request\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:50: error: method does not override or implement a method from a supertype\n      @Override\n      ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/util/SolrBasicAuthentication.java:62: error: method does not override or implement a method from a supertype\n      @Override\n      ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Krb5HttpClientBuilder.java:84: error: cannot find symbol\n    SPNEGOAuthentication authentication =\n    ^\n  symbol:   class SPNEGOAuthentication\n  location: class Krb5HttpClientBuilder\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Krb5HttpClientBuilder.java:85: error: cannot find symbol\n        new SPNEGOAuthentication(null) {\n            ^\n  symbol:   class SPNEGOAuthentication\n  location: class Krb5HttpClientBuilder\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Krb5HttpClientBuilder.java:87: error: method does not override or implement a method from a supertype\n          @Override\n          ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Krb5HttpClientBuilder.java:89: error: cannot find symbol\n            return this.getType().equals(type);\n                       ^\n  symbol: method getType()\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Krb5HttpClientBuilder.java:130: error: cannot find symbol\n    HttpAuthenticationStore authenticationStore = new HttpAuthenticationStore();\n    ^\n  symbol:   class HttpAuthenticationStore\n  location: class Krb5HttpClientBuilder\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Krb5HttpClientBuilder.java:130: error: cannot find symbol\n    HttpAuthenticationStore authenticationStore = new HttpAuthenticationStore();\n                                                      ^\n  symbol:   class HttpAuthenticationStore\n  location: class Krb5HttpClientBuilder\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpListenerFactory.java:35: error: method does not override or implement a method from a supertype\n    @Override\n    ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpListenerFactory.java:45: error: method does not override or implement a method from a supertype\n    @Override\n    ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpListenerFactory.java:48: error: method does not override or implement a method from a supertype\n    @Override\n    ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:217: error: cannot find symbol\n      transport = new HttpClientTransportOverHTTP(clientConnector);\n                      ^\n  symbol:   class HttpClientTransportOverHTTP\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:243: error: cannot find symbol\n      httpClient.setCookieStore(builder.cookieStore);\n                ^\n  symbol:   method setCookieStore(CookieStore)\n  location: variable httpClient of type HttpClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:247: error: incompatible types: AuthenticationStoreHolder cannot be converted to AuthenticationStore\n    httpClient.setAuthenticationStore(this.authenticationStore);\n                                          ^\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:275: error: cannot find symbol\n        protocol = HttpClientTransportOverHTTP.HTTP11;\n                   ^\n  symbol:   variable HttpClientTransportOverHTTP\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:376: error: cannot find symbol\n    OutputStreamRequestContent content = new OutputStreamRequestContent(contentType);\n    ^\n  symbol:   class OutputStreamRequestContent\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:376: error: cannot find symbol\n    OutputStreamRequestContent content = new OutputStreamRequestContent(contentType);\n                                             ^\n  symbol:   class OutputStreamRequestContent\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:377: error: cannot find symbol\n    Request postRequest =\n    ^\n  symbol:   class Request\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:383: error: cannot find symbol\n    InputStreamResponseListener responseListener = new InputStreamReleaseTrackingResponseListener();\n    ^\n  symbol:   class InputStreamResponseListener\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:439: error: cannot find symbol\n            new InputStreamResponseListener() {\n                ^\n  symbol:   class InputStreamResponseListener\n  location: class Http2SolrClient\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:444: error: cannot find symbol\n              public void onHeaders(Response response) {\n                                    ^\n  symbol: class Response\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:468: error: cannot find symbol\n              public void onFailure(Response response, Throwable failure) {\n                                    ^\n  symbol: class Response\n/tmp/renovate/repos/github/apache/solr/solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient.java:443: error: method does not override or implement a method from a supertype\n              @Override\n              ^\nNote: Some input files use or override a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n100 errors\nonly showing the first 100 errors, of 132 total; use -Xmaxerrs if you would like to see more\n\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nExecution failed for task ':solr:solrj:compileJava'.\n> Compilation failed; see the compiler error output for details.\n\n* Try:\n> Run with --info option to get more log output.\n\nBUILD FAILED in 20s\n\n```\n\n","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1659426401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1659427530","html_url":"https://github.com/apache/solr/pull/1822#issuecomment-1659427530","issue_url":"https://api.github.com/repos/apache/solr/issues/1822","id":1659427530,"node_id":"IC_kwDOFFj3yM5i6NrK","user":{"login":"solrbot","id":125606113,"node_id":"U_kgDOB3yY4Q","avatar_url":"https://avatars.githubusercontent.com/u/125606113?v=4","gravatar_id":"","url":"https://api.github.com/users/solrbot","html_url":"https://github.com/solrbot","followers_url":"https://api.github.com/users/solrbot/followers","following_url":"https://api.github.com/users/solrbot/following{/other_user}","gists_url":"https://api.github.com/users/solrbot/gists{/gist_id}","starred_url":"https://api.github.com/users/solrbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solrbot/subscriptions","organizations_url":"https://api.github.com/users/solrbot/orgs","repos_url":"https://api.github.com/users/solrbot/repos","events_url":"https://api.github.com/users/solrbot/events{/privacy}","received_events_url":"https://api.github.com/users/solrbot/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T01:26:56Z","updated_at":"2023-09-15T08:49:14Z","author_association":"COLLABORATOR","body":"### ⚠ Artifact update problem\n\nRenovate failed to update an artifact related to this branch. You probably do not want to merge this PR as-is.\n\n♻ Renovate will retry this branch, including artifacts, only when one of the following happens:\n\n - any of the package files in this branch needs updating, or \n - the branch becomes conflicted, or\n - you click the rebase/retry checkbox if found above, or\n - you rename this PR's title to start with \"rebase!\" to trigger it manually\n\nThe artifact failure details are included below:\n\n##### File name: undefined\n\n```\nCommand failed: ./gradlew updateLicenses\nNote: Some input files use or override a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\nNote: Some input files use or override a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\nNote: Some input files use or override a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\nNote: Some input files use or override a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\nNote: Some input files use or override a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\n\nFAILURE: Build failed with an exception.\n\n* Where:\nScript '/tmp/renovate/repos/github/apache/solr/gradle/validation/jar-checks.gradle' line: 120\n\n* What went wrong:\nExecution failed for task ':solr:modules:jwt-auth:collectJarInfos'.\n> Could not resolve all dependencies for configuration ':solr:modules:jwt-auth:testRuntimeClasspath'.\n   > Could not resolve no.nav.security:mock-oauth2-server.\n     Required by:\n         project :solr:modules:jwt-auth\n      > No matching variant of no.nav.security:mock-oauth2-server:1.0.0 was found. The consumer was configured to find a runtime of a library compatible with Java 11, packaged as a jar, preferably optimized for standard JVMs, and its dependencies declared externally but:\n          - Variant 'apiElements' capability no.nav.security:mock-oauth2-server:1.0.0 declares a library, packaged as a jar, preferably optimized for standard JVMs, and its dependencies declared externally:\n              - Incompatible because this component declares an API of a component compatible with Java 17 and the consumer needed a runtime of a component compatible with Java 11\n          - Variant 'javadocElements' capability no.nav.security:mock-oauth2-server:1.0.0 declares a runtime of a component, and its dependencies declared externally:\n              - Incompatible because this component declares documentation and the consumer needed a library\n              - Other compatible attributes:\n                  - Doesn't say anything about its target Java environment (preferred optimized for standard JVMs)\n                  - Doesn't say anything about its target Java version (required compatibility with Java 11)\n                  - Doesn't say anything about its elements (required them packaged as a jar)\n          - Variant 'runtimeElements' capability no.nav.security:mock-oauth2-server:1.0.0 declares a runtime of a library, packaged as a jar, preferably optimized for standard JVMs, and its dependencies declared externally:\n              - Incompatible because this component declares a component compatible with Java 17 and the consumer needed a component compatible with Java 11\n          - Variant 'sourcesElements' capability no.nav.security:mock-oauth2-server:1.0.0 declares a runtime of a component, and its dependencies declared externally:\n              - Incompatible because this component declares documentation and the consumer needed a library\n              - Other compatible attributes:\n                  - Doesn't say anything about its target Java environment (preferred optimized for standard JVMs)\n                  - Doesn't say anything about its target Java version (required compatibility with Java 11)\n                  - Doesn't say anything about its elements (required them packaged as a jar)\n   > Could not resolve no.nav.security:mock-oauth2-server.\n     Required by:\n         project :solr:modules:jwt-auth > project :\n      > No matching variant of no.nav.security:mock-oauth2-server:1.0.0 was found. The consumer was configured to find a runtime of a library compatible with Java 11, packaged as a jar, preferably optimized for standard JVMs, and its dependencies declared externally but:\n          - Variant 'apiElements' capability no.nav.security:mock-oauth2-server:1.0.0 declares a library, packaged as a jar, preferably optimized for standard JVMs, and its dependencies declared externally:\n              - Incompatible because this component declares an API of a component compatible with Java 17 and the consumer needed a runtime of a component compatible with Java 11\n          - Variant 'javadocElements' capability no.nav.security:mock-oauth2-server:1.0.0 declares a runtime of a component, and its dependencies declared externally:\n              - Incompatible because this component declares documentation and the consumer needed a library\n              - Other compatible attributes:\n                  - Doesn't say anything about its target Java environment (preferred optimized for standard JVMs)\n                  - Doesn't say anything about its target Java version (required compatibility with Java 11)\n                  - Doesn't say anything about its elements (required them packaged as a jar)\n          - Variant 'runtimeElements' capability no.nav.security:mock-oauth2-server:1.0.0 declares a runtime of a library, packaged as a jar, preferably optimized for standard JVMs, and its dependencies declared externally:\n              - Incompatible because this component declares a component compatible with Java 17 and the consumer needed a component compatible with Java 11\n          - Variant 'sourcesElements' capability no.nav.security:mock-oauth2-server:1.0.0 declares a runtime of a component, and its dependencies declared externally:\n              - Incompatible because this component declares documentation and the consumer needed a library\n              - Other compatible attributes:\n                  - Doesn't say anything about its target Java environment (preferred optimized for standard JVMs)\n                  - Doesn't say anything about its target Java version (required compatibility with Java 11)\n                  - Doesn't say anything about its elements (required them packaged as a jar)\n   > Could not resolve no.nav.security:mock-oauth2-server.\n     Required by:\n         project :solr:modules:jwt-auth > project :\n      > No matching variant of no.nav.security:mock-oauth2-server:1.0.0 was found. The consumer was configured to find a runtime of a library compatible with Java 11, packaged as a jar, preferably optimized for standard JVMs, and its dependencies declared externally but:\n          - Variant 'apiElements' capability no.nav.security:mock-oauth2-server:1.0.0 declares a library, packaged as a jar, preferably optimized for standard JVMs, and its dependencies declared externally:\n              - Incompatible because this component declares an API of a component compatible with Java 17 and the consumer needed a runtime of a component compatible with Java 11\n          - Variant 'javadocElements' capability no.nav.security:mock-oauth2-server:1.0.0 declares a runtime of a component, and its dependencies declared externally:\n              - Incompatible because this component declares documentation and the consumer needed a library\n              - Other compatible attributes:\n                  - Doesn't say anything about its target Java environment (preferred optimized for standard JVMs)\n                  - Doesn't say anything about its target Java version (required compatibility with Java 11)\n                  - Doesn't say anything about its elements (required them packaged as a jar)\n          - Variant 'runtimeElements' capability no.nav.security:mock-oauth2-server:1.0.0 declares a runtime of a library, packaged as a jar, preferably optimized for standard JVMs, and its dependencies declared externally:\n              - Incompatible because this component declares a component compatible with Java 17 and the consumer needed a component compatible with Java 11\n          - Variant 'sourcesElements' capability no.nav.security:mock-oauth2-server:1.0.0 declares a runtime of a component, and its dependencies declared externally:\n              - Incompatible because this component declares documentation and the consumer needed a library\n              - Other compatible attributes:\n                  - Doesn't say anything about its target Java environment (preferred optimized for standard JVMs)\n                  - Doesn't say anything about its target Java version (required compatibility with Java 11)\n                  - Doesn't say anything about its elements (required them packaged as a jar)\n\n* Try:\n> Run with --stacktrace option to get the stack trace.\n> Run with --info or --debug option to get more log output.\n> Run with --scan to get full insights.\n\n* Get more help at https://help.gradle.org\n\nBUILD FAILED in 36s\n\n```\n\n","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1659427530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1660236253","html_url":"https://github.com/apache/solr/pull/1481#issuecomment-1660236253","issue_url":"https://api.github.com/repos/apache/solr/issues/1481","id":1660236253,"node_id":"IC_kwDOFFj3yM5i9THd","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T12:41:44Z","updated_at":"2023-08-01T12:41:44Z","author_association":"CONTRIBUTOR","body":"Looking back at this, the problem is that the cache implementation can't recursively compute new cache entries.  Given this situation, couldn't we use a ThreadLocal boolean to indicate if we're recursively being invoked and make different decisions based on this?  If recursive invocation, need to compute the query prior to the computeIfAbsent call.  The vast majority of invocations will not be recursive though.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1660236253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1660568691","html_url":"https://github.com/apache/solr/pull/1821#issuecomment-1660568691","issue_url":"https://api.github.com/repos/apache/solr/issues/1821","id":1660568691,"node_id":"IC_kwDOFFj3yM5i-kRz","user":{"login":"HoustonPutman","id":3376422,"node_id":"MDQ6VXNlcjMzNzY0MjI=","avatar_url":"https://avatars.githubusercontent.com/u/3376422?v=4","gravatar_id":"","url":"https://api.github.com/users/HoustonPutman","html_url":"https://github.com/HoustonPutman","followers_url":"https://api.github.com/users/HoustonPutman/followers","following_url":"https://api.github.com/users/HoustonPutman/following{/other_user}","gists_url":"https://api.github.com/users/HoustonPutman/gists{/gist_id}","starred_url":"https://api.github.com/users/HoustonPutman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HoustonPutman/subscriptions","organizations_url":"https://api.github.com/users/HoustonPutman/orgs","repos_url":"https://api.github.com/users/HoustonPutman/repos","events_url":"https://api.github.com/users/HoustonPutman/events{/privacy}","received_events_url":"https://api.github.com/users/HoustonPutman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T15:33:31Z","updated_at":"2023-08-01T15:33:31Z","author_association":"CONTRIBUTOR","body":"Yeah we can't merge this until Solr is JDK 17+, which presumably will be Solr 10.x, since Lucene 10 will be JDK 17+","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1660568691/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1660754431","html_url":"https://github.com/apache/solr/pull/1781#issuecomment-1660754431","issue_url":"https://api.github.com/repos/apache/solr/issues/1781","id":1660754431,"node_id":"IC_kwDOFFj3yM5i_Rn_","user":{"login":"HoustonPutman","id":3376422,"node_id":"MDQ6VXNlcjMzNzY0MjI=","avatar_url":"https://avatars.githubusercontent.com/u/3376422?v=4","gravatar_id":"","url":"https://api.github.com/users/HoustonPutman","html_url":"https://github.com/HoustonPutman","followers_url":"https://api.github.com/users/HoustonPutman/followers","following_url":"https://api.github.com/users/HoustonPutman/following{/other_user}","gists_url":"https://api.github.com/users/HoustonPutman/gists{/gist_id}","starred_url":"https://api.github.com/users/HoustonPutman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HoustonPutman/subscriptions","organizations_url":"https://api.github.com/users/HoustonPutman/orgs","repos_url":"https://api.github.com/users/HoustonPutman/repos","events_url":"https://api.github.com/users/HoustonPutman/events{/privacy}","received_events_url":"https://api.github.com/users/HoustonPutman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T17:06:32Z","updated_at":"2023-08-01T17:06:32Z","author_association":"CONTRIBUTOR","body":"Hey @magibney I have a change to make this just generic for any number of escapes of the quote. (for example if there was an escaped quote in a phrase query)\r\n\r\nMind if I push to your branch?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1660754431/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1660819926","html_url":"https://github.com/apache/solr/pull/1481#issuecomment-1660819926","issue_url":"https://api.github.com/repos/apache/solr/issues/1481","id":1660819926,"node_id":"IC_kwDOFFj3yM5i_hnW","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T17:54:51Z","updated_at":"2023-08-01T17:54:51Z","author_association":"CONTRIBUTOR","body":"You could even modify the logic so we optimistically assume non-recursion (the fast path).  if the lambda in compute-if-absent sees we aren't so lucky, it could throw an exception to bail out of the computeIfAbsent call.  Catch it outside, and do the fallback logic.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1660819926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1660841626","html_url":"https://github.com/apache/solr/pull/1481#issuecomment-1660841626","issue_url":"https://api.github.com/repos/apache/solr/issues/1481","id":1660841626,"node_id":"IC_kwDOFFj3yM5i_m6a","user":{"login":"magibney","id":6225104,"node_id":"MDQ6VXNlcjYyMjUxMDQ=","avatar_url":"https://avatars.githubusercontent.com/u/6225104?v=4","gravatar_id":"","url":"https://api.github.com/users/magibney","html_url":"https://github.com/magibney","followers_url":"https://api.github.com/users/magibney/followers","following_url":"https://api.github.com/users/magibney/following{/other_user}","gists_url":"https://api.github.com/users/magibney/gists{/gist_id}","starred_url":"https://api.github.com/users/magibney/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magibney/subscriptions","organizations_url":"https://api.github.com/users/magibney/orgs","repos_url":"https://api.github.com/users/magibney/repos","events_url":"https://api.github.com/users/magibney/events{/privacy}","received_events_url":"https://api.github.com/users/magibney/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T18:10:11Z","updated_at":"2023-08-01T18:10:11Z","author_association":"CONTRIBUTOR","body":"This sounds good; I had been thinking to not optimize the `async=false` case, and to instead move toward deprecating it. But I like this; it's straightforward, and will also provide a template for a simple way for plugin SolrCache impl's to handle this situation without requiring them to implement full-blown async support.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1660841626/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1660920094","html_url":"https://github.com/apache/solr/pull/1778#issuecomment-1660920094","issue_url":"https://api.github.com/repos/apache/solr/issues/1778","id":1660920094,"node_id":"IC_kwDOFFj3yM5i_6Ee","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T19:05:11Z","updated_at":"2023-08-01T19:05:11Z","author_association":"CONTRIBUTOR","body":"> I was thinking we can push this in and pickup some API that needs it next, so we can iterate if needed.\r\n\r\nSGTM, as long as you or I remember to follow up on that 😛 \r\n\r\nThis LGTM, gonna run tests this afternoon and look to merge!","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1660920094/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1661002805","html_url":"https://github.com/apache/solr/pull/1778#issuecomment-1661002805","issue_url":"https://api.github.com/repos/apache/solr/issues/1778","id":1661002805,"node_id":"IC_kwDOFFj3yM5jAOQ1","user":{"login":"stillalex","id":61026,"node_id":"MDQ6VXNlcjYxMDI2","avatar_url":"https://avatars.githubusercontent.com/u/61026?v=4","gravatar_id":"","url":"https://api.github.com/users/stillalex","html_url":"https://github.com/stillalex","followers_url":"https://api.github.com/users/stillalex/followers","following_url":"https://api.github.com/users/stillalex/following{/other_user}","gists_url":"https://api.github.com/users/stillalex/gists{/gist_id}","starred_url":"https://api.github.com/users/stillalex/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stillalex/subscriptions","organizations_url":"https://api.github.com/users/stillalex/orgs","repos_url":"https://api.github.com/users/stillalex/repos","events_url":"https://api.github.com/users/stillalex/events{/privacy}","received_events_url":"https://api.github.com/users/stillalex/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T20:05:29Z","updated_at":"2023-08-01T20:05:29Z","author_association":"MEMBER","body":"thank you @gerlowskija!","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1661002805/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1661072747","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1661072747","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1661072747,"node_id":"IC_kwDOFFj3yM5jAfVr","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-01T20:49:43Z","updated_at":"2023-08-01T20:49:43Z","author_association":"CONTRIBUTOR","body":"I think I'm not going to attempt what I proposed.\r\nAt least the use of Jackson is optional.  Which is to say, if there is a client that is just doing index/query then it need not include our new \"api\" module either.  We still have our current hand-written APIs for typical administrative things too.  I could imagine 10.0 embracing the new API & Jackson but what I said (about Jackson & \"api\" being kind of optional) is for 9.x.  I don't think we should bother shading Jackson unless we get input to the contrary.  If we don't use tons of Jackson's surface area, might as well just expose the dependency and let the user choose the version they want, probably a future version that doesn't even exist right now.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1661072747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1662498277","html_url":"https://github.com/apache/solr/pull/1119#issuecomment-1662498277","issue_url":"https://api.github.com/repos/apache/solr/issues/1119","id":1662498277,"node_id":"IC_kwDOFFj3yM5jF7Xl","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-02T16:09:26Z","updated_at":"2023-08-02T16:09:26Z","author_association":"CONTRIBUTOR","body":"Looks like this is finally unblocked!  PR #1778 was merged earlier this week and gives us a way to expose solrconfig.xml configuration to JAX-RS API classes!\r\n\r\n@stillalex what do you think of this as a first test for the APIConfigProvider interface you added recently?  Or did you have a particular API in mind as a better first test?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1662498277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1662943802","html_url":"https://github.com/apache/solr/pull/1823#issuecomment-1662943802","issue_url":"https://api.github.com/repos/apache/solr/issues/1823","id":1662943802,"node_id":"IC_kwDOFFj3yM5jHoI6","user":{"login":"epugh","id":22395,"node_id":"MDQ6VXNlcjIyMzk1","avatar_url":"https://avatars.githubusercontent.com/u/22395?v=4","gravatar_id":"","url":"https://api.github.com/users/epugh","html_url":"https://github.com/epugh","followers_url":"https://api.github.com/users/epugh/followers","following_url":"https://api.github.com/users/epugh/following{/other_user}","gists_url":"https://api.github.com/users/epugh/gists{/gist_id}","starred_url":"https://api.github.com/users/epugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epugh/subscriptions","organizations_url":"https://api.github.com/users/epugh/orgs","repos_url":"https://api.github.com/users/epugh/repos","events_url":"https://api.github.com/users/epugh/events{/privacy}","received_events_url":"https://api.github.com/users/epugh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-02T20:46:07Z","updated_at":"2023-08-02T20:46:07Z","author_association":"CONTRIBUTOR","body":"Umm, this doesn't look right...","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1662943802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663060791","html_url":"https://github.com/apache/solr/pull/1484#issuecomment-1663060791","issue_url":"https://api.github.com/repos/apache/solr/issues/1484","id":1663060791,"node_id":"IC_kwDOFFj3yM5jIEs3","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-02T22:38:11Z","updated_at":"2023-08-02T22:38:11Z","author_association":"CONTRIBUTOR","body":"I forgot about this one.  I wanted to debug other failures in a test I had locally but time got away from me and I can't easily reproduce the issue either.  I'd like to commit it as it is, marking it as an \"improvement\".  WDYT @stillalex ?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663060791/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663241037","html_url":"https://github.com/apache/solr/pull/1816#issuecomment-1663241037","issue_url":"https://api.github.com/repos/apache/solr/issues/1816","id":1663241037,"node_id":"IC_kwDOFFj3yM5jIwtN","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T03:31:15Z","updated_at":"2023-08-03T03:31:15Z","author_association":"CONTRIBUTOR","body":"Can you add a test please?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663241037/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663243263","html_url":"https://github.com/apache/solr/pull/1761#issuecomment-1663243263","issue_url":"https://api.github.com/repos/apache/solr/issues/1761","id":1663243263,"node_id":"IC_kwDOFFj3yM5jIxP_","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T03:35:17Z","updated_at":"2023-08-03T03:35:17Z","author_association":"CONTRIBUTOR","body":"Once solr/CHANGES.txt is updated, I think it's ready to merge","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663243263/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663248841","html_url":"https://github.com/apache/solr/pull/1484#issuecomment-1663248841","issue_url":"https://api.github.com/repos/apache/solr/issues/1484","id":1663248841,"node_id":"IC_kwDOFFj3yM5jIynJ","user":{"login":"stillalex","id":61026,"node_id":"MDQ6VXNlcjYxMDI2","avatar_url":"https://avatars.githubusercontent.com/u/61026?v=4","gravatar_id":"","url":"https://api.github.com/users/stillalex","html_url":"https://github.com/stillalex","followers_url":"https://api.github.com/users/stillalex/followers","following_url":"https://api.github.com/users/stillalex/following{/other_user}","gists_url":"https://api.github.com/users/stillalex/gists{/gist_id}","starred_url":"https://api.github.com/users/stillalex/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stillalex/subscriptions","organizations_url":"https://api.github.com/users/stillalex/orgs","repos_url":"https://api.github.com/users/stillalex/repos","events_url":"https://api.github.com/users/stillalex/events{/privacy}","received_events_url":"https://api.github.com/users/stillalex/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T03:45:51Z","updated_at":"2023-08-03T03:45:51Z","author_association":"MEMBER","body":"> I'd like to commit it as it is, marking it as an \"improvement\". WDYT @stillalex ?\r\n\r\nI agree to commit. I also dropped the ball here, but if time permits I would still like to revisit this code to make it a bit more testable. in some ideal world we could verify the state transitions are safe and what impact this can have client side.\r\n","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663248841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663251308","html_url":"https://github.com/apache/solr/pull/1119#issuecomment-1663251308","issue_url":"https://api.github.com/repos/apache/solr/issues/1119","id":1663251308,"node_id":"IC_kwDOFFj3yM5jIzNs","user":{"login":"stillalex","id":61026,"node_id":"MDQ6VXNlcjYxMDI2","avatar_url":"https://avatars.githubusercontent.com/u/61026?v=4","gravatar_id":"","url":"https://api.github.com/users/stillalex","html_url":"https://github.com/stillalex","followers_url":"https://api.github.com/users/stillalex/followers","following_url":"https://api.github.com/users/stillalex/following{/other_user}","gists_url":"https://api.github.com/users/stillalex/gists{/gist_id}","starred_url":"https://api.github.com/users/stillalex/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stillalex/subscriptions","organizations_url":"https://api.github.com/users/stillalex/orgs","repos_url":"https://api.github.com/users/stillalex/repos","events_url":"https://api.github.com/users/stillalex/events{/privacy}","received_events_url":"https://api.github.com/users/stillalex/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T03:50:21Z","updated_at":"2023-08-03T03:50:21Z","author_association":"MEMBER","body":"I agree this is a good place to start. there is a bit of gymnastics, but I will try to push some changes to this branch to continue on the existing proposal (I don't mind it at all, I fear messing something up unknowingly). or if you have a better idea on how to collaborate @gerlowskija I am all ears.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663251308/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663271351","html_url":"https://github.com/apache/solr/pull/1816#issuecomment-1663271351","issue_url":"https://api.github.com/repos/apache/solr/issues/1816","id":1663271351,"node_id":"IC_kwDOFFj3yM5jI4G3","user":{"login":"rahulgoswami","id":7960773,"node_id":"MDQ6VXNlcjc5NjA3NzM=","avatar_url":"https://avatars.githubusercontent.com/u/7960773?v=4","gravatar_id":"","url":"https://api.github.com/users/rahulgoswami","html_url":"https://github.com/rahulgoswami","followers_url":"https://api.github.com/users/rahulgoswami/followers","following_url":"https://api.github.com/users/rahulgoswami/following{/other_user}","gists_url":"https://api.github.com/users/rahulgoswami/gists{/gist_id}","starred_url":"https://api.github.com/users/rahulgoswami/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rahulgoswami/subscriptions","organizations_url":"https://api.github.com/users/rahulgoswami/orgs","repos_url":"https://api.github.com/users/rahulgoswami/repos","events_url":"https://api.github.com/users/rahulgoswami/events{/privacy}","received_events_url":"https://api.github.com/users/rahulgoswami/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T04:26:08Z","updated_at":"2023-08-03T04:26:08Z","author_association":"CONTRIBUTOR","body":"On it!","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663271351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663529357","html_url":"https://github.com/apache/solr/pull/1791#issuecomment-1663529357","issue_url":"https://api.github.com/repos/apache/solr/issues/1791","id":1663529357,"node_id":"IC_kwDOFFj3yM5jJ3GN","user":{"login":"laminelam","id":104593675,"node_id":"U_kgDOBjv5Cw","avatar_url":"https://avatars.githubusercontent.com/u/104593675?v=4","gravatar_id":"","url":"https://api.github.com/users/laminelam","html_url":"https://github.com/laminelam","followers_url":"https://api.github.com/users/laminelam/followers","following_url":"https://api.github.com/users/laminelam/following{/other_user}","gists_url":"https://api.github.com/users/laminelam/gists{/gist_id}","starred_url":"https://api.github.com/users/laminelam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/laminelam/subscriptions","organizations_url":"https://api.github.com/users/laminelam/orgs","repos_url":"https://api.github.com/users/laminelam/repos","events_url":"https://api.github.com/users/laminelam/events{/privacy}","received_events_url":"https://api.github.com/users/laminelam/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T08:33:55Z","updated_at":"2023-08-03T08:33:55Z","author_association":"CONTRIBUTOR","body":"Hi @risdenk \r\nAs @janhoy is on vacation, can you please have another reviewer look at this? Thank you.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1663529357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664063895","html_url":"https://github.com/apache/solr/pull/814#issuecomment-1664063895","issue_url":"https://api.github.com/repos/apache/solr/issues/814","id":1664063895,"node_id":"IC_kwDOFFj3yM5jL5mX","user":{"login":"magibney","id":6225104,"node_id":"MDQ6VXNlcjYyMjUxMDQ=","avatar_url":"https://avatars.githubusercontent.com/u/6225104?v=4","gravatar_id":"","url":"https://api.github.com/users/magibney","html_url":"https://github.com/magibney","followers_url":"https://api.github.com/users/magibney/followers","following_url":"https://api.github.com/users/magibney/following{/other_user}","gists_url":"https://api.github.com/users/magibney/gists{/gist_id}","starred_url":"https://api.github.com/users/magibney/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magibney/subscriptions","organizations_url":"https://api.github.com/users/magibney/orgs","repos_url":"https://api.github.com/users/magibney/repos","events_url":"https://api.github.com/users/magibney/events{/privacy}","received_events_url":"https://api.github.com/users/magibney/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T14:12:54Z","updated_at":"2023-08-03T14:12:54Z","author_association":"CONTRIBUTOR","body":"ha, thanks for noticing this one. I guess I missed the \"coming week\" window by more than a year 😅 . I'll take care of this shortly.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664063895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664231709","html_url":"https://github.com/apache/solr/pull/1449#issuecomment-1664231709","issue_url":"https://api.github.com/repos/apache/solr/issues/1449","id":1664231709,"node_id":"IC_kwDOFFj3yM5jMikd","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T15:50:32Z","updated_at":"2023-08-03T15:50:32Z","author_association":"CONTRIBUTOR","body":"Alright - I've made some changes on top of the base you provided @sayandigital.  Both to address some of the review comments, and to use the more-preferred JAX-RS framework that Solr supports now.  Tests and 'check' pass; gonna merge this afternoon and then let things bake for a few days before backporting.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664231709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664331415","html_url":"https://github.com/apache/solr/pull/1823#issuecomment-1664331415","issue_url":"https://api.github.com/repos/apache/solr/issues/1823","id":1664331415,"node_id":"IC_kwDOFFj3yM5jM66X","user":{"login":"epugh","id":22395,"node_id":"MDQ6VXNlcjIyMzk1","avatar_url":"https://avatars.githubusercontent.com/u/22395?v=4","gravatar_id":"","url":"https://api.github.com/users/epugh","html_url":"https://github.com/epugh","followers_url":"https://api.github.com/users/epugh/followers","following_url":"https://api.github.com/users/epugh/following{/other_user}","gists_url":"https://api.github.com/users/epugh/gists{/gist_id}","starred_url":"https://api.github.com/users/epugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epugh/subscriptions","organizations_url":"https://api.github.com/users/epugh/orgs","repos_url":"https://api.github.com/users/epugh/repos","events_url":"https://api.github.com/users/epugh/events{/privacy}","received_events_url":"https://api.github.com/users/epugh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T17:02:11Z","updated_at":"2023-08-03T17:02:11Z","author_association":"CONTRIBUTOR","body":"I ended up instead cherry-picking into branch_9x directly...","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664331415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664358612","html_url":"https://github.com/apache/solr/pull/1816#issuecomment-1664358612","issue_url":"https://api.github.com/repos/apache/solr/issues/1816","id":1664358612,"node_id":"IC_kwDOFFj3yM5jNBjU","user":{"login":"justinrsweeney","id":25032688,"node_id":"MDQ6VXNlcjI1MDMyNjg4","avatar_url":"https://avatars.githubusercontent.com/u/25032688?v=4","gravatar_id":"","url":"https://api.github.com/users/justinrsweeney","html_url":"https://github.com/justinrsweeney","followers_url":"https://api.github.com/users/justinrsweeney/followers","following_url":"https://api.github.com/users/justinrsweeney/following{/other_user}","gists_url":"https://api.github.com/users/justinrsweeney/gists{/gist_id}","starred_url":"https://api.github.com/users/justinrsweeney/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinrsweeney/subscriptions","organizations_url":"https://api.github.com/users/justinrsweeney/orgs","repos_url":"https://api.github.com/users/justinrsweeney/repos","events_url":"https://api.github.com/users/justinrsweeney/events{/privacy}","received_events_url":"https://api.github.com/users/justinrsweeney/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T17:23:55Z","updated_at":"2023-08-03T17:23:55Z","author_association":"CONTRIBUTOR","body":"Are we able to reuse the code from [StrUtils](https://github.com/apache/solr/blob/main/solr/solrj/src/java/org/apache/solr/common/util/StrUtils.java#L259C32-L259C32) for this instead of duplicating?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664358612/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664574973","html_url":"https://github.com/apache/solr/pull/1789#issuecomment-1664574973","issue_url":"https://api.github.com/repos/apache/solr/issues/1789","id":1664574973,"node_id":"IC_kwDOFFj3yM5jN2X9","user":{"login":"epugh","id":22395,"node_id":"MDQ6VXNlcjIyMzk1","avatar_url":"https://avatars.githubusercontent.com/u/22395?v=4","gravatar_id":"","url":"https://api.github.com/users/epugh","html_url":"https://github.com/epugh","followers_url":"https://api.github.com/users/epugh/followers","following_url":"https://api.github.com/users/epugh/following{/other_user}","gists_url":"https://api.github.com/users/epugh/gists{/gist_id}","starred_url":"https://api.github.com/users/epugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epugh/subscriptions","organizations_url":"https://api.github.com/users/epugh/orgs","repos_url":"https://api.github.com/users/epugh/repos","events_url":"https://api.github.com/users/epugh/events{/privacy}","received_events_url":"https://api.github.com/users/epugh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T19:59:29Z","updated_at":"2023-08-03T19:59:29Z","author_association":"CONTRIBUTOR","body":"I wish we had more confidence in our tests (benchmark and unit) that a change like this that passed the tests could be assumed to correct ;-).   I like anything that removes deprecated code!","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664574973/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664610985","html_url":"https://github.com/apache/solr/pull/1789#issuecomment-1664610985","issue_url":"https://api.github.com/repos/apache/solr/issues/1789","id":1664610985,"node_id":"IC_kwDOFFj3yM5jN_Kp","user":{"login":"stillalex","id":61026,"node_id":"MDQ6VXNlcjYxMDI2","avatar_url":"https://avatars.githubusercontent.com/u/61026?v=4","gravatar_id":"","url":"https://api.github.com/users/stillalex","html_url":"https://github.com/stillalex","followers_url":"https://api.github.com/users/stillalex/followers","following_url":"https://api.github.com/users/stillalex/following{/other_user}","gists_url":"https://api.github.com/users/stillalex/gists{/gist_id}","starred_url":"https://api.github.com/users/stillalex/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stillalex/subscriptions","organizations_url":"https://api.github.com/users/stillalex/orgs","repos_url":"https://api.github.com/users/stillalex/repos","events_url":"https://api.github.com/users/stillalex/events{/privacy}","received_events_url":"https://api.github.com/users/stillalex/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T20:33:11Z","updated_at":"2023-08-03T20:33:11Z","author_association":"MEMBER","body":"> I wish we had more confidence in our tests (benchmark and unit) that a change like this that passed the tests could be assumed to correct ;-). I like anything that removes deprecated code!\r\n\r\noh yeah, I completely agree. how can we increase that confidence? I feel like there are quite a few tests already (running 'gradlew check' is already a lengthy affair)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664610985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664652241","html_url":"https://github.com/apache/solr/pull/1824#issuecomment-1664652241","issue_url":"https://api.github.com/repos/apache/solr/issues/1824","id":1664652241,"node_id":"IC_kwDOFFj3yM5jOJPR","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T21:10:08Z","updated_at":"2023-08-03T21:10:08Z","author_association":"CONTRIBUTOR","body":"@patsonluk you may be interested based on your previous modifications","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664652241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664769445","html_url":"https://github.com/apache/solr/pull/1761#issuecomment-1664769445","issue_url":"https://api.github.com/repos/apache/solr/issues/1761","id":1664769445,"node_id":"IC_kwDOFFj3yM5jOl2l","user":{"login":"psalagnac","id":82967811,"node_id":"MDQ6VXNlcjgyOTY3ODEx","avatar_url":"https://avatars.githubusercontent.com/u/82967811?v=4","gravatar_id":"","url":"https://api.github.com/users/psalagnac","html_url":"https://github.com/psalagnac","followers_url":"https://api.github.com/users/psalagnac/followers","following_url":"https://api.github.com/users/psalagnac/following{/other_user}","gists_url":"https://api.github.com/users/psalagnac/gists{/gist_id}","starred_url":"https://api.github.com/users/psalagnac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/psalagnac/subscriptions","organizations_url":"https://api.github.com/users/psalagnac/orgs","repos_url":"https://api.github.com/users/psalagnac/repos","events_url":"https://api.github.com/users/psalagnac/events{/privacy}","received_events_url":"https://api.github.com/users/psalagnac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-03T23:46:41Z","updated_at":"2023-08-03T23:46:41Z","author_association":"CONTRIBUTOR","body":"While testing this internally, I found a minor issue (will push a fix soon). The flag to set some operation as expensive is not correctly passed.\r\nI'd rather we wait more before merging.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664769445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664964020","html_url":"https://github.com/apache/solr/pull/1816#issuecomment-1664964020","issue_url":"https://api.github.com/repos/apache/solr/issues/1816","id":1664964020,"node_id":"IC_kwDOFFj3yM5jPVW0","user":{"login":"rahulgoswami","id":7960773,"node_id":"MDQ6VXNlcjc5NjA3NzM=","avatar_url":"https://avatars.githubusercontent.com/u/7960773?v=4","gravatar_id":"","url":"https://api.github.com/users/rahulgoswami","html_url":"https://github.com/rahulgoswami","followers_url":"https://api.github.com/users/rahulgoswami/followers","following_url":"https://api.github.com/users/rahulgoswami/following{/other_user}","gists_url":"https://api.github.com/users/rahulgoswami/gists{/gist_id}","starred_url":"https://api.github.com/users/rahulgoswami/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rahulgoswami/subscriptions","organizations_url":"https://api.github.com/users/rahulgoswami/orgs","repos_url":"https://api.github.com/users/rahulgoswami/repos","events_url":"https://api.github.com/users/rahulgoswami/events{/privacy}","received_events_url":"https://api.github.com/users/rahulgoswami/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-04T04:50:48Z","updated_at":"2023-08-04T04:50:48Z","author_association":"CONTRIBUTOR","body":"Added tests and incorporated Justin's comment. ","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1664964020/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1665751760","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1665751760","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1665751760,"node_id":"IC_kwDOFFj3yM5jSVrQ","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-04T15:01:07Z","updated_at":"2023-08-04T15:01:07Z","author_association":"CONTRIBUTOR","body":"OK, thanks for closing the loop @dsmiley.  If we're OK with things as they stand, I guess I'll start cleaning this up and aim to commit sometime next week then.\r\n\r\nOnce this PR lands, I'll have some follow-up work to extract API interfaces and POJOs over to the 'api' module.  As more moves over to 'api', we'll have more generated SolrRequest implementations to look at, and I imagine that'll spin out into some improvements or fixes to the template as well. ","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1665751760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1666085178","html_url":"https://github.com/apache/solr/pull/1789#issuecomment-1666085178","issue_url":"https://api.github.com/repos/apache/solr/issues/1789","id":1666085178,"node_id":"IC_kwDOFFj3yM5jTnE6","user":{"login":"stillalex","id":61026,"node_id":"MDQ6VXNlcjYxMDI2","avatar_url":"https://avatars.githubusercontent.com/u/61026?v=4","gravatar_id":"","url":"https://api.github.com/users/stillalex","html_url":"https://github.com/stillalex","followers_url":"https://api.github.com/users/stillalex/followers","following_url":"https://api.github.com/users/stillalex/following{/other_user}","gists_url":"https://api.github.com/users/stillalex/gists{/gist_id}","starred_url":"https://api.github.com/users/stillalex/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stillalex/subscriptions","organizations_url":"https://api.github.com/users/stillalex/orgs","repos_url":"https://api.github.com/users/stillalex/repos","events_url":"https://api.github.com/users/stillalex/events{/privacy}","received_events_url":"https://api.github.com/users/stillalex/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-04T19:38:24Z","updated_at":"2023-08-04T19:38:24Z","author_association":"MEMBER","body":"thank you @risdenk and @markrmiller for the reviews. I have added one more change which was a bit awkward. I needed the request url for the exception message inside the async listener, so I moved some methods around to build the url first. it's the least bad solution I could come up with. this doesn't change much of the PR, so I will go ahead and try to push this in once the builds complete.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1666085178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1666235732","html_url":"https://github.com/apache/solr/pull/1810#issuecomment-1666235732","issue_url":"https://api.github.com/repos/apache/solr/issues/1810","id":1666235732,"node_id":"IC_kwDOFFj3yM5jUL1U","user":{"login":"epugh","id":22395,"node_id":"MDQ6VXNlcjIyMzk1","avatar_url":"https://avatars.githubusercontent.com/u/22395?v=4","gravatar_id":"","url":"https://api.github.com/users/epugh","html_url":"https://github.com/epugh","followers_url":"https://api.github.com/users/epugh/followers","following_url":"https://api.github.com/users/epugh/following{/other_user}","gists_url":"https://api.github.com/users/epugh/gists{/gist_id}","starred_url":"https://api.github.com/users/epugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epugh/subscriptions","organizations_url":"https://api.github.com/users/epugh/orgs","repos_url":"https://api.github.com/users/epugh/repos","events_url":"https://api.github.com/users/epugh/events{/privacy}","received_events_url":"https://api.github.com/users/epugh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-04T22:25:06Z","updated_at":"2023-08-04T22:25:06Z","author_association":"CONTRIBUTOR","body":"@dsmiley  @psalagnac all the tests pass.  Thoughts on comittting this?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1666235732/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1666952512","html_url":"https://github.com/apache/solr/pull/1374#issuecomment-1666952512","issue_url":"https://api.github.com/repos/apache/solr/issues/1374","id":1666952512,"node_id":"IC_kwDOFFj3yM5jW61A","user":{"login":"epugh","id":22395,"node_id":"MDQ6VXNlcjIyMzk1","avatar_url":"https://avatars.githubusercontent.com/u/22395?v=4","gravatar_id":"","url":"https://api.github.com/users/epugh","html_url":"https://github.com/epugh","followers_url":"https://api.github.com/users/epugh/followers","following_url":"https://api.github.com/users/epugh/following{/other_user}","gists_url":"https://api.github.com/users/epugh/gists{/gist_id}","starred_url":"https://api.github.com/users/epugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epugh/subscriptions","organizations_url":"https://api.github.com/users/epugh/orgs","repos_url":"https://api.github.com/users/epugh/repos","events_url":"https://api.github.com/users/epugh/events{/privacy}","received_events_url":"https://api.github.com/users/epugh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-06T19:42:06Z","updated_at":"2023-08-06T19:42:06Z","author_association":"CONTRIBUTOR","body":"Some nice cleans up @dsmiley in the current round!  The tests read much simpler...","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1666952512/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1666953093","html_url":"https://github.com/apache/solr/pull/1808#issuecomment-1666953093","issue_url":"https://api.github.com/repos/apache/solr/issues/1808","id":1666953093,"node_id":"IC_kwDOFFj3yM5jW6-F","user":{"login":"epugh","id":22395,"node_id":"MDQ6VXNlcjIyMzk1","avatar_url":"https://avatars.githubusercontent.com/u/22395?v=4","gravatar_id":"","url":"https://api.github.com/users/epugh","html_url":"https://github.com/epugh","followers_url":"https://api.github.com/users/epugh/followers","following_url":"https://api.github.com/users/epugh/following{/other_user}","gists_url":"https://api.github.com/users/epugh/gists{/gist_id}","starred_url":"https://api.github.com/users/epugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epugh/subscriptions","organizations_url":"https://api.github.com/users/epugh/orgs","repos_url":"https://api.github.com/users/epugh/repos","events_url":"https://api.github.com/users/epugh/events{/privacy}","received_events_url":"https://api.github.com/users/epugh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-06T19:45:57Z","updated_at":"2023-08-06T19:45:57Z","author_association":"CONTRIBUTOR","body":"@chatman I've got some optimizations to the Package tool if you want to look.  @gerlowskija I'd love another looksee now that hostContext has been sorted....","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1666953093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1667510102","html_url":"https://github.com/apache/solr/pull/1761#issuecomment-1667510102","issue_url":"https://api.github.com/repos/apache/solr/issues/1761","id":1667510102,"node_id":"IC_kwDOFFj3yM5jZC9W","user":{"login":"psalagnac","id":82967811,"node_id":"MDQ6VXNlcjgyOTY3ODEx","avatar_url":"https://avatars.githubusercontent.com/u/82967811?v=4","gravatar_id":"","url":"https://api.github.com/users/psalagnac","html_url":"https://github.com/psalagnac","followers_url":"https://api.github.com/users/psalagnac/followers","following_url":"https://api.github.com/users/psalagnac/following{/other_user}","gists_url":"https://api.github.com/users/psalagnac/gists{/gist_id}","starred_url":"https://api.github.com/users/psalagnac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/psalagnac/subscriptions","organizations_url":"https://api.github.com/users/psalagnac/orgs","repos_url":"https://api.github.com/users/psalagnac/repos","events_url":"https://api.github.com/users/psalagnac/events{/privacy}","received_events_url":"https://api.github.com/users/psalagnac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-07T09:24:51Z","updated_at":"2023-08-07T09:24:51Z","author_association":"CONTRIBUTOR","body":"Hi @dsmiley,\r\nI think this change is now ready to be merged.\r\nThanks","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1667510102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1667875122","html_url":"https://github.com/apache/solr/pull/1827#issuecomment-1667875122","issue_url":"https://api.github.com/repos/apache/solr/issues/1827","id":1667875122,"node_id":"IC_kwDOFFj3yM5jacEy","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-07T13:36:45Z","updated_at":"2023-08-07T13:36:45Z","author_association":"CONTRIBUTOR","body":"I can anticipate a problem with my suggestion; may or may not be an issue.  Sometimes tests use Solr home's and/or configSets _in-place_ (end up being in a build dir) in directories that we consider read-only.  Tests that manipulate configuration need to use a temp directory.  Gradle executed tests enforce the read-only rule but using your IDE will probably not enforce it.  Other than copying files to a temp dir, I don't have a simpler recommendation.  There's no hurry on this; I can try to work on it being easier.  Ultimately I want this to be the norm for tests.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1667875122/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1668368156","html_url":"https://github.com/apache/solr/pull/1789#issuecomment-1668368156","issue_url":"https://api.github.com/repos/apache/solr/issues/1789","id":1668368156,"node_id":"IC_kwDOFFj3yM5jcUcc","user":{"login":"stillalex","id":61026,"node_id":"MDQ6VXNlcjYxMDI2","avatar_url":"https://avatars.githubusercontent.com/u/61026?v=4","gravatar_id":"","url":"https://api.github.com/users/stillalex","html_url":"https://github.com/stillalex","followers_url":"https://api.github.com/users/stillalex/followers","following_url":"https://api.github.com/users/stillalex/following{/other_user}","gists_url":"https://api.github.com/users/stillalex/gists{/gist_id}","starred_url":"https://api.github.com/users/stillalex/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stillalex/subscriptions","organizations_url":"https://api.github.com/users/stillalex/orgs","repos_url":"https://api.github.com/users/stillalex/repos","events_url":"https://api.github.com/users/stillalex/events{/privacy}","received_events_url":"https://api.github.com/users/stillalex/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-07T18:14:43Z","updated_at":"2023-08-07T18:14:43Z","author_association":"MEMBER","body":"build failed due to some timeout issue. is there anyway to re-trigger?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1668368156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1668373130","html_url":"https://github.com/apache/solr/pull/1789#issuecomment-1668373130","issue_url":"https://api.github.com/repos/apache/solr/issues/1789","id":1668373130,"node_id":"IC_kwDOFFj3yM5jcVqK","user":{"login":"stillalex","id":61026,"node_id":"MDQ6VXNlcjYxMDI2","avatar_url":"https://avatars.githubusercontent.com/u/61026?v=4","gravatar_id":"","url":"https://api.github.com/users/stillalex","html_url":"https://github.com/stillalex","followers_url":"https://api.github.com/users/stillalex/followers","following_url":"https://api.github.com/users/stillalex/following{/other_user}","gists_url":"https://api.github.com/users/stillalex/gists{/gist_id}","starred_url":"https://api.github.com/users/stillalex/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stillalex/subscriptions","organizations_url":"https://api.github.com/users/stillalex/orgs","repos_url":"https://api.github.com/users/stillalex/repos","events_url":"https://api.github.com/users/stillalex/events{/privacy}","received_events_url":"https://api.github.com/users/stillalex/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-07T18:18:01Z","updated_at":"2023-08-07T18:18:01Z","author_association":"MEMBER","body":"will push changes.txt to trigger a new build (I needed to do that anyway)","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1668373130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1668521347","html_url":"https://github.com/apache/solr/pull/1826#issuecomment-1668521347","issue_url":"https://api.github.com/repos/apache/solr/issues/1826","id":1668521347,"node_id":"IC_kwDOFFj3yM5jc52D","user":{"login":"epugh","id":22395,"node_id":"MDQ6VXNlcjIyMzk1","avatar_url":"https://avatars.githubusercontent.com/u/22395?v=4","gravatar_id":"","url":"https://api.github.com/users/epugh","html_url":"https://github.com/epugh","followers_url":"https://api.github.com/users/epugh/followers","following_url":"https://api.github.com/users/epugh/following{/other_user}","gists_url":"https://api.github.com/users/epugh/gists{/gist_id}","starred_url":"https://api.github.com/users/epugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epugh/subscriptions","organizations_url":"https://api.github.com/users/epugh/orgs","repos_url":"https://api.github.com/users/epugh/repos","events_url":"https://api.github.com/users/epugh/events{/privacy}","received_events_url":"https://api.github.com/users/epugh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-07T20:23:31Z","updated_at":"2023-08-07T20:23:31Z","author_association":"CONTRIBUTOR","body":"Okay, this is ready for Review!   @chatman I'd love a LGTM on the test and the bug fix ;-)","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1668521347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1668537916","html_url":"https://github.com/apache/solr/pull/1816#issuecomment-1668537916","issue_url":"https://api.github.com/repos/apache/solr/issues/1816","id":1668537916,"node_id":"IC_kwDOFFj3yM5jc948","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-07T20:29:47Z","updated_at":"2023-08-07T20:29:47Z","author_association":"CONTRIBUTOR","body":"Can you please add an entry to CHANGES.txt under 9.4 (the next release)","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1668537916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1668565754","html_url":"https://github.com/apache/solr/pull/1816#issuecomment-1668565754","issue_url":"https://api.github.com/repos/apache/solr/issues/1816","id":1668565754,"node_id":"IC_kwDOFFj3yM5jdEr6","user":{"login":"rahulgoswami","id":7960773,"node_id":"MDQ6VXNlcjc5NjA3NzM=","avatar_url":"https://avatars.githubusercontent.com/u/7960773?v=4","gravatar_id":"","url":"https://api.github.com/users/rahulgoswami","html_url":"https://github.com/rahulgoswami","followers_url":"https://api.github.com/users/rahulgoswami/followers","following_url":"https://api.github.com/users/rahulgoswami/following{/other_user}","gists_url":"https://api.github.com/users/rahulgoswami/gists{/gist_id}","starred_url":"https://api.github.com/users/rahulgoswami/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rahulgoswami/subscriptions","organizations_url":"https://api.github.com/users/rahulgoswami/orgs","repos_url":"https://api.github.com/users/rahulgoswami/repos","events_url":"https://api.github.com/users/rahulgoswami/events{/privacy}","received_events_url":"https://api.github.com/users/rahulgoswami/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-07T20:55:10Z","updated_at":"2023-08-07T20:55:10Z","author_association":"CONTRIBUTOR","body":"Would it make sense for this to be considered for 8.11.3 release next month ?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1668565754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1668870374","html_url":"https://github.com/apache/solr/pull/1816#issuecomment-1668870374","issue_url":"https://api.github.com/repos/apache/solr/issues/1816","id":1668870374,"node_id":"IC_kwDOFFj3yM5jePDm","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T04:02:53Z","updated_at":"2023-08-08T04:02:53Z","author_association":"CONTRIBUTOR","body":"Yes (if you want to back-port), but that shouldn't affect CHANGES.txt for now because that's a special situation.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1668870374/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669363880","html_url":"https://github.com/apache/solr/pull/1829#issuecomment-1669363880","issue_url":"https://api.github.com/repos/apache/solr/issues/1829","id":1669363880,"node_id":"IC_kwDOFFj3yM5jgHio","user":{"login":"janhoy","id":409128,"node_id":"MDQ6VXNlcjQwOTEyOA==","avatar_url":"https://avatars.githubusercontent.com/u/409128?v=4","gravatar_id":"","url":"https://api.github.com/users/janhoy","html_url":"https://github.com/janhoy","followers_url":"https://api.github.com/users/janhoy/followers","following_url":"https://api.github.com/users/janhoy/following{/other_user}","gists_url":"https://api.github.com/users/janhoy/gists{/gist_id}","starred_url":"https://api.github.com/users/janhoy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janhoy/subscriptions","organizations_url":"https://api.github.com/users/janhoy/orgs","repos_url":"https://api.github.com/users/janhoy/repos","events_url":"https://api.github.com/users/janhoy/events{/privacy}","received_events_url":"https://api.github.com/users/janhoy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T10:36:29Z","updated_at":"2023-08-08T10:36:29Z","author_association":"CONTRIBUTOR","body":"Also feel free to add a line to CHANGES.txt, giving yourself credit","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669363880/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669382550","html_url":"https://github.com/apache/solr/pull/1826#issuecomment-1669382550","issue_url":"https://api.github.com/repos/apache/solr/issues/1826","id":1669382550,"node_id":"IC_kwDOFFj3yM5jgMGW","user":{"login":"epugh","id":22395,"node_id":"MDQ6VXNlcjIyMzk1","avatar_url":"https://avatars.githubusercontent.com/u/22395?v=4","gravatar_id":"","url":"https://api.github.com/users/epugh","html_url":"https://github.com/epugh","followers_url":"https://api.github.com/users/epugh/followers","following_url":"https://api.github.com/users/epugh/following{/other_user}","gists_url":"https://api.github.com/users/epugh/gists{/gist_id}","starred_url":"https://api.github.com/users/epugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/epugh/subscriptions","organizations_url":"https://api.github.com/users/epugh/orgs","repos_url":"https://api.github.com/users/epugh/repos","events_url":"https://api.github.com/users/epugh/events{/privacy}","received_events_url":"https://api.github.com/users/epugh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T10:49:00Z","updated_at":"2023-08-08T10:49:00Z","author_association":"CONTRIBUTOR","body":"> While I do understand the reasoning, I'm not a big fan of having an integration test rely on connection to the internet...\r\n\r\nI totally suspected this would come up....   I also don't love that we are referencing some random package created by some random person too!   While the \"right\" thing is to maybe have some sort of test package that exercises all the aspects of package management, and that is maybe part of Apache Solr as well, I don't really have the energy/interest to go down that path.   Are you a 0 or a -1 on this PR?   I.e, can we live with it for now or do you think to merge we need to deal with it?\r\n\r\nOne more idea, what if we comment out the test, so at least we have it someone wants to run it, but it isn't in the regular path?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669382550/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669386035","html_url":"https://github.com/apache/solr/pull/1829#issuecomment-1669386035","issue_url":"https://api.github.com/repos/apache/solr/issues/1829","id":1669386035,"node_id":"IC_kwDOFFj3yM5jgM8z","user":{"login":"janhoy","id":409128,"node_id":"MDQ6VXNlcjQwOTEyOA==","avatar_url":"https://avatars.githubusercontent.com/u/409128?v=4","gravatar_id":"","url":"https://api.github.com/users/janhoy","html_url":"https://github.com/janhoy","followers_url":"https://api.github.com/users/janhoy/followers","following_url":"https://api.github.com/users/janhoy/following{/other_user}","gists_url":"https://api.github.com/users/janhoy/gists{/gist_id}","starred_url":"https://api.github.com/users/janhoy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janhoy/subscriptions","organizations_url":"https://api.github.com/users/janhoy/orgs","repos_url":"https://api.github.com/users/janhoy/repos","events_url":"https://api.github.com/users/janhoy/events{/privacy}","received_events_url":"https://api.github.com/users/janhoy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T10:51:20Z","updated_at":"2023-08-08T10:51:20Z","author_association":"CONTRIBUTOR","body":"@gerlowskija, @risdenk  added you as reviewers since you may know RestManager for context..","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669386035/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669483513","html_url":"https://github.com/apache/solr/pull/1829#issuecomment-1669483513","issue_url":"https://api.github.com/repos/apache/solr/issues/1829","id":1669483513,"node_id":"IC_kwDOFFj3yM5jgkv5","user":{"login":"xtenzQ","id":10103127,"node_id":"MDQ6VXNlcjEwMTAzMTI3","avatar_url":"https://avatars.githubusercontent.com/u/10103127?v=4","gravatar_id":"","url":"https://api.github.com/users/xtenzQ","html_url":"https://github.com/xtenzQ","followers_url":"https://api.github.com/users/xtenzQ/followers","following_url":"https://api.github.com/users/xtenzQ/following{/other_user}","gists_url":"https://api.github.com/users/xtenzQ/gists{/gist_id}","starred_url":"https://api.github.com/users/xtenzQ/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xtenzQ/subscriptions","organizations_url":"https://api.github.com/users/xtenzQ/orgs","repos_url":"https://api.github.com/users/xtenzQ/repos","events_url":"https://api.github.com/users/xtenzQ/events{/privacy}","received_events_url":"https://api.github.com/users/xtenzQ/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T12:03:42Z","updated_at":"2023-08-08T12:03:42Z","author_association":"CONTRIBUTOR","body":"> Also feel free to add a line to CHANGES.txt, giving yourself credit\r\n\r\nIs it ok if I added this ticket under bug section?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669483513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669531186","html_url":"https://github.com/apache/solr/pull/1435#issuecomment-1669531186","issue_url":"https://api.github.com/repos/apache/solr/issues/1435","id":1669531186,"node_id":"IC_kwDOFFj3yM5jgwYy","user":{"login":"dizzu","id":604310,"node_id":"MDQ6VXNlcjYwNDMxMA==","avatar_url":"https://avatars.githubusercontent.com/u/604310?v=4","gravatar_id":"","url":"https://api.github.com/users/dizzu","html_url":"https://github.com/dizzu","followers_url":"https://api.github.com/users/dizzu/followers","following_url":"https://api.github.com/users/dizzu/following{/other_user}","gists_url":"https://api.github.com/users/dizzu/gists{/gist_id}","starred_url":"https://api.github.com/users/dizzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dizzu/subscriptions","organizations_url":"https://api.github.com/users/dizzu/orgs","repos_url":"https://api.github.com/users/dizzu/repos","events_url":"https://api.github.com/users/dizzu/events{/privacy}","received_events_url":"https://api.github.com/users/dizzu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T12:36:47Z","updated_at":"2023-08-08T12:36:47Z","author_association":"CONTRIBUTOR","body":"@alessandrobenedetti We're seeing some weird output results for stored byte vectors in Solr 9.3.0 (SolrCloud).\r\nIn a distributed query (default or distrib=true), the stored field vector is outputted as a string with random unicode characters (eg: ^@\\^Võ^\\F¤^G\\n\\^Nׁ񷤝>\\^B' ... etc).\r\nIn a non-distributed query(distrib=false), the stored field vector is outputted correctly as a vector [-128, 15, -112, etc]. \r\n\r\nAny ideas about what might be causing this?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669531186/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669538065","html_url":"https://github.com/apache/solr/pull/1633#issuecomment-1669538065","issue_url":"https://api.github.com/repos/apache/solr/issues/1633","id":1669538065,"node_id":"IC_kwDOFFj3yM5jgyER","user":{"login":"dizzu","id":604310,"node_id":"MDQ6VXNlcjYwNDMxMA==","avatar_url":"https://avatars.githubusercontent.com/u/604310?v=4","gravatar_id":"","url":"https://api.github.com/users/dizzu","html_url":"https://github.com/dizzu","followers_url":"https://api.github.com/users/dizzu/followers","following_url":"https://api.github.com/users/dizzu/following{/other_user}","gists_url":"https://api.github.com/users/dizzu/gists{/gist_id}","starred_url":"https://api.github.com/users/dizzu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dizzu/subscriptions","organizations_url":"https://api.github.com/users/dizzu/orgs","repos_url":"https://api.github.com/users/dizzu/repos","events_url":"https://api.github.com/users/dizzu/events{/privacy}","received_events_url":"https://api.github.com/users/dizzu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T12:41:29Z","updated_at":"2023-08-08T12:41:29Z","author_association":"CONTRIBUTOR","body":"@noblepaul I'm seeing some very weird formatting using the default interface query output (wt=json/default and indent=true) in SolrCloud mode. Either all the indented content is shifted by many white spaces (while keeping indents after this), either there is not indenting at all (keeping multiple lines, different from indent=false), either we get a new line between every line. Why was this made the instant default and not tested as an alternative in at least one release? 😕","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669538065/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669868385","html_url":"https://github.com/apache/solr/pull/1816#issuecomment-1669868385","issue_url":"https://api.github.com/repos/apache/solr/issues/1816","id":1669868385,"node_id":"IC_kwDOFFj3yM5jiCth","user":{"login":"rahulgoswami","id":7960773,"node_id":"MDQ6VXNlcjc5NjA3NzM=","avatar_url":"https://avatars.githubusercontent.com/u/7960773?v=4","gravatar_id":"","url":"https://api.github.com/users/rahulgoswami","html_url":"https://github.com/rahulgoswami","followers_url":"https://api.github.com/users/rahulgoswami/followers","following_url":"https://api.github.com/users/rahulgoswami/following{/other_user}","gists_url":"https://api.github.com/users/rahulgoswami/gists{/gist_id}","starred_url":"https://api.github.com/users/rahulgoswami/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rahulgoswami/subscriptions","organizations_url":"https://api.github.com/users/rahulgoswami/orgs","repos_url":"https://api.github.com/users/rahulgoswami/repos","events_url":"https://api.github.com/users/rahulgoswami/events{/privacy}","received_events_url":"https://api.github.com/users/rahulgoswami/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T15:46:40Z","updated_at":"2023-08-08T15:46:40Z","author_association":"CONTRIBUTOR","body":"This is done. Awaiting review. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1669868385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1670095052","html_url":"https://github.com/apache/solr/pull/1793#issuecomment-1670095052","issue_url":"https://api.github.com/repos/apache/solr/issues/1793","id":1670095052,"node_id":"IC_kwDOFFj3yM5ji6DM","user":{"login":"HoustonPutman","id":3376422,"node_id":"MDQ6VXNlcjMzNzY0MjI=","avatar_url":"https://avatars.githubusercontent.com/u/3376422?v=4","gravatar_id":"","url":"https://api.github.com/users/HoustonPutman","html_url":"https://github.com/HoustonPutman","followers_url":"https://api.github.com/users/HoustonPutman/followers","following_url":"https://api.github.com/users/HoustonPutman/following{/other_user}","gists_url":"https://api.github.com/users/HoustonPutman/gists{/gist_id}","starred_url":"https://api.github.com/users/HoustonPutman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HoustonPutman/subscriptions","organizations_url":"https://api.github.com/users/HoustonPutman/orgs","repos_url":"https://api.github.com/users/HoustonPutman/repos","events_url":"https://api.github.com/users/HoustonPutman/events{/privacy}","received_events_url":"https://api.github.com/users/HoustonPutman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T18:23:14Z","updated_at":"2023-08-08T18:23:14Z","author_association":"CONTRIBUTOR","body":"So cool to have this in!! Thanks @gerlowskija ","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1670095052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1670292382","html_url":"https://github.com/apache/solr/pull/1761#issuecomment-1670292382","issue_url":"https://api.github.com/repos/apache/solr/issues/1761","id":1670292382,"node_id":"IC_kwDOFFj3yM5jjqOe","user":{"login":"stillalex","id":61026,"node_id":"MDQ6VXNlcjYxMDI2","avatar_url":"https://avatars.githubusercontent.com/u/61026?v=4","gravatar_id":"","url":"https://api.github.com/users/stillalex","html_url":"https://github.com/stillalex","followers_url":"https://api.github.com/users/stillalex/followers","following_url":"https://api.github.com/users/stillalex/following{/other_user}","gists_url":"https://api.github.com/users/stillalex/gists{/gist_id}","starred_url":"https://api.github.com/users/stillalex/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stillalex/subscriptions","organizations_url":"https://api.github.com/users/stillalex/orgs","repos_url":"https://api.github.com/users/stillalex/repos","events_url":"https://api.github.com/users/stillalex/events{/privacy}","received_events_url":"https://api.github.com/users/stillalex/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T20:52:14Z","updated_at":"2023-08-08T20:52:14Z","author_association":"MEMBER","body":"read through this, I'm not really familiar with any of this code but the change looks good to me.\r\nminor question. why not add another executor (fixed number of threads similar to parallelExecutor) for these expensive operations? all the code that ensures the max number of running threads would no longer be necessary, the finishTask method would also be a bit simpler.\r\n\r\nanother one for my personal understanding: when the status of a task is reported as `RUNNING` it could either be queued or running. this means 'sent to executor', but there is no guarantee this will run immediately. introducing another status as `PENDING` might cause some confusion to what is actually running at a given moment.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1670292382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1670316275","html_url":"https://github.com/apache/solr/pull/1119#issuecomment-1670316275","issue_url":"https://api.github.com/repos/apache/solr/issues/1119","id":1670316275,"node_id":"IC_kwDOFFj3yM5jjwDz","user":{"login":"stillalex","id":61026,"node_id":"MDQ6VXNlcjYxMDI2","avatar_url":"https://avatars.githubusercontent.com/u/61026?v=4","gravatar_id":"","url":"https://api.github.com/users/stillalex","html_url":"https://github.com/stillalex","followers_url":"https://api.github.com/users/stillalex/followers","following_url":"https://api.github.com/users/stillalex/following{/other_user}","gists_url":"https://api.github.com/users/stillalex/gists{/gist_id}","starred_url":"https://api.github.com/users/stillalex/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stillalex/subscriptions","organizations_url":"https://api.github.com/users/stillalex/orgs","repos_url":"https://api.github.com/users/stillalex/repos","events_url":"https://api.github.com/users/stillalex/events{/privacy}","received_events_url":"https://api.github.com/users/stillalex/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-08T21:13:59Z","updated_at":"2023-08-08T21:13:59Z","author_association":"MEMBER","body":"@iamsanjay are you ok with me pushing some changes to this PR's branch to get things goin again?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1670316275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1670888841","html_url":"https://github.com/apache/solr/pull/1829#issuecomment-1670888841","issue_url":"https://api.github.com/repos/apache/solr/issues/1829","id":1670888841,"node_id":"IC_kwDOFFj3yM5jl72J","user":{"login":"janhoy","id":409128,"node_id":"MDQ6VXNlcjQwOTEyOA==","avatar_url":"https://avatars.githubusercontent.com/u/409128?v=4","gravatar_id":"","url":"https://api.github.com/users/janhoy","html_url":"https://github.com/janhoy","followers_url":"https://api.github.com/users/janhoy/followers","following_url":"https://api.github.com/users/janhoy/following{/other_user}","gists_url":"https://api.github.com/users/janhoy/gists{/gist_id}","starred_url":"https://api.github.com/users/janhoy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janhoy/subscriptions","organizations_url":"https://api.github.com/users/janhoy/orgs","repos_url":"https://api.github.com/users/janhoy/repos","events_url":"https://api.github.com/users/janhoy/events{/privacy}","received_events_url":"https://api.github.com/users/janhoy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-09T08:24:08Z","updated_at":"2023-08-09T08:24:08Z","author_association":"CONTRIBUTOR","body":"> > Also feel free to add a line to CHANGES.txt, giving yourself credit\r\n> \r\n> Is it ok if I added this ticket under bug section?\r\n\r\nYes I believe that is appropriate","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1670888841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1671353210","html_url":"https://github.com/apache/solr/pull/1761#issuecomment-1671353210","issue_url":"https://api.github.com/repos/apache/solr/issues/1761","id":1671353210,"node_id":"IC_kwDOFFj3yM5jntN6","user":{"login":"psalagnac","id":82967811,"node_id":"MDQ6VXNlcjgyOTY3ODEx","avatar_url":"https://avatars.githubusercontent.com/u/82967811?v=4","gravatar_id":"","url":"https://api.github.com/users/psalagnac","html_url":"https://github.com/psalagnac","followers_url":"https://api.github.com/users/psalagnac/followers","following_url":"https://api.github.com/users/psalagnac/following{/other_user}","gists_url":"https://api.github.com/users/psalagnac/gists{/gist_id}","starred_url":"https://api.github.com/users/psalagnac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/psalagnac/subscriptions","organizations_url":"https://api.github.com/users/psalagnac/orgs","repos_url":"https://api.github.com/users/psalagnac/repos","events_url":"https://api.github.com/users/psalagnac/events{/privacy}","received_events_url":"https://api.github.com/users/psalagnac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-09T13:43:09Z","updated_at":"2023-08-09T13:43:09Z","author_association":"CONTRIBUTOR","body":"> Any thoughts on how this bug slipped by our notice?\r\n\r\nI was unable to write a unit that actually do an expensive operation (backup or restore). The low-level queue mechanism is well tested, but I'm not sure how to write an end-to-end test with expensive operations at scale.\r\n\r\n\r\n\r\n> read through this, I'm not really familiar with any of this code but the change looks good to me. minor question. why not add another executor (fixed number of threads similar to parallelExecutor) for these expensive operations? all the code that ensures the max number of running threads would no longer be necessary, the finishTask method would also be a bit simpler.\r\n\r\nYes, that would be another option.\r\nThis is at the cost of having many dormant threads most of the time. Also, manually handling a queue for expensive tasks allow eventual future improvements.\r\nI don't have any strong opinion.\r\n\r\n> \r\n> another one for my personal understanding: when the status of a task is reported as `RUNNING` it could either be queued or running. this means 'sent to executor', but there is no guarantee this will run immediately. introducing another status as `PENDING` might cause some confusion to what is actually running at a given moment.\r\n\r\nYou're correct, RUNNING status means 'sent to executor'.\r\nFor most of the tasks, I don't expect the time spend by the task in the executor queue to be significant (otherwise, we would have to mark something else as expensive if it keeps the executor busy for a while).\r\n\r\nI added the `PENDING` status to make this difference. Expensive tasks can be in the queue for seconds/minutes for big collections, so I think there is some value for the caller to know that at some point.\r\n(note that the caller is the overseer only. The top level task with user specified asyncId does not expose this _pending_ status)","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1671353210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1671627980","html_url":"https://github.com/apache/solr/pull/1831#issuecomment-1671627980","issue_url":"https://api.github.com/repos/apache/solr/issues/1831","id":1671627980,"node_id":"IC_kwDOFFj3yM5jowTM","user":{"login":"stillalex","id":61026,"node_id":"MDQ6VXNlcjYxMDI2","avatar_url":"https://avatars.githubusercontent.com/u/61026?v=4","gravatar_id":"","url":"https://api.github.com/users/stillalex","html_url":"https://github.com/stillalex","followers_url":"https://api.github.com/users/stillalex/followers","following_url":"https://api.github.com/users/stillalex/following{/other_user}","gists_url":"https://api.github.com/users/stillalex/gists{/gist_id}","starred_url":"https://api.github.com/users/stillalex/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stillalex/subscriptions","organizations_url":"https://api.github.com/users/stillalex/orgs","repos_url":"https://api.github.com/users/stillalex/repos","events_url":"https://api.github.com/users/stillalex/events{/privacy}","received_events_url":"https://api.github.com/users/stillalex/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-09T15:28:20Z","updated_at":"2023-08-09T15:28:20Z","author_association":"MEMBER","body":"thank you for the review @epugh. will leave this open for a bit more, if no other comments will merge it as is. we can rename later if anyone finds a better name for this config class.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1671627980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1671886686","html_url":"https://github.com/apache/solr/pull/1832#issuecomment-1671886686","issue_url":"https://api.github.com/repos/apache/solr/issues/1832","id":1671886686,"node_id":"IC_kwDOFFj3yM5jpvde","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-09T17:53:48Z","updated_at":"2023-08-09T17:57:09Z","author_association":"CONTRIBUTOR","body":"> this just seems like a terrible way to do this. We shouldn't even run tests this way on Mac. It gives a false sense of security that things are working when they really aren't.\r\n\r\nI guess where I differ is on the \"false sense of security\" thing.  It'd be nearly impossible for users not to get the message: our release notes have warnings about this, the bug surfaces immediately upon starting Solr, etc.  Any admin doing any due-diligence is going to catch this right away.\r\n\r\nIt definitely sucks, as an experience for users.  But hitting the bug and forcing users to explicitly disable SM seems safer than doing something \"smarter\" that disables SecurityManager for folks implicitly.  Most users would probably see whatever message we log after disabling SM, but some might not and find themselves exposed in ways they didn't expect.\r\n\r\nIf I'm being overly cautious and am the minority there, I'm happy to add some `bin/solr` level fix to this PR (assuming that's what you had in mind @risdenk) to just disable SM in these cases.  But wanted to call out what seems like at least a potential security risk.\r\n\r\n(And even with a `bin/solr` level change if we go that route, I think we'd still need the gradle-level change in this PR to keep our JUnit tests in line with \"real\" packaged deployments?)\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1671886686/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1671908610","html_url":"https://github.com/apache/solr/pull/1832#issuecomment-1671908610","issue_url":"https://api.github.com/repos/apache/solr/issues/1832","id":1671908610,"node_id":"IC_kwDOFFj3yM5jp00C","user":{"login":"risdenk","id":3384157,"node_id":"MDQ6VXNlcjMzODQxNTc=","avatar_url":"https://avatars.githubusercontent.com/u/3384157?v=4","gravatar_id":"","url":"https://api.github.com/users/risdenk","html_url":"https://github.com/risdenk","followers_url":"https://api.github.com/users/risdenk/followers","following_url":"https://api.github.com/users/risdenk/following{/other_user}","gists_url":"https://api.github.com/users/risdenk/gists{/gist_id}","starred_url":"https://api.github.com/users/risdenk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/risdenk/subscriptions","organizations_url":"https://api.github.com/users/risdenk/orgs","repos_url":"https://api.github.com/users/risdenk/repos","events_url":"https://api.github.com/users/risdenk/events{/privacy}","received_events_url":"https://api.github.com/users/risdenk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-09T18:10:34Z","updated_at":"2023-08-09T18:10:34Z","author_association":"CONTRIBUTOR","body":"> \"false sense of security\" thing\r\n\r\nfalse sense of security - My poor wording since we are working around security manager. I mean that we shouldn't even run the tests at all. Disabling the security manager for tests and saying \"hey look on JDK 20 on Mac tests pass\" but we just hide the fact that we disable the default enabled security manager just to make tests pass seems wrong.\r\n\r\nI would prefer if we didn't even run any tests or at least fail loudly and say Mac OS X + JDK 20 is unsupported or something like that.\r\n\r\nI don't have anything in mind about bin/solr or other smarter ways to potentially make the user aware of this. I'm just not a fan of trying to make the tests pass just to make the tests pass. They are failing because JDK 20 + Mac + Jetty + security manager is broken - which is the default out of the box config for Solr.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1671908610/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1671934010","html_url":"https://github.com/apache/solr/pull/1832#issuecomment-1671934010","issue_url":"https://api.github.com/repos/apache/solr/issues/1832","id":1671934010,"node_id":"IC_kwDOFFj3yM5jp7A6","user":{"login":"gerlowskija","id":9030708,"node_id":"MDQ6VXNlcjkwMzA3MDg=","avatar_url":"https://avatars.githubusercontent.com/u/9030708?v=4","gravatar_id":"","url":"https://api.github.com/users/gerlowskija","html_url":"https://github.com/gerlowskija","followers_url":"https://api.github.com/users/gerlowskija/followers","following_url":"https://api.github.com/users/gerlowskija/following{/other_user}","gists_url":"https://api.github.com/users/gerlowskija/gists{/gist_id}","starred_url":"https://api.github.com/users/gerlowskija/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gerlowskija/subscriptions","organizations_url":"https://api.github.com/users/gerlowskija/orgs","repos_url":"https://api.github.com/users/gerlowskija/repos","events_url":"https://api.github.com/users/gerlowskija/events{/privacy}","received_events_url":"https://api.github.com/users/gerlowskija/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-09T18:30:41Z","updated_at":"2023-08-09T18:30:41Z","author_association":"CONTRIBUTOR","body":"I hear what you're getting at about JDK20+Mac+SM being fundamentally broken.  We don't want to give users a mistaken impression that there's not this big issue.\r\n\r\nBut doesn't disabling testing entirely for that JDK+OS \"throw the baby out with the bathwater\"?\r\n\r\nSure, the bug probably makes JDK20 a non-starter for a lot of folks, but I'd bet there's a decent chunk of users who don't really care about SM and would be happy to disable it to use JDK20.  Shouldn't we still gather test data for that set of users?  Surely there's a way to do that while still signaling clearly (in release notes, announce emails, etc.) that JDK20+Mac+SM has issues?","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1671934010/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1671963201","html_url":"https://github.com/apache/solr/pull/1761#issuecomment-1671963201","issue_url":"https://api.github.com/repos/apache/solr/issues/1761","id":1671963201,"node_id":"IC_kwDOFFj3yM5jqCJB","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-09T18:52:33Z","updated_at":"2023-08-09T18:52:33Z","author_association":"CONTRIBUTOR","body":"I like Alex's idea of a second thread pool / executor; I think it would mean we would not need the explicit expensiveTaskQueue that is fiddly to work with and could rely on the more familiar Executor (that has an impl using a queue but it's not our code to worry about).  But I don't have a strong opinion.\r\n\r\n> This is at the cost of having many dormant threads most of the time.\r\n\r\n`org.apache.solr.common.util.ExecutorUtil#newMDCAwareCachedThreadPool(int, java.util.concurrent.ThreadFactory)` will not keep unused threads around long; only a minute.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1671963201/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/solr/issues/comments/1672091470","html_url":"https://github.com/apache/solr/pull/1832#issuecomment-1672091470","issue_url":"https://api.github.com/repos/apache/solr/issues/1832","id":1672091470,"node_id":"IC_kwDOFFj3yM5jqhdO","user":{"login":"dsmiley","id":377295,"node_id":"MDQ6VXNlcjM3NzI5NQ==","avatar_url":"https://avatars.githubusercontent.com/u/377295?v=4","gravatar_id":"","url":"https://api.github.com/users/dsmiley","html_url":"https://github.com/dsmiley","followers_url":"https://api.github.com/users/dsmiley/followers","following_url":"https://api.github.com/users/dsmiley/following{/other_user}","gists_url":"https://api.github.com/users/dsmiley/gists{/gist_id}","starred_url":"https://api.github.com/users/dsmiley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsmiley/subscriptions","organizations_url":"https://api.github.com/users/dsmiley/orgs","repos_url":"https://api.github.com/users/dsmiley/repos","events_url":"https://api.github.com/users/dsmiley/events{/privacy}","received_events_url":"https://api.github.com/users/dsmiley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-09T20:20:30Z","updated_at":"2023-08-09T20:20:30Z","author_association":"CONTRIBUTOR","body":"Confusingly, we don't use the Java SecurityManager in tests for \"Security\".  We use it to enforce file system rules in our tests  to enforce best-practices.  This ensures we don't waste time root causing test instability due to some _other_ test that leaked state into a place seen by a _later_ test.  I think we should alter the security policy of the test config to only be about the file system and not bother maintaining all the other rules which are more toil than value.","reactions":{"url":"https://api.github.com/repos/apache/solr/issues/comments/1672091470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]