[{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/548526346","html_url":"https://github.com/apache/couchdb/pull/2292#issuecomment-548526346","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2292","id":548526346,"node_id":"MDEyOklzc3VlQ29tbWVudDU0ODUyNjM0Ng==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-10-31T19:10:35Z","updated_at":"2019-10-31T19:10:35Z","author_association":"CONTRIBUTOR","body":"Example of `_scheduler/docs` response:\r\n\r\n```json\r\n{\r\n  \"total_rows\": 1,\r\n  \"offset\": 0,\r\n  \"docs\": [\r\n    {\r\n      \"database\": \"_replicator\",\r\n      \"doc_id\": \"2e5df7bf99f1a9d06feef6301300055f\",\r\n      \"id\": \"d99e532c1129e9cacbf7ed085deca509+continuous\",\r\n      \"node\": \"node1@127.0.0.1\",\r\n      \"source\": \"http://adm:*****@localhost:15984/src/\",\r\n      \"target\": \"http://adm:*****@localhost:15984/tgt/\",\r\n      \"state\": \"pending\",\r\n      \"info\": {\r\n        \"revisions_checked\": 113,\r\n        \"missing_revisions_found\": 113,\r\n        \"docs_read\": 113,\r\n        \"docs_written\": 113,\r\n        \"changes_pending\": 0,\r\n        \"doc_write_failures\": 0,\r\n        \"checkpointed_source_seq\": \"113-g1AAAACTeJzLYWBgYMpgTmHgz8tPSTV0MDQy1zMAQsMckEQiQ1L9____szKYE01ygQLsZsYGqcamiZjKcRqRxwIkGRqA1H-oSbZgk1KMLCzTDE0wdWUBAF6HJIQ\",\r\n        \"source_seq\": \"113-g1AAAACTeJzLYWBgYMpgTmHgz8tPSTV0MDQy1zMAQsMckEQiQ1L9____szKYE01ygQLsZsYGqcamiZjKcRqRxwIkGRqA1H-oSbZgk1KMLCzTDE0wdWUBAF6HJIQ\",\r\n        \"through_seq\": \"113-g1AAAACTeJzLYWBgYMpgTmHgz8tPSTV0MDQy1zMAQsMckEQiQ1L9____szKYE01ygQLsZsYGqcamiZjKcRqRxwIkGRqA1H-oSbZgk1KMLCzTDE0wdWUBAF6HJIQ\"\r\n      },\r\n      \"error_count\": 0,\r\n      \"last_updated\": \"2019-10-31T06:46:11Z\",\r\n      \"start_time\": \"2019-10-31T06:42:16Z\",\r\n      \"source_proxy\": null,\r\n      \"target_proxy\": null\r\n    }\r\n  ]\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/548526346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/548526613","html_url":"https://github.com/apache/couchdb/pull/2292#issuecomment-548526613","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2292","id":548526613,"node_id":"MDEyOklzc3VlQ29tbWVudDU0ODUyNjYxMw==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-10-31T19:11:24Z","updated_at":"2019-10-31T19:11:24Z","author_association":"CONTRIBUTOR","body":"Example of `_scheduler/jobs` response:\r\n\r\n```\r\n{\r\n    \"jobs\": [\r\n        {\r\n            \"database\": \"_replicator\",\r\n            \"doc_id\": \"2e5df7bf99f1a9d06feef6301300055f\",\r\n            \"history\": [\r\n                {\r\n                    \"timestamp\": \"2019-10-31T06:46:11Z\",\r\n                    \"type\": \"stopped\"\r\n                },\r\n                {\r\n                    \"timestamp\": \"2019-10-31T06:42:16Z\",\r\n                    \"type\": \"started\"\r\n                },\r\n                {\r\n                    \"timestamp\": \"2019-10-31T06:42:16Z\",\r\n                    \"type\": \"added\"\r\n                }\r\n            ],\r\n            \"id\": \"d99e532c1129e9cacbf7ed085deca509+continuous\",\r\n            \"info\": {\r\n                \"changes_pending\": 0,\r\n                \"checkpointed_source_seq\": \"113-g1AAAACTeJzLYWBgYMpgTmHgz8tPSTV0MDQy1zMAQsMckEQiQ1L9____szKYE01ygQLsZsYGqcamiZjKcRqRxwIkGRqA1H-oSbZgk1KMLCzTDE0wdWUBAF6HJIQ\",\r\n                \"doc_write_failures\": 0,\r\n                \"docs_read\": 113,\r\n                \"docs_written\": 113,\r\n                \"missing_revisions_found\": 113,\r\n                \"revisions_checked\": 113,\r\n                \"source_seq\": \"113-g1AAAACTeJzLYWBgYMpgTmHgz8tPSTV0MDQy1zMAQsMckEQiQ1L9____szKYE01ygQLsZsYGqcamiZjKcRqRxwIkGRqA1H-oSbZgk1KMLCzTDE0wdWUBAF6HJIQ\",\r\n                \"through_seq\": \"113-g1AAAACTeJzLYWBgYMpgTmHgz8tPSTV0MDQy1zMAQsMckEQiQ1L9____szKYE01ygQLsZsYGqcamiZjKcRqRxwIkGRqA1H-oSbZgk1KMLCzTDE0wdWUBAF6HJIQ\"\r\n            },\r\n            \"node\": \"node1@127.0.0.1\",\r\n            \"pid\": null,\r\n            \"source\": \"http://adm:*****@localhost:15984/src/\",\r\n            \"start_time\": \"2019-10-31T06:42:16Z\",\r\n            \"target\": \"http://adm:*****@localhost:15984/tgt/\",\r\n            \"user\": null\r\n        }\r\n    ],\r\n    \"offset\": 0,\r\n    \"total_rows\": 1\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/548526613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/548528333","html_url":"https://github.com/apache/couchdb/issues/2249#issuecomment-548528333","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2249","id":548528333,"node_id":"MDEyOklzc3VlQ29tbWVudDU0ODUyODMzMw==","user":{"login":"jaydoane","id":51209,"node_id":"MDQ6VXNlcjUxMjA5","avatar_url":"https://avatars.githubusercontent.com/u/51209?v=4","gravatar_id":"","url":"https://api.github.com/users/jaydoane","html_url":"https://github.com/jaydoane","followers_url":"https://api.github.com/users/jaydoane/followers","following_url":"https://api.github.com/users/jaydoane/following{/other_user}","gists_url":"https://api.github.com/users/jaydoane/gists{/gist_id}","starred_url":"https://api.github.com/users/jaydoane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaydoane/subscriptions","organizations_url":"https://api.github.com/users/jaydoane/orgs","repos_url":"https://api.github.com/users/jaydoane/repos","events_url":"https://api.github.com/users/jaydoane/events{/privacy}","received_events_url":"https://api.github.com/users/jaydoane/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-10-31T19:16:02Z","updated_at":"2019-10-31T19:17:07Z","author_association":"CONTRIBUTOR","body":"> how do we check which one has been enabled\r\n\r\nAccording to [the docs](https://github.com/apache/couchdb-ioq/blob/master/IOQ2.md#enable-ioq2), we can tell if IOQ2 is enabled using:\r\n```erlang\r\nioq:ioq2_enabled().\r\n```\r\nI have also confirmed locally that this appears to work correctly, at least when IOQ2 is not enabled.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/548528333/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/548836024","html_url":"https://github.com/apache/couchdb/issues/1600#issuecomment-548836024","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1600","id":548836024,"node_id":"MDEyOklzc3VlQ29tbWVudDU0ODgzNjAyNA==","user":{"login":"enst","id":425319,"node_id":"MDQ6VXNlcjQyNTMxOQ==","avatar_url":"https://avatars.githubusercontent.com/u/425319?v=4","gravatar_id":"","url":"https://api.github.com/users/enst","html_url":"https://github.com/enst","followers_url":"https://api.github.com/users/enst/followers","following_url":"https://api.github.com/users/enst/following{/other_user}","gists_url":"https://api.github.com/users/enst/gists{/gist_id}","starred_url":"https://api.github.com/users/enst/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/enst/subscriptions","organizations_url":"https://api.github.com/users/enst/orgs","repos_url":"https://api.github.com/users/enst/repos","events_url":"https://api.github.com/users/enst/events{/privacy}","received_events_url":"https://api.github.com/users/enst/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-01T15:40:25Z","updated_at":"2019-11-01T15:49:32Z","author_association":"NONE","body":"Seeing the same issue on our 3-node 2.3.1 cluster.\r\nAnother 2.3.1 single instance works fine.\r\nAll 4 servers are running on SSD.\r\n\r\nWe're using docker image couchdb:2.3 .\r\n\r\nA bunch of logs like the following:\r\nNov 01 15:00:56 na5 d89aee6fe164[937]: [error] 2019-11-01T15:00:56.954747Z couchdb@couchdb3.internal <0.19841.787> 3707979fa5 req_err(1125717067) unknown_error : normal\r\nNov 01 15:00:56 na5 d89aee6fe164[937]:     [<<\"chttpd:catch_error/3 L356\">>,<<\"chttpd:handle_req_after_auth/2 L322\">>,<<\"chttpd:process_request/1 L303\">>,<<\"chttpd:handle_request_int/1 L243\">>,<<\"mochiweb_http:headers/6 L128\">>,<<\"proc_lib:init_p_do_apply/3 L247\">>]\r\n\r\nOct 30 16:37:58 na5 d89aee6fe164[937]: [error] 2019-10-30T16:37:58.197437Z couchdb@couchdb3.internal <0.19845.207> f1628abb46 req_err(1125717067) unknown_error : normal                                                                                                                 \r\nOct 30 16:37:58 na5 d89aee6fe164[937]:     [<<\"chttpd:catch_error/3 L356\">>,<<\"chttpd:handle_req_after_auth/2 L322\">>,<<\"chttpd:process_request/1 L303\">>,<<\"chttpd:handle_request_int/1 L243\">>,<<\"mochiweb_http:headers/6 L128\">>,<<\"proc_lib:init_p_do_apply/3 L247\">>]    ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/548836024/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/548930210","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-548930210","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":548930210,"node_id":"MDEyOklzc3VlQ29tbWVudDU0ODkzMDIxMA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-01T19:59:13Z","updated_at":"2019-11-01T19:59:13Z","author_association":"MEMBER","body":"Awesome work on this @iilyak! I think this will be a super useful tool to have for a whole bunch of different scenarios.\r\n\r\nI do have a few questions on the filtering aspect though. I've been reviewing a bit and also trying to keep in mind how I might expect to use a tool like this. So far my main use cases look something like such:\r\n\r\n1. Profiling all requests of a certain type (i.e., show me profiles for all _changes requests)\r\n2. I have a specific request (dbname, docid/view/etc, query string) that is slow, please profile this one specific HTTP request.\r\n3. Show me all HTTP requests that take longer than N seconds (that aren't changes).\r\n\r\nFor 1, I think that's easy enough. We'd just add a rule for `tracing.database.changes` (or whatever name we give it) that is a `match all` for something like `(#{}) -> [report]`. The only thing there is it seems somewhat complicated to explain why not just having a sampler of `all` isn't enough for that use case.\r\n\r\nFor 2, I think we could add a specific header as a tag to each HTTP span, except this get a bit tricky when selecting spans which I'll expand on below.\r\n\r\nFor 3, I'm pretty sure this is impossible with the current library. Given that child spans are decided/filtered before the parent span we'd have to build and store all spans until the very end when we decide whether or not to report them which would get into us having to invent and maintain some tracing system outside the library. However, the alternative would be to just trace all requests with a restrictive sampler and hope we eventually capture a long one. Its a bit wasteful in that we're reporting normal/acceptable traces but given I'd expect this to be in the \"lets record traces for 30 seconds\" it's not the end of the world.\r\n\r\nI also think that the span selection/filtering for reporting isn't quite the right shape.\r\n\r\n```\r\n[tracing.view.build]\r\na_select = (#{'view.name' := Name}) when Name == \"blablabla\" -> [report]\r\ndetails = (#{parent := Parent}) when Parent == <<\"view.build\">> -> [report]\r\n```\r\n\r\nTake this example from the docs. Unless I'm mistaken in my reading, won't this end up reporting all child spans of any view build regardless of whether `Name == \"blablablah`? As each child span finishes the `details` rule would match and report, even for different values of `Name`. In Jaeger we'd end up just seeing a bunch of disconnected spans in addition to spans related the the `\"blablabla\"` view build.\r\n\r\nAlso from my reading it suggests that we'd not see child-of-child spans? I'm pretty sure `parent` isn't transitive, so if we had spans for something like `view.build` -> `doc.read` -> `fdb.get_range`, we'd never see the `fdb.get_range` spans since their parent is `doc.read`. Granted we could also add more rules to match those, but then we have to know every single span name possible.\r\n\r\nSo the two main issues are that it seems easy to trace unrelated spans while also not tracing all the spans of interest.\r\n\r\nWhen trying to trace I'd roughly expect two main options: trace the entire tree or trace nothing at all. Beyond that I could see adding extensions that could add more granularity about skipping certain spans due to performance or noise requirements but that seems awfully advanced beyond the basic use cases.\r\n\r\nThe last thing that occurs to me about the rules and filtering is that it seems a bit wasteful that we delay filtering until the end of a span. It doesn't appear that the underlying passage library has this concept, but for instance, in an HTTP response we can generally make a pretty good guess on whether we want to trace or not all the way up in `chttpd:handle_request_int/1`. It seems like having a pre-emptive trace/don't trace decision would prevent us from generating and discarding a whole bunch of spans for unrelated requests.\r\n\r\nHopefully that makes sense. And its more than possible that I've missed a subtlety in there as this is almost exclusively just from reading the code without setting up jaeger and starting to work with a real setup yet.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/548930210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/548950307","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-548950307","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":548950307,"node_id":"MDEyOklzc3VlQ29tbWVudDU0ODk1MDMwNw==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-01T21:04:15Z","updated_at":"2019-11-01T21:04:15Z","author_association":"CONTRIBUTOR","body":"Thank you for a detailed write up of the issues.\r\n\r\n> 3. Show me all HTTP requests that take longer than N seconds (that aren't changes).\r\n\r\nWe can implement it easily if we pass request duration and operation_id to `match` function of generated module.\r\n\r\n```\r\ndiff --git a/src/ctrace/src/ctrace_filter.erl b/src/ctrace/src/ctrace_filter.erl\r\nindex dc2d1854f..59a155075 100644\r\n--- a/src/ctrace/src/ctrace_filter.erl\r\n+++ b/src/ctrace/src/ctrace_filter.erl\r\n@@ -46,7 +46,12 @@ new(Id, Module) ->\r\n     ) -> ok.\r\n\r\n report(#{'__struct__' := ?MODULE, module := Module} = _State, PSpan) ->\r\n-    Tags = passage_span:get_tags(PSpan),\r\n+    Duration = passage_span:get_finish_time(PSpan) - passage_span:get_start_time(PSpan),\r\n+    Operation = passage_span:get_operation_name(PSpan),\r\n+    Tags = maps:merge(passage_span:get_tags(PSpan), #{\r\n+        duration = Duration,\r\n+        operation_id = Operation\r\n+    }),\r\n     case Module:match(Tags) of\r\n         false ->\r\n```\r\n\r\nIn this case we can write following rule:\r\n```\r\nselect = (#{operation_id := Operation, duration = Duration}) when Operation != '_changes' andalso Duration > 15000 -> [report]\r\n```\r\n\r\nHowever you are right because this would only be possible if operation names are matching the http endpoint. Which could be not the case. For example we might assign `document.read` action for `_changes` endpoint depending on how granular we want it to be. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/548950307/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549000810","html_url":"https://github.com/apache/couchdb/issues/2236#issuecomment-549000810","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2236","id":549000810,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTAwMDgxMA==","user":{"login":"pavellzubkov","id":18612709,"node_id":"MDQ6VXNlcjE4NjEyNzA5","avatar_url":"https://avatars.githubusercontent.com/u/18612709?v=4","gravatar_id":"","url":"https://api.github.com/users/pavellzubkov","html_url":"https://github.com/pavellzubkov","followers_url":"https://api.github.com/users/pavellzubkov/followers","following_url":"https://api.github.com/users/pavellzubkov/following{/other_user}","gists_url":"https://api.github.com/users/pavellzubkov/gists{/gist_id}","starred_url":"https://api.github.com/users/pavellzubkov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavellzubkov/subscriptions","organizations_url":"https://api.github.com/users/pavellzubkov/orgs","repos_url":"https://api.github.com/users/pavellzubkov/repos","events_url":"https://api.github.com/users/pavellzubkov/events{/privacy}","received_events_url":"https://api.github.com/users/pavellzubkov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-02T02:10:01Z","updated_at":"2019-11-02T02:10:01Z","author_association":"NONE","body":"Best way to make mango $or/$elemMatch/$allMatch queries fast - using views for that queries if docs count more than 50.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549000810/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549023909","html_url":"https://github.com/apache/couchdb/issues/2221#issuecomment-549023909","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2221","id":549023909,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTAyMzkwOQ==","user":{"login":"ImATechnophile","id":35361302,"node_id":"MDQ6VXNlcjM1MzYxMzAy","avatar_url":"https://avatars.githubusercontent.com/u/35361302?v=4","gravatar_id":"","url":"https://api.github.com/users/ImATechnophile","html_url":"https://github.com/ImATechnophile","followers_url":"https://api.github.com/users/ImATechnophile/followers","following_url":"https://api.github.com/users/ImATechnophile/following{/other_user}","gists_url":"https://api.github.com/users/ImATechnophile/gists{/gist_id}","starred_url":"https://api.github.com/users/ImATechnophile/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ImATechnophile/subscriptions","organizations_url":"https://api.github.com/users/ImATechnophile/orgs","repos_url":"https://api.github.com/users/ImATechnophile/repos","events_url":"https://api.github.com/users/ImATechnophile/events{/privacy}","received_events_url":"https://api.github.com/users/ImATechnophile/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-02T08:43:40Z","updated_at":"2019-11-02T08:43:40Z","author_association":"NONE","body":"This console warning is not an error or an actual problem — Chrome is just spreading the word about this new standard to increase developer adoption.\r\n\r\nThe release date for a fix is 02/04/2020 per: https://www.chromium.org/updates/same-site\r\n\r\nI solved the same problem by adding in the response header\r\n\r\nresponse.setHeader(\"Set-Cookie\", \"HttpOnly;Secure;SameSite=Strict\");\r\n\r\nSameSite prevents the browser from sending the cookie along with cross-site requests. The main goal is to mitigate the risk of cross-origin information leakage. It also provides some protection against cross-site request forgery attacks. Possible values for the flag are Lax or Strict.\r\n\r\nPlease refer to this before applying any option.\r\n\r\nHope this helps you.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549023909/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549024688","html_url":"https://github.com/apache/couchdb/issues/2236#issuecomment-549024688","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2236","id":549024688,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTAyNDY4OA==","user":{"login":"melnikaite","id":900724,"node_id":"MDQ6VXNlcjkwMDcyNA==","avatar_url":"https://avatars.githubusercontent.com/u/900724?v=4","gravatar_id":"","url":"https://api.github.com/users/melnikaite","html_url":"https://github.com/melnikaite","followers_url":"https://api.github.com/users/melnikaite/followers","following_url":"https://api.github.com/users/melnikaite/following{/other_user}","gists_url":"https://api.github.com/users/melnikaite/gists{/gist_id}","starred_url":"https://api.github.com/users/melnikaite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/melnikaite/subscriptions","organizations_url":"https://api.github.com/users/melnikaite/orgs","repos_url":"https://api.github.com/users/melnikaite/repos","events_url":"https://api.github.com/users/melnikaite/events{/privacy}","received_events_url":"https://api.github.com/users/melnikaite/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-02T08:55:50Z","updated_at":"2019-11-02T08:55:50Z","author_association":"NONE","body":"As I understand `view` is the same data but formatted a bit differently, like subquery in sql\r\n\r\n@pavellzubkov How to modify array to make `$or/$elemMatch/$allMatch/$all` fast?\r\nI tried to create 5 fields with boolean values but it didn't help.\r\n\r\nAlso it'd nice to understand why looping over all records in 30 mb database take so much time?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549024688/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549046167","html_url":"https://github.com/apache/couchdb/issues/2236#issuecomment-549046167","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2236","id":549046167,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTA0NjE2Nw==","user":{"login":"pavellzubkov","id":18612709,"node_id":"MDQ6VXNlcjE4NjEyNzA5","avatar_url":"https://avatars.githubusercontent.com/u/18612709?v=4","gravatar_id":"","url":"https://api.github.com/users/pavellzubkov","html_url":"https://github.com/pavellzubkov","followers_url":"https://api.github.com/users/pavellzubkov/followers","following_url":"https://api.github.com/users/pavellzubkov/following{/other_user}","gists_url":"https://api.github.com/users/pavellzubkov/gists{/gist_id}","starred_url":"https://api.github.com/users/pavellzubkov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavellzubkov/subscriptions","organizations_url":"https://api.github.com/users/pavellzubkov/orgs","repos_url":"https://api.github.com/users/pavellzubkov/repos","events_url":"https://api.github.com/users/pavellzubkov/events{/privacy}","received_events_url":"https://api.github.com/users/pavellzubkov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-02T13:56:55Z","updated_at":"2019-11-02T13:57:18Z","author_association":"NONE","body":"@melnikaite\r\n> Also it'd nice to understand why looping over all records in 30 mb database take so much time?\r\n\r\ni think it is just time for relax)) because couchdb - relax.\r\n\r\ni suggest use view - for example map function for array - \r\n\r\n```\r\nfunction(doc) {\r\n    if(Array.isArray(doc.values)){\r\n        doc.values.forEach(function(element) {\r\n            emit(element, 1);\r\n        });\r\n    }\r\n}\r\n```\r\n![2019-11-02_17-53-43](https://user-images.githubusercontent.com/18612709/68071980-cd6ff180-fd99-11e9-812a-5cd540368d95.png)\r\n\r\n\r\nfor example doc looks like this:\r\n\r\n```\r\n{\r\n  \"_id\": \"'AGR'_00EAerqP\",\r\n  \"_rev\": \"1-a2eebcced03635c1fcd8e3eabb43f8ff\",\r\n  \"junk\": \"00EAerqP\",\r\n  \"arr_test\": [\r\n    \"gM8jkuDP\"\r\n  ],\r\n  \"doc_type\": \"AGR\",\r\n  \"model_group\": \"MOD_GR_4\",\r\n  \"model_type\": \"MOD_T_2\",\r\n  \"model\": \"MOD_4\",\r\n  \"values\": [\r\n    \"MOD_2\",\r\n    \"MOD_3\",\r\n    \"MOD_2\",\r\n    \"MOD_4\",\r\n    \"MOD_2\",\r\n    \"MOD_2\",\r\n    \"MOD_1\"\r\n  ]\r\n}\r\n```\r\n\r\n\r\nafter build view it would be useful for queries like $or or $elemMatch run queries with params 'key' or 'keys'\r\nif you want query $allMatch you might emit full array to view index\r\n\r\nindex look like\r\n![2019-11-02_17-47-59](https://user-images.githubusercontent.com/18612709/68071906-f5ab2080-fd98-11e9-995e-d468bd3e8a87.png)\r\n\r\nyou can use reduce for example\r\n![2019-11-02_17-52-04](https://user-images.githubusercontent.com/18612709/68071963-8681fc00-fd99-11e9-90e9-42c0a5f59316.png)\r\n\r\nafter view index build it would be rebuilding incrementally or you get some time for relax again)) \r\n \r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549046167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549313655","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549313655","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549313655,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTMxMzY1NQ==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T11:28:02Z","updated_at":"2019-11-04T11:28:02Z","author_association":"CONTRIBUTOR","body":"> Also from my reading it suggests that we'd not see child-of-child spans? I'm pretty sure parent isn't transitive, so if we had spans for something like view.build -> doc.read -> fdb.get_range, we'd never see the fdb.get_range spans since their parent is doc.read. Granted we could also add more rules to match those, but then we have to know every single span name possible.\r\n\r\nParent is probably not the right name here. I couldn't come up with better name though. It is an operation_name of a root span. I've considered:\r\n- ancestor\r\n- parent\r\n\r\nMaybe I should name it `origin`. \r\n\r\nCurrently we propagate `parent` to all descendants. We [take the current #span{} record]( https://github.com/apache/couchdb/pull/2286/files#diff-89ac3e12a9462a9e6c44129ae34d3a0eR135). We only replace a passage span object.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549313655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549316184","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549316184","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549316184,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTMxNjE4NA==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T11:36:04Z","updated_at":"2019-11-04T11:36:04Z","author_association":"CONTRIBUTOR","body":"> I also think that the span selection/filtering for reporting isn't quite the right shape.\r\n> ```\r\n> [tracing.view.build]\r\n> a_select = (#{'view.name' := Name}) when Name == \"blablabla\" -> [report]\r\n> details = (#{parent := Parent}) when Parent == <<\"view.build\">> -> [report]\r\n> ```\r\n> Take this example from the docs. Unless I'm mistaken in my reading, won't this end up reporting all child spans of any view build regardless of whether Name == \"blablablah? As each child span finishes the details rule would match and report, even for different values of Name. In Jaeger we'd end up just seeing a bunch of disconnected spans in addition to spans related the the \"blablabla\" view build.\r\n\r\nTrue. I think we can fix it by adding `rule` tag. In this case we would write the following rules:\r\n```\r\n[tracing.view.build]\r\na_select = (#{'view.name' := Name}) when Name == \"blablabla\" -> [report]\r\ndetails = (#{rule := Rule}) when Rule == <<\"a_select\">> -> [report]\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549316184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549320177","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549320177","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549320177,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTMyMDE3Nw==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T11:49:11Z","updated_at":"2019-11-04T11:49:11Z","author_association":"CONTRIBUTOR","body":"> The last thing that occurs to me about the rules and filtering is that it seems a bit wasteful that we delay filtering until the end of a span. It doesn't appear that the underlying passage library has this concept, but for instance, in an HTTP response we can generally make a pretty good guess on whether we want to trace or not all the way up in chttpd:handle_request_int/1. It seems like having a pre-emptive trace/don't trace decision would prevent us from generating and discarding a whole bunch of spans for unrelated requests.\r\n\r\nThere is a basic support for samplers. However we only can use:\r\n- all\r\n- probalistic(Rate :: float())\r\n- null\r\n\r\nI thought about adding one more `by_operation(operation)`. However there is a problem. We don't know operation name when we start span. We start span in the beginning of `handle_request_int` and set operation name in `before_request` (when we have `#httpd{}` record). The sampler logic is called on start_span.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549320177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549320896","html_url":"https://github.com/apache/couchdb/issues/2236#issuecomment-549320896","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2236","id":549320896,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTMyMDg5Ng==","user":{"login":"melnikaite","id":900724,"node_id":"MDQ6VXNlcjkwMDcyNA==","avatar_url":"https://avatars.githubusercontent.com/u/900724?v=4","gravatar_id":"","url":"https://api.github.com/users/melnikaite","html_url":"https://github.com/melnikaite","followers_url":"https://api.github.com/users/melnikaite/followers","following_url":"https://api.github.com/users/melnikaite/following{/other_user}","gists_url":"https://api.github.com/users/melnikaite/gists{/gist_id}","starred_url":"https://api.github.com/users/melnikaite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/melnikaite/subscriptions","organizations_url":"https://api.github.com/users/melnikaite/orgs","repos_url":"https://api.github.com/users/melnikaite/repos","events_url":"https://api.github.com/users/melnikaite/events{/privacy}","received_events_url":"https://api.github.com/users/melnikaite/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T11:51:32Z","updated_at":"2019-11-04T11:51:32Z","author_association":"NONE","body":"@pavellzubkov thanks for explanations\r\nI added view like you described, but I didn't get how to run queries with $or using view\r\nI tried to specify keys in options dropdown, but it returns empty array","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549320896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549324633","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549324633","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549324633,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTMyNDYzMw==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T12:04:06Z","updated_at":"2019-11-04T12:05:12Z","author_association":"CONTRIBUTOR","body":"> I thought about adding one more by_operation(operation).\r\n\r\nAnother idea I had is to use generated matching module instead of  `chttpd_handlers:handler_info(Req)`. This would allow as to have action names configurable. It might look as follows:\r\n```\r\n[httpd.actions]\r\n\r\nall_dbs_read = (#{path_parts := [<<\"_all_dbs\">>], method := 'GET'}) -> {'all-dbs.read', [tag1, tag2]}\r\nbulk = (#{path_parts := [<<\"_bulk\">>], method := 'GET'}) -> {chttpd_operations, operation, [extra_args]}\r\n```\r\n\r\n\r\nHowever it makes things more complex and doesn't solve our problem of knowing operation id when we call start_span. Also we would have to make DSL parser less restrictive to allow direct matching of values in the parameters (since we need to support complex types (in this case list of binaries)).\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549324633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549327210","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549327210","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549327210,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTMyNzIxMA==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T12:12:44Z","updated_at":"2019-11-04T12:12:44Z","author_association":"CONTRIBUTOR","body":"I wish passage library had a `passage:set_start_time` function. This would allow us to postpone starting span till we have `#httpd{}` record.\r\n\r\nShould we fork it? We also could break an abstraction and manipulate the passage_span record. However in this case we might have problems if passage would change internal representation. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549327210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549329496","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549329496","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549329496,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTMyOTQ5Ng==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T12:20:30Z","updated_at":"2019-11-04T12:20:30Z","author_association":"CONTRIBUTOR","body":"Actually I found that there is support to pass start_time into start_span function [here](https://github.com/sile/passage/blob/master/src/passage.erl#L127)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549329496/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549386376","html_url":"https://github.com/apache/couchdb/issues/2236#issuecomment-549386376","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2236","id":549386376,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTM4NjM3Ng==","user":{"login":"pavellzubkov","id":18612709,"node_id":"MDQ6VXNlcjE4NjEyNzA5","avatar_url":"https://avatars.githubusercontent.com/u/18612709?v=4","gravatar_id":"","url":"https://api.github.com/users/pavellzubkov","html_url":"https://github.com/pavellzubkov","followers_url":"https://api.github.com/users/pavellzubkov/followers","following_url":"https://api.github.com/users/pavellzubkov/following{/other_user}","gists_url":"https://api.github.com/users/pavellzubkov/gists{/gist_id}","starred_url":"https://api.github.com/users/pavellzubkov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavellzubkov/subscriptions","organizations_url":"https://api.github.com/users/pavellzubkov/orgs","repos_url":"https://api.github.com/users/pavellzubkov/repos","events_url":"https://api.github.com/users/pavellzubkov/events{/privacy}","received_events_url":"https://api.github.com/users/pavellzubkov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T14:45:43Z","updated_at":"2019-11-04T14:45:43Z","author_association":"NONE","body":"@melnikaite  i create view index on test db with map function i write above. Then i make query for get all docs id witch value field contain key \"MOD_1\" or 'MOD_2\".  it would be better to explain with screenshots from Insomnia REST tool:\r\n![2019-11-04_18-25-28](https://user-images.githubusercontent.com/18612709/68128591-6b49f480-ff31-11e9-89f4-80d1363524c7.png)\r\nhow you can see - view index contain 392350 rows. (database contains 56056 docs with \"value\" field contain array with 7 values [\"MOD_1\",\"MOD_2\"....] . some docs contain array with only \"MOD_1\" or \"MOD_2\" values. Doc example above)\r\nthen if turn on group and reduce params we can get docs count contains specified keys:\r\n![2019-11-04_18-26-42](https://user-images.githubusercontent.com/18612709/68129526-2757ef00-ff33-11e9-9bdf-afdf9e9222b1.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549386376/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549404922","html_url":"https://github.com/apache/couchdb/issues/2236#issuecomment-549404922","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2236","id":549404922,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTQwNDkyMg==","user":{"login":"melnikaite","id":900724,"node_id":"MDQ6VXNlcjkwMDcyNA==","avatar_url":"https://avatars.githubusercontent.com/u/900724?v=4","gravatar_id":"","url":"https://api.github.com/users/melnikaite","html_url":"https://github.com/melnikaite","followers_url":"https://api.github.com/users/melnikaite/followers","following_url":"https://api.github.com/users/melnikaite/following{/other_user}","gists_url":"https://api.github.com/users/melnikaite/gists{/gist_id}","starred_url":"https://api.github.com/users/melnikaite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/melnikaite/subscriptions","organizations_url":"https://api.github.com/users/melnikaite/orgs","repos_url":"https://api.github.com/users/melnikaite/repos","events_url":"https://api.github.com/users/melnikaite/events{/privacy}","received_events_url":"https://api.github.com/users/melnikaite/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T15:25:08Z","updated_at":"2019-11-04T15:25:08Z","author_association":"NONE","body":"I'm using embedded to `2.3.1` utils ui with a bit different names\r\nBut anyways get request from your first screenshot `http://localhost:5984/test/_design/newDesignDoc/_view/new-view?limit=5&reduce=false&keys=%5B%221%22%2C%20%222%22%5D` results to 0 rows\r\n```\r\n{\"total_rows\":10593800,\"offset\":10593800,\"rows\":[\r\n\r\n]}\r\n```\r\n<img width=\"818\" alt=\"map\" src=\"https://user-images.githubusercontent.com/900724/68132789-56b92c80-ff30-11e9-9686-d17c0dcf2b31.png\">\r\n<img width=\"1602\" alt=\"reduce\" src=\"https://user-images.githubusercontent.com/900724/68132801-5c167700-ff30-11e9-9b98-b22baf4fcf84.png\">\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549404922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549415535","html_url":"https://github.com/apache/couchdb/issues/2236#issuecomment-549415535","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2236","id":549415535,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTQxNTUzNQ==","user":{"login":"pavellzubkov","id":18612709,"node_id":"MDQ6VXNlcjE4NjEyNzA5","avatar_url":"https://avatars.githubusercontent.com/u/18612709?v=4","gravatar_id":"","url":"https://api.github.com/users/pavellzubkov","html_url":"https://github.com/pavellzubkov","followers_url":"https://api.github.com/users/pavellzubkov/followers","following_url":"https://api.github.com/users/pavellzubkov/following{/other_user}","gists_url":"https://api.github.com/users/pavellzubkov/gists{/gist_id}","starred_url":"https://api.github.com/users/pavellzubkov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavellzubkov/subscriptions","organizations_url":"https://api.github.com/users/pavellzubkov/orgs","repos_url":"https://api.github.com/users/pavellzubkov/repos","events_url":"https://api.github.com/users/pavellzubkov/events{/privacy}","received_events_url":"https://api.github.com/users/pavellzubkov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T15:48:39Z","updated_at":"2019-11-04T15:48:39Z","author_association":"NONE","body":"your (element) string or number? try req \r\n`http://localhost:5984/test/_design/newDesignDoc/_view/new-view?limit=5&reduce=false&keys=[2,3,8]`\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549415535/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549431833","html_url":"https://github.com/apache/couchdb/issues/2223#issuecomment-549431833","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2223","id":549431833,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTQzMTgzMw==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T16:23:19Z","updated_at":"2019-11-04T16:23:19Z","author_association":"CONTRIBUTOR","body":"Finished.\r\n\r\nMost of the work had to be done to switch the cache validation behavior: https://github.com/apache/couchdb/commit/f3d572caf112598d12d705f98dffb8cdbb2bec97\r\n\r\nThen the switch itself was in: https://github.com/apache/couchdb/commit/8d5c10717479a4aaa434f2d5bdb3899e6c07e122\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549431833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549449605","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549449605","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549449605,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTQ0OTYwNQ==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T17:01:18Z","updated_at":"2019-11-04T17:01:18Z","author_association":"MEMBER","body":"> > Also from my reading it suggests that we'd not see child-of-child spans? I'm pretty sure parent isn't transitive, so if we had spans for something like view.build -> doc.read -> fdb.get_range, we'd never see the fdb.get_range spans since their parent is doc.read. Granted we could also add more rules to match those, but then we have to know every single span name possible.\r\n> \r\n> Parent is probably not the right name here. I couldn't come up with better name though. It is an operation_name of a root span. I've considered:\r\n> \r\n> * ancestor\r\n> * parent\r\n> \r\n> Maybe I should name it `origin`.\r\n> \r\n> Currently we propagate `parent` to all descendants. We [take the current #span{} record](https://github.com/apache/couchdb/pull/2286/files#diff-89ac3e12a9462a9e6c44129ae34d3a0eR135). We only replace a passage span object.\r\n\r\nUnless I'm reading this wrong, the `parent` tag isn't transitive:\r\n\r\nhttps://github.com/cloudant/couchdb/blob/0b41779f029e474d344b9e0444048fa464dac7f0/src/ctrace/src/ctrace.erl#L131\r\n\r\nIn the `view.build` -> `doc.read` -> `fdb.get_range` example, the `fdb.get_range` would have a parent of `doc.read` which would then not be reported.\r\n\r\nWe could obviously make that transitive though I'd agree that it'd probably need a new name such as `origin` or `root`. Though I'm still thinking that's a bit more complex than if we had a \"log all spans\" default (once we decided to log a request/view build what have you).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549449605/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549452164","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549452164","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549452164,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTQ1MjE2NA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T17:07:08Z","updated_at":"2019-11-04T17:07:08Z","author_association":"MEMBER","body":"> > I thought about adding one more by_operation(operation).\r\n> \r\n> Another idea I had is to use generated matching module instead of `chttpd_handlers:handler_info(Req)`. This would allow as to have action names configurable. It might look as follows:\r\n> \r\n> ```\r\n> [httpd.actions]\r\n> \r\n> all_dbs_read = (#{path_parts := [<<\"_all_dbs\">>], method := 'GET'}) -> {'all-dbs.read', [tag1, tag2]}\r\n> bulk = (#{path_parts := [<<\"_bulk\">>], method := 'GET'}) -> {chttpd_operations, operation, [extra_args]}\r\n> ```\r\n> \r\n> However it makes things more complex and doesn't solve our problem of knowing operation id when we call start_span. Also we would have to make DSL parser less restrictive to allow direct matching of values in the parameters (since we need to support complex types (in this case list of binaries)).\r\n\r\nI'd contemplated firing the matching rules when we set tags but I was worried that it'd get super confusing if we ended up with spans where we set tags multiple times.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549452164/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549581044","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549581044","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549581044,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTU4MTA0NA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-04T22:42:11Z","updated_at":"2019-11-04T22:42:56Z","author_association":"MEMBER","body":"I played around with this a bit on Friday and today to try and get a better feel for how this would work in practice. A couple of take aways so far:\r\n\r\n1. Switching to the `passage_pd` (i.e., process dict) model cleans up the PR significantly.\r\n2. Using this as an investigation tool is super duper awesome.\r\n3. With the passage_pd approach I can drop in spans anywhere in the request process without having to worry about the extra plumbing making sure I carry the passage span around which (while I haven't tried directly) makes me think it'd be not so awesome as a debug tool.\r\n4. Locally being able to add spans is a massive boon. If we were doing any of this dynamically in production we'll want tooling that will allow us to insert spans around various bits of code. I'm going to try and see if there's a way to do that by (ab)using Erlang's native tracing perhaps.\r\n5. On macOS, Docker isn't always the easiest. However, there's a binary package that has a `jaeger-all-in-one` binary that can be run locally trivially. That might make startup for others a bit easier in the instructions.\r\n6. The filtering/selection/whatever is definitely not quite right. I ended up basically disabling it and just logging everything to be able to finally see some usable data. This obviously won't work in a production setting. It certainly feels like having a binary toggle at the start of an HTTP request for \"yes, trace this entire request\" would be the logical first step. And beyond that, just a \"trace all the things!\" setting because looking at all of the requests and then filtering for long requests in the jaeger UI was super duper useful for me. Also after using it for a bit I'm having a hard time where filtering individual spans would be useful. If anything I was basically spending most of my time adding a whole bunch of spans when investigating long requests. But in a local dev sort of way and not something I'd expect merged to master.\r\n\r\nAll in all, I got a bit carried away looking at some of the long requests during a run of `make elixir`. Here's a fun one I ended up with after investigating why the update docs transaction was taking so long. Patching erlfdb to show the commit time was super neat.\r\n\r\n<img width=\"1440\" alt=\"Screen Shot 2019-11-04 at 4 16 38 PM\" src=\"https://user-images.githubusercontent.com/19929/68163683-b3145000-ff20-11e9-894e-261c20054aa3.png\">\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549581044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549728624","html_url":"https://github.com/apache/couchdb/issues/2236#issuecomment-549728624","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2236","id":549728624,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTcyODYyNA==","user":{"login":"melnikaite","id":900724,"node_id":"MDQ6VXNlcjkwMDcyNA==","avatar_url":"https://avatars.githubusercontent.com/u/900724?v=4","gravatar_id":"","url":"https://api.github.com/users/melnikaite","html_url":"https://github.com/melnikaite","followers_url":"https://api.github.com/users/melnikaite/followers","following_url":"https://api.github.com/users/melnikaite/following{/other_user}","gists_url":"https://api.github.com/users/melnikaite/gists{/gist_id}","starred_url":"https://api.github.com/users/melnikaite/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/melnikaite/subscriptions","organizations_url":"https://api.github.com/users/melnikaite/orgs","repos_url":"https://api.github.com/users/melnikaite/repos","events_url":"https://api.github.com/users/melnikaite/events{/privacy}","received_events_url":"https://api.github.com/users/melnikaite/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-05T09:02:42Z","updated_at":"2019-11-05T09:02:42Z","author_association":"NONE","body":"Ah, you are right, it's numbers\r\nShame on me)\r\n\r\nSo now it's clear how to use `keys` in views\r\nWhen  I specify array of keys they are considered as OR\r\nHowever I want to reduce number of returned values, the only way I see is setting as a key array of values and in request list all possible values\r\nBut it will extremely big request\r\n\r\nI found that List, Update and Filter functions accept Request object  https://docs.couchdb.org/en/2.2.0/ddocs/ddocs.html but unfortunately Reduce function doesn't acccept ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549728624/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549789414","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549789414","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549789414,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTc4OTQxNA==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-05T11:46:31Z","updated_at":"2019-11-05T11:46:31Z","author_association":"CONTRIBUTOR","body":"The reason why passage_pd was not used is to be able to pass root span information and operation_name across process boundaries and potentially across nodes if we decide to port this PR into master. \r\n\r\nAlso being able to tell which URL was used for given function call in lover layers of the stack is extremely valuable. Having request context would allow us to extend our logging statements to add additional information about the initial request. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549789414/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549793916","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549793916","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549793916,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTc5MzkxNg==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-05T12:00:50Z","updated_at":"2019-11-05T12:00:50Z","author_association":"CONTRIBUTOR","body":"> With the passage_pd approach I can drop in spans anywhere in the request process without having to worry about the extra plumbing making sure I carry the passage span around which (while I haven't tried directly) makes me think it'd be not so awesome as a debug tool.\r\n\r\nThere is a wrapper interface for `passage_pd` backend. \r\n```\r\nctrace:start_span(OperationName),\r\nctrace:trace(fun(S) -> \r\n    ctrace:tag(S, #{\r\n        tag1: value1\r\n    })\r\nend),\r\nctrace:finish_span(),\r\n```\r\nThere is one inconvenience, though the root span is started using `passage` backend. \r\nWe need to find a way to pass `child_of` option to `ctrace:start_span/1`.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549793916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549798108","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549798108","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549798108,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTc5ODEwOA==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-05T12:14:21Z","updated_at":"2019-11-05T12:14:21Z","author_association":"CONTRIBUTOR","body":"> The reason why passage_pd was not used is to be able to pass root span information and operation_name across process boundaries and potentially across nodes if we decide to port this PR into master.\r\n\r\nAnother words I wanted to introduce request_ctx for a long time regardless of tracing. It was a showstopper in my earlier work on distributed tracing tool for Cloudant (which was never released).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549798108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549888634","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549888634","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549888634,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTg4ODYzNA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-05T16:04:44Z","updated_at":"2019-11-05T16:04:44Z","author_association":"MEMBER","body":"Yeah, I got confused on how the backend stuff was supposed to work so I just cut out the variability and did only the passage_pd approach.\r\n\r\nAs to connecting spans across process and node boundaries I'm pretty sure that should be trivial? It should just be a matter of grabbing the trace_id and setting that when we start spans. Grabbing enough context to do child_of or follows_from seems doable. Though looking through passage_pd we might need to add an API since `current_span` appears to drop what gets set in start_span.\r\n\r\nAs to the request_ctx for tracking the request URL we can always introspect the trace state and/or just rely on open tracing to do its thing, no? If we're connecting everything through the trace_id I don't see a compelling reason to have to do all of that plumbing. Especially if that plumbing cripples our ability to dynamically add spans for debugging.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549888634/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549905638","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-549905638","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":549905638,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTkwNTYzOA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-05T16:43:23Z","updated_at":"2019-11-05T16:43:23Z","author_association":"MEMBER","body":"Also another note on something I tried that failed. I tried to be clever and use `erlang:fun_info/2` to set the operation_name for HTTP requests like you had done for fabric2_fdb transactions. It turns out that the top level handlers are sufficiently opaque that you end up with a bunch of `chttpd_db:handle_request/N` operations which isn't super useful. So we'll definitely want to go through and fill out the `chttpd_handlers:handler_info/1` approach like you have.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549905638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549927368","html_url":"https://github.com/apache/couchdb/pull/2299#issuecomment-549927368","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2299","id":549927368,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTkyNzM2OA==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-05T17:30:36Z","updated_at":"2019-11-05T17:30:54Z","author_association":"CONTRIBUTOR","body":"Nice job. Test passes too. But see comment on serializing the error above\r\n\r\n+1\r\n\r\nAs an aside, I was surprised that\r\n\r\n```\r\n                function (doc) {\r\n                  for (var i=0; i<1000; i++) {\r\n                  emit({doc: doc._id + 1}, doc._id);\r\n                }\r\n```\r\n\r\nWas enough to trigger transaction too large error.  That's not 10Mb, does it store those as one value?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549927368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549946529","html_url":"https://github.com/apache/couchdb/pull/2299#issuecomment-549946529","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2299","id":549946529,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTk0NjUyOQ==","user":{"login":"garrensmith","id":179458,"node_id":"MDQ6VXNlcjE3OTQ1OA==","avatar_url":"https://avatars.githubusercontent.com/u/179458?v=4","gravatar_id":"","url":"https://api.github.com/users/garrensmith","html_url":"https://github.com/garrensmith","followers_url":"https://api.github.com/users/garrensmith/followers","following_url":"https://api.github.com/users/garrensmith/following{/other_user}","gists_url":"https://api.github.com/users/garrensmith/gists{/gist_id}","starred_url":"https://api.github.com/users/garrensmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/garrensmith/subscriptions","organizations_url":"https://api.github.com/users/garrensmith/orgs","repos_url":"https://api.github.com/users/garrensmith/repos","events_url":"https://api.github.com/users/garrensmith/events{/privacy}","received_events_url":"https://api.github.com/users/garrensmith/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-05T18:08:01Z","updated_at":"2019-11-05T18:08:01Z","author_association":"MEMBER","body":"@nickva yes it triggered that error everytime. I think we also fetch the changes feed and the doc in the same transaction so I guess it all adds up","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549946529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549964169","html_url":"https://github.com/apache/couchdb/pull/2299#issuecomment-549964169","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2299","id":549964169,"node_id":"MDEyOklzc3VlQ29tbWVudDU0OTk2NDE2OQ==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-05T18:47:59Z","updated_at":"2019-11-05T18:47:59Z","author_association":"CONTRIBUTOR","body":"Thinking about this more,  a behavior change is that we'll stop building on all errors by default while before we retried by default.\r\n\r\nWhat we might want to worry about is errors for which we don't want to finish building the job. But let it fail and retry again later. Thinking about cases like failed connection to the cluster that then gets fixed. \r\n\r\nWonder if we should keep the default behavior and not run the finish call for generic/default errors.\r\n\r\n(cc-ing @davisp)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/549964169/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/550346659","html_url":"https://github.com/apache/couchdb/pull/2292#issuecomment-550346659","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2292","id":550346659,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MDM0NjY1OQ==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-06T14:56:32Z","updated_at":"2019-11-06T14:56:32Z","author_association":"CONTRIBUTOR","body":"Vote passed on the mailing list: https://lists.apache.org/thread.html/799772bc092c473f06c16c97330ce8abe6912d5afd9ac431ef34e666@%3Cdev.couchdb.apache.org%3E\r\n\r\nOpening PR","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/550346659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/550356624","html_url":"https://github.com/apache/couchdb/pull/2299#issuecomment-550356624","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2299","id":550356624,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MDM1NjYyNA==","user":{"login":"garrensmith","id":179458,"node_id":"MDQ6VXNlcjE3OTQ1OA==","avatar_url":"https://avatars.githubusercontent.com/u/179458?v=4","gravatar_id":"","url":"https://api.github.com/users/garrensmith","html_url":"https://github.com/garrensmith","followers_url":"https://api.github.com/users/garrensmith/followers","following_url":"https://api.github.com/users/garrensmith/following{/other_user}","gists_url":"https://api.github.com/users/garrensmith/gists{/gist_id}","starred_url":"https://api.github.com/users/garrensmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/garrensmith/subscriptions","organizations_url":"https://api.github.com/users/garrensmith/orgs","repos_url":"https://api.github.com/users/garrensmith/repos","events_url":"https://api.github.com/users/garrensmith/events{/privacy}","received_events_url":"https://api.github.com/users/garrensmith/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-06T15:18:07Z","updated_at":"2019-11-06T15:18:07Z","author_association":"MEMBER","body":"I was chatting to @nickva about this and we think a solution is something like this:\r\n\r\n* Each index keeps a retry count in the job data\r\n* For javascript timeouts and certain FDB errors the indexer should exit and increment the retry\r\n* If the index fails a certain number of times in a row the index should finish and return an error to all listeners\r\n* If it fails a few times, but under the set limit, and then is able to start indexing again, the retries should be set back to 0.\r\n\r\nThis should allow us to detect errors that happen every time and avoid a situation where errors are more sporadic and could be caused by network issues etc.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/550356624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/550386114","html_url":"https://github.com/apache/couchdb/pull/2292#issuecomment-550386114","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2292","id":550386114,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MDM4NjExNA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-06T16:21:58Z","updated_at":"2019-11-06T16:21:58Z","author_association":"MEMBER","body":"Should we add your pending test you described as an actual test?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/550386114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/550441294","html_url":"https://github.com/apache/couchdb/pull/2292#issuecomment-550441294","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2292","id":550441294,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MDQ0MTI5NA==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-06T18:31:03Z","updated_at":"2019-11-06T18:31:03Z","author_association":"CONTRIBUTOR","body":"@davisp Good idea. Added the test.\r\n\r\nThere was a test that already check active_tasks details were retained so modified to check that scheduler also has required fields both when it is running and pending.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/550441294/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/551113208","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-551113208","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":551113208,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MTExMzIwOA==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-07T14:53:56Z","updated_at":"2019-11-07T14:53:56Z","author_association":"CONTRIBUTOR","body":"The latest series of commits introduces following changes in the logic:\r\n- `parent` is renamed into `origin` and made transitive\r\n- the span is checked against matching rules on span_start\r\n- the chained reporters are eliminated (we used to have report -> reporter:operation_id -> reporter:main)\r\n\r\nThe duration tag idea was replaced with `report_longer_than` action (It needs more work).\r\nI decided against using passage_pd in chttpd (for now). Since it would make impossible to start multiple spans in a single process.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/551113208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/551164613","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-551164613","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":551164613,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MTE2NDYxMw==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-07T16:47:46Z","updated_at":"2019-11-07T16:47:46Z","author_association":"MEMBER","body":"Oooh! Good call on reusing begin_ts to delay that span start. That's a lot cleaner than anything i had contemplated doing so that we can have all of the tags and operation name ready to go when we initialize that first span.\r\n\r\nI don't think that report_longer_than action is going to be much use. Say we want to report all spans over 5s. But all child spans take less than 5s. When we report that long span all of the child spans that collectively added up to more than 5s will have already been discarded as not meeting the threshold. So we're basically getting a splunk query for HTTP requests that exceeded a threshold. Which seems not useful for investigating *why* the request took more than 5s. Unfortunately given that spans are reported on individually makes me think that there's not a good approach here other than getting our sampling and limiting down so we can record a trace without flooding a loaded production system.\r\n\r\nI like the change to matching on span start as that will clean up a lot of the logic for how those rules affect trace collection. However, I think that means the sampler configurations are no longer being used. That should be trivial to extend in the match function though. And one thing to double check on that `function_exported` call in match is whether that triggers a file system scan. Years ago we had a similar check and it crippled nodes on startup because until the module was dynamically compiled Erlang would scoure all of its code paths looking for it.\r\n\r\nI don't agree that passage_pd makes anything impossible. Its a helper for the \"main\" set of related spans in a given process. If there did happen to be a case where you needed to track an unrelated set of spans or some sort of non-nested tree of related spans you can always use the regular passage functions. But not being able to slap in a `ctrace:with_span(foo, fun() -> ... end)` would severely hamper the utility of tracing. I've already managed to find a number of places to optimize fdb transactions by wrapping a few lines here and there with `ctrace:with_span/2`.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/551164613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552168706","html_url":"https://github.com/apache/couchdb/pull/2296#issuecomment-552168706","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2296","id":552168706,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MjE2ODcwNg==","user":{"login":"AGrzes","id":1086454,"node_id":"MDQ6VXNlcjEwODY0NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/1086454?v=4","gravatar_id":"","url":"https://api.github.com/users/AGrzes","html_url":"https://github.com/AGrzes","followers_url":"https://api.github.com/users/AGrzes/followers","following_url":"https://api.github.com/users/AGrzes/following{/other_user}","gists_url":"https://api.github.com/users/AGrzes/gists{/gist_id}","starred_url":"https://api.github.com/users/AGrzes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AGrzes/subscriptions","organizations_url":"https://api.github.com/users/AGrzes/orgs","repos_url":"https://api.github.com/users/AGrzes/repos","events_url":"https://api.github.com/users/AGrzes/events{/privacy}","received_events_url":"https://api.github.com/users/AGrzes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-10T06:55:22Z","updated_at":"2019-11-10T06:55:22Z","author_association":"CONTRIBUTOR","body":"It looks like the automated tests are failing at random in areas untouched by this change.\r\nI observer that with subsequent builds failures occurs in different places and sometimes does not occur at all.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552168706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552168849","html_url":"https://github.com/apache/couchdb/issues/1977#issuecomment-552168849","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1977","id":552168849,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MjE2ODg0OQ==","user":{"login":"AGrzes","id":1086454,"node_id":"MDQ6VXNlcjEwODY0NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/1086454?v=4","gravatar_id":"","url":"https://api.github.com/users/AGrzes","html_url":"https://github.com/AGrzes","followers_url":"https://api.github.com/users/AGrzes/followers","following_url":"https://api.github.com/users/AGrzes/following{/other_user}","gists_url":"https://api.github.com/users/AGrzes/gists{/gist_id}","starred_url":"https://api.github.com/users/AGrzes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AGrzes/subscriptions","organizations_url":"https://api.github.com/users/AGrzes/orgs","repos_url":"https://api.github.com/users/AGrzes/repos","events_url":"https://api.github.com/users/AGrzes/events{/privacy}","received_events_url":"https://api.github.com/users/AGrzes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-10T06:58:36Z","updated_at":"2019-11-10T06:58:36Z","author_association":"CONTRIBUTOR","body":"Hello - I have submitted [PR](https://github.com/apache/couchdb/pull/2296) that (I hope) address the issue. It is my first contribution to CouchDB so it may be entirely wrong direction of change. Could anybody take look at the proposed change and tell me if it need anything more - or it is a miss altogether?\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552168849/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552251804","html_url":"https://github.com/apache/couchdb/pull/2305#issuecomment-552251804","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2305","id":552251804,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MjI1MTgwNA==","user":{"login":"dch","id":284368,"node_id":"MDQ6VXNlcjI4NDM2OA==","avatar_url":"https://avatars.githubusercontent.com/u/284368?v=4","gravatar_id":"","url":"https://api.github.com/users/dch","html_url":"https://github.com/dch","followers_url":"https://api.github.com/users/dch/followers","following_url":"https://api.github.com/users/dch/following{/other_user}","gists_url":"https://api.github.com/users/dch/gists{/gist_id}","starred_url":"https://api.github.com/users/dch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dch/subscriptions","organizations_url":"https://api.github.com/users/dch/orgs","repos_url":"https://api.github.com/users/dch/repos","events_url":"https://api.github.com/users/dch/events{/privacy}","received_events_url":"https://api.github.com/users/dch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-11T00:25:41Z","updated_at":"2019-11-11T10:40:10Z","author_association":"CONTRIBUTOR","body":"In https://github.com/curl/curl, we see this option only exists in `curl > 7.64.0` \r\nfrom roughly a year ago, so I added a conditional.\r\n\r\nMy understanding is that this 0.9 downgrade warning issue occurs when\r\nthere are *no* HTTP headers sent at all -- perhaps we could more easily\r\nset a header during tests, so there's no protocol downgrade in libcurl.\r\n\r\n```\r\ncommit 006ff62d8c51f664c167c6337f009f9f65dd8ea7\r\nAuthor: Daniel Stenberg <daniel@haxx.se>\r\nDate:   Mon Dec 17 15:46:56 2018 +0100\r\n\r\n    http: added options for allowing HTTP/0.9 responses\r\n    \r\n    Added CURLOPT_HTTP09_ALLOWED and --http0.9 for this purpose.\r\n    \r\n    For now, both the tool and library allow HTTP/0.9 by default.\r\n    docs/DEPRECATE.md lays out the plan for when to reverse that default: 6\r\n    months after the 7.64.0 release. The options are added already now so\r\n    that applications/scripts can start using them already now.\r\n    \r\n    Fixes #2873\r\n    Closes #3383\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552251804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552479184","html_url":"https://github.com/apache/couchdb/issues/2298#issuecomment-552479184","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2298","id":552479184,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MjQ3OTE4NA==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-11T14:59:56Z","updated_at":"2019-11-11T14:59:56Z","author_association":"CONTRIBUTOR","body":"Hi @zdravko123,\r\n\r\nThank you for your report. \r\n\r\nIt might help to adjust your replication settings. \r\n\r\n`max_jobs` at 10000 seems a bit high, I would lower that, so to say 4000.  And if you have so many replications and you intend for them to all be running, perhaps reduce the `workers_processes` a bit, maybe from 8 to 4 or 2.\r\n\r\n`connection_timeout = 1000000` seems high as well. A value closer to the default (30000) or 2-3x (60000-90000) times usually works best there.  If jobs checkpoint regularly you'd probably want the job to fail and wait until the network stabilizes or endpoints look better than having it stick around waiting on a single request. The reason is that replication jobs already have a scheduler which is designed to deal with jobs retrying periodically. \r\n\r\nSame thing with `retries_per_request` the default is 5. You could increase it to 6 or 7,  but every increase is a doubling. You'd be better off letting the job fail and let other, healthy jobs, consume resources instead.\r\n\r\nAnd most of all, since you have so many jobs per node, the setting that might help you the most could be\r\n\r\n`[replicator] startup_jitter = 5000`\r\n\r\nThat setting takes effect when starting a replication job and make it sleep for a random amount of time between 0 and that many milliseconds (so the default is 5 sec). When a replication job starts, it has a spike of activity, it checks source, target, compares replication logs, etc, so having 5000 of those happing at the same time can bring the cluster down.\r\n\r\nAlso, when a node is disconnected from the cluster, which could have happened in your case, the replicator will rescan all jobs and possibly start a whole new set of jobs in case it can't \"talk\" to the other nodes. During that time, there will be a surge of activity due to say 5000 new jobs all starting at the same time. So making `start_jitter = 30000` you'd randomize that startup a bit and hopefully smooth over the initial activity spike.\r\n\r\n(When a replication job starts, it has a spike of activity, it checks source, target, compares replication logs, etc, so having 5000 of those happing at the same time can bring the cluster down).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552479184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552501647","html_url":"https://github.com/apache/couchdb/issues/2225#issuecomment-552501647","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2225","id":552501647,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MjUwMTY0Nw==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-11T15:56:10Z","updated_at":"2019-11-11T15:56:10Z","author_association":"CONTRIBUTOR","body":"A simple thing to try would be to wrap the whole db request function in a transaction:\r\n\r\nhttps://github.com/apache/couchdb/blob/ff2cdb84f639ea26ac7b1ad85abb0a49c5141c74/src/chttpd/src/chttpd_db.erl#L385-L386\r\n\r\nSo it would look something like:\r\n\r\n```\r\n   fabric2_fdb:transactional(Db, fun(TxDb) -> Fun(Req, TxDb) end)\r\n```\r\n\r\nWe might hit issues with transaction size limits or timeouts sooner.  For reads, values are not included in the size limit, but keys and conflicts ranges are. Perhaps we could track transaction size estimates and/or age and do something clever like start a new transaction if we reach the limits. Perhaps snapshot reads might also be useful here, as the long transaction could now easier conflict with other updates and retry too often.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552501647/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552522743","html_url":"https://github.com/apache/couchdb/issues/2306#issuecomment-552522743","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2306","id":552522743,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MjUyMjc0Mw==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-11T16:49:34Z","updated_at":"2019-11-11T16:49:34Z","author_association":"CONTRIBUTOR","body":"Hi @crissty,\r\n\r\nWhat you're seeing is probably the Erlang VM's distribution port open. That's the connection for other CouchDB (also Erlang VM) nodes to connect together so they can form a cluster.\r\n\r\nYou can verify this by inspect the output of EPMD. That's Erlang's port mapper daemon, it keeps track of what Erlang nodes are running on each host and allows connecting to nodes on different hosts.\r\n\r\n```\r\n$ epmd -names\r\nepmd: up and running on port 4369 with data:\r\nname node1 at port 65083\r\n```\r\n\r\nIn my case the extra open port was 65083 and it showed up as distribution port.\r\n\r\nYou can control this port number (by default it is a random port number) and the interface it binds to using Erlang VM's `kernel` options. Erlang VM options usually go into the `vm.args` file. In the development mode the `vm.args` file is located in `rel/overlay/etc/vm.args`\r\n\r\nFor example by adding this line there:\r\n\r\n```\r\n-kernel inet_dist_use_interface {127,0,0,1}\r\n```\r\n\r\nI got that  port to listen the the localhost interface.\r\n\r\n```\r\n lsof -n -p 61704 | grep -i tcp\r\nbeam.smp 61704  0t0      TCP 127.0.0.1:65528 (LISTEN)\r\nbeam.smp 61704  0t0      TCP 127.0.0.1:65529->127.0.0.1:epmd (ESTABLISHED)\r\nbeam.smp 61704  0t0      TCP 127.0.0.1:15986 (LISTEN)\r\nbeam.smp 61704  0t0      TCP *:15984 (LISTEN)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552522743/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552645334","html_url":"https://github.com/apache/couchdb/issues/2225#issuecomment-552645334","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2225","id":552645334,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MjY0NTMzNA==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-11T22:26:37Z","updated_at":"2019-11-11T22:26:37Z","author_association":"MEMBER","body":"As a general rule I think we should not stitch together multiple FDB transactions underneath a single CouchDB operation. A good exception would be a continuous `_changes` feed, where there's already no expectation that the response is generated from a single version of the underlying database. I realize this could shorten response sizes, but I think that's generally a good direction for us to be taking the project.\r\n\r\nSnapshot reads are only useful to relax the isolation around a read performed as part of a RW transaction in FDB. A read-only transaction that never commits doesn't increase the likelihood of conflicts.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552645334/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552646271","html_url":"https://github.com/apache/couchdb/pull/2305#issuecomment-552646271","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2305","id":552646271,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MjY0NjI3MQ==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-11T22:29:37Z","updated_at":"2019-11-11T22:29:37Z","author_association":"MEMBER","body":"Good stuff @dch. For what it's worth my PR #2302 is still open so nothing needs to be reverted at this point.\r\n\r\nI'm also happy to investigate the \"send a dummy header\" option; it seems somewhat cleaner than playing games with windows of libcurl version numbers.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552646271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552657698","html_url":"https://github.com/apache/couchdb/pull/2305#issuecomment-552657698","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2305","id":552657698,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MjY1NzY5OA==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-11T23:06:13Z","updated_at":"2019-11-11T23:06:13Z","author_association":"MEMBER","body":"Pushed this branch to `jenkins-libcurl-http09` to get Jenkins to try it out on FreeBSD.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552657698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552658547","html_url":"https://github.com/apache/couchdb/pull/2305#issuecomment-552658547","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2305","id":552658547,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MjY1ODU0Nw==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-11T23:08:52Z","updated_at":"2019-11-11T23:08:52Z","author_association":"MEMBER","body":"Nevermind I see we already have a `jenkins-curl-09-test` branch ...\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552658547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552722951","html_url":"https://github.com/apache/couchdb/issues/2225#issuecomment-552722951","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2225","id":552722951,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MjcyMjk1MQ==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-12T03:54:05Z","updated_at":"2019-11-12T03:54:05Z","author_association":"CONTRIBUTOR","body":"Yeah `_changes` feeds might seem like a place to do multiple transactions like that. I suppose  `_all_docs` results would return a timeout or transaction size error and clients would have to interpret that and paginate through the data. \r\n\r\n> Snapshot reads are only useful to relax the isolation around a read performed as part of a RW transaction in FDB\r\n\r\nAh you're right. It won't be much help here, these are all read transactions. (Maybe a tiny performance boost since a snapshot won't need to start gathering conflict ranges).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552722951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552832662","html_url":"https://github.com/apache/couchdb/issues/2306#issuecomment-552832662","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2306","id":552832662,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MjgzMjY2Mg==","user":{"login":"crissty","id":11612150,"node_id":"MDQ6VXNlcjExNjEyMTUw","avatar_url":"https://avatars.githubusercontent.com/u/11612150?v=4","gravatar_id":"","url":"https://api.github.com/users/crissty","html_url":"https://github.com/crissty","followers_url":"https://api.github.com/users/crissty/followers","following_url":"https://api.github.com/users/crissty/following{/other_user}","gists_url":"https://api.github.com/users/crissty/gists{/gist_id}","starred_url":"https://api.github.com/users/crissty/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crissty/subscriptions","organizations_url":"https://api.github.com/users/crissty/orgs","repos_url":"https://api.github.com/users/crissty/repos","events_url":"https://api.github.com/users/crissty/events{/privacy}","received_events_url":"https://api.github.com/users/crissty/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-12T10:28:11Z","updated_at":"2019-11-12T10:28:11Z","author_association":"NONE","body":"Hi @nickva ,\r\n\r\nThanks so much for your quick response, your information has been very useful to me.\r\nEffectively, the asked port is the Erlang VM's distribution port.\r\nBut, I don't understand why the Erlang service is enabled in a standalone configuration, I don't use cluster and I am no going to use it in the near future. As a workaround I would be able to change the listener interface to localhost as you indicated me, but I would like not to have unnecessary services running in the machine, is there any way to disable this service?\r\n\r\nMany thanks and regards!\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552832662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552942697","html_url":"https://github.com/apache/couchdb/issues/869#issuecomment-552942697","issue_url":"https://api.github.com/repos/apache/couchdb/issues/869","id":552942697,"node_id":"MDEyOklzc3VlQ29tbWVudDU1Mjk0MjY5Nw==","user":{"login":"marceloavf","id":5435657,"node_id":"MDQ6VXNlcjU0MzU2NTc=","avatar_url":"https://avatars.githubusercontent.com/u/5435657?v=4","gravatar_id":"","url":"https://api.github.com/users/marceloavf","html_url":"https://github.com/marceloavf","followers_url":"https://api.github.com/users/marceloavf/followers","following_url":"https://api.github.com/users/marceloavf/following{/other_user}","gists_url":"https://api.github.com/users/marceloavf/gists{/gist_id}","starred_url":"https://api.github.com/users/marceloavf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marceloavf/subscriptions","organizations_url":"https://api.github.com/users/marceloavf/orgs","repos_url":"https://api.github.com/users/marceloavf/repos","events_url":"https://api.github.com/users/marceloavf/events{/privacy}","received_events_url":"https://api.github.com/users/marceloavf/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-12T15:27:32Z","updated_at":"2019-11-12T15:27:32Z","author_association":"NONE","body":"@penkeysuresh \r\n\r\nWhen I tried `sudo couchdb -b` I did receive `sudo: couchdb: command not found`\r\nEven that I have installed with `sudo apt install couchdb`","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552942697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552979940","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-552979940","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":552979940,"node_id":"MDEyOklzc3VlQ29tbWVudDU1Mjk3OTk0MA==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-12T16:47:07Z","updated_at":"2019-11-12T16:47:18Z","author_association":"CONTRIBUTOR","body":"There is a simplified version of this work here https://github.com/apache/couchdb/pull/2309. It has only process dictionary based backend.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/552979940/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553162904","html_url":"https://github.com/apache/couchdb/issues/2306#issuecomment-553162904","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2306","id":553162904,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzE2MjkwNA==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-12T23:19:32Z","updated_at":"2019-11-12T23:19:32Z","author_association":"CONTRIBUTOR","body":"Hi @crissty,\r\n\r\nIn general not setting a node \"name\" disable the Erlang distribution (the subsystem that runs the inter-node connections). Not sure if you'd have luck commenting out the setting the `-name ...` in `vm.args` file... I don't usually run it in standalone mode so don't know if it will actually work.\r\n\r\nAlso, you'd lose debugging ability and being to connect to the node locally via \"remsh\" for example.\r\n\r\nSo I'd recommend to let it it open the port on the localhost only.\r\n\r\nAnother thing that might help, is you can specify the exact port number via these parameters in the same `vm.args`:\r\n\r\n```\r\n-kernel inet_dist_use_interface {127,0,0,1}\r\n-kernel inet_dist_listen_min 60001\r\n-kernel inet_dist_listen_max 60001\r\n```\r\n\r\nThat just tells it to open port 60001 instead of a random port. So you can monitor it or block via the firewall if localhost access restriction is not enough.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553162904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553342333","html_url":"https://github.com/apache/couchdb/issues/2306#issuecomment-553342333","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2306","id":553342333,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzM0MjMzMw==","user":{"login":"crissty","id":11612150,"node_id":"MDQ6VXNlcjExNjEyMTUw","avatar_url":"https://avatars.githubusercontent.com/u/11612150?v=4","gravatar_id":"","url":"https://api.github.com/users/crissty","html_url":"https://github.com/crissty","followers_url":"https://api.github.com/users/crissty/followers","following_url":"https://api.github.com/users/crissty/following{/other_user}","gists_url":"https://api.github.com/users/crissty/gists{/gist_id}","starred_url":"https://api.github.com/users/crissty/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crissty/subscriptions","organizations_url":"https://api.github.com/users/crissty/orgs","repos_url":"https://api.github.com/users/crissty/repos","events_url":"https://api.github.com/users/crissty/events{/privacy}","received_events_url":"https://api.github.com/users/crissty/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T10:33:24Z","updated_at":"2019-11-13T10:33:24Z","author_association":"NONE","body":"Thank you very much again @nickva , your solution is excellent! when I have commented on the `-name` line in the `vm.args` file, then I restarted the couchdb service and the magic was done!\r\nNow, the service is not running in the system, as you say, I have to evaluate if this is the desired behaviour for our application, although I think that we do not need the additional skills.\r\n\r\nI think that this issue can be closed, thanks for your time! Have a nice day.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553342333/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553396870","html_url":"https://github.com/apache/couchdb/issues/1947#issuecomment-553396870","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1947","id":553396870,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzM5Njg3MA==","user":{"login":"ricellis","id":10698320,"node_id":"MDQ6VXNlcjEwNjk4MzIw","avatar_url":"https://avatars.githubusercontent.com/u/10698320?v=4","gravatar_id":"","url":"https://api.github.com/users/ricellis","html_url":"https://github.com/ricellis","followers_url":"https://api.github.com/users/ricellis/followers","following_url":"https://api.github.com/users/ricellis/following{/other_user}","gists_url":"https://api.github.com/users/ricellis/gists{/gist_id}","starred_url":"https://api.github.com/users/ricellis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ricellis/subscriptions","organizations_url":"https://api.github.com/users/ricellis/orgs","repos_url":"https://api.github.com/users/ricellis/repos","events_url":"https://api.github.com/users/ricellis/events{/privacy}","received_events_url":"https://api.github.com/users/ricellis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T13:08:52Z","updated_at":"2019-11-13T14:12:58Z","author_association":"NONE","body":"It would be good to have this fix, it is really unexpected that you are required to submit the same auth details twice (as a header and in the body) to get a session cookie when `require_valid_user=true`.\r\n\r\nGiven https://github.com/apache/couchdb/issues/1550 - with this change the replicator would also stop falling back to Basic auth when `require_valid_user=true`. That would be beneficial in cases where the PBKDF2 iterations are configured strongly and the session cookie has performance advantages over checking the basic creds on each request.\r\n\r\nEDIT: it seems perhaps I misunderstood the fallback behaviour in the replicator, but regardless this would be a lot less burdensome if `POST _session` \"just worked\" when the body had the correct creds.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553396870/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553407511","html_url":"https://github.com/apache/couchdb/pull/2305#issuecomment-553407511","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2305","id":553407511,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzQwNzUxMQ==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T13:37:21Z","updated_at":"2019-11-13T13:37:21Z","author_association":"MEMBER","body":"The failure at https://builds.apache.org/blue/organizations/jenkins/CouchDB/detail/jenkins-curl-09-test/4/pipeline/ suggests this patch didn't do the trick, although there's unfortunately almost no detail in the logs beyond the fact that the same test failed.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553407511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553421933","html_url":"https://github.com/apache/couchdb/issues/2306#issuecomment-553421933","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2306","id":553421933,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzQyMTkzMw==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T14:14:46Z","updated_at":"2019-11-13T14:14:46Z","author_association":"CONTRIBUTOR","body":"You're welcome, @crissty! Thanks for reaching out\r\n\r\nI'll close the issue","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553421933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553430578","html_url":"https://github.com/apache/couchdb/issues/1947#issuecomment-553430578","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1947","id":553430578,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzQzMDU3OA==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T14:35:47Z","updated_at":"2019-11-13T14:35:47Z","author_association":"MEMBER","body":"I think this falls under the general theme of #2191, happy to add it.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553430578/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553461399","html_url":"https://github.com/apache/couchdb/issues/2244#issuecomment-553461399","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2244","id":553461399,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzQ2MTM5OQ==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T15:46:05Z","updated_at":"2019-11-13T15:46:05Z","author_association":"MEMBER","body":"Curl is too smart for its own good sometimes -- it's ignoring the bytes on the wire that are past the Content-Length.\r\n\r\nTurns out this is the cause of the recent FreeBSD build failures. Newer versions of libcurl that reject HTTP/0.9 content are seeing the remaining bytes on the wire and bailing out.\r\n\r\nHere's some tcpdump output using data generated by the `attachment_ranges` test suite. Note the 29 byte response packet with the full \"This is a base64 encoded text\" response:\r\n\r\n```\r\n10:33:01.411874 IP 127.0.0.1.57526 > 127.0.0.1.15984: tcp 152\r\nE.....@.@.............>p\r\n....z.............\r\nO...O...GET /test_suite_db_yqfppndr/bin_doc/foo.txt?anti-cache=70594 HTTP/1.1\r\nHost: localhost:15984\r\nUser-Agent: curl/7.64.1\r\nAccept: */*\r\nRange: bytes=0-3\r\n\r\n\r\n10:33:01.411895 IP 127.0.0.1.15984 > 127.0.0.1.57526: tcp 0\r\nE..4..@.@...........>p...z..\r\n..^.....(.....\r\nO...O...\r\n10:33:01.434856 IP 127.0.0.1.15984 > 127.0.0.1.57526: tcp 294\r\nE..Z..@.@...........>p...z..\r\n..^.....N.....\r\nO...O...HTTP/1.1 206 Partial Content\r\nAccept-Ranges: bytes\r\nCache-Control: must-revalidate\r\nContent-Length: 4\r\nContent-Range: bytes 0-3/29\r\nContent-Type: application/octet-stream\r\nDate: Wed, 13 Nov 2019 15:33:01 GMT\r\nETag: \"aEI7pOYCRBLTRQvvqYrrJQ==\"\r\nServer: CouchDB/3.0.0-18db801b7 (Erlang OTP/22)\r\n\r\n\r\n10:33:01.434891 IP 127.0.0.1.57526 > 127.0.0.1.15984: tcp 0\r\nE..4..@.@.............>p\r\n..^.z.......(.....\r\nO...O...\r\n10:33:01.435501 IP 127.0.0.1.15984 > 127.0.0.1.57526: tcp 29\r\nE..Q..@.@...........>p...z..\r\n..^.....E.....\r\nO...O...This is a base64 encoded text\r\n10:33:01.435533 IP 127.0.0.1.57526 > 127.0.0.1.15984: tcp 0\r\nE..4..@.@.............>p\r\n..^.z.......(.....\r\nO...O...\r\n10:33:01.435714 IP 127.0.0.1.57526 > 127.0.0.1.15984: tcp 0\r\nE..(..@.@.............>p\r\n..^.z..P.......\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553461399/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553461523","html_url":"https://github.com/apache/couchdb/issues/2244#issuecomment-553461523","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2244","id":553461523,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzQ2MTUyMw==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T15:46:22Z","updated_at":"2019-11-13T15:46:22Z","author_association":"MEMBER","body":"Also, great find @sploders101 ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553461523/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553461827","html_url":"https://github.com/apache/couchdb/pull/2302#issuecomment-553461827","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2302","id":553461827,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzQ2MTgyNw==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T15:47:04Z","updated_at":"2019-11-13T15:47:04Z","author_association":"MEMBER","body":"This is not FreeBSD-specific but is actually a bug with our attachment range support. Closing in favor of #2244 which reported the actual root cause over a month ago.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553461827/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553462286","html_url":"https://github.com/apache/couchdb/pull/2305#issuecomment-553462286","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2305","id":553462286,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzQ2MjI4Ng==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T15:48:11Z","updated_at":"2019-11-13T15:48:11Z","author_association":"MEMBER","body":"Turns out we have an actual bug in our range request support over in #2244 that is causing libcurl to think it's seeing HTTP/0.9 traffic. I suggest we close this issue in favor of resolving that one.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553462286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553537375","html_url":"https://github.com/apache/couchdb/issues/2304#issuecomment-553537375","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2304","id":553537375,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzUzNzM3NQ==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T18:26:40Z","updated_at":"2019-11-13T18:26:40Z","author_association":"MEMBER","body":"The fix version in JIRA is listed as 2.1.0. I guess we forgot to put it into the release notes at the time.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553537375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553537626","html_url":"https://github.com/apache/couchdb/issues/2301#issuecomment-553537626","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2301","id":553537626,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzUzNzYyNg==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T18:27:19Z","updated_at":"2019-11-13T18:27:19Z","author_association":"MEMBER","body":"Closing in favor of #2244 which is the root cause of this error in the test suite.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553537626/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553654342","html_url":"https://github.com/apache/couchdb/pull/2300#issuecomment-553654342","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2300","id":553654342,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MzY1NDM0Mg==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-13T23:34:38Z","updated_at":"2019-11-14T17:00:29Z","author_association":"CONTRIBUTOR","body":"Quick benchmark with this PR:\r\n\r\nprototype/fdb-layer (FDB master):\r\n\r\n```\r\ntime ./add_docs.py\r\n> db url: http://adm:pass@127.0.0.1:15984\r\n> db:info {u'update_seq': u'00000002313b676000000000', u'disk_size': 0, u'sizes': {u'active': 0, u'external': 2, u'file': 0}, u'purge_seq': 0, u'doc_count': 10000, u'compact_running': False, u'cluster': {u'q': 0, u'r': 0, u'w': 0, u'n': 0}, u'db_name': u'db', u'disk_format_version': 0, u'instance_start_time': u'0', u'other': {u'data_size': 2}, u'data_size': 0, u'doc_del_count': 0}\r\n\r\nreal\t0m55.825s\r\nuser\t0m10.583s\r\nsys\t0m3.986s\r\n```\r\n\r\nThis PR:\r\n\r\n```\r\ntime ./add_docs.py\r\n> db url: http://adm:pass@127.0.0.1:15984\r\n> db:info {u'update_seq': u'00000002313b676000000000', u'disk_size': 0, u'sizes': {u'active': 0, u'external': 2, u'file': 0}, u'purge_seq': 0, u'doc_count': 10000, u'compact_running': False, u'cluster': {u'q': 0, u'r': 0, u'w': 0, u'n': 0}, u'db_name': u'db', u'disk_format_version': 0, u'instance_start_time': u'0', u'other': {u'data_size': 2}, u'data_size': 0, u'doc_del_count': 0}\r\n\r\nreal\t0m34.587s\r\nuser\t0m10.486s\r\nsys\t0m4.118s\r\n```\r\n\r\nadd_docs.py: https://gist.github.com/nickva/5d88c389d45ab538950a5e0f34b7d2ae\r\n\r\nFirst ran script once to create and populate db then run again to read the documents\r\n\r\nWith the chttpd_auth_request security check back in  got:\r\n```\r\nreal\t0m44.132s\r\nuser\t0m11.676s\r\nsys\t0m4.437s\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553654342/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553873864","html_url":"https://github.com/apache/couchdb/pull/2286#issuecomment-553873864","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2286","id":553873864,"node_id":"MDEyOklzc3VlQ29tbWVudDU1Mzg3Mzg2NA==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-14T12:50:24Z","updated_at":"2019-11-14T12:50:24Z","author_association":"CONTRIBUTOR","body":"closing in favor of https://github.com/apache/couchdb/pull/2309","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553873864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553874952","html_url":"https://github.com/apache/couchdb/issues/2306#issuecomment-553874952","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2306","id":553874952,"node_id":"MDEyOklzc3VlQ29tbWVudDU1Mzg3NDk1Mg==","user":{"login":"crissty","id":11612150,"node_id":"MDQ6VXNlcjExNjEyMTUw","avatar_url":"https://avatars.githubusercontent.com/u/11612150?v=4","gravatar_id":"","url":"https://api.github.com/users/crissty","html_url":"https://github.com/crissty","followers_url":"https://api.github.com/users/crissty/followers","following_url":"https://api.github.com/users/crissty/following{/other_user}","gists_url":"https://api.github.com/users/crissty/gists{/gist_id}","starred_url":"https://api.github.com/users/crissty/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crissty/subscriptions","organizations_url":"https://api.github.com/users/crissty/orgs","repos_url":"https://api.github.com/users/crissty/repos","events_url":"https://api.github.com/users/crissty/events{/privacy}","received_events_url":"https://api.github.com/users/crissty/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-14T12:53:27Z","updated_at":"2019-11-14T12:53:27Z","author_association":"NONE","body":"It seemed that everything was going well, but unfortunately, when I try to send a request to CouchDB, I get the following error:\r\n`{\"error\":\"internal_server_error\",\"reason\":\"No DB shards could be opened.\",\"ref\":2686395495}\r\n`\r\n\r\n Additionally, I can see in the couchdb.log file the below line:\r\n`[error] 2019-11-14T12:44:09.632183Z nonode@nohost <0.445.0> 8b83f3af4d req_err(2686395495) internal_server_error : No DB shards could be opened.\r\n`\r\n\r\nSo, I will have to keep the Erlang service on the localhost until I can understand the CouchDB needs in relation to Erlang.\r\n\r\nThank you for your help!","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/553874952/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/554044506","html_url":"https://github.com/apache/couchdb/issues/2312#issuecomment-554044506","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2312","id":554044506,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDA0NDUwNg==","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-14T19:34:41Z","updated_at":"2019-11-14T19:34:41Z","author_association":"MEMBER","body":"I added a PR to cover the basic boolean case recently -\nhttps://github.com/apache/couchdb-documentation/pull/453.\n\nOn Thu, 14 Nov 2019, 19:13 Adam Kocoloski, <notifications@github.com> wrote:\n\n> Summary\n>\n> We have undocumented behavior that allows users to opt-out of automatic\n> indexing for specific design documents or types of indexes in a design\n> document.\n>\n> The simplest configuration is\n>\n> {\n>   \"_id\": \"_design/foo\",\n>   \"autoupdate\": false,\n>   ...\n> }\n>\n> It's also possible to specify certain types of indexes separately:\n>\n> {\n>   \"_id\": \"_design/foo\",\n>   \"autoupdate\": {\n>     \"views\": false, # Views and Mango JSON indexes\n>     \"indexes\": false, # Lucene and Mango Text indexes\n>     \"st_indexes\": false, % Geospatial\n>   },\n>   ...\n> }\n>\n> I think we might be better off leaving that extra behavior undocumented as\n> I'm not sure I'd want to commit to those names long-term.\n> Desired Behaviour\n>\n> Setting \"autoupdate\": false in a design document causes it to be skipped\n> by ken. This should be documented.\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/couchdb/issues/2312?email_source=notifications&email_token=AAAX363SPES53WXKH4NS3ZDQTWPMRA5CNFSM4JNQIYGKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HZND46Q>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAAX362IHT4JPEJLHJ6M473QTWPMRANCNFSM4JNQIYGA>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/554044506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/554051285","html_url":"https://github.com/apache/couchdb/issues/2312#issuecomment-554051285","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2312","id":554051285,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDA1MTI4NQ==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-14T19:51:15Z","updated_at":"2019-11-14T19:51:15Z","author_association":"MEMBER","body":"Closing in favor of apache/couchdb-documentation#453","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/554051285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/554436202","html_url":"https://github.com/apache/couchdb/issues/1875#issuecomment-554436202","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1875","id":554436202,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQzNjIwMg==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T16:43:32Z","updated_at":"2019-11-15T16:43:32Z","author_association":"CONTRIBUTOR","body":"For windows-related stuff, finally made progress to build spidermonkey 60 using visual studio 2017. Next thing is to build changed CouchDB codes and test them.\r\n\r\nIt took me about 1 week to setup environment and build spidermonkey 60 for windows.\r\n\r\n- First, I follow the guide in https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Build_Documentation\r\n```\r\ncd js/src\r\nautoconf2.13\r\n\r\n# This name should end with \"_OPT.OBJ\" to make the version control system ignore it.\r\nmkdir build_OPT.OBJ\r\ncd build_OPT.OBJ\r\n../configure\r\nmozmake\r\n```\r\n\r\nBut I stuck during executing configure.\r\n```\r\n$ ../configure\r\nReexecuting in the virtualenv\r\nchecking for vcs source checkout... no\r\nchecking for a shell... C:/mozilla-build-3.2/msys/bin/sh.exe\r\nchecking for host system type... i686-pc-mingw32\r\nchecking for target system type... i686-pc-mingw32\r\nchecking for a shell... C:/mozilla-build-3.2/msys/bin/sh.exe\r\nchecking for host system type... i686-pc-mingw32\r\nchecking for target system type... i686-pc-mingw32\r\nchecking for android platform directory... no\r\nchecking for android sysroot directory... no\r\nchecking for android system directory... no\r\nchecking for the Android toolchain directory... not found\r\nchecking for android platform directory... no\r\nchecking for android system directory... no\r\nchecking for android sysroot directory... no\r\nchecking for the Android toolchain directory... not found\r\nchecking for vcs source checkout... no\r\nchecking whether cross compiling... no\r\ntraceback (most recent call last):\r\n  File \"../../../configure.py\", line 130, in <module>\r\n    sys.exit(main(sys.argv))\r\n  File \"../../../configure.py\", line 29, in main\r\n    sandbox.run(os.path.join(os.path.dirname(__file__), 'moz.configure'))\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 409, in run\r\n    self._value_for(option)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 477, in _value_for\r\n    return self._value_for_option(obj)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\util.py\", line 944, in method_call\r\n    cache[args] = self.func(instance, *args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 494, in _value_for_option\r\n    not self._value_for(implied_option.when)):\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 474, in _value_for\r\n    return self._value_for_depends(obj, need_help_dependency)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\util.py\", line 944, in method_call\r\n    cache[args] = self.func(instance, *args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 483, in _value_for_depends\r\n    return obj.result(need_help_dependency)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\util.py\", line 944, in method_call\r\n    cache[args] = self.func(instance, *args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 199, in result\r\n    return self._func(resolved_args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 198, in <genexpr>\r\n    for d in self.dependencies)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 474, in _value_for\r\n    return self._value_for_depends(obj, need_help_dependency)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\util.py\", line 944, in method_call\r\n    cache[args] = self.func(instance, *args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 483, in _value_for_depends\r\n    return obj.result(need_help_dependency)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\util.py\", line 944, in method_call\r\n    cache[args] = self.func(instance, *args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 122, in result\r\n    for d in self.dependencies]\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 474, in _value_for\r\n    return self._value_for_depends(obj, need_help_dependency)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\util.py\", line 944, in method_call\r\n    cache[args] = self.func(instance, *args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 483, in _value_for_depends\r\n    return obj.result(need_help_dependency)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\util.py\", line 944, in method_call\r\n    cache[args] = self.func(instance, *args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 122, in result\r\n    for d in self.dependencies]\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 474, in _value_for\r\n    return self._value_for_depends(obj, need_help_dependency)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\util.py\", line 944, in method_call\r\n    cache[args] = self.func(instance, *args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 483, in _value_for_depends\r\n    return obj.result(need_help_dependency)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\util.py\", line 944, in method_call\r\n    cache[args] = self.func(instance, *args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 122, in result\r\n    for d in self.dependencies]\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 474, in _value_for\r\n    return self._value_for_depends(obj, need_help_dependency)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\util.py\", line 944, in method_call\r\n    cache[args] = self.func(instance, *args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 483, in _value_for_depends\r\n    return obj.result(need_help_dependency)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\util.py\", line 944, in method_call\r\n    cache[args] = self.func(instance, *args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 122, in result\r\n    for d in self.dependencies]\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 474, in _value_for\r\n    return self._value_for_depends(obj, need_help_dependency)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\util.py\", line 944, in method_call\r\n    cache[args] = self.func(instance, *args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 483, in _value_for_depends\r\n    return obj.result(need_help_dependency)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\util.py\", line 944, in method_call\r\n    cache[args] = self.func(instance, *args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 123, in result\r\n    return self._func(*resolved_args)\r\n  File \"c:\\mozjs\\mozjs-60.1.1pre3\\python\\mozbuild\\mozbuild\\configure\\__init__.py\", line 1003, in wrapped\r\n    return new_func(*args, **kwargs)\r\n  File \"c:/mozjs/mozjs-60.1.1pre3/build/moz.configure/toolchain.configure\", line 638, in vc_compiler_path\r\n    all_versions = sorted(get_vc_paths(env.topsrcdir), key=itemgetter(0))\r\n  File \"c:/mozjs/mozjs-60.1.1pre3/build/moz.configure/toolchain.configure\", line 585, in get_vc_paths\r\n    for install in vswhere(['-legacy', '-version', '[14.0,15.0)']):\r\n  File \"c:/mozjs/mozjs-60.1.1pre3/build/moz.configure/toolchain.configure\", line 581, in vswhere\r\n    ] + args).decode(encoding, 'replace'))\r\n  File \"c:\\mozilla-build-3.2\\python\\Lib\\subprocess.py\", line 216, in check_output\r\n    process = Popen(stdout=PIPE, *popenargs, **kwargs)\r\n  File \"c:\\mozilla-build-3.2\\python\\Lib\\subprocess.py\", line 394, in __init__\r\n    errread, errwrite)\r\n  File \"c:\\mozilla-build-3.2\\python\\Lib\\subprocess.py\", line 644, in _execute_child\r\n    startupinfo)\r\nWindowsError: [Error 5] Access is denied\r\n```\r\nKnowing that it is related to file access, but error message doesn't tell details about problem location. Took days to investigate build system of spidermonkey and use half-interval search and finally identify that it is related to `vswhere.exe` in spidermonkey source code package. And it failed to execute.\r\n```\r\nAdministrator@ph-win10 /c/mozjs/mozjs-60.1.1pre3/build/win32\r\n$ vswhere.exe\r\nbash: ./vswhere.exe: Bad file number\r\n```\r\nAfter using vswhere.exe provided from visual studio 2017, the configure can continue.\r\n\r\nAnd then `mozmake` can build spidermonkey source. \r\n\r\nFor now, the jsapi-tests.exe passed without error.\r\n\r\n```\r\n$ ./js/src/build_OPT.OBJ/dist/bin/jsapi-tests.exe\r\ntestXDR_sourceMap\r\nTEST-PASS | testXDR_sourceMap | ok\r\ntestXDR_source\r\nTEST-PASS | testXDR_source | ok\r\n...\r\ntestAssemblerBuffer_BufferOffset\r\nTEST-PASS | testAssemblerBuffer_BufferOffset | ok\r\n\r\nPassed: ran 281 tests.\r\n```\r\n\r\ncc @denib @janl @davisp @kocolosk","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/554436202/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/554544139","html_url":"https://github.com/apache/couchdb/pull/2309#issuecomment-554544139","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2309","id":554544139,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDU0NDEzOQ==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T21:55:42Z","updated_at":"2019-11-15T21:55:42Z","author_association":"CONTRIBUTOR","body":"@davisp I think I fixed all issues","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/554544139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/554852386","html_url":"https://github.com/apache/couchdb/issues/2298#issuecomment-554852386","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2298","id":554852386,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDg1MjM4Ng==","user":{"login":"zdravko123","id":47307329,"node_id":"MDQ6VXNlcjQ3MzA3MzI5","avatar_url":"https://avatars.githubusercontent.com/u/47307329?v=4","gravatar_id":"","url":"https://api.github.com/users/zdravko123","html_url":"https://github.com/zdravko123","followers_url":"https://api.github.com/users/zdravko123/followers","following_url":"https://api.github.com/users/zdravko123/following{/other_user}","gists_url":"https://api.github.com/users/zdravko123/gists{/gist_id}","starred_url":"https://api.github.com/users/zdravko123/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zdravko123/subscriptions","organizations_url":"https://api.github.com/users/zdravko123/orgs","repos_url":"https://api.github.com/users/zdravko123/repos","events_url":"https://api.github.com/users/zdravko123/events{/privacy}","received_events_url":"https://api.github.com/users/zdravko123/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-18T05:01:44Z","updated_at":"2019-11-18T05:02:42Z","author_association":"NONE","body":"Thanks for your assistance, one other thing we noticed is that our clusters nodes all had different UUID's from reading the docs, these all needed to be the same?\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/554852386/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/554865647","html_url":"https://github.com/apache/couchdb/issues/2317#issuecomment-554865647","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2317","id":554865647,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDg2NTY0Nw==","user":{"login":"vijeth-ag","id":34409546,"node_id":"MDQ6VXNlcjM0NDA5NTQ2","avatar_url":"https://avatars.githubusercontent.com/u/34409546?v=4","gravatar_id":"","url":"https://api.github.com/users/vijeth-ag","html_url":"https://github.com/vijeth-ag","followers_url":"https://api.github.com/users/vijeth-ag/followers","following_url":"https://api.github.com/users/vijeth-ag/following{/other_user}","gists_url":"https://api.github.com/users/vijeth-ag/gists{/gist_id}","starred_url":"https://api.github.com/users/vijeth-ag/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vijeth-ag/subscriptions","organizations_url":"https://api.github.com/users/vijeth-ag/orgs","repos_url":"https://api.github.com/users/vijeth-ag/repos","events_url":"https://api.github.com/users/vijeth-ag/events{/privacy}","received_events_url":"https://api.github.com/users/vijeth-ag/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-18T06:00:20Z","updated_at":"2019-11-18T06:00:20Z","author_association":"NONE","body":"> I'm trying to create couchdb cluster in 2 AWS EC2 instances: using the following [official doc](http://docs.couchdb.org/en/stable/setup/cluster.html)\r\n> \r\n> First I'mm creating 2 couchdb docker containers using the below Dockerfile\r\n> \r\n> ```\r\n> FROM couchdb:2.3.1\r\n> \r\n> ENV NODENAME=XX.XXX.XX.XXX\r\n> ENV COUCHDB_USER=admin\r\n> ENV COUCHDB_PASSWORD=admin\r\n> \r\n> COPY my.cookie /opt/couchdb/.erlang.cookie\r\n> RUN chmod 600 /opt/couchdb/.erlang.cookie\r\n> ```\r\n> \r\n> Next, I'm creating _global_changes, _replicator, and _users DB's in each of the couchdb instances like so\r\n> \r\n> ```\r\n> curl -X PUT http://admin:admin@XX.XXX.XX.XXX:5984/_global_changes\r\n> curl -X PUT http://admin:admin@XX.XXX.XX.XXX:5984/_replicator\r\n> curl -X PUT http://admin:admin@XX.XXX.XX.XXX:5984/_users\r\n> ```\r\n> \r\n> Then, running clustering commands\r\n> \r\n> ```\r\n> curl -X POST -H \"Content-Type: application/json\" http://admin:admin@XX.XXX.XX.XXX:5984/_cluster_setup -d '{\"action\": \"enable_cluster\", \"bind_address\":\"0.0.0.0\", \"username\": \"admin\", \"password\":\"admin\", \"port\": 5984, \"node_count\": \"2\", \"remote_node\": \"XX.XXX.XX.XXX\", \"remote_current_user\": \"admin\", \"remote_current_password\": \"admin\" }'\r\n> \r\n> curl -X POST -H \"Content-Type: application/json\" http://admin:admin@XX.XXX.XX.XXX:5984/_cluster_setup -d '{\"action\": \"add_node\", \"host\":\"XX.XXX.XX.XXX\", \"port\": 5984, \"username\": \"admin\", \"password\":\"admin\"}'\r\n> \r\n> curl -X POST -H \"Content-Type: application/json\" http://admin:admin@XX.XXX.XX.XXX:5984/_cluster_setup -d '{\"action\": \"finish_cluster\"}'\r\n> \r\n> curl http://admin:admin@XX.XXX.XX.XXX:5984/_cluster_setup\r\n> \r\n> curl http://admin:admin@XX.XXX.XX.XXX:5984/_membership\r\n> ```\r\n> \r\n> This is vm.args file\r\n> \r\n> ```\r\n> # Ensure that the Erlang VM listens on a known port\r\n> -kernel inet_dist_listen_min 9100\r\n> -kernel inet_dist_listen_max 9100\r\n> \r\n> # Tell kernel and SASL not to log anything\r\n> -kernel error_logger silent\r\n> -sasl sasl_error_logger false\r\n> \r\n> # Use kernel poll functionality if supported by emulator\r\n> +K true\r\n> \r\n> # Start a pool of asynchronous IO threads\r\n> +A 16\r\n> \r\n> # Comment this line out to enable the interactive Erlang shell on startup\r\n> +Bd -noinput\r\n> -name couchdb@serevr1.test.com\r\n> -setcookie \"secret\"\r\n> ```\r\n> \r\n> When I run _membership command the cluster_nodes has both nodes as [couchdb@XX.XXX.XX.XXX](mailto:couchdb@XX.XXX.XX.XXX), but the all_nodes has only one node, itself.\r\n> \r\n> I have made sure the erlang epmd port 4369 is accessible to outside.\r\n> \r\n> I've being trying for a while now. Am I missing anything?\r\n> \r\n> Update:\r\n> Getting this errors(from docker logs):\r\n> \r\n> ```\r\n> [info] 2019-11-17T07:21:43.652477Z couchdb@XX.XXX.XX.XXX <0.9.0> -------- Application snappy started on node 'couchdb@XX.XXX.XX.XXX'\r\n> [error] 2019-11-17T07:21:48.552666Z couchdb@XX.XXX.XX.XXX emulator -------- Error in process <0.490.0> on node 'couchdb@XX.XXX.XX.XXX' with exit value:\r\n> {database_does_not_exist,[{mem3_shards,load_shards_from_db,\"_users\",[{file,\"src/mem3_shards.erl\"},{line,395}]},{mem3_shards,load_shards_from_disk,1,[{file,\"src/mem3_shards.erl\"},{line,370}]},{mem3_shards,load_shards_from_disk,2,[{file,\"src/mem3_shards.erl\"},{line,399}]},{mem3_shards,for_docid,3,[{file,\"src/mem3_shards.erl\"},{line,86}]},{fabric_doc_open,go,3,[{file,\"src/fabric_doc_open.erl\"},{line,39}]},{chttpd_auth_cache,ensure_auth_ddoc_exists,2,[{file,\"src/chttpd_auth_cache.erl\"},{line,195}]},{chttpd_auth_cache,listen_for_changes,1,[{file,\"src/chttpd_auth_cache.erl\"},{line,142}]}]}\r\n> ```\r\n\r\nI've got it working. Dockerfile and set of commands below for reference:\r\n\r\nDockerfile:\r\n```\r\n        FROM couchdb:latest\r\n\r\n\tENV NODENAME=<this.machine.ip.address>\r\n\tENV COUCHDB_USER=admin\r\n\tENV COUCHDB_PASSWORD=admin\r\n\tENV COUCHDB_SECRET=admin\r\n\r\n\tCOPY my.cookie /opt/couchdb/.erlang.cookie\r\n\tRUN chmod 600 /opt/couchdb/.erlang.cookie\r\n```\r\n\r\nPrepare docker image and run, port mapping (4369, 9100) is important for clustering mode\r\n```\r\ndocker build .\r\ndocker run -d -p 5984:5984 -p 4369:4369 -p 9100:9100 <container-id>\r\n```\r\n\r\nRan these curl commands to be run in one of the machines locally, (1st curl cmd all machines)\r\n\r\n```\r\ncurl -X POST -H \"Content-Type: application/json\" http://admin:admin@127.0.0.1:5984/_cluster_setup -d '{\"action\": \"enable_cluster\", \"bind_address\":\"0.0.0.0\", \"username\": \"admin\", \"password\":\"admin\", \"node_count\":\"2\"}'\r\n\r\n\r\ncurl -X POST -H \"Content-Type: application/json\" http://admin:admin@127.0.0.1:5984/_cluster_setup -d '{\"action\": \"enable_cluster\", \"bind_address\":\"0.0.0.0\", \"username\": \"admin\", \"password\":\"admin\", \"port\": 5984, \"node_count\": \"2\", \"remote_node\": \"<remote.machine.ip.address>\", \"remote_current_user\": \"admin\", \"remote_current_password\": \"admin\" }'\r\n\r\ncurl -X POST -H \"Content-Type: application/json\" http://admin:admin@127.0.0.1:5984/_cluster_setup -d '{\"action\": \"add_node\", \"host\":\"<remote.machine.ip.address>\", \"port\": 5984, \"username\": \"admin\", \"password\":\"admin\"}'\r\n\r\ncurl http://admin:admin@127.0.0.1:5984/_cluster_setup\r\n```\r\n\r\nNow check the clusters and nodes states using membership api.\r\n\r\n```\r\ncurl http://admin:admin@127.0.0.1:5984/_membership\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/554865647/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/555032662","html_url":"https://github.com/apache/couchdb/issues/2298#issuecomment-555032662","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2298","id":555032662,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTAzMjY2Mg==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-18T14:14:43Z","updated_at":"2019-11-18T14:14:43Z","author_association":"CONTRIBUTOR","body":"Ah good find. Yes, the UUID value must be the same on all the nodes of the cluster.\r\n\r\nAnd it would also explain why you periodically get huge CPU spikes. This scenario is possible:\r\n\r\n 1. Server UUIDs participate in generating the replication IDs. So a replication task started on node1 will use that node's UUID and maybe generate some replication ID, say \"abc123..\"\r\n\r\n 2. If there is a node disconnection noticed, then nodes in the cluster will rescan all the replication documents in order to pick up any replications which were previously running on the disconnected node.\r\n\r\n3. If any replications move to another node, they will now have different replication IDs. So the same replication from, with ID \"abc123...\" might now have ID \"def123...\". \r\n\r\n4. Replication ID is used in _local replication checkpoint documents. So when jobs migrate, they won't find their recent checkpoint documents anymore, and will start reprocessing _changes feeds either since the beginning or since the last time they ended up running on that node.\r\n\r\nAfter you fix the issue and set the same UUID. You might restart the nodes and will notice a CPU after all the jobs catch up. Then it should stabilize.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/555032662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/556014416","html_url":"https://github.com/apache/couchdb/issues/2306#issuecomment-556014416","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2306","id":556014416,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NjAxNDQxNg==","user":{"login":"crissty","id":11612150,"node_id":"MDQ6VXNlcjExNjEyMTUw","avatar_url":"https://avatars.githubusercontent.com/u/11612150?v=4","gravatar_id":"","url":"https://api.github.com/users/crissty","html_url":"https://github.com/crissty","followers_url":"https://api.github.com/users/crissty/followers","following_url":"https://api.github.com/users/crissty/following{/other_user}","gists_url":"https://api.github.com/users/crissty/gists{/gist_id}","starred_url":"https://api.github.com/users/crissty/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crissty/subscriptions","organizations_url":"https://api.github.com/users/crissty/orgs","repos_url":"https://api.github.com/users/crissty/repos","events_url":"https://api.github.com/users/crissty/events{/privacy}","received_events_url":"https://api.github.com/users/crissty/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-20T13:58:13Z","updated_at":"2019-11-20T13:58:13Z","author_association":"NONE","body":"if it helps anyone, I found the way to change the epmd service to localhost binding,  you can simply add the following systemd drop-in addition to couchdb.service:\r\n\r\nIn my system, in the file `/etc/systemd/system/multi-user.target.wants/couchdb.service`, below to the Service section\r\n```\r\n[Service]\r\nEnvironment=ERL_EPMD_ADDRESS=127.0.0.1\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/556014416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/556035868","html_url":"https://github.com/apache/couchdb/issues/2306#issuecomment-556035868","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2306","id":556035868,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NjAzNTg2OA==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-20T14:49:32Z","updated_at":"2019-11-20T14:49:32Z","author_association":"CONTRIBUTOR","body":"Great find, @crissty!\r\n\r\nThanks for sharing","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/556035868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/556044464","html_url":"https://github.com/apache/couchdb/pull/2319#issuecomment-556044464","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2319","id":556044464,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NjA0NDQ2NA==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-20T15:08:22Z","updated_at":"2019-11-21T16:36:58Z","author_association":"CONTRIBUTOR","body":"@mikerhodes \r\n\r\nThe motivations for the strings vs atoms is, like you mentioned, is because of optional features like search, geo, etc. The initial code draft did have atoms actually :-) but when I got to search I switched it strings. I am 50%/50% and can see it going either way.\r\n\r\nAs for reporting the configuration. I like the general pattern of having a \"desired configuration\" vs \"actual running\". The issue with the current state of FDB design is we don't have a way to report \"node\" status across all the nodes since they are not connected in a cluster. We'd need to write some registration and status reporting mechanism for nodes in FDB.  `_active_tasks` will probably work in a similar fashion though there we'd be focused on active background jobs instead of configuration status. I think it would be useful to have such a tool eventually, and probably not a terribly large development effort. \r\n\r\nEDIT: I switched the implementation to use atoms. For debugging and inspection added log emits when node types are disabled.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/556044464/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/556821132","html_url":"https://github.com/apache/couchdb/issues/1316#issuecomment-556821132","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1316","id":556821132,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NjgyMTEzMg==","user":{"login":"jamesbraza","id":8990777,"node_id":"MDQ6VXNlcjg5OTA3Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/8990777?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesbraza","html_url":"https://github.com/jamesbraza","followers_url":"https://api.github.com/users/jamesbraza/followers","following_url":"https://api.github.com/users/jamesbraza/following{/other_user}","gists_url":"https://api.github.com/users/jamesbraza/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesbraza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesbraza/subscriptions","organizations_url":"https://api.github.com/users/jamesbraza/orgs","repos_url":"https://api.github.com/users/jamesbraza/repos","events_url":"https://api.github.com/users/jamesbraza/events{/privacy}","received_events_url":"https://api.github.com/users/jamesbraza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-21T01:51:13Z","updated_at":"2019-11-21T01:51:13Z","author_association":"NONE","body":"On 11/20/2019, I am hitting this issue with `Ubuntu 18.04.3 LTS`.  Thank you all who helped create a workaround for this issue.  @asterisks007 I followed your tutorial, thank you for making it.\r\n\r\nI just wanted to add, when running `make couch-js-debs PLATFORM=bionic`, I initially got an error `dpkg-checkbuilddeps: error: Unmet build dependencies: debhelper (>= 7.0.50~) libffi-dev libnspr4-dev (>= 4.7.0) pkg-kde-tools python autotools-dev`.\r\n\r\nI found running `sudo apt install debhelper libffi-dev libnspr4-dev pkg-kde-tools python` enabled me to successfully run `make couch-js-debs PLATFORM=bionic`.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/556821132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557003090","html_url":"https://github.com/apache/couchdb/pull/2322#issuecomment-557003090","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2322","id":557003090,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzAwMzA5MA==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-21T09:43:48Z","updated_at":"2019-11-21T09:43:48Z","author_association":"MEMBER","body":"As this is, by definition, a change to behaviour, it's not a refactor.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557003090/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557044137","html_url":"https://github.com/apache/couchdb/pull/2293#issuecomment-557044137","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2293","id":557044137,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzA0NDEzNw==","user":{"login":"adrienverge","id":5244945,"node_id":"MDQ6VXNlcjUyNDQ5NDU=","avatar_url":"https://avatars.githubusercontent.com/u/5244945?v=4","gravatar_id":"","url":"https://api.github.com/users/adrienverge","html_url":"https://github.com/adrienverge","followers_url":"https://api.github.com/users/adrienverge/followers","following_url":"https://api.github.com/users/adrienverge/following{/other_user}","gists_url":"https://api.github.com/users/adrienverge/gists{/gist_id}","starred_url":"https://api.github.com/users/adrienverge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adrienverge/subscriptions","organizations_url":"https://api.github.com/users/adrienverge/orgs","repos_url":"https://api.github.com/users/adrienverge/repos","events_url":"https://api.github.com/users/adrienverge/events{/privacy}","received_events_url":"https://api.github.com/users/adrienverge/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-21T11:29:51Z","updated_at":"2019-11-21T11:29:51Z","author_association":"CONTRIBUTOR","body":"Hello, what do you think of this change?\r\n\r\nOur team have been patching CouchDB with this (for years now), to be able to run multiple\r\nCouchDB servers on the same machine.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557044137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557173764","html_url":"https://github.com/apache/couchdb/pull/2319#issuecomment-557173764","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2319","id":557173764,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzE3Mzc2NA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-21T16:50:41Z","updated_at":"2019-11-21T16:50:41Z","author_association":"MEMBER","body":"Generally speaking this looks fine to me. Though two quick questions:\r\n\r\nIn chttpd you modified the supervision tree where as in couch_views you modify the worker. Why the inconsistency?\r\n\r\nAlso, why modify the children to have an empty supervisor instead of gating it around the `supervisor:start_link` call? (i.e., just don't start the entire tree rather than having an empty supervisor?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557173764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557177198","html_url":"https://github.com/apache/couchdb/pull/2319#issuecomment-557177198","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2319","id":557177198,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzE3NzE5OA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-21T16:58:26Z","updated_at":"2019-11-21T16:58:26Z","author_association":"MEMBER","body":"Answering one of my questions:\r\n\r\nhttp://erlang.org/doc/apps/kernel/application.html#Module:start-2\r\n\r\nApparently the application's start module can't return `ignore` or similar to have an empty supervision tree easily.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557177198/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557185568","html_url":"https://github.com/apache/couchdb/pull/2319#issuecomment-557185568","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2319","id":557185568,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzE4NTU2OA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-21T17:17:49Z","updated_at":"2019-11-21T17:17:49Z","author_association":"MEMBER","body":"Am I forgetting why we can't do the same approach for couch_views as we do for chttpd?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557185568/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557192801","html_url":"https://github.com/apache/couchdb/pull/2319#issuecomment-557192801","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2319","id":557192801,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzE5MjgwMQ==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-21T17:35:25Z","updated_at":"2019-11-21T17:35:25Z","author_association":"CONTRIBUTOR","body":"@davisp Well after you showed me the start_link pattern, it would makes sense to use that for views as well\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557192801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557375683","html_url":"https://github.com/apache/couchdb/issues/2249#issuecomment-557375683","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2249","id":557375683,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzM3NTY4Mw==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T03:43:59Z","updated_at":"2019-11-22T03:43:59Z","author_association":"MEMBER","body":"I think we should actually not create the IOQ database, as the statistics collection every minute will end up surprising people who aren't expecting such a large internal database. I'm instead going to submit a request to reduce the logging level for the error message and close this ticket once that's merged.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557375683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557580067","html_url":"https://github.com/apache/couchdb/pull/2323#issuecomment-557580067","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2323","id":557580067,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzU4MDA2Nw==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T15:36:29Z","updated_at":"2019-11-22T15:36:29Z","author_association":"MEMBER","body":"Also for those wondering, mochiweb handles all `HEAD` requests and we fake them by rewriting the method to `GET` way up in `chttpd:handle_request/1` before we start handling the request.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557580067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557601342","html_url":"https://github.com/apache/couchdb/pull/2327#issuecomment-557601342","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2327","id":557601342,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzYwMTM0Mg==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T16:32:58Z","updated_at":"2019-11-22T16:32:58Z","author_association":"CONTRIBUTOR","body":"Nice work! This should make failover and FDB upgrades much easier to handle.\r\n\r\nWas wondering if we could re-use `_up` instead of a new endpoint? Notice that `_up` is getting the seedlist from mem3 which in 4.x doesn't do anything currently:\r\n\r\nhttps://github.com/apache/couchdb/pull/2327/files#diff-20d0112d14281f71e2bd09f75da80f27R502-R509\r\n\r\nChecking if FDB is up seems like the equivalent logic in 4.x\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557601342/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557603630","html_url":"https://github.com/apache/couchdb/pull/2327#issuecomment-557603630","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2327","id":557603630,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzYwMzYzMA==","user":{"login":"eiri","id":70542,"node_id":"MDQ6VXNlcjcwNTQy","avatar_url":"https://avatars.githubusercontent.com/u/70542?v=4","gravatar_id":"","url":"https://api.github.com/users/eiri","html_url":"https://github.com/eiri","followers_url":"https://api.github.com/users/eiri/followers","following_url":"https://api.github.com/users/eiri/following{/other_user}","gists_url":"https://api.github.com/users/eiri/gists{/gist_id}","starred_url":"https://api.github.com/users/eiri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eiri/subscriptions","organizations_url":"https://api.github.com/users/eiri/orgs","repos_url":"https://api.github.com/users/eiri/repos","events_url":"https://api.github.com/users/eiri/events{/privacy}","received_events_url":"https://api.github.com/users/eiri/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T16:39:10Z","updated_at":"2019-11-22T16:39:10Z","author_association":"MEMBER","body":"@nickva I'm on a fence about this, tbh. The `_up` end-point is usually hit pretty heavy with a  load balancer, so I was concerned about performance ramifications, especially if it'll also be used by kube's health check. But if you and @davisp think fdb can handle it I'm totally open to move this logic into `_up`","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557603630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557605337","html_url":"https://github.com/apache/couchdb/pull/2326#issuecomment-557605337","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2326","id":557605337,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzYwNTMzNw==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T16:43:46Z","updated_at":"2019-11-22T16:43:46Z","author_association":"CONTRIBUTOR","body":"Doing a local build with `make check` after a `git clean -xffd` and `./configure --dev` I see failures in the boot sequence:\r\n\r\n```\r\n{\"init terminating in do_boot\",{{error,{\"no such file or directory\",\"smoosh.app\"}},[{boot_node,start_app,3,[{file,\"dev/boot_node.erl\"},{line,146}]},{lists,foldl,3,[{file,\"lists.erl\"},{line,1263}]},{init,start_em,1,[]},{init,do_boo\r\nt,3,[]}]}}\r\ninit terminating in do_boot ({{error,{no such file or directory,smoosh.app}},[{boot_node,start_app,3,[{_},{_}]},{lists,foldl,3,[{_},{_}]},{init,start_em,1,[]},{init,do_boot,3,[]}]})\r\nCrash dump is being written to: erl_crash.dump...done\r\n[os_mon] cpu supervisor port (cpu_sup): Erlang has closed\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557605337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557608762","html_url":"https://github.com/apache/couchdb/pull/2326#issuecomment-557608762","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2326","id":557608762,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzYwODc2Mg==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T16:53:21Z","updated_at":"2019-11-22T16:53:21Z","author_association":"MEMBER","body":"Ah, thanks Nick that definitely points out what I was missing. Hopefully fixed the `rebar.config.script` properly now.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557608762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557642348","html_url":"https://github.com/apache/couchdb/pull/2327#issuecomment-557642348","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2327","id":557642348,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzY0MjM0OA==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T18:32:21Z","updated_at":"2019-11-22T18:32:21Z","author_association":"CONTRIBUTOR","body":"`list_dbs/2` call with `limit=0` won't actually do a range read: https://github.com/apache/couchdb/blob/prototype/fdb-layer/src/fabric/src/fabric2_fdb.erl#L791 \r\n\r\nIt will do `...get_or_create` read on the top-level directory https://github.com/apache/couchdb/blob/prototype/fdb-layer/src/fabric/src/fabric2_fdb.erl#L307-L315 which should be fairly lightweight. \r\n\r\nHow often does the `_up` call get called? I am thinking if the node can't handle periodic (1-3Hz rate) calls to FDB it's not really ready to serve data anyway, as we'd intend to handle thousands of requests per second.\r\n\r\nAnother interesting thing to think about is intermittent failures. Say FDB get overloaded for a short moment when the `_up` call gets called and results in a timeout. We could add an extra call to list_dir if one call fails to see if it was an intermittent blip (configurable?). But perhaps the logic in kube and health probe should be tweaked to allow so many failures in a row instead of complicating the `_up` logic.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557642348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557646883","html_url":"https://github.com/apache/couchdb/pull/2327#issuecomment-557646883","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2327","id":557646883,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzY0Njg4Mw==","user":{"login":"eiri","id":70542,"node_id":"MDQ6VXNlcjcwNTQy","avatar_url":"https://avatars.githubusercontent.com/u/70542?v=4","gravatar_id":"","url":"https://api.github.com/users/eiri","html_url":"https://github.com/eiri","followers_url":"https://api.github.com/users/eiri/followers","following_url":"https://api.github.com/users/eiri/following{/other_user}","gists_url":"https://api.github.com/users/eiri/gists{/gist_id}","starred_url":"https://api.github.com/users/eiri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eiri/subscriptions","organizations_url":"https://api.github.com/users/eiri/orgs","repos_url":"https://api.github.com/users/eiri/repos","events_url":"https://api.github.com/users/eiri/events{/privacy}","received_events_url":"https://api.github.com/users/eiri/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T18:44:26Z","updated_at":"2019-11-22T18:44:26Z","author_association":"MEMBER","body":"Yeah, I know it's lightweight, that's why I use it 😄  Still, while 2-3Hz sounds about right, but this is per node. Multiply it by a generously sized cluster and it might be a lot of fdb reqs not doing anything meaningless, hence my doubt.\r\n\r\nI'd prefer to keep the check simple and keep a failure handeling logic on a querying side, might grow rather crafty to do a predictable configuration otherwise.\r\n\r\nIf you insist on moving this into `_up` that's fine with me, easier to deploy too, still I'd love to hear @davisp opinion.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557646883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557652511","html_url":"https://github.com/apache/couchdb/pull/2327#issuecomment-557652511","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2327","id":557652511,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzY1MjUxMQ==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T18:59:57Z","updated_at":"2019-11-22T18:59:57Z","author_association":"CONTRIBUTOR","body":"Am thinking if `_up` will add too much load, we'd just reduce the frequency of calls.  Another alternative is to gate the fdb check with a `config` setting \"[chttpd] up_checks_fdb_connectivity = true|false\" so we can experiment either way.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557652511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557658828","html_url":"https://github.com/apache/couchdb/pull/2327#issuecomment-557658828","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2327","id":557658828,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzY1ODgyOA==","user":{"login":"eiri","id":70542,"node_id":"MDQ6VXNlcjcwNTQy","avatar_url":"https://avatars.githubusercontent.com/u/70542?v=4","gravatar_id":"","url":"https://api.github.com/users/eiri","html_url":"https://github.com/eiri","followers_url":"https://api.github.com/users/eiri/followers","following_url":"https://api.github.com/users/eiri/following{/other_user}","gists_url":"https://api.github.com/users/eiri/gists{/gist_id}","starred_url":"https://api.github.com/users/eiri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eiri/subscriptions","organizations_url":"https://api.github.com/users/eiri/orgs","repos_url":"https://api.github.com/users/eiri/repos","events_url":"https://api.github.com/users/eiri/events{/privacy}","received_events_url":"https://api.github.com/users/eiri/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T19:17:49Z","updated_at":"2019-11-22T19:17:49Z","author_association":"MEMBER","body":"ok, moved it to `_up` and changed PR description accordingly","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557658828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557795288","html_url":"https://github.com/apache/couchdb/issues/1524#issuecomment-557795288","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1524","id":557795288,"node_id":"MDEyOklzc3VlQ29tbWVudDU1Nzc5NTI4OA==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-23T12:49:14Z","updated_at":"2019-11-23T12:49:14Z","author_association":"MEMBER","body":"updated main comment to track work progress properly\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557795288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557795391","html_url":"https://github.com/apache/couchdb/issues/2191#issuecomment-557795391","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2191","id":557795391,"node_id":"MDEyOklzc3VlQ29tbWVudDU1Nzc5NTM5MQ==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-23T12:50:52Z","updated_at":"2019-11-23T12:50:52Z","author_association":"MEMBER","body":"at least, we want to do the default database security setting to admin_only","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557795391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557831350","html_url":"https://github.com/apache/couchdb/issues/2129#issuecomment-557831350","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2129","id":557831350,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzgzMTM1MA==","user":{"login":"ngspinu","id":35466661,"node_id":"MDQ6VXNlcjM1NDY2NjYx","avatar_url":"https://avatars.githubusercontent.com/u/35466661?v=4","gravatar_id":"","url":"https://api.github.com/users/ngspinu","html_url":"https://github.com/ngspinu","followers_url":"https://api.github.com/users/ngspinu/followers","following_url":"https://api.github.com/users/ngspinu/following{/other_user}","gists_url":"https://api.github.com/users/ngspinu/gists{/gist_id}","starred_url":"https://api.github.com/users/ngspinu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ngspinu/subscriptions","organizations_url":"https://api.github.com/users/ngspinu/orgs","repos_url":"https://api.github.com/users/ngspinu/repos","events_url":"https://api.github.com/users/ngspinu/events{/privacy}","received_events_url":"https://api.github.com/users/ngspinu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-23T20:45:22Z","updated_at":"2019-11-23T20:45:51Z","author_association":"NONE","body":"@wohali - this issue was closed, but there is no real response on why `_find` is 5x times slower than running a regular `view`. Is there any way we could get some?\r\nThank you.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/557831350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/558204381","html_url":"https://github.com/apache/couchdb/issues/2332#issuecomment-558204381","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2332","id":558204381,"node_id":"MDEyOklzc3VlQ29tbWVudDU1ODIwNDM4MQ==","user":{"login":"emlaver","id":10552966,"node_id":"MDQ6VXNlcjEwNTUyOTY2","avatar_url":"https://avatars.githubusercontent.com/u/10552966?v=4","gravatar_id":"","url":"https://api.github.com/users/emlaver","html_url":"https://github.com/emlaver","followers_url":"https://api.github.com/users/emlaver/followers","following_url":"https://api.github.com/users/emlaver/following{/other_user}","gists_url":"https://api.github.com/users/emlaver/gists{/gist_id}","starred_url":"https://api.github.com/users/emlaver/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/emlaver/subscriptions","organizations_url":"https://api.github.com/users/emlaver/orgs","repos_url":"https://api.github.com/users/emlaver/repos","events_url":"https://api.github.com/users/emlaver/events{/privacy}","received_events_url":"https://api.github.com/users/emlaver/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-25T15:24:58Z","updated_at":"2019-11-25T15:24:58Z","author_association":"NONE","body":"@garrensmith FYI","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/558204381/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/558339292","html_url":"https://github.com/apache/couchdb/pull/2299#issuecomment-558339292","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2299","id":558339292,"node_id":"MDEyOklzc3VlQ29tbWVudDU1ODMzOTI5Mg==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-25T21:04:41Z","updated_at":"2019-11-25T21:04:41Z","author_association":"CONTRIBUTOR","body":"@garrensmith looks pretty good, nice work! \r\n\r\nSee a few comments above. Most are minor / optional and me wondering how thing work.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/558339292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]