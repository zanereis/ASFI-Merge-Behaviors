[{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277388740","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277388740","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277388740,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM4ODc0MA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T23:14:13Z","updated_at":"2017-02-04T00:31:16Z","author_association":"MEMBER","body":"Here is what I would recommend\r\n\r\n- A minimum C style Tensor object, which most functions wraps into, for example\r\n```c\r\ntypedef struct {\r\n   void* data;\r\n   size_t ndim;\r\n   size_t* shape;\r\n   size_t* strides;\r\n} CTensor;\r\n```\r\n- Optionally, a header only C++ Tensor object that provides automatic conversion from to  the C tensor, which might provide some util like shape management (maybe not memory management)\r\n   \r\n```c++\r\nclass Tensor {\r\n  public:\r\n     operator CTensor() const;\r\n};\r\n```\r\n \r\nAs long as the ```operator CTensor()``` is provided. It is likely you can call C API with the same signature without doing manual converison.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277388740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277390264","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277390264","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277390264,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM5MDI2NA==","user":{"login":"abergeron","id":1002504,"node_id":"MDQ6VXNlcjEwMDI1MDQ=","avatar_url":"https://avatars.githubusercontent.com/u/1002504?v=4","gravatar_id":"","url":"https://api.github.com/users/abergeron","html_url":"https://github.com/abergeron","followers_url":"https://api.github.com/users/abergeron/followers","following_url":"https://api.github.com/users/abergeron/following{/other_user}","gists_url":"https://api.github.com/users/abergeron/gists{/gist_id}","starred_url":"https://api.github.com/users/abergeron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abergeron/subscriptions","organizations_url":"https://api.github.com/users/abergeron/orgs","repos_url":"https://api.github.com/users/abergeron/repos","events_url":"https://api.github.com/users/abergeron/events{/privacy}","received_events_url":"https://api.github.com/users/abergeron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T23:23:08Z","updated_at":"2017-02-03T23:23:08Z","author_association":"NONE","body":"I think a minimum tensor object should have support from strides.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277390264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277390776","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277390776","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277390776,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM5MDc3Ng==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T23:26:31Z","updated_at":"2017-02-03T23:26:31Z","author_association":"CONTRIBUTOR","body":"Is there any reason for a pure c interface? I think most people will be\nhappy with c++\nThe problem with c is you have to encode things like data type with flag\nfield instead of template arguments\n\nTianqi Chen <notifications@github.com>于2017年2月3日 周五下午3:14写道：\n\n> Here is what I would recommend\n>\n>    - A minimum C style Tensor object, which most functions wraps into,\n>    for example\n>\n> typedef struct {\n>    void* data;\n>    size_t ndim;\n>    size_t* shape;\n> } CTensor;\n>\n>\n>    - Optionally, a header only C++ Tensor object that provides automatic\n>    conversion from to the C tensor, which might provide some util like shape\n>    management (maybe not memory management)\n>\n> class Tensor {\n>   public:\n>      operator CTensor() const;\n> };\n>\n> As long as the operator CTensor() is provided. It is likely you can call\n> C API with the same signature without doing manual converison.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dmlc/mxnet/issues/4735#issuecomment-277388740>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAiudKg8vgEOChJhfS6wkhSRbhw8nrdDks5rY7TXgaJpZM4Lobt0>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277390776/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277390970","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277390970","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277390970,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM5MDk3MA==","user":{"login":"bhack","id":1710528,"node_id":"MDQ6VXNlcjE3MTA1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/1710528?v=4","gravatar_id":"","url":"https://api.github.com/users/bhack","html_url":"https://github.com/bhack","followers_url":"https://api.github.com/users/bhack/followers","following_url":"https://api.github.com/users/bhack/following{/other_user}","gists_url":"https://api.github.com/users/bhack/gists{/gist_id}","starred_url":"https://api.github.com/users/bhack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhack/subscriptions","organizations_url":"https://api.github.com/users/bhack/orgs","repos_url":"https://api.github.com/users/bhack/repos","events_url":"https://api.github.com/users/bhack/events{/privacy}","received_events_url":"https://api.github.com/users/bhack/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T23:27:46Z","updated_at":"2017-02-03T23:27:46Z","author_association":"NONE","body":"So how ops will access to the tensor associated memory (I.e. device, framework, context)?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277390970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277391384","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277391384","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277391384,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM5MTM4NA==","user":{"login":"nouiz","id":180987,"node_id":"MDQ6VXNlcjE4MDk4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/180987?v=4","gravatar_id":"","url":"https://api.github.com/users/nouiz","html_url":"https://github.com/nouiz","followers_url":"https://api.github.com/users/nouiz/followers","following_url":"https://api.github.com/users/nouiz/following{/other_user}","gists_url":"https://api.github.com/users/nouiz/gists{/gist_id}","starred_url":"https://api.github.com/users/nouiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nouiz/subscriptions","organizations_url":"https://api.github.com/users/nouiz/orgs","repos_url":"https://api.github.com/users/nouiz/repos","events_url":"https://api.github.com/users/nouiz/events{/privacy}","received_events_url":"https://api.github.com/users/nouiz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T23:30:27Z","updated_at":"2017-02-03T23:30:27Z","author_association":"NONE","body":"I think the MVP for each framework, it is at least for Theano for now, it\nis to have this interface plus one operation we could reuse.\n\nFor example, CTC is in an external repo not in Theano. If the source of CTC\noffer this interface, then using it while moving it in Theano would be a\nminimal MVP. But as it is already available, another operation would be\nbetter.\n\nLe ven. 3 févr. 2017 17:13, bhack <notifications@github.com> a écrit :\n\n> What will be a minimal MVP for a Tensor in the scope of this issue? Is A\n> Tensor interface the first step of a plan? Will each framework needs to\n> handle conversion from/to this \"rosetta stone\" Tensor?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dmlc/mxnet/issues/4735#issuecomment-277376871>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AALC-2P3igraPl0XWJvRjn-8MaJ-IcyIks5rY6ahgaJpZM4Lobt0>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277391384/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277391385","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277391385","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277391385,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM5MTM4NQ==","user":{"login":"edgarriba","id":5157099,"node_id":"MDQ6VXNlcjUxNTcwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/5157099?v=4","gravatar_id":"","url":"https://api.github.com/users/edgarriba","html_url":"https://github.com/edgarriba","followers_url":"https://api.github.com/users/edgarriba/followers","following_url":"https://api.github.com/users/edgarriba/following{/other_user}","gists_url":"https://api.github.com/users/edgarriba/gists{/gist_id}","starred_url":"https://api.github.com/users/edgarriba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edgarriba/subscriptions","organizations_url":"https://api.github.com/users/edgarriba/orgs","repos_url":"https://api.github.com/users/edgarriba/repos","events_url":"https://api.github.com/users/edgarriba/events{/privacy}","received_events_url":"https://api.github.com/users/edgarriba/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T23:30:27Z","updated_at":"2017-02-03T23:30:27Z","author_association":"NONE","body":"I vote for C++ and strides","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277391385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277392960","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277392960","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277392960,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM5Mjk2MA==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T23:40:11Z","updated_at":"2017-02-03T23:40:11Z","author_association":"CONTRIBUTOR","body":"Another thing we need to decide is whether ndim and dtype are template\nargument or field.\nIt depends on whether you what to switch for type outside or inside API\n\n\nEdgar Riba <notifications@github.com>于2017年2月3日 周五下午3:30写道：\n\n> I vote for C++ and strides\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dmlc/mxnet/issues/4735#issuecomment-277391385>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAiudCLPDkLWHBNktDrDMpizmYsfSgAGks5rY7ijgaJpZM4Lobt0>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277392960/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277396059","html_url":"https://github.com/apache/mxnet/pull/4873#issuecomment-277396059","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4873","id":277396059,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM5NjA1OQ==","user":{"login":"sbodenstein","id":10237782,"node_id":"MDQ6VXNlcjEwMjM3Nzgy","avatar_url":"https://avatars.githubusercontent.com/u/10237782?v=4","gravatar_id":"","url":"https://api.github.com/users/sbodenstein","html_url":"https://github.com/sbodenstein","followers_url":"https://api.github.com/users/sbodenstein/followers","following_url":"https://api.github.com/users/sbodenstein/following{/other_user}","gists_url":"https://api.github.com/users/sbodenstein/gists{/gist_id}","starred_url":"https://api.github.com/users/sbodenstein/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sbodenstein/subscriptions","organizations_url":"https://api.github.com/users/sbodenstein/orgs","repos_url":"https://api.github.com/users/sbodenstein/repos","events_url":"https://api.github.com/users/sbodenstein/events{/privacy}","received_events_url":"https://api.github.com/users/sbodenstein/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T00:00:23Z","updated_at":"2017-02-04T00:00:23Z","author_association":"CONTRIBUTOR","body":"@piiswrong: its a replica of the current RMSProp code in Python with all the options. It has one more option than the old RMSProp: epsilon is now a parameter, rather than a fixed value. Otherwise its the same.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277396059/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277396832","html_url":"https://github.com/apache/mxnet/issues/4876#issuecomment-277396832","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4876","id":277396832,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM5NjgzMg==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T00:05:41Z","updated_at":"2017-02-04T00:05:41Z","author_association":"CONTRIBUTOR","body":"I think it's a difference in stdc++ implementation in clang and gcc. You\nmay need to override operator<<(iostream, float)\n\nSebastian Bodenstein <notifications@github.com>于2017年2月3日 周五下午3:56写道：\n\n> Consider the symbol:\n>\n> mx.symbol.SequenceMask(value=\"INF\")\n>\n> On OSX: this is a valid symbol, with the value correctly parsed as a float\n> of value Inf (it seems to use std::stof, which supports NaN's and Inf's\n> etc). However, on Linux, the same code produces an error\n>\n> mxnet.base.MXNetError: Invalid Parameter format for value expect float but value='INF' in operator SequenceMast(...)\n>\n> It would be very useful to support Inf values for the mask (for example,\n> this allows SoftmaxActivation to act on variable length sequences. Finite\n> masking values are never 100% safe).\n>\n> @piiswrong <https://github.com/piiswrong>: how would you recommend\n> handling this, and guaranteeing the same behaviour across platforms?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dmlc/mxnet/issues/4876>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAiudEIeFvPzOAZ8-jsFrxVU5ocM_sUSks5rY760gaJpZM4L28c2>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277396832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277399181","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277399181","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277399181,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM5OTE4MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T00:22:56Z","updated_at":"2017-02-04T00:22:56Z","author_association":"MEMBER","body":"The main advantage of C API is ABI stability.  There is no standard C++ ABI, which means the compiled library can depend on compiler version even on the same platform.\r\n\r\nFor example, it is quite common to compile CUDA code with MSVC on windows, while link that library from MinGW if you are building an R binding(because R's windows builds on minGW). This is impossible if you use C++. If the code goes C++, essentially only source can be distributed, instead of binary. Which might make it a bit vendor unfriendly, if they want to distribute binary (like CuDNN).\r\n\r\nOn the other hand, c++1x is great and I think it would be great to have a header only library that wraps the C API, which allows simpler syntax.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277399181/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277400088","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277400088","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277400088,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwMDA4OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T00:29:26Z","updated_at":"2017-02-04T00:29:26Z","author_association":"MEMBER","body":"In terms of context, device and resources. There are usually two ways.\r\n\r\n- Asking the target to return opaque handles for streams and context, pass that back in each function call.\r\n- Make the function invariant from the streams and context, but allow runtime setting of these things through a Thread Local storage, which expose a function\r\n\r\nThe second way might be cleaner, but do have a overhead of fetching a TLS each function call, which is negligible(in micro second level).  as a matter of fact, most runtime API like CUDA utilize TLS to make calls threadsafe.\r\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277400088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277400821","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277400821","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277400821,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwMDgyMQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T00:35:11Z","updated_at":"2017-02-04T00:35:11Z","author_association":"MEMBER","body":"I think having strides is good, though many function can only support non-strided version, which a failure flag to ask the framework to call MakeContiguous first.\r\n\r\nThe danger in potential MakeContiguous() is that allocator gets involved(or the library have its own private workspace), which need a bit careful consideration.\r\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277400821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277401754","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277401754","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277401754,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwMTc1NA==","user":{"login":"naibaf7","id":5577650,"node_id":"MDQ6VXNlcjU1Nzc2NTA=","avatar_url":"https://avatars.githubusercontent.com/u/5577650?v=4","gravatar_id":"","url":"https://api.github.com/users/naibaf7","html_url":"https://github.com/naibaf7","followers_url":"https://api.github.com/users/naibaf7/followers","following_url":"https://api.github.com/users/naibaf7/following{/other_user}","gists_url":"https://api.github.com/users/naibaf7/gists{/gist_id}","starred_url":"https://api.github.com/users/naibaf7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naibaf7/subscriptions","organizations_url":"https://api.github.com/users/naibaf7/orgs","repos_url":"https://api.github.com/users/naibaf7/repos","events_url":"https://api.github.com/users/naibaf7/events{/privacy}","received_events_url":"https://api.github.com/users/naibaf7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T00:43:30Z","updated_at":"2017-02-04T00:49:28Z","author_association":"NONE","body":"I agree with @edgarriba.\r\n\r\nBut I think in general operators should only be shared alike a BLAS and leave everything else up to the DNN framework. Stride and format of tensors should be kept open, but the DNN operators should specify support for formats alike BLAS libraries.\r\n- Unsupported tensors should be resolved using additional DNN operators for in-place and out-of-place tensor reordering.\r\n- Leave memory management and tensors themselves up to the framework. Device initialization and bookkeeping as well.\r\n- For internal/working memory of operators, there should be the option to pass an allocator/memory manager as lambda function/function pointer into the operator, or the operator can be allowed to allocate with internal/own allocators. This is very important for memory bookkeeping in more complex DNN frameworks. It can be designed a bit like memory managers inside OS kernels.\r\n- Operators can define themselves as stateless or stateful, and can also tell the user if it is a single-instance (multi-use) or a multi-instance (single use; needs to be instantiated per network layer) operator.\r\n- Stateless functions are alike BLAS functions and do not need instantiation.\r\n- Stateful operators need to define life cycle functions that allow to create the operator and reshape, compile, cache, use (forward/backward) and destruct it (and possibly more). Here the host framework has to keep a pointer to the instance of the operator. LibDNN and cuDNN are stateful, BLAS operations are not. Max pooling is stateful, average pooling can be stateless, activations are stateless (etc).\r\n- Operators can be single-device or multi-device in their execution.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277401754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277402694","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277402694","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277402694,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwMjY5NA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T00:51:12Z","updated_at":"2017-02-04T00:51:12Z","author_association":"MEMBER","body":"For memory interface for complicated operators, I think many of them could be simpler, without an allocator, instead having two functions, CuDNN is actually \r\n\r\n- A workspace requirement function that have the same signature of the execution function, but allow data field to be nullptr, and returns workspace requirement\r\n- A execution function that takes workspace pointer as additional argument.\r\n\r\nThis cannot cover all the complicated operators(there are some that depends on content of the data) but already include most cases. This removes the need of a memory allocator or lambda function.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277402694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277403034","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277403034","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277403034,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwMzAzNA==","user":{"login":"naibaf7","id":5577650,"node_id":"MDQ6VXNlcjU1Nzc2NTA=","avatar_url":"https://avatars.githubusercontent.com/u/5577650?v=4","gravatar_id":"","url":"https://api.github.com/users/naibaf7","html_url":"https://github.com/naibaf7","followers_url":"https://api.github.com/users/naibaf7/followers","following_url":"https://api.github.com/users/naibaf7/following{/other_user}","gists_url":"https://api.github.com/users/naibaf7/gists{/gist_id}","starred_url":"https://api.github.com/users/naibaf7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naibaf7/subscriptions","organizations_url":"https://api.github.com/users/naibaf7/orgs","repos_url":"https://api.github.com/users/naibaf7/repos","events_url":"https://api.github.com/users/naibaf7/events{/privacy}","received_events_url":"https://api.github.com/users/naibaf7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T00:54:08Z","updated_at":"2017-02-04T00:54:08Z","author_association":"NONE","body":"@tqchen Gets messy very fast with multi-device operators that are coming up, or if workspace memory needs to be consolidated between multiple operators to save memory. I think it will be hard to get around the memory allocator duality and additional life-cycle functions for stateful operators. ","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277403034/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277403337","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277403337","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277403337,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwMzMzNw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T00:56:47Z","updated_at":"2017-02-04T00:56:47Z","author_association":"MEMBER","body":"@naibaf7 I cannot speak for the multi-device operators. But the workspace consolidation problem can be handled easily from the framework side. As a matter of fact, it can even be done statically when a computational graph is available, without relying on dynamic memory allocation\r\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277403337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277403701","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277403701","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277403701,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwMzcwMQ==","user":{"login":"naibaf7","id":5577650,"node_id":"MDQ6VXNlcjU1Nzc2NTA=","avatar_url":"https://avatars.githubusercontent.com/u/5577650?v=4","gravatar_id":"","url":"https://api.github.com/users/naibaf7","html_url":"https://github.com/naibaf7","followers_url":"https://api.github.com/users/naibaf7/followers","following_url":"https://api.github.com/users/naibaf7/following{/other_user}","gists_url":"https://api.github.com/users/naibaf7/gists{/gist_id}","starred_url":"https://api.github.com/users/naibaf7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naibaf7/subscriptions","organizations_url":"https://api.github.com/users/naibaf7/orgs","repos_url":"https://api.github.com/users/naibaf7/repos","events_url":"https://api.github.com/users/naibaf7/events{/privacy}","received_events_url":"https://api.github.com/users/naibaf7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T00:59:46Z","updated_at":"2017-02-04T01:00:52Z","author_association":"NONE","body":"@tqchen If the workspace memory for an operator is fixed maybe, but it's often not; also reshaping a network or operators that switch and autotune algorithms can have dynamic memory requirements.\r\nI wouldn't want to take this possibility away for future operators that might come up.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277403701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277404077","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277404077","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277404077,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwNDA3Nw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T01:03:08Z","updated_at":"2017-02-04T01:03:08Z","author_association":"MEMBER","body":"The assumption is that the workspace for an operator is fixed for the fixed input tensor shape, while the requirement can be re-calculated when the shape goes up. The requirement can be a rough estimation of a maximum space needed, as CuDNN did. \r\n\r\nThis can always fall back into the dynamic memory approach from the caller side, but leaves that decision to the user of the library.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277404077/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277404745","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277404745","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277404745,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwNDc0NQ==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T01:09:12Z","updated_at":"2017-02-04T01:09:12Z","author_association":"CONTRIBUTOR","body":"What's the argument against lambs allocator?\nIt's cleaner and more flexible.\n\nTianqi Chen <notifications@github.com>于2017年2月3日 周五下午4:51写道：\n\n> For memory interface for complicated operators, I think many of them could\n> be simpler, without an allocator, instead having two functions, CuDNN is\n> actually\n>\n>    - A workspace requirement function that have the same signature of the\n>    execution function, but allow data field to be nullptr, and returns\n>    workspace requirement\n>    - A execution function that takes workspace pointer as additional\n>    argument.\n>\n> This cannot cover all the complicated operators(there are some that\n> depends on content of the data) but already include most cases. This\n> removes the need of a memory allocator or lambda function.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dmlc/mxnet/issues/4735#issuecomment-277402694>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAiudKLOfwM9RhavhQ8I_D8QzOavv-7wks5rY8uPgaJpZM4Lobt0>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277404745/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277404878","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277404878","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277404878,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwNDg3OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T01:10:21Z","updated_at":"2017-02-04T01:14:07Z","author_association":"MEMBER","body":"It somewhat prevent the chance of static allocation of workspace. The workspace requirement interface is more restrictive, and enables the two phase strategy(allocation then execution)\r\n\r\nI think the argument is not against using allocator when necessary, there are some cases where it is inevitable. but instead provide three categorizations\r\n-  Those that does not requires workspace memory\r\n-  Those that can declare workspace requirement before execution\r\n-  Those that need a allocator\r\n\r\nThe former ones can be relaxed to the later ones. In general putting operator into the most restrictive types leaves chances for the user to decide what to do with them.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277404878/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277405008","html_url":"https://github.com/apache/mxnet/issues/4870#issuecomment-277405008","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4870","id":277405008,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwNTAwOA==","user":{"login":"uzhao","id":5157125,"node_id":"MDQ6VXNlcjUxNTcxMjU=","avatar_url":"https://avatars.githubusercontent.com/u/5157125?v=4","gravatar_id":"","url":"https://api.github.com/users/uzhao","html_url":"https://github.com/uzhao","followers_url":"https://api.github.com/users/uzhao/followers","following_url":"https://api.github.com/users/uzhao/following{/other_user}","gists_url":"https://api.github.com/users/uzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/uzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/uzhao/subscriptions","organizations_url":"https://api.github.com/users/uzhao/orgs","repos_url":"https://api.github.com/users/uzhao/repos","events_url":"https://api.github.com/users/uzhao/events{/privacy}","received_events_url":"https://api.github.com/users/uzhao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T01:11:31Z","updated_at":"2017-02-04T01:11:31Z","author_association":"NONE","body":"They claim it's fixed. However I still have trouble with least version. If anyone want to install mxnet then I would suggest clone roxygen2 and checkout 5.0.1","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277405008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277405825","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277405825","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277405825,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwNTgyNQ==","user":{"login":"naibaf7","id":5577650,"node_id":"MDQ6VXNlcjU1Nzc2NTA=","avatar_url":"https://avatars.githubusercontent.com/u/5577650?v=4","gravatar_id":"","url":"https://api.github.com/users/naibaf7","html_url":"https://github.com/naibaf7","followers_url":"https://api.github.com/users/naibaf7/followers","following_url":"https://api.github.com/users/naibaf7/following{/other_user}","gists_url":"https://api.github.com/users/naibaf7/gists{/gist_id}","starred_url":"https://api.github.com/users/naibaf7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naibaf7/subscriptions","organizations_url":"https://api.github.com/users/naibaf7/orgs","repos_url":"https://api.github.com/users/naibaf7/repos","events_url":"https://api.github.com/users/naibaf7/events{/privacy}","received_events_url":"https://api.github.com/users/naibaf7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T01:19:26Z","updated_at":"2017-02-04T01:19:57Z","author_association":"NONE","body":"@tqchen Yup. I agree with that last statement of yours. Those that do require an allocator can also be kept simple: They can use their internal allocator and destructor for device memory IF the framework does not care about having full memory management administration of devices.\r\nFor more restricted operators, the two-phase workspace configuration and execution can be incorporated in the life-cycle functions.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277405825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277412495","html_url":"https://github.com/apache/mxnet/pull/4865#issuecomment-277412495","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4865","id":277412495,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQxMjQ5NQ==","user":{"login":"xlvector","id":100203,"node_id":"MDQ6VXNlcjEwMDIwMw==","avatar_url":"https://avatars.githubusercontent.com/u/100203?v=4","gravatar_id":"","url":"https://api.github.com/users/xlvector","html_url":"https://github.com/xlvector","followers_url":"https://api.github.com/users/xlvector/followers","following_url":"https://api.github.com/users/xlvector/following{/other_user}","gists_url":"https://api.github.com/users/xlvector/gists{/gist_id}","starred_url":"https://api.github.com/users/xlvector/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xlvector/subscriptions","organizations_url":"https://api.github.com/users/xlvector/orgs","repos_url":"https://api.github.com/users/xlvector/repos","events_url":"https://api.github.com/users/xlvector/events{/privacy}","received_events_url":"https://api.github.com/users/xlvector/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T02:39:39Z","updated_at":"2017-02-04T02:39:39Z","author_association":"CONTRIBUTOR","body":"Yes, LCS is better. @catalystfrank what about training speed. Sometimes, I find eval function is cost of time. Can you tell me the samples/second before/after using this evaluate metric?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277412495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277415630","html_url":"https://github.com/apache/mxnet/issues/4868#issuecomment-277415630","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4868","id":277415630,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQxNTYzMA==","user":{"login":"thirdwing","id":1547093,"node_id":"MDQ6VXNlcjE1NDcwOTM=","avatar_url":"https://avatars.githubusercontent.com/u/1547093?v=4","gravatar_id":"","url":"https://api.github.com/users/thirdwing","html_url":"https://github.com/thirdwing","followers_url":"https://api.github.com/users/thirdwing/followers","following_url":"https://api.github.com/users/thirdwing/following{/other_user}","gists_url":"https://api.github.com/users/thirdwing/gists{/gist_id}","starred_url":"https://api.github.com/users/thirdwing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thirdwing/subscriptions","organizations_url":"https://api.github.com/users/thirdwing/orgs","repos_url":"https://api.github.com/users/thirdwing/repos","events_url":"https://api.github.com/users/thirdwing/events{/privacy}","received_events_url":"https://api.github.com/users/thirdwing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T03:36:34Z","updated_at":"2017-02-04T03:36:34Z","author_association":"CONTRIBUTOR","body":"This should be fixed. Feel free to reopen if you still met the error.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277415630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277416663","html_url":"https://github.com/apache/mxnet/pull/4865#issuecomment-277416663","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4865","id":277416663,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQxNjY2Mw==","user":{"login":"catalystfrank","id":5650433,"node_id":"MDQ6VXNlcjU2NTA0MzM=","avatar_url":"https://avatars.githubusercontent.com/u/5650433?v=4","gravatar_id":"","url":"https://api.github.com/users/catalystfrank","html_url":"https://github.com/catalystfrank","followers_url":"https://api.github.com/users/catalystfrank/followers","following_url":"https://api.github.com/users/catalystfrank/following{/other_user}","gists_url":"https://api.github.com/users/catalystfrank/gists{/gist_id}","starred_url":"https://api.github.com/users/catalystfrank/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/catalystfrank/subscriptions","organizations_url":"https://api.github.com/users/catalystfrank/orgs","repos_url":"https://api.github.com/users/catalystfrank/repos","events_url":"https://api.github.com/users/catalystfrank/events{/privacy}","received_events_url":"https://api.github.com/users/catalystfrank/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T03:57:45Z","updated_at":"2017-02-04T04:16:53Z","author_association":"CONTRIBUTOR","body":"During the 1st epoch, log shows\r\n\r\n2017-02-04 08:40:20,068 Epoch[0] Batch [800]\tSpeed: 2325.09 samples/sec\tTrain-Accuracy_LCS=0.000000\r\n2017-02-04 08:40:24,394 Epoch[0] Batch [900]\tSpeed: 2311.27 samples/sec\tTrain-Accuracy_LCS=0.000050\r\n2017-02-04 08:40:28,712 Epoch[0] Batch [1000]\tSpeed: 2316.34 samples/sec\tTrain-Accuracy_LCS=0.000675\r\n2017-02-04 08:40:32,984 Epoch[0] Batch [1100]\tSpeed: 2340.77 samples/sec\tTrain-Accuracy_LCS=0.004445\r\n2017-02-04 08:40:37,258 Epoch[0] Batch [1200]\tSpeed: 2339.81 samples/sec\tTrain-Accuracy_LCS=0.009910\r\n2017-02-04 08:40:41,820 Epoch[0] Batch [1300]\tSpeed: 2192.39 samples/sec\tTrain-Accuracy_LCS=0.017605\r\n2017-02-04 08:40:46,320 Epoch[0] Batch [1400]\tSpeed: 2222.36 samples/sec\tTrain-Accuracy_LCS=0.029203\r\n\r\nThis example contains some training data of 5-20 char long images, ( @30*300 resolution ) , using hyperparams : Hidden=256 - 512, Layer=2 - 3, Batch Size = 64 - 100, and Learning Rate = 0.0005 - 0.005. \r\n\r\nThe original accuracy must be too strict to train the model (if 1 out of 20 char is not correctly predicted,  then the correct part is wasted).\r\n\r\nAt this morning, this 10-epoch run finally reported a proximately 96.7% accuracy ( while at the end of the 1st epoch it reported 90.3%)\r\n\r\n2017-02-04 08:49:39,884 Epoch[0] Batch [9600]\tSpeed: 1549.72 samples/sec\tTrain-Accuracy_LCS=0.899952\r\n2017-02-04 08:49:46,279 Epoch[0] Batch [9700]\tSpeed: 1563.85 samples/sec\tTrain-Accuracy_LCS=0.903240\r\n2017-02-04 08:49:52,687 Epoch[0] Batch [9800]\tSpeed: 1560.48 samples/sec\tTrain-Accuracy_LCS=0.905164\r\n2017-02-04 08:49:59,106 Epoch[0] Batch [9900]\tSpeed: 1558.01 samples/sec\tTrain-Accuracy_LCS=0.903228\r\n2017-02-04 08:50:05,719 Epoch[0] Batch [10000]\tSpeed: 1512.11 samples/sec\tTrain-Accuracy_LCS=0.904909\r\n\r\n..................\r\n\r\n2017-02-04 10:46:11,495 Epoch[9] Batch [9600]\tSpeed: 1544.09 samples/sec\tTrain-Accuracy_LCS=0.967721\r\n2017-02-04 10:46:17,891 Epoch[9] Batch [9700]\tSpeed: 1563.57 samples/sec\tTrain-Accuracy_LCS=0.967243\r\n2017-02-04 10:46:24,317 Epoch[9] Batch [9800]\tSpeed: 1556.13 samples/sec\tTrain-Accuracy_LCS=0.968336\r\n2017-02-04 10:46:30,709 Epoch[9] Batch [9900]\tSpeed: 1564.66 samples/sec\tTrain-Accuracy_LCS=0.966759\r\n2017-02-04 10:46:37,104 Epoch[9] Batch [10000]\tSpeed: 1563.60 samples/sec\tTrain-Accuracy_LCS=0.968629\r\n2017-02-04 10:46:43,535 Epoch[9] Batch [10100]\tSpeed: 1555.05 samples/sec\tTrain-Accuracy_LCS=0.967586\r\n\r\n\r\nUsually a captcha is no longer than 6, a former fixed length run shows that it can achieve 99.1% LCS Accuracy (which means a 94.6% Original Accuracy is ensured). If using the original, the accuracy remains at 0.00% through almost the entire 1st epoch.\r\n\r\n\r\n@xlvector It seems that LCS doesn't help to make samples/sec better, but brings convergence earlier, somewhat lower the time cost of hyper-opt experiment , which is the main focus of one of my colleague ( another MXNet user )\r\n\r\nAt different stage, hyper-opt aims to tune params to get faster convergence, but if it can also dynamically change its policy to choose a proper accuracy function, that must be cool.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277416663/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277423293","html_url":"https://github.com/apache/mxnet/pull/4877#issuecomment-277423293","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4877","id":277423293,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyMzI5Mw==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T06:33:30Z","updated_at":"2017-02-04T06:33:30Z","author_association":"CONTRIBUTOR","body":"why not just float(1.414)","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277423293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277423792","html_url":"https://github.com/apache/mxnet/issues/4879#issuecomment-277423792","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4879","id":277423792,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyMzc5Mg==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T06:44:28Z","updated_at":"2017-02-04T06:44:28Z","author_association":"CONTRIBUTOR","body":"try update vs to 2015.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277423792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277423950","html_url":"https://github.com/apache/mxnet/issues/4878#issuecomment-277423950","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4878","id":277423950,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyMzk1MA==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T06:48:09Z","updated_at":"2017-02-04T06:48:09Z","author_association":"CONTRIBUTOR","body":"LSTM will be much faster after this is merged https://github.com/dmlc/mxnet/pull/4618\r\n\r\nIt's basically due to some mistakes in the lstm example (assuming the benchmark used the example code)","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277423950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277426841","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277426841","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277426841,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyNjg0MQ==","user":{"login":"edgarriba","id":5157099,"node_id":"MDQ6VXNlcjUxNTcwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/5157099?v=4","gravatar_id":"","url":"https://api.github.com/users/edgarriba","html_url":"https://github.com/edgarriba","followers_url":"https://api.github.com/users/edgarriba/followers","following_url":"https://api.github.com/users/edgarriba/following{/other_user}","gists_url":"https://api.github.com/users/edgarriba/gists{/gist_id}","starred_url":"https://api.github.com/users/edgarriba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edgarriba/subscriptions","organizations_url":"https://api.github.com/users/edgarriba/orgs","repos_url":"https://api.github.com/users/edgarriba/repos","events_url":"https://api.github.com/users/edgarriba/events{/privacy}","received_events_url":"https://api.github.com/users/edgarriba/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T07:50:36Z","updated_at":"2017-02-04T07:50:36Z","author_association":"NONE","body":"@tqchen nice! go ahead and create a repo with simple C structures so that we can start to iterate.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277426841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277426937","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277426937","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277426937,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyNjkzNw==","user":{"login":"edgarriba","id":5157099,"node_id":"MDQ6VXNlcjUxNTcwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/5157099?v=4","gravatar_id":"","url":"https://api.github.com/users/edgarriba","html_url":"https://github.com/edgarriba","followers_url":"https://api.github.com/users/edgarriba/followers","following_url":"https://api.github.com/users/edgarriba/following{/other_user}","gists_url":"https://api.github.com/users/edgarriba/gists{/gist_id}","starred_url":"https://api.github.com/users/edgarriba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edgarriba/subscriptions","organizations_url":"https://api.github.com/users/edgarriba/orgs","repos_url":"https://api.github.com/users/edgarriba/repos","events_url":"https://api.github.com/users/edgarriba/events{/privacy}","received_events_url":"https://api.github.com/users/edgarriba/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T07:52:49Z","updated_at":"2017-02-04T07:53:09Z","author_association":"NONE","body":"I can start with the c++ wrapper once the baby starts to walk","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277426937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427051","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277427051","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277427051,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyNzA1MQ==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T07:55:12Z","updated_at":"2017-02-04T07:56:40Z","author_association":"CONTRIBUTOR","body":"I think a c++ wrapper on top of pure c interface is overkill.\r\n\r\nThis library is intended to be used through DL frameworks, not standalone. You wouldn't create a frontend binding just for this library, which would be essentially reinventing Torch. The top priority for it should be easy compiling/linking. If possible it should be a header only library with c++11 interface from ground up. Although if we want to support opencl it's hard to make it header only","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427269","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277427269","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277427269,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyNzI2OQ==","user":{"login":"edgarriba","id":5157099,"node_id":"MDQ6VXNlcjUxNTcwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/5157099?v=4","gravatar_id":"","url":"https://api.github.com/users/edgarriba","html_url":"https://github.com/edgarriba","followers_url":"https://api.github.com/users/edgarriba/followers","following_url":"https://api.github.com/users/edgarriba/following{/other_user}","gists_url":"https://api.github.com/users/edgarriba/gists{/gist_id}","starred_url":"https://api.github.com/users/edgarriba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edgarriba/subscriptions","organizations_url":"https://api.github.com/users/edgarriba/orgs","repos_url":"https://api.github.com/users/edgarriba/repos","events_url":"https://api.github.com/users/edgarriba/events{/privacy}","received_events_url":"https://api.github.com/users/edgarriba/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T07:59:59Z","updated_at":"2017-02-04T07:59:59Z","author_association":"NONE","body":"> This library is intended to be used through DL frameworks, not standalone.\r\n\r\n@piiswrong It is? Apart from the name of the issue :D","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427269/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427307","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277427307","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277427307,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyNzMwNw==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T08:00:53Z","updated_at":"2017-02-04T08:04:46Z","author_association":"CONTRIBUTOR","body":"A tensor should have the following attributes:\r\nndim,\r\ndtype,\r\ndevice (cpu/gpu/ocl),\r\ndata_ptr,\r\nshape,\r\nstride\r\n\r\nWe need to decide which one goes to field and which one goes to template argument. If ndim is in template argument we enjoy the benefit of on stack allocation of shape/stride. The down side is caller need to switch over ndim","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427307/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427372","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277427372","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277427372,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyNzM3Mg==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T08:02:19Z","updated_at":"2017-02-04T08:03:49Z","author_association":"CONTRIBUTOR","body":"@edgarriba I hope so. Otherwise it's reinventing Torch, which doesn't make much sense. I'm hoping we can solve, or at least mitigate, the problem that there are too many redundant work in DL frameworks, not add to it ;)","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427419","html_url":"https://github.com/apache/mxnet/issues/4878#issuecomment-277427419","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4878","id":277427419,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyNzQxOQ==","user":{"login":"pineking","id":72760,"node_id":"MDQ6VXNlcjcyNzYw","avatar_url":"https://avatars.githubusercontent.com/u/72760?v=4","gravatar_id":"","url":"https://api.github.com/users/pineking","html_url":"https://github.com/pineking","followers_url":"https://api.github.com/users/pineking/followers","following_url":"https://api.github.com/users/pineking/following{/other_user}","gists_url":"https://api.github.com/users/pineking/gists{/gist_id}","starred_url":"https://api.github.com/users/pineking/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pineking/subscriptions","organizations_url":"https://api.github.com/users/pineking/orgs","repos_url":"https://api.github.com/users/pineking/repos","events_url":"https://api.github.com/users/pineking/events{/privacy}","received_events_url":"https://api.github.com/users/pineking/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T08:03:16Z","updated_at":"2017-02-04T08:03:16Z","author_association":"CONTRIBUTOR","body":"@piiswrong Great job，when could this PR be merged?\r\n\r\nBTW, I am not sure whether the benchmark has the same mistakes in their scripts.\r\nIt seems that the commit which the benchmark is MXNet: 0.7(34b2798), perhaps it is not the latest code, and the test scripts are here:\r\nhttps://github.com/hclhkbu/dlbench/tree/master/tools/mxnet/rnn","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427535","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277427535","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277427535,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyNzUzNQ==","user":{"login":"Yangqing","id":551151,"node_id":"MDQ6VXNlcjU1MTE1MQ==","avatar_url":"https://avatars.githubusercontent.com/u/551151?v=4","gravatar_id":"","url":"https://api.github.com/users/Yangqing","html_url":"https://github.com/Yangqing","followers_url":"https://api.github.com/users/Yangqing/followers","following_url":"https://api.github.com/users/Yangqing/following{/other_user}","gists_url":"https://api.github.com/users/Yangqing/gists{/gist_id}","starred_url":"https://api.github.com/users/Yangqing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yangqing/subscriptions","organizations_url":"https://api.github.com/users/Yangqing/orgs","repos_url":"https://api.github.com/users/Yangqing/repos","events_url":"https://api.github.com/users/Yangqing/events{/privacy}","received_events_url":"https://api.github.com/users/Yangqing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T08:05:29Z","updated_at":"2017-02-04T08:05:29Z","author_association":"NONE","body":"Honestly speaking, I would vote for a C interface, not because I personally like C, but because over the years, I have seen a lot of opinions around C++. Tianqi's argument about ABI compatibility is one prominent reason for using C as a compatibility layer. Also, languages such as Python and Torch would need a C FFI in any case, and having C++ on top of C is definitely better than having C on top of C++.\r\n\r\nAnd the heavy use of templates, especially template metaprogramming (I am sure we are not talking about this here, but FWIW) is also pretty controversial. One can find a lot of similar cases in the argument for and against Eigen actually.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427535/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427751","html_url":"https://github.com/apache/mxnet/issues/4664#issuecomment-277427751","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4664","id":277427751,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyNzc1MQ==","user":{"login":"hengck23","id":5112846,"node_id":"MDQ6VXNlcjUxMTI4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/5112846?v=4","gravatar_id":"","url":"https://api.github.com/users/hengck23","html_url":"https://github.com/hengck23","followers_url":"https://api.github.com/users/hengck23/followers","following_url":"https://api.github.com/users/hengck23/following{/other_user}","gists_url":"https://api.github.com/users/hengck23/gists{/gist_id}","starred_url":"https://api.github.com/users/hengck23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hengck23/subscriptions","organizations_url":"https://api.github.com/users/hengck23/orgs","repos_url":"https://api.github.com/users/hengck23/repos","events_url":"https://api.github.com/users/hengck23/events{/privacy}","received_events_url":"https://api.github.com/users/hengck23/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T08:10:05Z","updated_at":"2017-02-04T08:10:05Z","author_association":"NONE","body":"@yudeshui \r\nHi, I am trying to make caffe scale layer from mxnet operation.\r\nIn particular, i can use:\r\n```\r\nnet = mx.symbol.broadcast_mul(net, gamma)\r\nnet = mx.symbol.broadcast_plus(net, beta)\r\n```\r\nHowever,  if i use net.list_arguments(),  gamma and beta are not in the list.\r\n(meaning that gamma,beta are not learn-able parameters)\r\n\r\nDo you know how to solve it?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427864","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277427864","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277427864,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyNzg2NA==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T08:13:11Z","updated_at":"2017-02-04T08:14:38Z","author_association":"CONTRIBUTOR","body":"It depends on the purpose of the library.\r\n\r\nIf you want to use it standalone, then having C interface is better.\r\n\r\nBut if you want to use it through frame works, C++ is much more convenient because you can pass the Tensor object around in your framework and eventually replace your own data blob with a standard Tensor. Using C interface means you have to convert to/from your data blob to Tensor repeatedly in each operator. It's slow and need a ton of wrapper code. For small operators its not worth doing.\r\n\r\nTake cub https://github.com/NVlabs/cub for an example, it's a header only library with c++ interface.\r\n\r\nTorch's internal THC also uses C++. It's only the interface that's pure C.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427931","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277427931","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277427931,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyNzkzMQ==","user":{"login":"Yangqing","id":551151,"node_id":"MDQ6VXNlcjU1MTE1MQ==","avatar_url":"https://avatars.githubusercontent.com/u/551151?v=4","gravatar_id":"","url":"https://api.github.com/users/Yangqing","html_url":"https://github.com/Yangqing","followers_url":"https://api.github.com/users/Yangqing/followers","following_url":"https://api.github.com/users/Yangqing/following{/other_user}","gists_url":"https://api.github.com/users/Yangqing/gists{/gist_id}","starred_url":"https://api.github.com/users/Yangqing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yangqing/subscriptions","organizations_url":"https://api.github.com/users/Yangqing/orgs","repos_url":"https://api.github.com/users/Yangqing/repos","events_url":"https://api.github.com/users/Yangqing/events{/privacy}","received_events_url":"https://api.github.com/users/Yangqing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T08:14:52Z","updated_at":"2017-02-04T08:14:52Z","author_association":"NONE","body":"Anyway, just my 2 cents :)","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427980","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277427980","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277427980,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyNzk4MA==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T08:16:10Z","updated_at":"2017-02-04T08:17:22Z","author_association":"CONTRIBUTOR","body":"I also don't like template metaprogramming, because it's a pain to maintain. Very few people can understand it.\r\n\r\nBut simple template arguments like `template <typename Device, typename ndim>` is OK","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277427980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277428462","html_url":"https://github.com/apache/mxnet/issues/4841#issuecomment-277428462","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4841","id":277428462,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyODQ2Mg==","user":{"login":"lightningsoon","id":20694908,"node_id":"MDQ6VXNlcjIwNjk0OTA4","avatar_url":"https://avatars.githubusercontent.com/u/20694908?v=4","gravatar_id":"","url":"https://api.github.com/users/lightningsoon","html_url":"https://github.com/lightningsoon","followers_url":"https://api.github.com/users/lightningsoon/followers","following_url":"https://api.github.com/users/lightningsoon/following{/other_user}","gists_url":"https://api.github.com/users/lightningsoon/gists{/gist_id}","starred_url":"https://api.github.com/users/lightningsoon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lightningsoon/subscriptions","organizations_url":"https://api.github.com/users/lightningsoon/orgs","repos_url":"https://api.github.com/users/lightningsoon/repos","events_url":"https://api.github.com/users/lightningsoon/events{/privacy}","received_events_url":"https://api.github.com/users/lightningsoon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T08:26:52Z","updated_at":"2017-02-04T08:26:52Z","author_association":"NONE","body":"Emm...Are you ok?\r\nI had the same problem.Could you please tell me how to deal with the things?\r\n\r\nLook this step:\r\n\r\nbash script/vgg_voc07.sh 0\r\n\r\nreply:\r\nTraceback (most recent call last):\r\n  File \"train_end2end.py\", line 8, in <module>\r\n    from rcnn.symbol import *\r\n  File \"F:\\mxnet\\example\\rcnn\\rcnn\\symbol\\__init__.py\", line 1, in <module>\r\n    from symbol_vgg import *\r\n  File \"F:\\mxnet\\example\\rcnn\\rcnn\\symbol\\symbol_vgg.py\", line 2, in <module>\r\n    import proposal\r\n  File \"F:\\mxnet\\example\\rcnn\\rcnn\\symbol\\proposal.py\", line 11, in <module>\r\n    from rcnn.processing.bbox_transform import bbox_pred, clip_boxes\r\n  File \"F:\\mxnet\\example\\rcnn\\rcnn\\processing\\bbox_transform.py\", line 2, in <module>\r\n    from ..cython.bbox import bbox_overlaps_cython\r\nImportError: No module named bbox\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 4, in <module>\r\n    from rcnn.tools.test_rcnn import test_rcnn\r\n  File \"F:\\mxnet\\example\\rcnn\\rcnn\\tools\\test_rcnn.py\", line 6, in <module>\r\n    from ..symbol import *\r\n  File \"F:\\mxnet\\example\\rcnn\\rcnn\\symbol\\__init__.py\", line 1, in <module>\r\n    from symbol_vgg import *\r\n  File \"F:\\mxnet\\example\\rcnn\\rcnn\\symbol\\symbol_vgg.py\", line 2, in <module>\r\n    import proposal\r\n  File \"F:\\mxnet\\example\\rcnn\\rcnn\\symbol\\proposal.py\", line 11, in <module>\r\n    from rcnn.processing.bbox_transform import bbox_pred, clip_boxes\r\n  File \"F:\\mxnet\\example\\rcnn\\rcnn\\processing\\bbox_transform.py\", line 2, in <module>\r\n    from ..cython.bbox import bbox_overlaps_cython\r\nImportError: No module named bbox\r\n\r\nWhy closed the issue? @Gelu74 @piiswrong ","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277428462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277428603","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277428603","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277428603,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyODYwMw==","user":{"login":"soumith","id":1310570,"node_id":"MDQ6VXNlcjEzMTA1NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1310570?v=4","gravatar_id":"","url":"https://api.github.com/users/soumith","html_url":"https://github.com/soumith","followers_url":"https://api.github.com/users/soumith/followers","following_url":"https://api.github.com/users/soumith/following{/other_user}","gists_url":"https://api.github.com/users/soumith/gists{/gist_id}","starred_url":"https://api.github.com/users/soumith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/soumith/subscriptions","organizations_url":"https://api.github.com/users/soumith/orgs","repos_url":"https://api.github.com/users/soumith/repos","events_url":"https://api.github.com/users/soumith/events{/privacy}","received_events_url":"https://api.github.com/users/soumith/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T08:29:54Z","updated_at":"2017-02-04T08:29:54Z","author_association":"NONE","body":"I'm against c++ for the abi. let's stick to C and build a c++ wrapper on top if needed. Hourglass interfaces are great ","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277428603/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277430495","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277430495","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277430495,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQzMDQ5NQ==","user":{"login":"bhack","id":1710528,"node_id":"MDQ6VXNlcjE3MTA1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/1710528?v=4","gravatar_id":"","url":"https://api.github.com/users/bhack","html_url":"https://github.com/bhack","followers_url":"https://api.github.com/users/bhack/followers","following_url":"https://api.github.com/users/bhack/following{/other_user}","gists_url":"https://api.github.com/users/bhack/gists{/gist_id}","starred_url":"https://api.github.com/users/bhack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhack/subscriptions","organizations_url":"https://api.github.com/users/bhack/orgs","repos_url":"https://api.github.com/users/bhack/repos","events_url":"https://api.github.com/users/bhack/events{/privacy}","received_events_url":"https://api.github.com/users/bhack/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T09:10:01Z","updated_at":"2017-02-04T09:10:01Z","author_association":"NONE","body":"Just to add [more info](https://community.kde.org/Policies/Binary_Compatibility_Issues_With_C%2B%2B) on the ABI compatibility issue.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277430495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277430575","html_url":"https://github.com/apache/mxnet/issues/4827#issuecomment-277430575","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4827","id":277430575,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQzMDU3NQ==","user":{"login":"nvoliver","id":24713846,"node_id":"MDQ6VXNlcjI0NzEzODQ2","avatar_url":"https://avatars.githubusercontent.com/u/24713846?v=4","gravatar_id":"","url":"https://api.github.com/users/nvoliver","html_url":"https://github.com/nvoliver","followers_url":"https://api.github.com/users/nvoliver/followers","following_url":"https://api.github.com/users/nvoliver/following{/other_user}","gists_url":"https://api.github.com/users/nvoliver/gists{/gist_id}","starred_url":"https://api.github.com/users/nvoliver/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nvoliver/subscriptions","organizations_url":"https://api.github.com/users/nvoliver/orgs","repos_url":"https://api.github.com/users/nvoliver/repos","events_url":"https://api.github.com/users/nvoliver/events{/privacy}","received_events_url":"https://api.github.com/users/nvoliver/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T09:11:45Z","updated_at":"2017-02-04T09:11:45Z","author_association":"NONE","body":"Indeed, same for me. See log below.\r\nI freshly compiled the master branch today on Ubuntu 16.04 amd64.\r\n\r\n```\r\nusername@ubuntu:~/Development/mxnet/example/image-classification$ python benchmark_score.py \r\nINFO:root:network: alexnet\r\nINFO:root:device: gpu(0)\r\n[09:58:43] /home/username/Development/mxnet/dmlc-core/include/dmlc/./logging.h:300: [09:58:43] src/operator/./pooling-inl.h:208: Check failed: param_.kernel[0] <= dshape[2] + 2 * param_.pad[0] kernel size (7) exceeds input (6 padded to 6)\r\n\r\nStack trace returned 48 entries:\r\n[bt] (0) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(_ZN4dmlc15LogMessageFatalD1Ev+0x3c) [0x7f8d1ede2dec]\r\n[bt] (1) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(_ZNK5mxnet2op11PoolingProp10InferShapeEPSt6vectorIN4nnvm6TShapeESaIS4_EES7_S7_+0x4b5) [0x7f8d1f627aa5]\r\n[bt] (2) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(+0xdbee32) [0x7f8d1f595e32]\r\n[bt] (3) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(+0x1baed50) [0x7f8d20385d50]\r\n[bt] (4) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(+0x1bb026a) [0x7f8d2038726a]\r\n[bt] (5) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(+0x1bb11ad) [0x7f8d203881ad]\r\n[bt] (6) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(_ZN4nnvm11ApplyPassesENS_5GraphERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE+0x32b) [0x7f8d203ad3ab]\r\n[bt] (7) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(_ZN4nnvm9ApplyPassENS_5GraphERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3c9) [0x7f8d1f8a4509]\r\n[bt] (8) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(_ZN4nnvm4pass10InferShapeENS_5GraphESt6vectorINS_6TShapeESaIS3_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1e5) [0x7f8d1f8a9be5]\r\n[bt] (9) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(MXSymbolInferShape+0xdeb) [0x7f8d1f89d44b]\r\n[bt] (10) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call_unix64+0x4c) [0x7f8d3dbcce40]\r\n[bt] (11) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call+0x2eb) [0x7f8d3dbcc8ab]\r\n[bt] (12) /usr/lib/python2.7/lib-dynload/_ctypes.x86_64-linux-gnu.so(_ctypes_callproc+0x48f) [0x7f8d3dddc3df]\r\n[bt] (13) /usr/lib/python2.7/lib-dynload/_ctypes.x86_64-linux-gnu.so(+0x11d82) [0x7f8d3dde0d82]\r\n[bt] (14) python(PyObject_Call+0x43) [0x4b0cb3]\r\n[bt] (15) python(PyEval_EvalFrameEx+0x5faf) [0x4c9faf]\r\n[bt] (16) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (17) python() [0x4de8b8]\r\n[bt] (18) python(PyObject_Call+0x43) [0x4b0cb3]\r\n[bt] (19) python(PyEval_EvalFrameEx+0x2ad1) [0x4c6ad1]\r\n[bt] (20) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (21) python() [0x4de8b8]\r\n[bt] (22) python(PyObject_Call+0x43) [0x4b0cb3]\r\n[bt] (23) python(PyEval_EvalFrameEx+0x2ad1) [0x4c6ad1]\r\n[bt] (24) python(PyEval_EvalFrameEx+0x5d8f) [0x4c9d8f]\r\n[bt] (25) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (26) python(PyEval_EvalFrameEx+0x6099) [0x4ca099]\r\n[bt] (27) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (28) python() [0x4de8b8]\r\n[bt] (29) python(PyObject_Call+0x43) [0x4b0cb3]\r\n[bt] (30) python() [0x4f492e]\r\n[bt] (31) python(PyObject_Call+0x43) [0x4b0cb3]\r\n[bt] (32) python() [0x4f46a7]\r\n[bt] (33) python() [0x4b670c]\r\n[bt] (34) python(PyObject_Call+0x43) [0x4b0cb3]\r\n[bt] (35) python(PyEval_EvalFrameEx+0x5faf) [0x4c9faf]\r\n[bt] (36) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (37) python(PyEval_EvalFrameEx+0x6099) [0x4ca099]\r\n[bt] (38) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (39) python(PyEval_EvalFrameEx+0x68d1) [0x4ca8d1]\r\n[bt] (40) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (41) python(PyEval_EvalCode+0x19) [0x4c2509]\r\n[bt] (42) python() [0x4f1def]\r\n[bt] (43) python(PyRun_FileExFlags+0x82) [0x4ec652]\r\n[bt] (44) python(PyRun_SimpleFileExFlags+0x191) [0x4eae31]\r\n[bt] (45) python(Py_Main+0x68a) [0x49e14a]\r\n[bt] (46) /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0) [0x7f8d3ed91830]\r\n[bt] (47) python(_start+0x29) [0x49d9d9]\r\n\r\ninfer_shape error. Arguments:\r\n  data: (1, 3, 224, 224)\r\nTraceback (most recent call last):\r\n  File \"benchmark_score.py\", line 63, in <module>\r\n    speed = score(network=net, dev=d, batch_size=b, num_batches=10)\r\n  File \"benchmark_score.py\", line 31, in score\r\n    data_shapes      = data_shape)\r\n  File \"/usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/module/module.py\", line 342, in bind\r\n    grad_req=grad_req)\r\n  File \"/usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/module/executor_group.py\", line 187, in __init__\r\n    self.bind_exec(data_shapes, label_shapes, shared_group)\r\n  File \"/usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/module/executor_group.py\", line 279, in bind_exec\r\n    shared_group))\r\n  File \"/usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/module/executor_group.py\", line 483, in _bind_ith_exec\r\n    arg_shapes, _, aux_shapes = self.symbol.infer_shape(**input_shapes)\r\n  File \"/usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/symbol.py\", line 538, in infer_shape\r\n    return self._infer_shape_impl(False, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/symbol.py\", line 605, in _infer_shape_impl\r\n    ctypes.byref(complete)))\r\n  File \"/usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/base.py\", line 75, in check_call\r\n    raise MXNetError(py_str(_LIB.MXGetLastError()))\r\nmxnet.base.MXNetError: Error in operator pooling4: [09:58:43] src/operator/./pooling-inl.h:208: Check failed: param_.kernel[0] <= dshape[2] + 2 * param_.pad[0] kernel size (7) exceeds input (6 padded to 6)\r\n\r\nStack trace returned 48 entries:\r\n[bt] (0) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(_ZN4dmlc15LogMessageFatalD1Ev+0x3c) [0x7f8d1ede2dec]\r\n[bt] (1) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(_ZNK5mxnet2op11PoolingProp10InferShapeEPSt6vectorIN4nnvm6TShapeESaIS4_EES7_S7_+0x4b5) [0x7f8d1f627aa5]\r\n[bt] (2) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(+0xdbee32) [0x7f8d1f595e32]\r\n[bt] (3) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(+0x1baed50) [0x7f8d20385d50]\r\n[bt] (4) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(+0x1bb026a) [0x7f8d2038726a]\r\n[bt] (5) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(+0x1bb11ad) [0x7f8d203881ad]\r\n[bt] (6) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(_ZN4nnvm11ApplyPassesENS_5GraphERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE+0x32b) [0x7f8d203ad3ab]\r\n[bt] (7) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(_ZN4nnvm9ApplyPassENS_5GraphERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3c9) [0x7f8d1f8a4509]\r\n[bt] (8) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(_ZN4nnvm4pass10InferShapeENS_5GraphESt6vectorINS_6TShapeESaIS3_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1e5) [0x7f8d1f8a9be5]\r\n[bt] (9) /usr/local/lib/python2.7/dist-packages/mxnet-0.9.3-py2.7.egg/mxnet/libmxnet.so(MXSymbolInferShape+0xdeb) [0x7f8d1f89d44b]\r\n[bt] (10) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call_unix64+0x4c) [0x7f8d3dbcce40]\r\n[bt] (11) /usr/lib/x86_64-linux-gnu/libffi.so.6(ffi_call+0x2eb) [0x7f8d3dbcc8ab]\r\n[bt] (12) /usr/lib/python2.7/lib-dynload/_ctypes.x86_64-linux-gnu.so(_ctypes_callproc+0x48f) [0x7f8d3dddc3df]\r\n[bt] (13) /usr/lib/python2.7/lib-dynload/_ctypes.x86_64-linux-gnu.so(+0x11d82) [0x7f8d3dde0d82]\r\n[bt] (14) python(PyObject_Call+0x43) [0x4b0cb3]\r\n[bt] (15) python(PyEval_EvalFrameEx+0x5faf) [0x4c9faf]\r\n[bt] (16) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (17) python() [0x4de8b8]\r\n[bt] (18) python(PyObject_Call+0x43) [0x4b0cb3]\r\n[bt] (19) python(PyEval_EvalFrameEx+0x2ad1) [0x4c6ad1]\r\n[bt] (20) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (21) python() [0x4de8b8]\r\n[bt] (22) python(PyObject_Call+0x43) [0x4b0cb3]\r\n[bt] (23) python(PyEval_EvalFrameEx+0x2ad1) [0x4c6ad1]\r\n[bt] (24) python(PyEval_EvalFrameEx+0x5d8f) [0x4c9d8f]\r\n[bt] (25) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (26) python(PyEval_EvalFrameEx+0x6099) [0x4ca099]\r\n[bt] (27) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (28) python() [0x4de8b8]\r\n[bt] (29) python(PyObject_Call+0x43) [0x4b0cb3]\r\n[bt] (30) python() [0x4f492e]\r\n[bt] (31) python(PyObject_Call+0x43) [0x4b0cb3]\r\n[bt] (32) python() [0x4f46a7]\r\n[bt] (33) python() [0x4b670c]\r\n[bt] (34) python(PyObject_Call+0x43) [0x4b0cb3]\r\n[bt] (35) python(PyEval_EvalFrameEx+0x5faf) [0x4c9faf]\r\n[bt] (36) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (37) python(PyEval_EvalFrameEx+0x6099) [0x4ca099]\r\n[bt] (38) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (39) python(PyEval_EvalFrameEx+0x68d1) [0x4ca8d1]\r\n[bt] (40) python(PyEval_EvalCodeEx+0x255) [0x4c2765]\r\n[bt] (41) python(PyEval_EvalCode+0x19) [0x4c2509]\r\n[bt] (42) python() [0x4f1def]\r\n[bt] (43) python(PyRun_FileExFlags+0x82) [0x4ec652]\r\n[bt] (44) python(PyRun_SimpleFileExFlags+0x191) [0x4eae31]\r\n[bt] (45) python(Py_Main+0x68a) [0x49e14a]\r\n[bt] (46) /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0) [0x7f8d3ed91830]\r\n[bt] (47) python(_start+0x29) [0x49d9d9]\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277430575/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277430814","html_url":"https://github.com/apache/mxnet/issues/4833#issuecomment-277430814","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4833","id":277430814,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQzMDgxNA==","user":{"login":"haimeh","id":25471842,"node_id":"MDQ6VXNlcjI1NDcxODQy","avatar_url":"https://avatars.githubusercontent.com/u/25471842?v=4","gravatar_id":"","url":"https://api.github.com/users/haimeh","html_url":"https://github.com/haimeh","followers_url":"https://api.github.com/users/haimeh/followers","following_url":"https://api.github.com/users/haimeh/following{/other_user}","gists_url":"https://api.github.com/users/haimeh/gists{/gist_id}","starred_url":"https://api.github.com/users/haimeh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/haimeh/subscriptions","organizations_url":"https://api.github.com/users/haimeh/orgs","repos_url":"https://api.github.com/users/haimeh/repos","events_url":"https://api.github.com/users/haimeh/events{/privacy}","received_events_url":"https://api.github.com/users/haimeh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T09:17:08Z","updated_at":"2017-02-04T09:17:08Z","author_association":"NONE","body":"I think I may be experiencing a related problem? Part way through compiling, I get several variations of the the error:\r\n...\\mxnet\\src\\operator\\tensor\\./indexing_op-inl.cuh(84): error : identifier \"__shfl_xor\" is undefined\r\nand the build fails to generate the libmxnet.dll\r\nHowever the gencode arch arguments are not missing (as shown below) and trying a few variations did not help, which was the only possibly related solution that I found on stack exchange.\r\nCUDA_ARCH := -gencode arch=compute_30,code=sm_30 \r\n\t\t-gencode arch=compute_35,code=sm_35 \\\r\n\t\t-gencode arch=compute_50,code=sm_50 \\\r\n\t\t-gencode arch=compute_50,code=compute_50\r\n\r\nDone Using:\r\nlatest master branch\r\nVS 2013\r\nWindows 10\r\nCUDA 8\r\nCuDNN 8\r\nOpenBLAS\r\nOpenCV","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277430814/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277431109","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277431109","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277431109,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQzMTEwOQ==","user":{"login":"bhack","id":1710528,"node_id":"MDQ6VXNlcjE3MTA1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/1710528?v=4","gravatar_id":"","url":"https://api.github.com/users/bhack","html_url":"https://github.com/bhack","followers_url":"https://api.github.com/users/bhack/followers","following_url":"https://api.github.com/users/bhack/following{/other_user}","gists_url":"https://api.github.com/users/bhack/gists{/gist_id}","starred_url":"https://api.github.com/users/bhack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhack/subscriptions","organizations_url":"https://api.github.com/users/bhack/orgs","repos_url":"https://api.github.com/users/bhack/repos","events_url":"https://api.github.com/users/bhack/events{/privacy}","received_events_url":"https://api.github.com/users/bhack/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T09:23:29Z","updated_at":"2017-02-04T09:23:29Z","author_association":"NONE","body":"A resource for [Hourglass](https://github.com/CppCon/CppCon2014/tree/master/Presentations/Hourglass%20Interfaces%20for%20C%2B%2B%20APIs)","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277431109/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277431212","html_url":"https://github.com/apache/mxnet/issues/4841#issuecomment-277431212","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4841","id":277431212,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQzMTIxMg==","user":{"login":"lightningsoon","id":20694908,"node_id":"MDQ6VXNlcjIwNjk0OTA4","avatar_url":"https://avatars.githubusercontent.com/u/20694908?v=4","gravatar_id":"","url":"https://api.github.com/users/lightningsoon","html_url":"https://github.com/lightningsoon","followers_url":"https://api.github.com/users/lightningsoon/followers","following_url":"https://api.github.com/users/lightningsoon/following{/other_user}","gists_url":"https://api.github.com/users/lightningsoon/gists{/gist_id}","starred_url":"https://api.github.com/users/lightningsoon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lightningsoon/subscriptions","organizations_url":"https://api.github.com/users/lightningsoon/orgs","repos_url":"https://api.github.com/users/lightningsoon/repos","events_url":"https://api.github.com/users/lightningsoon/events{/privacy}","received_events_url":"https://api.github.com/users/lightningsoon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T09:25:37Z","updated_at":"2017-02-04T09:25:37Z","author_association":"NONE","body":"That's all right.\r\nI found ..cython.bbox.pyx and setup.py\r\nthen I open cmd and input `python setup.py install`\r\nget another error:\r\nEnvironmentError: The CUDA nvcc path could not be located in C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\bin\\nvcc\r\nbut I really don't have folder-nvcc,I have nvcc.exe and nvcc.profile\r\n\r\nwho knows where is the folder?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277431212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277431393","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277431393","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277431393,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQzMTM5Mw==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T09:28:45Z","updated_at":"2017-02-04T09:40:08Z","author_association":"CONTRIBUTOR","body":"Just to make sure every one is on the same page:\r\n1. How do you think this lib will be used? From framework backend? From frontend? Header only? Compiled together with framework? Compiled separately and linked to framework?\r\n2. ABI is only relevant if you want to distribute this lib as binaries and link it against frameworks dynamically. What's the use case for this?\r\n3. What kinds of operators do you think this lib should cover? elementwise? broadcast/reduce? NN operators?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277431393/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277431545","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277431545","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277431545,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQzMTU0NQ==","user":{"login":"bhack","id":1710528,"node_id":"MDQ6VXNlcjE3MTA1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/1710528?v=4","gravatar_id":"","url":"https://api.github.com/users/bhack","html_url":"https://github.com/bhack","followers_url":"https://api.github.com/users/bhack/followers","following_url":"https://api.github.com/users/bhack/following{/other_user}","gists_url":"https://api.github.com/users/bhack/gists{/gist_id}","starred_url":"https://api.github.com/users/bhack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhack/subscriptions","organizations_url":"https://api.github.com/users/bhack/orgs","repos_url":"https://api.github.com/users/bhack/repos","events_url":"https://api.github.com/users/bhack/events{/privacy}","received_events_url":"https://api.github.com/users/bhack/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T09:32:00Z","updated_at":"2017-02-04T09:32:00Z","author_association":"NONE","body":"I agree with @piiswrong. Probably an agreement on this kind of general boundings it is required.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277431545/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277431769","html_url":"https://github.com/apache/mxnet/issues/4833#issuecomment-277431769","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4833","id":277431769,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQzMTc2OQ==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T09:36:55Z","updated_at":"2017-02-04T09:37:09Z","author_association":"CONTRIBUTOR","body":"windows build uses cmake, not config.mk. You need to change cmake options\r\n@cjolivier01 I though you did this in a PR?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277431769/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277431851","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277431851","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277431851,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQzMTg1MQ==","user":{"login":"kernel8liang","id":4519261,"node_id":"MDQ6VXNlcjQ1MTkyNjE=","avatar_url":"https://avatars.githubusercontent.com/u/4519261?v=4","gravatar_id":"","url":"https://api.github.com/users/kernel8liang","html_url":"https://github.com/kernel8liang","followers_url":"https://api.github.com/users/kernel8liang/followers","following_url":"https://api.github.com/users/kernel8liang/following{/other_user}","gists_url":"https://api.github.com/users/kernel8liang/gists{/gist_id}","starred_url":"https://api.github.com/users/kernel8liang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kernel8liang/subscriptions","organizations_url":"https://api.github.com/users/kernel8liang/orgs","repos_url":"https://api.github.com/users/kernel8liang/repos","events_url":"https://api.github.com/users/kernel8liang/events{/privacy}","received_events_url":"https://api.github.com/users/kernel8liang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T09:38:26Z","updated_at":"2017-02-04T09:38:26Z","author_association":"CONTRIBUTOR","body":"this let me recall my [first boss](http://weibo.com/chen2rong2?from=profile&wvr=6), but this is great.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277431851/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277441820","html_url":"https://github.com/apache/mxnet/issues/4314#issuecomment-277441820","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4314","id":277441820,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ0MTgyMA==","user":{"login":"moveforever","id":5248288,"node_id":"MDQ6VXNlcjUyNDgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/5248288?v=4","gravatar_id":"","url":"https://api.github.com/users/moveforever","html_url":"https://github.com/moveforever","followers_url":"https://api.github.com/users/moveforever/followers","following_url":"https://api.github.com/users/moveforever/following{/other_user}","gists_url":"https://api.github.com/users/moveforever/gists{/gist_id}","starred_url":"https://api.github.com/users/moveforever/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/moveforever/subscriptions","organizations_url":"https://api.github.com/users/moveforever/orgs","repos_url":"https://api.github.com/users/moveforever/repos","events_url":"https://api.github.com/users/moveforever/events{/privacy}","received_events_url":"https://api.github.com/users/moveforever/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T12:21:40Z","updated_at":"2017-02-04T12:21:40Z","author_association":"CONTRIBUTOR","body":"in some machines, there existed some problems about CSVIter","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277441820/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277447580","html_url":"https://github.com/apache/mxnet/pull/4865#issuecomment-277447580","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4865","id":277447580,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ0NzU4MA==","user":{"login":"xlvector","id":100203,"node_id":"MDQ6VXNlcjEwMDIwMw==","avatar_url":"https://avatars.githubusercontent.com/u/100203?v=4","gravatar_id":"","url":"https://api.github.com/users/xlvector","html_url":"https://github.com/xlvector","followers_url":"https://api.github.com/users/xlvector/followers","following_url":"https://api.github.com/users/xlvector/following{/other_user}","gists_url":"https://api.github.com/users/xlvector/gists{/gist_id}","starred_url":"https://api.github.com/users/xlvector/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xlvector/subscriptions","organizations_url":"https://api.github.com/users/xlvector/orgs","repos_url":"https://api.github.com/users/xlvector/repos","events_url":"https://api.github.com/users/xlvector/events{/privacy}","received_events_url":"https://api.github.com/users/xlvector/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T13:58:09Z","updated_at":"2017-02-04T13:58:09Z","author_association":"CONTRIBUTOR","body":"LGTM, @catalystfrank thanks.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277447580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277448296","html_url":"https://github.com/apache/mxnet/issues/4833#issuecomment-277448296","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4833","id":277448296,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ0ODI5Ng==","user":{"login":"cjolivier01","id":11234557,"node_id":"MDQ6VXNlcjExMjM0NTU3","avatar_url":"https://avatars.githubusercontent.com/u/11234557?v=4","gravatar_id":"","url":"https://api.github.com/users/cjolivier01","html_url":"https://github.com/cjolivier01","followers_url":"https://api.github.com/users/cjolivier01/followers","following_url":"https://api.github.com/users/cjolivier01/following{/other_user}","gists_url":"https://api.github.com/users/cjolivier01/gists{/gist_id}","starred_url":"https://api.github.com/users/cjolivier01/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjolivier01/subscriptions","organizations_url":"https://api.github.com/users/cjolivier01/orgs","repos_url":"https://api.github.com/users/cjolivier01/repos","events_url":"https://api.github.com/users/cjolivier01/events{/privacy}","received_events_url":"https://api.github.com/users/cjolivier01/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T14:11:55Z","updated_at":"2017-02-04T14:11:55Z","author_association":"MEMBER","body":"Yes, please pull latest for MShadow, which has a revised Cuda.cmake which omits flavors below 30. ","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277448296/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277458512","html_url":"https://github.com/apache/mxnet/issues/4833#issuecomment-277458512","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4833","id":277458512,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ1ODUxMg==","user":{"login":"cjolivier01","id":11234557,"node_id":"MDQ6VXNlcjExMjM0NTU3","avatar_url":"https://avatars.githubusercontent.com/u/11234557?v=4","gravatar_id":"","url":"https://api.github.com/users/cjolivier01","html_url":"https://github.com/cjolivier01","followers_url":"https://api.github.com/users/cjolivier01/followers","following_url":"https://api.github.com/users/cjolivier01/following{/other_user}","gists_url":"https://api.github.com/users/cjolivier01/gists{/gist_id}","starred_url":"https://api.github.com/users/cjolivier01/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjolivier01/subscriptions","organizations_url":"https://api.github.com/users/cjolivier01/orgs","repos_url":"https://api.github.com/users/cjolivier01/repos","events_url":"https://api.github.com/users/cjolivier01/events{/privacy}","received_events_url":"https://api.github.com/users/cjolivier01/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T16:47:31Z","updated_at":"2017-02-04T16:47:31Z","author_association":"MEMBER","body":"Around the middle of the mshadow/cmake/Cuda.cmake, there's some code (shown below). You can also explicitly set the architectures to build by defining CUDA_ARCH_ALL for cmake.  On my machine, reducing the number of architectures dramatically shortens nvcc compile times.\r\n\r\nif(CUDA_ARCH_ALL)\r\n  set(mshadow_known_gpu_archs \"${CUDA_ARCH_ALL}\")\r\nelse()\r\n  if(${CUDA_VERSION} GREATER 7.5)\r\n    set(mshadow_known_gpu_archs \"30 35 50 52 60 61\")\r\n  else()\r\n    set(mshadow_known_gpu_archs \"30 35 50 52\")\r\n  endif()\r\nendif()","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277458512/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277459605","html_url":"https://github.com/apache/mxnet/issues/4876#issuecomment-277459605","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4876","id":277459605,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ1OTYwNQ==","user":{"login":"sbodenstein","id":10237782,"node_id":"MDQ6VXNlcjEwMjM3Nzgy","avatar_url":"https://avatars.githubusercontent.com/u/10237782?v=4","gravatar_id":"","url":"https://api.github.com/users/sbodenstein","html_url":"https://github.com/sbodenstein","followers_url":"https://api.github.com/users/sbodenstein/followers","following_url":"https://api.github.com/users/sbodenstein/following{/other_user}","gists_url":"https://api.github.com/users/sbodenstein/gists{/gist_id}","starred_url":"https://api.github.com/users/sbodenstein/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sbodenstein/subscriptions","organizations_url":"https://api.github.com/users/sbodenstein/orgs","repos_url":"https://api.github.com/users/sbodenstein/repos","events_url":"https://api.github.com/users/sbodenstein/events{/privacy}","received_events_url":"https://api.github.com/users/sbodenstein/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T17:03:09Z","updated_at":"2017-02-04T17:03:09Z","author_association":"CONTRIBUTOR","body":"Yes, that is the issue. One solution for `SequenceMask` is to migrate this op to NNVM interface, and have access to `set_attr_parser` where `std::stof` can we used. First, this won't cause any problems, right? Second, is this solution preferred to overloading ops etc?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277459605/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277459660","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277459660","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277459660,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ1OTY2MA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T17:04:12Z","updated_at":"2017-02-04T17:15:33Z","author_association":"MEMBER","body":"Here is my opinion on @piiswrong 's points, to summarized, I think the advantage of such shared belief is not only for sharing between projects, but also encourage others to help.\r\n\r\n- This library will be used from back-end,  the standard data structure will be header only.\r\n   - Additional library can be compiled and linked optionally\r\n   - This is important to encourage not only the participant in this issue to conform to the standard, but also encourage third party vendors to do so, and expose binaries.\r\n-  ABI compatibility is great if some of the library can be compiled and linked separately for vendors to implement some of the pre-defined interfaces.\r\n-  I think the basic agreement is on the common tensor structure, plus the categorization principle of the operators. \r\n   - Ideally I think it should cover ewise, broadcast/reduce and NN\r\n   - We should also encourage implementers to conform to the same data structure, and possible recommended signatures,\r\n\r\nMy guess is that when there is sharing, there is interface and compatibility issue and we always need to consider what is the minimum interface out there.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277459660/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277462094","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277462094","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277462094,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ2MjA5NA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T17:43:07Z","updated_at":"2017-02-04T17:54:28Z","author_association":"MEMBER","body":"I agree with @piiswrong that it might be helpful to have everyone agree on certain things before we proceed.  One way to do so is each of us post a code snippet on what the data structure and interface should look like, then we summarize the points that need to be taken.\r\n\r\nOnce we have enough agreement on what the initial data structure and function signature look, we can open a repo and iterate from there.\r\n\r\nHere is my version of strawman's design(based on my summarization of majority opinion here), that summarizes some of the opinions in here.\r\n\r\n```c\r\ntypedef {\r\n  int device_id;\r\n  int device_type;\r\n} CContext;\r\n\r\ntypedef struct {\r\n   // alignment can be checked directly in address\r\n   void* data;\r\n   size_t ndim;\r\n   size_t* shape;\r\n   // can be nullptr, indicating compact version.\r\n   size_t* strides;\r\n   // device\r\n   CContext ctx;\r\n   // data type\r\n   int dtype;\r\n} CTensor;\r\n```\r\n\r\n```c\r\n// utilize thread local storage to get last error encountered.\r\nconst char* GetLastError();\r\n// used by implementer to set error message.\r\nvoid SetLastError(const char* msg);\r\n// C API returns 0 when success, -1 when failure, \r\n//  -2 indicating contiguous input is needed, ask user to convert before calling again\r\nint BroadCastAdd(CTensor* x, CTensor* y, CTensor* out);\r\n```","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277462094/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277462529","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277462529","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277462529,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ2MjUyOQ==","user":{"login":"bhack","id":1710528,"node_id":"MDQ6VXNlcjE3MTA1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/1710528?v=4","gravatar_id":"","url":"https://api.github.com/users/bhack","html_url":"https://github.com/bhack","followers_url":"https://api.github.com/users/bhack/followers","following_url":"https://api.github.com/users/bhack/following{/other_user}","gists_url":"https://api.github.com/users/bhack/gists{/gist_id}","starred_url":"https://api.github.com/users/bhack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhack/subscriptions","organizations_url":"https://api.github.com/users/bhack/orgs","repos_url":"https://api.github.com/users/bhack/repos","events_url":"https://api.github.com/users/bhack/events{/privacy}","received_events_url":"https://api.github.com/users/bhack/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T17:49:04Z","updated_at":"2017-02-04T17:49:04Z","author_association":"NONE","body":"Need we to handle not contiguos cases?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277462529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277462801","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277462801","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277462801,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ2MjgwMQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T17:53:12Z","updated_at":"2017-02-04T17:56:37Z","author_association":"MEMBER","body":"@bhack I would rather not in most cases, and ask user to get a contiguous version before calling(I guess @Yangqing shares the same opinion), but I think majority opinions here want stride as argument.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277462801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277462865","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277462865","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277462865,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ2Mjg2NQ==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T17:54:20Z","updated_at":"2017-02-04T17:54:20Z","author_association":"CONTRIBUTOR","body":"Suppose you have a c++ interface and source release from venders and now you need a new simple unary op, you can easily do it by defining a new inline function and pass it to template argument.\r\n\r\nBut if you have c interface and binary from vendor there is no way to do it yourself.\r\n\r\nI think we can push for source release from vendors. Nv and intel are already doing this with mkldnn and cub.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277462865/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277464792","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277464792","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277464792,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ2NDc5Mg==","user":{"login":"bhack","id":1710528,"node_id":"MDQ6VXNlcjE3MTA1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/1710528?v=4","gravatar_id":"","url":"https://api.github.com/users/bhack","html_url":"https://github.com/bhack","followers_url":"https://api.github.com/users/bhack/followers","following_url":"https://api.github.com/users/bhack/following{/other_user}","gists_url":"https://api.github.com/users/bhack/gists{/gist_id}","starred_url":"https://api.github.com/users/bhack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhack/subscriptions","organizations_url":"https://api.github.com/users/bhack/orgs","repos_url":"https://api.github.com/users/bhack/repos","events_url":"https://api.github.com/users/bhack/events{/privacy}","received_events_url":"https://api.github.com/users/bhack/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T18:25:12Z","updated_at":"2017-02-04T18:25:12Z","author_association":"NONE","body":"On c++ side I was also thinking what kind of limits we could have with a [plugin like cross-platform solution in c++](http://sourcey.com/building-a-simple-cpp-cross-platform-plugin-system/)","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277464792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277468677","html_url":"https://github.com/apache/mxnet/issues/4881#issuecomment-277468677","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4881","id":277468677,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ2ODY3Nw==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T19:26:53Z","updated_at":"2017-02-04T19:26:53Z","author_association":"CONTRIBUTOR","body":"you can use monitor (example/python-howto/monitor_weight) and put pdb breakpoint in stat function","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277468677/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277468861","html_url":"https://github.com/apache/mxnet/issues/4880#issuecomment-277468861","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4880","id":277468861,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ2ODg2MQ==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T19:28:35Z","updated_at":"2017-02-04T19:28:56Z","author_association":"CONTRIBUTOR","body":"(z>0)*w + (z<0)*w2","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277468861/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277474274","html_url":"https://github.com/apache/mxnet/issues/4876#issuecomment-277474274","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4876","id":277474274,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ3NDI3NA==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T20:22:16Z","updated_at":"2017-02-04T20:22:34Z","author_association":"CONTRIBUTOR","body":"That works too.\r\n\r\nOverriding has the benefit of fixing it for all ops. You can also specialize `FieldEntry<float>` and `FieldEntry<double>` to get the same behavior","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277474274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277475732","html_url":"https://github.com/apache/mxnet/pull/4617#issuecomment-277475732","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4617","id":277475732,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ3NTczMg==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T20:37:53Z","updated_at":"2017-02-04T20:37:53Z","author_association":"CONTRIBUTOR","body":"You don't have to attach mklblob to ndarray to only copy when .asnumpy() is called. You can keep mklblobs internal to executor and always copy to ndarray buffer for outputs and gradients","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277475732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277479233","html_url":"https://github.com/apache/mxnet/issues/4883#issuecomment-277479233","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4883","id":277479233,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ3OTIzMw==","user":{"login":"fhieber","id":2027990,"node_id":"MDQ6VXNlcjIwMjc5OTA=","avatar_url":"https://avatars.githubusercontent.com/u/2027990?v=4","gravatar_id":"","url":"https://api.github.com/users/fhieber","html_url":"https://github.com/fhieber","followers_url":"https://api.github.com/users/fhieber/followers","following_url":"https://api.github.com/users/fhieber/following{/other_user}","gists_url":"https://api.github.com/users/fhieber/gists{/gist_id}","starred_url":"https://api.github.com/users/fhieber/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fhieber/subscriptions","organizations_url":"https://api.github.com/users/fhieber/orgs","repos_url":"https://api.github.com/users/fhieber/repos","events_url":"https://api.github.com/users/fhieber/events{/privacy}","received_events_url":"https://api.github.com/users/fhieber/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T21:27:58Z","updated_at":"2017-02-04T21:27:58Z","author_association":"CONTRIBUTOR","body":"Same problem for me with latest commit. ","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277479233/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":1,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277480919","html_url":"https://github.com/apache/mxnet/issues/4861#issuecomment-277480919","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4861","id":277480919,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4MDkxOQ==","user":{"login":"thsavage","id":6432472,"node_id":"MDQ6VXNlcjY0MzI0NzI=","avatar_url":"https://avatars.githubusercontent.com/u/6432472?v=4","gravatar_id":"","url":"https://api.github.com/users/thsavage","html_url":"https://github.com/thsavage","followers_url":"https://api.github.com/users/thsavage/followers","following_url":"https://api.github.com/users/thsavage/following{/other_user}","gists_url":"https://api.github.com/users/thsavage/gists{/gist_id}","starred_url":"https://api.github.com/users/thsavage/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thsavage/subscriptions","organizations_url":"https://api.github.com/users/thsavage/orgs","repos_url":"https://api.github.com/users/thsavage/repos","events_url":"https://api.github.com/users/thsavage/events{/privacy}","received_events_url":"https://api.github.com/users/thsavage/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T21:56:17Z","updated_at":"2017-02-04T21:56:17Z","author_association":"NONE","body":"I've tried with both Windows and Mac.  The issue is that you haven't\ncompiled under the most recent version of the R engine. No worries.  It was\na convenient tool for teaching.  Lots of other tools.\n\nBest of luck as you expand.\n\nOn Thu, Feb 2, 2017 at 7:50 PM, Qiang Kou (KK) <notifications@github.com>\nwrote:\n\n> This is nothing with Rstudio.\n>\n> This is really because the Windows lib is old.\n>\n> Sorry that I have no access to any Windows machine now.\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dmlc/mxnet/issues/4861#issuecomment-277133073>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AGIm2Hptj2_N75DTaboqARr-XTQeLhOpks5rYnnTgaJpZM4L1v9y>\n> .\n>\n\n\n\n-- \nTim Savage\n917-439-3175\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277480919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277481329","html_url":"https://github.com/apache/mxnet/issues/4883#issuecomment-277481329","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4883","id":277481329,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4MTMyOQ==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T22:03:00Z","updated_at":"2017-02-04T22:03:00Z","author_association":"CONTRIBUTOR","body":"Should be fixed https://github.com/dmlc/mxnet/commit/90a0327dce08b7efbd7a5b6b60f10a4a16994098","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277481329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277481372","html_url":"https://github.com/apache/mxnet/issues/4861#issuecomment-277481372","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4861","id":277481372,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4MTM3Mg==","user":{"login":"thirdwing","id":1547093,"node_id":"MDQ6VXNlcjE1NDcwOTM=","avatar_url":"https://avatars.githubusercontent.com/u/1547093?v=4","gravatar_id":"","url":"https://api.github.com/users/thirdwing","html_url":"https://github.com/thirdwing","followers_url":"https://api.github.com/users/thirdwing/followers","following_url":"https://api.github.com/users/thirdwing/following{/other_user}","gists_url":"https://api.github.com/users/thirdwing/gists{/gist_id}","starred_url":"https://api.github.com/users/thirdwing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thirdwing/subscriptions","organizations_url":"https://api.github.com/users/thirdwing/orgs","repos_url":"https://api.github.com/users/thirdwing/repos","events_url":"https://api.github.com/users/thirdwing/events{/privacy}","received_events_url":"https://api.github.com/users/thirdwing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T22:03:34Z","updated_at":"2017-02-04T22:03:34Z","author_association":"CONTRIBUTOR","body":"The prebuilt pkgs for Windows and OSX are version 0.7.\r\n\r\nWe have fixed the error introduced by `DiagrammeR` in the version of 0.9.\r\n\r\nPersonally I don't have access to machines to update the prebuilt pkgs.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277481372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277481748","html_url":"https://github.com/apache/mxnet/issues/4883#issuecomment-277481748","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4883","id":277481748,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4MTc0OA==","user":{"login":"8Gitbrix","id":11791254,"node_id":"MDQ6VXNlcjExNzkxMjU0","avatar_url":"https://avatars.githubusercontent.com/u/11791254?v=4","gravatar_id":"","url":"https://api.github.com/users/8Gitbrix","html_url":"https://github.com/8Gitbrix","followers_url":"https://api.github.com/users/8Gitbrix/followers","following_url":"https://api.github.com/users/8Gitbrix/following{/other_user}","gists_url":"https://api.github.com/users/8Gitbrix/gists{/gist_id}","starred_url":"https://api.github.com/users/8Gitbrix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/8Gitbrix/subscriptions","organizations_url":"https://api.github.com/users/8Gitbrix/orgs","repos_url":"https://api.github.com/users/8Gitbrix/repos","events_url":"https://api.github.com/users/8Gitbrix/events{/privacy}","received_events_url":"https://api.github.com/users/8Gitbrix/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T22:09:52Z","updated_at":"2017-02-04T22:09:52Z","author_association":"NONE","body":"I reinstalled it and it works now. @piiswrong Thank you!","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277481748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277486961","html_url":"https://github.com/apache/mxnet/issues/4861#issuecomment-277486961","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4861","id":277486961,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4Njk2MQ==","user":{"login":"felixcheung","id":8969467,"node_id":"MDQ6VXNlcjg5Njk0Njc=","avatar_url":"https://avatars.githubusercontent.com/u/8969467?v=4","gravatar_id":"","url":"https://api.github.com/users/felixcheung","html_url":"https://github.com/felixcheung","followers_url":"https://api.github.com/users/felixcheung/followers","following_url":"https://api.github.com/users/felixcheung/following{/other_user}","gists_url":"https://api.github.com/users/felixcheung/gists{/gist_id}","starred_url":"https://api.github.com/users/felixcheung/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/felixcheung/subscriptions","organizations_url":"https://api.github.com/users/felixcheung/orgs","repos_url":"https://api.github.com/users/felixcheung/repos","events_url":"https://api.github.com/users/felixcheung/events{/privacy}","received_events_url":"https://api.github.com/users/felixcheung/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T23:55:21Z","updated_at":"2017-02-04T23:55:21Z","author_association":"MEMBER","body":"I should be able to help, manually, if that would be useful.\r\nWe could address this in the next release by looking into AppVeyor for Windows build - have other projects that use that","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277486961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277487027","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277487027","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277487027,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4NzAyNw==","user":{"login":"Yangqing","id":551151,"node_id":"MDQ6VXNlcjU1MTE1MQ==","avatar_url":"https://avatars.githubusercontent.com/u/551151?v=4","gravatar_id":"","url":"https://api.github.com/users/Yangqing","html_url":"https://github.com/Yangqing","followers_url":"https://api.github.com/users/Yangqing/followers","following_url":"https://api.github.com/users/Yangqing/following{/other_user}","gists_url":"https://api.github.com/users/Yangqing/gists{/gist_id}","starred_url":"https://api.github.com/users/Yangqing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yangqing/subscriptions","organizations_url":"https://api.github.com/users/Yangqing/orgs","repos_url":"https://api.github.com/users/Yangqing/repos","events_url":"https://api.github.com/users/Yangqing/events{/privacy}","received_events_url":"https://api.github.com/users/Yangqing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T23:56:54Z","updated_at":"2017-02-04T23:56:54Z","author_association":"NONE","body":"Yeah I agree with TQ that we prefer non strider version, but if things are better strides for performance and or other reasons, it is not a hard constraint - we will need to stride stuff sometimes anyway.\r\n\r\nPer Eric's question about C++, I suspect we will never have the vendors give us all the source code for the high performance part :p","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277487027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277487100","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277487100","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277487100,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4NzEwMA==","user":{"login":"naibaf7","id":5577650,"node_id":"MDQ6VXNlcjU1Nzc2NTA=","avatar_url":"https://avatars.githubusercontent.com/u/5577650?v=4","gravatar_id":"","url":"https://api.github.com/users/naibaf7","html_url":"https://github.com/naibaf7","followers_url":"https://api.github.com/users/naibaf7/followers","following_url":"https://api.github.com/users/naibaf7/following{/other_user}","gists_url":"https://api.github.com/users/naibaf7/gists{/gist_id}","starred_url":"https://api.github.com/users/naibaf7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naibaf7/subscriptions","organizations_url":"https://api.github.com/users/naibaf7/orgs","repos_url":"https://api.github.com/users/naibaf7/repos","events_url":"https://api.github.com/users/naibaf7/events{/privacy}","received_events_url":"https://api.github.com/users/naibaf7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T23:58:44Z","updated_at":"2017-02-04T23:58:44Z","author_association":"NONE","body":"@Yangqing \r\nBut it should be easy in most of the cases to write the compatible wrapper around the high performance code... nice to see you here btw. :)","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277487100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277487123","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277487123","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277487123,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4NzEyMw==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T23:59:16Z","updated_at":"2017-02-04T23:59:16Z","author_association":"CONTRIBUTOR","body":"We can have both versions. Strided and optionally non strided for each function.\r\n\r\nLet's see how much source they are willing to give out @ap-hynninen @glingyan @zhenlinluo ","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277487123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277488572","html_url":"https://github.com/apache/mxnet/issues/4833#issuecomment-277488572","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4833","id":277488572,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4ODU3Mg==","user":{"login":"haimeh","id":25471842,"node_id":"MDQ6VXNlcjI1NDcxODQy","avatar_url":"https://avatars.githubusercontent.com/u/25471842?v=4","gravatar_id":"","url":"https://api.github.com/users/haimeh","html_url":"https://github.com/haimeh","followers_url":"https://api.github.com/users/haimeh/followers","following_url":"https://api.github.com/users/haimeh/following{/other_user}","gists_url":"https://api.github.com/users/haimeh/gists{/gist_id}","starred_url":"https://api.github.com/users/haimeh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/haimeh/subscriptions","organizations_url":"https://api.github.com/users/haimeh/orgs","repos_url":"https://api.github.com/users/haimeh/repos","events_url":"https://api.github.com/users/haimeh/events{/privacy}","received_events_url":"https://api.github.com/users/haimeh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T00:33:32Z","updated_at":"2017-02-05T00:33:32Z","author_association":"NONE","body":"Ooooh, I think I understand! Just to clarify, the requirement for using GPU is now different from http://mxnet.io/get_started/setup.html#requirements-for-using-gpus and Compute Capability now must be greater than 3 instead?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277488572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277488900","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277488900","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277488900,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4ODkwMA==","user":{"login":"bhack","id":1710528,"node_id":"MDQ6VXNlcjE3MTA1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/1710528?v=4","gravatar_id":"","url":"https://api.github.com/users/bhack","html_url":"https://github.com/bhack","followers_url":"https://api.github.com/users/bhack/followers","following_url":"https://api.github.com/users/bhack/following{/other_user}","gists_url":"https://api.github.com/users/bhack/gists{/gist_id}","starred_url":"https://api.github.com/users/bhack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bhack/subscriptions","organizations_url":"https://api.github.com/users/bhack/orgs","repos_url":"https://api.github.com/users/bhack/repos","events_url":"https://api.github.com/users/bhack/events{/privacy}","received_events_url":"https://api.github.com/users/bhack/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T00:43:05Z","updated_at":"2017-02-05T00:43:05Z","author_association":"NONE","body":"What is the device type and id in cases like https://github.com/CNugteren/CLCudaAPI/issues/11 and generally with unified memory devices?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277488900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277489244","html_url":"https://github.com/apache/mxnet/issues/4882#issuecomment-277489244","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4882","id":277489244,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4OTI0NA==","user":{"login":"zihaolucky","id":4514568,"node_id":"MDQ6VXNlcjQ1MTQ1Njg=","avatar_url":"https://avatars.githubusercontent.com/u/4514568?v=4","gravatar_id":"","url":"https://api.github.com/users/zihaolucky","html_url":"https://github.com/zihaolucky","followers_url":"https://api.github.com/users/zihaolucky/followers","following_url":"https://api.github.com/users/zihaolucky/following{/other_user}","gists_url":"https://api.github.com/users/zihaolucky/gists{/gist_id}","starred_url":"https://api.github.com/users/zihaolucky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zihaolucky/subscriptions","organizations_url":"https://api.github.com/users/zihaolucky/orgs","repos_url":"https://api.github.com/users/zihaolucky/repos","events_url":"https://api.github.com/users/zihaolucky/events{/privacy}","received_events_url":"https://api.github.com/users/zihaolucky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T00:51:45Z","updated_at":"2017-02-05T00:51:45Z","author_association":"MEMBER","body":"Is the tool backend relevant? Or it just rely on Keras,  which means it uses the Keras output, the graph definition and params. If so, https://github.com/dmlc/keras might do the trick.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277489244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277489261","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277489261","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277489261,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4OTI2MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T00:52:12Z","updated_at":"2017-02-05T01:00:38Z","author_association":"MEMBER","body":"@bhack In my understanding, the UMA does not prevent you from having a primary device id, except that that it will permit operators to take input from different device_id and launch on a certain device\r\n\r\nThe same thing goes with OpenCL kernels. Although OpenCL creates an illusion that a buffer can belong to any device. Having a primary device id per memory is still helpful. The fact is that the underlying driver will create mirror copies on certain devices, having a tensor primary operate on one device will certainly have the benefits(in terms of scheduling etc)","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277489261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277489865","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277489865","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277489865,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4OTg2NQ==","user":{"login":"naibaf7","id":5577650,"node_id":"MDQ6VXNlcjU1Nzc2NTA=","avatar_url":"https://avatars.githubusercontent.com/u/5577650?v=4","gravatar_id":"","url":"https://api.github.com/users/naibaf7","html_url":"https://github.com/naibaf7","followers_url":"https://api.github.com/users/naibaf7/followers","following_url":"https://api.github.com/users/naibaf7/following{/other_user}","gists_url":"https://api.github.com/users/naibaf7/gists{/gist_id}","starred_url":"https://api.github.com/users/naibaf7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naibaf7/subscriptions","organizations_url":"https://api.github.com/users/naibaf7/orgs","repos_url":"https://api.github.com/users/naibaf7/repos","events_url":"https://api.github.com/users/naibaf7/events{/privacy}","received_events_url":"https://api.github.com/users/naibaf7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T01:07:37Z","updated_at":"2017-02-05T01:07:37Z","author_association":"NONE","body":"@tqchen How should offsets inside memory objects/tensors be provided? What if multiple tensors are packed inside one OpenCL buffer object?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277489865/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277489931","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277489931","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277489931,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4OTkzMQ==","user":{"login":"soumith","id":1310570,"node_id":"MDQ6VXNlcjEzMTA1NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1310570?v=4","gravatar_id":"","url":"https://api.github.com/users/soumith","html_url":"https://github.com/soumith","followers_url":"https://api.github.com/users/soumith/followers","following_url":"https://api.github.com/users/soumith/following{/other_user}","gists_url":"https://api.github.com/users/soumith/gists{/gist_id}","starred_url":"https://api.github.com/users/soumith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/soumith/subscriptions","organizations_url":"https://api.github.com/users/soumith/orgs","repos_url":"https://api.github.com/users/soumith/repos","events_url":"https://api.github.com/users/soumith/events{/privacy}","received_events_url":"https://api.github.com/users/soumith/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T01:09:30Z","updated_at":"2017-02-05T01:09:30Z","author_association":"NONE","body":"i like @tqchen 's structs and APIs. \r\n\r\n@naibaf7 *data can be an offsetted pointer?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277489931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277490025","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277490025","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277490025,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ5MDAyNQ==","user":{"login":"Yangqing","id":551151,"node_id":"MDQ6VXNlcjU1MTE1MQ==","avatar_url":"https://avatars.githubusercontent.com/u/551151?v=4","gravatar_id":"","url":"https://api.github.com/users/Yangqing","html_url":"https://github.com/Yangqing","followers_url":"https://api.github.com/users/Yangqing/followers","following_url":"https://api.github.com/users/Yangqing/following{/other_user}","gists_url":"https://api.github.com/users/Yangqing/gists{/gist_id}","starred_url":"https://api.github.com/users/Yangqing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yangqing/subscriptions","organizations_url":"https://api.github.com/users/Yangqing/orgs","repos_url":"https://api.github.com/users/Yangqing/repos","events_url":"https://api.github.com/users/Yangqing/events{/privacy}","received_events_url":"https://api.github.com/users/Yangqing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T01:11:52Z","updated_at":"2017-02-05T01:11:52Z","author_association":"NONE","body":"Yeah offset pointer would be great, and if I may, can we enforce things to\nbe aligned to like 256 or 512? That might make things maximally compatible\nwith multiple optimization mechanisms.\n\n\nOn Sat, Feb 4, 2017 at 5:09 PM Soumith Chintala <notifications@github.com>\nwrote:\n\n> i like @tqchen <https://github.com/tqchen> 's structs and APIs.\n>\n> @naibaf7 <https://github.com/naibaf7> *data can be an offsetted pointer?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dmlc/mxnet/issues/4735#issuecomment-277489931>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAho7x0E9D6byc96UsJ1pV_se6Dp-dGBks5rZSFYgaJpZM4Lobt0>\n> .\n>\n-- \nSent from Gmail Mobile - apologies for any typoz.\n","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277490025/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277490162","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277490162","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277490162,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ5MDE2Mg==","user":{"login":"soumith","id":1310570,"node_id":"MDQ6VXNlcjEzMTA1NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1310570?v=4","gravatar_id":"","url":"https://api.github.com/users/soumith","html_url":"https://github.com/soumith","followers_url":"https://api.github.com/users/soumith/followers","following_url":"https://api.github.com/users/soumith/following{/other_user}","gists_url":"https://api.github.com/users/soumith/gists{/gist_id}","starred_url":"https://api.github.com/users/soumith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/soumith/subscriptions","organizations_url":"https://api.github.com/users/soumith/orgs","repos_url":"https://api.github.com/users/soumith/repos","events_url":"https://api.github.com/users/soumith/events{/privacy}","received_events_url":"https://api.github.com/users/soumith/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T01:15:30Z","updated_at":"2017-02-05T01:17:03Z","author_association":"NONE","body":"To address @naibaf7 's concerns, and to take into account cleaner Tensor views, here's what I propose (we do this in Torch already):\r\n\r\n```\r\ntypedef {\r\n  int device_id;\r\n  int device_type;\r\n} CContext;\r\n\r\ntypedef {\r\n   void* data;         // data pointer\r\n   CContext ctx;       // device\r\n   int dtype;          // data type\r\n   int refcount;\r\n} Buffer;\r\n\r\ntypedef struct {\r\n   Buffer data; \r\n   int offset;             // offset in buffer\r\n   size_t ndim;\r\n   size_t* shape;\r\n   size_t* strides;    // can be nullptr, indicating compact version.\r\n   int refcount;\r\n} CTensor;\r\n```\r\n\r\nThis way two problems are solved:\r\n1. buffer offsets are explicit\r\n2. When you have to create a View \"B\" on a Tensor \"A\", you simply point B to the underlying Buffer of A. That way, A can be freed anytime, independent of B.\r\n\r\nIn Torch, we call them `Storage` and `Tensor`, but whatever naming is more standardized...\r\n\r\nI'm not super particular about this change, just proposing it based on feedback.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277490162/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277490219","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277490219","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277490219,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ5MDIxOQ==","user":{"login":"naibaf7","id":5577650,"node_id":"MDQ6VXNlcjU1Nzc2NTA=","avatar_url":"https://avatars.githubusercontent.com/u/5577650?v=4","gravatar_id":"","url":"https://api.github.com/users/naibaf7","html_url":"https://github.com/naibaf7","followers_url":"https://api.github.com/users/naibaf7/followers","following_url":"https://api.github.com/users/naibaf7/following{/other_user}","gists_url":"https://api.github.com/users/naibaf7/gists{/gist_id}","starred_url":"https://api.github.com/users/naibaf7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naibaf7/subscriptions","organizations_url":"https://api.github.com/users/naibaf7/orgs","repos_url":"https://api.github.com/users/naibaf7/repos","events_url":"https://api.github.com/users/naibaf7/events{/privacy}","received_events_url":"https://api.github.com/users/naibaf7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T01:16:49Z","updated_at":"2017-02-05T01:19:19Z","author_association":"NONE","body":"@soumith Okay, however that's not going so nicely with OpenCL right now. Maybe a separate offset parameter should also be considered. EDIT: Too late, I like your updated suggestion :).\r\n\r\n@Yangqing Should such alignment requirements be enforced or should there be metadata for operators that can specify optimal and necessary workspace conditions?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277490219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277490308","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277490308","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277490308,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ5MDMwOA==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T01:19:12Z","updated_at":"2017-02-05T01:19:12Z","author_association":"CONTRIBUTOR","body":"A tensor shouldn't own memory since it's only a wrapper around memory managed by the framework. So you won't need an offset.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277490308/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277490492","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277490492","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277490492,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ5MDQ5Mg==","user":{"login":"soumith","id":1310570,"node_id":"MDQ6VXNlcjEzMTA1NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1310570?v=4","gravatar_id":"","url":"https://api.github.com/users/soumith","html_url":"https://github.com/soumith","followers_url":"https://api.github.com/users/soumith/followers","following_url":"https://api.github.com/users/soumith/following{/other_user}","gists_url":"https://api.github.com/users/soumith/gists{/gist_id}","starred_url":"https://api.github.com/users/soumith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/soumith/subscriptions","organizations_url":"https://api.github.com/users/soumith/orgs","repos_url":"https://api.github.com/users/soumith/repos","events_url":"https://api.github.com/users/soumith/events{/privacy}","received_events_url":"https://api.github.com/users/soumith/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T01:23:31Z","updated_at":"2017-02-05T01:24:17Z","author_association":"NONE","body":"You would need an offset even if the Tensor doesn't own memory. The Tensor can only be constructed on a slice of a larger Buffer. This is what @naibaf7 is saying we should cover, and I know from Torch's experience that this comes up very often.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277490492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277490507","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277490507","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277490507,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ5MDUwNw==","user":{"login":"naibaf7","id":5577650,"node_id":"MDQ6VXNlcjU1Nzc2NTA=","avatar_url":"https://avatars.githubusercontent.com/u/5577650?v=4","gravatar_id":"","url":"https://api.github.com/users/naibaf7","html_url":"https://github.com/naibaf7","followers_url":"https://api.github.com/users/naibaf7/followers","following_url":"https://api.github.com/users/naibaf7/following{/other_user}","gists_url":"https://api.github.com/users/naibaf7/gists{/gist_id}","starred_url":"https://api.github.com/users/naibaf7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naibaf7/subscriptions","organizations_url":"https://api.github.com/users/naibaf7/orgs","repos_url":"https://api.github.com/users/naibaf7/repos","events_url":"https://api.github.com/users/naibaf7/events{/privacy}","received_events_url":"https://api.github.com/users/naibaf7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T01:23:49Z","updated_at":"2017-02-05T01:27:41Z","author_association":"NONE","body":"@piiswrong I think that concept is also maintained by what @soumith says. Basically the CTensor and eventually CMatrix or CVector structs carry metadata of a tensor/matrix/vector, one of which is a CBuffer struct that specifies what memory from the host framework is being used.\r\nCMatrix and CVector could also be used to specify dimension reduced areas of a tensor in order to simplify the use of BLAS libraries alongside the new DNN operators.\r\nThe operators can then internally combine the information, such as checking memory requirements and passing buffer+offset into the kernel (OpenCL) or compute the unified memory pointer (CUDA, CPU) and execute the compute kernel.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277490507/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277492099","html_url":"https://github.com/apache/mxnet/issues/4735#issuecomment-277492099","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4735","id":277492099,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ5MjA5OQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T02:04:03Z","updated_at":"2017-02-05T02:06:39Z","author_association":"MEMBER","body":"refcount is not needed if memory container is managed by the framework. Note that you can always add it back and maintain compatibility by sub-classing Tensor. If memory is not managed, maybe Buffer is also not needed (only have a Tensor with possible offset).\r\n\r\n@piiswrong offset is useful for things like OpenCL, where the cl_mem object is opague and you cannot do explicit addressing. ","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277492099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277496114","html_url":"https://github.com/apache/mxnet/issues/4882#issuecomment-277496114","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4882","id":277496114,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ5NjExNA==","user":{"login":"cheshirecats","id":1930324,"node_id":"MDQ6VXNlcjE5MzAzMjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1930324?v=4","gravatar_id":"","url":"https://api.github.com/users/cheshirecats","html_url":"https://github.com/cheshirecats","followers_url":"https://api.github.com/users/cheshirecats/followers","following_url":"https://api.github.com/users/cheshirecats/following{/other_user}","gists_url":"https://api.github.com/users/cheshirecats/gists{/gist_id}","starred_url":"https://api.github.com/users/cheshirecats/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheshirecats/subscriptions","organizations_url":"https://api.github.com/users/cheshirecats/orgs","repos_url":"https://api.github.com/users/cheshirecats/repos","events_url":"https://api.github.com/users/cheshirecats/events{/privacy}","received_events_url":"https://api.github.com/users/cheshirecats/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T04:06:58Z","updated_at":"2017-02-05T04:06:58Z","author_association":"NONE","body":"Hi. It just needs the model to be loadable in Keras, and then it can be exported & converted for Keras.js to use (as in Keras.js README). \r\n\r\nRegarding https://github.com/dmlc/keras , is it a project to use mxnet as a backend for Keras?  Thanks.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277496114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277497869","html_url":"https://github.com/apache/mxnet/issues/4881#issuecomment-277497869","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4881","id":277497869,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ5Nzg2OQ==","user":{"login":"feiyulv","id":18651286,"node_id":"MDQ6VXNlcjE4NjUxMjg2","avatar_url":"https://avatars.githubusercontent.com/u/18651286?v=4","gravatar_id":"","url":"https://api.github.com/users/feiyulv","html_url":"https://github.com/feiyulv","followers_url":"https://api.github.com/users/feiyulv/followers","following_url":"https://api.github.com/users/feiyulv/following{/other_user}","gists_url":"https://api.github.com/users/feiyulv/gists{/gist_id}","starred_url":"https://api.github.com/users/feiyulv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/feiyulv/subscriptions","organizations_url":"https://api.github.com/users/feiyulv/orgs","repos_url":"https://api.github.com/users/feiyulv/repos","events_url":"https://api.github.com/users/feiyulv/events{/privacy}","received_events_url":"https://api.github.com/users/feiyulv/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T05:03:54Z","updated_at":"2017-02-05T05:03:54Z","author_association":"NONE","body":"It seems the breakpoint  you set doesn't work. Usually I set break point to file:line, that will work, like this.\r\n```\r\nb src/operator/convolution-inl.h:100\r\n```","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277497869/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277499440","html_url":"https://github.com/apache/mxnet/issues/4878#issuecomment-277499440","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4878","id":277499440,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ5OTQ0MA==","user":{"login":"feiyulv","id":18651286,"node_id":"MDQ6VXNlcjE4NjUxMjg2","avatar_url":"https://avatars.githubusercontent.com/u/18651286?v=4","gravatar_id":"","url":"https://api.github.com/users/feiyulv","html_url":"https://github.com/feiyulv","followers_url":"https://api.github.com/users/feiyulv/followers","following_url":"https://api.github.com/users/feiyulv/following{/other_user}","gists_url":"https://api.github.com/users/feiyulv/gists{/gist_id}","starred_url":"https://api.github.com/users/feiyulv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/feiyulv/subscriptions","organizations_url":"https://api.github.com/users/feiyulv/orgs","repos_url":"https://api.github.com/users/feiyulv/repos","events_url":"https://api.github.com/users/feiyulv/events{/privacy}","received_events_url":"https://api.github.com/users/feiyulv/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T05:56:28Z","updated_at":"2017-02-05T05:56:44Z","author_association":"NONE","body":"@piiswrong  Great,  but why the new lstm interface is much faster?  I can't find much difference between the new version code and the old one","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277499440/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277500519","html_url":"https://github.com/apache/mxnet/issues/4882#issuecomment-277500519","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4882","id":277500519,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzUwMDUxOQ==","user":{"login":"zihaolucky","id":4514568,"node_id":"MDQ6VXNlcjQ1MTQ1Njg=","avatar_url":"https://avatars.githubusercontent.com/u/4514568?v=4","gravatar_id":"","url":"https://api.github.com/users/zihaolucky","html_url":"https://github.com/zihaolucky","followers_url":"https://api.github.com/users/zihaolucky/followers","following_url":"https://api.github.com/users/zihaolucky/following{/other_user}","gists_url":"https://api.github.com/users/zihaolucky/gists{/gist_id}","starred_url":"https://api.github.com/users/zihaolucky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zihaolucky/subscriptions","organizations_url":"https://api.github.com/users/zihaolucky/orgs","repos_url":"https://api.github.com/users/zihaolucky/repos","events_url":"https://api.github.com/users/zihaolucky/events{/privacy}","received_events_url":"https://api.github.com/users/zihaolucky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T06:28:28Z","updated_at":"2017-02-05T06:28:28Z","author_association":"MEMBER","body":"Yes, but I haven't participate in this project. @piiswrong ","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277500519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277501757","html_url":"https://github.com/apache/mxnet/issues/4885#issuecomment-277501757","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4885","id":277501757,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzUwMTc1Nw==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T07:05:26Z","updated_at":"2017-02-05T07:05:26Z","author_association":"CONTRIBUTOR","body":"Should be fixed by this pr https://github.com/dmlc/mxnet/pull/4644","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277501757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277501910","html_url":"https://github.com/apache/mxnet/issues/4885#issuecomment-277501910","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4885","id":277501910,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzUwMTkxMA==","user":{"login":"cheshirecats","id":1930324,"node_id":"MDQ6VXNlcjE5MzAzMjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1930324?v=4","gravatar_id":"","url":"https://api.github.com/users/cheshirecats","html_url":"https://github.com/cheshirecats","followers_url":"https://api.github.com/users/cheshirecats/followers","following_url":"https://api.github.com/users/cheshirecats/following{/other_user}","gists_url":"https://api.github.com/users/cheshirecats/gists{/gist_id}","starred_url":"https://api.github.com/users/cheshirecats/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheshirecats/subscriptions","organizations_url":"https://api.github.com/users/cheshirecats/orgs","repos_url":"https://api.github.com/users/cheshirecats/repos","events_url":"https://api.github.com/users/cheshirecats/events{/privacy}","received_events_url":"https://api.github.com/users/cheshirecats/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T07:09:53Z","updated_at":"2017-02-05T07:09:53Z","author_association":"NONE","body":"@piiswrong Thanks. Could you take a look at my other question: https://github.com/dmlc/mxnet/issues/4837","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277501910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277501914","html_url":"https://github.com/apache/mxnet/issues/4878#issuecomment-277501914","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4878","id":277501914,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzUwMTkxNA==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T07:09:59Z","updated_at":"2017-02-05T07:09:59Z","author_association":"CONTRIBUTOR","body":"Perplexity used to be calculated in numpy, which is slow","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277501914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277502727","html_url":"https://github.com/apache/mxnet/issues/4878#issuecomment-277502727","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4878","id":277502727,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzUwMjcyNw==","user":{"login":"feiyulv","id":18651286,"node_id":"MDQ6VXNlcjE4NjUxMjg2","avatar_url":"https://avatars.githubusercontent.com/u/18651286?v=4","gravatar_id":"","url":"https://api.github.com/users/feiyulv","html_url":"https://github.com/feiyulv","followers_url":"https://api.github.com/users/feiyulv/followers","following_url":"https://api.github.com/users/feiyulv/following{/other_user}","gists_url":"https://api.github.com/users/feiyulv/gists{/gist_id}","starred_url":"https://api.github.com/users/feiyulv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/feiyulv/subscriptions","organizations_url":"https://api.github.com/users/feiyulv/orgs","repos_url":"https://api.github.com/users/feiyulv/repos","events_url":"https://api.github.com/users/feiyulv/events{/privacy}","received_events_url":"https://api.github.com/users/feiyulv/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T07:32:45Z","updated_at":"2017-02-05T07:32:45Z","author_association":"NONE","body":"Got it","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277502727/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277503329","html_url":"https://github.com/apache/mxnet/issues/4878#issuecomment-277503329","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4878","id":277503329,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzUwMzMyOQ==","user":{"login":"mz24cn","id":1301113,"node_id":"MDQ6VXNlcjEzMDExMTM=","avatar_url":"https://avatars.githubusercontent.com/u/1301113?v=4","gravatar_id":"","url":"https://api.github.com/users/mz24cn","html_url":"https://github.com/mz24cn","followers_url":"https://api.github.com/users/mz24cn/followers","following_url":"https://api.github.com/users/mz24cn/following{/other_user}","gists_url":"https://api.github.com/users/mz24cn/gists{/gist_id}","starred_url":"https://api.github.com/users/mz24cn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mz24cn/subscriptions","organizations_url":"https://api.github.com/users/mz24cn/orgs","repos_url":"https://api.github.com/users/mz24cn/repos","events_url":"https://api.github.com/users/mz24cn/events{/privacy}","received_events_url":"https://api.github.com/users/mz24cn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T07:51:00Z","updated_at":"2017-02-05T08:32:59Z","author_association":"NONE","body":"老版本rnn_cell_demo.py我能跑到**1000**个samples/s，新版本lstm_bucketing.py我只能跑到**70** samples/s（把默认batch_size调整到128以便与老版本对比）。收敛速度更是慢不少。\r\n\r\n@piiswrong 认为快很多的结论，我认为是不严谨且没有依据的。解释如下：\r\n1，@pineking给出的测试，我看了，mxnet用的测试脚本，使用的就是PTB语料+基于cuDNN RNN的Op的网络。而新版本用的是自己Unroll出来的用symbol graph搭出来的，就是跟char-rnn.ipynb的代码实质是一样的。所以这两者没有可比性。我测试是差了十几倍，如果你CPU性能高GPU性能低，差别可能没这么大，但差几倍没问题；\r\n2，解同志搞的这个 #4618 基本上就是一个refactor，没有新的东西，所以不可能比之前的unroll或者cudnn的版本快。如果要快，我这个 #4819 倒是真的在原来这个快的cudnn版本基础上，收敛速度更快一些，这是改进初始化方法带来的好处。但是迭代速度并没有变化，这是当然的，因为用的还是那个黑盒cudnn；\r\n3，dlbench.comp.hkbu.edu.hk的测试用的是mxnet 0.7版本，如果用最新版0.9.3，性能会更低，应该跟引入NNVM有关（#4673 ）；\r\n4，提升性能的正确方向，就是如题主所说的nnvm-fusion。cudnn的实质就是fusion，实际上，现在异质计算的瓶颈之一就是CPU-GPU的数据交互。如果nnvm-fusion能够做的很好，相当于一个可塑的cudnn在手，这对于别的DL来说才是真正的独家杀手级武器。不过在目前的dmlc/mxnet中并没有包含nnvm-fusion这个插件，只是在dmlc/nnvm中才有；\r\n5，#4618 只是做了一个unroll版本的重构，cudnn的初始化参数名的问题（#4819）没有涉及；因为涉及层层封装的python类抽象，我相信比原版unroll性能只会低不会高，所以这是一个对于unroll和cudnn版本的RNN性能都没有改进的PR。可能只是代码结构上看起来舒服一点了。但也只惠及python。\r\n\r\n综上所述，nnvm-fusion才是有价值的努力方向。@tqchen @mli","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277503329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277503865","html_url":"https://github.com/apache/mxnet/issues/4878#issuecomment-277503865","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4878","id":277503865,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzUwMzg2NQ==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T08:06:01Z","updated_at":"2017-02-05T08:06:01Z","author_association":"CONTRIBUTOR","body":"We'll release numbers in a week or two.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277503865/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277503913","html_url":"https://github.com/apache/mxnet/issues/4886#issuecomment-277503913","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4886","id":277503913,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzUwMzkxMw==","user":{"login":"piiswrong","id":568948,"node_id":"MDQ6VXNlcjU2ODk0OA==","avatar_url":"https://avatars.githubusercontent.com/u/568948?v=4","gravatar_id":"","url":"https://api.github.com/users/piiswrong","html_url":"https://github.com/piiswrong","followers_url":"https://api.github.com/users/piiswrong/followers","following_url":"https://api.github.com/users/piiswrong/following{/other_user}","gists_url":"https://api.github.com/users/piiswrong/gists{/gist_id}","starred_url":"https://api.github.com/users/piiswrong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/piiswrong/subscriptions","organizations_url":"https://api.github.com/users/piiswrong/orgs","repos_url":"https://api.github.com/users/piiswrong/repos","events_url":"https://api.github.com/users/piiswrong/events{/privacy}","received_events_url":"https://api.github.com/users/piiswrong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T08:07:19Z","updated_at":"2017-02-05T08:07:19Z","author_association":"CONTRIBUTOR","body":"@ap-hynninen What's the benefit of using __shfl_xor? Is it worth dropping support for fermi?","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277503913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277504079","html_url":"https://github.com/apache/mxnet/issues/4887#issuecomment-277504079","issue_url":"https://api.github.com/repos/apache/mxnet/issues/4887","id":277504079,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzUwNDA3OQ==","user":{"login":"weiliu89","id":1066700,"node_id":"MDQ6VXNlcjEwNjY3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/1066700?v=4","gravatar_id":"","url":"https://api.github.com/users/weiliu89","html_url":"https://github.com/weiliu89","followers_url":"https://api.github.com/users/weiliu89/followers","following_url":"https://api.github.com/users/weiliu89/following{/other_user}","gists_url":"https://api.github.com/users/weiliu89/gists{/gist_id}","starred_url":"https://api.github.com/users/weiliu89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weiliu89/subscriptions","organizations_url":"https://api.github.com/users/weiliu89/orgs","repos_url":"https://api.github.com/users/weiliu89/repos","events_url":"https://api.github.com/users/weiliu89/events{/privacy}","received_events_url":"https://api.github.com/users/weiliu89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T08:12:01Z","updated_at":"2017-02-05T08:12:01Z","author_association":"NONE","body":"I am new to MXNet. I want to try to train inception-v3 to compare with TensorFlow (r1.0).\r\n\r\nEnvironment:\r\n4 Titan X Pascal with CUDNN 5.1\r\ni7 5930 and 32G main memory\r\nSSD to store data\r\n\r\nFollowing tensorflow/models/inception, it takes about 8 days (750k iterations) to reach 76.95% on ImageNet (with batch_size = 128 ==> 32 per GPU). Training speed is about 160 images/sec. It takes about 8G per GPU and uses 16G main memory for caching data.\r\n\r\nI also followed image-classification examples. With similar setting (i.e. 128 batch size), I noticed that MXNet is faster (~360 images/sec) and only needs 5.5G per GPU.\r\n\r\nHowever, after a while, I observed a similar issue as @feiyulv, the training speed drops significantly:\r\n\r\nINFO:root:Epoch[0] Batch [2500] Speed: 356.23 samples/sec Train-accuracy=0.011953\r\nINFO:root:Epoch[0] Batch [2600] Speed: 357.26 samples/sec Train-accuracy=0.011406\r\nINFO:root:Epoch[0] Batch [2700] Speed: 158.80 samples/sec Train-accuracy=0.012812\r\nINFO:root:Epoch[0] Batch [2800] Speed: 41.29 samples/sec  Train-accuracy=0.014609\r\nINFO:root:Epoch[0] Batch [2900] Speed: 40.90 samples/sec  Train-accuracy=0.014531\r\n\r\nThen, after a while, it goes back normal again:\r\n\r\nINFO:root:Epoch[0] Batch [4700] Speed: 40.96 samples/sec  Train-accuracy=0.039688\r\nINFO:root:Epoch[0] Batch [4800] Speed: 40.59 samples/sec  Train-accuracy=0.037656\r\nINFO:root:Epoch[0] Batch [4900] Speed: 75.93 samples/sec  Train-accuracy=0.041250\r\nINFO:root:Epoch[0] Batch [5000] Speed: 367.78 samples/sec Train-accuracy=0.041328\r\nINFO:root:Epoch[0] Batch [5100] Speed: 370.06 samples/sec Train-accuracy=0.041641\r\n\r\nBut it becomes worse again later...\r\n\r\nI also used `test_io` option, and it says it can process about 450 images/sec. It looks like CPU and disk has the power to catch up the training speed.\r\n\r\nIt would be great if anyone can help on this.","reactions":{"url":"https://api.github.com/repos/apache/mxnet/issues/comments/277504079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]