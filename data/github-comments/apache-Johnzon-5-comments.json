[{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1753576778","html_url":"https://github.com/apache/johnzon/pull/110#issuecomment-1753576778","issue_url":"https://api.github.com/repos/apache/johnzon/issues/110","id":1753576778,"node_id":"IC_kwDOAWzNsc5ohXVK","user":{"login":"jeanouii","id":1233474,"node_id":"MDQ6VXNlcjEyMzM0NzQ=","avatar_url":"https://avatars.githubusercontent.com/u/1233474?v=4","gravatar_id":"","url":"https://api.github.com/users/jeanouii","html_url":"https://github.com/jeanouii","followers_url":"https://api.github.com/users/jeanouii/followers","following_url":"https://api.github.com/users/jeanouii/following{/other_user}","gists_url":"https://api.github.com/users/jeanouii/gists{/gist_id}","starred_url":"https://api.github.com/users/jeanouii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeanouii/subscriptions","organizations_url":"https://api.github.com/users/jeanouii/orgs","repos_url":"https://api.github.com/users/jeanouii/repos","events_url":"https://api.github.com/users/jeanouii/events{/privacy}","received_events_url":"https://api.github.com/users/jeanouii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-09T19:27:25Z","updated_at":"2023-10-09T19:27:25Z","author_association":"CONTRIBUTOR","body":"Excellent work. \r\nThank you so much for the great contribution.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1753576778/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1754669255","html_url":"https://github.com/apache/johnzon/pull/110#issuecomment-1754669255","issue_url":"https://api.github.com/repos/apache/johnzon/issues/110","id":1754669255,"node_id":"IC_kwDOAWzNsc5oliDH","user":{"login":"jeanouii","id":1233474,"node_id":"MDQ6VXNlcjEyMzM0NzQ=","avatar_url":"https://avatars.githubusercontent.com/u/1233474?v=4","gravatar_id":"","url":"https://api.github.com/users/jeanouii","html_url":"https://github.com/jeanouii","followers_url":"https://api.github.com/users/jeanouii/followers","following_url":"https://api.github.com/users/jeanouii/following{/other_user}","gists_url":"https://api.github.com/users/jeanouii/gists{/gist_id}","starred_url":"https://api.github.com/users/jeanouii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeanouii/subscriptions","organizations_url":"https://api.github.com/users/jeanouii/orgs","repos_url":"https://api.github.com/users/jeanouii/repos","events_url":"https://api.github.com/users/jeanouii/events{/privacy}","received_events_url":"https://api.github.com/users/jeanouii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-10T08:18:35Z","updated_at":"2023-10-10T08:18:35Z","author_association":"CONTRIBUTOR","body":"I propose we merge this one and we introduce a flag afterwards to make the #close() behavior back to normal and introduce a flag for the TCK compliance\r\n","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1754669255/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1759435744","html_url":"https://github.com/apache/johnzon/pull/101#issuecomment-1759435744","issue_url":"https://api.github.com/repos/apache/johnzon/issues/101","id":1759435744,"node_id":"IC_kwDOAWzNsc5o3tvg","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-12T11:33:37Z","updated_at":"2023-10-12T11:33:37Z","author_association":"MEMBER","body":"Closing this, both JSON-P and JSON-B TCKs are passing now so no need to add extra complexity in CI anymore","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1759435744/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1759636050","html_url":"https://github.com/apache/johnzon/pull/112#issuecomment-1759636050","issue_url":"https://api.github.com/repos/apache/johnzon/issues/112","id":1759636050,"node_id":"IC_kwDOAWzNsc5o4epS","user":{"login":"jeanouii","id":1233474,"node_id":"MDQ6VXNlcjEyMzM0NzQ=","avatar_url":"https://avatars.githubusercontent.com/u/1233474?v=4","gravatar_id":"","url":"https://api.github.com/users/jeanouii","html_url":"https://github.com/jeanouii","followers_url":"https://api.github.com/users/jeanouii/followers","following_url":"https://api.github.com/users/jeanouii/following{/other_user}","gists_url":"https://api.github.com/users/jeanouii/gists{/gist_id}","starred_url":"https://api.github.com/users/jeanouii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeanouii/subscriptions","organizations_url":"https://api.github.com/users/jeanouii/orgs","repos_url":"https://api.github.com/users/jeanouii/repos","events_url":"https://api.github.com/users/jeanouii/events{/privacy}","received_events_url":"https://api.github.com/users/jeanouii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-12T13:40:37Z","updated_at":"2023-10-12T13:40:37Z","author_association":"CONTRIBUTOR","body":"By the way, do you have an email you can privately share with me please?","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1759636050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1759660894","html_url":"https://github.com/apache/johnzon/pull/112#issuecomment-1759660894","issue_url":"https://api.github.com/repos/apache/johnzon/issues/112","id":1759660894,"node_id":"IC_kwDOAWzNsc5o4kte","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-10-12T13:55:17Z","updated_at":"2023-10-12T13:55:17Z","author_association":"MEMBER","body":"@jeanouii sure, mail@markus-jung.dev (Not really private, I've been using that one on the mailing list for some time now)","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1759660894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1838641909","html_url":"https://github.com/apache/johnzon/pull/113#issuecomment-1838641909","issue_url":"https://api.github.com/repos/apache/johnzon/issues/113","id":1838641909,"node_id":"IC_kwDOAWzNsc5tl3L1","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-04T13:25:58Z","updated_at":"2023-12-04T13:25:58Z","author_association":"MEMBER","body":"@rmannibucau mvn central link is updated. Thanks for pointing out, actually didnt know repo1 is not supposed to be used :)\r\n\r\nBut: I can't find the geronimo spec jars for jsonp 2.1/jsonb 3.0\r\nhttps://github.com/apache/geronimo-specs hasn't been touched since 2019, jakarta/eclipse foundation jars are also used in the [pom](https://github.com/apache/johnzon/blob/master/pom.xml#L75)","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1838641909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1838727582","html_url":"https://github.com/apache/johnzon/pull/113#issuecomment-1838727582","issue_url":"https://api.github.com/repos/apache/johnzon/issues/113","id":1838727582,"node_id":"IC_kwDOAWzNsc5tmMGe","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-04T14:15:55Z","updated_at":"2023-12-04T14:15:55Z","author_association":"CONTRIBUTOR","body":"@jungm i guess they use the jakarta classifier as of today. What is in the pom is fine while not transitive (the case today), now when you propose a public API it should probably be the least hurtful and some env will not respect properly the ServiceLoader mecanism so hardcoded default is generally better so while we can use it I think it does not hurt.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1838727582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1840337802","html_url":"https://github.com/apache/johnzon/pull/113#issuecomment-1840337802","issue_url":"https://api.github.com/repos/apache/johnzon/issues/113","id":1840337802,"node_id":"IC_kwDOAWzNsc5tsVOK","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-05T09:16:29Z","updated_at":"2023-12-05T09:16:29Z","author_association":"MEMBER","body":"But isn't EE 8 relocated to `jakarta.*` basically EE9?\r\nthe EE9 API jars will probably work fine with johnzon 2.0.x, but that also means users can't use new jsonp 2.1 and jsonb 3.0 features","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1840337802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1840474092","html_url":"https://github.com/apache/johnzon/pull/113#issuecomment-1840474092","issue_url":"https://api.github.com/repos/apache/johnzon/issues/113","id":1840474092,"node_id":"IC_kwDOAWzNsc5ts2fs","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-05T10:32:15Z","updated_at":"2023-12-05T10:32:15Z","author_association":"CONTRIBUTOR","body":"@jungm well this is true but we still have this default issue (https://github.com/jakartaee/jsonp-api/blob/master/api/src/main/java/jakarta/json/spi/JsonProvider.java#L78 for jsonp for ex) so ultimately it can mean we still need custom jars (thinking a bit out loud but relying on the SPI is likely not what we want in maven and OSGi). Maybe a note on that issue of the spec can make it less a surprise to end user.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1840474092/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1847038747","html_url":"https://github.com/apache/johnzon/pull/113#issuecomment-1847038747","issue_url":"https://api.github.com/repos/apache/johnzon/issues/113","id":1847038747,"node_id":"IC_kwDOAWzNsc5uF5Mb","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-08T11:44:38Z","updated_at":"2023-12-08T11:44:38Z","author_association":"MEMBER","body":"@rmannibucau added a few sentences to give users a small heads up that parsson is indeed hardcoded in the API jar now","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1847038747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1863377390","html_url":"https://github.com/apache/johnzon/pull/116#issuecomment-1863377390","issue_url":"https://api.github.com/repos/apache/johnzon/issues/116","id":1863377390,"node_id":"IC_kwDOAWzNsc5vEOHu","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-19T19:45:32Z","updated_at":"2023-12-19T19:45:32Z","author_association":"MEMBER","body":"I think I'd prefer if johnzon would be more user friendly on this (explain in docs, and maybe log a warning/error when running on jdk >=15 and no ScriptEngine is available for js) instead of forcing a transient dependency like openjdk nashorn onto every user. They might be on an older jdk where this simply isn't needed or user prefers some other impl\r\n\r\nanother idea I have would be to make a \"batteries included\" johnzon-jsonschema-java15 module that has both johnzon-jsonschema and nashorn as dependencies. But I really doubt if this would be worth it \r\n\r\nwdyt? @rmannibucau @jeanouii ","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1863377390/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1863406152","html_url":"https://github.com/apache/johnzon/pull/116#issuecomment-1863406152","issue_url":"https://api.github.com/repos/apache/johnzon/issues/116","id":1863406152,"node_id":"IC_kwDOAWzNsc5vEVJI","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-19T20:07:57Z","updated_at":"2023-12-19T20:12:45Z","author_association":"CONTRIBUTOR","body":"To be honest I always disable it to use java implementation, default is just more jsonschema friendly (java impl requires some constraints on the regex forms)\r\n\r\nBut clearly not an option to make it transitive by default, in particular cause there are other js impl (thinking to graal one) so we just respect the constract and user picks its impl if he uses js regexes.\r\n\r\nhope it makes sense\r\n\r\nps: i don't get why changing the scope works on java +15, shouldn't change anything for the build so it is more about the default impl, no issue to make a java based impl closer to js one if it is the issue.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1863406152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1866074941","html_url":"https://github.com/apache/johnzon/pull/116#issuecomment-1866074941","issue_url":"https://api.github.com/repos/apache/johnzon/issues/116","id":1866074941,"node_id":"IC_kwDOAWzNsc5vOgs9","user":{"login":"MathisGuillet1","id":37225027,"node_id":"MDQ6VXNlcjM3MjI1MDI3","avatar_url":"https://avatars.githubusercontent.com/u/37225027?v=4","gravatar_id":"","url":"https://api.github.com/users/MathisGuillet1","html_url":"https://github.com/MathisGuillet1","followers_url":"https://api.github.com/users/MathisGuillet1/followers","following_url":"https://api.github.com/users/MathisGuillet1/following{/other_user}","gists_url":"https://api.github.com/users/MathisGuillet1/gists{/gist_id}","starred_url":"https://api.github.com/users/MathisGuillet1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MathisGuillet1/subscriptions","organizations_url":"https://api.github.com/users/MathisGuillet1/orgs","repos_url":"https://api.github.com/users/MathisGuillet1/repos","events_url":"https://api.github.com/users/MathisGuillet1/events{/privacy}","received_events_url":"https://api.github.com/users/MathisGuillet1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-21T11:14:43Z","updated_at":"2023-12-21T11:14:43Z","author_association":"NONE","body":"Ok, let's close this, maybe just a log would help users with JDK15+ to figure out that they are missing an engine dependency","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1866074941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1866083536","html_url":"https://github.com/apache/johnzon/pull/116#issuecomment-1866083536","issue_url":"https://api.github.com/repos/apache/johnzon/issues/116","id":1866083536,"node_id":"IC_kwDOAWzNsc5vOizQ","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-12-21T11:21:43Z","updated_at":"2023-12-21T11:21:43Z","author_association":"CONTRIBUTOR","body":"I'm fine moving `new ScriptEngineManager().getEngineByName(\"javascript\");` in the constructor instead of static (does not bring much) and to throw an exception if null","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1866083536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1909689496","html_url":"https://github.com/apache/johnzon/pull/117#issuecomment-1909689496","issue_url":"https://api.github.com/repos/apache/johnzon/issues/117","id":1909689496,"node_id":"IC_kwDOAWzNsc5x04yY","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-25T08:56:56Z","updated_at":"2024-01-25T08:56:56Z","author_association":"MEMBER","body":"Generally looks good to me, but fails checkstyle execution in `mvn checkstyle:check`:\r\n\r\n```\r\n[ERROR] /home/markus/tmp/johnzon-pingpingy1/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/converter/DateConverterTest.java:3:1: Redundant import from the same package - org.apache.johnzon.mapper.converter.DateConverter. [RedundantImport]\r\n[ERROR] /home/markus/tmp/johnzon-pingpingy1/johnzon-mapper/src/test/java/org/apache/johnzon/mapper/converter/DateConverterTest.java:9:1: File contains tab characters (this is the first instance). [FileTabCharacter]\r\n```","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1909689496/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1909695040","html_url":"https://github.com/apache/johnzon/pull/117#issuecomment-1909695040","issue_url":"https://api.github.com/repos/apache/johnzon/issues/117","id":1909695040,"node_id":"IC_kwDOAWzNsc5x06JA","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-25T09:00:13Z","updated_at":"2024-01-25T09:00:13Z","author_association":"CONTRIBUTOR","body":"now we moved the minimum java version we can probably move to `DateTimeFormatter` and drop the threadlocal (just need to maintain some pattern compatibility but it is almost the same format IIRC) so then we can just leverage the already existing validations and get rid of this dirty threadlocal no? wdyt?","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1909695040/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1909931832","html_url":"https://github.com/apache/johnzon/pull/117#issuecomment-1909931832","issue_url":"https://api.github.com/repos/apache/johnzon/issues/117","id":1909931832,"node_id":"IC_kwDOAWzNsc5x1z84","user":{"login":"pingpingy1","id":94441510,"node_id":"U_kgDOBaEQJg","avatar_url":"https://avatars.githubusercontent.com/u/94441510?v=4","gravatar_id":"","url":"https://api.github.com/users/pingpingy1","html_url":"https://github.com/pingpingy1","followers_url":"https://api.github.com/users/pingpingy1/followers","following_url":"https://api.github.com/users/pingpingy1/following{/other_user}","gists_url":"https://api.github.com/users/pingpingy1/gists{/gist_id}","starred_url":"https://api.github.com/users/pingpingy1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pingpingy1/subscriptions","organizations_url":"https://api.github.com/users/pingpingy1/orgs","repos_url":"https://api.github.com/users/pingpingy1/repos","events_url":"https://api.github.com/users/pingpingy1/events{/privacy}","received_events_url":"https://api.github.com/users/pingpingy1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-25T11:07:01Z","updated_at":"2024-01-25T11:07:01Z","author_association":"CONTRIBUTOR","body":"Fixed the checkstyle issue for the moment, in case it might be of help.\r\nI don't consider myself wholly qualified for conducting the transition you mentioned, but it sounds good IMHO.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1909931832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1909955347","html_url":"https://github.com/apache/johnzon/pull/117#issuecomment-1909955347","issue_url":"https://api.github.com/repos/apache/johnzon/issues/117","id":1909955347,"node_id":"IC_kwDOAWzNsc5x15sT","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-25T11:20:26Z","updated_at":"2024-01-25T11:20:26Z","author_association":"CONTRIBUTOR","body":"In the spirit (date parsing can be enhanced) - this is what we do for JSON-B already for ex:\r\n\r\n```java\r\npublic class DateConverter implements Converter<Date> {\r\n    private static final ZoneId UTC = ZoneId.of(\"UTC\");\r\n\r\n    private final DateTimeFormatter formatter;\r\n\r\n    public DateConverter(final String pattern) {\r\n        this.formatter = ofPattern(pattern, ROOT);\r\n    }\r\n\r\n    @Override\r\n    public String toString(final Date instance) {\r\n        return formatter.format(ZonedDateTime.ofInstant(instance.toInstant(), UTC));\r\n    }\r\n\r\n    @Override\r\n    public Date fromString(final String text) {\r\n        try {\r\n            return Date.from(parseZonedDateTime(text, formatter).toInstant());\r\n        } catch (final DateTimeParseException dpe) {\r\n            return Date.from(LocalDateTime.parse(text).toInstant(ZoneOffset.UTC));\r\n        }\r\n    }\r\n\r\n    private static ZonedDateTime parseZonedDateTime(final String text, final DateTimeFormatter formatter) {\r\n        final TemporalAccessor parse = formatter.parse(text);\r\n        ZoneId zone = parse.query(TemporalQueries.zone());\r\n        if (Objects.isNull(zone)) {\r\n            zone = UTC;\r\n        }\r\n        final int year = parse.isSupported(YEAR) ? parse.get(YEAR) : 0;\r\n        final int month = parse.isSupported(MONTH_OF_YEAR) ? parse.get(MONTH_OF_YEAR) : 0;\r\n        final int day = parse.isSupported(DAY_OF_MONTH) ? parse.get(DAY_OF_MONTH) : 0;\r\n        final int hour = parse.isSupported(HOUR_OF_DAY) ? parse.get(HOUR_OF_DAY) : 0;\r\n        final int minute = parse.isSupported(MINUTE_OF_HOUR) ? parse.get(MINUTE_OF_HOUR) : 0;\r\n        final int second = parse.isSupported(SECOND_OF_MINUTE) ? parse.get(SECOND_OF_MINUTE) : 0;\r\n        final int millisecond = parse.isSupported(MILLI_OF_SECOND) ? parse.get(MILLI_OF_SECOND) : 0;\r\n        return ZonedDateTime.of(year, month, day, hour, minute, second, millisecond, zone);\r\n    }\r\n}\r\n```\r\n\r\nChecked the pattern table and formatter seems to be a superset of simple dateformat so we shouldn't be too bad.\r\nOnce applied there are a few failures but mainly around the error messages so test can be \"fixed\".\r\n\r\nDo you want to try that path?","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1909955347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1923660267","html_url":"https://github.com/apache/johnzon/pull/118#issuecomment-1923660267","issue_url":"https://api.github.com/repos/apache/johnzon/issues/118","id":1923660267,"node_id":"IC_kwDOAWzNsc5yqLnr","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-02T11:55:38Z","updated_at":"2024-02-02T11:55:38Z","author_association":"MEMBER","body":"@rmannibucau can we get this merged? Or do you want to wait for another approving review a little longer?","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1923660267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1997513272","html_url":"https://github.com/apache/johnzon/pull/122#issuecomment-1997513272","issue_url":"https://api.github.com/repos/apache/johnzon/issues/122","id":1997513272,"node_id":"IC_kwDOAWzNsc53D6I4","user":{"login":"gaellalire","id":442871,"node_id":"MDQ6VXNlcjQ0Mjg3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/442871?v=4","gravatar_id":"","url":"https://api.github.com/users/gaellalire","html_url":"https://github.com/gaellalire","followers_url":"https://api.github.com/users/gaellalire/followers","following_url":"https://api.github.com/users/gaellalire/following{/other_user}","gists_url":"https://api.github.com/users/gaellalire/gists{/gist_id}","starred_url":"https://api.github.com/users/gaellalire/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaellalire/subscriptions","organizations_url":"https://api.github.com/users/gaellalire/orgs","repos_url":"https://api.github.com/users/gaellalire/repos","events_url":"https://api.github.com/users/gaellalire/events{/privacy}","received_events_url":"https://api.github.com/users/gaellalire/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T13:52:50Z","updated_at":"2024-03-14T13:52:50Z","author_association":"NONE","body":"If you prefer, you could also make it configurable by adding an option in ConfigurableJohnzonProvider.\r\nThe goal is to prevent attacks by HTML injection.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1997513272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1997903610","html_url":"https://github.com/apache/johnzon/pull/122#issuecomment-1997903610","issue_url":"https://api.github.com/repos/apache/johnzon/issues/122","id":1997903610,"node_id":"IC_kwDOAWzNsc53FZb6","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T16:51:47Z","updated_at":"2024-03-14T16:51:47Z","author_association":"CONTRIBUTOR","body":"Hi @gaellalire , I don't really get the fix - I understand you want to prevent, let say `<script>alert('boom');</script>` to be in a JSON string but escaping will not be a fix since the fix is in the DOM - or XML document depending where you want the injection - so the fix belong to another layer whatever you do since between johnzon and the next layer you can unescape IMHO.\r\n\r\nSide note: if we go with a config we must also ensure the config unescape to have the write/read symmetric at the minimum so will not help your case I fear.\r\n\r\nHope it makes sense.\r\n\r\nIf I missed a case don't hesitate to give an example/add a test to let me understand more the use case.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1997903610/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1997956222","html_url":"https://github.com/apache/johnzon/pull/122#issuecomment-1997956222","issue_url":"https://api.github.com/repos/apache/johnzon/issues/122","id":1997956222,"node_id":"IC_kwDOAWzNsc53FmR-","user":{"login":"gaellalire","id":442871,"node_id":"MDQ6VXNlcjQ0Mjg3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/442871?v=4","gravatar_id":"","url":"https://api.github.com/users/gaellalire","html_url":"https://github.com/gaellalire","followers_url":"https://api.github.com/users/gaellalire/followers","following_url":"https://api.github.com/users/gaellalire/following{/other_user}","gists_url":"https://api.github.com/users/gaellalire/gists{/gist_id}","starred_url":"https://api.github.com/users/gaellalire/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaellalire/subscriptions","organizations_url":"https://api.github.com/users/gaellalire/orgs","repos_url":"https://api.github.com/users/gaellalire/repos","events_url":"https://api.github.com/users/gaellalire/events{/privacy}","received_events_url":"https://api.github.com/users/gaellalire/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T17:18:07Z","updated_at":"2024-03-14T17:18:07Z","author_association":"NONE","body":"Hello @rmannibucau,\r\n\r\nThis code\r\n```java\r\n                              final MyModel object = new MyModel(\"<script>alert('boom')</script>\");\r\n                              System.out.println(\"create: \" + object + \" - \" + System.identityHashCode(object));\r\n \r\n                              final Mapper mapper = new MapperBuilder().build();\r\n                              ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\r\n                              mapper.writeObject(object, byteArrayOutputStream);\r\n \r\n                              byte[] byteArray = byteArrayOutputStream.toByteArray();\r\n                              System.out.println(\"serialize: \" + new String(byteArray));\r\n                              final MyModel otherObject = mapper.readObject(new ByteArrayInputStream(byteArray), MyModel.class);\r\n                              System.out.println(\"unserialize: \" + otherObject + \" - \" + System.identityHashCode(otherObject));\r\n```\r\n\r\nwill produce\r\n```\r\ncreate: <script>alert('boom')</script> - 366712642\r\nserialize: {\"name\":\"\\u003Cscript\\u003Ealert('boom')\\u003C/script\\u003E\"}\r\nunserialize: <script>alert('boom')</script> - 1419810764\r\n```\r\nwith the patch and not\r\n```\r\nunserialize: \\u003Cscript\\u003Ealert('boom')\\u003C/script\\u003E - 1419810764\r\n```\r\nas you maybe have expected.\r\n\r\nThere is no need to change the read part to be symmetric both '<' and '\\u003C' will produce the same java char '<'. It is only another way to print the char in a JSON string.\r\n\r\nI was debuging TomEE and I think this is the only place to have a safe response in all our REST methods using JaxRS. If you think there is better place / layer please tell me where. I don't want to escape input parameters, because we will lose ability to access / research objects containing '<' or '>', so for me the response must be escaped and I did not see another place.\r\n","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1997956222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1997966006","html_url":"https://github.com/apache/johnzon/pull/122#issuecomment-1997966006","issue_url":"https://api.github.com/repos/apache/johnzon/issues/122","id":1997966006,"node_id":"IC_kwDOAWzNsc53Foq2","user":{"login":"gaellalire","id":442871,"node_id":"MDQ6VXNlcjQ0Mjg3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/442871?v=4","gravatar_id":"","url":"https://api.github.com/users/gaellalire","html_url":"https://github.com/gaellalire","followers_url":"https://api.github.com/users/gaellalire/followers","following_url":"https://api.github.com/users/gaellalire/following{/other_user}","gists_url":"https://api.github.com/users/gaellalire/gists{/gist_id}","starred_url":"https://api.github.com/users/gaellalire/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaellalire/subscriptions","organizations_url":"https://api.github.com/users/gaellalire/orgs","repos_url":"https://api.github.com/users/gaellalire/repos","events_url":"https://api.github.com/users/gaellalire/events{/privacy}","received_events_url":"https://api.github.com/users/gaellalire/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T17:23:45Z","updated_at":"2024-03-14T17:23:45Z","author_association":"NONE","body":"I think I understood, you want to escape after Johnzon finished its serialization. But it is inefficient we will have to parse and rewrite the JSON.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1997966006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1997968664","html_url":"https://github.com/apache/johnzon/pull/122#issuecomment-1997968664","issue_url":"https://api.github.com/repos/apache/johnzon/issues/122","id":1997968664,"node_id":"IC_kwDOAWzNsc53FpUY","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T17:24:51Z","updated_at":"2024-03-14T17:26:02Z","author_association":"CONTRIBUTOR","body":"> I think I understood, you want to escape after Johnzon finished its serialization. But it is inefficient we will have to parse and rewrite the JSON.\r\n\r\nI was more thinking about doing it before:\r\n\r\n> new MyModel(escapeCauseMyFrontendIsBadAndBindsDataDirectly(\"<script>alert('boom')</script>\"));\r\n\r\nThe key there is that there is no security risk returning raw html in JSON, there is no security guarantee returning escaped html in JSON.\r\nThe only place it can guarantee the security there is between the json reader and \"binder\" (react?), and this is where not using unsafe html binding is key and makes you safe.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1997968664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1997987696","html_url":"https://github.com/apache/johnzon/pull/122#issuecomment-1997987696","issue_url":"https://api.github.com/repos/apache/johnzon/issues/122","id":1997987696,"node_id":"IC_kwDOAWzNsc53Ft9w","user":{"login":"gaellalire","id":442871,"node_id":"MDQ6VXNlcjQ0Mjg3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/442871?v=4","gravatar_id":"","url":"https://api.github.com/users/gaellalire","html_url":"https://github.com/gaellalire","followers_url":"https://api.github.com/users/gaellalire/followers","following_url":"https://api.github.com/users/gaellalire/following{/other_user}","gists_url":"https://api.github.com/users/gaellalire/gists{/gist_id}","starred_url":"https://api.github.com/users/gaellalire/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaellalire/subscriptions","organizations_url":"https://api.github.com/users/gaellalire/orgs","repos_url":"https://api.github.com/users/gaellalire/repos","events_url":"https://api.github.com/users/gaellalire/events{/privacy}","received_events_url":"https://api.github.com/users/gaellalire/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T17:34:48Z","updated_at":"2024-03-14T17:34:48Z","author_association":"NONE","body":"What will be the code of escapeCauseMyFrontendIsBadAndBindsDataDirectly ?\r\n```java\r\nString escapeCauseMyFrontendIsBadAndBindsDataDirectly(String param) {\r\n  return param.replaceAll(\"<\", \"\\u003C\").replaceAll(\">\", \"\\u003E\"); // is like identity, it is doing nothing\r\n}\r\n```\r\nYou cannot do anything here if your method take a String and return a String.\r\n\r\nWe can only patch the serializer.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1997987696/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1998029313","html_url":"https://github.com/apache/johnzon/pull/122#issuecomment-1998029313","issue_url":"https://api.github.com/repos/apache/johnzon/issues/122","id":1998029313,"node_id":"IC_kwDOAWzNsc53F4IB","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T17:59:39Z","updated_at":"2024-03-14T17:59:39Z","author_association":"MEMBER","body":"to me it sounds more like you want to sanitize whatever json johnzon produced (from probably untrusted input). sanitizing input so you can somewhat safely directly inject it into the DOM is absolutely not an easy task, but I'm also having issues right now understanding how escaping HTML would help you\r\n\r\nFor example, JS just does this and automatically unescapes again:\r\n```\r\n$ node\r\nWelcome to Node.js v19.7.0.\r\nType \".help\" for more information.\r\n> JSON.parse(\"{\\\"value\\\": \\\"\\u003C\\u003E\\\"}\")\r\n{ value: '<>' }\r\n```","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1998029313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1998060261","html_url":"https://github.com/apache/johnzon/pull/122#issuecomment-1998060261","issue_url":"https://api.github.com/repos/apache/johnzon/issues/122","id":1998060261,"node_id":"IC_kwDOAWzNsc53F_rl","user":{"login":"gaellalire","id":442871,"node_id":"MDQ6VXNlcjQ0Mjg3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/442871?v=4","gravatar_id":"","url":"https://api.github.com/users/gaellalire","html_url":"https://github.com/gaellalire","followers_url":"https://api.github.com/users/gaellalire/followers","following_url":"https://api.github.com/users/gaellalire/following{/other_user}","gists_url":"https://api.github.com/users/gaellalire/gists{/gist_id}","starred_url":"https://api.github.com/users/gaellalire/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaellalire/subscriptions","organizations_url":"https://api.github.com/users/gaellalire/orgs","repos_url":"https://api.github.com/users/gaellalire/repos","events_url":"https://api.github.com/users/gaellalire/events{/privacy}","received_events_url":"https://api.github.com/users/gaellalire/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T18:17:53Z","updated_at":"2024-03-14T18:18:27Z","author_association":"NONE","body":"> to me it sounds more like you want to sanitize whatever json johnzon produced (from probably untrusted input). \r\n\r\nYes because of the number of method I have, I prefer a global solution. Security team don't want script injection, I don't want  to change existing behavior.\r\n\r\nYou can escape < to \\&lt; but in that case you will have to ask all of your clients to add unescapeHTML in their code (every methods, every string fields ...).\r\n\r\nThe beauty here is that this escape is not a real one for JSON ( \"\\u003C\"  = \"<\" : it is just another way to write it) while for an HTML parser (\"\\u003C\"  != \"<\") it will behave differently.\r\n\r\nSo with that patch, REST clients have nothing to change and security team cannot insert script tags.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1998060261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1998478259","html_url":"https://github.com/apache/johnzon/pull/122#issuecomment-1998478259","issue_url":"https://api.github.com/repos/apache/johnzon/issues/122","id":1998478259,"node_id":"IC_kwDOAWzNsc53Hluz","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T21:02:14Z","updated_at":"2024-03-14T21:02:14Z","author_association":"CONTRIBUTOR","body":"> Yes because of the number of method I have, I prefer a global solution. Security team don't want script injection, I don't want to change existing behavior.\r\n\r\nWe likely aim at reaching the same goal.\r\n\r\n> You can escape < to &lt; but in that case you will have to ask all of your clients to add unescapeHTML in their code (every methods, every string fields ...).\r\n\r\nDepends how you do it but ultimately no, just at the data binding time.\r\n\r\n> The beauty here is that this escape is not a real one for JSON ( \"\\u003C\" = \"<\" : it is just another way to write it) while for an HTML parser (\"\\u003C\" != \"<\") it will behave differently.\r\n\r\nYes and why we discuss it is that you can still get injections so you just made it harder to understand but you didn't solve the issue you PR for.\r\n\r\n> So with that patch, REST clients have nothing to change and security team cannot insert script tags.\r\n\r\nMaybe not your team but I know some people and frontend apps who are able to do it without more changes ;).\r\n\r\nLong story short: HTML injections can only be handled in the frontend to be safely handled, anything else is just faking a fix.\r\nIt is similar to \"SQL injection can only be fixed at JDBC layer\" (in java but more generally at binding time/protocol abstraction).\r\nAll the fixes in WAF to filter SQL injections make it less likely to happen but they can be bypassed and you still get SQL injections.\r\nThis is why originally I spoke about fixing the issue at the right layer, JSON can look tempting and I fully understand your reasoning but it does not fix it.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1998478259/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1998492600","html_url":"https://github.com/apache/johnzon/pull/122#issuecomment-1998492600","issue_url":"https://api.github.com/repos/apache/johnzon/issues/122","id":1998492600,"node_id":"IC_kwDOAWzNsc53HpO4","user":{"login":"tandraschko","id":2485545,"node_id":"MDQ6VXNlcjI0ODU1NDU=","avatar_url":"https://avatars.githubusercontent.com/u/2485545?v=4","gravatar_id":"","url":"https://api.github.com/users/tandraschko","html_url":"https://github.com/tandraschko","followers_url":"https://api.github.com/users/tandraschko/followers","following_url":"https://api.github.com/users/tandraschko/following{/other_user}","gists_url":"https://api.github.com/users/tandraschko/gists{/gist_id}","starred_url":"https://api.github.com/users/tandraschko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tandraschko/subscriptions","organizations_url":"https://api.github.com/users/tandraschko/orgs","repos_url":"https://api.github.com/users/tandraschko/repos","events_url":"https://api.github.com/users/tandraschko/events{/privacy}","received_events_url":"https://api.github.com/users/tandraschko/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T21:12:58Z","updated_at":"2024-03-14T21:12:58Z","author_association":"MEMBER","body":"+1 romain\r\n\r\nIsnt there anything like ResponseWritterWraper SPI like in JSF? So user can just hookin","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1998492600/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1998499592","html_url":"https://github.com/apache/johnzon/pull/122#issuecomment-1998499592","issue_url":"https://api.github.com/repos/apache/johnzon/issues/122","id":1998499592,"node_id":"IC_kwDOAWzNsc53Hq8I","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T21:18:07Z","updated_at":"2024-03-14T21:18:07Z","author_association":"CONTRIBUTOR","body":"ultimately I guess doing a decorator on top of JSON-P to override write methods with string values (unlikely for keys) is possible and already pluggable in johnzon but I would really discourage anything like that and just handle open inputs/forms properly in the backend and the binding in the frontend securely.\r\nWill be way more efficient (perf) and sane (safe + easy to audit) IMHO.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1998499592/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1999198687","html_url":"https://github.com/apache/johnzon/pull/123#issuecomment-1999198687","issue_url":"https://api.github.com/repos/apache/johnzon/issues/123","id":1999198687,"node_id":"IC_kwDOAWzNsc53KVnf","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-15T08:54:11Z","updated_at":"2024-03-15T08:54:11Z","author_association":"MEMBER","body":"We're already implicitly throwing NPEs when writer is null by invoking methods on it, don't think there is any need to explicitly guard for this\r\n\r\nYour test is also already passing without modifying any other source code","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/1999198687/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2002889653","html_url":"https://github.com/apache/johnzon/pull/123#issuecomment-2002889653","issue_url":"https://api.github.com/repos/apache/johnzon/issues/123","id":2002889653,"node_id":"IC_kwDOAWzNsc53Yau1","user":{"login":"pingpingy1","id":94441510,"node_id":"U_kgDOBaEQJg","avatar_url":"https://avatars.githubusercontent.com/u/94441510?v=4","gravatar_id":"","url":"https://api.github.com/users/pingpingy1","html_url":"https://github.com/pingpingy1","followers_url":"https://api.github.com/users/pingpingy1/followers","following_url":"https://api.github.com/users/pingpingy1/following{/other_user}","gists_url":"https://api.github.com/users/pingpingy1/gists{/gist_id}","starred_url":"https://api.github.com/users/pingpingy1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pingpingy1/subscriptions","organizations_url":"https://api.github.com/users/pingpingy1/orgs","repos_url":"https://api.github.com/users/pingpingy1/repos","events_url":"https://api.github.com/users/pingpingy1/events{/privacy}","received_events_url":"https://api.github.com/users/pingpingy1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-18T04:04:20Z","updated_at":"2024-03-18T04:04:20Z","author_association":"CONTRIBUTOR","body":"@jungm Thanks for the response. I don't think I was quite thinking right when I wrote those tests.\r\nThe following is the NPE that I intended to address:\r\n\r\n```java\r\npublic static void main(String args[]) throws Exception {\r\nMapper mapper = MapperLocatorDelegate.locate();\r\ncon_recv0.writeObject((Writer) null, (Object) \"string\");\r\n}\r\n```\r\n```console\r\nException in thread \"main\" java.lang.NullPointerException: Cannot invoke \"java.io.Writer.write(char[], int, int)\" because \"this.val$from\" is null\r\n        at org.apache.johnzon.mapper.internal.Streams$1.write(Streams.java:45)\r\n        at org.apache.johnzon.core.JsonGeneratorImpl.flushBuffer(JsonGeneratorImpl.java:481)\r\n        at org.apache.johnzon.core.JsonGeneratorImpl.close(JsonGeneratorImpl.java:451)\r\n        at org.apache.johnzon.mapper.Mapper.writeObject(Mapper.java:188)\r\n        at Test.main(Test.java:17)\r\n```\r\n\r\nI know that the explicit `null` here makes the problem obvious, but if it weren't visible, the NPE is thrown not upon writing but later when flushing the buffer, which I thought could cause problems in some scenarios.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2002889653/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2003786756","html_url":"https://github.com/apache/johnzon/pull/123#issuecomment-2003786756","issue_url":"https://api.github.com/repos/apache/johnzon/issues/123","id":2003786756,"node_id":"IC_kwDOAWzNsc53b1wE","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-18T12:30:16Z","updated_at":"2024-03-18T12:30:16Z","author_association":"MEMBER","body":"Thanks, I understand a bit more what you want to accomplish now :slightly_smiling_face: \r\n\r\nArguably `Cannot invoke \"java.io.Writer.write(char[], int, int)\" because \"this.val$from\" is null` can be a bit confusing (a user might think: What is this.val$from suppposed to be? What have I done wrong to make it null?\")\r\nI do believe renaming this parameter would be enough to clarify what has gone wrong though, adding null guards in the Mapper blows up the code with no real benefit. The exception is thrown immediately and easily debuggable, just not as clear why it is happening right now\r\n\r\nYou want to try going that path? Would also be an awesome opportunity to move the anonymous classes from `org.apache.johnzon.mapper.internal.Streams` into proper classes IMHO","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2003786756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2003838137","html_url":"https://github.com/apache/johnzon/pull/123#issuecomment-2003838137","issue_url":"https://api.github.com/repos/apache/johnzon/issues/123","id":2003838137,"node_id":"IC_kwDOAWzNsc53cCS5","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-18T12:56:26Z","updated_at":"2024-03-18T12:56:26Z","author_association":"CONTRIBUTOR","body":"+1 to just rename the parameter if it helps, having null there should have been identified way earlier in the chain anyway so shouldn't even be possible in terms of code flow. `requireNonNull` does not look required to me.\r\n\r\nSide note: one required test is that it ends as a `JsonbException` in `johnzon-jsonb` and not a `NullPointerException` or anything else and that the runtime exception thrown in mapper stays of the same type for backward compat.\r\n\r\n@jungm no big issue for me to make Streams anonymous classes inner classes but I'd like to avoid to make them surfacing as accessible or root classes, they are 100% dedicated to a particular internal need and should be droppable without caring about backward compat - was why it was done this way.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2003838137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2003881839","html_url":"https://github.com/apache/johnzon/pull/123#issuecomment-2003881839","issue_url":"https://api.github.com/repos/apache/johnzon/issues/123","id":2003881839,"node_id":"IC_kwDOAWzNsc53cM9v","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-18T13:16:55Z","updated_at":"2024-03-18T13:16:55Z","author_association":"MEMBER","body":"Generally I'm not a friend of inner classes, yet alone anonymous classes - capturing variables from an \"outside class\" makes code super hard to read IMHO\r\nI wouldn't worry too much about users assuming backwards compatibility with code that is literally in a package named `*.internal` tbh","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2003881839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2003948812","html_url":"https://github.com/apache/johnzon/pull/123#issuecomment-2003948812","issue_url":"https://api.github.com/repos/apache/johnzon/issues/123","id":2003948812,"node_id":"IC_kwDOAWzNsc53cdUM","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-18T13:43:47Z","updated_at":"2024-03-18T13:43:47Z","author_association":"CONTRIBUTOR","body":"@jungm maybe let do internal.DelegatingXStream classes (1-1 delegation pattern/decorator) and in `Stream` just override the close by a flush delegation, will enable to \"expose\" the delegating classes and maintain most of the code there and still prevent anyone to use the \"skip the close\" impl with an IDE magic trick.\r\n\r\n> ....code that is literally in a package named *.internal...\r\n\r\nit is not uncommon to see sun.internal in imports from time to time and then a \"fix commit\" and 99% of the time is it cause the IDE imported the wrong class and there it could be a big silent issue (leak with its impacts either in mem or ulimit).\r\nSo I prefer to not assume it.\r\n\r\n> capturing variables from an \"outside class\" makes code super hard to read IMHO\r\n\r\nguess we are not more at that stage, lambdas made it more than common ;).","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2003948812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2005319070","html_url":"https://github.com/apache/johnzon/pull/123#issuecomment-2005319070","issue_url":"https://api.github.com/repos/apache/johnzon/issues/123","id":2005319070,"node_id":"IC_kwDOAWzNsc53hr2e","user":{"login":"pingpingy1","id":94441510,"node_id":"U_kgDOBaEQJg","avatar_url":"https://avatars.githubusercontent.com/u/94441510?v=4","gravatar_id":"","url":"https://api.github.com/users/pingpingy1","html_url":"https://github.com/pingpingy1","followers_url":"https://api.github.com/users/pingpingy1/followers","following_url":"https://api.github.com/users/pingpingy1/following{/other_user}","gists_url":"https://api.github.com/users/pingpingy1/gists{/gist_id}","starred_url":"https://api.github.com/users/pingpingy1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pingpingy1/subscriptions","organizations_url":"https://api.github.com/users/pingpingy1/orgs","repos_url":"https://api.github.com/users/pingpingy1/repos","events_url":"https://api.github.com/users/pingpingy1/events{/privacy}","received_events_url":"https://api.github.com/users/pingpingy1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-18T23:43:33Z","updated_at":"2024-03-18T23:43:33Z","author_association":"CONTRIBUTOR","body":"@jungm @rmannibucau Not quite sure if I understand the delegation pattern, so I pushed a test commit that moves the anonymous `Writer` class to the `DelegatingWriter` class. Could you please check if this is what you intended?","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2005319070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2006431214","html_url":"https://github.com/apache/johnzon/pull/123#issuecomment-2006431214","issue_url":"https://api.github.com/repos/apache/johnzon/issues/123","id":2006431214,"node_id":"IC_kwDOAWzNsc53l7Xu","user":{"login":"pingpingy1","id":94441510,"node_id":"U_kgDOBaEQJg","avatar_url":"https://avatars.githubusercontent.com/u/94441510?v=4","gravatar_id":"","url":"https://api.github.com/users/pingpingy1","html_url":"https://github.com/pingpingy1","followers_url":"https://api.github.com/users/pingpingy1/followers","following_url":"https://api.github.com/users/pingpingy1/following{/other_user}","gists_url":"https://api.github.com/users/pingpingy1/gists{/gist_id}","starred_url":"https://api.github.com/users/pingpingy1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pingpingy1/subscriptions","organizations_url":"https://api.github.com/users/pingpingy1/orgs","repos_url":"https://api.github.com/users/pingpingy1/repos","events_url":"https://api.github.com/users/pingpingy1/events{/privacy}","received_events_url":"https://api.github.com/users/pingpingy1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-19T09:11:48Z","updated_at":"2024-03-19T09:11:48Z","author_association":"CONTRIBUTOR","body":"@rmannibucau Implemented all four delegated classes! PTAL","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2006431214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2006761132","html_url":"https://github.com/apache/johnzon/pull/123#issuecomment-2006761132","issue_url":"https://api.github.com/repos/apache/johnzon/issues/123","id":2006761132,"node_id":"IC_kwDOAWzNsc53nL6s","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-19T10:36:34Z","updated_at":"2024-03-19T10:36:34Z","author_association":"CONTRIBUTOR","body":"Ok for me, to be picky (not a blocker) I'd like to get the param and field `final` in the delegating classes and `// no-op` in the payload instead of aside the method (an autoreformat will break it I think in most IDE) but can be handled after the merge easily - I can even do it for you if you feel you did enough (I fully agree, thanks for that ;)).","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2006761132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2007101918","html_url":"https://github.com/apache/johnzon/pull/123#issuecomment-2007101918","issue_url":"https://api.github.com/repos/apache/johnzon/issues/123","id":2007101918,"node_id":"IC_kwDOAWzNsc53ofHe","user":{"login":"pingpingy1","id":94441510,"node_id":"U_kgDOBaEQJg","avatar_url":"https://avatars.githubusercontent.com/u/94441510?v=4","gravatar_id":"","url":"https://api.github.com/users/pingpingy1","html_url":"https://github.com/pingpingy1","followers_url":"https://api.github.com/users/pingpingy1/followers","following_url":"https://api.github.com/users/pingpingy1/following{/other_user}","gists_url":"https://api.github.com/users/pingpingy1/gists{/gist_id}","starred_url":"https://api.github.com/users/pingpingy1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pingpingy1/subscriptions","organizations_url":"https://api.github.com/users/pingpingy1/orgs","repos_url":"https://api.github.com/users/pingpingy1/repos","events_url":"https://api.github.com/users/pingpingy1/events{/privacy}","received_events_url":"https://api.github.com/users/pingpingy1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-19T12:53:47Z","updated_at":"2024-03-19T12:53:47Z","author_association":"CONTRIBUTOR","body":"@rmannibucau No worries! Just pushed those changes.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2007101918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2012041521","html_url":"https://github.com/apache/johnzon/pull/117#issuecomment-2012041521","issue_url":"https://api.github.com/repos/apache/johnzon/issues/117","id":2012041521,"node_id":"IC_kwDOAWzNsc537VEx","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-21T11:39:40Z","updated_at":"2024-03-21T11:39:40Z","author_association":"MEMBER","body":"@pingpingy1, want to take care of this PR as well? :slightly_smiling_face:","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2012041521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2019872197","html_url":"https://github.com/apache/johnzon/pull/125#issuecomment-2019872197","issue_url":"https://api.github.com/repos/apache/johnzon/issues/125","id":2019872197,"node_id":"IC_kwDOAWzNsc54ZM3F","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-26T09:02:13Z","updated_at":"2024-03-26T09:02:13Z","author_association":"CONTRIBUTOR","body":"Do we want to make it lazy and enable tck module or make it right and run it as part of the modules they test instead (and drop tck module) now?","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2019872197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2019885453","html_url":"https://github.com/apache/johnzon/pull/125#issuecomment-2019885453","issue_url":"https://api.github.com/repos/apache/johnzon/issues/125","id":2019885453,"node_id":"IC_kwDOAWzNsc54ZQGN","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-26T09:09:06Z","updated_at":"2024-03-26T09:13:19Z","author_association":"MEMBER","body":"+1 for dropping TCK modules and integrating it right into the implementing modules\r\n\r\nIIRC at least the json-p pluggability tests were quite flimsy to set up, I'll try to make it work","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2019885453/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2019972785","html_url":"https://github.com/apache/johnzon/pull/125#issuecomment-2019972785","issue_url":"https://api.github.com/repos/apache/johnzon/issues/125","id":2019972785,"node_id":"IC_kwDOAWzNsc54Zlax","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-26T09:50:43Z","updated_at":"2024-03-26T09:50:43Z","author_association":"MEMBER","body":"I believe we actually have no need to run pluggability tests. They test the JSON-P SPI which isn't even part of johnzon: https://github.com/jakartaee/jsonp-api/blob/2.1.1-tck/tck/tck-tests-pluggability/src/main/java/ee/jakarta/tck/jsonp/pluggability/jsonprovidertests/ClientTests.java","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2019972785/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2020065949","html_url":"https://github.com/apache/johnzon/pull/125#issuecomment-2020065949","issue_url":"https://api.github.com/repos/apache/johnzon/issues/125","id":2020065949,"node_id":"IC_kwDOAWzNsc54Z8Kd","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-26T10:31:49Z","updated_at":"2024-03-26T10:31:49Z","author_association":"CONTRIBUTOR","body":"@jungm depends, if you want to be certified you need to since the certification is for the impl+used api to pass it (see it as \"standalone\" bundle). No strong opinion on it.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2020065949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2020333669","html_url":"https://github.com/apache/johnzon/pull/125#issuecomment-2020333669","issue_url":"https://api.github.com/repos/apache/johnzon/issues/125","id":2020333669,"node_id":"IC_kwDOAWzNsc54a9hl","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-26T12:45:08Z","updated_at":"2024-03-26T12:45:08Z","author_association":"MEMBER","body":"I guess if we ever want to be certified we would need to use the test harness provided with the TCK anyways (https://github.com/jakartaee/jsonp-api/tree/master/tck/tck-dist-eftl, https://github.com/jakartaee/jsonb-api/tree/master/tck-dist), though not sure to be fair\r\n\r\nAnyways, I see no real advantage of running pluggability tests if we don't have a jsonp-api module\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2020333669/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2020371109","html_url":"https://github.com/apache/johnzon/pull/125#issuecomment-2020371109","issue_url":"https://api.github.com/repos/apache/johnzon/issues/125","id":2020371109,"node_id":"IC_kwDOAWzNsc54bGql","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-26T13:02:22Z","updated_at":"2024-03-26T13:02:22Z","author_association":"CONTRIBUTOR","body":"Hmm I'm not sure of this part.\r\n\r\n> Anyways, I see no real advantage of running pluggability tests if we don't have a jsonp-api module\r\n\r\nWe decided to inherit from the official one so we do have it, the point of these tests is to ensure you don't break the API impl on that part - this is more obvious for containers which could hardcode the SPI or prevent the pluggability - it is often togglable like in TomEE.\r\nBut long story short we should run it even if we fake the env for these tests to show our impl does not prevent it and does not break it, nothing more IMHO.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2020371109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2026074764","html_url":"https://github.com/apache/johnzon/pull/125#issuecomment-2026074764","issue_url":"https://api.github.com/repos/apache/johnzon/issues/125","id":2026074764,"node_id":"IC_kwDOAWzNsc54w3KM","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-28T20:38:51Z","updated_at":"2024-03-28T20:38:51Z","author_association":"MEMBER","body":"Spent some time on this now, running pluggability tests within johnzon-core is doable but the solution I came up with feels like a terrible hack IMO\r\n\r\nThere's also still a weird issue with the javadoc plugin still happening right now (`mvn clean install -Dmaven.javadoc.skip` works fine already)","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2026074764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2026123099","html_url":"https://github.com/apache/johnzon/pull/125#issuecomment-2026123099","issue_url":"https://api.github.com/repos/apache/johnzon/issues/125","id":2026123099,"node_id":"IC_kwDOAWzNsc54xC9b","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-28T21:06:53Z","updated_at":"2024-03-28T21:06:53Z","author_association":"CONTRIBUTOR","body":"Javadoc should run anyway so not a big deal pby.\r\nNot sure about the hack, is it using vintage engine?","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2026123099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2026136988","html_url":"https://github.com/apache/johnzon/pull/125#issuecomment-2026136988","issue_url":"https://api.github.com/repos/apache/johnzon/issues/125","id":2026136988,"node_id":"IC_kwDOAWzNsc54xGWc","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-28T21:12:34Z","updated_at":"2024-03-28T21:12:34Z","author_association":"MEMBER","body":"Yeah running vintage engine could probably clean up things a bit more, didn't think of this and went straight to configuring providers when I saw surefire automatically switching to jupiter provider once I dropped in the tck dependencies\r\n\r\nThe actual hack I meant though is this: https://github.com/apache/johnzon/blob/9050a4d31249f04493e214a7c59c86f8b8f1b58d/johnzon-core/pom.xml#L161","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2026136988/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2026790121","html_url":"https://github.com/apache/johnzon/pull/125#issuecomment-2026790121","issue_url":"https://api.github.com/repos/apache/johnzon/issues/125","id":2026790121,"node_id":"IC_kwDOAWzNsc54zlzp","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-29T07:13:13Z","updated_at":"2024-03-29T07:13:13Z","author_association":"CONTRIBUTOR","body":"This hack is ok for me","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2026790121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2028416120","html_url":"https://github.com/apache/johnzon/pull/125#issuecomment-2028416120","issue_url":"https://api.github.com/repos/apache/johnzon/issues/125","id":2028416120,"node_id":"IC_kwDOAWzNsc545yx4","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-30T18:16:06Z","updated_at":"2024-03-30T18:16:06Z","author_association":"MEMBER","body":"Build works now, it was failing due to sigtest-maven-plugin having a dependency on the local file `${java.home}/lib/ct.sym`, see https://github.com/jtulach/netbeans-apitest/pull/3\r\nHaving this dependency breaks javadoc plugin though, I excluded the dependency for now and it does not break tests. Probably worth investigating more and raising issues where appropriate\r\n\r\nJohnzon tests also run on junit 5 now (through vintage engine for now)","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2028416120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2187349274","html_url":"https://github.com/apache/johnzon/pull/128#issuecomment-2187349274","issue_url":"https://api.github.com/repos/apache/johnzon/issues/128","id":2187349274,"node_id":"IC_kwDOAWzNsc6CYE0a","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-24T20:29:12Z","updated_at":"2024-06-24T20:29:12Z","author_association":"MEMBER","body":"The idea is basically: while there's chars left try to encode them into the buffer. If the encoding overflows (it is indeed handled) flush the buffer to the underlying OutputStream. I ignored underflows because imo underflowing (no input data left) is just the desired state we want to end up in\r\n\r\nTo me [javadocs](https://docs.oracle.com/en%2Fjava%2Fjavase%2F11%2Fdocs%2Fapi%2F%2F/java.base/java/nio/charset/CharsetEncoder.html#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)) don't sound like CharsetEncoder throws when encoding, hence I added the throwException() call\r\n\r\nAgree we probably need more tests, this is really just a first naive approach to move away from sun StreamEncoder","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2187349274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2188049641","html_url":"https://github.com/apache/johnzon/pull/128#issuecomment-2188049641","issue_url":"https://api.github.com/repos/apache/johnzon/issues/128","id":2188049641,"node_id":"IC_kwDOAWzNsc6Cavzp","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-25T06:05:05Z","updated_at":"2024-06-25T06:05:05Z","author_association":"CONTRIBUTOR","body":"@jungm I understand that part but we are far from the implementation on java < 22 so pretty sure we'll find not backward compatible cases. What can be worth it is to bench oututstreamwriter+bufferedwriter on java 22 vs our impl on java 21, if not diff we just extend it for backward compat?","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2188049641/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2189020708","html_url":"https://github.com/apache/johnzon/pull/128#issuecomment-2189020708","issue_url":"https://api.github.com/repos/apache/johnzon/issues/128","id":2189020708,"node_id":"IC_kwDOAWzNsc6Cec4k","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-25T13:50:56Z","updated_at":"2024-06-25T13:50:56Z","author_association":"MEMBER","body":"is BufferedWriter + OutputStreamWriter even an option? adding a buffer before delegating to OutputStreamWriter will not eliminate the internal buffer in OutputStreamWriter\r\n\r\n\r\nanyways, some quick benching shows that this change slows down things quite a bit :/ (ran on JDK 11)\r\n\r\ncurrent BoundedOutputStreamWriter:\r\n```\r\nBenchmark    Mode  Cnt   Score   Error   Units\r\nMain.bench  thrpt    3  35.772 ± 1.922  ops/us\r\n```\r\n\r\nNew BoundedOutputStreamWriter\r\n```\r\nBenchmark    Mode  Cnt   Score   Error   Units\r\nMain.bench  thrpt    3  22.928 ± 2.732  ops/us\r\n```\r\n\r\nFor reference, this is the jmh benchmark:\r\n```java\r\n@BenchmarkMode(Mode.Throughput)\r\n@Timeout(time = 10)\r\n@Warmup(iterations = 3)\r\n@State(Scope.Benchmark)\r\n@OutputTimeUnit(TimeUnit.MICROSECONDS)\r\npublic class Main {\r\n    private Writer writer;\r\n    private char[] data;\r\n\r\n    @Setup\r\n    public void setUp() {\r\n        writer = new BoundedOutputStreamWriter(OutputStream.nullOutputStream(), StandardCharsets.UTF_8, 100);\r\n        data = \"Hello world!\".toCharArray();\r\n    }\r\n\r\n    @Benchmark\r\n    public void bench() throws IOException {\r\n        writer.write(data);\r\n    }\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2189020708/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2189047747","html_url":"https://github.com/apache/johnzon/pull/128#issuecomment-2189047747","issue_url":"https://api.github.com/repos/apache/johnzon/issues/128","id":2189047747,"node_id":"IC_kwDOAWzNsc6CejfD","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-25T14:02:43Z","updated_at":"2024-06-25T14:02:43Z","author_association":"CONTRIBUTOR","body":"what we don't want is to have an \"exploding\" bugger, the internal buffer of `OutputStreamWriter` is acceptable (even if I agree undesired) but the facading buffer kind of saves things.\r\n\r\nalternatively we can do an impl close to the old one of the jdk to just stay ~the same, wdyt?","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2189047747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2192043805","html_url":"https://github.com/apache/johnzon/pull/128#issuecomment-2192043805","issue_url":"https://api.github.com/repos/apache/johnzon/issues/128","id":2192043805,"node_id":"IC_kwDOAWzNsc6Cp-8d","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-26T15:49:53Z","updated_at":"2024-06-26T15:49:53Z","author_association":"MEMBER","body":"Now you got me confused 😄\r\nIsn't the whole point of BoundedOutputStreamWriter to have an OutputStreamWriter where we can control the internal buffer size to kind of force it to flush more often? Can't really see right now how the buffer even in jdk 22 StreamEncoder could explode, It starts at 512 bytes and grows to 8kb max (https://github.com/openjdk/jdk22u/blob/master/src/java.base/share/classes/sun/nio/cs/StreamEncoder.java#L44-L45), only thing I could find troublesome is the buffer being reallocated every time the StreamEncoder encounters a chunk of data it can't handle yet.\r\nIs that what you mean by exploding? Reallocating the buffer until It reaches 8k?\r\n\r\n\r\nOpenJDK 21 [StreamEncoder](https://github.com/openjdk/jdk21u/blob/master/src/java.base/share/classes/sun/nio/cs/StreamEncoder.java) is actually not that big but I'm afraid we can't really use this in the ASF as its GPLv2 licensed: https://www.apache.org/legal/resolved.html#category-x\r\nSo realistically we can't just take it but need to rewrite it and test it well, which is basically the situation we're already in right now\r\n\r\nMaybe we can really just drop BoundedOutputStreamWriter altogether?","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2192043805/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2192371137","html_url":"https://github.com/apache/johnzon/pull/128#issuecomment-2192371137","issue_url":"https://api.github.com/repos/apache/johnzon/issues/128","id":2192371137,"node_id":"IC_kwDOAWzNsc6CrO3B","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-26T18:21:10Z","updated_at":"2024-06-26T18:21:10Z","author_association":"MEMBER","body":"Did some more benchmarking (all ran on JDK 21 this time):\r\n\r\n```\r\nBenchmark                   Mode  Cnt   Score    Error   Units\r\nMyBenchmark.buffered       thrpt   25  11.728 ±  0.042  ops/us\r\nMyBenchmark.bufferedHuge   thrpt   25   0.277 ±  0.004  ops/us\r\nMyBenchmark.bufferedSmall  thrpt   25  54.672 ±  0.328  ops/us\r\nMyBenchmark.johnzon        thrpt   25   2.669 ±  0.022  ops/us\r\nMyBenchmark.johnzonHuge    thrpt   25   0.029 ±  0.001  ops/us\r\nMyBenchmark.johnzonSmall   thrpt   25  55.897 ±  0.188  ops/us\r\nMyBenchmark.raw            thrpt   25  20.570 ±  0.431  ops/us\r\nMyBenchmark.rawHuge        thrpt   25   0.278 ±  0.005  ops/us\r\nMyBenchmark.rawSmall       thrpt   25  73.361 ±  0.273  ops/us\r\n```\r\n\r\n```java\r\n@BenchmarkMode(Mode.Throughput)\r\n@Timeout(time = 10)\r\n@Warmup(iterations = 3)\r\n@State(Scope.Benchmark)\r\n@OutputTimeUnit(TimeUnit.MICROSECONDS)\r\npublic class MyBenchmark {\r\n    private Writer johnzon;\r\n    private Writer buffered;\r\n    private Writer raw;\r\n\r\n    private char[] dataSmall;\r\n    private char[] data;\r\n    private char[] dataHuge;\r\n\r\n    @Setup\r\n    public void setUp() {\r\n        johnzon = new BoundedOutputStreamWriter(OutputStream.nullOutputStream(), StandardCharsets.UTF_8, 100);\r\n        buffered = new BufferedWriter(new OutputStreamWriter(OutputStream.nullOutputStream(), StandardCharsets.UTF_8), 100);\r\n        raw = new OutputStreamWriter(OutputStream.nullOutputStream(), StandardCharsets.UTF_8);\r\n\r\n        dataSmall = \"Hello World\".toCharArray();\r\n        data = \"Hello world\".repeat(100).toCharArray();\r\n        dataHuge = \"Hello world\".repeat(10000).toCharArray();\r\n    }\r\n\r\n    @Benchmark\r\n    public void johnzonSmall() throws IOException {\r\n        johnzon.write(dataSmall);\r\n    }\r\n\r\n    @Benchmark\r\n    public void johnzon() throws IOException {\r\n        johnzon.write(data);\r\n    }\r\n\r\n    @Benchmark\r\n    public void johnzonHuge() throws IOException {\r\n        johnzon.write(dataHuge);\r\n    }\r\n\r\n    @Benchmark\r\n    public void bufferedSmall() throws IOException {\r\n        buffered.write(dataSmall);\r\n    }\r\n\r\n    @Benchmark\r\n    public void buffered() throws IOException {\r\n        buffered.write(data);\r\n    }\r\n\r\n    @Benchmark\r\n    public void bufferedHuge() throws IOException {\r\n        buffered.write(dataHuge);\r\n    }\r\n\r\n    @Benchmark\r\n    public void rawSmall() throws IOException {\r\n        raw.write(dataSmall);\r\n    }\r\n\r\n    @Benchmark\r\n    public void raw() throws IOException {\r\n        raw.write(data);\r\n    }\r\n\r\n    @Benchmark\r\n    public void rawHuge() throws IOException {\r\n        raw.write(dataHuge);\r\n    }\r\n}\r\n```\r\n\r\nBufferedWriter + OutputStreamWriter is almost always faster than BoundedOutputStreamWriter","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2192371137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2192467625","html_url":"https://github.com/apache/johnzon/pull/128#issuecomment-2192467625","issue_url":"https://api.github.com/repos/apache/johnzon/issues/128","id":2192467625,"node_id":"IC_kwDOAWzNsc6Crmap","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-26T19:21:46Z","updated_at":"2024-06-26T19:24:18Z","author_association":"CONTRIBUTOR","body":"Interesting.\r\n\r\nYou are totally right on the use case (basically whatever we do the tests should still pass without modifying them).\r\n\r\nHigh level the use case is when you open a writer - typically from a server, http/ssh/... - and want to ensure some flushing happens often to avoid to hang if messages are small.\r\n\r\nSo thanks to your bench I think that mixing BufferedWriter + OutputStreamWriter with an autoflush (counting chars I guess?) would be insanely sufficient.","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2192467625/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2193894594","html_url":"https://github.com/apache/johnzon/pull/128#issuecomment-2193894594","issue_url":"https://api.github.com/repos/apache/johnzon/issues/128","id":2193894594,"node_id":"IC_kwDOAWzNsc6CxCzC","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-27T06:23:23Z","updated_at":"2024-06-27T06:23:23Z","author_association":"MEMBER","body":"For good measure, another benchmark with the new auto flushing BufferedWriter:\r\n```\r\nBenchmark                  Mode  Cnt   Score   Error   Units\r\nMyBenchmark.johnzon       thrpt   25  12.111 ± 0.052  ops/us\r\nMyBenchmark.johnzonHuge   thrpt   25   0.275 ± 0.005  ops/us\r\nMyBenchmark.johnzonSmall  thrpt   25  54.425 ± 0.066  ops/us\r\n```\r\n\r\nNo performance lost and does what we want 😉 ","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2193894594/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2193957909","html_url":"https://github.com/apache/johnzon/pull/128#issuecomment-2193957909","issue_url":"https://api.github.com/repos/apache/johnzon/issues/128","id":2193957909,"node_id":"IC_kwDOAWzNsc6CxSQV","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-27T07:10:04Z","updated_at":"2024-06-27T07:10:04Z","author_association":"CONTRIBUTOR","body":"@jungm I'd keep the old name - if you want to promote the new one please keep the code like that and just keep the old class and make it inheriting the new one 100% for backward compat (ok if the class is no more used from the core code).\r\n\r\nJust a small question - but overall it is a very satisfying fix from my window: why autoFlush() is called before writing and counting rather than after (`write();autoFlush();`)?","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2193957909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2194491185","html_url":"https://github.com/apache/johnzon/pull/128#issuecomment-2194491185","issue_url":"https://api.github.com/repos/apache/johnzon/issues/128","id":2194491185,"node_id":"IC_kwDOAWzNsc6CzUcx","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-06-27T11:58:10Z","updated_at":"2024-06-27T11:58:10Z","author_association":"MEMBER","body":"Really the only reason I flush before writing is to not break/alter the behavior we had in BoundedOutputStream before, [BoundedOutputStreamWriterTest](https://github.com/apache/johnzon/blob/master/johnzon-core/src/test/java/org/apache/johnzon/core/io/BoundedOutputStreamWriterTest.java#L43-L52) expects the data that didn't fit in the buffer in the last write operation to stay in the buffer and not be flushed immediately","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2194491185/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2316035780","html_url":"https://github.com/apache/johnzon/pull/117#issuecomment-2316035780","issue_url":"https://api.github.com/repos/apache/johnzon/issues/117","id":2316035780,"node_id":"IC_kwDOAWzNsc6KC-bE","user":{"login":"jungm","id":54570207,"node_id":"MDQ6VXNlcjU0NTcwMjA3","avatar_url":"https://avatars.githubusercontent.com/u/54570207?v=4","gravatar_id":"","url":"https://api.github.com/users/jungm","html_url":"https://github.com/jungm","followers_url":"https://api.github.com/users/jungm/followers","following_url":"https://api.github.com/users/jungm/following{/other_user}","gists_url":"https://api.github.com/users/jungm/gists{/gist_id}","starred_url":"https://api.github.com/users/jungm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jungm/subscriptions","organizations_url":"https://api.github.com/users/jungm/orgs","repos_url":"https://api.github.com/users/jungm/repos","events_url":"https://api.github.com/users/jungm/events{/privacy}","received_events_url":"https://api.github.com/users/jungm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-28T18:48:32Z","updated_at":"2024-08-28T18:48:32Z","author_association":"MEMBER","body":"superseded by 841ebb3a8627f6ae617eb1deec013f46678969b8","reactions":{"url":"https://api.github.com/repos/apache/johnzon/issues/comments/2316035780/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]