[{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808567585","html_url":"https://github.com/apache/lucenenet/issues/447#issuecomment-808567585","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/447","id":808567585,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODU2NzU4NQ==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-26T22:46:11Z","updated_at":"2021-03-26T22:46:11Z","author_association":"CONTRIBUTOR","body":"Hi, the _site is the build output of the website so is ignored by git. The source files for the website are here: https://github.com/apache/lucenenet/tree/master/websites/site as for the CSS and layout files, docfx works based on templates and overrides. By default it has it's own internal template including CSS and then we have a custom template to override certain aspects of that. Our custom template is here https://github.com/apache/lucenenet/tree/master/websites/site/lucenetemplate and our custom styles are here https://github.com/apache/lucenenet/tree/master/websites/site/lucenetemplate/styles","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808567585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808568026","html_url":"https://github.com/apache/lucenenet/issues/447#issuecomment-808568026","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/447","id":808568026,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODU2ODAyNg==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-26T22:47:34Z","updated_at":"2021-03-26T22:47:34Z","author_association":"CONTRIBUTOR","body":"DocFx requires an upstream git repository because it it queries for git information and current branch information to determine how things like \"Improve this doc\" buttons work (among other things especially when building source code docs)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808568026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808577223","html_url":"https://github.com/apache/lucenenet/issues/447#issuecomment-808577223","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/447","id":808577223,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODU3NzIyMw==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-26T23:00:17Z","updated_at":"2021-03-26T23:00:17Z","author_association":"CONTRIBUTOR","body":"Thank you, that help a lot.  So I guess that means that DocFx is looking at my current git branch.  If my current git branch is one that I'm working in to make DocFx template or layout changes, lets say it called Working_Branch what should I set at the upstream repository to.  Should the upstream for that branch be  https://github.com/apache/lucenenet.git just like for master?  \r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808577223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808579863","html_url":"https://github.com/apache/lucenenet/issues/447#issuecomment-808579863","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/447","id":808579863,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODU3OTg2Mw==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-26T23:07:33Z","updated_at":"2021-03-26T23:07:33Z","author_association":"CONTRIBUTOR","body":"Yeah normally you'd have the upstream git repo set to  https://github.com/apache/lucenenet.git and then your branches would be tracked to push/merge with the same corresponding name. Depending on what name you've configured your upstream repo to be (most times its `origin`) you can see how these branches are tracked by: `git remote show origin`. Guess it depends on how you use and configure git. I just use [Git Extensions](https://github.com/gitextensions/gitextensions) UI which takes the guess work out of all of this :) ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808579863/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808581566","html_url":"https://github.com/apache/lucenenet/issues/447#issuecomment-808581566","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/447","id":808581566,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODU4MTU2Ng==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-26T23:12:57Z","updated_at":"2021-03-26T23:12:57Z","author_association":"CONTRIBUTOR","body":"Thanks.  I'm still a newbie with git and have a lot to learn.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808581566/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808587539","html_url":"https://github.com/apache/lucenenet/issues/259#issuecomment-808587539","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/259","id":808587539,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODU4NzUzOQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-26T23:31:30Z","updated_at":"2021-03-26T23:31:30Z","author_association":"CONTRIBUTOR","body":"@rclabo\r\n\r\nThat's great. However, IMO it might make sense to hold off on reviewing `Lucene.Net` tests until after we have converted the exceptions and catch blocks in #446.\r\n\r\nIf you have already started, just continue to the end of the tests in that assembly, but we certainly should wait on the index reader/writer tests until after this is done. There may also be issues that are resolved by #446 in codecs.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808587539/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808802320","html_url":"https://github.com/apache/lucenenet/issues/447#issuecomment-808802320","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/447","id":808802320,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODgwMjMyMA==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-27T21:05:50Z","updated_at":"2021-03-27T21:05:50Z","author_association":"CONTRIBUTOR","body":"My local branch is  'Documentation_work' and when I had it checked out I tried to run the same command I do for my master which is\r\n\r\n`git remote add upstream  https://github.com/apache/lucenenet.git`\r\n\r\nIt came back with this error \"error: remote upstream already exists.\"  So I guess I'm confused, can you shed any light on why this error?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808802320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808803182","html_url":"https://github.com/apache/lucenenet/issues/447#issuecomment-808803182","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/447","id":808803182,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODgwMzE4Mg==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-27T21:13:44Z","updated_at":"2021-03-27T21:13:44Z","author_association":"CONTRIBUTOR","body":"Remotes are local references to remote repositories. They exist in the local configuration of your copy of the repository.\r\n\r\nYou can view a list of all of the remotes by using the command\r\n\r\n```\r\ngit remote\r\n```\r\n\r\nOr, even better, you can see the URLs of the remotes\r\n\r\n```\r\ngit remote -v\r\n```\r\n\r\nDo note it is possible to set up a remote to pull from one repo and push to another (hence the 2 entries for each remote name).\r\n\r\nBut the bottom line is, if a remote already exists in your local repository that maps it to a remote one, there is no need to add it again. From that point, you can use its name.\r\n\r\n> Do note using remotes is only a shortcut to make commands simpler - you could just as well use URLs to specify which repository to push to, fetch from, or pull from.\r\n>\r\n> Also, a remote exists at the top level of the repository, so you can use it for any number of branches.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808803182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808803587","html_url":"https://github.com/apache/lucenenet/pull/454#issuecomment-808803587","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/454","id":808803587,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODgwMzU4Nw==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-27T21:17:19Z","updated_at":"2021-03-27T21:17:19Z","author_association":"CONTRIBUTOR","body":"I'm normally pretty sensitive to how brands are communicated but this this case I was asleep at the wheel.  Thanks for catching these and providing great feedback.  I will endeavor to do better. :-)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808803587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808816302","html_url":"https://github.com/apache/lucenenet/issues/447#issuecomment-808816302","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/447","id":808816302,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODgxNjMwMg==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-27T23:20:41Z","updated_at":"2021-03-27T23:20:41Z","author_association":"CONTRIBUTOR","body":"That all makes good sense.  So I wonder if the reason the powershell script is [complaining](https://github.com/apache/lucenenet/issues/447#issuecomment-808489721) is because I named mine upstream rather then origin.  I wonder that because the powershell script error said\r\n>can't find remote branch in this repo\r\n\r\nand Shannon @Shazwazza  mentioned that the the remote is often named origin.  \r\n\r\nOr maybe the error is saying that I literally need a branch on the remote that is the same as my branch name.  But if that's the case I don't see how I can solve error since there is no way for me to create a branch on the remote repository at https://github.com/apache/lucenenet.git ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808816302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808821253","html_url":"https://github.com/apache/lucenenet/issues/447#issuecomment-808821253","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/447","id":808821253,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODgyMTI1Mw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-28T00:12:15Z","updated_at":"2021-03-28T00:13:37Z","author_association":"CONTRIBUTOR","body":"> [21-03-26 07:38:02.951]Info:BuildCommand.BuildCore.Build Document.Load.ConceptualDocumentProcessorFor git repo <C:/Users/Ron/source/repos/lucenenet>, can't find remote branch in this repo and fallback to use local branch [Documentation_work]: fatal: no upstream configured for branch 'Documentation_work'\r\n\r\n> I wonder if the reason the powershell script is complaining is because I named mine upstream rather then origin. I wonder that because the powershell script error said\r\n>\r\n> > can't find remote branch in this repo\r\n\r\nOkay, it sounds like you haven't configured a remote for your specific branch. Assuming you have `Documentation_work` checked out and you want to use the remote named `upstream`:\r\n\r\n```\r\ngit branch --set-upstream-to=upstream/Documentation_work\r\n```\r\n\r\nReference: https://stackoverflow.com/a/2286030\r\n\r\nNote it is possible to have a different remote and local branch name, but I have never done it because of the confusion it would cause me.\r\n\r\nI have no idea why the script would trigger that message, though. It doesn't seem to be doing anything with Git at all.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/808821253/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/810302538","html_url":"https://github.com/apache/lucenenet/issues/458#issuecomment-810302538","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/458","id":810302538,"node_id":"MDEyOklzc3VlQ29tbWVudDgxMDMwMjUzOA==","user":{"login":"krylowicz","id":22550143,"node_id":"MDQ6VXNlcjIyNTUwMTQz","avatar_url":"https://avatars.githubusercontent.com/u/22550143?v=4","gravatar_id":"","url":"https://api.github.com/users/krylowicz","html_url":"https://github.com/krylowicz","followers_url":"https://api.github.com/users/krylowicz/followers","following_url":"https://api.github.com/users/krylowicz/following{/other_user}","gists_url":"https://api.github.com/users/krylowicz/gists{/gist_id}","starred_url":"https://api.github.com/users/krylowicz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/krylowicz/subscriptions","organizations_url":"https://api.github.com/users/krylowicz/orgs","repos_url":"https://api.github.com/users/krylowicz/repos","events_url":"https://api.github.com/users/krylowicz/events{/privacy}","received_events_url":"https://api.github.com/users/krylowicz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-30T14:22:34Z","updated_at":"2021-03-30T14:22:34Z","author_association":"NONE","body":"I'll take it.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/810302538/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/810316461","html_url":"https://github.com/apache/lucenenet/issues/458#issuecomment-810316461","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/458","id":810316461,"node_id":"MDEyOklzc3VlQ29tbWVudDgxMDMxNjQ2MQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-30T14:38:43Z","updated_at":"2021-03-30T14:38:43Z","author_association":"CONTRIBUTOR","body":"Great, and thanks for volunteering. I have assigned the issue to you.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/810316461/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/810317776","html_url":"https://github.com/apache/lucenenet/issues/458#issuecomment-810317776","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/458","id":810317776,"node_id":"MDEyOklzc3VlQ29tbWVudDgxMDMxNzc3Ng==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-30T14:40:23Z","updated_at":"2021-03-30T14:40:23Z","author_association":"CONTRIBUTOR","body":"BTW - the info about how to do a local build of the docs and website is here:\r\n\r\nhttps://lucenenet.apache.org/contributing/documentation.html","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/810317776/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/812217879","html_url":"https://github.com/apache/lucenenet/issues/437#issuecomment-812217879","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/437","id":812217879,"node_id":"MDEyOklzc3VlQ29tbWVudDgxMjIxNzg3OQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-01T22:49:35Z","updated_at":"2021-04-01T22:49:35Z","author_association":"CONTRIBUTOR","body":"Hi. Sorry for the late reply. Our goal is to have a release candidate by the end of 2021.\r\n\r\nNote that we are still analyzing to make sure we are aware of all of the issues and gaps that need to be finished before the release as well as stabilizing APIs and dependencies such as [ICU4N](https://github.com/NightOwl888/ICU4N) and [J2N](https://github.com/NightOwl888/J2N). Although we have all of the modules ported except for a few features, there are likely some issues that are yet unknown which will come up during review and it is not possible to predict whether they are blocking the release or how long they will take to complete.\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/812217879/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/813392889","html_url":"https://github.com/apache/lucenenet/issues/460#issuecomment-813392889","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/460","id":813392889,"node_id":"MDEyOklzc3VlQ29tbWVudDgxMzM5Mjg4OQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-05T13:28:34Z","updated_at":"2021-04-05T13:28:34Z","author_association":"CONTRIBUTOR","body":"I have opened an issue to see whether we can get [OpenNLP.NET to strong-name their assembly](https://github.com/sergey-tihon/OpenNLP.NET/issues/6).","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/813392889/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/817173186","html_url":"https://github.com/apache/lucenenet/issues/270#issuecomment-817173186","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/270","id":817173186,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzE3MzE4Ng==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-10T17:14:28Z","updated_at":"2021-04-10T17:14:28Z","author_association":"CONTRIBUTOR","body":"I had a similar thought and Shad pointed me to this issue.  I was thinking about it slightly differently.  Here is another way we might accomplish the same goal of ensuring that a Lucene.NET 4.8 index is compatible with Lucene 4.8.0:\r\n\r\nWe could index a decent size set of documents using some test code that utilizes stored fields, DocValues, term positions, norms and such.  Then port that code to java and index the same set of documents using 4.8 java Lucene.  Then run a byte by byte comparison of the index files of Lucene.NET and Java Lucene.  This would unequivocally validate that the codec is sound.  And the cool thing is the code could be leveraged again any time we port another codec like the one used in 9.0.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/817173186/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/817174861","html_url":"https://github.com/apache/lucenenet/issues/270#issuecomment-817174861","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/270","id":817174861,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzE3NDg2MQ==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-10T17:27:11Z","updated_at":"2021-04-10T17:27:11Z","author_association":"CONTRIBUTOR","body":"It was brought to my attention that some of the files may have headers that store such things as \"javaVendor\" and what we put there for Lucene.NET 4.8 isn't going to match what Lucene 4.8 puts there.  So it seems Java Lucene  intended two files created by two different java vendors would have different meta data., So maybe byte by byte comparison of the headers isn't the right way to go.  Maybe for the hearders of such a file we have to do more sophisticated checking but the rest of the file and other files can be byte by byte comparisons, perhaps.  \r\n\r\nI have opened a Lucene.NET 4.8 index in Luke and it didn't throw but I didn't validate every aspect of the file and there are many. A byte by byte comparison of the parts that can be compared would give us a ton of confidence.  Or if the file has a CRC that doesn't include the headers comparing that may be a great way to go.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/817174861/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/817177055","html_url":"https://github.com/apache/lucenenet/issues/281#issuecomment-817177055","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/281","id":817177055,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzE3NzA1NQ==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-10T17:43:57Z","updated_at":"2021-04-10T17:43:57Z","author_association":"CONTRIBUTOR","body":"I too have used Luke with Lucene.NET 4.8.0 beta indexes (the Luke GUI from the jar file) and have not experienced any issues yet. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/817177055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/817178651","html_url":"https://github.com/apache/lucenenet/issues/270#issuecomment-817178651","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/270","id":817178651,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzE3ODY1MQ==","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-10T17:55:01Z","updated_at":"2021-04-10T17:55:01Z","author_association":"CONTRIBUTOR","body":"why do we care? seriously, no one is going to use same java index in lucene.net\r\n\r\nas long as the functionality is working, I think we should put our efforts in other areas such as performance and stability. \r\nits okay that the lucene.net will not be compatible with the java variant, I'm totally fine by this.\r\nbesides, indexes are based on persisted other data, so they can always be rebuild/recreated.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/817178651/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/817199638","html_url":"https://github.com/apache/lucenenet/issues/270#issuecomment-817199638","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/270","id":817199638,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzE5OTYzOA==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-10T20:42:03Z","updated_at":"2021-04-10T20:42:03Z","author_association":"CONTRIBUTOR","body":"@eladmarg Thanks, I appreciate your thoughts.\r\n\r\nI think there are several reasons we'd care that Lucene.NET 4.8 outputs an index that is identical to Java Lucene 4.8 (except for obvious headers) and stability is certainly one of them.  Top of my mind I think we should care because:\r\n\r\n1) It absolutely guarantees we don't have a bug in the ported codecs which leads to a solid more stable Lucene.NET\r\n2) It means that users of Lucene.NET can have confidence using other tools designed to work with Lucene such as Luke.\r\n3) If the test is ran on the various platforms that Lucene.NET supports it demonstrates that there aren't portability issue with moving a file between the platforms that Lucene.NET supports.  (Full framework, .NET Core Windows, .NET Core Unix.)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/817199638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/817336573","html_url":"https://github.com/apache/lucenenet/issues/270#issuecomment-817336573","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/270","id":817336573,"node_id":"MDEyOklzc3VlQ29tbWVudDgxNzMzNjU3Mw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-11T16:45:20Z","updated_at":"2021-04-11T16:50:57Z","author_association":"CONTRIBUTOR","body":"Agreed. Although, since Lucene already has created a CheckIndex utility to confirm compatibility using hashes, we should just leverage that rather than trying to mock a way to make our index byte-by-byte compatible with one from Java. The gap that could potentially happen is small - we are already using zipped index files that were created in Java to test with, so we know that binary reading is compatible. However, there is a small chance that we have introduced the same binary writing bug in both the production code and the tests and it would be good to confirm that the CheckIndex util in Java works to load indexes that were created in .NET on a continual basis.\r\n\r\nThe idea is to build a test module once for this, and use it to confirm binary compatibility with Lucene in each release after 4.8.0. Provided Lucene doesn't radically change their design again, this will be the last full port of Lucene to .NET - all future Lucene.NET releases will just be an upgrade of this one. We will be able to keep pace with Lucene's release schedule, but that will only happen if we automate time-consuming manual processes like checking for binary compatibility and make them part of our nightly build.\r\n\r\nSince breaking binary compatibility in a patch is unacceptable, this absolutely needs to be done prior to the 4.8.0 release. We don't really think that any new Java applications will load indexes from Lucene.NET 4.8.0, but as @rclabo pointed out, there are index utilities that exist in the wild that we need to be compatible with as well as the ability to load indexes that were created in Lucene.NET 4.8.0 in the next major release of Lucene.NET.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/817336573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/820050358","html_url":"https://github.com/apache/lucenenet/issues/377#issuecomment-820050358","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/377","id":820050358,"node_id":"MDEyOklzc3VlQ29tbWVudDgyMDA1MDM1OA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-15T03:49:35Z","updated_at":"2021-04-15T03:51:18Z","author_association":"CONTRIBUTOR","body":"Sorry about the late feedback on this. I wanted to research more of the history of this design choice before I answered, but never found the time.\r\n\r\nThere are several reasons why making this change may not be a good idea, among them:\r\n\r\n1. There is a [specific comment](https://github.com/apache/lucenenet/blob/master/src/Lucene.Net/Search/BooleanScorer.cs#L144-L145) suggesting that lazy initialization has already been attempted, and this design was chosen over that in 4.8.0.\r\n2. In the [current version of Lucene](https://github.com/apache/lucene/blob/releases/lucene-solr%2F8.8.1/lucene/core/src/java/org/apache/lucene/search/BooleanScorer.java), the design of `BooleanScorer` has been changed but it still relies on a `Bucket` object. Changing the design will make upgrading more difficult.\r\n3. We would be going from a proven design to an unproven one, which requires extra testing and verification that will delay the release.\r\n\r\nThat being said, it would be worth considering as a contribution if:\r\n\r\n1. It were implemented as a non-default experimental feature that users can enable if they (perhaps) prefer scalability over performance\r\n2. It doesn't break any existing public APIs (additive changes only)\r\n3. There are full tests\r\n4. There is adequate documentation\r\n5. It is 100% a community contribution (we won't delay the release to work on this)\r\n\r\nIdeally, we would also have a performance profile of the bucket table design vs the object pool so users could easily understand which is preferred in a given scenario.\r\n\r\nIf there is a way to make `BooleanScorer` pluggable it is also worth discussing even if it might introduce breaking changes.\r\n\r\nFrankly, according to [The most misunderstood design pattern – Object Pool](https://blog.aspiresys.pl/technology/how-to-fool-garbage-collector/), this doesn't sound like the ideal situation to use an object pool in.\r\n\r\n> When using the Object Pool pattern you declare one thing and one thing only: “I, as a developer, know how lifetime of these objects should be handled better than garbage collector.” And if you actually do, that is fine. If you are not 100% sure about where to use the Object Pool, here are some indicators:\r\n>\r\n> -   Make sure that the cost of creating an instance of the class you desire to pool is much higher than resetting some of its internal properties.\r\n> -  The frequency of creating the target class is also high.\r\n> -  The number of concurrent instances of the target class is relatively small.\r\n\r\nAnd from Microsoft:\r\n\r\n> Object pooling doesn't always improve performance:\r\n\r\n> -  Unless the initialization cost of an object is high, it's usually slower to get the object from the pool.\r\n> -  Objects managed by the pool aren't de-allocated until the pool is de-allocated.\r\n\r\nBut if presented with data showing a scalability or performance trend is that is better with this design it would probably be a reasonable option for some people.\r\n\r\n\r\nAlso, implementing `IDisposable` on `BulkScorer` doesn't sound like the right choice as it is possible to use a `Release()` method that doesn't introduce a leaky abstraction. We aren't dealing with unmanaged resources in this scenario so if they are not disposed at the end, the GC will clean them up anyway.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/820050358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/820710682","html_url":"https://github.com/apache/lucenenet/issues/447#issuecomment-820710682","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/447","id":820710682,"node_id":"MDEyOklzc3VlQ29tbWVudDgyMDcxMDY4Mg==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-15T20:29:00Z","updated_at":"2021-04-15T20:29:00Z","author_association":"CONTRIBUTOR","body":"It seems the original question has been answered and the original task has been completed in #454, so I am closing this.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/820710682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/820724927","html_url":"https://github.com/apache/lucenenet/issues/453#issuecomment-820724927","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/453","id":820724927,"node_id":"MDEyOklzc3VlQ29tbWVudDgyMDcyNDkyNw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-15T20:55:57Z","updated_at":"2021-04-15T20:55:57Z","author_association":"CONTRIBUTOR","body":"Closing as #453 fixes the `appsettings.json` problem and #457 is tracking the hope page code sample issue.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/820724927/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/820785674","html_url":"https://github.com/apache/lucenenet/issues/261#issuecomment-820785674","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/261","id":820785674,"node_id":"MDEyOklzc3VlQ29tbWVudDgyMDc4NTY3NA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-15T23:06:34Z","updated_at":"2021-04-15T23:06:34Z","author_association":"CONTRIBUTOR","body":"I am closing this now, as we are finding and reporting bottlenecks as specific issues, so we no longer need a general task for it.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/820785674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/820930737","html_url":"https://github.com/apache/lucenenet/issues/407#issuecomment-820930737","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/407","id":820930737,"node_id":"MDEyOklzc3VlQ29tbWVudDgyMDkzMDczNw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-16T06:02:25Z","updated_at":"2021-04-16T06:02:25Z","author_association":"CONTRIBUTOR","body":"It turns out these extension methods already existed, but they were in in the `Lucene.Net.Documents` namespace so I missed them in Intellisense. So, #468 moves them to the correct namespace `Lucene.Net.Documents.Extensions` and adds tests to close this issue.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/820930737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/821745295","html_url":"https://github.com/apache/lucenenet/issues/273#issuecomment-821745295","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/273","id":821745295,"node_id":"MDEyOklzc3VlQ29tbWVudDgyMTc0NTI5NQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-17T01:35:34Z","updated_at":"2021-04-17T01:35:34Z","author_association":"CONTRIBUTOR","body":"This has basically been held open because of https://github.com/NightOwl888/J2N/issues/3, but given the fact this one reporter is no longer interested in a fix and MAUI is right around the corner (which hopefully addresses this), there doesn't seem to be much sense in spending time on this.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/821745295/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/821757432","html_url":"https://github.com/apache/lucenenet/pull/238#issuecomment-821757432","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/238","id":821757432,"node_id":"MDEyOklzc3VlQ29tbWVudDgyMTc1NzQzMg==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-17T03:19:23Z","updated_at":"2021-04-17T03:19:23Z","author_association":"CONTRIBUTOR","body":"Thanks for the PR. If we have any additional reports of problems with `LurchTable`, I think a better option would be to add constructor overloads of `DirectoryTaxonomyWriter` that accept an abstract factory so the `LruDictionary` implementation can be swapped with a custom subclass. However, since we have not received any other reports of crashes on Xamarin.iOS.\r\n\r\nI realize I already mentioned it in https://github.com/NightOwl888/J2N/issues/3, but just reporting it here so it is in the Lucene.NET mail archive for reference. I have also closed #242, which is related.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/821757432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/821764793","html_url":"https://github.com/apache/lucenenet/issues/256#issuecomment-821764793","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/256","id":821764793,"node_id":"MDEyOklzc3VlQ29tbWVudDgyMTc2NDc5Mw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-17T04:36:27Z","updated_at":"2021-04-17T04:36:27Z","author_association":"CONTRIBUTOR","body":"Moving this to [Future](https://github.com/apache/lucenenet/milestone/4) since this is not blocking the 4.8.0 release.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/821764793/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/821861608","html_url":"https://github.com/apache/lucenenet/issues/470#issuecomment-821861608","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/470","id":821861608,"node_id":"MDEyOklzc3VlQ29tbWVudDgyMTg2MTYwOA==","user":{"login":"laimis","id":911757,"node_id":"MDQ6VXNlcjkxMTc1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/911757?v=4","gravatar_id":"","url":"https://api.github.com/users/laimis","html_url":"https://github.com/laimis","followers_url":"https://api.github.com/users/laimis/followers","following_url":"https://api.github.com/users/laimis/following{/other_user}","gists_url":"https://api.github.com/users/laimis/gists{/gist_id}","starred_url":"https://api.github.com/users/laimis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/laimis/subscriptions","organizations_url":"https://api.github.com/users/laimis/orgs","repos_url":"https://api.github.com/users/laimis/repos","events_url":"https://api.github.com/users/laimis/events{/privacy}","received_events_url":"https://api.github.com/users/laimis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-17T17:54:17Z","updated_at":"2021-04-17T17:54:17Z","author_association":"CONTRIBUTOR","body":"This was fixed here: https://github.com/apache/lucenenet/pull/455 and will be available with 4.8.0-beta00015 release. Your workaround is the way to get around this issue until the release with the fix goes out.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/821861608/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/823894606","html_url":"https://github.com/apache/lucenenet/pull/310#issuecomment-823894606","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/310","id":823894606,"node_id":"MDEyOklzc3VlQ29tbWVudDgyMzg5NDYwNg==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-21T08:48:35Z","updated_at":"2021-04-22T05:40:47Z","author_association":"CONTRIBUTOR","body":"I have rebased against the master branch so this is up to date again.\r\n\r\nI also rearranged the project so all of the NuGet versions are defined in `BuildConfigurations.cs`. I also got it working (sort of) with a [local build](https://github.com/dotnet/BenchmarkDotNet/issues/1486) from source so it can be compared against the NuGet packages. Unfortunately, I couldn't find any documentation of what the defaults are for the properties of a `Release` build, so this appears to be basically building a `Debug` build with optimizations turned on. \r\n\r\n![image](https://user-images.githubusercontent.com/1538288/115661515-be9f4500-a367-11eb-9a97-4816c5651a31.png)\r\n\r\nAs you can see by the above image, the performance of the `LocalBuild` is much worse than using the NuGet packages. Requires more research to set all of the `Release` properties when the configuration is `LocalBuild`.\r\n\r\nThis isn't quite up to the state which we can merge it, though - we still need a top-level `benchmarks` folder as mentioned in #349 and to reorganize the project as well as rename this from `Lucene.Net.Tests.BenchmarkDotNet` to something that doesn't include the word `Tests`, but it is a few steps closer to where we need to be and it is quicker to update all of the benchmarks with a new set of NuGet packages now.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/823894606/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/829252365","html_url":"https://github.com/apache/lucenenet/issues/477#issuecomment-829252365","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/477","id":829252365,"node_id":"MDEyOklzc3VlQ29tbWVudDgyOTI1MjM2NQ==","user":{"login":"jregnier","id":8887814,"node_id":"MDQ6VXNlcjg4ODc4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8887814?v=4","gravatar_id":"","url":"https://api.github.com/users/jregnier","html_url":"https://github.com/jregnier","followers_url":"https://api.github.com/users/jregnier/followers","following_url":"https://api.github.com/users/jregnier/following{/other_user}","gists_url":"https://api.github.com/users/jregnier/gists{/gist_id}","starred_url":"https://api.github.com/users/jregnier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jregnier/subscriptions","organizations_url":"https://api.github.com/users/jregnier/orgs","repos_url":"https://api.github.com/users/jregnier/repos","events_url":"https://api.github.com/users/jregnier/events{/privacy}","received_events_url":"https://api.github.com/users/jregnier/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-04-29T13:47:12Z","updated_at":"2021-04-29T13:47:12Z","author_association":"NONE","body":"Hello again, So I think I'm getting closer lol, seems like the way to go is to create a custom ICollector. Below is what I have so far. Am I on the right track so far?\r\n\r\n`    public class MyCollector : ICollector\r\n    {\r\n        private readonly OpenBitSet _bits;\r\n        private int _docBase;\r\n        private BinaryDocValues _docValues;\r\n        private HashSet<string> _values;\r\n\r\n        public MyCollector(OpenBitSet bits)\r\n        {\r\n            _bits = bits ?? throw new ArgumentNullException(nameof(bits));\r\n            _values= new HashSet<string>();\r\n        }\r\n\r\n        public bool AcceptsDocsOutOfOrder => true;\r\n\r\n        public void Collect(int doc)\r\n        {\r\n            _bits.Set(doc + _docBase);\r\n\r\n            if (_docValues== null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            var byteRef = new BytesRef();\r\n            _docValues.Get(doc, byteRef);\r\n            _values.Add(byteRef.Utf8ToString());\r\n        }\r\n\r\n        public void SetNextReader(AtomicReaderContext context)\r\n        {\r\n            _docValues = context.AtomicReader.GetBinaryDocValues(\"the_value\");\r\n            _docBase = context.DocBase;\r\n        }\r\n\r\n        public void SetScorer(Scorer scorer)\r\n        {\r\n            // We don't care about the score.\r\n        }\r\n    }`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/829252365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/830537225","html_url":"https://github.com/apache/lucenenet/issues/478#issuecomment-830537225","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/478","id":830537225,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMDUzNzIyNQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-01T04:49:05Z","updated_at":"2021-05-01T04:49:05Z","author_association":"CONTRIBUTOR","body":"Okay, what alternative would you expect? To be able to reopen? To throw an exception?\r\n\r\nPer the [IDisposable documentation](https://docs.microsoft.com/en-us/dotnet/api/system.idisposable.dispose?redirectedfrom=MSDN&view=net-5.0#remarks):\r\n\r\n> If an object's [Dispose](https://docs.microsoft.com/en-us/dotnet/api/system.idisposable.dispose) method is called more than once, the object must ignore all calls after the first one. The object must not throw an exception if its [Dispose](https://docs.microsoft.com/en-us/dotnet/api/system.idisposable.dispose) method is called multiple times. Instance methods other than [Dispose](https://docs.microsoft.com/en-us/dotnet/api/system.idisposable.dispose) can throw an [ObjectDisposedException](https://docs.microsoft.com/en-us/dotnet/api/system.objectdisposedexception) when resources are already disposed.\r\n\r\nNote it says \"must\", not \"should\". Also, since an `IndexWriter` cannot be reopened after it is disposed, it seems like this is the right approach.\r\n\r\nDo keep in mind that using the new `using` statement from C# 8.0, `Dispose` may be called automatically by the compiler even after it had already been called explicitly.\r\n\r\n```c#\r\n{ // Block for scope\r\n    using var x = new MyDisposable();\r\n    // Do some work (there may be an exception)\r\n    x.Dispose();\r\n    // Do some more work\r\n} // Dispose is called here whether the above Dispose() gets called or not\r\n```\r\n\r\nThis is a common pattern when using `IndexWriter.GetReader()`, which must be called before disposing the `IndexWriter`.\r\n\r\n```c#\r\nusing IndexWriter writer = new IndexWriter(directory, config);\r\n// Add some docs\r\nusing IndexReader reader = writer.GetReader();\r\nwriter.Dispose();\r\n// Use the reader...\r\n```\r\n\r\nIt would be awkward to work with if there were an exception thrown just because we want to use a `using` statement, since the purpose is to ensure `Dispose` is called *at least* once regardless of whether an exception occurs or the operation is successful.\r\n\r\nAs for the overload with `waitForMerges`, it conflicts with the protected `Dispose(bool)` overload that should exist in .NET for subclasses to implement. I am considering to rename it `DisposeNoWait()` and add an extension method to patch the current calls to the public `Dispose(bool)` to call either `Dispose()` or `DisposeNoWait()` depending on the `bool` value.\r\n\r\nWhat use case are you trying to solve for that you expect this to work differently?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/830537225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/830563891","html_url":"https://github.com/apache/lucenenet/issues/478#issuecomment-830563891","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/478","id":830563891,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMDU2Mzg5MQ==","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-01T06:29:43Z","updated_at":"2021-05-01T06:29:43Z","author_association":"CONTRIBUTOR","body":"The main reason I log this is really in case people go searching for a similar issue. The issue that was raised when porting over my work was a change in code in Lucene which revealed a mistake in my code. \r\n\r\nI had accidentally disposed the IndexWriter but then tried to \r\n\r\n```cs\r\nIndexWriter?.Analyzer.Dispose();\r\n```\r\n\r\nwhich threw the ObjectDisposedException. In my own indexer class, when it disposes at the end of being used (cannot be re-used) it disposes all other things that are disposable. The analyzer was one of them but due to the ordering of things I got the exception. The mistake in my code is disposing an object of an object that was originally owned by the parent. \r\n\r\nI guess because Analyzer is virtual, it could do more than just return the value from the ctor so safer to throw. All good, will close this just wanted to ask. Cheers!\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/830563891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/832859998","html_url":"https://github.com/apache/lucenenet/issues/485#issuecomment-832859998","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/485","id":832859998,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMjg1OTk5OA==","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-05T17:05:36Z","updated_at":"2021-05-05T17:11:17Z","author_association":"CONTRIBUTOR","body":"I think it is safe to say that it is not within the scope of this project at the moment. (and probably never will be) Being a Java port it's hard to imagine that such a thing could ever be maintained, that would require a massive effort.\r\n\r\nThe thing is, if you don't bring it all the way through to the layers where your waiting for outside \"interrupts\" e.g. when you perform IO or waits for remote services, then it won't really bring any advantages that you can't add your self just by making a proxy around the classes you wish to have working with async/await. (And it's hard to argue that there would be any benefit at all)\r\n\r\nI would be all for it, but we have to be realistic.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/832859998/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/832864697","html_url":"https://github.com/apache/lucenenet/issues/485#issuecomment-832864697","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/485","id":832864697,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMjg2NDY5Nw==","user":{"login":"roryap","id":13333455,"node_id":"MDQ6VXNlcjEzMzMzNDU1","avatar_url":"https://avatars.githubusercontent.com/u/13333455?v=4","gravatar_id":"","url":"https://api.github.com/users/roryap","html_url":"https://github.com/roryap","followers_url":"https://api.github.com/users/roryap/followers","following_url":"https://api.github.com/users/roryap/following{/other_user}","gists_url":"https://api.github.com/users/roryap/gists{/gist_id}","starred_url":"https://api.github.com/users/roryap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roryap/subscriptions","organizations_url":"https://api.github.com/users/roryap/orgs","repos_url":"https://api.github.com/users/roryap/repos","events_url":"https://api.github.com/users/roryap/events{/privacy}","received_events_url":"https://api.github.com/users/roryap/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-05T17:12:44Z","updated_at":"2021-05-05T17:12:44Z","author_association":"NONE","body":"I get it.  It is a shame though.  To be scalable in a web server sense, using threads for each search operation where they can be efficiently shared awaiting I/O or other interrupts is crucial.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/832864697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/832874514","html_url":"https://github.com/apache/lucenenet/issues/363#issuecomment-832874514","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/363","id":832874514,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMjg3NDUxNA==","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-05T17:28:24Z","updated_at":"2021-05-05T17:28:24Z","author_association":"CONTRIBUTOR","body":"I have not had a lucene environment up and running for a while (sadly) - is this reproduceable locally?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/832874514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/832897297","html_url":"https://github.com/apache/lucenenet/issues/485#issuecomment-832897297","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/485","id":832897297,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMjg5NzI5Nw==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-05T18:04:33Z","updated_at":"2021-05-05T18:04:33Z","author_association":"CONTRIBUTOR","body":"I agree that adding async/await doesn't seem feasible.  But given how fast lucene is I suspect it can support much more scalability on the web server then one might guess.  It'd be cool is someone in the community pushed it on this dimension and reported back their findings.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/832897297/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/832906882","html_url":"https://github.com/apache/lucenenet/issues/485#issuecomment-832906882","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/485","id":832906882,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMjkwNjg4Mg==","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-05T18:19:05Z","updated_at":"2021-05-05T18:19:05Z","author_association":"CONTRIBUTOR","body":"the current Lucene version isn't write in a modern high performant app manner.\r\nyes, its getting stable, its working, but its far from being optimal.\r\n\r\nthe whole design should be rewritten from bottom to up, many other optimizations are missing.\r\nI'm not sure its even possible in the current code base, because all the data should be async/await all the way from the ground.\r\n\r\nthis is a big change that will take Lucene to another direction from the port and I'm not sure its in this frame.\r\n\r\nhowever, its nice to have this kind of requests, we all want it but its not possible in this project constraints. \r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/832906882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/832938174","html_url":"https://github.com/apache/lucenenet/issues/485#issuecomment-832938174","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/485","id":832938174,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMjkzODE3NA==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-05T19:06:54Z","updated_at":"2021-05-05T19:06:54Z","author_association":"CONTRIBUTOR","body":"If one really wanted to influence the direction of Lucene in an effort to get async/await support all the way to the metal, then that should happen in the Java Lucene version first.  Then eventually it will get ported to Lucene.NET.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/832938174/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/833078253","html_url":"https://github.com/apache/lucenenet/issues/363#issuecomment-833078253","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/363","id":833078253,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMzA3ODI1Mw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-05T22:05:26Z","updated_at":"2021-05-05T22:05:26Z","author_association":"CONTRIBUTOR","body":"Unfortunately, even with the `[Repeat]` or [`[FindFirstFailingSeed]`](https://github.com/nunit/nunit/issues/1461#issuecomment-429580661) attributes I was unable to get this to fail on my local (Windows 10) system, but admittedly I gave up rather easily after only a couple of attempts. Perhaps doing a Debug build on Azure DevOps, downloading the `testbinaries` assets, and then doing a local `dotnet test` while [attaching a debugger](https://github.com/dotnet/sdk/issues/4994#issuecomment-431147227) is a way of reproducing it, but that hasn't been attempted yet.\r\n\r\nThis might have something to do with the fact that we have upgraded `Microsoft.AspNetCore.TestHost` to 2.0.0 when we dropped support for .NET Standard 1.x, or it might just be something we missed because the tests weren't run frequently before the nightly build was set up.\r\n\r\n> Off topic:  It isn't clear whether the [`ReplicationClient.ReplicationThread`](https://github.com/apache/lucenenet/blob/Lucene.Net_4_8_0_beta00014/src/Lucene.Net.Replicator/ReplicationClient.cs#L48) is working as was expected, being that in Lucene it was passing `ThreadInterruptedException` from the background thread to the calling thread. Would reverting this to a [`ThreadJob`](https://github.com/NightOwl888/J2N/blob/release/v2.0/src/J2N/Threading/ThreadJob.cs) subclass (going back to a more Java-like design) break anything substantial? `ThreadJob` takes care of propagating the first exception from the background thread to the calling thread. \r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/833078253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/833100893","html_url":"https://github.com/apache/lucenenet/issues/485#issuecomment-833100893","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/485","id":833100893,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMzEwMDg5Mw==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-05T22:55:39Z","updated_at":"2021-05-05T22:55:39Z","author_association":"CONTRIBUTOR","body":"It is difficult to imagine both maintaining a sweeping architecture change as well as keeping pace with Lucene's release schedule. It would presume that one of us has an advanced high-level understanding of the architecture to be able to make and then maintain such a change, but given that this is a low-level line-by-line port, it is not an understanding that anyone on the team has. Our focus is on keeping the project upgradable in the future to integrate new changes to Lucene, which unfortunately means that if we drift too far from the original source we would need a very detailed roadmap to follow to make each upgrade possible.\r\n\r\nI have to agree with @rclabo, [async/await is a pattern supported in Java](https://dzone.com/articles/async-await-in-java), so the best way to support it in .NET would be to lobby the [Lucene team](https://lucene.apache.org/core/discussion.html) to make the design changes at a high level first, which would be propagated to Lucene.NET when it is upgraded. In fact, I would make that argument about any significant high-level design change that isn't specifically made to address a gap between the platforms. And do it immediately, since Lucene is in the process of planning for version 9.0 right now.\r\n\r\nThe only tool we have that helps us solve some of the failing tests is to run the code both in Java and in .NET to see where the paths diverge between the two. Once we lose the Java reference to work from, some bugs that are easy to identify now would effectively mean researching several high-level design concepts just to understand what the bug is before determining where it is, since we would be unable to distinguish between a bug that is due do to a difference between the Lucene behavior and the Lucene.NET behavior from a bug that was introduced in the new design.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/833100893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/833494556","html_url":"https://github.com/apache/lucenenet/issues/485#issuecomment-833494556","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/485","id":833494556,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMzQ5NDU1Ng==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-06T12:47:45Z","updated_at":"2021-05-06T12:47:45Z","author_association":"CONTRIBUTOR","body":"I agree with @NightOwl888  wholeheartedly. It's nearly impossible to fully express how important it is to have Lucene.NET stick as close as possible to Java Lucene.  There is very little code on this planet that has been as battle hardened as the code in Java Lucene.  When you consider that it’s the foundation that both Solr and ElasticSearch are built on and then think about the size of the installed base of those products, it’s mindboggling how much of the planet runs and depends on Java Lucene.  That level of attention and use over two decades leads to an amazingly solid code base. A hard won result that is not something to be taken lightly or easily achieved by others.\r\n\r\nThe fact that Java Lucene’s code is so battle hardened is an enormous asset when you stop and consider the size of the code base and factor in that it supports multi threaded concurrent use. Not to mention the fact that many of the concepts implemented in Lucene are indeed state of the art and non-trivial to understand.  Taken together a senior developer would need to work with this codebase for 5 – 10 _years_ to come anywhere close to fully comprehending it. And without that level of knowledge, any significant changes or deviations from Java Lucene are likely to result in bugs that could be very difficult to track down.\r\n\r\nI believe that it's absolutely vital that Lucene.NET stay true to its goal of being a line by line port other than minor API changes to adhere to .Net naming conventions and such where applicable.  Even now there are parts of Lucene.NET that I wish tracked closer to the Java code.  In some cases that’s just not possible because of the differences in the platform tools but our goal non the less should be to port Lucene.NET from Java Lucene as faithfully as possible. \r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/833494556/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/833520676","html_url":"https://github.com/apache/lucenenet/issues/485#issuecomment-833520676","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/485","id":833520676,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMzUyMDY3Ng==","user":{"login":"roryap","id":13333455,"node_id":"MDQ6VXNlcjEzMzMzNDU1","avatar_url":"https://avatars.githubusercontent.com/u/13333455?v=4","gravatar_id":"","url":"https://api.github.com/users/roryap","html_url":"https://github.com/roryap","followers_url":"https://api.github.com/users/roryap/followers","following_url":"https://api.github.com/users/roryap/following{/other_user}","gists_url":"https://api.github.com/users/roryap/gists{/gist_id}","starred_url":"https://api.github.com/users/roryap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roryap/subscriptions","organizations_url":"https://api.github.com/users/roryap/orgs","repos_url":"https://api.github.com/users/roryap/repos","events_url":"https://api.github.com/users/roryap/events{/privacy}","received_events_url":"https://api.github.com/users/roryap/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-06T13:25:05Z","updated_at":"2021-05-06T13:25:05Z","author_association":"NONE","body":"@NightOwl888 @rclabo perfect explanations.  Indeed, if Java Lucene were to take on async/await, it would have to be done in a way that doesn't affect the existing code base or else risks breaking it.  I can only wonder at how much work it would be to erect a parallel code base that uses async/await from the ground up.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/833520676/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/833549382","html_url":"https://github.com/apache/lucenenet/issues/485#issuecomment-833549382","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/485","id":833549382,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMzU0OTM4Mg==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-06T14:03:17Z","updated_at":"2021-05-06T14:03:17Z","author_association":"CONTRIBUTOR","body":"@roryap It's really hard to say, but such a code base would likely result in a lot of bugs that take a very long time to work out. \r\n\r\nBefore one should walk down that path they should verify carefully that lack of async/await is actually the source of throughput bottleneck in their desired use case.  Are they really saturating the machine with threads and truly running out of the ability to create new ones while the majority of threads are doing nothing but waiting on disk IO?  Verifying that such a situation truly exists should be job one before even thinking of making a parallel modified codebase that one must maintain by themselves.  It's certainly not a road I'd want to walk down.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/833549382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/833559298","html_url":"https://github.com/apache/lucenenet/issues/485#issuecomment-833559298","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/485","id":833559298,"node_id":"MDEyOklzc3VlQ29tbWVudDgzMzU1OTI5OA==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-06T14:16:26Z","updated_at":"2021-05-06T14:16:26Z","author_association":"CONTRIBUTOR","body":"@roryap As a side note, we are always looking for other developers help with Lucene.NET.  While the current 4.8 beta is very stable more work is needed to fix bugs, resolve issues, improve docs and polish it for release.  We'd welcome your participation if you are interested.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/833559298/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/841424473","html_url":"https://github.com/apache/lucenenet/issues/363#issuecomment-841424473","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/363","id":841424473,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MTQyNDQ3Mw==","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-14T18:29:32Z","updated_at":"2021-05-14T18:29:32Z","author_association":"CONTRIBUTOR","body":"Ok, that is unfortunate as that would likely make it easier to fix.\r\nI have been trying to go through the code to formalize a theory, but so far I have not been able to come up with something good, but this mapping \"ASYNC\" code to old style blocking code so I am wondering if that can cause trouble, after all it depends on where and in what the code runs how tasks are handled. (That is one thing I really think was a shitty choice by the .NET framework designers... regardless of them wanting to make it \"Easier\" to write async code in form based apps... And I am wondering if that is a thing that might hit us here...)\r\n\r\nAs far as goes for the threading, I choose the design that is in place as that does not allocate a dedicated thread which would be against general recommendations, as well as not allowing workitem exceptions to bring down the whole process (which is a difference to JAVA).\r\n\r\nBut I can't see that it would break anything to switch to the ThreadJob class as such. We could also do the same in the current implementation, catching the exception that halted the executing thread and then rethrowing that on a call to \"StopUpdateThread\".\r\n\r\nThreading and Exception in Java and .NET is very different, so it can be hard to be certain to ensure the Java behavior fully, so i think it's worth looking critically on the \"Java Design\" in such areas as we can hardly avoid differences anyways, then if it can be implemented in a .NET way in a \"isolated\" way, I would prefer that. But I have not hard feelings otherwise.\r\n\r\nStopUpdateThread is never called as far as I can tell in this case though so regardless of one or the other, I think that could be a discusison that could be taken in another issue.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/841424473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/843607387","html_url":"https://github.com/apache/lucenenet/issues/477#issuecomment-843607387","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/477","id":843607387,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MzYwNzM4Nw==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-18T22:23:07Z","updated_at":"2021-05-18T22:23:07Z","author_association":"CONTRIBUTOR","body":"You might try taking a look at the unit tests.  For example [this code ](https://github.com/apache/lucenenet/blob/master/src/Lucene.Net.Tests/Index/Test2BBinaryDocValues.cs#L88) may prove helpful.  For questions that are not an issue with the code or docs, it's best to post it on StackOverflow with a Lucene.net tag.  Sorry I didn't see your question here earlier.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/843607387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/843608368","html_url":"https://github.com/apache/lucenenet/issues/458#issuecomment-843608368","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/458","id":843608368,"node_id":"MDEyOklzc3VlQ29tbWVudDg0MzYwODM2OA==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-18T22:25:34Z","updated_at":"2021-05-18T22:25:34Z","author_association":"CONTRIBUTOR","body":"@krylowicz   How's it coming.  If you have questions fee free to post them here with this issue.  Thanks again for volunteering for this one.  You are appreciated!","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/843608368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/844197623","html_url":"https://github.com/apache/lucenenet/issues/477#issuecomment-844197623","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/477","id":844197623,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NDE5NzYyMw==","user":{"login":"jregnier","id":8887814,"node_id":"MDQ6VXNlcjg4ODc4MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8887814?v=4","gravatar_id":"","url":"https://api.github.com/users/jregnier","html_url":"https://github.com/jregnier","followers_url":"https://api.github.com/users/jregnier/followers","following_url":"https://api.github.com/users/jregnier/following{/other_user}","gists_url":"https://api.github.com/users/jregnier/gists{/gist_id}","starred_url":"https://api.github.com/users/jregnier/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jregnier/subscriptions","organizations_url":"https://api.github.com/users/jregnier/orgs","repos_url":"https://api.github.com/users/jregnier/repos","events_url":"https://api.github.com/users/jregnier/events{/privacy}","received_events_url":"https://api.github.com/users/jregnier/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-19T15:08:24Z","updated_at":"2021-05-19T15:08:24Z","author_association":"NONE","body":"Looking at the code that is how I had it before, I would enumerate the leaves and try and get the doc value. I was seeing issues where after editing the index it wasn't getting the correct values since it was trying to get it from the wrong leaf which resulted in always needing to do a ForceMerge (donotwant) lol.\r\nI was able to get the collector working and seems to work beautifully and always working with the correct AtomicReader.\r\n\r\nAs a note, there's no documentation clearly stating that a custom ICollector is the way to properly achieve this.\r\n\r\nThanks for looking into this for me :)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/844197623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/844250612","html_url":"https://github.com/apache/lucenenet/issues/477#issuecomment-844250612","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/477","id":844250612,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NDI1MDYxMg==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-19T16:08:40Z","updated_at":"2021-05-19T16:08:40Z","author_association":"CONTRIBUTOR","body":"Thanks.  We'd love to update the documentation to be more helpful.  Could you write up what you think it should be and post it here  with code sample and I can see if I can get it added to the docs?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/844250612/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/844389900","html_url":"https://github.com/apache/lucenenet/pull/488#issuecomment-844389900","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/488","id":844389900,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NDM4OTkwMA==","user":{"login":"marodev","id":23633010,"node_id":"MDQ6VXNlcjIzNjMzMDEw","avatar_url":"https://avatars.githubusercontent.com/u/23633010?v=4","gravatar_id":"","url":"https://api.github.com/users/marodev","html_url":"https://github.com/marodev","followers_url":"https://api.github.com/users/marodev/followers","following_url":"https://api.github.com/users/marodev/following{/other_user}","gists_url":"https://api.github.com/users/marodev/gists{/gist_id}","starred_url":"https://api.github.com/users/marodev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/marodev/subscriptions","organizations_url":"https://api.github.com/users/marodev/orgs","repos_url":"https://api.github.com/users/marodev/repos","events_url":"https://api.github.com/users/marodev/events{/privacy}","received_events_url":"https://api.github.com/users/marodev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-19T19:08:24Z","updated_at":"2021-05-19T19:08:24Z","author_association":"CONTRIBUTOR","body":"Hi @NightOwl888, may I ask you to review this pull request?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/844389900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/846160731","html_url":"https://github.com/apache/lucenenet/issues/487#issuecomment-846160731","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/487","id":846160731,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NjE2MDczMQ==","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-21T18:43:30Z","updated_at":"2021-05-21T18:44:36Z","author_association":"CONTRIBUTOR","body":"You need an indexed field for ID rather than just a stored one. Otherwise UpdateDocument won't turn over any results and as such it turns into an ADD instead. (Update effectively does Delete -> Add)\r\nSince the ID is an integer, using a numeric field type would also be adviced.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/846160731/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/846357530","html_url":"https://github.com/apache/lucenenet/issues/487#issuecomment-846357530","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/487","id":846357530,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NjM1NzUzMA==","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-22T06:09:55Z","updated_at":"2021-05-22T06:09:55Z","author_association":"CONTRIBUTOR","body":"Hi,\r\nits better to add your id field with the correct type like this:\r\n\r\n`doc.Add(new Int32Field(IdFieldName, thumb.Id, Field.Store.YES))`\r\n\r\nwhen you want to query by the id use this to generate the term:\r\n\r\n```\r\nvar bytes = new BytesRef(NumericUtils.BUF_SIZE_INT32);\r\nNumericUtils.Int32ToPrefixCoded(id, 0, bytes);\r\nvar term = new Term(IdFieldName, bytes);\r\n```","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/846357530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/846375185","html_url":"https://github.com/apache/lucenenet/issues/487#issuecomment-846375185","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/487","id":846375185,"node_id":"MDEyOklzc3VlQ29tbWVudDg0NjM3NTE4NQ==","user":{"login":"l1x","id":20079,"node_id":"MDQ6VXNlcjIwMDc5","avatar_url":"https://avatars.githubusercontent.com/u/20079?v=4","gravatar_id":"","url":"https://api.github.com/users/l1x","html_url":"https://github.com/l1x","followers_url":"https://api.github.com/users/l1x/followers","following_url":"https://api.github.com/users/l1x/following{/other_user}","gists_url":"https://api.github.com/users/l1x/gists{/gist_id}","starred_url":"https://api.github.com/users/l1x/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/l1x/subscriptions","organizations_url":"https://api.github.com/users/l1x/orgs","repos_url":"https://api.github.com/users/l1x/repos","events_url":"https://api.github.com/users/l1x/events{/privacy}","received_events_url":"https://api.github.com/users/l1x/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-22T08:32:49Z","updated_at":"2021-05-22T08:32:49Z","author_association":"NONE","body":"Thanks!","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/846375185/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/849317980","html_url":"https://github.com/apache/lucenenet/issues/489#issuecomment-849317980","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/489","id":849317980,"node_id":"MDEyOklzc3VlQ29tbWVudDg0OTMxNzk4MA==","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-27T04:52:34Z","updated_at":"2021-05-27T04:52:34Z","author_association":"CONTRIBUTOR","body":"this strategy called sharding, it's better to split the data by your logic and how the users query it.\r\nfor example, if you have geolocation users and they using data most of the time for one country, \r\nso you create an index for all new york and another one for new jersey.\r\n\r\nif a user queries more than one location, you run both of the queries in parallel and aggregate the result.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/849317980/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/849320902","html_url":"https://github.com/apache/lucenenet/issues/489#issuecomment-849320902","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/489","id":849320902,"node_id":"MDEyOklzc3VlQ29tbWVudDg0OTMyMDkwMg==","user":{"login":"ensemblebd","id":13471536,"node_id":"MDQ6VXNlcjEzNDcxNTM2","avatar_url":"https://avatars.githubusercontent.com/u/13471536?v=4","gravatar_id":"","url":"https://api.github.com/users/ensemblebd","html_url":"https://github.com/ensemblebd","followers_url":"https://api.github.com/users/ensemblebd/followers","following_url":"https://api.github.com/users/ensemblebd/following{/other_user}","gists_url":"https://api.github.com/users/ensemblebd/gists{/gist_id}","starred_url":"https://api.github.com/users/ensemblebd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ensemblebd/subscriptions","organizations_url":"https://api.github.com/users/ensemblebd/orgs","repos_url":"https://api.github.com/users/ensemblebd/repos","events_url":"https://api.github.com/users/ensemblebd/events{/privacy}","received_events_url":"https://api.github.com/users/ensemblebd/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-27T05:01:18Z","updated_at":"2021-05-27T05:01:18Z","author_association":"NONE","body":"Thank you!  I hadn't thought of it in that perspective. \r\nWill need to rethink what chunks I could fashion out of which data parts appropriately. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/849320902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/850379586","html_url":"https://github.com/apache/lucenenet/pull/490#issuecomment-850379586","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/490","id":850379586,"node_id":"MDEyOklzc3VlQ29tbWVudDg1MDM3OTU4Ng==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-28T12:20:52Z","updated_at":"2021-05-28T12:20:52Z","author_association":"CONTRIBUTOR","body":"This should be all ready to go.  When I submitted this initially in a new branch I forgot to including the necessary using statement which is why it failed _all_ the tests.  But I added that in the 2nd commit so it's all happy now.  (I realized my mistake about .5 seconds after I submitted the PR. Dooh!)  Anyway, all is well that ends well...right?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/850379586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/850524302","html_url":"https://github.com/apache/lucenenet/issues/259#issuecomment-850524302","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/259","id":850524302,"node_id":"MDEyOklzc3VlQ29tbWVudDg1MDUyNDMwMg==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-28T16:11:47Z","updated_at":"2021-05-28T16:11:47Z","author_association":"CONTRIBUTOR","body":"@rclabo - #446 has been merged, so we can resume reviewing Lucene.Net (core) tests.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/850524302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/850545193","html_url":"https://github.com/apache/lucenenet/issues/259#issuecomment-850545193","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/259","id":850545193,"node_id":"MDEyOklzc3VlQ29tbWVudDg1MDU0NTE5Mw==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-05-28T16:50:55Z","updated_at":"2021-05-28T16:50:55Z","author_association":"CONTRIBUTOR","body":"Thanks for the nudge.  Also THANK YOU for the huge work you did in reviewing all the exceptions and the catch clauses to make sure they are faithfully following the behavior of Java Lucene.  That was a huge amount of super important work.  ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/850545193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/854248770","html_url":"https://github.com/apache/lucenenet/issues/492#issuecomment-854248770","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/492","id":854248770,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NDI0ODc3MA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-03T23:24:32Z","updated_at":"2021-06-04T08:28:19Z","author_association":"CONTRIBUTOR","body":"Thanks Shannon.\r\n\r\n> Shouldn't this line: https://github.com/apache/lucenenet/blob/b03b93683c4d3a7128e54692525cb7d1315637f5/src/Lucene.Net/Search/ControlledRealTimeReopenThread.cs#L228 use `Time.NanoTime();` just like this line does? https://github.com/apache/lucenenet/blob/b03b93683c4d3a7128e54692525cb7d1315637f5/src/Lucene.Net/Search/ControlledRealTimeReopenThread.cs#L257\r\n\r\nYes, that is the way it is in Lucene.\r\n\r\nThis goes to the heart of one of the issues that I have been meaning to post for awhile now - namely, that because J2N didn't exist when we ported Lucene.NET, we need to go back and review all of the code that depends on system timing (basically, any usage of `System.currentTimeMillis()` or `System.nanoTime()` in Java). I created a different implementation of [`Time.NanoTime()`](https://github.com/NightOwl888/J2N/blob/c7b578fd9b881f98b4f0c99331a7ec760903e1c9/src/J2N/Time.cs#L17-L38) in J2N than the implementation in Lucene.Net.Support, but being hyper-aware of the fact that the concurrency code may break by swapping the implementation, migrating to this new method has been put this off until a proper review can be done.\r\n\r\nDuring writing tests and benchmarks, I noticed that `Time.NanoTime()` isn't as accurate as using a `Stopwatch` instance, so this needs another pass to ensure that implementation is solid before migrating to it. We might need to use some `AsyncLocal` approach to fix it so it uses 1 `Timestamp` instance per parallel process rather than using the static `Stopwatch.GetTimestamp()`.\r\n\r\nThis is of course compounded by the facts that:\r\n\r\n1. The code was inconsistently translated from Java between `DateTime.Now`, `DateTime.UtcNow`,`Time.NanoTime()`, and `Time.CurrentTimeMilliseconds()` thoughout the project.\r\n2. In Java, they are [supposed to be using `System.nanoTime()` for the most accurate timing](https://stackoverflow.com/a/351571), but they inconsistently switch between `System.nanoTime()` and `System.currentTimeMillis()` throughout the project.\r\n\r\nWe could fix this by analyzing each use of timing case-by-case and switching them all to using individual `Stopwatch` instances. I don't think that is so bad if the code is in isolation, but we still should fix `J2N.Time.NanoTime()` and `J2N.Time.CurrentTimeMilliseconds()` so they work right so we can also easily translate these lines during future porting efforts without making the same mistakes again.\r\n\r\nIn the latter case, we may be able to assume that the code works well enough to use `CurrentTimeMilliseconds()`, but it means we need 2 methods instead of just `NanoTime()`.\r\n\r\n> `System.currentTimeMillis()` in Java returns the [number of milliseconds that elapsed since January 1, 1970](https://docs.oracle.com/javase/7/docs/api/java/lang/System.html#currentTimeMillis()). So we should fix the J2N implementation to do the same to ensure something isn't thrown off by this. Do note that neither of these implementations are based off of the Java code, so we might want to look there and at the .NET implementation at a low level to ensure there are no additional timing gaps to look out for.\r\n\r\n> Tip:  It may also help to look at the [NodaTime project](https://github.com/nodatime/nodatime).\r\n\r\nWhatever the case, we should aim to factor out the `Time` class in Lucene.Net.Support and use a common timing method everywhere (from J2N) except in special isolated cases. And ultimately use `Stopwatch` instead of `DateTime.Now` or `DateTime.UtcNow` consistently for timing code.\r\n\r\n> NOTE: If you wish to fix this in J2N, please base your work off of the [release/v2.0](https://github.com/NightOwl888/J2N/tree/release/v2.0) branch and target that same branch when submitting the PR.\r\n>\r\n> Note also that if you don't have Xamarin setup on your dev machine, you can workaround the issue by unloading all of the Xamarin projects and tests.\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/854248770/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/860193856","html_url":"https://github.com/apache/lucenenet/issues/319#issuecomment-860193856","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/319","id":860193856,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MDE5Mzg1Ng==","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-13T11:15:56Z","updated_at":"2021-06-13T11:15:56Z","author_association":"CONTRIBUTOR","body":"this still occurs\r\n\r\n<pre>\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at IRectangle Spatial4n.Core.Util.GeohashUtils.DecodeBoundary(string geohash, SpatialContext ctx)\r\n   at IPoint Spatial4n.Core.Util.GeohashUtils.Decode(string geohash, SpatialContext ctx)\r\n   at ShapeFieldCache<T> Lucene.Net.Spatial.Util.ShapeFieldCacheProvider<T>.GetCache(AtomicReader reader)+(IndexReader key) => { }\r\n   at TValue System.Runtime.CompilerServices.ConditionalWeakTable<TKey, TValue>.GetValueLocked(TKey key, CreateValueCallback createValueCallback)\r\n   at TValue System.Runtime.CompilerServices.ConditionalWeakTable<TKey, TValue>.GetValue(TKey key, CreateValueCallback createValueCallback)\r\n   at new Lucene.Net.Spatial.Util.ShapeFieldCacheDistanceValueSource+CachedDistanceFunctionValue(AtomicReader reader, ShapeFieldCacheDistanceValueSource enclosingInstance)\r\n   at FunctionValues Lucene.Net.Spatial.Util.ShapeFieldCacheDistanceValueSource.GetValues(IDictionary context, AtomicReaderContext readerContext)\r\n   at FieldComparer Lucene.Net.Queries.Function.ValueSource+ValueSourceComparer.SetNextReader(AtomicReaderContext context)\r\n   at void Lucene.Net.Search.TopFieldCollector+OneComparerNonScoringCollector.SetNextReader(AtomicReaderContext context)\r\n   at void Lucene.Net.IndexSearcher.Search.Search(IList<AtomicReaderContext> leaves, Weight weight, ICollector collector) x 5\r\n</pre>","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/860193856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/860662049","html_url":"https://github.com/apache/lucenenet/issues/491#issuecomment-860662049","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/491","id":860662049,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MDY2MjA0OQ==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-14T12:56:13Z","updated_at":"2021-06-14T12:56:13Z","author_association":"CONTRIBUTOR","body":"Hi there. Sometimes people answer user help queries on GitHub, but since nobody replied let me suggest one of the following options:\r\n\r\n- [StackOverflow](https://stackoverflow.com/questions/tagged/lucene.net) (be sure to add both the <c>lucene.net</c> and <c>lucene</c> tags) \r\n- [Lucene.NET mailing lists](https://lucenenet.apache.org/contributing/mailing-lists.html)\r\n- [Lucene mailing lists](https://lucene.apache.org/core/discussion.html)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/860662049/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/860670908","html_url":"https://github.com/apache/lucenenet/issues/493#issuecomment-860670908","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/493","id":860670908,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MDY3MDkwOA==","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-14T13:08:40Z","updated_at":"2021-06-14T13:08:40Z","author_association":"CONTRIBUTOR","body":"Thanks for the report. Could you please confirm that you are using the Classic `QueryParser`?\r\n\r\nAlso, could you please provide enough code (either a unit test or a console app) so we can run it to see this behavior?\r\n\r\nDo note that the query parser is set up to be culture-sensitive based on the current thread by default. To override, you must set the `Locale` property of the `QueryParser` class.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/860670908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/860691322","html_url":"https://github.com/apache/lucenenet/issues/493#issuecomment-860691322","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/493","id":860691322,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MDY5MTMyMg==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-14T13:37:19Z","updated_at":"2021-06-14T13:37:19Z","author_association":"CONTRIBUTOR","body":"It's hard to tell, but for the search phrase is it specified as \"Variant1 - Variant2\" or \"Variant1 -Variant2\" ?  If the former then I suspect what you are experiencing is a bug in 3.x that was fixed in 4.x because having a space between the - and the term should not cause the term to be negated.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/860691322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/861137511","html_url":"https://github.com/apache/lucenenet/issues/493#issuecomment-861137511","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/493","id":861137511,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MTEzNzUxMQ==","user":{"login":"vucuongkg","id":6039359,"node_id":"MDQ6VXNlcjYwMzkzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/6039359?v=4","gravatar_id":"","url":"https://api.github.com/users/vucuongkg","html_url":"https://github.com/vucuongkg","followers_url":"https://api.github.com/users/vucuongkg/followers","following_url":"https://api.github.com/users/vucuongkg/following{/other_user}","gists_url":"https://api.github.com/users/vucuongkg/gists{/gist_id}","starred_url":"https://api.github.com/users/vucuongkg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vucuongkg/subscriptions","organizations_url":"https://api.github.com/users/vucuongkg/orgs","repos_url":"https://api.github.com/users/vucuongkg/repos","events_url":"https://api.github.com/users/vucuongkg/events{/privacy}","received_events_url":"https://api.github.com/users/vucuongkg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-15T03:16:09Z","updated_at":"2021-06-15T03:16:09Z","author_association":"NONE","body":"I'm sorry for missing some info\r\nInput: Variant1 - Variant2 (has space)\r\nOutput\r\n\r\nVersion 3.x: +_content:variant1 -_content:variant2 (NOT => -)\r\nVersion 4.0: +_content:variant1 +_content:variant2 (NOT => +, it should be -)\r\n\r\nI will try again with sample console app using C#.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/861137511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/861138287","html_url":"https://github.com/apache/lucenenet/issues/493#issuecomment-861138287","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/493","id":861138287,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MTEzODI4Nw==","user":{"login":"vucuongkg","id":6039359,"node_id":"MDQ6VXNlcjYwMzkzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/6039359?v=4","gravatar_id":"","url":"https://api.github.com/users/vucuongkg","html_url":"https://github.com/vucuongkg","followers_url":"https://api.github.com/users/vucuongkg/followers","following_url":"https://api.github.com/users/vucuongkg/following{/other_user}","gists_url":"https://api.github.com/users/vucuongkg/gists{/gist_id}","starred_url":"https://api.github.com/users/vucuongkg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vucuongkg/subscriptions","organizations_url":"https://api.github.com/users/vucuongkg/orgs","repos_url":"https://api.github.com/users/vucuongkg/repos","events_url":"https://api.github.com/users/vucuongkg/events{/privacy}","received_events_url":"https://api.github.com/users/vucuongkg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-15T03:18:39Z","updated_at":"2021-06-15T03:18:39Z","author_association":"NONE","body":"> Thanks for the report. Could you please confirm that you are using the Classic `QueryParser`?\r\n> \r\n> Also, could you please provide enough code (either a unit test or a console app) so we can run it to see this behavior?\r\n> \r\n> Do note that the query parser is set up to be culture-sensitive based on the current thread by default. To override, you must set the `Locale` property of the `QueryParser` class.\r\n\r\nYes, version 4.0, I know that there are some changes .\r\nI am using QueryParser class in  Lucene.Net.QueryParsers.Classic","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/861138287/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/861157051","html_url":"https://github.com/apache/lucenenet/issues/493#issuecomment-861157051","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/493","id":861157051,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MTE1NzA1MQ==","user":{"login":"vucuongkg","id":6039359,"node_id":"MDQ6VXNlcjYwMzkzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/6039359?v=4","gravatar_id":"","url":"https://api.github.com/users/vucuongkg","html_url":"https://github.com/vucuongkg","followers_url":"https://api.github.com/users/vucuongkg/followers","following_url":"https://api.github.com/users/vucuongkg/following{/other_user}","gists_url":"https://api.github.com/users/vucuongkg/gists{/gist_id}","starred_url":"https://api.github.com/users/vucuongkg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vucuongkg/subscriptions","organizations_url":"https://api.github.com/users/vucuongkg/orgs","repos_url":"https://api.github.com/users/vucuongkg/repos","events_url":"https://api.github.com/users/vucuongkg/events{/privacy}","received_events_url":"https://api.github.com/users/vucuongkg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-15T04:20:35Z","updated_at":"2021-06-15T04:20:35Z","author_association":"NONE","body":"Hello, \r\nI have checked that and I am pretty sure I was correct.\r\nYou can check images below\r\n![Screenshot_149](https://user-images.githubusercontent.com/6039359/121992318-9a8e3c00-cdcb-11eb-8891-1197dccd6e72.png)\r\n![Screenshot_148](https://user-images.githubusercontent.com/6039359/121992321-9c57ff80-cdcb-11eb-96fc-a611240d478a.png)\r\n\r\nI have created repository:\r\nhttps://github.com/vucuongkg/Lucene.Net-QueryParse\r\n\r\nPlease check it, thanks.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/861157051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/864009498","html_url":"https://github.com/apache/lucenenet/issues/494#issuecomment-864009498","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/494","id":864009498,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NDAwOTQ5OA==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-18T12:40:56Z","updated_at":"2021-06-18T12:40:56Z","author_association":"CONTRIBUTOR","body":"When you open an `IndexReader` it of course opens the underlying files for that index.  Whether you perform a search or not, the OS isn't gonna let you delete open files.  If you want to delete the files in the OS then you will need to call the `Dispose` method on that `IndexReader` so that it closes the files.  Then the OS will allow you to delete them.  \r\n\r\nUnfortunately, I don't have experience with the 3.x version of LuceneNET so I can't speak to how it use to work.  It's hard to think that it didn't hold the index files open for as long as the `IndexReader` was open given that there is OS overhead to opening and closing files.  Perhaps it didn't require you to call dispose and implicitly closed them when the `IndexReader` object was garbage collected.  But that's really not a good practice as it cause non-deterministic closing of the files which is to say, there no telling when the garbage collector will get around to garbage collecting the object and finally close the files.  \r\n\r\nToday it is a best practice to use a explicit Dispose method to handle such work.  This allows the developer to control precisely when the files get closed.   So anyway, all you need to do if you want to delete the index files is to dispose of the `IndexReader` that is holding them open.  \r\n\r\nWith regard to \r\n\r\n>Negative side effect: if the writer runs again it can also run into this issue where it can't update some of those files.\r\n\r\nThat shouldn't be the case.  The `IndexReader` opens the files read only and the `IndexWriter` opens them read/write.  Both an `IndexReader` and `IndexWriter` can have the index open at the same time, no problem.  However both will need to be disposed of before you can delete the index files via the OS.  \r\n\r\nIf you open several IndexReaders for the same index, each will have the files open read only and all of them will need to be disposed before you can delete the files via the OS.\r\n\r\nDoes that help?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/864009498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/864061910","html_url":"https://github.com/apache/lucenenet/issues/494#issuecomment-864061910","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/494","id":864061910,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NDA2MTkxMA==","user":{"login":"mikeplacko","id":6632656,"node_id":"MDQ6VXNlcjY2MzI2NTY=","avatar_url":"https://avatars.githubusercontent.com/u/6632656?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeplacko","html_url":"https://github.com/mikeplacko","followers_url":"https://api.github.com/users/mikeplacko/followers","following_url":"https://api.github.com/users/mikeplacko/following{/other_user}","gists_url":"https://api.github.com/users/mikeplacko/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeplacko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeplacko/subscriptions","organizations_url":"https://api.github.com/users/mikeplacko/orgs","repos_url":"https://api.github.com/users/mikeplacko/repos","events_url":"https://api.github.com/users/mikeplacko/events{/privacy}","received_events_url":"https://api.github.com/users/mikeplacko/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-18T14:02:53Z","updated_at":"2021-06-18T14:02:53Z","author_association":"NONE","body":"I think the negative side effect comes into play when you want to reset the search index programmatically by deleting all the index files. IIS can still be generating traffic, searches from users, while the writer process is trying to delete all those files before re-indexing. \r\nMy example was manual, as its easy to reproduce by just leaving the reader alive and hard to reproduce in normal operation because the reader is only alive a very short time. But it is happening under load in our application. The reader has those files locked and the other process cannot delete them to reset the index. \r\nMaybe I can come up with a way to turn off searching in IIS while its trying to reset as a workaround but I think the better solution would be if Lucene.NET had a command for this. Literally Reset, which deletes everything thread safe. Maybe that's already available and I missed it?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/864061910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/864095534","html_url":"https://github.com/apache/lucenenet/issues/494#issuecomment-864095534","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/494","id":864095534,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NDA5NTUzNA==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-18T14:52:44Z","updated_at":"2021-06-18T14:56:36Z","author_association":"CONTRIBUTOR","body":"Every use case is different but here are two  approaches in 4.8 that can be good for refreshing an index for web searching (I use the NRT approach personally):\r\n### Approach 1 - Point in time Reader\r\n1) Open a `IndexWriter` and a point in time `IndexReader` \r\n2) delete all existing documents in the index via `indexWriter.DeleteAll()`\r\n3) By not calling reopening the `IndexReader`  it will still see the deleted docs which enable searches on the old data to continue while the index is being rebuilt.\r\n4) Add all the docs to the  index via the `indexWriter.Add` to rebuild the index\r\n5) commit and then reopen the point in time reader. I twill now see the refreshed index.\r\n\r\n### Approach 2 - NRT Reader / IndexSearcher\r\n1) Open an `IndexWriter`. Then new up a `SearcherManager` and pass the `IndexWriter` as a constructor param.   call `searcherManager.Acquire` to obtain a NRT `IndexSearcher` that internally holds a NRT `IndexReader`.  Use it for performing searches.\r\n2) delete all existing documents in the index via `indexWriter.DeleteAll()`\r\n3) Continue to use the `IndexSearcher`  to perform searchers. It will still see the deleted docs which enables searches based on the old data to continue while the index is being rebuilt.\r\n4) Add all the docs to the  index via the `indexWriter.Add` to rebuild the index\r\n5) commit and call `searcherManager.MaybeRefrsehBlocking` then call `searcherManager.Release(indexSearcher)` to release the old `indexSearcher` and then use `searcherManager.Acquire` to get a new NRT `indexSearcher` that sees the refreshed index. use that new `indexSearcher` now for performing website searches.\r\n\r\nThe great thing about either of these  approaches is that the site can search the old data right up until the moment you get your new `IndexReader`/`IndexSearcher` that sees the refreshed index.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/864095534/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/864689001","html_url":"https://github.com/apache/lucenenet/issues/493#issuecomment-864689001","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/493","id":864689001,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NDY4OTAwMQ==","user":{"login":"vucuongkg","id":6039359,"node_id":"MDQ6VXNlcjYwMzkzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/6039359?v=4","gravatar_id":"","url":"https://api.github.com/users/vucuongkg","html_url":"https://github.com/vucuongkg","followers_url":"https://api.github.com/users/vucuongkg/followers","following_url":"https://api.github.com/users/vucuongkg/following{/other_user}","gists_url":"https://api.github.com/users/vucuongkg/gists{/gist_id}","starred_url":"https://api.github.com/users/vucuongkg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vucuongkg/subscriptions","organizations_url":"https://api.github.com/users/vucuongkg/orgs","repos_url":"https://api.github.com/users/vucuongkg/repos","events_url":"https://api.github.com/users/vucuongkg/events{/privacy}","received_events_url":"https://api.github.com/users/vucuongkg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-21T03:04:55Z","updated_at":"2021-06-21T03:04:55Z","author_association":"NONE","body":"Ping @NightOwl888 , ;)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/864689001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/865046792","html_url":"https://github.com/apache/lucenenet/issues/493#issuecomment-865046792","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/493","id":865046792,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NTA0Njc5Mg==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-21T13:47:10Z","updated_at":"2021-06-21T13:47:25Z","author_association":"CONTRIBUTOR","body":"If you take a look at the [documentation](https://lucene.apache.org/core/4_8_0/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#- ) for 4.8 you will see that it shows the minus sign next to the term or phrase with no space between them.   The example provided is \"jakarta apache\" -\"Apache Lucene\".  Again, I think you are witnessing a bug fix.  if you want the term or phrase negated you should remove the space between the minus sign and the term or phrase.\r\n\r\nAs further evidence, it's worth  noting that the lucene query syntax is very similar to that used by google.  And in google if you search for `Taiwan - history` you will see that the 2nd entry contains the word history \r\n\r\n![image](https://user-images.githubusercontent.com/6945499/122772213-22b18d00-d275-11eb-9187-17f7c64554e1.png)\r\n\r\n\r\nbut if you search for `Taiwan -history`  you will see that the results containing the word history have been removed.\r\n\r\n![image](https://user-images.githubusercontent.com/6945499/122772412-5987a300-d275-11eb-9133-38bac88abb46.png)\r\n\r\nSo what you are experiencing in Lucene 4.8 isn't a bug in 4.8 it's a fix of a bug that existed in 3.x\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/865046792/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/865496034","html_url":"https://github.com/apache/lucenenet/issues/493#issuecomment-865496034","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/493","id":865496034,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NTQ5NjAzNA==","user":{"login":"vucuongkg","id":6039359,"node_id":"MDQ6VXNlcjYwMzkzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/6039359?v=4","gravatar_id":"","url":"https://api.github.com/users/vucuongkg","html_url":"https://github.com/vucuongkg","followers_url":"https://api.github.com/users/vucuongkg/followers","following_url":"https://api.github.com/users/vucuongkg/following{/other_user}","gists_url":"https://api.github.com/users/vucuongkg/gists{/gist_id}","starred_url":"https://api.github.com/users/vucuongkg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vucuongkg/subscriptions","organizations_url":"https://api.github.com/users/vucuongkg/orgs","repos_url":"https://api.github.com/users/vucuongkg/repos","events_url":"https://api.github.com/users/vucuongkg/events{/privacy}","received_events_url":"https://api.github.com/users/vucuongkg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-22T03:16:24Z","updated_at":"2021-06-22T03:16:24Z","author_association":"NONE","body":"Hello @rclabo \r\nThanks you so much for your reply, really detail and clear.\r\nSo, I close this.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/865496034/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/868469000","html_url":"https://github.com/apache/lucenenet/issues/494#issuecomment-868469000","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/494","id":868469000,"node_id":"MDEyOklzc3VlQ29tbWVudDg2ODQ2OTAwMA==","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-25T12:36:30Z","updated_at":"2021-06-25T12:36:30Z","author_association":"CONTRIBUTOR","body":"@rclabo I don't think either of those are directly applicable here since he mentions using two different applications/processes, one for the updating and one for the reading.\r\n\r\n@mikeplacko I am not sure there is much of a change really, I am very much seeing the issue with locked files in v3 as well, we see it every time we redeploy our software as there tends to be an overlap between the new version starting up while the old one shuts down, and here we run into locked files just as well. We don't see that as an issue though but just have a retry loop that pools for this until files are no longer locked, then we know the old process is fully shut down.\r\n\r\nSom options as I see them:\r\nA) If your trying to use a single process to maintain the index (update it) and then push that so one or more applications can access that, I guess the Replicator is the way to go. This could allow you to update the index in one place and distribute the index to multiple other nodes for searching.\r\n\r\nB) Move your indexing into your IIS application and switch to NRT - @rclabo outlines the Lucene part of this in more detail so look at his response. You need to consider running as \"Always on\" in the IIS and consider how you recycle the process carefully or disable that all together.\r\n\r\nC) Move your searching/reading into your indexing process (windows process?) and then forward queries from you IIS site to that process. Again utilizing NRT.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/868469000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/868521605","html_url":"https://github.com/apache/lucenenet/issues/494#issuecomment-868521605","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/494","id":868521605,"node_id":"MDEyOklzc3VlQ29tbWVudDg2ODUyMTYwNQ==","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-25T14:01:34Z","updated_at":"2021-06-25T14:01:34Z","author_association":"CONTRIBUTOR","body":"@jeme Thanks for the feedback. Approach 1 as I laid it out has no requirement that that the updating and the reading occur in the same process/application.  In fact the processes/applications don't even have to run on the same machine provided they have access to common disk storage.  I supplied Approach 2 as a \"bonus\" to show another way that this could be handled, some might say a more modern way, but you are totally right it may not be applicable if he has a hard requirement to have the updating in a different process/application then the reading.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/868521605/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/871775376","html_url":"https://github.com/apache/lucenenet/issues/494#issuecomment-871775376","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/494","id":871775376,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTc3NTM3Ng==","user":{"login":"mikeplacko","id":6632656,"node_id":"MDQ6VXNlcjY2MzI2NTY=","avatar_url":"https://avatars.githubusercontent.com/u/6632656?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeplacko","html_url":"https://github.com/mikeplacko","followers_url":"https://api.github.com/users/mikeplacko/followers","following_url":"https://api.github.com/users/mikeplacko/following{/other_user}","gists_url":"https://api.github.com/users/mikeplacko/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeplacko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeplacko/subscriptions","organizations_url":"https://api.github.com/users/mikeplacko/orgs","repos_url":"https://api.github.com/users/mikeplacko/repos","events_url":"https://api.github.com/users/mikeplacko/events{/privacy}","received_events_url":"https://api.github.com/users/mikeplacko/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T22:48:07Z","updated_at":"2021-06-30T22:48:07Z","author_association":"NONE","body":"For now, I went with Approach 1 - Point in time Reader. I added a loop on the delete all, just incase something is locked for a backup, waiting a few seconds in-between loops. I don't consider this the ideal solution, but it was the easiest to implement quickly. I'll be testing it more to see how it works, but the first look seems ok. \r\nI'll explore Approach 2 more later when I have time. I also like the idea of moving all searching to the windows service and out of IIS. IIS has so many other problems it seems to make sense to run anything I can in the service. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/871775376/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/886097444","html_url":"https://github.com/apache/lucenenet/pull/498#issuecomment-886097444","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/498","id":886097444,"node_id":"IC_kwDOAAJ06c400MYk","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-24T18:58:52Z","updated_at":"2021-07-24T18:58:52Z","author_association":"CONTRIBUTOR","body":"Superseded by #504","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/886097444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/888821631","html_url":"https://github.com/apache/lucenenet/issues/431#issuecomment-888821631","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/431","id":888821631,"node_id":"IC_kwDOAAJ06c40-ld_","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-29T05:47:36Z","updated_at":"2021-07-29T05:48:33Z","author_association":"CONTRIBUTOR","body":"After a little investigation, is this even worth pursuing?. I am lacking some examples to illustrate why you would want this.\r\n\r\n### MoreLikeThis.Like()\r\n\r\nActually returns a BooleanQuery, but from a interface perspective, all you should really care about is that it produces a Query object that when used for searching will return documents that a similar to a specific document. (I am not quite sure of the usage of the overload you mentioned here) - Essentially, what type of Query would fulfill that requirement is an implementation detail and shouldn't concern the developer.\r\n\r\n### Query.Rewrite() AND IndexSearcher.Rewrite()\r\n\r\nAs the later really just delegates to the former, ill take these together.\r\n\r\nRewrite is a way of trying to optimize the Query, again you should not care about what type of Query is returned, just that it performs the same basic function as the original Query but in a better way, what that means should again be an underlying implementation detail a developer shouldn't be concerned with.\r\n\r\nI guess the BooleanQuery is the most \"straight to the point\" example of this, if a BooleanQuery only contains a single clause, there is no need for the BooleanQuery it self, so this is eliminated in a rewrite process by pulling out the single clause, rewriting the Query object in that and then returning that Query object.\r\n\r\n### Filter.GetDocIdSet()\r\n\r\nI am not no familiar with this method, so I can't comment here specifically yet, would need more time, but it's again certainly not a straight forward task. But there doesn't seem to be many cases where a specific type is expected in the code, instead in some places where it is type checked it causes a branching instead. So is the abstraction here again not specifically done intentionally?.\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/888821631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/889089489","html_url":"https://github.com/apache/lucenenet/issues/431#issuecomment-889089489","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/431","id":889089489,"node_id":"IC_kwDOAAJ06c40_m3R","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-29T12:38:05Z","updated_at":"2021-07-29T12:38:05Z","author_association":"CONTRIBUTOR","body":"I too think that having these return `Query` is probably fine.  Often a person won't need to cast the result and will just work with it as query. In cases where the caller does need to cast it, I'd rather cast it myself then deal with a generic day in and day out for these methods since they add API complexity that often isn't needed.  Also, using a generic rather than a cast, will still result in runtime casting errors if the generic type supplied isn't correct.  So for example if I use a generic to specify to return type of  `TermQuery` when the method call would otherwise return a `BooleanQuery` as a `Query` object it'll throw at run time not compile time, no different then me doing a cast after the call.  \r\n\r\nIn summary, most of the time I probably wouldn't need to cast these but if I needed to I'd rather do the cast myself then use a generic to specify the return type so the method can do the cast internally.  ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/889089489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/894418876","html_url":"https://github.com/apache/lucenenet/issues/505#issuecomment-894418876","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/505","id":894418876,"node_id":"IC_kwDOAAJ06c41T7-8","user":{"login":"fjam","id":1414714,"node_id":"MDQ6VXNlcjE0MTQ3MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/1414714?v=4","gravatar_id":"","url":"https://api.github.com/users/fjam","html_url":"https://github.com/fjam","followers_url":"https://api.github.com/users/fjam/followers","following_url":"https://api.github.com/users/fjam/following{/other_user}","gists_url":"https://api.github.com/users/fjam/gists{/gist_id}","starred_url":"https://api.github.com/users/fjam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjam/subscriptions","organizations_url":"https://api.github.com/users/fjam/orgs","repos_url":"https://api.github.com/users/fjam/repos","events_url":"https://api.github.com/users/fjam/events{/privacy}","received_events_url":"https://api.github.com/users/fjam/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-06T17:48:57Z","updated_at":"2021-08-06T17:48:57Z","author_association":"NONE","body":"I am using Lucene.NET version 4.8.0-beta00014","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/894418876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/894422703","html_url":"https://github.com/apache/lucenenet/issues/505#issuecomment-894422703","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/505","id":894422703,"node_id":"IC_kwDOAAJ06c41T86v","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-06T17:55:59Z","updated_at":"2021-08-06T17:56:31Z","author_association":"CONTRIBUTOR","body":"Yep, that's the way Lucene.NET and Lucene works.  Each of these sets of files is called a segment.  Initially in your case there is one segment, the _0 segment, and then when you add another doc and commit there is a 2nd segment, the _1 segment.  If you want to learn more google about lucene and segments.  There is lots of info online.  Example: https://stackoverflow.com/questions/2703432/what-are-segments-in-lucene","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/894422703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/894424982","html_url":"https://github.com/apache/lucenenet/issues/505#issuecomment-894424982","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/505","id":894424982,"node_id":"IC_kwDOAAJ06c41T9eW","user":{"login":"fjam","id":1414714,"node_id":"MDQ6VXNlcjE0MTQ3MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/1414714?v=4","gravatar_id":"","url":"https://api.github.com/users/fjam","html_url":"https://github.com/fjam","followers_url":"https://api.github.com/users/fjam/followers","following_url":"https://api.github.com/users/fjam/following{/other_user}","gists_url":"https://api.github.com/users/fjam/gists{/gist_id}","starred_url":"https://api.github.com/users/fjam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjam/subscriptions","organizations_url":"https://api.github.com/users/fjam/orgs","repos_url":"https://api.github.com/users/fjam/repos","events_url":"https://api.github.com/users/fjam/events{/privacy}","received_events_url":"https://api.github.com/users/fjam/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-06T18:00:09Z","updated_at":"2021-08-06T18:00:09Z","author_association":"NONE","body":"I have a process running where there will be 1000s of documents being indexed a day (at different times). This way there will be 1000s of new .cfs files in my directory.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/894424982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/894425404","html_url":"https://github.com/apache/lucenenet/issues/505#issuecomment-894425404","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/505","id":894425404,"node_id":"IC_kwDOAAJ06c41T9k8","user":{"login":"fjam","id":1414714,"node_id":"MDQ6VXNlcjE0MTQ3MTQ=","avatar_url":"https://avatars.githubusercontent.com/u/1414714?v=4","gravatar_id":"","url":"https://api.github.com/users/fjam","html_url":"https://github.com/fjam","followers_url":"https://api.github.com/users/fjam/followers","following_url":"https://api.github.com/users/fjam/following{/other_user}","gists_url":"https://api.github.com/users/fjam/gists{/gist_id}","starred_url":"https://api.github.com/users/fjam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjam/subscriptions","organizations_url":"https://api.github.com/users/fjam/orgs","repos_url":"https://api.github.com/users/fjam/repos","events_url":"https://api.github.com/users/fjam/events{/privacy}","received_events_url":"https://api.github.com/users/fjam/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-06T18:00:50Z","updated_at":"2021-08-06T18:00:50Z","author_association":"NONE","body":"Is that correct way? or is there a way to merge these .cfs files together?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/894425404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/894533284","html_url":"https://github.com/apache/lucenenet/issues/505#issuecomment-894533284","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/505","id":894533284,"node_id":"IC_kwDOAAJ06c41UX6k","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-06T21:41:27Z","updated_at":"2021-08-06T21:41:27Z","author_association":"CONTRIBUTOR","body":"Inserting 1000s of docs is no problem.  On my local my dev box I can insert around 14K docs per second.  Of course the speed will depend greatly on the size of the documents and the speed of the machine.  \r\n\r\nLucene manages the segments well and will merge them periodically.  The result will be less segments but bigger segments.  You can make Lucene's life easier and your indexing faster by not calling `Flush`, `Commit` or `MaybeRefreshBlocking` until after you have inserted the set of documents you desire.  (These commands force buffered documents to be written out in a new segment).  But even if you call all these methods after each time you add a document to the index Lucene will still manage the segments well by doing merging as needed. It will just be much slower (maybe like 20 docs per second).","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/894533284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/897358352","html_url":"https://github.com/apache/lucenenet/issues/506#issuecomment-897358352","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/506","id":897358352,"node_id":"IC_kwDOAAJ06c41fJoQ","user":{"login":"felipepessoto","id":1336227,"node_id":"MDQ6VXNlcjEzMzYyMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1336227?v=4","gravatar_id":"","url":"https://api.github.com/users/felipepessoto","html_url":"https://github.com/felipepessoto","followers_url":"https://api.github.com/users/felipepessoto/followers","following_url":"https://api.github.com/users/felipepessoto/following{/other_user}","gists_url":"https://api.github.com/users/felipepessoto/gists{/gist_id}","starred_url":"https://api.github.com/users/felipepessoto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/felipepessoto/subscriptions","organizations_url":"https://api.github.com/users/felipepessoto/orgs","repos_url":"https://api.github.com/users/felipepessoto/repos","events_url":"https://api.github.com/users/felipepessoto/events{/privacy}","received_events_url":"https://api.github.com/users/felipepessoto/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-12T05:24:33Z","updated_at":"2021-08-12T05:49:44Z","author_association":"NONE","body":"Looks like the implementation has been changed in recent betas\r\nhttps://github.com/apache/lucenenet/pull/236\r\nhttps://github.com/apache/lucenenet/commit/7fd3de71d60a50059b6a8276bccb8d35fd6a1c83#diff-13753e05aa8e0bd16144ad93218b728e1476c950f7c4318b108c8be0d38eb7ec\r\n\r\nWe may still need a fix to previous versions","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/897358352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/897372389","html_url":"https://github.com/apache/lucenenet/issues/506#issuecomment-897372389","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/506","id":897372389,"node_id":"IC_kwDOAAJ06c41fNDl","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-12T06:04:06Z","updated_at":"2021-08-12T06:04:06Z","author_association":"CONTRIBUTOR","body":"Thanks @felipepessoto\r\nI'm sure there is still some edge case for this weak reference.\r\n\r\nI'm still getting #319 on production, so this might be the issue with it.\r\nI couldn't reproduce this but it's still happening very rarely, (once in few days) when there is a high load","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/897372389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/897825129","html_url":"https://github.com/apache/lucenenet/issues/506#issuecomment-897825129","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/506","id":897825129,"node_id":"IC_kwDOAAJ06c41g7lp","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-12T17:27:51Z","updated_at":"2021-08-12T17:27:51Z","author_association":"CONTRIBUTOR","body":"@felipepessoto \r\n\r\nThanks for the report and your insights. I took a closer look and it seems there is more wrong with this than simply not correctly disposing the weak reference. The original declaration in Lucene's `IndexReader` was:\r\n\r\n```java\r\n  private final Set<IndexReader> parentReaders = \r\n      Collections.synchronizedSet(Collections.newSetFromMap(new WeakHashMap<IndexReader,Boolean>()));\r\n```\r\n\r\nHowever, ours is:\r\n\r\n```c#\r\nprivate readonly ISet<IdentityWeakReference<IndexReader>> parentReaders = new ConcurrentHashSet<IdentityWeakReference<IndexReader>>();\r\n```\r\n\r\nEffectively, we have replaced a collection that automatically prunes its weak entries with one that does not.\r\n\r\nIt seems like the right direction to go here is to factor out the `IdentityWeakReference<T>` class (which is only referenced in `IndexReader`) and replace the collection with `ConditionalWeakTable<TKey, TValue>`, since it would automatically prune and GC the contained keys correctly and it more closely resembles how it was done in Lucene. While there was no \"identity\" equality comparison in the original Java WeakHashMap, the object that is being compared (`IndexReader`) overrides `GetHashCode()` and `Equals()` to make the identity comparison, so the fact that `ConditionalWeakTable<TKey, TValue>` uses identity comparison is no issue.\r\n\r\nUnfortunately, if we do that we need to conditionally compile because the enumerator is not exposed in `ConditionalWeakTable<TKey, TValue>` prior to .NET Stanadard 2.1. So, we will need to fall back to `WeakDictionary<TKey, TValue>` in those cases.\r\n\r\nIn addition, there is a thread safety issue. The lock of the concurrent set in Java was shared between the `Add` operation and the enumeration, which means we can add items while they are being iterated even though that is not supposed to be allowed.\r\n\r\nThis report also led me to discover http://www.philosophicalgeek.com/2014/08/14/prefer-weakreferencet-to-weakreference/, which recommends against using the generic `WeakReference` and instead use `WeakReference<T>`, so we can also make some adjustments to [`WeakDictionary<TKey, TValue>`](https://github.com/apache/lucenenet/blob/Lucene.Net_4_8_0_beta00014/src/Lucene.Net/Support/WeakDictionary.cs#L255) in order to make it more robust.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/897825129/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/897828332","html_url":"https://github.com/apache/lucenenet/issues/407#issuecomment-897828332","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/407","id":897828332,"node_id":"IC_kwDOAAJ06c41g8Xs","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-12T17:32:49Z","updated_at":"2021-08-12T17:32:49Z","author_association":"CONTRIBUTOR","body":"Just bumped into this breaking change but it makes perfect sense these were moved into an `Lucene.Net.Documents.Extension.DocumentExtensions`  class.  And thankfully in Visual Studio, `ctl + .` makes it so easy to find the new namespace that needs added to a project to access these extension methods. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/897828332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/898031775","html_url":"https://github.com/apache/lucenenet/issues/506#issuecomment-898031775","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/506","id":898031775,"node_id":"IC_kwDOAAJ06c41huCf","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-12T23:11:10Z","updated_at":"2021-08-12T23:11:10Z","author_association":"CONTRIBUTOR","body":"I have submitted #509 with a patch to fix the issues with using the wrong collection type.\r\n\r\n- .NET Standard 2.1 uses `ConditionalWeakTable<TKey, TValue>`\r\n- Lower .NET versions use `WeakDictionary<TKey, TValue>`\r\n  - The `WeakKey<T>` class (used by `WeakDictionary<TKey, TValue>`) was modified to be backed by `WeakReference<T>` rather than `WeakReference`\r\n  - `WeakDictionary<TKey, TValue>` was modified to be backed by `ConcurrentDictionary<TKey, TValue>` to allow the reap to happen while doing a forward iteration\r\n\r\nYou can download a CI build of the changes from [here](https://dev.azure.com/LuceneNET-Temp/Lucene.NET/_build/results?buildId=1463&view=artifacts&pathAsName=false&type=publishedArtifacts), and I would appreciate your help testing them to ensure the problem is resolved.\r\n\r\n> When you inherit the WeakReference CLR doesn't ignore the finalizer anymore and the object become finalizable. \r\n\r\nBeing that we switched to a wrapped (rather than inherited) instance, I suspect the finalizer issue has been sidestepped. However, if there is still an issue with it, please let us know.\r\n\r\nDo note that because of the conditional compilation branching it would be helpful to know which .NET platform you are targeting going forward so we know which implementation you are referring to.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/898031775/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/898259670","html_url":"https://github.com/apache/lucenenet/issues/506#issuecomment-898259670","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/506","id":898259670,"node_id":"IC_kwDOAAJ06c41ilrW","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-13T07:46:40Z","updated_at":"2021-08-13T07:46:40Z","author_association":"CONTRIBUTOR","body":"Thanks a lot. \n\nI'm asking myself, do we really need to support older platforms? How many of the user base won't be supported? This reminds me the days of supporting IE6 browser. Besides even if you have an old legacy system you can always run the Lucene search as external api service \n\nI'll push the version in two days and let you know.\n\nWe won't be able to know immediately if this resolved, we'll have to wait about a week to ensure this isn't occurred again\n\nI'm using netcore 5.0\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/898259670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/899037140","html_url":"https://github.com/apache/lucenenet/issues/506#issuecomment-899037140","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/506","id":899037140,"node_id":"IC_kwDOAAJ06c41ljfU","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-15T11:37:37Z","updated_at":"2021-08-15T11:37:37Z","author_association":"CONTRIBUTOR","body":"So far looks promising \nLet's wait more couple of days, seems like it resolved ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/899037140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/901240097","html_url":"https://github.com/apache/lucenenet/issues/319#issuecomment-901240097","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/319","id":901240097,"node_id":"IC_kwDOAAJ06c41t9Uh","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-18T16:07:11Z","updated_at":"2021-08-18T16:07:11Z","author_association":"CONTRIBUTOR","body":"finally, I can confirm this is resolved. (thanks to #509)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/901240097/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/901240250","html_url":"https://github.com/apache/lucenenet/issues/506#issuecomment-901240250","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/506","id":901240250,"node_id":"IC_kwDOAAJ06c41t9W6","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-18T16:07:23Z","updated_at":"2021-08-18T16:07:23Z","author_association":"CONTRIBUTOR","body":"fixed.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/901240250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/901258903","html_url":"https://github.com/apache/lucenenet/issues/319#issuecomment-901258903","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/319","id":901258903,"node_id":"IC_kwDOAAJ06c41uB6X","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-18T16:33:19Z","updated_at":"2021-08-18T16:33:19Z","author_association":"CONTRIBUTOR","body":"Thanks for the update Elad.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/901258903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/901600412","html_url":"https://github.com/apache/lucenenet/issues/506#issuecomment-901600412","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/506","id":901600412,"node_id":"IC_kwDOAAJ06c41vVSc","user":{"login":"felipepessoto","id":1336227,"node_id":"MDQ6VXNlcjEzMzYyMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1336227?v=4","gravatar_id":"","url":"https://api.github.com/users/felipepessoto","html_url":"https://github.com/felipepessoto","followers_url":"https://api.github.com/users/felipepessoto/followers","following_url":"https://api.github.com/users/felipepessoto/following{/other_user}","gists_url":"https://api.github.com/users/felipepessoto/gists{/gist_id}","starred_url":"https://api.github.com/users/felipepessoto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/felipepessoto/subscriptions","organizations_url":"https://api.github.com/users/felipepessoto/orgs","repos_url":"https://api.github.com/users/felipepessoto/repos","events_url":"https://api.github.com/users/felipepessoto/events{/privacy}","received_events_url":"https://api.github.com/users/felipepessoto/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-19T04:28:11Z","updated_at":"2021-08-19T04:28:11Z","author_association":"NONE","body":"In which commit?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/901600412/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/901606394","html_url":"https://github.com/apache/lucenenet/issues/506#issuecomment-901606394","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/506","id":901606394,"node_id":"IC_kwDOAAJ06c41vWv6","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-19T04:47:12Z","updated_at":"2021-08-19T04:47:12Z","author_association":"CONTRIBUTOR","body":"> In which commit?\n\n#509","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/901606394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/920920326","html_url":"https://github.com/apache/lucenenet/pull/520#issuecomment-920920326","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/520","id":920920326,"node_id":"IC_kwDOAAJ06c425CEG","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T13:50:00Z","updated_at":"2021-09-16T13:50:11Z","author_association":"CONTRIBUTOR","body":"Awesome work Shad!  One questions, if a project is targeting `net461` why also target `net48`?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/920920326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/921079818","html_url":"https://github.com/apache/lucenenet/issues/506#issuecomment-921079818","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/506","id":921079818,"node_id":"IC_kwDOAAJ06c425pAK","user":{"login":"felipepessoto","id":1336227,"node_id":"MDQ6VXNlcjEzMzYyMjc=","avatar_url":"https://avatars.githubusercontent.com/u/1336227?v=4","gravatar_id":"","url":"https://api.github.com/users/felipepessoto","html_url":"https://github.com/felipepessoto","followers_url":"https://api.github.com/users/felipepessoto/followers","following_url":"https://api.github.com/users/felipepessoto/following{/other_user}","gists_url":"https://api.github.com/users/felipepessoto/gists{/gist_id}","starred_url":"https://api.github.com/users/felipepessoto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/felipepessoto/subscriptions","organizations_url":"https://api.github.com/users/felipepessoto/orgs","repos_url":"https://api.github.com/users/felipepessoto/repos","events_url":"https://api.github.com/users/felipepessoto/events{/privacy}","received_events_url":"https://api.github.com/users/felipepessoto/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-16T17:09:05Z","updated_at":"2021-09-16T17:09:05Z","author_association":"NONE","body":"@NightOwl888 do you have any ETA when next release will be done?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/921079818/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]