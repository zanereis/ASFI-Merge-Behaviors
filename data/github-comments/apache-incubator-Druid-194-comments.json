[{"url":"https://api.github.com/repos/apache/druid/issues/comments/407533842","html_url":"https://github.com/apache/druid/issues/6037#issuecomment-407533842","issue_url":"https://api.github.com/repos/apache/druid/issues/6037","id":407533842,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzUzMzg0Mg==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T20:03:47Z","updated_at":"2018-07-24T20:03:47Z","author_association":"MEMBER","body":"This looks similar to this issue https://github.com/apache/incubator-druid/pull/5591#issuecomment-379393497","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407533842/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407536584","html_url":"https://github.com/apache/druid/pull/6016#issuecomment-407536584","issue_url":"https://api.github.com/repos/apache/druid/issues/6016","id":407536584,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzUzNjU4NA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T20:13:10Z","updated_at":"2018-07-24T20:25:50Z","author_association":"CONTRIBUTOR","body":"This is impressive.\r\n\r\nI haven't read the code yet, but just the description. I had few doubts...\r\n\r\nFirst \"Time to select rows\" benchmark appears to have a peak just before 3M . Assuming that peak is at x M, it says performance would be better when selecting (x+delta) rows instead of x rows. I'm interested if there is an explanation for it. That peak shows up at different points in x-axis very consistently in all similar graphs. \r\n\r\nIn \"The bad\" section , it seems ShapeShiftingColumn will outperform current impl in *all* cases, if they could use blocks of varying sizes. That sounds great and deserves ateast validating that. If true, then I think it is well worth it even with a little bit of extra heap required given that this feature already requires re-tuning heap and maybe other jvm params.\r\n\r\nDoes new design to read data increase heap reqirements, if yes then that would not be end of the world but deserves mention in the \"bad\" section (so re-tuning at historicals as well). Also new read design introduces mutation and I hope this doesn't mean requiring locking etc in the face of concurrent segment read or else that might cause more problems than being solved.\r\nThat said, it appears that minor changes here can whack the performance very easily (maybe even different jvm versions, hardware will have different performance). unsure whether same code produces different performance on different jvm version and hardware. This is hard problem.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407536584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407538797","html_url":"https://github.com/apache/druid/issues/4865#issuecomment-407538797","issue_url":"https://api.github.com/repos/apache/druid/issues/4865","id":407538797,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzUzODc5Nw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T20:20:32Z","updated_at":"2018-07-24T20:20:32Z","author_association":"CONTRIBUTOR","body":"while there are multiple PRs trying to solve this by limiting memory used in DirectDruidClient which is great in general.\r\nHowever, just a thought I had was this could benefit if scan query didn't go through regular merging process at the broker and somehow simply streamed results from historicals to client as they showed up on broker.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407538797/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407553115","html_url":"https://github.com/apache/druid/issues/6030#issuecomment-407553115","issue_url":"https://api.github.com/repos/apache/druid/issues/6030","id":407553115,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzU1MzExNQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T21:09:48Z","updated_at":"2018-07-24T21:09:48Z","author_association":"CONTRIBUTOR","body":"@yurmix thanks. Do you want to make a PR for this issue?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407553115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407568256","html_url":"https://github.com/apache/druid/pull/6016#issuecomment-407568256","issue_url":"https://api.github.com/repos/apache/druid/issues/6016","id":407568256,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzU2ODI1Ng==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T22:08:21Z","updated_at":"2018-07-24T22:08:21Z","author_association":"MEMBER","body":"@leventov thanks for starting to think about this!\r\n\r\n> It would be really nice if along or before this PR something was done to make the segment format system more structured: #5347.\r\n\r\nI agree, I've been thinking about that for a while now too. I've been meaning to respond to that ticket for a some time but got a bit side-tracked - I'll try to do that soon.\r\n\r\n> The query processing monomorphization framework (#4079) should now work per-block rather than per-interval, unless all encodings in the shape-shifting framework always do something like filling an int[] array or a ByteBuffer.\r\n\r\nAll currently either fill an int array or buffer (or constant), or allow reading from the base column buffer for the case of non-compressed byte packing. I do know the set of encoders used in the column up front, so I think at the least I can modify runtime shape inspection to adjust accordingly of whether or not the int arrays and decompression buffer will be in play.\r\n\r\n> Could you please elaborate why Memory didn't work for you well?\r\n\r\nOops, I didn't intend to imply that it didn't work well... I think it's great and I look forward to being able to replace the 'unsafe' and 'buffer' pairs of near duplicate functions with Memory versions instead. I've misplaced my benchmarks on this, but in my tests `Memory` was faster than using `ByteBuffer` (but marginally slower than `Unsafe`) _except_ in the case when `CompressionStrategy` is used, where it was slightly slower than using the buffer. While I didn't dig in so deep, just guessing it was maybe from the overhead of having to wrap the decompression `ByteBuffer` in a `Memory` object on every chunk load? That said, it was a very small amount slower, so it might be worth it to go ahead and just start using it anyway, and maybe have a slight performance bump in the future if we can get the `lz4` decoder to use it. I will also try to find the time to repeat the experiment, it was done a while ago and some things have changed since then, so maybe the performance drop I saw with compression was unrelated and falsely attributed or has since been cleared up in some other way.\r\n\r\n>Why the same maximum-sized objects couldn't be used for blocks of any size, similarly how it is currently done with column compression buffers?\r\n\r\nThey definitely could; my original line of thinking for the smaller block sizes was as much driven by my nervousness about adding heap usage on the query side as anything else, imagining that small blocks sizes would be used *solely* if an operator was afraid of heap impact, but I think that's not so sensible in retrospect. I think that bigger blocks always result in better compression ratio since more values can be considered at once as well as lower metadata overhead (fewer chunk offsets, headers, etc), but random access time can be slightly better with smaller blocks for encodings which do not support random access (including byte level compression). I think it probably makes sense to have them all use the larger sized pool objects, I will go ahead and make that change.\r\n\r\n> Also, in case you didn't see this article: https://lemire.me/blog/2018/04/17/iterating-in-batches-over-data-structures-can-be-much-faster/, it might give you some ideas about block sizing in general.\r\n\r\nI saw this :+1:, and was planning on trying out a batching strategy as well as some loop unrolling to try to make the eager decoded versions a bit faster. \r\n\r\nAlso related to this line of thinking, @gianm has been working on an experimental branch that we've been testing that adds vectorized versions of aggregators, allowing them to select and process batches of row values which has also been producing some very promising results.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407568256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407570981","html_url":"https://github.com/apache/druid/issues/6037#issuecomment-407570981","issue_url":"https://api.github.com/repos/apache/druid/issues/6037","id":407570981,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzU3MDk4MQ==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T22:20:59Z","updated_at":"2018-07-24T22:20:59Z","author_association":"CONTRIBUTOR","body":"I found a machine with java 1.8.0_161, built druid on it, and there is no problem.\r\nI think we can close this issue.\r\nThank you.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407570981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407572959","html_url":"https://github.com/apache/druid/pull/6016#issuecomment-407572959","issue_url":"https://api.github.com/repos/apache/druid/issues/6016","id":407572959,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzU3Mjk1OQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T22:29:55Z","updated_at":"2018-07-24T22:29:55Z","author_association":"MEMBER","body":"@himanshug Thanks for having a look!\r\n\r\n>First \"Time to select rows\" benchmark appears to have a peak just before 3M . Assuming that peak is at x M, it says performance would be better when selecting (x+delta) rows instead of x rows. I'm interested if there is an explanation for it. That peak shows up at different points in x-axis very consistently in all similar graphs.\r\n\r\nMy bad, I think I should've done a better job of trying to call out that the last datapoint is special on the 'time to select n rows' graphs. It represents the raw speed of a total scan, where the rest of the data points are collected using a `BitSet` to simulate a filter. The code in the benchmark test probably explains it best:\r\n```\r\n    IndexedInts encoder = encoders.get(encoding);\r\n    if (filter == null) {\r\n      for (int i = 0; i < rows; i++) {\r\n        blackhole.consume(encoder.get(i));\r\n      }\r\n    } else {\r\n      for (int i = filter.nextSetBit(0); i >= 0; i = filter.nextSetBit(i + 1)) {\r\n        blackhole.consume(encoder.get(i));\r\n      }\r\n    }\r\n```\r\nData visualization is hard 😄 Is it worth reworking the plots to not include this data point as part of the same line? Or perhaps as a separate 'total scan' line connected to another new 'time to select 1 row' data point? I also considered doing a filter of `numRows - 1` to show it as the 'cliff' it is instead of producing what appears to be a peak.\r\n\r\n> In \"The bad\" section , it seems ShapeShiftingColumn will outperform current impl in all cases, if they could use blocks of varying sizes. That sounds great and deserves ateast validating that. If true, then I think it is well worth it even with a little bit of extra heap required given that this feature already requires re-tuning heap and maybe other jvm params.\r\n\r\nIt's less the varying that could achieve this than just having a block size that is equivalent (in terms of how many values it can hold) to the largest size `CompressedVSizeColumnarIntsSerializer` can produce which is 2^16 if all values can be represented with a single byte. Heap usage to support this block size in shape-shift is ~4x higher than it is with the current largest block size it offers (2^14 values), but I agree it is probably worth investigating.\r\n\r\n> Does new design to read data increase heap reqirements, if yes then that would not be end of the world but deserves mention in the \"bad\" section (so re-tuning at historicals as well). \r\n\r\nYes, on the query side heap usage is in the form of primitive arrays that are pooled in the same manner as the direct bytebuffers used for decompressing values. I will edit the summary to clarify that it introduces heap usage on both indexing and query side.\r\n\r\n> Also new read design introduces mutation and I hope this doesn't mean requiring locking etc in the face of concurrent segment read or else that might cause more problems than being solved.\r\n\r\nI believe this should all be contained within a single thread, so locking shouldn't be necessary.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407572959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407596712","html_url":"https://github.com/apache/druid/pull/6041#issuecomment-407596712","issue_url":"https://api.github.com/repos/apache/druid/issues/6041","id":407596712,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzU5NjcxMg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T00:45:37Z","updated_at":"2018-07-25T00:45:37Z","author_association":"CONTRIBUTOR","body":"@leventov thank you for the review. My previous comment on your PR was wrong. It represents a state and shouldn't be a local variable. I renamed it to be more intuitive instead.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407596712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407597210","html_url":"https://github.com/apache/druid/pull/5980#issuecomment-407597210","issue_url":"https://api.github.com/repos/apache/druid/issues/5980","id":407597210,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzU5NzIxMA==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T00:48:50Z","updated_at":"2018-07-25T00:48:50Z","author_association":"MEMBER","body":"Hi, @jihoonson . Thanks for you comments. Added.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407597210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407608322","html_url":"https://github.com/apache/druid/pull/6041#issuecomment-407608322","issue_url":"https://api.github.com/repos/apache/druid/issues/6041","id":407608322,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzYwODMyMg==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T01:59:30Z","updated_at":"2018-07-25T01:59:30Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407608322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407613072","html_url":"https://github.com/apache/druid/pull/6014#issuecomment-407613072","issue_url":"https://api.github.com/repos/apache/druid/issues/6014","id":407613072,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzYxMzA3Mg==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T02:28:45Z","updated_at":"2018-07-25T02:28:45Z","author_association":"CONTRIBUTOR","body":"This ends up causing a lot of problems.\r\n\r\nI wrestled with it for a long time but ended up unable to have a clean solution for the competing threads. I'm going to record what was found here but close down the PR:\r\n\r\nThere are two pools of `HttpClient`s in the broker. One for the broker connections and one for a global client pool. The broker `HttpClient` worker threads hold connections to the historicals and call the callbacks in the handlers. It is unclear if one worker keeps one handler active all the time, or if there are internal \"pipelines\" or \"channels\" which are maintained and assigned to worker threads as results come back, I couldn't debug to that level of detail. It has a fixed thread count maximum.\r\n\r\nThere is the qtp pool for the http server which services the logic for handling the query itself (the`Sequence` work). It has a fixed thread maximum.\r\n\r\nWith the parallel merge PR, there is also a `ForkJoinPool` for allowing forking and joining of merge work.\r\n\r\nThe challenge in managing these thread pools ended up hitting as follows:\r\n\r\nChunks would come back and be processed by broker `HttpClient` worker threads and attempt to call the callbacks of the `DirectDruidClient` handler. If the `DirectDruidClient` handler blocked, then the callbacks would not progress and the `HttpClient` thread would be stalled and risk pool starvation.\r\n\r\nThe jetty server http thread pool would be trying to feed off of a supplier of some kind so it could handle the `Sequence` materialization back up to the calling client.\r\n\r\nThe `ForkJoinPool` in the parallel merge PR would try to handle pushes from the `HttpClient`, do work, then have a way for the jetty server thread to feed the results out.\r\n\r\nTrying to keep all the thread pools in lock-step to prevent thread starvation proved too much. I couldn't get tunings right or thread pool capacity predictions to a reasonable state. And the coordination started to look horrendous. For example, how can you make sure that HttpClient thread don't starve their connection limits to druid historicals for concurrent query loads? The extra frustrating part was that lots of unit tests and local integration tests worked great, but as soon as I would deploy the code to a real production system I would encounter locking problems and thread starvation instantly.\r\n\r\nI think the \"correct\" solution is to move onto a framework that handles the scatter/gather nature of the druid query in a more start-to-finish kind of way rather than trying to piecemeal a bunch of disjoint components together.\r\n\r\nThe resource contention considerations are just really high without having a higher level cooperation among concurrent queries on how to handle thread pool resources.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407613072/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407613218","html_url":"https://github.com/apache/druid/pull/4949#issuecomment-407613218","issue_url":"https://api.github.com/repos/apache/druid/issues/4949","id":407613218,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzYxMzIxOA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T02:29:33Z","updated_at":"2018-07-25T02:29:33Z","author_association":"CONTRIBUTOR","body":"I ended up hitting a LOT of problems when I tried to get #6014 into production that I wrote up in the pr.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407613218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407617718","html_url":"https://github.com/apache/druid/pull/5913#issuecomment-407617718","issue_url":"https://api.github.com/repos/apache/druid/issues/5913","id":407617718,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzYxNzcxOA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T02:58:18Z","updated_at":"2018-07-25T02:58:18Z","author_association":"CONTRIBUTOR","body":"fixed to use chained execution query runners to execute parallel apply fn.\r\n\r\nLooks like this now:\r\n\r\n<img width=\"1232\" alt=\"screen shot 2018-07-24 at 7 53 05 pm\" src=\"https://user-images.githubusercontent.com/8213081/43177161-bdc201a2-8f7b-11e8-96ef-5fcfce5d07d1.png\">\r\n\r\nThe overall CPU load is drastically reduced compared to the original version of this PR. The cpu flame graph is a bit lop sided because the overall cpu time this accounts for is actually very small.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407617718/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407655258","html_url":"https://github.com/apache/druid/issues/5230#issuecomment-407655258","issue_url":"https://api.github.com/repos/apache/druid/issues/5230","id":407655258,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzY1NTI1OA==","user":{"login":"iteacood","id":14873806,"node_id":"MDQ6VXNlcjE0ODczODA2","avatar_url":"https://avatars.githubusercontent.com/u/14873806?v=4","gravatar_id":"","url":"https://api.github.com/users/iteacood","html_url":"https://github.com/iteacood","followers_url":"https://api.github.com/users/iteacood/followers","following_url":"https://api.github.com/users/iteacood/following{/other_user}","gists_url":"https://api.github.com/users/iteacood/gists{/gist_id}","starred_url":"https://api.github.com/users/iteacood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iteacood/subscriptions","organizations_url":"https://api.github.com/users/iteacood/orgs","repos_url":"https://api.github.com/users/iteacood/repos","events_url":"https://api.github.com/users/iteacood/events{/privacy}","received_events_url":"https://api.github.com/users/iteacood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T07:03:54Z","updated_at":"2018-07-25T07:03:54Z","author_association":"NONE","body":"Hi, I meet the same issue, peon inserts druid task into mysql, but can't create segment under directory \"var/druid/task\". and exception:\r\n\r\njava.net.BindException: Address already in use\r\nat sun.nio.ch.Net.bind0(Native Method) ~[?:1.8.0_65]\r\nat sun.nio.ch.Net.bind(Net.java:433) ~[?:1.8.0_65]\r\nat sun.nio.ch.Net.bind(Net.java:425) ~[?:1.8.0_65]\r\nat sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223) ~[?:1.8.0_65]\r\nat sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[?:1.8.0_65]\r\nat org.eclipse.jetty.server.ServerConnector.open(ServerConnector.java:317) ~[jetty-server-9.3.19.v20170502.jar:9.3.19.v20170502]\r\nat org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:80) ~[jetty-server-9.3.19.v20170502.jar:9.3.19.v20170502]\r\nat org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:235) ~[jetty-server-9.3.19.v20170502.jar:9.3.19.v20170502]\r\nat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) ~[jetty-util-9.3.19.v20170502.jar:9.3.19.v20170502]\r\nat org.eclipse.jetty.server.Server.doStart(Server.java:401) ~[jetty-server-9.3.19.v20170502.jar:9.3.19.v20170502]\r\nat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68) ~[jetty-util-9.3.19.v20170502.jar:9.3.19.v20170502]\r\nat io.druid.server.initialization.jetty.JettyServerModule$1.start(JettyServerModule.java:315) ~[druid-server-0.12.1.jar:0.12.1]\r\nat io.druid.java.util.common.lifecycle.Lifecycle.start(Lifecycle.java:311) ~[java-util-0.12.1.jar:0.12.1]\r\nat io.druid.guice.LifecycleModule$2.start(LifecycleModule.java:134) ~[druid-api-0.12.1.jar:0.12.1]\r\nat io.druid.cli.GuiceRunnable.initLifecycle(GuiceRunnable.java:101) [druid-services-0.12.1.jar:0.12.1]\r\nat io.druid.cli.CliPeon.run(CliPeon.java:301) [druid-services-0.12.1.jar:0.12.1]\r\nat io.druid.cli.Main.main(Main.java:116) [druid-services-0.12.1.jar:0.12.1]","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407655258/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407779623","html_url":"https://github.com/apache/druid/pull/5913#issuecomment-407779623","issue_url":"https://api.github.com/repos/apache/druid/issues/5913","id":407779623,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzc3OTYyMw==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T14:43:38Z","updated_at":"2018-07-25T14:43:38Z","author_association":"CONTRIBUTOR","body":"failing on \r\n\r\n```\r\n[INFO] Compiling 9 source files to /home/travis/build/apache/incubator-druid/extensions-core/kafka-indexing-service/target/test-classes\r\nerror: error reading /home/travis/.m2/repository/org/scala-lang/scala-library/2.11.8/scala-library-2.11.8.jar; error in opening zip file\r\nAn exception has occurred in the compiler (9-internal). Please file a bug against the Java compiler via the Java bug reporting page (http://bugreport.java.com) after checking the Bug Database (http://bugs.java.com) for duplicates. Include your program and the following diagnostic in your report. Thank you.\r\njava.util.zip.ZipError: zip END header not found\r\n\tat com.sun.nio.zipfs.ZipFileSystem.zerror(ZipFileSystem.java:1605)\r\n\tat com.sun.nio.zipfs.ZipFileSystem.findEND(ZipFileSystem.java:1021)\r\n\tat com.sun.nio.zipfs.ZipFileSystem.initCEN(ZipFileSystem.java:1030)\r\n\tat com.sun.nio.zipfs.ZipFileSystem.<init>(ZipFileSystem.java:130)\r\n\tat com.sun.nio.zipfs.ZipFileSystemProvider.newFileSystem(ZipFileSystemProvider.java:139)\r\n\tat java.nio.file.FileSystems.newFileSystem(FileSystems.java:390)\r\n\tat com.sun.tools.javac.file.JavacFileManager$ArchiveContainer.<init>(JavacFileManager.java:501)\r\n\tat com.sun.tools.javac.file.JavacFileManager.getContainer(JavacFileManager.java:310)\r\n\tat com.sun.tools.javac.file.JavacFileManager.list(JavacFileManager.java:692)\r\n\tat com.sun.tools.javac.code.ClassFinder.scanUserPaths(ClassFinder.java:572)\r\n\tat com.sun.tools.javac.code.ClassFinder.fillIn(ClassFinder.java:512)\r\n\tat com.sun.tools.javac.code.ClassFinder.complete(ClassFinder.java:294)\r\n\tat com.sun.tools.javac.code.ClassFinder.access$000(ClassFinder.java:73)\r\n\tat com.sun.tools.javac.code.ClassFinder$1.complete(ClassFinder.java:165)\r\n\tat com.sun.tools.javac.code.Symbol.complete(Symbol.java:590)\r\n\tat com.sun.tools.javac.comp.Enter.visitTopLevel(Enter.java:299)\r\n\tat com.sun.tools.javac.tree.JCTree$JCCompilationUnit.accept(JCTree.java:509)\r\n\tat com.sun.tools.javac.comp.Enter.classEnter(Enter.java:255)\r\n\tat com.sun.tools.javac.comp.Enter.classEnter(Enter.java:270)\r\n\tat com.sun.tools.javac.comp.Enter.complete(Enter.java:485)\r\n\tat com.sun.tools.javac.comp.Enter.main(Enter.java:469)\r\n\tat com.sun.tools.javac.main.JavaCompiler.enterTrees(JavaCompiler.java:932)\r\n\tat com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:815)\r\n\tat com.sun.tools.javac.api.JavacTaskImpl$1.call(JavacTaskImpl.java:97)\r\n\tat com.sun.tools.javac.api.JavacTaskImpl$1.call(JavacTaskImpl.java:93)\r\n\tat com.sun.tools.javac.api.JavacTaskImpl.handleExceptions(JavacTaskImpl.java:128)\r\n\tat com.sun.tools.javac.api.JavacTaskImpl.doCall(JavacTaskImpl.java:93)\r\n\tat com.sun.tools.javac.api.JavacTaskImpl.call(JavacTaskImpl.java:87)\r\n\tat com.google.errorprone.BaseErrorProneJavaCompiler$1.call(BaseErrorProneJavaCompiler.java:99)\r\n\tat com.google.errorprone.BaseErrorProneCompiler.run(BaseErrorProneCompiler.java:137)\r\n\tat com.google.errorprone.BaseErrorProneCompiler.run(BaseErrorProneCompiler.java:108)\r\n\tat com.google.errorprone.ErrorProneCompiler.run(ErrorProneCompiler.java:119)\r\n\tat com.google.errorprone.ErrorProneCompiler.compile(ErrorProneCompiler.java:66)\r\n\tat org.codehaus.plexus.compiler.javac.errorprone.JavacCompilerWithErrorProne$CompilerInvoker.compile(JavacCompilerWithErrorProne.java:219)\r\n\tat sun.reflect.GeneratedMethodAccessor90.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.plexus.compiler.javac.errorprone.JavacCompilerWithErrorProne.performCompile(JavacCompilerWithErrorProne.java:91)\r\n\tat org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute(AbstractCompilerMojo.java:823)\r\n\tat org.apache.maven.plugin.compiler.TestCompilerMojo.execute(TestCompilerMojo.java:153)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:154)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:146)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)\r\n\tat org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:309)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:194)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:107)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:955)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:290)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:194)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407779623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407807814","html_url":"https://github.com/apache/druid/pull/6016#issuecomment-407807814","issue_url":"https://api.github.com/repos/apache/druid/issues/6016","id":407807814,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzgwNzgxNA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T16:04:39Z","updated_at":"2018-07-25T16:04:39Z","author_association":"CONTRIBUTOR","body":">  Is it worth reworking the plots to not include this data point as part of the same line?\r\n\r\nNo, explanation is good enough for me, may be just put that side note in the description but no need to redo the plots.\r\n\r\nRegarding the block size, I should probably read the code first to understand it more. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407807814/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407815745","html_url":"https://github.com/apache/druid/pull/6036#issuecomment-407815745","issue_url":"https://api.github.com/repos/apache/druid/issues/6036","id":407815745,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzgxNTc0NQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T16:29:33Z","updated_at":"2018-07-25T16:29:33Z","author_association":"CONTRIBUTOR","body":"Can you explain more about what this PR accomplishes that a MoveTask would not accomplish?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407815745/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407816522","html_url":"https://github.com/apache/druid/pull/6036#issuecomment-407816522","issue_url":"https://api.github.com/repos/apache/druid/issues/6036","id":407816522,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzgxNjUyMg==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T16:32:00Z","updated_at":"2018-07-25T16:32:00Z","author_association":"CONTRIBUTOR","body":"I don't think we should have deep storage implementations that rely on other deep storage implementations. The classloader isolation problems will be horrendous. As such, if there is a need to have more functionality than what the MoveTask can provide, it would be worth having a discussion on how to do that. For example, we have a KillTask auto-firing mechanism to allow the coordinator to clean up segments. It would make sense to have a \"MoveTask\" lifecycle mechanism to age in or out segments in a similar vein, but it should not have specific \"to\" or \"from\" requirements.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407816522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407860695","html_url":"https://github.com/apache/druid/issues/6030#issuecomment-407860695","issue_url":"https://api.github.com/repos/apache/druid/issues/6030","id":407860695,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzg2MDY5NQ==","user":{"login":"yurmix","id":1529282,"node_id":"MDQ6VXNlcjE1MjkyODI=","avatar_url":"https://avatars.githubusercontent.com/u/1529282?v=4","gravatar_id":"","url":"https://api.github.com/users/yurmix","html_url":"https://github.com/yurmix","followers_url":"https://api.github.com/users/yurmix/followers","following_url":"https://api.github.com/users/yurmix/following{/other_user}","gists_url":"https://api.github.com/users/yurmix/gists{/gist_id}","starred_url":"https://api.github.com/users/yurmix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yurmix/subscriptions","organizations_url":"https://api.github.com/users/yurmix/orgs","repos_url":"https://api.github.com/users/yurmix/repos","events_url":"https://api.github.com/users/yurmix/events{/privacy}","received_events_url":"https://api.github.com/users/yurmix/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T19:00:02Z","updated_at":"2018-07-25T19:00:02Z","author_association":"CONTRIBUTOR","body":"Oh, actually I have made one already: https://github.com/apache/incubator-druid/pull/6031\r\n(I have mentioned the issue there, but not vice versa.)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407860695/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407862887","html_url":"https://github.com/apache/druid/pull/6031#issuecomment-407862887","issue_url":"https://api.github.com/repos/apache/druid/issues/6031","id":407862887,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzg2Mjg4Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T19:07:54Z","updated_at":"2018-07-25T19:07:54Z","author_association":"CONTRIBUTOR","body":"Ah, great! Would you fill out our CLA [here](http://druid.io/community/cla.html)?\r\n\r\nAlso, if you can change the PR comment to be start with `Fixes #6030`, the issue #6030 is automatically closed when this PR is merged. See https://help.github.com/articles/closing-issues-using-keywords/ for more details.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407862887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407878817","html_url":"https://github.com/apache/druid/pull/5921#issuecomment-407878817","issue_url":"https://api.github.com/repos/apache/druid/issues/5921","id":407878817,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzg3ODgxNw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T20:07:38Z","updated_at":"2018-07-25T20:07:38Z","author_association":"CONTRIBUTOR","body":"I'm closing this PR. We can open this again if we have an actual issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407878817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407878868","html_url":"https://github.com/apache/druid/issues/5920#issuecomment-407878868","issue_url":"https://api.github.com/repos/apache/druid/issues/5920","id":407878868,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzg3ODg2OA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T20:07:49Z","updated_at":"2018-07-25T20:07:56Z","author_association":"CONTRIBUTOR","body":"I'm closing this issue. We can open this again if we have an actual issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407878868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407879155","html_url":"https://github.com/apache/druid/pull/5881#issuecomment-407879155","issue_url":"https://api.github.com/repos/apache/druid/issues/5881","id":407879155,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzg3OTE1NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T20:08:56Z","updated_at":"2018-07-25T20:08:56Z","author_association":"CONTRIBUTOR","body":"LGTM. @susielu have you had a chance to fill out our CLA? Also, please resolve the conflicts.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407879155/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407879875","html_url":"https://github.com/apache/druid/pull/5789#issuecomment-407879875","issue_url":"https://api.github.com/repos/apache/druid/issues/5789","id":407879875,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzg3OTg3NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T20:11:40Z","updated_at":"2018-07-25T20:11:40Z","author_association":"CONTRIBUTOR","body":"@andresgomezfrr sorry for the delayed review. I've been quite busy for other issues in Druid. Will take a look again today.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407879875/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407884331","html_url":"https://github.com/apache/druid/pull/6036#issuecomment-407884331","issue_url":"https://api.github.com/repos/apache/druid/issues/6036","id":407884331,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzg4NDMzMQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T20:27:27Z","updated_at":"2018-07-25T20:27:27Z","author_association":"CONTRIBUTOR","body":"@drcrallen I believe the goal of this PR is somewhat different from that of moveTask. The moveTask is to move _unused segments_ to somewhere another path in the same deep storage. However, the goal of this PR is to use a secondary deep storage when the primary deep storage is not available for pushing segments. So, the moveTask can be used only for already existing segments in deep storage, but this PR can be used while ingesting data.\r\n\r\n@gaodayue thank you for your detailed answers.\r\n\r\n> What do you mean by \"in sync\"? Do you mean all segments pushed to backup storage should be copied back to primary storage eventually? If that's the case, I don't think there is a strong need for it (explained below).\r\n\r\nYes, that's what I meant. I think we're considering different concepts for the term 'backup deep storage'. \r\n\r\nIn your PR, the backup deep storage is to another deep storage to be used when the primary deep storage is not available for pushing segments. I think this is a concept of allowing multiple instances of deep storage, so that segments can reside in multiple deep storage. \r\n\r\nMy thought for backup deep storage is a bit different. Druid should switch its deep storage from the primary deep storage to the backup deep storage if the primary deep storage isn't available. Once the deep storage is switched, the old primary deep storage is never accessed (but should be synced once it becomes back to normal) unless the backup deep storage becomes not available.\r\n\r\nI think this concept is more appropriate for backup deep storage because, if the deep storage is not available for writing, it highly likely has other problems which can introduce unexpected behaviors to Druid. \r\n\r\nIn addition, in your backup deep storage, users need to operate two or more deep storage instances unless they use a tool like `restore-hdfs-segment` to periodically consolidate segments stored in multiple deep storage instances. I believe no one wants to do that.\r\n\r\nWhat do you think?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407884331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407884813","html_url":"https://github.com/apache/druid/pull/5782#issuecomment-407884813","issue_url":"https://api.github.com/repos/apache/druid/issues/5782","id":407884813,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzg4NDgxMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T20:29:01Z","updated_at":"2018-07-25T20:29:01Z","author_association":"CONTRIBUTOR","body":"@mkuthan sorry for the delayed review. Have you had a chance of my last comments?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407884813/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407893457","html_url":"https://github.com/apache/druid/pull/4776#issuecomment-407893457","issue_url":"https://api.github.com/repos/apache/druid/issues/4776","id":407893457,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzg5MzQ1Nw==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T20:59:15Z","updated_at":"2018-07-25T20:59:15Z","author_association":"MEMBER","body":"I was able to repro this issue and verify the fix. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407893457/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407894937","html_url":"https://github.com/apache/druid/pull/4776#issuecomment-407894937","issue_url":"https://api.github.com/repos/apache/druid/issues/4776","id":407894937,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzg5NDkzNw==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T21:04:05Z","updated_at":"2018-07-25T21:04:05Z","author_association":"MEMBER","body":"@b-slim : Please merge if you agree with the fix. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407894937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407913929","html_url":"https://github.com/apache/druid/pull/5957#issuecomment-407913929","issue_url":"https://api.github.com/repos/apache/druid/issues/5957","id":407913929,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzkxMzkyOQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T22:14:46Z","updated_at":"2018-07-25T22:14:46Z","author_association":"MEMBER","body":"@nishantmonu51 please review this PR","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407913929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407928694","html_url":"https://github.com/apache/druid/pull/6031#issuecomment-407928694","issue_url":"https://api.github.com/repos/apache/druid/issues/6031","id":407928694,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzkyODY5NA==","user":{"login":"yurmix","id":1529282,"node_id":"MDQ6VXNlcjE1MjkyODI=","avatar_url":"https://avatars.githubusercontent.com/u/1529282?v=4","gravatar_id":"","url":"https://api.github.com/users/yurmix","html_url":"https://github.com/yurmix","followers_url":"https://api.github.com/users/yurmix/followers","following_url":"https://api.github.com/users/yurmix/following{/other_user}","gists_url":"https://api.github.com/users/yurmix/gists{/gist_id}","starred_url":"https://api.github.com/users/yurmix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yurmix/subscriptions","organizations_url":"https://api.github.com/users/yurmix/orgs","repos_url":"https://api.github.com/users/yurmix/repos","events_url":"https://api.github.com/users/yurmix/events{/privacy}","received_events_url":"https://api.github.com/users/yurmix/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-25T23:31:43Z","updated_at":"2018-07-25T23:31:43Z","author_association":"CONTRIBUTOR","body":"@jihoonson Now that the project is under Apache, shouldn't it be [Apache ICLA](https://www.apache.org/licenses/icla.pdf)?\r\nIf so, I also believe this CLA link should be updated (possibly in a separate PR 😄).\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407928694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407996093","html_url":"https://github.com/apache/druid/pull/5492#issuecomment-407996093","issue_url":"https://api.github.com/repos/apache/druid/issues/5492","id":407996093,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzk5NjA5Mw==","user":{"login":"josephglanville","id":605591,"node_id":"MDQ6VXNlcjYwNTU5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/605591?v=4","gravatar_id":"","url":"https://api.github.com/users/josephglanville","html_url":"https://github.com/josephglanville","followers_url":"https://api.github.com/users/josephglanville/followers","following_url":"https://api.github.com/users/josephglanville/following{/other_user}","gists_url":"https://api.github.com/users/josephglanville/gists{/gist_id}","starred_url":"https://api.github.com/users/josephglanville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josephglanville/subscriptions","organizations_url":"https://api.github.com/users/josephglanville/orgs","repos_url":"https://api.github.com/users/josephglanville/repos","events_url":"https://api.github.com/users/josephglanville/events{/privacy}","received_events_url":"https://api.github.com/users/josephglanville/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-26T06:54:59Z","updated_at":"2018-07-26T06:54:59Z","author_association":"CONTRIBUTOR","body":"@jihoonson this is outside of the scope of this PR but would you be interested in collaborating on making the current Firehose layered abstractions better support non-textual formats?\r\n\r\nThe backstory is that we mostly use InputRowParsers that operate on ByteBuffer and read from either raw byte messages from Kafka or SequenceFile format from archival storage (GCS in our case).\r\n\r\nWe would like to modify/extend the current prefetching and iterating abstractions to support iteration over other file formats not just newline delimited files and most importantly support emitting non-string rows for parsing so that ByteBufferInputRowParsers can be utilised with native batch ingestion.\r\n\r\nIn my mind there is a missing abstraction layer that should handle creating an iterator from a file that returns rows that can then be passed to InputRowParsers.\r\nBasically an InputFileFormat interface where the current implementation would be TextFileInputFormat and we would want a SequenceFileInputFormat but any iterable file format would be possible.\r\nThis separates the concern of reading rows from the files themselves from the Firehose which should be responsible for connecting to storage and fetching files.\r\n\r\nWe could of course sidestep this by creating a custom Firehose that simply implements the exact logic we want and handles prefetching etc without utilising the existing interfaces but we would much prefer upstreaming an approach that enables batch processing for all users wanting to process non-textual formats.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407996093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408046926","html_url":"https://github.com/apache/druid/issues/4960#issuecomment-408046926","issue_url":"https://api.github.com/repos/apache/druid/issues/4960","id":408046926,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODA0NjkyNg==","user":{"login":"nits2010","id":14086781,"node_id":"MDQ6VXNlcjE0MDg2Nzgx","avatar_url":"https://avatars.githubusercontent.com/u/14086781?v=4","gravatar_id":"","url":"https://api.github.com/users/nits2010","html_url":"https://github.com/nits2010","followers_url":"https://api.github.com/users/nits2010/followers","following_url":"https://api.github.com/users/nits2010/following{/other_user}","gists_url":"https://api.github.com/users/nits2010/gists{/gist_id}","starred_url":"https://api.github.com/users/nits2010/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nits2010/subscriptions","organizations_url":"https://api.github.com/users/nits2010/orgs","repos_url":"https://api.github.com/users/nits2010/repos","events_url":"https://api.github.com/users/nits2010/events{/privacy}","received_events_url":"https://api.github.com/users/nits2010/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-26T10:05:38Z","updated_at":"2018-07-26T10:05:57Z","author_association":"NONE","body":"You can try few of the things to get it resolve.\r\n1. Delete all the lookups which you are not using \r\n2. either use \"__default\" as tier name or mention you tier whatever you want but don't forget to mention in ALL your runtime.properties with as \r\ndruid.lookup.lookupTierIsDatasource=false\r\ndruid.lookup.lookupTier=_default_tier\r\n3. make sure GET is working on that lookup (see the documentation for get api for lookup )\r\n\r\n\r\nForexample:\r\nA typical lookup query would look like \r\n\r\n````\r\n{  \r\n   \"intervals\":[  \r\n      \"Your interval\"\r\n   ],\r\n   \"granularity\":\"all\",\r\n   \"queryType\":\"groupBy\",\r\n   \"threshold\":1000,\r\n   \"dataSource\":\"your datasource name\",\r\n   \"aggregations\":[  \r\n      {  \r\n         \"type\":\"doubleSum\",\r\n         \"name\":\"sum\",\r\n         \"fieldName\":\"your field\"\r\n      }\r\n   ],\r\n   \"dimensions\":[  \r\n      {  \r\n         \"type\":\"default\",\r\n         \"dimension\":\"your dimention mentioned in lookup- Key\",\r\n         \"outputName\":\"anyoutput name\",\r\n         \"outputType\":<\"STRING\"|\"LONG\"|\"FLOAT\">,\r\n         \"name\":\"your registered lookup name\"\r\n      },\r\n      {  \r\n         \r\n          \"type\" : \"extraction\",\r\n          \"dimension\" : \"your dimention mentioned in lookup- Key\",\r\n          \"outputName\" : \"anyout put name\",\r\n          \"outputType\": \"<\"STRING\"|\"LONG\"|\"FLOAT\">,\r\n          \"extractionFn\" : {\r\n               \"type\":\"registeredLookup\",\r\n                \"lookup\":\"your registered lookup name\",\r\n                \"retainMissingValue\":true\r\n                \r\n            }\r\n\r\n      }\r\n   ],\r\n   \"metric\":{  \r\n\r\n   }\r\n}`\r\n```\r\n\r\n\r\nThis will work.. After struggling alot i finally break this problem into solutions \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408046926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408223578","html_url":"https://github.com/apache/druid/pull/6036#issuecomment-408223578","issue_url":"https://api.github.com/repos/apache/druid/issues/6036","id":408223578,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODIyMzU3OA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-26T20:23:04Z","updated_at":"2018-07-26T20:23:04Z","author_association":"CONTRIBUTOR","body":"Related: https://github.com/apache/incubator-druid/issues/6046.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408223578/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408236212","html_url":"https://github.com/apache/druid/pull/5492#issuecomment-408236212","issue_url":"https://api.github.com/repos/apache/druid/issues/5492","id":408236212,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODIzNjIxMg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-26T21:10:09Z","updated_at":"2018-07-26T21:10:09Z","author_association":"CONTRIBUTOR","body":"@josephglanville I'm definitely interested in! https://github.com/apache/incubator-druid/issues/5584 is to refactor necessary interfaces to support all possible data formats. Let's talk more about this in that issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408236212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408237919","html_url":"https://github.com/apache/druid/issues/5584#issuecomment-408237919","issue_url":"https://api.github.com/repos/apache/druid/issues/5584","id":408237919,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODIzNzkxOQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-26T21:16:45Z","updated_at":"2018-07-26T21:16:45Z","author_association":"CONTRIBUTOR","body":"> This design made sense for loading data from a message oriented system like Kafka, which is what FirehoseFactories were originally designed to do. It is the responsibility of the message system to deliver one row at a time.\r\n\r\nOne thing which has changed is, each Kafka record can contain multiple rows now. It is supported since https://github.com/apache/incubator-druid/pull/5081.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408237919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408243515","html_url":"https://github.com/apache/druid/pull/6036#issuecomment-408243515","issue_url":"https://api.github.com/repos/apache/druid/issues/6036","id":408243515,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODI0MzUxNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-26T21:39:36Z","updated_at":"2018-07-26T21:39:36Z","author_association":"CONTRIBUTOR","body":"My feeling is that Druid already deals with potential HDFS reliability issues by retrying, and that should be enough if your HDFS cluster is well run. Pushing to an alternate deep storage, if the original one is not available, seems like a hack to work around a poorly run HDFS cluster.\r\n\r\n> I've thought about implementing something like composite-deep-storage which can add backup abilities to all deep storages at first, but found it's non-trivial to load multiple deep storage extensions inside composite-deep-storage. So I decide to add support hdfs-deep-storage only just because we're using it.\r\n\r\nIMO this is the best approach, since it's composable, rather than a tight link between the HDFS and S3 implementations. It could also be done as a contrib extension that doesn't touch the HDFS or S3 implementations, which I think is preferable for more niche functionality like this. It means less surface area to test in the main codebase, which is a good thing. @gaodayue, what sort of difficulty did you have when you tried to implement this? Maybe it it something we can solve?\r\n\r\nWith regard to @jihoonson's comment:\r\n\r\n> I think this concept is more appropriate for backup deep storage because, if the deep storage is not available for writing, it highly likely has other problems which can introduce unexpected behaviors to Druid.\r\n\r\nYeah, the 'bad' HDFS cluster would likely have other problems, like maybe you can't read from it. So this backup deep storage technique would improve availability for writes (because you can write to either deep storage) but would _worsen_ availability for reads (because you must read from the one that has your segment, and that means you will have reading downtime if any one of your deep storages is down). I can see that this makes sense for use cases where you want to maximize the ability of realtime tasks to write new data, and are ok with potentially worse ability for historicals to download segments.\r\n\r\nI think all signs point to this functionality making more sense as a contrib extension, so I hope we can figure out how to do that.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408243515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408244976","html_url":"https://github.com/apache/druid/issues/6046#issuecomment-408244976","issue_url":"https://api.github.com/repos/apache/druid/issues/6046","id":408244976,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODI0NDk3Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-26T21:45:54Z","updated_at":"2018-07-26T21:45:54Z","author_association":"CONTRIBUTOR","body":"How does the following procedure look for an S3 -> GC migration? It is similar to how I have done Druid deep storage migrations in the past.\r\n\r\n1. Specify GC as deep storage. Now new segments from here on are stored in GC. Old segments continue to be fetched from S3 when necessary.\r\n2. Copy all older segments from S3 to GC.\r\n3. Update metadata store payloads for the old segments to use GC loadSpecs instead of S3 loadSpecs.\r\n4. Restart the coordinator to make sure it doesn't still have any of the old loadSpecs cached. (I am not sure if this is necessary, but why not.)\r\n5. At this point it is safe to delete the old segments from S3, if you want.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408244976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408246182","html_url":"https://github.com/apache/druid/issues/6046#issuecomment-408246182","issue_url":"https://api.github.com/repos/apache/druid/issues/6046","id":408246182,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODI0NjE4Mg==","user":{"login":"pdeva","id":3190176,"node_id":"MDQ6VXNlcjMxOTAxNzY=","avatar_url":"https://avatars.githubusercontent.com/u/3190176?v=4","gravatar_id":"","url":"https://api.github.com/users/pdeva","html_url":"https://github.com/pdeva","followers_url":"https://api.github.com/users/pdeva/followers","following_url":"https://api.github.com/users/pdeva/following{/other_user}","gists_url":"https://api.github.com/users/pdeva/gists{/gist_id}","starred_url":"https://api.github.com/users/pdeva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdeva/subscriptions","organizations_url":"https://api.github.com/users/pdeva/orgs","repos_url":"https://api.github.com/users/pdeva/repos","events_url":"https://api.github.com/users/pdeva/events{/privacy}","received_events_url":"https://api.github.com/users/pdeva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-26T21:50:57Z","updated_at":"2018-07-26T21:51:04Z","author_association":"CONTRIBUTOR","body":"i am a little confused.\r\n\r\n>Old segments continue to be fetched from S3 when necessary.\r\n\r\nHow will druid know about S3 in the first place, now that you have specified GC as the deep storage?\r\n\r\n\r\n>Update metadata store payloads for the old segments to use GC loadSpecs\r\n\r\nI assume 'metadata store payloads' refers to data in the metadata storage.\r\nAssuming that, it seems this requires manually modifying the data in metadata storage. \r\nNot only is this undocumented, this could lead to corruption of the metadata if done incorrectly.\r\nThere should be some tooling for this.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408246182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408246765","html_url":"https://github.com/apache/druid/issues/6046#issuecomment-408246765","issue_url":"https://api.github.com/repos/apache/druid/issues/6046","id":408246765,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODI0Njc2NQ==","user":{"login":"pdeva","id":3190176,"node_id":"MDQ6VXNlcjMxOTAxNzY=","avatar_url":"https://avatars.githubusercontent.com/u/3190176?v=4","gravatar_id":"","url":"https://api.github.com/users/pdeva","html_url":"https://github.com/pdeva","followers_url":"https://api.github.com/users/pdeva/followers","following_url":"https://api.github.com/users/pdeva/following{/other_user}","gists_url":"https://api.github.com/users/pdeva/gists{/gist_id}","starred_url":"https://api.github.com/users/pdeva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdeva/subscriptions","organizations_url":"https://api.github.com/users/pdeva/orgs","repos_url":"https://api.github.com/users/pdeva/repos","events_url":"https://api.github.com/users/pdeva/events{/privacy}","received_events_url":"https://api.github.com/users/pdeva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-26T21:53:42Z","updated_at":"2018-07-26T21:54:49Z","author_association":"CONTRIBUTOR","body":">How will druid know about S3 in the first place, now that you have specified GC as the deep storage?\r\n\r\nahh i guess that is because the metadata refers to those segments in S3. right?\r\nThere is still the issue of S3 credentials not being present","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408246765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408248868","html_url":"https://github.com/apache/druid/pull/6045#issuecomment-408248868","issue_url":"https://api.github.com/repos/apache/druid/issues/6045","id":408248868,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODI0ODg2OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-26T22:01:50Z","updated_at":"2018-07-26T22:01:50Z","author_association":"CONTRIBUTOR","body":"I don't think the test you wrote should be `@Ignore` -- it is valuable to have some exhaustive tests that we run before releases. Does JUnit have a way to tag tests as \"slow\" and then only run them either for releases, or when you specifically ask for them?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408248868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408257454","html_url":"https://github.com/apache/druid/issues/5715#issuecomment-408257454","issue_url":"https://api.github.com/repos/apache/druid/issues/5715","id":408257454,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODI1NzQ1NA==","user":{"login":"schoren","id":314548,"node_id":"MDQ6VXNlcjMxNDU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/314548?v=4","gravatar_id":"","url":"https://api.github.com/users/schoren","html_url":"https://github.com/schoren","followers_url":"https://api.github.com/users/schoren/followers","following_url":"https://api.github.com/users/schoren/following{/other_user}","gists_url":"https://api.github.com/users/schoren/gists{/gist_id}","starred_url":"https://api.github.com/users/schoren/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schoren/subscriptions","organizations_url":"https://api.github.com/users/schoren/orgs","repos_url":"https://api.github.com/users/schoren/repos","events_url":"https://api.github.com/users/schoren/events{/privacy}","received_events_url":"https://api.github.com/users/schoren/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-26T22:42:48Z","updated_at":"2018-07-26T22:42:48Z","author_association":"NONE","body":"Yes, I'd also like to know this!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408257454/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408268311","html_url":"https://github.com/apache/druid/pull/6031#issuecomment-408268311","issue_url":"https://api.github.com/repos/apache/druid/issues/6031","id":408268311,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODI2ODMxMQ==","user":{"login":"yurmix","id":1529282,"node_id":"MDQ6VXNlcjE1MjkyODI=","avatar_url":"https://avatars.githubusercontent.com/u/1529282?v=4","gravatar_id":"","url":"https://api.github.com/users/yurmix","html_url":"https://github.com/yurmix","followers_url":"https://api.github.com/users/yurmix/followers","following_url":"https://api.github.com/users/yurmix/following{/other_user}","gists_url":"https://api.github.com/users/yurmix/gists{/gist_id}","starred_url":"https://api.github.com/users/yurmix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yurmix/subscriptions","organizations_url":"https://api.github.com/users/yurmix/orgs","repos_url":"https://api.github.com/users/yurmix/repos","events_url":"https://api.github.com/users/yurmix/events{/privacy}","received_events_url":"https://api.github.com/users/yurmix/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-26T23:44:42Z","updated_at":"2018-07-26T23:47:38Z","author_association":"CONTRIBUTOR","body":"@jihoonson Thank you for helping with my first pr!\r\nI have submitted one to Apache and it should be available to Druid PMCs. You can see my name (Eyal Yurman) showing here: [CLAs without ids](http://people.apache.org/unlistedclas.html)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408268311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408271520","html_url":"https://github.com/apache/druid/pull/6031#issuecomment-408271520","issue_url":"https://api.github.com/repos/apache/druid/issues/6031","id":408271520,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODI3MTUyMA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T00:05:00Z","updated_at":"2018-07-27T00:05:00Z","author_association":"CONTRIBUTOR","body":"@yurmix thanks! ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408271520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408287572","html_url":"https://github.com/apache/druid/pull/6045#issuecomment-408287572","issue_url":"https://api.github.com/repos/apache/druid/issues/6045","id":408287572,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODI4NzU3Mg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T01:54:39Z","updated_at":"2018-07-27T01:54:39Z","author_association":"CONTRIBUTOR","body":"I think it's fine to enable by default if it just takes one or two minutes since this kind of bugs is difficult to catch without various testing.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408287572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408288656","html_url":"https://github.com/apache/druid/pull/6045#issuecomment-408288656","issue_url":"https://api.github.com/repos/apache/druid/issues/6045","id":408288656,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODI4ODY1Ng==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T02:02:08Z","updated_at":"2018-07-27T02:02:08Z","author_association":"CONTRIBUTOR","body":"@clintropolis what do you think about adding `flush()` to `LongSerializer`?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408288656/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408357418","html_url":"https://github.com/apache/druid/pull/5789#issuecomment-408357418","issue_url":"https://api.github.com/repos/apache/druid/issues/5789","id":408357418,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODM1NzQxOA==","user":{"login":"andresgomezfrr","id":4025771,"node_id":"MDQ6VXNlcjQwMjU3NzE=","avatar_url":"https://avatars.githubusercontent.com/u/4025771?v=4","gravatar_id":"","url":"https://api.github.com/users/andresgomezfrr","html_url":"https://github.com/andresgomezfrr","followers_url":"https://api.github.com/users/andresgomezfrr/followers","following_url":"https://api.github.com/users/andresgomezfrr/following{/other_user}","gists_url":"https://api.github.com/users/andresgomezfrr/gists{/gist_id}","starred_url":"https://api.github.com/users/andresgomezfrr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andresgomezfrr/subscriptions","organizations_url":"https://api.github.com/users/andresgomezfrr/orgs","repos_url":"https://api.github.com/users/andresgomezfrr/repos","events_url":"https://api.github.com/users/andresgomezfrr/events{/privacy}","received_events_url":"https://api.github.com/users/andresgomezfrr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T08:58:03Z","updated_at":"2018-07-27T08:58:03Z","author_association":"CONTRIBUTOR","body":" * Code review changes\r\n* Add `filterNullValues` option: This allows to enable/disable discard null values at index time.\r\n* Sync with master and update header licenses\r\n\r\nRegards and thanks @jihoonson!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408357418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408388509","html_url":"https://github.com/apache/druid/pull/5958#issuecomment-408388509","issue_url":"https://api.github.com/repos/apache/druid/issues/5958","id":408388509,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODM4ODUwOQ==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T11:12:16Z","updated_at":"2018-07-27T11:12:16Z","author_association":"MEMBER","body":"\r\n> Aggrgator/BufferAggregator - Added a new method boolean isNull() which returns false by default. aggregators that support nullability can choose to override this and return true if the aggregated result is null.\r\nThis should be moved to #5278.\r\n\r\nRemoved it from this PR. \r\n\r\n> Changes to Druid build-in SQL layer\r\nNULL and empty strings are treated differently.\r\nI haven't checked through the whole patch, so am wondering this is true only for the SQL layer or the entire Druid query processing system.\r\n\r\nit applies to whole query processing. updated PR description to add a note. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408388509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408389965","html_url":"https://github.com/apache/druid/pull/5958#issuecomment-408389965","issue_url":"https://api.github.com/repos/apache/druid/issues/5958","id":408389965,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODM4OTk2NQ==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T11:19:42Z","updated_at":"2018-07-27T11:20:16Z","author_association":"MEMBER","body":"@jihoonson : For the pending work, I have labelled the issues with Area : Null Handling \r\nhttps://github.com/apache/incubator-druid/labels/Area%20-%20Null%20Handling\r\n\r\nHave updated the PR based on your comments, please check if i missed any comments. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408389965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408401924","html_url":"https://github.com/apache/druid/pull/4776#issuecomment-408401924","issue_url":"https://api.github.com/repos/apache/druid/issues/4776","id":408401924,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODQwMTkyNA==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T12:15:35Z","updated_at":"2018-07-27T12:15:35Z","author_association":"MEMBER","body":"closing and reopening for restarting travis. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408401924/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408433230","html_url":"https://github.com/apache/druid/pull/4776#issuecomment-408433230","issue_url":"https://api.github.com/repos/apache/druid/issues/4776","id":408433230,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODQzMzIzMA==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T14:21:13Z","updated_at":"2018-07-27T14:21:13Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408433230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408488846","html_url":"https://github.com/apache/druid/issues/6013#issuecomment-408488846","issue_url":"https://api.github.com/repos/apache/druid/issues/6013","id":408488846,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODQ4ODg0Ng==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T17:38:29Z","updated_at":"2018-07-27T17:38:29Z","author_association":"CONTRIBUTOR","body":"https://travis-ci.org/apache/incubator-druid/jobs/408919411\r\n\r\n```\r\nTests run: 24, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 33.252 sec <<< FAILURE! - in io.druid.indexing.overlord.TaskLifecycleTest\r\ntestResumeTasks[taskStorageType=HeapMemoryTaskStorage](io.druid.indexing.overlord.TaskLifecycleTest)  Time elapsed: 11.027 sec  <<< ERROR!\r\nio.druid.java.util.common.ISE: Where did the task go?!: index_foo_2018-07-27T14:33:34.588Z\r\n\tat io.druid.indexing.overlord.TaskLifecycleTest.testResumeTasks(TaskLifecycleTest.java:1176)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:127)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:26)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408488846/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408489751","html_url":"https://github.com/apache/druid/pull/6033#issuecomment-408489751","issue_url":"https://api.github.com/repos/apache/druid/issues/6033","id":408489751,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODQ4OTc1MQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T17:41:49Z","updated_at":"2018-07-27T17:41:49Z","author_association":"CONTRIBUTOR","body":"This is a regression bug and should be included in 0.12.2.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408489751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408489987","html_url":"https://github.com/apache/druid/pull/6033#issuecomment-408489987","issue_url":"https://api.github.com/repos/apache/druid/issues/6033","id":408489987,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODQ4OTk4Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T17:42:51Z","updated_at":"2018-07-27T17:42:51Z","author_association":"CONTRIBUTOR","body":"NVM. It's already tagged.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408489987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408511472","html_url":"https://github.com/apache/druid/pull/6036#issuecomment-408511472","issue_url":"https://api.github.com/repos/apache/druid/issues/6036","id":408511472,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODUxMTQ3Mg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T19:04:25Z","updated_at":"2018-07-27T19:04:25Z","author_association":"CONTRIBUTOR","body":"Thanks @gianm. Now I can understand better what @gaodayue' use case is. I'm fine with this approach if we can make it as a contrib extension.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408511472/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408527671","html_url":"https://github.com/apache/druid/pull/6045#issuecomment-408527671","issue_url":"https://api.github.com/repos/apache/druid/issues/6045","id":408527671,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODUyNzY3MQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T20:16:10Z","updated_at":"2018-07-27T20:16:10Z","author_association":"MEMBER","body":"@jihoonson I considered that but it seemed more invasive of a change and I'm trying to deprecate this code path anyway.. \r\n\r\nThat said, it is strange that `close` is called multiple times, so I'll just go ahead and refactor.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408527671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408531016","html_url":"https://github.com/apache/druid/pull/6058#issuecomment-408531016","issue_url":"https://api.github.com/repos/apache/druid/issues/6058","id":408531016,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODUzMTAxNg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T20:31:34Z","updated_at":"2018-07-27T20:31:34Z","author_association":"CONTRIBUTOR","body":"The error looks like the travis cache got corrupted? I cleared it and tried the job again.\r\n\r\n```[INFO] Changes detected - recompiling the module!\r\n[INFO] Compiling 191 source files to /home/travis/build/apache/incubator-druid/java-util/target/classes\r\nerror: error reading /home/travis/.m2/repository/io/netty/netty-transport/4.0.52.Final/netty-transport-4.0.52.Final.jar; error in opening zip file\r\nAn exception has occurred in the compiler (9-internal). Please file a bug against the Java compiler via the Java bug reporting page (http://bugreport.java.com) after checking the Bug Database (http://bugs.java.com) for duplicates. Include your program and the following diagnostic in your report. Thank you.\r\njava.util.zip.ZipError: zip END header not found\r\n\tat com.sun.nio.zipfs.ZipFileSystem.zerror(ZipFileSystem.java:1605)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408531016/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408531646","html_url":"https://github.com/apache/druid/issues/6013#issuecomment-408531646","issue_url":"https://api.github.com/repos/apache/druid/issues/6013","id":408531646,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODUzMTY0Ng==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T20:34:22Z","updated_at":"2018-07-27T20:34:22Z","author_association":"CONTRIBUTOR","body":"```\r\nTests run: 5, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 0.046 sec <<< FAILURE! - in io.druid.java.util.emitter.core.HttpEmitterConfigTest\r\ntestDefaultsLegacy(io.druid.java.util.emitter.core.HttpEmitterConfigTest)  Time elapsed: 0.006 sec  <<< FAILURE!\r\njava.lang.AssertionError: expected:<14> but was:<13>\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:743)\r\n\tat org.junit.Assert.assertEquals(Assert.java:118)\r\n\tat org.junit.Assert.assertEquals(Assert.java:555)\r\n\tat org.junit.Assert.assertEquals(Assert.java:542)\r\n\tat io.druid.java.util.emitter.core.HttpEmitterConfigTest.testDefaultsLegacy(HttpEmitterConfigTest.java:76)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\r\ntestDefaults(io.druid.java.util.emitter.core.HttpEmitterConfigTest)  Time elapsed: 0.003 sec  <<< FAILURE!\r\njava.lang.AssertionError: expected:<14> but was:<13>\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:743)\r\n\tat org.junit.Assert.assertEquals(Assert.java:118)\r\n\tat org.junit.Assert.assertEquals(Assert.java:555)\r\n\tat org.junit.Assert.assertEquals(Assert.java:542)\r\n\tat io.druid.java.util.emitter.core.HttpEmitterConfigTest.testDefaults(HttpEmitterConfigTest.java:52)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408531646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408532739","html_url":"https://github.com/apache/druid/issues/6057#issuecomment-408532739","issue_url":"https://api.github.com/repos/apache/druid/issues/6057","id":408532739,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODUzMjczOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T20:39:22Z","updated_at":"2018-07-27T20:39:22Z","author_association":"CONTRIBUTOR","body":"It doesn't seem ideal or intentional to issue them sequentially like that. IMO, it would be better to issue the queries simultaneously.\r\n\r\nMy rationale for saying that is that, the way I think about union dataSources, they're meant to treat two dataSources if they were one. If they were one then the query would be fully parallelized, so full parallelization makes sense.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408532739/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408535222","html_url":"https://github.com/apache/druid/pull/6045#issuecomment-408535222","issue_url":"https://api.github.com/repos/apache/druid/issues/6045","id":408535222,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODUzNTIyMg==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T20:50:25Z","updated_at":"2018-07-27T20:52:39Z","author_association":"MEMBER","body":"@jihoonson What if I just rename `LongSerializer.close` to `LongSerializer.flush` and if it is tied to an output stream it can only be flushed once, leaving the code structurally as is?\r\n\r\nI think alternative involves adding a `close` method to `LongEncodingWriter` and a `flush` method to `LongSerializer` and changing the hooks into `LongEncodingWriter` from `EntireLayoutColumnarLongs` to call `close` instead of `flush`","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408535222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408537729","html_url":"https://github.com/apache/druid/pull/6061#issuecomment-408537729","issue_url":"https://api.github.com/repos/apache/druid/issues/6061","id":408537729,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODUzNzcyOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T21:01:17Z","updated_at":"2018-07-27T21:01:17Z","author_association":"CONTRIBUTOR","body":"I think `examples` includes code (and we ship it in the distro) so that should still have Travis run on it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408537729/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408538927","html_url":"https://github.com/apache/druid/pull/5958#issuecomment-408538927","issue_url":"https://api.github.com/repos/apache/druid/issues/5958","id":408538927,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODUzODkyNw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T21:07:10Z","updated_at":"2018-07-27T21:07:10Z","author_association":"CONTRIBUTOR","body":"Thanks @nishantmonu51. Would you please check this comment: https://github.com/apache/incubator-druid/pull/5958#discussion_r204937099?\r\n\r\nAlso, I'm not sure what have done in https://github.com/apache/incubator-druid/pull/5278 + this PR and not. I think at least `Comparisons between null and non-null values will follow three-valued logic and the result of a comparison involving NULL is not a boolean value – it is a null value.` is not done yet? Would you please clarify what are remaining in https://github.com/apache/incubator-druid/issues/4349?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408538927/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408542314","html_url":"https://github.com/apache/druid/pull/6061#issuecomment-408542314","issue_url":"https://api.github.com/repos/apache/druid/issues/6061","id":408542314,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU0MjMxNA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T21:24:07Z","updated_at":"2018-07-27T21:24:46Z","author_association":"MEMBER","body":"Ah so it, does. I suppose I could ignore some of it's subfolders, maybe `examples/bin, examples/conf, examples/conf-quickstart, examples/quickstart`?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408542314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408543167","html_url":"https://github.com/apache/druid/pull/5789#issuecomment-408543167","issue_url":"https://api.github.com/repos/apache/druid/issues/5789","id":408543167,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU0MzE2Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T21:28:26Z","updated_at":"2018-07-27T21:28:26Z","author_association":"CONTRIBUTOR","body":"@andresgomezfrr thanks. Please check these new comments.\r\n\r\n- https://github.com/apache/incubator-druid/pull/5789#discussion_r205263503: please fix `StringFirstAggregatorFactory.VALUE_COMPARATOR`.\r\n- https://github.com/apache/incubator-druid/pull/5789#discussion_r205900679\r\n- https://github.com/apache/incubator-druid/pull/5789#discussion_r205902840","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408543167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408543351","html_url":"https://github.com/apache/druid/pull/6059#issuecomment-408543351","issue_url":"https://api.github.com/repos/apache/druid/issues/6059","id":408543351,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU0MzM1MQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T21:29:14Z","updated_at":"2018-07-27T21:29:14Z","author_association":"CONTRIBUTOR","body":"Please check the Travis failure.\r\n\r\n```\r\n[ERROR] Forbidden method invocation: org.joda.time.Interval#<init>(java.lang.Object) [Uses default time zone, use factory methods from DateTimes and Intervals classes instead]\r\n[ERROR]   in io.druid.indexing.common.task.CompactionTaskTest (CompactionTaskTest.java:462)\r\n[ERROR] Scanned 243 (and 776 related) class file(s) for forbidden API invocations (in 1.84s), 1 error(s).\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408543351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408543471","html_url":"https://github.com/apache/druid/pull/6058#issuecomment-408543471","issue_url":"https://api.github.com/repos/apache/druid/issues/6058","id":408543471,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU0MzQ3MQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T21:29:49Z","updated_at":"2018-07-27T21:29:49Z","author_association":"CONTRIBUTOR","body":"Please check this:\r\n\r\n```\r\n[ERROR] /home/travis/build/apache/incubator-druid/common/src/main/java/io/druid/metadata/MetadataStorageActionHandler.java:24:8: Unused import - io.druid.java.util.common.Pair. [UnusedImports]\r\nAudit done.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408543471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408543647","html_url":"https://github.com/apache/druid/pull/6045#issuecomment-408543647","issue_url":"https://api.github.com/repos/apache/druid/issues/6045","id":408543647,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU0MzY0Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T21:30:45Z","updated_at":"2018-07-27T21:30:45Z","author_association":"CONTRIBUTOR","body":"@clintropolis I'm fine with it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408543647/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408545206","html_url":"https://github.com/apache/druid/pull/5980#issuecomment-408545206","issue_url":"https://api.github.com/repos/apache/druid/issues/5980","id":408545206,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU0NTIwNg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T21:38:50Z","updated_at":"2018-07-27T21:38:50Z","author_association":"CONTRIBUTOR","body":"Thanks @asdf2014! The latest change looks good to me.\r\n\r\nOne side comment: usually, you can expect your PR can be reviewed faster as your PR contains less changes because it's much easier to review. It would be great if you can split your PRs if possible in the future. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408545206/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408545414","html_url":"https://github.com/apache/druid/pull/5734#issuecomment-408545414","issue_url":"https://api.github.com/repos/apache/druid/issues/5734","id":408545414,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU0NTQxNA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T21:39:54Z","updated_at":"2018-07-27T21:39:54Z","author_association":"CONTRIBUTOR","body":"The travis link is not available now. I'm closing and reopening to trigger travis build.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408545414/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408548193","html_url":"https://github.com/apache/druid/pull/6058#issuecomment-408548193","issue_url":"https://api.github.com/repos/apache/druid/issues/6058","id":408548193,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU0ODE5Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T21:55:14Z","updated_at":"2018-07-27T21:55:14Z","author_association":"CONTRIBUTOR","body":"I removed that and re-pushed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408548193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408548332","html_url":"https://github.com/apache/druid/pull/6059#issuecomment-408548332","issue_url":"https://api.github.com/repos/apache/druid/issues/6059","id":408548332,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU0ODMzMg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T21:56:07Z","updated_at":"2018-07-27T21:56:07Z","author_association":"CONTRIBUTOR","body":"I switched to `Intervals.of`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408548332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408550366","html_url":"https://github.com/apache/druid/pull/5699#issuecomment-408550366","issue_url":"https://api.github.com/repos/apache/druid/issues/5699","id":408550366,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU1MDM2Ng==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T22:06:00Z","updated_at":"2018-07-27T22:06:00Z","author_association":"CONTRIBUTOR","body":"@kskalski sorry for the delayed review. I'm closing and reopening this PR to trigger Travis build. The link is not available now.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408550366/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408553979","html_url":"https://github.com/apache/druid/pull/6027#issuecomment-408553979","issue_url":"https://api.github.com/repos/apache/druid/issues/6027","id":408553979,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU1Mzk3OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T22:26:35Z","updated_at":"2018-07-27T22:26:35Z","author_association":"CONTRIBUTOR","body":"@leventov I don't understand why kryo uses the map returned from `ObjectFlatteners`. Are you using something like `KyroInputRowParser` for Druid?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408553979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408556427","html_url":"https://github.com/apache/druid/pull/6027#issuecomment-408556427","issue_url":"https://api.github.com/repos/apache/druid/issues/6027","id":408556427,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU1NjQyNw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T22:41:30Z","updated_at":"2018-07-27T22:41:30Z","author_association":"MEMBER","body":"It looks like a bug in Kryo. At least in newer Kryo versions, the code of MapSerializer is completely different from what I referenced to and it would not lead to this error.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408556427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408558963","html_url":"https://github.com/apache/druid/pull/6027#issuecomment-408558963","issue_url":"https://api.github.com/repos/apache/druid/issues/6027","id":408558963,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU1ODk2Mw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T22:59:10Z","updated_at":"2018-07-27T22:59:10Z","author_association":"CONTRIBUTOR","body":"Does it mean that this error won't happen if spark updates its kryo version? And do we need this PR even in that case?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408558963/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408565906","html_url":"https://github.com/apache/druid/pull/6027#issuecomment-408565906","issue_url":"https://api.github.com/repos/apache/druid/issues/6027","id":408565906,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU2NTkwNg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-27T23:57:41Z","updated_at":"2018-07-27T23:57:41Z","author_association":"MEMBER","body":"If Spark updates Kryo (BTW I cannot even find on what version it depends), and Spark cluster users update Spark, this change is not needed. But this is not a practical path IMO.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408565906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408567669","html_url":"https://github.com/apache/druid/issues/5566#issuecomment-408567669","issue_url":"https://api.github.com/repos/apache/druid/issues/5566","id":408567669,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU2NzY2OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-28T00:14:14Z","updated_at":"2018-07-28T00:14:14Z","author_association":"CONTRIBUTOR","body":"Hi all,\r\n\r\n`DoubleFirstAggregator` returns `SerializedPair`s  which is the intermediate format to merging doubleFirst values from multiple historicals. So, to compute some aggregations like `sum` over `doubleFirst`, you first need to _finalize_ the intermediate result to be the final format which contains only the double value. You can use `expression` postAggregator to do this. Here is an example.\r\n\r\n```json\r\n{\r\n  \"queryType\": \"groupBy\",\r\n  \"dataSource\": {\r\n    \"type\": \"query\",\r\n    \"query\": {\r\n      \"queryType\": \"groupBy\",\r\n      \"dataSource\": \"twitter\",\r\n      \"aggregations\": [\r\n        {\r\n          \"type\": \"doubleFirst\",\r\n          \"name\": \"tweets\",\r\n          \"fieldName\": \"tweets\"\r\n        }\r\n      ],\r\n      \"postAggregations\": [\r\n        { \"type\" : \"expression\", \"name\": \"tweets_first\", \"expression\" : \"tweets\" }\r\n      ],\r\n      \"dimensions\": [\r\n        \"lang\"\r\n      ],\r\n      \"intervals\": \"2018-07-27/2018-07-28\",\r\n      \"granularity\": \"hour\"\r\n    }\r\n  },\r\n  \"intervals\": \"2018-07-27/2018-07-28\",\r\n  \"granularity\": \"hour\",\r\n  \"aggregations\": [\r\n    {\r\n      \"type\": \"doubleSum\",\r\n      \"name\": \"value_num\",\r\n      \"fieldName\": \"tweets_first\"\r\n    }\r\n  ],\r\n  \"dimensions\": []\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408567669/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408567818","html_url":"https://github.com/apache/druid/pull/5699#issuecomment-408567818","issue_url":"https://api.github.com/repos/apache/druid/issues/5699","id":408567818,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU2NzgxOA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-28T00:15:57Z","updated_at":"2018-07-28T00:15:57Z","author_association":"CONTRIBUTOR","body":"Hi @kskalski, please check my comment here: https://github.com/apache/incubator-druid/issues/5566#issuecomment-408567669. I think this is not a bug, but we need a better doc for this.\r\n\r\nI'm closing this PR shortly.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408567818/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408575833","html_url":"https://github.com/apache/druid/issues/6063#issuecomment-408575833","issue_url":"https://api.github.com/repos/apache/druid/issues/6063","id":408575833,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU3NTgzMw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-28T02:11:58Z","updated_at":"2018-07-28T02:11:58Z","author_association":"CONTRIBUTOR","body":"FinalizingFieldAccessPostAggregator is documented, so I think we should fix it. I'll do a patch.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408575833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408593384","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-408593384","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":408593384,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODU5MzM4NA==","user":{"login":"josephglanville","id":605591,"node_id":"MDQ6VXNlcjYwNTU5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/605591?v=4","gravatar_id":"","url":"https://api.github.com/users/josephglanville","html_url":"https://github.com/josephglanville","followers_url":"https://api.github.com/users/josephglanville/followers","following_url":"https://api.github.com/users/josephglanville/following{/other_user}","gists_url":"https://api.github.com/users/josephglanville/gists{/gist_id}","starred_url":"https://api.github.com/users/josephglanville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josephglanville/subscriptions","organizations_url":"https://api.github.com/users/josephglanville/orgs","repos_url":"https://api.github.com/users/josephglanville/repos","events_url":"https://api.github.com/users/josephglanville/events{/privacy}","received_events_url":"https://api.github.com/users/josephglanville/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-28T08:53:58Z","updated_at":"2018-07-28T08:53:58Z","author_association":"CONTRIBUTOR","body":"This is especially useful in cases where no metrics are specified and all rows are dimensions only as leaving roll-up enabled in those cases emits a warning.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408593384/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408612801","html_url":"https://github.com/apache/druid/issues/5584#issuecomment-408612801","issue_url":"https://api.github.com/repos/apache/druid/issues/5584","id":408612801,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODYxMjgwMQ==","user":{"login":"josephglanville","id":605591,"node_id":"MDQ6VXNlcjYwNTU5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/605591?v=4","gravatar_id":"","url":"https://api.github.com/users/josephglanville","html_url":"https://github.com/josephglanville","followers_url":"https://api.github.com/users/josephglanville/followers","following_url":"https://api.github.com/users/josephglanville/following{/other_user}","gists_url":"https://api.github.com/users/josephglanville/gists{/gist_id}","starred_url":"https://api.github.com/users/josephglanville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josephglanville/subscriptions","organizations_url":"https://api.github.com/users/josephglanville/orgs","repos_url":"https://api.github.com/users/josephglanville/repos","events_url":"https://api.github.com/users/josephglanville/events{/privacy}","received_events_url":"https://api.github.com/users/josephglanville/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-28T14:48:21Z","updated_at":"2018-07-28T14:50:20Z","author_association":"CONTRIBUTOR","body":"@jihoonson we actually make use of parse batch support also.\r\n\r\nThat said `InputRowParser` should still operate on a single iteration unit IMO.\r\n\r\nA `Reader` interface that returns an iterator seems like the right choice.\r\nIt should also remove some weirdness I remember seeing around resetting parsers on starting a new file as you could move that reset to the `Reader`.\r\n\r\nI don't see a reason to not also support `Reader` at realtime ingestion too, a `ReaderInputRowParser` that wraps an inner `InputRowParser` would be an awesome and flexible way to support entire files being pushed down streaming pipelines. Though perhaps integrating it at the level below that makes more sense so that the batch size isn't the entire file.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408612801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408733824","html_url":"https://github.com/apache/druid/pull/5980#issuecomment-408733824","issue_url":"https://api.github.com/repos/apache/druid/issues/5980","id":408733824,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODczMzgyNA==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T03:03:54Z","updated_at":"2018-07-30T03:03:54Z","author_association":"MEMBER","body":"@jihoonson Thanks for your suggestion about the `PR` stuff. This is very helpful for me. I will notice it. :+1:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408733824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408742544","html_url":"https://github.com/apache/druid/pull/6058#issuecomment-408742544","issue_url":"https://api.github.com/repos/apache/druid/issues/6058","id":408742544,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODc0MjU0NA==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T04:20:46Z","updated_at":"2018-07-30T04:20:46Z","author_association":"MEMBER","body":"Hi, @gianm . There are still unused `import` clauses. IMO, we should add the `--fail-at-end` option into the maven command for the `strictly compiled' part, and then we can get all these error messages at once, including checkstyle, compile, testcases, etc.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408742544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408742860","html_url":"https://github.com/apache/druid/pull/6058#issuecomment-408742860","issue_url":"https://api.github.com/repos/apache/druid/issues/6058","id":408742860,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODc0Mjg2MA==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T04:23:30Z","updated_at":"2018-07-30T04:23:30Z","author_association":"MEMBER","body":"@gianm If you think this is necessary, I will create a PR for it. :smile:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408742860/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408778293","html_url":"https://github.com/apache/druid/pull/5789#issuecomment-408778293","issue_url":"https://api.github.com/repos/apache/druid/issues/5789","id":408778293,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODc3ODI5Mw==","user":{"login":"andresgomezfrr","id":4025771,"node_id":"MDQ6VXNlcjQwMjU3NzE=","avatar_url":"https://avatars.githubusercontent.com/u/4025771?v=4","gravatar_id":"","url":"https://api.github.com/users/andresgomezfrr","html_url":"https://github.com/andresgomezfrr","followers_url":"https://api.github.com/users/andresgomezfrr/followers","following_url":"https://api.github.com/users/andresgomezfrr/following{/other_user}","gists_url":"https://api.github.com/users/andresgomezfrr/gists{/gist_id}","starred_url":"https://api.github.com/users/andresgomezfrr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andresgomezfrr/subscriptions","organizations_url":"https://api.github.com/users/andresgomezfrr/orgs","repos_url":"https://api.github.com/users/andresgomezfrr/repos","events_url":"https://api.github.com/users/andresgomezfrr/events{/privacy}","received_events_url":"https://api.github.com/users/andresgomezfrr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T07:53:54Z","updated_at":"2018-07-30T07:53:54Z","author_association":"CONTRIBUTOR","body":"@jihoonson \r\n\r\nFixed:\r\n\r\n* https://github.com/apache/incubator-druid/pull/5789#discussion_r205263503\r\n* https://github.com/apache/incubator-druid/pull/5789#discussion_r205900679\r\n\r\nCommented:\r\n\r\n* https://github.com/apache/incubator-druid/pull/5789#discussion_r205902840\r\n\r\nThanks for your review!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408778293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408800788","html_url":"https://github.com/apache/druid/pull/6036#issuecomment-408800788","issue_url":"https://api.github.com/repos/apache/druid/issues/6036","id":408800788,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODgwMDc4OA==","user":{"login":"gaodayue","id":1198446,"node_id":"MDQ6VXNlcjExOTg0NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1198446?v=4","gravatar_id":"","url":"https://api.github.com/users/gaodayue","html_url":"https://github.com/gaodayue","followers_url":"https://api.github.com/users/gaodayue/followers","following_url":"https://api.github.com/users/gaodayue/following{/other_user}","gists_url":"https://api.github.com/users/gaodayue/gists{/gist_id}","starred_url":"https://api.github.com/users/gaodayue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaodayue/subscriptions","organizations_url":"https://api.github.com/users/gaodayue/orgs","repos_url":"https://api.github.com/users/gaodayue/repos","events_url":"https://api.github.com/users/gaodayue/events{/privacy}","received_events_url":"https://api.github.com/users/gaodayue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T09:19:03Z","updated_at":"2018-07-30T09:19:03Z","author_association":"CONTRIBUTOR","body":"> So this backup deep storage technique would improve availability for writes (because you can write to either deep storage) but would worsen availability for reads (because you must read from the one that has your segment, and that means you will have reading downtime if any one of your deep storages is down). I can see that this makes sense for use cases where you want to maximize the ability of realtime tasks to write new data, and are ok with potentially worse ability for historicals to download segments.\r\n\r\nThanks @gianm for clarifying my use case. This is exactly what I want to achieve.\r\n\r\n> IMO this is the best approach, since it's composable, rather than a tight link between the HDFS and S3 implementations. It could also be done as a contrib extension that doesn't touch the HDFS or S3 implementations, which I think is preferable for more niche functionality like this. It means less surface area to test in the main codebase, which is a good thing. @gaodayue, what sort of difficulty did you have when you tried to implement this? Maybe it it something we can solve?\r\n\r\nAgreed. Earlier I tried to load primary and secondary deep storage extensions inside composite-deep-storage module and found it difficult. But now I think maybe we can just let users config druid to load three extensions (primary + second + composite deep storage) if they want to use this feature. Then it would be straightforward to implement composite-deep-storage.\r\n\r\nI will try to work on it and open a new PR for it.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408800788/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408802762","html_url":"https://github.com/apache/druid/pull/6036#issuecomment-408802762","issue_url":"https://api.github.com/repos/apache/druid/issues/6036","id":408802762,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODgwMjc2Mg==","user":{"login":"gaodayue","id":1198446,"node_id":"MDQ6VXNlcjExOTg0NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1198446?v=4","gravatar_id":"","url":"https://api.github.com/users/gaodayue","html_url":"https://github.com/gaodayue","followers_url":"https://api.github.com/users/gaodayue/followers","following_url":"https://api.github.com/users/gaodayue/following{/other_user}","gists_url":"https://api.github.com/users/gaodayue/gists{/gist_id}","starred_url":"https://api.github.com/users/gaodayue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaodayue/subscriptions","organizations_url":"https://api.github.com/users/gaodayue/orgs","repos_url":"https://api.github.com/users/gaodayue/repos","events_url":"https://api.github.com/users/gaodayue/events{/privacy}","received_events_url":"https://api.github.com/users/gaodayue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T09:25:37Z","updated_at":"2018-07-30T09:25:37Z","author_association":"CONTRIBUTOR","body":"Btw, not sure whether composite-deep-storage is the right name or not, since it's not writing to all components as composite-emitter.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408802762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408899333","html_url":"https://github.com/apache/druid/pull/6036#issuecomment-408899333","issue_url":"https://api.github.com/repos/apache/druid/issues/6036","id":408899333,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODg5OTMzMw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T15:14:09Z","updated_at":"2018-07-30T15:14:09Z","author_association":"CONTRIBUTOR","body":">Agreed. Earlier I tried to load primary and secondary deep storage extensions inside composite-deep-storage module and found it difficult. But now I think maybe we can just let users config druid to load three extensions (primary + second + composite deep storage) if they want to use this feature. Then it would be straightforward to implement composite-deep-storage.\r\n\r\nThat sounds great. It's sort of like how the composing emitter works: you need to load all emitter extensions that you want to compose.\r\n\r\n>Btw, not sure whether composite-deep-storage is the right name or not, since it's not writing to all components as composite-emitter.\r\n\r\nMaybe `chained-deep-storage` would be a good name for the extension.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408899333/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408899571","html_url":"https://github.com/apache/druid/pull/6058#issuecomment-408899571","issue_url":"https://api.github.com/repos/apache/druid/issues/6058","id":408899571,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODg5OTU3MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T15:14:52Z","updated_at":"2018-07-30T15:14:52Z","author_association":"CONTRIBUTOR","body":"@asdf2014 I will fix them and re-push.\r\n\r\nAnything that makes the CI failure message more useful sounds great 😄 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408899571/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408912020","html_url":"https://github.com/apache/druid/issues/6069#issuecomment-408912020","issue_url":"https://api.github.com/repos/apache/druid/issues/6069","id":408912020,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODkxMjAyMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T15:49:30Z","updated_at":"2018-07-30T15:49:30Z","author_association":"CONTRIBUTOR","body":"Hi @varaga,\r\n\r\nThe MiddleManager processes themselves are meant to clean up these directories when tasks exit. Are the MiddleManagers (or the machine itself) crashing before the cleanup can happen?\r\n\r\nAlso, I _think_ they do not clean up 'stale' directories for unused tasks on startup. This would be a nice feature to add. Something like: remove all task working directories for tasks that are _not_ restored (i.e. in restore.json) Are you interested in contributing a patch for that?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408912020/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408925522","html_url":"https://github.com/apache/druid/pull/6070#issuecomment-408925522","issue_url":"https://api.github.com/repos/apache/druid/issues/6070","id":408925522,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODkyNTUyMg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T16:28:36Z","updated_at":"2018-07-30T16:28:53Z","author_association":"CONTRIBUTOR","body":"Hi @yuppie-flu, there seems to be some problem with the new forbidden-api check:\r\n\r\n```\r\n[ERROR] Failed to execute goal de.thetaphi:forbiddenapis:2.3:check (validate) on project java-util: Parsing signatures failed: Class 'org.apache.commons.io.FileUtils' not found on classpath while parsing signature: org.apache.commons.io.FileUtils#getTempDirectory() -> [Help 1]\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408925522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408942682","html_url":"https://github.com/apache/druid/issues/5903#issuecomment-408942682","issue_url":"https://api.github.com/repos/apache/druid/issues/5903","id":408942682,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODk0MjY4Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T17:21:25Z","updated_at":"2018-07-30T17:21:25Z","author_association":"CONTRIBUTOR","body":"Fixed by #5785.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408942682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408943015","html_url":"https://github.com/apache/druid/pull/6072#issuecomment-408943015","issue_url":"https://api.github.com/repos/apache/druid/issues/6072","id":408943015,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODk0MzAxNQ==","user":{"login":"chengchengpei","id":5881383,"node_id":"MDQ6VXNlcjU4ODEzODM=","avatar_url":"https://avatars.githubusercontent.com/u/5881383?v=4","gravatar_id":"","url":"https://api.github.com/users/chengchengpei","html_url":"https://github.com/chengchengpei","followers_url":"https://api.github.com/users/chengchengpei/followers","following_url":"https://api.github.com/users/chengchengpei/following{/other_user}","gists_url":"https://api.github.com/users/chengchengpei/gists{/gist_id}","starred_url":"https://api.github.com/users/chengchengpei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengchengpei/subscriptions","organizations_url":"https://api.github.com/users/chengchengpei/orgs","repos_url":"https://api.github.com/users/chengchengpei/repos","events_url":"https://api.github.com/users/chengchengpei/events{/privacy}","received_events_url":"https://api.github.com/users/chengchengpei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T17:22:22Z","updated_at":"2018-07-30T17:22:22Z","author_association":"CONTRIBUTOR","body":"how to add WIP tag?\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408943015/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408965777","html_url":"https://github.com/apache/druid/pull/6070#issuecomment-408965777","issue_url":"https://api.github.com/repos/apache/druid/issues/6070","id":408965777,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODk2NTc3Nw==","user":{"login":"yuppie-flu","id":6185911,"node_id":"MDQ6VXNlcjYxODU5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6185911?v=4","gravatar_id":"","url":"https://api.github.com/users/yuppie-flu","html_url":"https://github.com/yuppie-flu","followers_url":"https://api.github.com/users/yuppie-flu/followers","following_url":"https://api.github.com/users/yuppie-flu/following{/other_user}","gists_url":"https://api.github.com/users/yuppie-flu/gists{/gist_id}","starred_url":"https://api.github.com/users/yuppie-flu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yuppie-flu/subscriptions","organizations_url":"https://api.github.com/users/yuppie-flu/orgs","repos_url":"https://api.github.com/users/yuppie-flu/repos","events_url":"https://api.github.com/users/yuppie-flu/events{/privacy}","received_events_url":"https://api.github.com/users/yuppie-flu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T18:34:41Z","updated_at":"2018-07-30T18:34:41Z","author_association":"CONTRIBUTOR","body":"Thank you @gianm \r\nI had to remove this check, cause there are some modules, which do not depend on apache commons-io. `forbiddenapis` maven plugin is configured only once in parent pom.xml.\r\nIf we really need to forbid this, the simplest solution would be overriding [failOnMissingClasses](https://jenkins.thetaphi.de/job/Forbidden-APIs/javadoc/check-mojo.html#failOnMissingClasses) property I guess.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408965777/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408966069","html_url":"https://github.com/apache/druid/pull/6072#issuecomment-408966069","issue_url":"https://api.github.com/repos/apache/druid/issues/6072","id":408966069,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODk2NjA2OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T18:35:39Z","updated_at":"2018-07-30T18:35:39Z","author_association":"CONTRIBUTOR","body":"Hi @chengchengpei, thank you for the contribution! I've added `WIP` tag.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408966069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408974324","html_url":"https://github.com/apache/druid/pull/6072#issuecomment-408974324","issue_url":"https://api.github.com/repos/apache/druid/issues/6072","id":408974324,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODk3NDMyNA==","user":{"login":"chengchengpei","id":5881383,"node_id":"MDQ6VXNlcjU4ODEzODM=","avatar_url":"https://avatars.githubusercontent.com/u/5881383?v=4","gravatar_id":"","url":"https://api.github.com/users/chengchengpei","html_url":"https://github.com/chengchengpei","followers_url":"https://api.github.com/users/chengchengpei/followers","following_url":"https://api.github.com/users/chengchengpei/following{/other_user}","gists_url":"https://api.github.com/users/chengchengpei/gists{/gist_id}","starred_url":"https://api.github.com/users/chengchengpei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengchengpei/subscriptions","organizations_url":"https://api.github.com/users/chengchengpei/orgs","repos_url":"https://api.github.com/users/chengchengpei/repos","events_url":"https://api.github.com/users/chengchengpei/events{/privacy}","received_events_url":"https://api.github.com/users/chengchengpei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T19:01:21Z","updated_at":"2018-07-30T19:01:21Z","author_association":"CONTRIBUTOR","body":"@jihoonson Hi, Thanks. It seems that the failed tests are not related to my change. most of them failed because of timeout. Is there any way to trigger another test?\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408974324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408976290","html_url":"https://github.com/apache/druid/pull/6061#issuecomment-408976290","issue_url":"https://api.github.com/repos/apache/druid/issues/6061","id":408976290,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODk3NjI5MA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T19:08:30Z","updated_at":"2018-07-30T19:08:30Z","author_association":"CONTRIBUTOR","body":"@clintropolis it sounds good.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408976290/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408980333","html_url":"https://github.com/apache/druid/pull/6072#issuecomment-408980333","issue_url":"https://api.github.com/repos/apache/druid/issues/6072","id":408980333,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODk4MDMzMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T19:22:46Z","updated_at":"2018-07-30T19:22:46Z","author_association":"CONTRIBUTOR","body":"@chengchengpei I restarted failed jobs. You can also close and reopen this PR to trigger another test.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408980333/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/408986589","html_url":"https://github.com/apache/druid/issues/6013#issuecomment-408986589","issue_url":"https://api.github.com/repos/apache/druid/issues/6013","id":408986589,"node_id":"MDEyOklzc3VlQ29tbWVudDQwODk4NjU4OQ==","user":{"login":"yuppie-flu","id":6185911,"node_id":"MDQ6VXNlcjYxODU5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6185911?v=4","gravatar_id":"","url":"https://api.github.com/users/yuppie-flu","html_url":"https://github.com/yuppie-flu","followers_url":"https://api.github.com/users/yuppie-flu/followers","following_url":"https://api.github.com/users/yuppie-flu/following{/other_user}","gists_url":"https://api.github.com/users/yuppie-flu/gists{/gist_id}","starred_url":"https://api.github.com/users/yuppie-flu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yuppie-flu/subscriptions","organizations_url":"https://api.github.com/users/yuppie-flu/orgs","repos_url":"https://api.github.com/users/yuppie-flu/repos","events_url":"https://api.github.com/users/yuppie-flu/events{/privacy}","received_events_url":"https://api.github.com/users/yuppie-flu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T19:45:39Z","updated_at":"2018-07-30T19:45:39Z","author_association":"CONTRIBUTOR","body":"```\r\nTests run: 12, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 21.763 sec <<< FAILURE! - in io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactoryTest\r\ntestReconnectWithCacheAndPrefetch(io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactoryTest)  Time elapsed: 8.029 sec  <<< ERROR!\r\njava.lang.RuntimeException: java.util.concurrent.TimeoutException\r\n\tat io.druid.data.input.impl.prefetch.Fetcher.openObjectFromLocal(Fetcher.java:215)\r\n\tat io.druid.data.input.impl.prefetch.Fetcher.next(Fetcher.java:171)\r\n\tat io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory$2.next(PrefetchableTextFilesFirehoseFactory.java:223)\r\n\tat io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactory$2.next(PrefetchableTextFilesFirehoseFactory.java:209)\r\n\tat io.druid.data.input.impl.FileIteratingFirehose.getNextLineIterator(FileIteratingFirehose.java:90)\r\n\tat io.druid.data.input.impl.FileIteratingFirehose.hasMore(FileIteratingFirehose.java:67)\r\n\tat io.druid.data.input.impl.prefetch.PrefetchableTextFilesFirehoseFactoryTest.testReconnectWithCacheAndPrefetch(PrefetchableTextFilesFirehoseFactoryTest.java:367)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\r\nCaused by: java.util.concurrent.TimeoutException\r\n\t... 35 more\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/408986589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409003017","html_url":"https://github.com/apache/druid/pull/6075#issuecomment-409003017","issue_url":"https://api.github.com/repos/apache/druid/issues/6075","id":409003017,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTAwMzAxNw==","user":{"login":"chengchengpei","id":5881383,"node_id":"MDQ6VXNlcjU4ODEzODM=","avatar_url":"https://avatars.githubusercontent.com/u/5881383?v=4","gravatar_id":"","url":"https://api.github.com/users/chengchengpei","html_url":"https://github.com/chengchengpei","followers_url":"https://api.github.com/users/chengchengpei/followers","following_url":"https://api.github.com/users/chengchengpei/following{/other_user}","gists_url":"https://api.github.com/users/chengchengpei/gists{/gist_id}","starred_url":"https://api.github.com/users/chengchengpei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengchengpei/subscriptions","organizations_url":"https://api.github.com/users/chengchengpei/orgs","repos_url":"https://api.github.com/users/chengchengpei/repos","events_url":"https://api.github.com/users/chengchengpei/events{/privacy}","received_events_url":"https://api.github.com/users/chengchengpei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T20:41:51Z","updated_at":"2018-07-30T20:41:51Z","author_association":"CONTRIBUTOR","body":"@jihoonson could you please add WIP here?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409003017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409004658","html_url":"https://github.com/apache/druid/pull/5492#issuecomment-409004658","issue_url":"https://api.github.com/repos/apache/druid/issues/5492","id":409004658,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTAwNDY1OA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T20:47:26Z","updated_at":"2018-07-30T20:47:26Z","author_association":"CONTRIBUTOR","body":"@drcrallen do you have further comments?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409004658/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]