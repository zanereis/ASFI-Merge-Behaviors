[{"url":"https://api.github.com/repos/apache/druid/issues/comments/405040192","html_url":"https://github.com/apache/druid/pull/5980#issuecomment-405040192","issue_url":"https://api.github.com/repos/apache/druid/issues/5980","id":405040192,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTA0MDE5Mg==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-14T18:07:23Z","updated_at":"2018-07-14T18:07:23Z","author_association":"MEMBER","body":"Sorry, i didn't notice it. I will fix it. Thanks for your comments. @leventov","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405040192/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405076130","html_url":"https://github.com/apache/druid/issues/6004#issuecomment-405076130","issue_url":"https://api.github.com/repos/apache/druid/issues/6004","id":405076130,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTA3NjEzMA==","user":{"login":"RestfulBlue","id":32250229,"node_id":"MDQ6VXNlcjMyMjUwMjI5","avatar_url":"https://avatars.githubusercontent.com/u/32250229?v=4","gravatar_id":"","url":"https://api.github.com/users/RestfulBlue","html_url":"https://github.com/RestfulBlue","followers_url":"https://api.github.com/users/RestfulBlue/followers","following_url":"https://api.github.com/users/RestfulBlue/following{/other_user}","gists_url":"https://api.github.com/users/RestfulBlue/gists{/gist_id}","starred_url":"https://api.github.com/users/RestfulBlue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RestfulBlue/subscriptions","organizations_url":"https://api.github.com/users/RestfulBlue/orgs","repos_url":"https://api.github.com/users/RestfulBlue/repos","events_url":"https://api.github.com/users/RestfulBlue/events{/privacy}","received_events_url":"https://api.github.com/users/RestfulBlue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-15T08:35:09Z","updated_at":"2018-07-15T08:35:09Z","author_association":"NONE","body":"Currently you can leave dimensions list empty, then every column, which not specified as metrics, will be indexed as string.\r\n\r\nThen you can convert every metric to some legacy format, where you have only one metric field , for example \"value\" with aggregation longSum. After that you can convert every record to that format\r\nFor example if u have record like this:\r\n{ timestamp : \"2131249124\" , \"hostname\":\"somehost.com\" , \"cpu\": 23 , \"memory\": 45 } \r\nwhen you can convert it to format like this:\r\n{ timestamp : \"2131249124\" , \"hostname\":\"somehost.com\" , \"metric\":\"cpu\", \"value\": 23 } \r\n{ timestamp : \"2131249124\" , \"hostname\":\"somehost.com\" , \"metric\":\"memory\", \"value\" : 45 } ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405076130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405198213","html_url":"https://github.com/apache/druid/issues/6003#issuecomment-405198213","issue_url":"https://api.github.com/repos/apache/druid/issues/6003","id":405198213,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTE5ODIxMw==","user":{"login":"dylwylie","id":3107079,"node_id":"MDQ6VXNlcjMxMDcwNzk=","avatar_url":"https://avatars.githubusercontent.com/u/3107079?v=4","gravatar_id":"","url":"https://api.github.com/users/dylwylie","html_url":"https://github.com/dylwylie","followers_url":"https://api.github.com/users/dylwylie/followers","following_url":"https://api.github.com/users/dylwylie/following{/other_user}","gists_url":"https://api.github.com/users/dylwylie/gists{/gist_id}","starred_url":"https://api.github.com/users/dylwylie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dylwylie/subscriptions","organizations_url":"https://api.github.com/users/dylwylie/orgs","repos_url":"https://api.github.com/users/dylwylie/repos","events_url":"https://api.github.com/users/dylwylie/events{/privacy}","received_events_url":"https://api.github.com/users/dylwylie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-16T09:52:35Z","updated_at":"2018-07-16T09:52:43Z","author_association":"CONTRIBUTOR","body":"Batch indexing is currently MapReduce only.\r\n\r\nMetamarkets have a plugin that allows indexing via spark -> https://github.com/metamx/druid-spark-batch","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405198213/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405220722","html_url":"https://github.com/apache/druid/issues/5560#issuecomment-405220722","issue_url":"https://api.github.com/repos/apache/druid/issues/5560","id":405220722,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTIyMDcyMg==","user":{"login":"pantaoran","id":7800702,"node_id":"MDQ6VXNlcjc4MDA3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/7800702?v=4","gravatar_id":"","url":"https://api.github.com/users/pantaoran","html_url":"https://github.com/pantaoran","followers_url":"https://api.github.com/users/pantaoran/followers","following_url":"https://api.github.com/users/pantaoran/following{/other_user}","gists_url":"https://api.github.com/users/pantaoran/gists{/gist_id}","starred_url":"https://api.github.com/users/pantaoran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pantaoran/subscriptions","organizations_url":"https://api.github.com/users/pantaoran/orgs","repos_url":"https://api.github.com/users/pantaoran/repos","events_url":"https://api.github.com/users/pantaoran/events{/privacy}","received_events_url":"https://api.github.com/users/pantaoran/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-16T11:42:19Z","updated_at":"2018-07-16T11:42:19Z","author_association":"NONE","body":"I can see that the documentation switched from `druid.port` to `druid.plaintextPort` with 0.11.0, but it doesn't say anything about how to transition. Is the previous field now deprecated? We don't know.\r\n\r\nOn our cluster we have been running 0.12.0 with `druid.port` and that has worked well so far, but now we want to switch to TLS and I'm confused by this change.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405220722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405304318","html_url":"https://github.com/apache/druid/pull/5221#issuecomment-405304318","issue_url":"https://api.github.com/repos/apache/druid/issues/5221","id":405304318,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTMwNDMxOA==","user":{"login":"hoesler","id":1052770,"node_id":"MDQ6VXNlcjEwNTI3NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1052770?v=4","gravatar_id":"","url":"https://api.github.com/users/hoesler","html_url":"https://github.com/hoesler","followers_url":"https://api.github.com/users/hoesler/followers","following_url":"https://api.github.com/users/hoesler/following{/other_user}","gists_url":"https://api.github.com/users/hoesler/gists{/gist_id}","starred_url":"https://api.github.com/users/hoesler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hoesler/subscriptions","organizations_url":"https://api.github.com/users/hoesler/orgs","repos_url":"https://api.github.com/users/hoesler/repos","events_url":"https://api.github.com/users/hoesler/events{/privacy}","received_events_url":"https://api.github.com/users/hoesler/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-16T16:23:12Z","updated_at":"2018-07-17T08:10:25Z","author_association":"CONTRIBUTOR","body":"@spyk Thanks for adding this feature! I tried to get this working with a local mapred job but got an `java.lang.ClassNotFoundException: Class org.apache.hadoop.fs.azure.NativeAzureFileSystem not found`. The `hadoop-azure` lib is missing. I wonder if it should be added to the extension, similar to [hadoop-aws](https://github.com/apache/incubator-druid/blob/04ea3c9f8c1f5ea34b023217bd709509ace4d30d/extensions-core/hdfs-storage/pom.xml#L148).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405304318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405329539","html_url":"https://github.com/apache/druid/pull/5913#issuecomment-405329539","issue_url":"https://api.github.com/repos/apache/druid/issues/5913","id":405329539,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTMyOTUzOQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-16T18:02:17Z","updated_at":"2018-07-16T18:02:17Z","author_association":"CONTRIBUTOR","body":"> I didn't document it yet because it is a highly experimental feature. There are still risks as explained a bit in the master comment. If it is still desired to document it but label it as experimental then I'm happy to do so, but it is in that weird middle ground where I don't feel comfortable recommending it for general use, but it has a very targeted case that it seems to help a lot\r\n\r\n@drcrallen what I'm concerned with is, lack of documentation makes difficult to test the users who may benefit from using this feature or even for developers. If it's experimental, I think we should also document a caveat for users to be able to know what are the expectations or not before using it. What do you think?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405329539/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405355544","html_url":"https://github.com/apache/druid/pull/6000#issuecomment-405355544","issue_url":"https://api.github.com/repos/apache/druid/issues/6000","id":405355544,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTM1NTU0NA==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-16T19:32:26Z","updated_at":"2018-07-16T19:32:26Z","author_association":"CONTRIBUTOR","body":"@himanshug Thanks for your comment. Closing the issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405355544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405364509","html_url":"https://github.com/apache/druid/pull/5913#issuecomment-405364509","issue_url":"https://api.github.com/repos/apache/druid/issues/5913","id":405364509,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTM2NDUwOQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-16T20:04:33Z","updated_at":"2018-07-16T20:04:33Z","author_association":"CONTRIBUTOR","body":"@jihoonson I can do that. One of the big caveats I've found in testing so far is that it does have a risk of blowing up heap for large results, so concurrent request considerations must be handled delicately.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405364509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405369433","html_url":"https://github.com/apache/druid/pull/5913#issuecomment-405369433","issue_url":"https://api.github.com/repos/apache/druid/issues/5913","id":405369433,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTM2OTQzMw==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-16T20:22:15Z","updated_at":"2018-07-16T20:22:15Z","author_association":"CONTRIBUTOR","body":"```\r\nTests run: 3990, Failures: 0, Errors: 1, Skipped: 60, Time elapsed: 69.407 sec <<< FAILURE! - in io.druid.query.groupby.GroupByQueryRunnerTest\r\ntestBySegmentResultsWithAllFiltersWithExtractionFns[config=v2ParallelCombine, runner=rtIndex](io.druid.query.groupby.GroupByQueryRunnerTest)  Time elapsed: 0.979 sec  <<< ERROR!\r\njava.lang.OutOfMemoryError: Direct buffer memory\r\n\tat java.nio.Bits.reserveMemory(Bits.java:694)\r\n\tat java.nio.DirectByteBuffer.<init>(DirectByteBuffer.java:123)\r\n\tat java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:311)\r\n\tat io.druid.query.groupby.GroupByQueryRunnerTest$8.get(GroupByQueryRunnerTest.java:358)\r\n\tat io.druid.query.groupby.GroupByQueryRunnerTest$8.get(GroupByQueryRunnerTest.java:354)\r\n\tat io.druid.collections.StupidPool.makeObjectWithHandler(StupidPool.java:112)\r\n\tat io.druid.collections.StupidPool.take(StupidPool.java:103)\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2.process(GroupByQueryEngineV2.java:125)\r\n\tat io.druid.query.groupby.strategy.GroupByStrategyV2.process(GroupByStrategyV2.java:354)\r\n\tat io.druid.query.groupby.GroupByQueryRunnerFactory$GroupByQueryRunner.run(GroupByQueryRunnerFactory.java:108)\r\n\tat io.druid.query.BySegmentQueryRunner.run(BySegmentQueryRunner.java:54)\r\n\tat io.druid.query.FinalizeResultsQueryRunner.run(FinalizeResultsQueryRunner.java:104)\r\n\tat io.druid.query.ChainedExecutionQueryRunner$1$1.call(ChainedExecutionQueryRunner.java:119)\r\n\tat io.druid.query.ChainedExecutionQueryRunner$1$1.call(ChainedExecutionQueryRunner.java:114)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)\r\n\tat com.google.common.util.concurrent.AbstractListeningExecutorService.submit(AbstractListeningExecutorService.java:58)\r\n\tat io.druid.query.ChainedExecutionQueryRunner$1.lambda$make$0(ChainedExecutionQueryRunner.java:112)\r\n\tat com.google.common.collect.Iterators$8.transform(Iterators.java:794)\r\n\tat com.google.common.collect.TransformedIterator.next(TransformedIterator.java:48)\r\n\tat com.google.common.collect.Iterators.addAll(Iterators.java:357)\r\n\tat com.google.common.collect.Lists.newArrayList(Lists.java:147)\r\n\tat com.google.common.collect.Lists.newArrayList(Lists.java:129)\r\n\tat io.druid.query.ChainedExecutionQueryRunner$1.make(ChainedExecutionQueryRunner.java:104)\r\n\tat io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:42)\r\n\tat io.druid.java.util.common.guava.Sequence.toList(Sequence.java:76)\r\n\tat io.druid.query.ChainedExecutionQueryRunner$1$1.call(ChainedExecutionQueryRunner.java:124)\r\n\tat io.druid.query.ChainedExecutionQueryRunner$1$1.call(ChainedExecutionQueryRunner.java:114)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\ntrying to merge with master to see if that fixes","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405369433/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405406373","html_url":"https://github.com/apache/druid/issues/6003#issuecomment-405406373","issue_url":"https://api.github.com/repos/apache/druid/issues/6003","id":405406373,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTQwNjM3Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-16T22:57:12Z","updated_at":"2018-07-16T22:57:12Z","author_association":"CONTRIBUTOR","body":"@Dylan1312 is right, Druid doesn't currently support alternate execution engines out of the box. In addition to the metamx plugin there is also some work to have a built-in execution engine: #5492.\r\n\r\nI will close this since I think your question is answered for now, but if you are interested in contributing in this area (maybe integrating a Spark engine into Druid core?) then please feel free to bring it up on the druid dev mailing list.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405406373/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405407050","html_url":"https://github.com/apache/druid/issues/6006#issuecomment-405407050","issue_url":"https://api.github.com/repos/apache/druid/issues/6006","id":405407050,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTQwNzA1MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-16T23:00:54Z","updated_at":"2018-07-16T23:00:54Z","author_association":"CONTRIBUTOR","body":"@TwojaWina Is it possible the supervisor did not actually shut down, or that the tasks were queued up before it shut down? I cannot think of any reason why a datasource with a totally shut-down supervisor would spontaneously generate new tasks. It seems impossible.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405407050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405439513","html_url":"https://github.com/apache/druid/pull/5980#issuecomment-405439513","issue_url":"https://api.github.com/repos/apache/druid/issues/5980","id":405439513,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTQzOTUxMw==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T02:28:39Z","updated_at":"2018-07-18T15:54:57Z","author_association":"MEMBER","body":"@leventov PTAL.\r\n\r\n1. Set the level of `ArraysAsListWithZeroOrOneArgument` inspection as `warning`, because use `Collections.singletonList` will cause a ClassCastException in `io.druid.server.coordinator.CostBalancerStrategyBenchmark#factoryClasses` and `io.druid.collections.bitmap.WrappedRoaringBitmapTest#factoryClasses`.\r\n\r\n2. Also set the level of `ToArrayCallWithZeroLengthArrayArgument` coding inspection as `warning` and add `BY_LEVEL` option, because [teamcity](https://teamcity.jetbrains.com/viewLog.html?buildId=1526603&tab=Inspection&buildTypeId=OpenSourceProjects_Druid_InspectionsPullRequests) is misunderstanding this inspection, teamcity think `pre-size` way is better, but it is not.\r\n\r\n```java\r\n@State(Scope.Thread)\r\n@OutputTimeUnit(TimeUnit.NANOSECONDS)\r\n@BenchmarkMode(Mode.AverageTime)\r\npublic class ToArrayBenchmark {\r\n\r\n    @Param({\"1\", \"100\", \"1000\", \"5000\", \"10000\", \"100000\"})\r\n    private int n;\r\n\r\n    private final List<Object> list = new ArrayList<>();\r\n\r\n    @Setup\r\n    public void populateList() {\r\n        for (int i = 0; i < n; i++) {\r\n            list.add(0);\r\n        }\r\n    }\r\n\r\n    @Benchmark\r\n    public Object[] preSize() {\r\n        return list.toArray(new Object[n]);\r\n    }\r\n\r\n    @Benchmark\r\n    public Object[] resize() {\r\n        return list.toArray(new Object[0]);\r\n    }\r\n\r\n    /*\r\n    Integer List:\r\n    Benchmark                    (n)  Mode  Cnt       Score        Error  Units\r\n    ToArrayBenchmark.preSize       1  avgt    3      41.552 ±    108.030  ns/op\r\n    ToArrayBenchmark.preSize     100  avgt    3     216.449 ±    799.501  ns/op\r\n    ToArrayBenchmark.preSize    1000  avgt    3    2087.965 ±   6027.778  ns/op\r\n    ToArrayBenchmark.preSize    5000  avgt    3    9098.358 ±  14603.493  ns/op\r\n    ToArrayBenchmark.preSize   10000  avgt    3   24204.199 ± 121468.232  ns/op\r\n    ToArrayBenchmark.preSize  100000  avgt    3  188183.618 ± 369455.090  ns/op\r\n    ToArrayBenchmark.resize        1  avgt    3      18.987 ±     36.449  ns/op\r\n    ToArrayBenchmark.resize      100  avgt    3     265.549 ±   1125.008  ns/op\r\n    ToArrayBenchmark.resize     1000  avgt    3    1560.713 ±   2922.186  ns/op\r\n    ToArrayBenchmark.resize     5000  avgt    3    7804.810 ±   8333.390  ns/op\r\n    ToArrayBenchmark.resize    10000  avgt    3   24791.026 ±  78459.936  ns/op\r\n    ToArrayBenchmark.resize   100000  avgt    3  158891.642 ±  56055.895  ns/op\r\n    Object List:\r\n    Benchmark                    (n)  Mode  Cnt      Score       Error  Units\r\n    ToArrayBenchmark.preSize       1  avgt    3     36.306 ±    96.612  ns/op\r\n    ToArrayBenchmark.preSize     100  avgt    3     52.372 ±    84.159  ns/op\r\n    ToArrayBenchmark.preSize    1000  avgt    3    449.807 ±   215.692  ns/op\r\n    ToArrayBenchmark.preSize    5000  avgt    3   2080.172 ±  2003.726  ns/op\r\n    ToArrayBenchmark.preSize   10000  avgt    3   4657.937 ±  8432.624  ns/op\r\n    ToArrayBenchmark.preSize  100000  avgt    3  51980.829 ± 46920.314  ns/op\r\n    ToArrayBenchmark.resize        1  avgt    3     16.747 ±    85.131  ns/op\r\n    ToArrayBenchmark.resize      100  avgt    3     43.803 ±    28.704  ns/op\r\n    ToArrayBenchmark.resize     1000  avgt    3    404.681 ±   132.986  ns/op\r\n    ToArrayBenchmark.resize     5000  avgt    3   1972.649 ±   174.691  ns/op\r\n    ToArrayBenchmark.resize    10000  avgt    3   4021.440 ±  1114.212  ns/op\r\n    ToArrayBenchmark.resize   100000  avgt    3  44204.167 ± 76714.850  ns/op\r\n     */\r\n    public static void main(String[] args) throws Exception {\r\n        Options opt = new OptionsBuilder()\r\n                .include(ToArrayBenchmark.class.getSimpleName())\r\n                .forks(1)\r\n                .warmupIterations(1)\r\n                .measurementIterations(3)\r\n                .threads(1)\r\n                .build();\r\n        new Runner(opt).run();\r\n    }\r\n}\r\n```\r\nTips: Full code is [here](https://github.com/asdf2014/yuzhouwan/blob/master/yuzhouwan-hacker/src/main/java/com/yuzhouwan/hacker/algorithms/collection/ToArrayBenchmark.java).\r\n\r\n3. Added `[a-z][a-zA-Z0-9_]*\\.equals\\((\\\"|[A-Z_]+\\))` into checkstyle config file.\r\n\r\n4. Added `java.io.File#toURL()` into druid-forbidden-apis.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405439513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405648172","html_url":"https://github.com/apache/druid/pull/6007#issuecomment-405648172","issue_url":"https://api.github.com/repos/apache/druid/issues/6007","id":405648172,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY0ODE3Mg==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T16:40:59Z","updated_at":"2018-07-17T16:40:59Z","author_association":"CONTRIBUTOR","body":"@jihoonson unfortunately it isn't a simple drop and replace. It requires some permissions or settings somewhere which I'm not familiar with. I'll file an issue but it is a bit beyond the scope of this pr","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405648172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405648789","html_url":"https://github.com/apache/druid/pull/6007#issuecomment-405648789","issue_url":"https://api.github.com/repos/apache/druid/issues/6007","id":405648789,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY0ODc4OQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T16:43:10Z","updated_at":"2018-07-17T16:43:10Z","author_association":"CONTRIBUTOR","body":"Filed https://github.com/apache/incubator-druid/issues/6009","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405648789/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405650246","html_url":"https://github.com/apache/druid/issues/3151#issuecomment-405650246","issue_url":"https://api.github.com/repos/apache/druid/issues/3151","id":405650246,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY1MDI0Ng==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T16:48:02Z","updated_at":"2018-07-17T16:48:02Z","author_association":"CONTRIBUTOR","body":"@pdeva not sure when this will close but if AWS bill is too much then consider using NFS as deep storage. I haven't tried it but can't see why it wouldn't work. There might be few bugs but they would be easy to fix I think.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405650246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405651715","html_url":"https://github.com/apache/druid/pull/5957#issuecomment-405651715","issue_url":"https://api.github.com/repos/apache/druid/issues/5957","id":405651715,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY1MTcxNQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T16:52:51Z","updated_at":"2018-07-17T16:52:51Z","author_association":"CONTRIBUTOR","body":"@leventov please feel free to add the doc in this PR itself, not a major change to require new PR. It \r\n should be along the lines of ....\r\n\r\n```\r\nColumnSerializer can be implemented in custom aggregator extensions that would like to take full control of column serialization. That would implementation would be returned by overriding ComplexMetricsSerde.getSerializer(..).\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405651715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405655142","html_url":"https://github.com/apache/druid/issues/5922#issuecomment-405655142","issue_url":"https://api.github.com/repos/apache/druid/issues/5922","id":405655142,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY1NTE0Mg==","user":{"login":"QubitPi","id":16126939,"node_id":"MDQ6VXNlcjE2MTI2OTM5","avatar_url":"https://avatars.githubusercontent.com/u/16126939?v=4","gravatar_id":"","url":"https://api.github.com/users/QubitPi","html_url":"https://github.com/QubitPi","followers_url":"https://api.github.com/users/QubitPi/followers","following_url":"https://api.github.com/users/QubitPi/following{/other_user}","gists_url":"https://api.github.com/users/QubitPi/gists{/gist_id}","starred_url":"https://api.github.com/users/QubitPi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QubitPi/subscriptions","organizations_url":"https://api.github.com/users/QubitPi/orgs","repos_url":"https://api.github.com/users/QubitPi/repos","events_url":"https://api.github.com/users/QubitPi/events{/privacy}","received_events_url":"https://api.github.com/users/QubitPi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T17:04:09Z","updated_at":"2018-07-17T17:04:09Z","author_association":"CONTRIBUTOR","body":"io.druid.java.util.common.logger.Logger works. Thanks @gianm !","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405655142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405658112","html_url":"https://github.com/apache/druid/pull/6011#issuecomment-405658112","issue_url":"https://api.github.com/repos/apache/druid/issues/6011","id":405658112,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY1ODExMg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T17:14:24Z","updated_at":"2018-07-17T17:14:24Z","author_association":"CONTRIBUTOR","body":"@fjy could you include the incubation disclaimer too (https://incubator.apache.org/guides/branding.html#disclaimers)? Perhaps also some of the same explanatory language on https://druid.apache.org/.\r\n\r\nThe disclaimer is:\r\n\r\n> Disclaimer: Apache Druid is an effort undergoing incubation at The Apache Software Foundation (ASF), sponsored by the Apache Incubator. Incubation is required of all newly accepted projects until a further review indicates that the infrastructure, communications, and decision making process have stabilized in a manner consistent with other successful ASF projects. While incubation status is not necessarily a reflection of the completeness or stability of the code, it does indicate that the project has yet to be fully endorsed by the ASF.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405658112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405659013","html_url":"https://github.com/apache/druid/pull/5492#issuecomment-405659013","issue_url":"https://api.github.com/repos/apache/druid/issues/5492","id":405659013,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY1OTAxMw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T17:17:28Z","updated_at":"2018-07-17T17:17:28Z","author_association":"CONTRIBUTOR","body":"@jihoonson have you tested this in some dev cluster and ingested xx GB of data with more than 20-30 input splits ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405659013/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405659153","html_url":"https://github.com/apache/druid/pull/6011#issuecomment-405659153","issue_url":"https://api.github.com/repos/apache/druid/issues/6011","id":405659153,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY1OTE1Mw==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T17:17:58Z","updated_at":"2018-07-17T17:17:58Z","author_association":"CONTRIBUTOR","body":"@gianm added disclaimer","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405659153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405661972","html_url":"https://github.com/apache/druid/pull/5980#issuecomment-405661972","issue_url":"https://api.github.com/repos/apache/druid/issues/5980","id":405661972,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY2MTk3Mg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T17:27:43Z","updated_at":"2018-07-17T17:27:43Z","author_association":"MEMBER","body":"@asdf2014 \r\n\r\n1. I don't know why `CostBalancerStrategyBenchmark` and `WrappedRoaringBitmapTest` are written in such an obscure way, you could fix the code to create arrays directly: `new CostBalancerStrategy[] { new CostBalancerStrategy(MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(1))) }`, etc. and retain the inspection at the ERROR level.\r\n\r\n2. It was fixed only recently: https://youtrack.jetbrains.com/issue/IDEA-184862, probably Youtrack didn't pick up the fix yet. I think you could also catch all such situations using a regex, something like `toArray\\([\\s\\n]*new [a-zA-Z0-9_]+\\[[^0]`","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405661972/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405666760","html_url":"https://github.com/apache/druid/pull/5913#issuecomment-405666760","issue_url":"https://api.github.com/repos/apache/druid/issues/5913","id":405666760,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY2Njc2MA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T17:43:05Z","updated_at":"2018-07-17T17:43:05Z","author_association":"CONTRIBUTOR","body":"lots of unrelated test failures","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405666760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405688698","html_url":"https://github.com/apache/druid/issues/6003#issuecomment-405688698","issue_url":"https://api.github.com/repos/apache/druid/issues/6003","id":405688698,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY4ODY5OA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T18:50:40Z","updated_at":"2018-07-17T18:50:40Z","author_association":"CONTRIBUTOR","body":"IMHO something like an apache beam focused indexing workflow would be more portable.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405688698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405691144","html_url":"https://github.com/apache/druid/pull/6011#issuecomment-405691144","issue_url":"https://api.github.com/repos/apache/druid/issues/6011","id":405691144,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY5MTE0NA==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T18:58:41Z","updated_at":"2018-07-17T18:58:41Z","author_association":"CONTRIBUTOR","body":"@gianm I think we should try to direct people to the Druid webpage as much as possible and avoid repeating information in too many places.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405691144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405695124","html_url":"https://github.com/apache/druid/pull/5921#issuecomment-405695124","issue_url":"https://api.github.com/repos/apache/druid/issues/5921","id":405695124,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY5NTEyNA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T19:11:02Z","updated_at":"2018-07-17T19:11:51Z","author_association":"CONTRIBUTOR","body":"The jackson injector we use was written before the guice module was available IIRC. It is worth replacing with the general injectables module for guice probably, but I don't think that solves the problem you are finding.\r\n\r\nIf you are having binding problems in extensions then there is something else going on.\r\n\r\nSpecifically the problem I could see happening is the following:\r\n\r\nYou have extension A which defines an annotation. Extension B also uses the annotation. Extension A uses bound annotations in its code path, Extension B binds new implementations to the annotation... but due to classloader isolation, they are *NOT* actually the same class. As such the ones bound in Extension B are never used as an \"annotated binding\" in Extension A.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405695124/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405699220","html_url":"https://github.com/apache/druid/pull/6007#issuecomment-405699220","issue_url":"https://api.github.com/repos/apache/druid/issues/6007","id":405699220,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTY5OTIyMA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T19:25:43Z","updated_at":"2018-07-17T19:25:51Z","author_association":"CONTRIBUTOR","body":"@drcrallen thanks for raising #6009.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405699220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405716988","html_url":"https://github.com/apache/druid/pull/6005#issuecomment-405716988","issue_url":"https://api.github.com/repos/apache/druid/issues/6005","id":405716988,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTcxNjk4OA==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T20:28:56Z","updated_at":"2018-07-17T20:28:56Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405716988/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405732536","html_url":"https://github.com/apache/druid/issues/6013#issuecomment-405732536","issue_url":"https://api.github.com/repos/apache/druid/issues/6013","id":405732536,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTczMjUzNg==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T21:22:54Z","updated_at":"2018-09-04T23:36:01Z","author_association":"CONTRIBUTOR","body":"```Tests run: 9, Failures: 0, Errors: 6, Skipped: 0, Time elapsed: 0.17 sec <<< FAILURE! - in io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest\r\ntestTaskRunnerRestart(io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest)  Time elapsed: 0.047 sec  <<< ERROR!\r\njava.lang.RuntimeException: java.net.URISyntaxException: Malformed IPv6 address at index 8: http://[host:1234]/\r\n\tat com.google.common.base.Throwables.propagate(Throwables.java:160)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.makeWorkerURL(WorkerHolder.java:224)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.<init>(WorkerHolder.java:121)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest$15.<init>(HttpRemoteTaskRunnerTest.java:1241)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.createWorkerHolder(HttpRemoteTaskRunnerTest.java:1240)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.lambda$testTaskRunnerRestart$0(HttpRemoteTaskRunnerTest.java:338)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest$6.createWorkerHolder(HttpRemoteTaskRunnerTest.java:310)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner.addWorker(HttpRemoteTaskRunner.java:497)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner.access$500(HttpRemoteTaskRunner.java:119)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner$3.lambda$nodesAdded$0(HttpRemoteTaskRunner.java:445)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner$3.nodesAdded(HttpRemoteTaskRunner.java:445)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.testTaskRunnerRestart(HttpRemoteTaskRunnerTest.java:378)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)\r\nCaused by: java.net.URISyntaxException: Malformed IPv6 address at index 8: http://[host:1234]/\r\n\tat java.net.URI$Parser.fail(URI.java:2848)\r\n\tat java.net.URI$Parser.parseIPv6Reference(URI.java:3469)\r\n\tat java.net.URI$Parser.parseServer(URI.java:3219)\r\n\tat java.net.URI$Parser.parseAuthority(URI.java:3155)\r\n\tat java.net.URI$Parser.parseHierarchical(URI.java:3097)\r\n\tat java.net.URI$Parser.parse(URI.java:3053)\r\n\tat java.net.URI.<init>(URI.java:673)\r\n\tat java.net.URI.<init>(URI.java:774)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.makeWorkerURL(WorkerHolder.java:221)\r\n\t... 22 more\r\ntestFreshStart(io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest)  Time elapsed: 0.007 sec  <<< ERROR!\r\njava.lang.RuntimeException: java.net.URISyntaxException: Malformed IPv6 address at index 8: http://[host1:8080]/\r\n\tat com.google.common.base.Throwables.propagate(Throwables.java:160)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.makeWorkerURL(WorkerHolder.java:224)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.<init>(WorkerHolder.java:121)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest$15.<init>(HttpRemoteTaskRunnerTest.java:1241)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.createWorkerHolder(HttpRemoteTaskRunnerTest.java:1240)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.access$100(HttpRemoteTaskRunnerTest.java:76)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest$2.createWorkerHolder(HttpRemoteTaskRunnerTest.java:118)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner.addWorker(HttpRemoteTaskRunner.java:497)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner.access$500(HttpRemoteTaskRunner.java:119)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner$3.lambda$nodesAdded$0(HttpRemoteTaskRunner.java:445)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner$3.nodesAdded(HttpRemoteTaskRunner.java:445)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.testFreshStart(HttpRemoteTaskRunnerTest.java:146)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)\r\nCaused by: java.net.URISyntaxException: Malformed IPv6 address at index 8: http://[host1:8080]/\r\n\tat java.net.URI$Parser.fail(URI.java:2848)\r\n\tat java.net.URI$Parser.parseIPv6Reference(URI.java:3469)\r\n\tat java.net.URI$Parser.parseServer(URI.java:3219)\r\n\tat java.net.URI$Parser.parseAuthority(URI.java:3155)\r\n\tat java.net.URI$Parser.parseHierarchical(URI.java:3097)\r\n\tat java.net.URI$Parser.parse(URI.java:3053)\r\n\tat java.net.URI.<init>(URI.java:673)\r\n\tat java.net.URI.<init>(URI.java:774)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.makeWorkerURL(WorkerHolder.java:221)\r\n\t... 22 more\r\ntestWorkerDisapperAndReappearBeforeItsCleanup(io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest)  Time elapsed: 0.013 sec  <<< ERROR!\r\njava.lang.RuntimeException: java.net.URISyntaxException: Malformed IPv6 address at index 8: http://[host:1234]/\r\n\tat com.google.common.base.Throwables.propagate(Throwables.java:160)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.makeWorkerURL(WorkerHolder.java:224)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.<init>(WorkerHolder.java:121)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest$15.<init>(HttpRemoteTaskRunnerTest.java:1241)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.createWorkerHolder(HttpRemoteTaskRunnerTest.java:1240)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.lambda$testWorkerDisapperAndReappearBeforeItsCleanup$1(HttpRemoteTaskRunnerTest.java:469)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest$8.createWorkerHolder(HttpRemoteTaskRunnerTest.java:441)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner.addWorker(HttpRemoteTaskRunner.java:497)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner.access$500(HttpRemoteTaskRunner.java:119)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner$3.lambda$nodesAdded$0(HttpRemoteTaskRunner.java:445)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner$3.nodesAdded(HttpRemoteTaskRunner.java:445)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.testWorkerDisapperAndReappearBeforeItsCleanup(HttpRemoteTaskRunnerTest.java:508)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)\r\nCaused by: java.net.URISyntaxException: Malformed IPv6 address at index 8: http://[host:1234]/\r\n\tat java.net.URI$Parser.fail(URI.java:2848)\r\n\tat java.net.URI$Parser.parseIPv6Reference(URI.java:3469)\r\n\tat java.net.URI$Parser.parseServer(URI.java:3219)\r\n\tat java.net.URI$Parser.parseAuthority(URI.java:3155)\r\n\tat java.net.URI$Parser.parseHierarchical(URI.java:3097)\r\n\tat java.net.URI$Parser.parse(URI.java:3053)\r\n\tat java.net.URI.<init>(URI.java:673)\r\n\tat java.net.URI.<init>(URI.java:774)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.makeWorkerURL(WorkerHolder.java:221)\r\n\t... 22 more\r\ntestMarkWorkersLazy(io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest)  Time elapsed: 0.017 sec  <<< ERROR!\r\njava.lang.RuntimeException: java.net.URISyntaxException: Malformed IPv6 address at index 8: http://[host1:8080]/\r\n\tat com.google.common.base.Throwables.propagate(Throwables.java:160)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.makeWorkerURL(WorkerHolder.java:224)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.<init>(WorkerHolder.java:121)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest$15.<init>(HttpRemoteTaskRunnerTest.java:1241)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.createWorkerHolder(HttpRemoteTaskRunnerTest.java:1240)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.lambda$testMarkWorkersLazy$5(HttpRemoteTaskRunnerTest.java:799)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest$12.createWorkerHolder(HttpRemoteTaskRunnerTest.java:772)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner.addWorker(HttpRemoteTaskRunner.java:497)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner.access$500(HttpRemoteTaskRunner.java:119)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner$3.lambda$nodesAdded$0(HttpRemoteTaskRunner.java:445)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner$3.nodesAdded(HttpRemoteTaskRunner.java:445)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.testMarkWorkersLazy(HttpRemoteTaskRunnerTest.java:821)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)\r\nCaused by: java.net.URISyntaxException: Malformed IPv6 address at index 8: http://[host1:8080]/\r\n\tat java.net.URI$Parser.fail(URI.java:2848)\r\n\tat java.net.URI$Parser.parseIPv6Reference(URI.java:3469)\r\n\tat java.net.URI$Parser.parseServer(URI.java:3219)\r\n\tat java.net.URI$Parser.parseAuthority(URI.java:3155)\r\n\tat java.net.URI$Parser.parseHierarchical(URI.java:3097)\r\n\tat java.net.URI$Parser.parse(URI.java:3053)\r\n\tat java.net.URI.<init>(URI.java:673)\r\n\tat java.net.URI.<init>(URI.java:774)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.makeWorkerURL(WorkerHolder.java:221)\r\n\t... 22 more\r\ntestOneStuckTaskAssignmentDoesntBlockOthers(io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest)  Time elapsed: 0.017 sec  <<< ERROR!\r\njava.lang.RuntimeException: java.net.URISyntaxException: Malformed IPv6 address at index 8: http://[host1:8080]/\r\n\tat com.google.common.base.Throwables.propagate(Throwables.java:160)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.makeWorkerURL(WorkerHolder.java:224)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.<init>(WorkerHolder.java:121)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest$15.<init>(HttpRemoteTaskRunnerTest.java:1241)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.createWorkerHolder(HttpRemoteTaskRunnerTest.java:1240)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.access$100(HttpRemoteTaskRunnerTest.java:76)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest$4.createWorkerHolder(HttpRemoteTaskRunnerTest.java:210)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner.addWorker(HttpRemoteTaskRunner.java:497)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner.access$500(HttpRemoteTaskRunner.java:119)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner$3.lambda$nodesAdded$0(HttpRemoteTaskRunner.java:445)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner$3.nodesAdded(HttpRemoteTaskRunner.java:445)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.testOneStuckTaskAssignmentDoesntBlockOthers(HttpRemoteTaskRunnerTest.java:238)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)\r\nCaused by: java.net.URISyntaxException: Malformed IPv6 address at index 8: http://[host1:8080]/\r\n\tat java.net.URI$Parser.fail(URI.java:2848)\r\n\tat java.net.URI$Parser.parseIPv6Reference(URI.java:3469)\r\n\tat java.net.URI$Parser.parseServer(URI.java:3219)\r\n\tat java.net.URI$Parser.parseAuthority(URI.java:3155)\r\n\tat java.net.URI$Parser.parseHierarchical(URI.java:3097)\r\n\tat java.net.URI$Parser.parse(URI.java:3053)\r\n\tat java.net.URI.<init>(URI.java:673)\r\n\tat java.net.URI.<init>(URI.java:774)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.makeWorkerURL(WorkerHolder.java:221)\r\n\t... 22 more\r\ntestWorkerDisapperAndReappearAfterItsCleanup(io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest)  Time elapsed: 0.016 sec  <<< ERROR!\r\njava.lang.RuntimeException: java.net.URISyntaxException: Malformed IPv6 address at index 8: http://[host:1234]/\r\n\tat com.google.common.base.Throwables.propagate(Throwables.java:160)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.makeWorkerURL(WorkerHolder.java:224)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.<init>(WorkerHolder.java:121)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest$15.<init>(HttpRemoteTaskRunnerTest.java:1241)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.createWorkerHolder(HttpRemoteTaskRunnerTest.java:1240)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.lambda$testWorkerDisapperAndReappearAfterItsCleanup$3(HttpRemoteTaskRunnerTest.java:632)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest$10.createWorkerHolder(HttpRemoteTaskRunnerTest.java:604)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner.addWorker(HttpRemoteTaskRunner.java:497)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner.access$500(HttpRemoteTaskRunner.java:119)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner$3.lambda$nodesAdded$0(HttpRemoteTaskRunner.java:445)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunner$3.nodesAdded(HttpRemoteTaskRunner.java:445)\r\n\tat io.druid.indexing.overlord.hrtr.HttpRemoteTaskRunnerTest.testWorkerDisapperAndReappearAfterItsCleanup(HttpRemoteTaskRunnerTest.java:666)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)\r\nCaused by: java.net.URISyntaxException: Malformed IPv6 address at index 8: http://[host:1234]/\r\n\tat java.net.URI$Parser.fail(URI.java:2848)\r\n\tat java.net.URI$Parser.parseIPv6Reference(URI.java:3469)\r\n\tat java.net.URI$Parser.parseServer(URI.java:3219)\r\n\tat java.net.URI$Parser.parseAuthority(URI.java:3155)\r\n\tat java.net.URI$Parser.parseHierarchical(URI.java:3097)\r\n\tat java.net.URI$Parser.parse(URI.java:3053)\r\n\tat java.net.URI.<init>(URI.java:673)\r\n\tat java.net.URI.<init>(URI.java:774)\r\n\tat io.druid.indexing.overlord.hrtr.WorkerHolder.makeWorkerURL(WorkerHolder.java:221)\r\n\t... 22 more```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405732536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405736898","html_url":"https://github.com/apache/druid/issues/6013#issuecomment-405736898","issue_url":"https://api.github.com/repos/apache/druid/issues/6013","id":405736898,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTczNjg5OA==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T21:39:21Z","updated_at":"2018-09-04T23:36:13Z","author_association":"CONTRIBUTOR","body":"```testStatusRemoved(io.druid.indexing.overlord.RemoteTaskRunnerTest)  Time elapsed: 21.188 sec  <<< ERROR!\r\njava.util.concurrent.TimeoutException: Timeout waiting for task.\r\n\tat com.google.common.util.concurrent.AbstractFuture$Sync.get(AbstractFuture.java:269)\r\n\tat com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:96)\r\n\tat io.druid.indexing.overlord.RemoteTaskRunnerTest.testStatusRemoved(RemoteTaskRunnerTest.java:315)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405736898/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405737906","html_url":"https://github.com/apache/druid/pull/6012#issuecomment-405737906","issue_url":"https://api.github.com/repos/apache/druid/issues/6012","id":405737906,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTczNzkwNg==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T21:43:18Z","updated_at":"2018-07-17T21:43:18Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405737906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405753244","html_url":"https://github.com/apache/druid/issues/6013#issuecomment-405753244","issue_url":"https://api.github.com/repos/apache/druid/issues/6013","id":405753244,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTc1MzI0NA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T22:50:18Z","updated_at":"2018-07-17T22:50:18Z","author_association":"CONTRIBUTOR","body":"https://travis-ci.org/apache/incubator-druid/jobs/405081069\r\n\r\n```Running io.druid.server.coordinator.CuratorDruidCoordinatorTest\r\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 61.538 sec <<< FAILURE! - in io.druid.server.coordinator.CuratorDruidCoordinatorTest\r\ntestMoveSegment(io.druid.server.coordinator.CuratorDruidCoordinatorTest)  Time elapsed: 61.537 sec  <<< ERROR!\r\njava.lang.Exception: test timed out after 60000 milliseconds\r\n\tat io.druid.server.coordinator.CuratorDruidCoordinatorTest.testMoveSegment(CuratorDruidCoordinatorTest.java:369)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405753244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405753300","html_url":"https://github.com/apache/druid/pull/5913#issuecomment-405753300","issue_url":"https://api.github.com/repos/apache/druid/issues/5913","id":405753300,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTc1MzMwMA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-17T22:50:36Z","updated_at":"2018-07-17T22:50:36Z","author_association":"CONTRIBUTOR","body":"@jihoonson added query context docs","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405753300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405766673","html_url":"https://github.com/apache/druid/pull/5492#issuecomment-405766673","issue_url":"https://api.github.com/repos/apache/druid/issues/5492","id":405766673,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTc2NjY3Mw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T00:08:01Z","updated_at":"2018-07-18T22:42:12Z","author_association":"CONTRIBUTOR","body":"@himanshug thank you for reviewing this PR! Yes, I have tested in our cluster by ingesting 100 GB of TPC-H lineitem table. The number of splits was 100. I also moved parallel indexing stuffs to the `batch.parallel` package.\r\n\r\n[Himanshu] :+1:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405766673/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405768263","html_url":"https://github.com/apache/druid/pull/5871#issuecomment-405768263","issue_url":"https://api.github.com/repos/apache/druid/issues/5871","id":405768263,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTc2ODI2Mw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T00:17:26Z","updated_at":"2018-07-18T00:17:26Z","author_association":"CONTRIBUTOR","body":"@hellobabygogo do you mean the KIS can avoid the case when task2 fails with this PR?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405768263/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405789147","html_url":"https://github.com/apache/druid/pull/6016#issuecomment-405789147","issue_url":"https://api.github.com/repos/apache/druid/issues/6016","id":405789147,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTc4OTE0Nw==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T02:31:15Z","updated_at":"2018-07-18T02:31:15Z","author_association":"MEMBER","body":"I don't seem to be able to request reviews, but if I could I'd at least ask @leventov, @gianm, and  @nishantmonu51 to have a look when convenient (and anyone else who is interested, the more eyes the better!)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405789147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405858208","html_url":"https://github.com/apache/druid/pull/5871#issuecomment-405858208","issue_url":"https://api.github.com/repos/apache/druid/issues/5871","id":405858208,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTg1ODIwOA==","user":{"login":"hellobabygogo","id":8693129,"node_id":"MDQ6VXNlcjg2OTMxMjk=","avatar_url":"https://avatars.githubusercontent.com/u/8693129?v=4","gravatar_id":"","url":"https://api.github.com/users/hellobabygogo","html_url":"https://github.com/hellobabygogo","followers_url":"https://api.github.com/users/hellobabygogo/followers","following_url":"https://api.github.com/users/hellobabygogo/following{/other_user}","gists_url":"https://api.github.com/users/hellobabygogo/gists{/gist_id}","starred_url":"https://api.github.com/users/hellobabygogo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hellobabygogo/subscriptions","organizations_url":"https://api.github.com/users/hellobabygogo/orgs","repos_url":"https://api.github.com/users/hellobabygogo/repos","events_url":"https://api.github.com/users/hellobabygogo/events{/privacy}","received_events_url":"https://api.github.com/users/hellobabygogo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T08:48:13Z","updated_at":"2018-07-18T08:48:13Z","author_association":"NONE","body":"@jihoonson yes, it can avoid push continuously and cause the tasks failed.\r\n\r\n\r\n ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405858208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405970508","html_url":"https://github.com/apache/druid/pull/6014#issuecomment-405970508","issue_url":"https://api.github.com/repos/apache/druid/issues/6014","id":405970508,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTk3MDUwOA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T15:23:11Z","updated_at":"2018-07-18T15:23:11Z","author_association":"CONTRIBUTOR","body":"Is this meant to be addressing https://github.com/apache/incubator-druid/issues/4933? What effect does enabling this option have on historicals -- I guess backpressure will extend all the way to them, potentially blocking their http threads?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405970508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405974955","html_url":"https://github.com/apache/druid/pull/5980#issuecomment-405974955","issue_url":"https://api.github.com/repos/apache/druid/issues/5980","id":405974955,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTk3NDk1NQ==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T15:36:01Z","updated_at":"2018-07-18T15:36:01Z","author_association":"MEMBER","body":"Hi,  @leventov . It has been fixed. BTW, [jobs-405249198](https://travis-ci.org/apache/incubator-druid/jobs/405249198) failed because vm crashed. Would you please help me rebuild it once?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405974955/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405998680","html_url":"https://github.com/apache/druid/issues/3236#issuecomment-405998680","issue_url":"https://api.github.com/repos/apache/druid/issues/3236","id":405998680,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTk5ODY4MA==","user":{"login":"joshlemer","id":5122903,"node_id":"MDQ6VXNlcjUxMjI5MDM=","avatar_url":"https://avatars.githubusercontent.com/u/5122903?v=4","gravatar_id":"","url":"https://api.github.com/users/joshlemer","html_url":"https://github.com/joshlemer","followers_url":"https://api.github.com/users/joshlemer/followers","following_url":"https://api.github.com/users/joshlemer/following{/other_user}","gists_url":"https://api.github.com/users/joshlemer/gists{/gist_id}","starred_url":"https://api.github.com/users/joshlemer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshlemer/subscriptions","organizations_url":"https://api.github.com/users/joshlemer/orgs","repos_url":"https://api.github.com/users/joshlemer/repos","events_url":"https://api.github.com/users/joshlemer/events{/privacy}","received_events_url":"https://api.github.com/users/joshlemer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T16:45:56Z","updated_at":"2018-07-18T16:45:56Z","author_association":"NONE","body":"@gianm nobody else can make the gitter channel except people who own this repository, can you just make one it takes 30 seconds https://gitter.im/#createcommunity","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405998680/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/405999950","html_url":"https://github.com/apache/druid/pull/6014#issuecomment-405999950","issue_url":"https://api.github.com/repos/apache/druid/issues/6014","id":405999950,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNTk5OTk1MA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T16:50:08Z","updated_at":"2018-07-18T16:50:08Z","author_association":"CONTRIBUTOR","body":"@gianm yes, the main risk is blocking the http threads of historicals. Since results are merged in http threads and not processing threads, other queries should be able to continue to do work, but it could block new queries from coming in.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/405999950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406001070","html_url":"https://github.com/apache/druid/issues/3236#issuecomment-406001070","issue_url":"https://api.github.com/repos/apache/druid/issues/3236","id":406001070,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjAwMTA3MA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T16:53:49Z","updated_at":"2018-07-18T16:53:49Z","author_association":"MEMBER","body":"I'm against creating a Gitter channel (or Slack, or IRC, FWIW).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406001070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406020525","html_url":"https://github.com/apache/druid/pull/6014#issuecomment-406020525","issue_url":"https://api.github.com/repos/apache/druid/issues/6014","id":406020525,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjAyMDUyNQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T17:58:24Z","updated_at":"2018-07-18T17:58:24Z","author_association":"CONTRIBUTOR","body":"This seems to cause deadlocks. Right now it looks like the \"parallel merging\" doesn't let the FJP know that iterating through the results is a blocking operation, so the FJP can get clogged with TransferQueue poll operations that don't match with the http client `transfer` operations, causing http and fjp threads to deadlock each other.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406020525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406020572","html_url":"https://github.com/apache/druid/pull/6014#issuecomment-406020572","issue_url":"https://api.github.com/repos/apache/druid/issues/6014","id":406020572,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjAyMDU3Mg==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T17:58:33Z","updated_at":"2018-07-18T17:58:33Z","author_association":"CONTRIBUTOR","body":"I'm looking to see if there's a fix","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406020572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406027596","html_url":"https://github.com/apache/druid/issues/3236#issuecomment-406027596","issue_url":"https://api.github.com/repos/apache/druid/issues/3236","id":406027596,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjAyNzU5Ng==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T18:21:23Z","updated_at":"2018-07-18T18:21:23Z","author_association":"CONTRIBUTOR","body":"There are inherent dangers to communications regarding the project that are not part of official ASF channels (i.e. the mailing list). How do other ASF projects handle such IM style communications? Are other ASF projects permissive of non-mailing-list interactions on a regular basis?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406027596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406028004","html_url":"https://github.com/apache/druid/issues/6018#issuecomment-406028004","issue_url":"https://api.github.com/repos/apache/druid/issues/6018","id":406028004,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjAyODAwNA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T18:22:44Z","updated_at":"2018-07-18T18:22:44Z","author_association":"CONTRIBUTOR","body":"it should be in the druid server jar. Can you explain your use case some more?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406028004/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406035985","html_url":"https://github.com/apache/druid/pull/5993#issuecomment-406035985","issue_url":"https://api.github.com/repos/apache/druid/issues/5993","id":406035985,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjAzNTk4NQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T18:49:17Z","updated_at":"2018-07-18T18:49:17Z","author_association":"CONTRIBUTOR","body":"@asdf2014 @jihoonson @nishantmonu51 Thanks for your comments -- I fixed the call to DateTimeZone.forID and added the new config parameter to the PR description. I also merged from master to try to help the tests to pass.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406035985/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406041657","html_url":"https://github.com/apache/druid/issues/3236#issuecomment-406041657","issue_url":"https://api.github.com/repos/apache/druid/issues/3236","id":406041657,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjA0MTY1Nw==","user":{"login":"matanox","id":4996067,"node_id":"MDQ6VXNlcjQ5OTYwNjc=","avatar_url":"https://avatars.githubusercontent.com/u/4996067?v=4","gravatar_id":"","url":"https://api.github.com/users/matanox","html_url":"https://github.com/matanox","followers_url":"https://api.github.com/users/matanox/followers","following_url":"https://api.github.com/users/matanox/following{/other_user}","gists_url":"https://api.github.com/users/matanox/gists{/gist_id}","starred_url":"https://api.github.com/users/matanox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matanox/subscriptions","organizations_url":"https://api.github.com/users/matanox/orgs","repos_url":"https://api.github.com/users/matanox/repos","events_url":"https://api.github.com/users/matanox/events{/privacy}","received_events_url":"https://api.github.com/users/matanox/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T19:08:40Z","updated_at":"2018-07-18T19:08:40Z","author_association":"NONE","body":"Dangers? your comment left me curious","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406041657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406042168","html_url":"https://github.com/apache/druid/issues/3236#issuecomment-406042168","issue_url":"https://api.github.com/repos/apache/druid/issues/3236","id":406042168,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjA0MjE2OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T19:10:26Z","updated_at":"2018-07-18T19:13:56Z","author_association":"CONTRIBUTOR","body":"I have hesitated to set it up myself because I am not sure if it's a good idea to have a real time chat channel. We had one in the past and it was a mixed blessing. It was great for being able to get people connected super fast, like a turbo-charged version of the mailing lists. But it was also difficult to keep the channel \"staffed\", if you will, since Druid committers tend to be busy people. So lots of times, someone would come in looking for help and there would be nobody there to help them. That side of things ended up being frustrating for everyone, compared to the mailing lists, where it was more likely that someone would chime in with thoughts when they could.\r\n\r\nI probably wouldn't personally join a chat channel, because if I joined it, then it would make me feel bad when someone asks for help and I'm not available to help them. And I feel that a channel should be created by someone who is also volunteering to join and monitor it.\r\n\r\n@leventov could you elaborate more on why you're against a channel?\r\n\r\n@drcrallen my understanding of ASF policy is that decisions must be recorded on ASF infra (i.e. mailing lists or wiki), for legal and recordkeeping reasons. (Btw: github counts, since we archive all github activity to commits@druid.apache.org.) But I assume that this is less strict for general, non-decision-making communication. Fwiw, Kafka has an IRC channel (https://kafka.apache.org/contact). It seems to get a couple of messages a day.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406042168/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406043066","html_url":"https://github.com/apache/druid/pull/6015#issuecomment-406043066","issue_url":"https://api.github.com/repos/apache/druid/issues/6015","id":406043066,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjA0MzA2Ng==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T19:13:49Z","updated_at":"2018-07-18T19:13:49Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406043066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406045358","html_url":"https://github.com/apache/druid/pull/6014#issuecomment-406045358","issue_url":"https://api.github.com/repos/apache/druid/issues/6014","id":406045358,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjA0NTM1OA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T19:22:30Z","updated_at":"2018-07-18T19:24:09Z","author_association":"CONTRIBUTOR","body":"I'm a bit baffled what is blocking here. There are a few competing threads for locks:\r\n\r\n\r\n```\r\n\"HttpClient-Netty-Worker-87\" - Thread t@123\r\n   java.lang.Thread.State: WAITING\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for <28fa59c3> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)\r\n        at java.util.concurrent.LinkedBlockingQueue.put(LinkedBlockingQueue.java:350)\r\n        at io.druid.client.DirectDruidClient$1.handleChunk(DirectDruidClient.java:335)\r\n        at io.druid.java.util.http.client.NettyHttpClient$1.messageReceived(NettyHttpClient.java:225)\r\n        at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n        at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n        at org.jboss.netty.handler.timeout.ReadTimeoutHandler.messageReceived(ReadTimeoutHandler.java:184)\r\n        at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n        at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n        at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:135)\r\n        at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n        at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)\r\n        at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)\r\n        at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)\r\n        at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)\r\n        at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:485)\r\n        at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)\r\n        at org.jboss.netty.handler.codec.http.HttpClientCodec.handleUpstream(HttpClientCodec.java:92)\r\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)\r\n        at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)\r\n        at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)\r\n        at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)\r\n        at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)\r\n        at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)\r\n        at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)\r\n        at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)\r\n        at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)\r\n        at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)\r\n        at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n   Locked ownable synchronizers:\r\n        - locked <576b7c74> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n```\r\n\r\nfor producing into the inputstream queue, and \r\n\r\n```\r\n\"processing-fjp-3\" - Thread t@437\r\n   java.lang.Thread.State: WAITING\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for <4e912efa> (a com.google.common.util.concurrent.AbstractFuture$Sync)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)\r\n        at com.google.common.util.concurrent.AbstractFuture$Sync.get(AbstractFuture.java:285)\r\n        at com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:116)\r\n        at io.druid.client.DirectDruidClient$JsonParserIterator$1.block(DirectDruidClient.java:619)\r\n        at java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3313)\r\n        at io.druid.client.DirectDruidClient$JsonParserIterator.init(DirectDruidClient.java:613)\r\n        at io.druid.client.DirectDruidClient$JsonParserIterator.hasNext(DirectDruidClient.java:574)\r\n        at io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:87)\r\n        at io.druid.java.util.common.guava.BaseSequence.toYielder(BaseSequence.java:67)\r\n        at io.druid.java.util.common.guava.MappedSequence.toYielder(MappedSequence.java:49)\r\n        at io.druid.java.util.common.guava.MergeSequence.lambda$toYielder$0(MergeSequence.java:56)\r\n        at io.druid.java.util.common.guava.MergeSequence$$Lambda$177/186424324.accumulate(Unknown Source)\r\n        at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:45)\r\n        at io.druid.java.util.common.guava.MergeSequence.toYielder(MergeSequence.java:53)\r\n        at io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32)\r\n        at io.druid.java.util.common.guava.Sequence.toList(Sequence.java:76)\r\n        at io.druid.java.util.common.guava.MergeWorkTask.exec(MergeWorkTask.java:199)\r\n        at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n        at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n        at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n        at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n```\r\n\r\nfor initializing the results response.\r\n\r\nAlso \r\n\r\n```\r\n\"processing-fjp-0\" - Thread t@434\r\n   java.lang.Thread.State: TIMED_WAITING\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for <6b5e2920> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)\r\n        at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)\r\n        at io.druid.client.DirectDruidClient$1$2.nextElement(DirectDruidClient.java:303)\r\n        at io.druid.client.DirectDruidClient$1$2.nextElement(DirectDruidClient.java:279)\r\n        at java.io.SequenceInputStream.nextStream(SequenceInputStream.java:110)\r\n        at java.io.SequenceInputStream.read(SequenceInputStream.java:211)\r\n        at com.fasterxml.jackson.dataformat.smile.SmileParser.loadMore(SmileParser.java:412)\r\n        at com.fasterxml.jackson.dataformat.smile.SmileParser.nextToken(SmileParser.java:590)\r\n        at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.mapObject(UntypedObjectDeserializer.java:652)\r\n        at com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserialize(UntypedObjectDeserializer.java:496)\r\n        at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:245)\r\n        at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:217)\r\n        at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:25)\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromArray(BeanDeserializerBase.java:1229)\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:157)\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:136)\r\n        at com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:520)\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeWithErrorWrapping(BeanDeserializer.java:463)\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:378)\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1099)\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:296)\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:133)\r\n        at com.fasterxml.jackson.databind.ObjectMapper._readValue(ObjectMapper.java:3708)\r\n        at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2052)\r\n        at io.druid.client.DirectDruidClient$JsonParserIterator.next(DirectDruidClient.java:593)\r\n        at io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:88)\r\n        at io.druid.java.util.common.guava.BaseSequence.toYielder(BaseSequence.java:67)\r\n        at io.druid.java.util.common.guava.MappedSequence.toYielder(MappedSequence.java:49)\r\n        at io.druid.java.util.common.guava.MergeSequence.lambda$toYielder$0(MergeSequence.java:56)\r\n        at io.druid.java.util.common.guava.MergeSequence$$Lambda$177/186424324.accumulate(Unknown Source)\r\n        at io.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:45)\r\n        at io.druid.java.util.common.guava.MergeSequence.toYielder(MergeSequence.java:53)\r\n        at io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32)\r\n        at io.druid.java.util.common.guava.Sequence.toList(Sequence.java:76)\r\n        at io.druid.java.util.common.guava.MergeWorkTask.exec(MergeWorkTask.java:199)\r\n        at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n        at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n        at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n        at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n```\r\n\r\nfor moving data from the input streams into the merge sequences\r\n\r\nStill looking to see where things are deadlocking","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406045358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406050564","html_url":"https://github.com/apache/druid/pull/6014#issuecomment-406050564","issue_url":"https://api.github.com/repos/apache/druid/issues/6014","id":406050564,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjA1MDU2NA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T19:42:04Z","updated_at":"2018-07-18T19:42:04Z","author_association":"CONTRIBUTOR","body":"as far as I can tell, the problem is that the Channel Future doesn't return from a `get` until the call is completed, but it can't complete because it is waiting for the queue to free up. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406050564/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406072235","html_url":"https://github.com/apache/druid/pull/5998#issuecomment-406072235","issue_url":"https://api.github.com/repos/apache/druid/issues/5998","id":406072235,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjA3MjIzNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T20:58:23Z","updated_at":"2018-07-18T20:58:23Z","author_association":"CONTRIBUTOR","body":"LGTM after Travis. thanks @surekhasaharan!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406072235/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406085513","html_url":"https://github.com/apache/druid/issues/6019#issuecomment-406085513","issue_url":"https://api.github.com/repos/apache/druid/issues/6019","id":406085513,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjA4NTUxMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T21:50:47Z","updated_at":"2018-07-18T21:50:47Z","author_association":"CONTRIBUTOR","body":"Related to https://github.com/apache/incubator-druid/issues/5523.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406085513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406096803","html_url":"https://github.com/apache/druid/pull/5492#issuecomment-406096803","issue_url":"https://api.github.com/repos/apache/druid/issues/5492","id":406096803,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjA5NjgwMw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T22:42:43Z","updated_at":"2018-07-18T22:42:43Z","author_association":"CONTRIBUTOR","body":"LGTM for the overall design and high level working.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406096803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406110033","html_url":"https://github.com/apache/druid/issues/3236#issuecomment-406110033","issue_url":"https://api.github.com/repos/apache/druid/issues/3236","id":406110033,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjExMDAzMw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-18T23:56:41Z","updated_at":"2018-07-18T23:56:41Z","author_association":"MEMBER","body":"@gianm I'm against a Gitter channel for the same reasons as you mentioned, plus I dislike any chats for several more reasons (chats are time sinks; promote shallow thinking; unstructured, it's hard to follow conversations there; not indexed by search engines; etc.)\r\n\r\nThere are plenty of mediums where somebody could ask questions: Github issues, mailing list, [StackOverflow](https://stackoverflow.com/questions/tagged/druid).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406110033/reactions","total_count":1,"+1":0,"-1":1,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406111159","html_url":"https://github.com/apache/druid/pull/6014#issuecomment-406111159","issue_url":"https://api.github.com/repos/apache/druid/issues/6014","id":406111159,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjExMTE1OQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-19T00:03:09Z","updated_at":"2018-07-19T00:03:09Z","author_association":"CONTRIBUTOR","body":"I refactored things a bit and am going to try out a slightly modified direct druid client which only uses the HttpClient code to feed in InputStreams, rather than trying to wait for an entire result to succeed or fail.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406111159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406176897","html_url":"https://github.com/apache/druid/issues/3236#issuecomment-406176897","issue_url":"https://api.github.com/repos/apache/druid/issues/3236","id":406176897,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjE3Njg5Nw==","user":{"login":"matanox","id":4996067,"node_id":"MDQ6VXNlcjQ5OTYwNjc=","avatar_url":"https://avatars.githubusercontent.com/u/4996067?v=4","gravatar_id":"","url":"https://api.github.com/users/matanox","html_url":"https://github.com/matanox","followers_url":"https://api.github.com/users/matanox/followers","following_url":"https://api.github.com/users/matanox/following{/other_user}","gists_url":"https://api.github.com/users/matanox/gists{/gist_id}","starred_url":"https://api.github.com/users/matanox/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matanox/subscriptions","organizations_url":"https://api.github.com/users/matanox/orgs","repos_url":"https://api.github.com/users/matanox/repos","events_url":"https://api.github.com/users/matanox/events{/privacy}","received_events_url":"https://api.github.com/users/matanox/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-19T07:07:50Z","updated_at":"2018-07-19T07:07:50Z","author_association":"NONE","body":"Just to note, chat on gitter/slack work extremely well for some technical communities, some of your aversion is not based on facts but excessive personal apprehension. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406176897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406201106","html_url":"https://github.com/apache/druid/issues/6018#issuecomment-406201106","issue_url":"https://api.github.com/repos/apache/druid/issues/6018","id":406201106,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjIwMTEwNg==","user":{"login":"nicolasblaye","id":10774503,"node_id":"MDQ6VXNlcjEwNzc0NTAz","avatar_url":"https://avatars.githubusercontent.com/u/10774503?v=4","gravatar_id":"","url":"https://api.github.com/users/nicolasblaye","html_url":"https://github.com/nicolasblaye","followers_url":"https://api.github.com/users/nicolasblaye/followers","following_url":"https://api.github.com/users/nicolasblaye/following{/other_user}","gists_url":"https://api.github.com/users/nicolasblaye/gists{/gist_id}","starred_url":"https://api.github.com/users/nicolasblaye/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicolasblaye/subscriptions","organizations_url":"https://api.github.com/users/nicolasblaye/orgs","repos_url":"https://api.github.com/users/nicolasblaye/repos","events_url":"https://api.github.com/users/nicolasblaye/events{/privacy}","received_events_url":"https://api.github.com/users/nicolasblaye/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-19T08:41:02Z","updated_at":"2018-07-19T08:41:02Z","author_association":"NONE","body":"Hi drcrallen,\r\n\r\nThank you for your quick response. Indeed, this class is in the druid server jar, but I need it in the druid-api jar (or at least in the extension).\r\n\r\nMy use case:\r\n\r\nI have globally cached lookups and a java api. The java api gives dashboards using druid queries. The query are done via the java api. In this api, I have no way to call a registered lookup because there is no extractor for it.\r\n\r\nSome code for more precision:\r\n\r\nThis is the request I want to do (and it works using the json api)\r\n``` json\r\n{\r\n  \"dimensions\": [\r\n    {\r\n      \"type\" : \"extraction\",\r\n      \"dimension\" : \"a_dimension\",\r\n      \"outputName\" : \"toto\",\r\n      \"extractionFn\": {\r\n          \"type\":\"registeredLookup\",\r\n          \"lookup\": \"a_lookup\",\r\n          \"retainMissingValue\":true,\r\n          \"injective\":true\r\n      }\r\n    }\r\n  ], \r\n  \"aggregations\": [\r\n    {\r\n      \"type\": \"longSum\", \r\n      \"fieldName\": \"count\", \r\n      \"name\": \"sum__count\"\r\n    }\r\n  ], \r\n  \"intervals\": \"2018-07-13T00:00:00+00:00/2018-07-18T12:56:20+00:00\", \r\n  \"limitSpec\": {\r\n    \"limit\": 5000, \r\n    \"type\": \"default\", \r\n    \"columns\": [\r\n      {\r\n        \"direction\": \"descending\", \r\n        \"dimension\": \"sum__count\"\r\n      }\r\n    ]\r\n  }, \r\n  \"granularity\": \"day\", \r\n  \"postAggregations\": [], \r\n  \"queryType\": \"groupBy\", \r\n  \"dataSource\": \"datasource\"\r\n}\r\n```\r\n\r\nThis is how we try to get the lookup in our java-api. Notice the lookup extractor inside the `LookupExtractionFn`\r\n\r\n``` java\r\n    /**\r\n     * Return the dimension spec of the given column name: it can be a classic column name but also a lookup.\r\n     */\r\n    private static DimensionSpec getDimensionSpec(String name) {\r\n        String lookupFrom = lookups.get(name);\r\n        if (!(lookupFrom == null || lookupFrom.length() == 0)) {\r\n            return new ExtractionDimensionSpec(lookupFrom, name, new LookupExtractionFn(new LookupExtractor(name), true, null, null, null));\r\n        } else {\r\n            return new DefaultDimensionSpec(name, name);\r\n        }\r\n    }\r\n```\r\nAnd this is all the available lookup extractor\r\n```\r\n@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = \"type\")\r\n@JsonSubTypes(value = {\r\n    @JsonSubTypes.Type(name = \"map\", value = MapLookupExtractor.class)\r\n})\r\npublic abstract class LookupExtractor\r\n```\r\n\r\nI looked into https://mvnrepository.com/artifact/io.druid.extensions/druid-lookups-cached-global but couldn't find the `registeredLookup`, only `@JsonTypeName(\"cachedNamespace\")`\r\n\r\nHope this was clearer.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406201106/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406204255","html_url":"https://github.com/apache/druid/issues/6018#issuecomment-406204255","issue_url":"https://api.github.com/repos/apache/druid/issues/6018","id":406204255,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjIwNDI1NQ==","user":{"login":"nicolasblaye","id":10774503,"node_id":"MDQ6VXNlcjEwNzc0NTAz","avatar_url":"https://avatars.githubusercontent.com/u/10774503?v=4","gravatar_id":"","url":"https://api.github.com/users/nicolasblaye","html_url":"https://github.com/nicolasblaye","followers_url":"https://api.github.com/users/nicolasblaye/followers","following_url":"https://api.github.com/users/nicolasblaye/following{/other_user}","gists_url":"https://api.github.com/users/nicolasblaye/gists{/gist_id}","starred_url":"https://api.github.com/users/nicolasblaye/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicolasblaye/subscriptions","organizations_url":"https://api.github.com/users/nicolasblaye/orgs","repos_url":"https://api.github.com/users/nicolasblaye/repos","events_url":"https://api.github.com/users/nicolasblaye/events{/privacy}","received_events_url":"https://api.github.com/users/nicolasblaye/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-19T08:51:54Z","updated_at":"2018-07-19T08:51:54Z","author_association":"NONE","body":"By the way, I did a quick fix for our use case, but it's far from something clean. I created a `RegisteredExtractionFn` (instead of a `RegisteredExtractor`). I would gladly try to make a PR to add the RegisteredExtractor in the druid extensions if it's really not there","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406204255/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406300864","html_url":"https://github.com/apache/druid/pull/5980#issuecomment-406300864","issue_url":"https://api.github.com/repos/apache/druid/issues/5980","id":406300864,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjMwMDg2NA==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-19T14:42:19Z","updated_at":"2018-07-19T14:42:19Z","author_association":"MEMBER","body":"@leventov It seems that both travis and teamcity have succeeded. Any other good suggestions?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406300864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406324839","html_url":"https://github.com/apache/druid/issues/4865#issuecomment-406324839","issue_url":"https://api.github.com/repos/apache/druid/issues/4865","id":406324839,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjMyNDgzOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-19T15:49:56Z","updated_at":"2018-07-19T15:49:56Z","author_association":"CONTRIBUTOR","body":"@stevenchen3 Sorry for the late response, but if you query directly from historicals, you'd want to specify a specific set of segments to each historical (like the broker does) in order to prevent duplicates.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406324839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406325484","html_url":"https://github.com/apache/druid/pull/4949#issuecomment-406325484","issue_url":"https://api.github.com/repos/apache/druid/issues/4949","id":406325484,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjMyNTQ4NA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-19T15:51:59Z","updated_at":"2018-07-19T15:51:59Z","author_association":"CONTRIBUTOR","body":"It looks like #6014 is attempting to solve the same problem.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406325484/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406326473","html_url":"https://github.com/apache/druid/pull/6014#issuecomment-406326473","issue_url":"https://api.github.com/repos/apache/druid/issues/6014","id":406326473,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjMyNjQ3Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-19T15:54:52Z","updated_at":"2018-07-19T15:54:52Z","author_association":"CONTRIBUTOR","body":"@drcrallen, a question: what happens when one query has a huge set of data to pull in, but the others don't? Will the entire broker start to block, or will the \"nice\" queries get to keep gathering data while the \"not nice\" one blocks?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406326473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406384627","html_url":"https://github.com/apache/druid/pull/3956#issuecomment-406384627","issue_url":"https://api.github.com/repos/apache/druid/issues/3956","id":406384627,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjM4NDYyNw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-19T19:14:40Z","updated_at":"2018-07-19T19:14:40Z","author_association":"CONTRIBUTOR","body":"I was just looking at this issue again after the conversations on the mailing list about sketch synchronization: https://lists.apache.org/thread.html/9899aa790a7eb561ab66f47b35c8f66ffe695432719251351339521a@%3Cdev.druid.apache.org%3E\r\n\r\nI was wondering, does it make more sense for thread-safety here to be handled systematically (at the IncrementalIndex) or for each aggregator to be thread safe? Currently we do different approaches: the sketch aggregators endeavor to be thread-safe on their own. The primitive aggregators don't bother to even try, and they're probably fine, since they're primitives. HyperLogLogAggregator tries a little bit -- it at least makes sure the different calls use different buffer objects -- but I bet it has a bug where \"get\" could potentially read something weird and corrupt in some rare situations. (Like if the offset is being updated while a \"get\" is going on.)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406384627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406387424","html_url":"https://github.com/apache/druid/issues/3236#issuecomment-406387424","issue_url":"https://api.github.com/repos/apache/druid/issues/3236","id":406387424,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjM4NzQyNA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-19T19:25:42Z","updated_at":"2018-07-19T19:25:42Z","author_association":"CONTRIBUTOR","body":"We do already have an IRC channel, and there are some nice web based IRC clients. IMO if you are interested in a chat channel being a more active part of the community, the best way to accomplish that is to take charge: join the IRC channel, encourage others to do so in the easiest way possible, and help people when they show up asking about stuff. If enough people do that then it will become a thing.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406387424/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406387771","html_url":"https://github.com/apache/druid/pull/3956#issuecomment-406387771","issue_url":"https://api.github.com/repos/apache/druid/issues/3956","id":406387771,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjM4Nzc3MQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-19T19:27:08Z","updated_at":"2018-07-19T19:27:08Z","author_association":"MEMBER","body":"Dealing with this issue systematically means taking the most conservative approach - synchronization, while some aggregators could definitely do better (lock-free)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406387771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406445172","html_url":"https://github.com/apache/druid/pull/5471#issuecomment-406445172","issue_url":"https://api.github.com/repos/apache/druid/issues/5471","id":406445172,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjQ0NTE3Mg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-19T23:34:33Z","updated_at":"2018-07-19T23:34:33Z","author_association":"CONTRIBUTOR","body":"Hi @samarthjain, sorry for the delay. I'm looking at this PR again, and the size of this PR looks huge. Would you check that this PR contains only your changes?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406445172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406658412","html_url":"https://github.com/apache/druid/issues/5117#issuecomment-406658412","issue_url":"https://api.github.com/repos/apache/druid/issues/5117","id":406658412,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjY1ODQxMg==","user":{"login":"diliptechno","id":29690275,"node_id":"MDQ6VXNlcjI5NjkwMjc1","avatar_url":"https://avatars.githubusercontent.com/u/29690275?v=4","gravatar_id":"","url":"https://api.github.com/users/diliptechno","html_url":"https://github.com/diliptechno","followers_url":"https://api.github.com/users/diliptechno/followers","following_url":"https://api.github.com/users/diliptechno/following{/other_user}","gists_url":"https://api.github.com/users/diliptechno/gists{/gist_id}","starred_url":"https://api.github.com/users/diliptechno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/diliptechno/subscriptions","organizations_url":"https://api.github.com/users/diliptechno/orgs","repos_url":"https://api.github.com/users/diliptechno/repos","events_url":"https://api.github.com/users/diliptechno/events{/privacy}","received_events_url":"https://api.github.com/users/diliptechno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-20T16:45:35Z","updated_at":"2018-07-20T16:45:35Z","author_association":"NONE","body":"how did you fix this problem?\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406658412/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406683868","html_url":"https://github.com/apache/druid/pull/5471#issuecomment-406683868","issue_url":"https://api.github.com/repos/apache/druid/issues/5471","id":406683868,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjY4Mzg2OA==","user":{"login":"samarthjain","id":1642180,"node_id":"MDQ6VXNlcjE2NDIxODA=","avatar_url":"https://avatars.githubusercontent.com/u/1642180?v=4","gravatar_id":"","url":"https://api.github.com/users/samarthjain","html_url":"https://github.com/samarthjain","followers_url":"https://api.github.com/users/samarthjain/followers","following_url":"https://api.github.com/users/samarthjain/following{/other_user}","gists_url":"https://api.github.com/users/samarthjain/gists{/gist_id}","starred_url":"https://api.github.com/users/samarthjain/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/samarthjain/subscriptions","organizations_url":"https://api.github.com/users/samarthjain/orgs","repos_url":"https://api.github.com/users/samarthjain/repos","events_url":"https://api.github.com/users/samarthjain/events{/privacy}","received_events_url":"https://api.github.com/users/samarthjain/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-20T18:11:50Z","updated_at":"2018-07-20T18:11:50Z","author_association":"CONTRIBUTOR","body":"@jihoonson - the PR contains my changes only.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406683868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406690368","html_url":"https://github.com/apache/druid/pull/5496#issuecomment-406690368","issue_url":"https://api.github.com/repos/apache/druid/issues/5496","id":406690368,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjY5MDM2OA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-20T18:34:53Z","updated_at":"2018-07-20T18:34:53Z","author_association":"MEMBER","body":"@gianm @jihoonson you could change any PR title, please do this in such situations to keep commit messages readable.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406690368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406691347","html_url":"https://github.com/apache/druid/pull/5471#issuecomment-406691347","issue_url":"https://api.github.com/repos/apache/druid/issues/5471","id":406691347,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjY5MTM0Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-20T18:38:16Z","updated_at":"2018-07-20T18:38:16Z","author_association":"CONTRIBUTOR","body":"@samarthjain thanks. It looks the huge patch size is because of test data. I think it's fine. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406691347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406711317","html_url":"https://github.com/apache/druid/issues/6026#issuecomment-406711317","issue_url":"https://api.github.com/repos/apache/druid/issues/6026","id":406711317,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjcxMTMxNw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-20T20:00:20Z","updated_at":"2018-07-20T20:00:20Z","author_association":"CONTRIBUTOR","body":"Core Druid doesn't add CORS headers, I believe some people have been using this extension https://github.com/acesinc/druid-cors-filter-extension for that","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406711317/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406726910","html_url":"https://github.com/apache/druid/issues/6028#issuecomment-406726910","issue_url":"https://api.github.com/repos/apache/druid/issues/6028","id":406726910,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjcyNjkxMA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-20T21:05:41Z","updated_at":"2018-07-20T21:05:41Z","author_association":"CONTRIBUTOR","body":"Where did you see this error? This test passes in my local machine.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406726910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406727444","html_url":"https://github.com/apache/druid/issues/6028#issuecomment-406727444","issue_url":"https://api.github.com/repos/apache/druid/issues/6028","id":406727444,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjcyNzQ0NA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-20T21:08:17Z","updated_at":"2018-07-20T21:11:05Z","author_association":"MEMBER","body":"I have encountered this error before as well, it does not happen often, though it was rather recent (~2 weeks ago) so I wonder if something has changed that has agitated this.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406727444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406736568","html_url":"https://github.com/apache/druid/pull/6029#issuecomment-406736568","issue_url":"https://api.github.com/repos/apache/druid/issues/6029","id":406736568,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjczNjU2OA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-20T21:54:47Z","updated_at":"2018-07-20T21:54:47Z","author_association":"MEMBER","body":"Thank you","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406736568/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406755108","html_url":"https://github.com/apache/druid/pull/5913#issuecomment-406755108","issue_url":"https://api.github.com/repos/apache/druid/issues/5913","id":406755108,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjc1NTEwOA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-21T00:09:21Z","updated_at":"2018-07-21T00:09:21Z","author_association":"CONTRIBUTOR","body":"This will require some changes before going in. A huge portion of merge work is not accounted for in a parallel mechanism. I'm working on a fix","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406755108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406756225","html_url":"https://github.com/apache/druid/issues/6028#issuecomment-406756225","issue_url":"https://api.github.com/repos/apache/druid/issues/6028","id":406756225,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjc1NjIyNQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-21T00:20:52Z","updated_at":"2018-07-21T00:25:17Z","author_association":"MEMBER","body":"I think the problem is that `SQLMetadataRuleManager.poll()` is scheduled to be called asynchronously in a dedicated executor in `SQLMetadataRuleManager.start()`. `poll()` makes an inner join of the rules table with itself, that appears to be enough to cause a deadlock when the drop of this table is called in parallel (it is called in `SQLMetadataRuleManagerTest.cleanup()`.\r\n\r\nThe problem was introduced in #5554, where the `SQLMetadataRuleManagerTest.testMultipleStopAndStart()` was added which calls `start()` and `stop()` repeatedly. Before, `SQLMetadataRuleManager.start()` was not ever called in the context of `SQLMetadataRuleManagerTest`.\r\n\r\nExtra coincidental problem that leads to this condition is that `stop()` (that pairs `start()` calls in `testMultipleStopAndStart()`) is not actually synchronous. By the time when `stop()` exists, some `poll()` may still be executed. To ensure this is not the case, `exec.awaitTermination()` should be called. But this is awkward, because we don't know what timeout we should use. Alternatively, `poll()` could be synchronized together with `start()` and `stop()` (the `started` flag should be checked under the lock in `poll()`).\r\n\r\nExtra:\r\n - There is no point in `future` and `exec` being volatile.\r\n - `future.cancel` is redundant before `shutdownNow()`.\r\n - There is a race on `retryStartTime` updates in `poll()`.\r\n - It feels to me that `SQLMetadataRuleManager` mixes two separate abstractions - one of scheduled polling, and another of the access to the database itself (including the implementation of `poll()`). But I'm uncertain about this.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406756225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406758752","html_url":"https://github.com/apache/druid/issues/3236#issuecomment-406758752","issue_url":"https://api.github.com/repos/apache/druid/issues/3236","id":406758752,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjc1ODc1Mg==","user":{"login":"joshlemer","id":5122903,"node_id":"MDQ6VXNlcjUxMjI5MDM=","avatar_url":"https://avatars.githubusercontent.com/u/5122903?v=4","gravatar_id":"","url":"https://api.github.com/users/joshlemer","html_url":"https://github.com/joshlemer","followers_url":"https://api.github.com/users/joshlemer/followers","following_url":"https://api.github.com/users/joshlemer/following{/other_user}","gists_url":"https://api.github.com/users/joshlemer/gists{/gist_id}","starred_url":"https://api.github.com/users/joshlemer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshlemer/subscriptions","organizations_url":"https://api.github.com/users/joshlemer/orgs","repos_url":"https://api.github.com/users/joshlemer/repos","events_url":"https://api.github.com/users/joshlemer/events{/privacy}","received_events_url":"https://api.github.com/users/joshlemer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-21T00:55:20Z","updated_at":"2018-07-21T00:55:20Z","author_association":"NONE","body":"@gianm @leventov just because you don't personally like to use these tools doesn't mean that others don't find them useful. I personally participate in many gitter chats including those for the Scala and Rust communities, and including apache projects like Beam and Spark (Beam has a slack channel on the official apache slack instance, and spark has many gitter channels). While many questions that go on in these channels are beginner questions, that's fine. And at the same time, lots of very senior people in the community hang out in there and talk about very advanced topics. \r\n\r\nIRC is terrible for online discussion because you can't see history, you can't share code, you can't see who has seen your messages, there are no avatars / connection to identity, etc etc etc. At least consider the fact that multiple people have asked for it, which implies a much larger amount of people who would use it but haven't asked.   ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406758752/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406767478","html_url":"https://github.com/apache/druid/issues/3236#issuecomment-406767478","issue_url":"https://api.github.com/repos/apache/druid/issues/3236","id":406767478,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjc2NzQ3OA==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-21T03:30:50Z","updated_at":"2018-07-21T03:30:50Z","author_association":"MEMBER","body":"Hi, all. IMHO, we all know the shortcomings of live chat, we can't archive these chats as a structured document system for later search. However, it still cannot deny its advantages. We can use timely communication tools to bring together Druid users and developers, making communication and thought collisions more convenient. In china, we created some druid QQ / wechat groups to talk, and we helped each other solve many problems, also we shared our thoughts and resources in group. If you feel that it is necessary, I can contribute some QQ, wechat groups. However, this still depends on you. BTW, [PR#6002](https://github.com/apache/incubator-druid/pull/6002) has been created for IRC#druid-dev,  and we will see [![IRC#druid-dev](https://img.shields.io/badge/IRC-druid--dev-blue.svg)](https://webchat.freenode.net?channels=druid-dev) in README doc. In addition, we can add qq groups like this. [![1670647](https://img.shields.io/badge/QQ%E7%BE%A4-1670647-blue.svg)](https://shang.qq.com/wpa/qunwpa?idkey=f86b3c8de20da1658a3bb42df17a2fc4eee0d75c4a130a63585fdd257e3565ed)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406767478/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406767668","html_url":"https://github.com/apache/druid/pull/5980#issuecomment-406767668","issue_url":"https://api.github.com/repos/apache/druid/issues/5980","id":406767668,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjc2NzY2OA==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-21T03:36:01Z","updated_at":"2018-07-21T03:36:01Z","author_association":"MEMBER","body":"Hi, @leventov . Thanks for your review. The `RedundantTypeArguments` has been added as an ERROR level check and `teamcity` has also been passed. PTAL.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406767668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406768847","html_url":"https://github.com/apache/druid/pull/6002#issuecomment-406768847","issue_url":"https://api.github.com/repos/apache/druid/issues/6002","id":406768847,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjc2ODg0Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-21T04:06:15Z","updated_at":"2018-07-21T04:06:15Z","author_association":"CONTRIBUTOR","body":"LGTM. Please resolve conflicts.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406768847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406774449","html_url":"https://github.com/apache/druid/pull/5980#issuecomment-406774449","issue_url":"https://api.github.com/repos/apache/druid/issues/5980","id":406774449,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjc3NDQ0OQ==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-21T06:28:01Z","updated_at":"2018-07-21T06:28:01Z","author_association":"MEMBER","body":"You are welcome. In the process, I also learned a lot. :+1:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406774449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406774658","html_url":"https://github.com/apache/druid/pull/6002#issuecomment-406774658","issue_url":"https://api.github.com/repos/apache/druid/issues/6002","id":406774658,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjc3NDY1OA==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-21T06:33:05Z","updated_at":"2018-07-21T06:33:05Z","author_association":"MEMBER","body":"@jihoonson Thank you for your comment. It has been fixed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406774658/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406821311","html_url":"https://github.com/apache/druid/issues/6013#issuecomment-406821311","issue_url":"https://api.github.com/repos/apache/druid/issues/6013","id":406821311,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjgyMTMxMQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-21T20:21:44Z","updated_at":"2018-07-21T20:21:44Z","author_association":"CONTRIBUTOR","body":"https://travis-ci.org/apache/incubator-druid/jobs/406526243\r\n\r\n```\r\nTests run: 24, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 2.09 sec <<< FAILURE! - in io.druid.segment.data.CompressedVSizeColumnarIntsSerializerTest\r\ntestMultiValueFileLargeData[0: compression=lz4, byteOrder=BIG_ENDIAN](io.druid.segment.data.CompressedVSizeColumnarIntsSerializerTest)  Time elapsed: 0.097 sec  <<< ERROR!\r\nio.druid.java.util.common.ISE: First line should be version,maxChunkSize,numChunks, got null.\r\n\tat io.druid.java.util.common.io.smoosh.SmooshedFileMapper.load(SmooshedFileMapper.java:58)\r\n\tat io.druid.java.util.common.io.smoosh.Smoosh.map(Smoosh.java:32)\r\n\tat io.druid.segment.data.CompressedVSizeColumnarIntsSerializerTest.checkV2SerializedSizeAndData(CompressedVSizeColumnarIntsSerializerTest.java:214)\r\n\tat io.druid.segment.data.CompressedVSizeColumnarIntsSerializerTest.testMultiValueFileLargeData(CompressedVSizeColumnarIntsSerializerTest.java:235)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:127)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:26)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:127)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:26)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeLazy(JUnitCoreWrapper.java:119)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:87)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:161)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406821311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406821836","html_url":"https://github.com/apache/druid/pull/6002#issuecomment-406821836","issue_url":"https://api.github.com/repos/apache/druid/issues/6002","id":406821836,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjgyMTgzNg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-21T20:31:31Z","updated_at":"2018-07-21T20:31:31Z","author_association":"CONTRIBUTOR","body":"I'm shortly merging this PR without waiting travis CI.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406821836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406869180","html_url":"https://github.com/apache/druid/pull/3956#issuecomment-406869180","issue_url":"https://api.github.com/repos/apache/druid/issues/3956","id":406869180,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjg2OTE4MA==","user":{"login":"Eshcar","id":4384969,"node_id":"MDQ6VXNlcjQzODQ5Njk=","avatar_url":"https://avatars.githubusercontent.com/u/4384969?v=4","gravatar_id":"","url":"https://api.github.com/users/Eshcar","html_url":"https://github.com/Eshcar","followers_url":"https://api.github.com/users/Eshcar/followers","following_url":"https://api.github.com/users/Eshcar/following{/other_user}","gists_url":"https://api.github.com/users/Eshcar/gists{/gist_id}","starred_url":"https://api.github.com/users/Eshcar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Eshcar/subscriptions","organizations_url":"https://api.github.com/users/Eshcar/orgs","repos_url":"https://api.github.com/users/Eshcar/repos","events_url":"https://api.github.com/users/Eshcar/events{/privacy}","received_events_url":"https://api.github.com/users/Eshcar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-22T14:04:48Z","updated_at":"2018-07-22T14:04:48Z","author_association":"NONE","body":"> Synchronization should be done inside aggregators, because simple aggregators could use cheaper atomics instead of intrinsic locks.\r\n\r\nI agree. This is what we hope to do now in sketches-core, add concurrent (thread-safe) sketches that use lightweight synchronization. The first step is adding concurrent theta sketch, which can be followed by a concurrent union implementation. Later additional concurrent sketches can be added to the library (we already have an implementation of a concurrent quantile sketch).  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406869180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/406901637","html_url":"https://github.com/apache/druid/pull/6016#issuecomment-406901637","issue_url":"https://api.github.com/repos/apache/druid/issues/6016","id":406901637,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNjkwMTYzNw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-22T22:21:12Z","updated_at":"2018-07-22T22:21:12Z","author_association":"MEMBER","body":"Some high-level thoughts:\r\n - It would be really nice if along or before this PR something was done to make the segment format system more structured: #5347.\r\n - The query processing monomorphization framework (#4079) should now work per-block rather than per-interval, unless all encodings in the shape-shifting framework always do something like filling an `int[]` array or a ByteBuffer.\r\n - Could you please elaborate why `Memory` didn't work for you well?\r\n - > A downside of the current pooling approach I have in place is that each different block size has it's own set of pools to support it, so if multiple block sizes are used in practice, it will be a larger amount of heap and direct overhead.\r\n\r\n   Why the same maximum-sized objects couldn't be used for blocks of any size, similarly how it is currently done with column compression buffers?\r\n\r\nAlso, in case you didn't see this article: https://lemire.me/blog/2018/04/17/iterating-in-batches-over-data-structures-can-be-much-faster/, it might give you some ideas about block sizing in general.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/406901637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407011699","html_url":"https://github.com/apache/druid/issues/6025#issuecomment-407011699","issue_url":"https://api.github.com/repos/apache/druid/issues/6025","id":407011699,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzAxMTY5OQ==","user":{"login":"ashukhira","id":16459130,"node_id":"MDQ6VXNlcjE2NDU5MTMw","avatar_url":"https://avatars.githubusercontent.com/u/16459130?v=4","gravatar_id":"","url":"https://api.github.com/users/ashukhira","html_url":"https://github.com/ashukhira","followers_url":"https://api.github.com/users/ashukhira/followers","following_url":"https://api.github.com/users/ashukhira/following{/other_user}","gists_url":"https://api.github.com/users/ashukhira/gists{/gist_id}","starred_url":"https://api.github.com/users/ashukhira/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashukhira/subscriptions","organizations_url":"https://api.github.com/users/ashukhira/orgs","repos_url":"https://api.github.com/users/ashukhira/repos","events_url":"https://api.github.com/users/ashukhira/events{/privacy}","received_events_url":"https://api.github.com/users/ashukhira/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-23T10:25:07Z","updated_at":"2018-07-23T10:25:07Z","author_association":"NONE","body":"Hi ,\r\nOn this druid forum somebody , provide solution for above druid query error . Removing limitSpec Column node query gives proper result.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407011699/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407127405","html_url":"https://github.com/apache/druid/issues/5006#issuecomment-407127405","issue_url":"https://api.github.com/repos/apache/druid/issues/5006","id":407127405,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzEyNzQwNQ==","user":{"login":"RestfulBlue","id":32250229,"node_id":"MDQ6VXNlcjMyMjUwMjI5","avatar_url":"https://avatars.githubusercontent.com/u/32250229?v=4","gravatar_id":"","url":"https://api.github.com/users/RestfulBlue","html_url":"https://github.com/RestfulBlue","followers_url":"https://api.github.com/users/RestfulBlue/followers","following_url":"https://api.github.com/users/RestfulBlue/following{/other_user}","gists_url":"https://api.github.com/users/RestfulBlue/gists{/gist_id}","starred_url":"https://api.github.com/users/RestfulBlue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RestfulBlue/subscriptions","organizations_url":"https://api.github.com/users/RestfulBlue/orgs","repos_url":"https://api.github.com/users/RestfulBlue/repos","events_url":"https://api.github.com/users/RestfulBlue/events{/privacy}","received_events_url":"https://api.github.com/users/RestfulBlue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-23T16:57:00Z","updated_at":"2018-07-23T16:57:00Z","author_association":"NONE","body":"Any updates? Druid still can be killed by OOM using simple select query. of course I can use restrictions, but not all users understand what they are doing and the fact that users can very simply drop the entire cluster does not please me. Is it really hard to implement restriction for select query in configuration? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407127405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407161433","html_url":"https://github.com/apache/druid/pull/6036#issuecomment-407161433","issue_url":"https://api.github.com/repos/apache/druid/issues/6036","id":407161433,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzE2MTQzMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-23T18:46:24Z","updated_at":"2018-07-23T18:46:24Z","author_association":"CONTRIBUTOR","body":"Hi @gaodayue, thanks for the PR. I have a question.\r\n\r\n> In many organization, Hadoop and HDFS are typically used in offline data analysis, while Druid is targeting online data serving. Thus SLA provided by HDFS often can't meet the needs of Druid. \r\n\r\n- I think, if this is the case, you might need to somehow increase write throughput of your HDFS or use a separate deep storage. If the first option is not available for you, does it make sense to use only S3 as your deep storage?\r\n\r\nFor the idea of this PR, I'm not sure it is a good idea. Maybe we need to define the concept of backup deep storage for all deep storage types and support it. Maybe the primary deep storage and backup deep storage should be in sync automatically. \r\n\r\nBut, this PR is restricted to support it for only HDFS deep storage and looks to require another tool, called `restore-hdfs-segment`, to keep all segments to reside in HDFS. This would need additional operations which make Druid operation difficult. \r\n\r\nSide comment: Kafka indexing service guarantees exactly-once data ingestion, and thus data loss is never expected to happen. If deep storage is not available, all attempts to publish segments would fail and every task should restart from the same offset when publishing failed. This needs reprocessing the same data which can make the ingestion slow, but there should be no data loss or data duplication. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407161433/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407166896","html_url":"https://github.com/apache/druid/issues/6028#issuecomment-407166896","issue_url":"https://api.github.com/repos/apache/druid/issues/6028","id":407166896,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzE2Njg5Ng==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-23T19:04:55Z","updated_at":"2018-07-23T19:04:55Z","author_association":"CONTRIBUTOR","body":"Thanks @leventov. Probably `SQLMetadataSegmentManager` has the same bug. I'll check it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407166896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407269663","html_url":"https://github.com/apache/druid/issues/6037#issuecomment-407269663","issue_url":"https://api.github.com/repos/apache/druid/issues/6037","id":407269663,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzI2OTY2Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T03:32:59Z","updated_at":"2018-07-24T03:32:59Z","author_association":"CONTRIBUTOR","body":"I have seen this happen with older versions of javac; perhaps try upgrading that (looks like your jdk is 1.8.0_60).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407269663/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407288499","html_url":"https://github.com/apache/druid/pull/6036#issuecomment-407288499","issue_url":"https://api.github.com/repos/apache/druid/issues/6036","id":407288499,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzI4ODQ5OQ==","user":{"login":"gaodayue","id":1198446,"node_id":"MDQ6VXNlcjExOTg0NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1198446?v=4","gravatar_id":"","url":"https://api.github.com/users/gaodayue","html_url":"https://github.com/gaodayue","followers_url":"https://api.github.com/users/gaodayue/followers","following_url":"https://api.github.com/users/gaodayue/following{/other_user}","gists_url":"https://api.github.com/users/gaodayue/gists{/gist_id}","starred_url":"https://api.github.com/users/gaodayue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaodayue/subscriptions","organizations_url":"https://api.github.com/users/gaodayue/orgs","repos_url":"https://api.github.com/users/gaodayue/repos","events_url":"https://api.github.com/users/gaodayue/events{/privacy}","received_events_url":"https://api.github.com/users/gaodayue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T05:47:25Z","updated_at":"2018-07-24T05:47:25Z","author_association":"CONTRIBUTOR","body":"Hi @jihoonson , thanks for your comments. Answering your question\r\n\r\n> I think, if this is the case, you might need to somehow increase write throughput of your HDFS or use a separate deep storage. If the first option is not available for you, does it make sense to use only S3 as your deep storage?\r\n\r\nOur company operates its own big hadoop cluster (>5k nodes) for us to use. Switching to s3-deep-storage requires extra cost and is not an option for us.\r\n\r\n> Maybe we need to define the concept of backup deep storage for all deep storage types and support it. \r\n\r\nI've thought about implementing something like composite-deep-storage which can add backup abilities to all deep storages at first, but found it's non-trivial to load multiple deep storage extensions inside composite-deep-storage. So I decide to add support hdfs-deep-storage only just because we're using it.\r\n\r\n> Maybe the primary deep storage and backup deep storage should be in sync automatically.\r\n\r\nWhat do you mean by \"in sync\"? Do you mean all segments pushed to backup storage should be copied back to primary storage eventually? If that's the case, I don't think there is a strong need for it (explained below). \r\n\r\n> But, this PR is restricted to support it for only HDFS deep storage and looks to require another tool, called restore-hdfs-segment, to keep all segments to reside in HDFS. This would need additional operations which make Druid operation difficult.\r\n\r\nFirst, the restore-hdfs-segment tool is not required to achieve the goal of hdfs fault tolerant. I developed it for other reasons. One is to pay less for S3 and the other is that we occasionally need to migrate datasource from one cluster to another, and we want all segments reside on hdfs so that we can simply use the insert-segment-to-db tool to migrate all segments. If other users don't have the same concern, they can simply ignore restore-hdfs-segment.\r\n\r\nSecond, concerning operation complexity, I think it's just a trade-off made between availability and cost. And the extra operational cost is as low as run restore-hdfs-segment manually after a hdfs failure or set up a daily crontab to run restore-hdfs-segment.\r\n\r\n> Kafka indexing service guarantees exactly-once data ingestion, and thus data loss is never expected to happen. If deep storage is not available, all attempts to publish segments would fail and every task should restart from the same offset when publishing failed. \r\n\r\nYeah I'm aware of it. But for other reasons we are still using tranquility as the main ingestion tool and hdfs failure do cause data loss several times and it's a big pain for us. We've added this feature to solve the problem, and I think maybe it's also useful for other people.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407288499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407462520","html_url":"https://github.com/apache/druid/pull/5958#issuecomment-407462520","issue_url":"https://api.github.com/repos/apache/druid/issues/5958","id":407462520,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzQ2MjUyMA==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T16:09:26Z","updated_at":"2018-07-24T16:09:26Z","author_association":"MEMBER","body":"@leventov @jihoonson : Thanks for the review comments, addressed them. \r\nDo you have any more comments ? \r\nAlso, can you please add some info on how much of the review is pending and when can we expect to merge this one in.\r\nIts blocking feature development/patches for Apache Hive Integration for handling nulls coming from druid properly. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407462520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407494838","html_url":"https://github.com/apache/druid/issues/6037#issuecomment-407494838","issue_url":"https://api.github.com/repos/apache/druid/issues/6037","id":407494838,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzQ5NDgzOA==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T17:52:08Z","updated_at":"2018-07-24T17:52:08Z","author_association":"CONTRIBUTOR","body":"0.12.1 release works, but doesn't have the module I wanted to play with.\r\n1.8.0_60 jdk seems to be the latest available in our corporate environment at the moment.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407494838/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407496867","html_url":"https://github.com/apache/druid/issues/6037#issuecomment-407496867","issue_url":"https://api.github.com/repos/apache/druid/issues/6037","id":407496867,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzQ5Njg2Nw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T17:58:27Z","updated_at":"2018-07-24T17:58:27Z","author_association":"CONTRIBUTOR","body":"The release should work, since the issue (I believe) is with the javac compiler, not with the runtime. Maybe you could try building the package with a newer jdk and then running it on the _60 environment?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407496867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407502404","html_url":"https://github.com/apache/druid/pull/3956#issuecomment-407502404","issue_url":"https://api.github.com/repos/apache/druid/issues/3956","id":407502404,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzUwMjQwNA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T18:15:25Z","updated_at":"2018-07-24T18:15:59Z","author_association":"CONTRIBUTOR","body":"In general, I agree with @leventov  here because different aggregators can handle concurrency with varying degree of efficiency.\r\nUnless, of course, there is a systematic way to do things that takes care of above e.g. introducing \"boolean isThreadSafe()\" method or something like that on Aggregator and then based on the answer, handle things correctly in IncrementalIndex. Then Aggregators can make the choice.\r\nOr else, I think aggregators not handling it properly are just buggy and should be fixed. Maybe update the aggregator doc with some blurbs on thread safety requirements.\r\n\r\nThat said, we need synchronization only for realtime indexing code path and historical nodes pay the penalty of thread safety unnecessarily. If we could do something systematic to change the two code paths in some way that allows historicals not paying for thread safety, that would be good.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407502404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407504015","html_url":"https://github.com/apache/druid/pull/5980#issuecomment-407504015","issue_url":"https://api.github.com/repos/apache/druid/issues/5980","id":407504015,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzUwNDAxNQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T18:20:39Z","updated_at":"2018-07-24T18:20:39Z","author_association":"CONTRIBUTOR","body":"@asdf2014 would you update the PR description to include additional changes? E.g., Added new inspection/checkstyle rules.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407504015/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407531280","html_url":"https://github.com/apache/druid/issues/6037#issuecomment-407531280","issue_url":"https://api.github.com/repos/apache/druid/issues/6037","id":407531280,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzUzMTI4MA==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T19:54:36Z","updated_at":"2018-07-24T19:54:36Z","author_association":"CONTRIBUTOR","body":"I built the package on my Mac laptop with java 1.8.0_40.\r\nI tried building on the target Linux machine with 1.8.0_60, but got exactly the same result","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407531280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/407531966","html_url":"https://github.com/apache/druid/issues/6037#issuecomment-407531966","issue_url":"https://api.github.com/repos/apache/druid/issues/6037","id":407531966,"node_id":"MDEyOklzc3VlQ29tbWVudDQwNzUzMTk2Ng==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-24T19:57:02Z","updated_at":"2018-07-24T19:57:02Z","author_association":"CONTRIBUTOR","body":"The latest version of Java 8 is `1.8.0_181`. Try that one.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/407531966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]