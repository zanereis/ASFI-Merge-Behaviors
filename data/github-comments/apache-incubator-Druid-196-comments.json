[{"url":"https://api.github.com/repos/apache/druid/issues/comments/410102421","html_url":"https://github.com/apache/druid/pull/6047#issuecomment-410102421","issue_url":"https://api.github.com/repos/apache/druid/issues/6047","id":410102421,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDEwMjQyMQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T23:52:14Z","updated_at":"2018-08-02T23:52:14Z","author_association":"CONTRIBUTOR","body":"@hpandeycodeit For that error, you'd want to adjust `-XX:MaxDirectMemorySize=4096m` in the `jvm.config` file for the corresponding service","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410102421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410119637","html_url":"https://github.com/apache/druid/pull/6090#issuecomment-410119637","issue_url":"https://api.github.com/repos/apache/druid/issues/6090","id":410119637,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDExOTYzNw==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T01:49:58Z","updated_at":"2018-08-03T01:55:54Z","author_association":"MEMBER","body":"Hi, @jihoonson . Yep, that's right. :+1: Perhaps something in this PR is still useful, for example, use `channel.isOpen()` to check that the channel is open before call `channel.close()` method and use `ExpectedException` instead of `Assert.assertTrue`. Do you want me to close this, or change the title and keep those useful changes, or patch [these changes](https://github.com/apache/incubator-druid/compare/master...jihoonson:fix-netty-client?expand=1) to this PR? :sweat_smile:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410119637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410120923","html_url":"https://github.com/apache/druid/pull/6090#issuecomment-410120923","issue_url":"https://api.github.com/repos/apache/druid/issues/6090","id":410120923,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDEyMDkyMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T01:58:40Z","updated_at":"2018-08-03T01:58:40Z","author_association":"CONTRIBUTOR","body":"@asdf2014 yes, they are definitely useful. If you want, I think it's worth to keep those useful changes and change the title. Also, if you want, you can merge [these changes](https://github.com/apache/incubator-druid/compare/master...jihoonson:fix-netty-client?expand=1) to this PR as well.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410120923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410121501","html_url":"https://github.com/apache/druid/pull/6090#issuecomment-410121501","issue_url":"https://api.github.com/repos/apache/druid/issues/6090","id":410121501,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDEyMTUwMQ==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T02:02:02Z","updated_at":"2018-08-03T02:02:02Z","author_association":"MEMBER","body":"@jihoonson Okay, I keep those changes, and patch them to get the job done. Thanks for your comments.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410121501/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410140748","html_url":"https://github.com/apache/druid/pull/6072#issuecomment-410140748","issue_url":"https://api.github.com/repos/apache/druid/issues/6072","id":410140748,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDE0MDc0OA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T04:25:35Z","updated_at":"2018-08-03T04:25:35Z","author_association":"CONTRIBUTOR","body":"@chengchengpei sorry for the fragile unit tests. I'll restart the failed ones if exist.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410140748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410153475","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-410153475","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":410153475,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDE1MzQ3NQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T06:01:31Z","updated_at":"2018-08-03T06:09:00Z","author_association":"MEMBER","body":"I ran some additional benchmarks after realizing that the generated rows from previous benchmarks were rows with no opportunity for actual rollup to occur (all segments were approximately the same size for the numbers above).\r\n\r\nHere are timeseries benches\r\n\r\nwith moderate rollup opportunity:\r\n```\r\nBenchmark                                        (numSegments)     (rollupSchema)  (rowsPerSegment)  (schemaAndQuery)  Mode  Cnt       Score       Error  Units\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1          no-rollup            750000           basic.A  avgt   25  663840.128 ± 26363.127  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1  ordered-no-rollup            750000           basic.A  avgt   25  679784.179 ± 81577.842  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1             rollup            750000           basic.A  avgt   25   62446.589 ±  2224.296  us/op\r\n\r\nno-rollup:          size [22387432] bytes.\r\nordered-no-rollup:  size [18195470] bytes.\r\nrollup:             size [2206430] bytes.\r\n```\r\n\r\nand heavy rollup potential:\r\n```\r\nBenchmark                                        (numSegments)     (rollupSchema)  (rowsPerSegment)  (schemaAndQuery)  Mode  Cnt       Score       Error  Units\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1          no-rollup            750000           basic.A  avgt   25  653316.845 ± 31964.338  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1  ordered-no-rollup            750000           basic.A  avgt   25  769623.711 ± 12299.182  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1             rollup            750000           basic.A  avgt   25    6545.777 ±   607.087  us/op\r\n\r\nno-rollup:          size [22383561] bytes.\r\nordered-no-rollup:  size [16900327] bytes.\r\nrollup:             size [237206] bytes.\r\n```\r\n\r\nand TopN:\r\nmoderate rollup:\r\n```\r\nBenchmark                                  (numSegments)     (rollupSchema)  (rowsPerSegment)  (schemaAndQuery)  (threshold)  Mode  Cnt       Score      Error  Units\r\nTopNBenchmark.querySingleIncrementalIndex              1          no-rollup            750000           basic.A           10  avgt   25  893805.325 ± 9592.710  us/op\r\nTopNBenchmark.querySingleIncrementalIndex              1  ordered-no-rollup            750000           basic.A           10  avgt   25  898036.822 ± 8052.554  us/op\r\nTopNBenchmark.querySingleIncrementalIndex              1             rollup            750000           basic.A           10  avgt   25   86100.936 ± 2844.073  us/op\r\n\r\nno-rollup:          size [22387432] bytes.\r\nordered-no-rollup:  size [18195470] bytes.\r\nrollup:             size [2206430] bytes.\r\n\r\n```\r\n\r\nheavy rollup:\r\n```\r\nBenchmark                                  (numSegments)     (rollupSchema)  (rowsPerSegment)  (schemaAndQuery)  (threshold)  Mode  Cnt       Score       Error  Units\r\nTopNBenchmark.querySingleIncrementalIndex              1          no-rollup            750000           basic.A           10  avgt   25  888967.034 ± 25098.293  us/op\r\nTopNBenchmark.querySingleIncrementalIndex              1  ordered-no-rollup            750000           basic.A           10  avgt   25  987568.305 ± 50955.718  us/op\r\nTopNBenchmark.querySingleIncrementalIndex              1             rollup            750000           basic.A           10  avgt   25    8820.929 ±   699.516  us/op\r\n\r\nno-rollup:          size [22383561] bytes.\r\nordered-no-rollup:  size [16900327] bytes.\r\nrollup:             size [237206] bytes.\r\n```\r\n\r\nIt would appear that performance difference is more notable when the `Deque` are deeper, at least for topN and timeseries, since previous benchmarks were basically comparing flat maps with the same number of keys and single element `Deque`.\r\n\r\nSize savings will likely vary quite wildly based on dimension order and correlated to how effective rollup would be if were enabled at default millisecond granularity. In this case, with a few low cardinality dimensions and 1-10k events per timestamp sizes were 20-25% smaller.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410153475/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410165818","html_url":"https://github.com/apache/druid/pull/6090#issuecomment-410165818","issue_url":"https://api.github.com/repos/apache/druid/issues/6090","id":410165818,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDE2NTgxOA==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T07:10:31Z","updated_at":"2018-08-03T07:10:31Z","author_association":"MEMBER","body":"Hi, @jihoonson . After patching these changes, I found the same problem still exist in `ChannelResourceFactory`, you can run the  `JankyServersTest#testHttpsEchoServer` test case to reproduce it. So, i added another anonymous class of `SimpleChannelUpstreamHandler` to fix it. PTAL.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410165818/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410170672","html_url":"https://github.com/apache/druid/pull/6090#issuecomment-410170672","issue_url":"https://api.github.com/repos/apache/druid/issues/6090","id":410170672,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDE3MDY3Mg==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T07:32:58Z","updated_at":"2018-08-03T07:32:58Z","author_association":"MEMBER","body":"BTW, when i tried to use `ExpectedException` instead of `Assert.assertTrue` in `JankyServersTest` for other test cases, i realized the `JankyServersTest#isChannelClosedException` situation was hard to convert to `ExpectedException` way, so i created a sub-calss of `TypeSafeMatcher` to resolve the problem.\r\n\r\n```java\r\nprivate static class CauseMatcher extends TypeSafeMatcher<Throwable>\r\n{\r\n  private final Class<? extends Throwable> expectedType;\r\n  private final String expectedMessage;\r\n  private final boolean isRegex;\r\n\r\n  public CauseMatcher(Class<? extends Throwable> expectedType, String expectedMessage)\r\n  {\r\n    this.expectedType = expectedType;\r\n    this.expectedMessage = expectedMessage;\r\n    this.isRegex = false;\r\n  }\r\n\r\n  public CauseMatcher(Class<? extends Throwable> expectedType, String expectedMessage, boolean isRegex)\r\n  {\r\n    this.expectedType = expectedType;\r\n    this.expectedMessage = expectedMessage;\r\n    this.isRegex = isRegex;\r\n  }\r\n\r\n  @Override\r\n  protected boolean matchesSafely(Throwable item)\r\n  {\r\n    if (item == null || item.getClass() == null || item.getMessage() == null) {\r\n      return false;\r\n    }\r\n    if (!item.getClass().isAssignableFrom(expectedType)) {\r\n      return false;\r\n    }\r\n    if (isRegex) {\r\n      return Pattern.compile(expectedMessage).matcher(item.getMessage()).find();\r\n    } else {\r\n      return item.getMessage().contains(expectedMessage);\r\n    }\r\n  }\r\n\r\n  @Override\r\n  public void describeTo(Description description)\r\n  {\r\n    description.appendText(\"expects type is \")\r\n        .appendValue(expectedType)\r\n        .appendText(\" and message is \")\r\n        .appendValue(expectedMessage);\r\n  }\r\n}\r\n```\r\n\r\nThen, use the following code to express the `JankyServersTest#isChannelClosedException` logic.\r\n\r\n```java\r\nexpectedException.expectCause(\r\n    anyOf(\r\n        new CauseMatcher(ChannelException.class, \"Faulty channel in resource pool\"),\r\n        new CauseMatcher(IOException.class, \".*Connection reset by peer.*\", true)\r\n    )\r\n);\r\n```\r\n\r\nHowever, this change will add too many new lines of code. If just to solve this single situation would be a huge cost, but it can be used as a common util class for other test cases, then it might be worth adding. What do you think? @jihoonson","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410170672/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410183701","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-410183701","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":410183701,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDE4MzcwMQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T08:28:01Z","updated_at":"2018-08-03T08:28:01Z","author_association":"MEMBER","body":"Ok, so I had to know, so I went ahead and did benchmarks if we do the other way and sort at persist time.\r\n\r\nno rollup opportunity:\r\n```\r\nBenchmark                        (rollup)  (rowsPerSegment)  (schema)  Mode  Cnt       Score        Error  Units\r\nIndexPersistBenchmark.persistV9      true             75000     basic  avgt   25  499315.212 ± 154036.971  us/op\r\nIndexPersistBenchmark.persistV9     false             75000     basic  avgt   25  449792.742 ± 28218.504  us/op\r\nIndexPersistBenchmark.persistV9     false (ordered)   75000     basic  avgt   25  508051.563 ±  63033.662  us/op\r\n\r\nall size: [3038874] bytes.\r\n```\r\nmoderate rollup opportunity:\r\n\r\n```\r\nBenchmark                        (rollup)  (rowsPerSegment)  (schema)  Mode  Cnt       Score       Error  Units\r\nIndexPersistBenchmark.persistV9      true             75000     basic  avgt   25  406840.576 ± 20732.769  us/op\r\nIndexPersistBenchmark.persistV9     false             75000     basic  avgt   25  431725.214 ± 18793.693  us/op\r\nIndexPersistBenchmark.persistV9     false (ordered)   75000     basic  avgt   25  494056.572 ± 34396.770  us/op\r\n\r\nrollup:             size [2285574] bytes.\r\nno-rollup:          size [2741399] bytes.\r\nordered-no-rollup:  size [2516639] bytes.\r\n```\r\nmore rollup:\r\n\r\n```\r\nBenchmark                        (rollup)  (rowsPerSegment)  (schema)  Mode  Cnt       Score       Error  Units\r\nIndexPersistBenchmark.persistV9      true             75000     basic  avgt   25  338251.339 ± 22031.319  us/op\r\nIndexPersistBenchmark.persistV9     false             75000     basic  avgt   25  443272.327 ± 25099.425  us/op\r\nIndexPersistBenchmark.persistV9     false (ordered)   75000     basic  avgt   25  552234.263 ± 41889.207  us/op\r\n\r\nrollup:             size [1755456] bytes.\r\nno-rollup:          size [2741017] bytes.\r\nordered-no-rollup:  size [2346649] bytes.\r\n```\r\n\r\nI don't have strong feelings about the best way to do this, persist performance cost looks to be on the range of 15-20% slower here. Maybe better to sort at persist time to not risk impact to query performance?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410183701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410184869","html_url":"https://github.com/apache/druid/pull/6047#issuecomment-410184869","issue_url":"https://api.github.com/repos/apache/druid/issues/6047","id":410184869,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDE4NDg2OQ==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T08:32:32Z","updated_at":"2018-08-03T08:32:32Z","author_association":"MEMBER","body":"Hi, @hpandeycodeit . I also encountered this situation. There is [formula](http://druid.io/docs/latest/configuration/broker.html#processing) for it in the Druid doc. In my experience with this problem, you may need to add `-XX:MaxDirectMemorySize` option to both of those `conf/druid/historical/jvm.config` and `conf/druid/broker/jvm.config` files  :sweat_smile:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410184869/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410201965","html_url":"https://github.com/apache/druid/issues/6099#issuecomment-410201965","issue_url":"https://api.github.com/repos/apache/druid/issues/6099","id":410201965,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDIwMTk2NQ==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T09:39:44Z","updated_at":"2018-08-03T09:39:44Z","author_association":"MEMBER","body":"Hi, @jacktomcat . This result is obtained because the quantile aggregator uses an approximate algorithm called `sketch`. You can find it in the Druid [doc](http://druid.io/docs/latest/development/extensions-core/approximate-histograms.html). A [parper](http://jmlr.org/papers/volume11/ben-haim10a/ben-haim10a.pdf) and [blog](https://metamarkets.com/2013/histograms/) are also available in the document to learn the algorithm deeply. BTW, there is a [Table](https://datasketches.github.io/docs/Quantiles/QuantilesAccuracy.html) Guide for Quantiles DoublesSketch Size in Bytes and Approximate Error, which might help you.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410201965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410234843","html_url":"https://github.com/apache/druid/pull/5221#issuecomment-410234843","issue_url":"https://api.github.com/repos/apache/druid/issues/5221","id":410234843,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDIzNDg0Mw==","user":{"login":"aryaflow","id":36851174,"node_id":"MDQ6VXNlcjM2ODUxMTc0","avatar_url":"https://avatars.githubusercontent.com/u/36851174?v=4","gravatar_id":"","url":"https://api.github.com/users/aryaflow","html_url":"https://github.com/aryaflow","followers_url":"https://api.github.com/users/aryaflow/followers","following_url":"https://api.github.com/users/aryaflow/following{/other_user}","gists_url":"https://api.github.com/users/aryaflow/gists{/gist_id}","starred_url":"https://api.github.com/users/aryaflow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aryaflow/subscriptions","organizations_url":"https://api.github.com/users/aryaflow/orgs","repos_url":"https://api.github.com/users/aryaflow/repos","events_url":"https://api.github.com/users/aryaflow/events{/privacy}","received_events_url":"https://api.github.com/users/aryaflow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T12:11:48Z","updated_at":"2018-08-03T12:11:48Z","author_association":"NONE","body":"Thanks for the feature. I tried this in a cluster and succeeded to make it work... but I had to add wasb to JobHelper.java as well.\r\n`} else if (\"wasbs\".equals(type)) {\r\n      segmentLocURI = URI.create(loadSpec.get(\"path\").toString());\r\n}`","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410234843/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410239779","html_url":"https://github.com/apache/druid/issues/5150#issuecomment-410239779","issue_url":"https://api.github.com/repos/apache/druid/issues/5150","id":410239779,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDIzOTc3OQ==","user":{"login":"bohemia420","id":3143799,"node_id":"MDQ6VXNlcjMxNDM3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/3143799?v=4","gravatar_id":"","url":"https://api.github.com/users/bohemia420","html_url":"https://github.com/bohemia420","followers_url":"https://api.github.com/users/bohemia420/followers","following_url":"https://api.github.com/users/bohemia420/following{/other_user}","gists_url":"https://api.github.com/users/bohemia420/gists{/gist_id}","starred_url":"https://api.github.com/users/bohemia420/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bohemia420/subscriptions","organizations_url":"https://api.github.com/users/bohemia420/orgs","repos_url":"https://api.github.com/users/bohemia420/repos","events_url":"https://api.github.com/users/bohemia420/events{/privacy}","received_events_url":"https://api.github.com/users/bohemia420/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T12:34:20Z","updated_at":"2018-08-03T12:34:20Z","author_association":"NONE","body":"is this resolved? @amalakar  how did u remove avro converter? @gianm  how does one change the parquet reading strategy?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410239779/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410241234","html_url":"https://github.com/apache/druid/pull/5221#issuecomment-410241234","issue_url":"https://api.github.com/repos/apache/druid/issues/5221","id":410241234,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDI0MTIzNA==","user":{"login":"aryaflow","id":36851174,"node_id":"MDQ6VXNlcjM2ODUxMTc0","avatar_url":"https://avatars.githubusercontent.com/u/36851174?v=4","gravatar_id":"","url":"https://api.github.com/users/aryaflow","html_url":"https://github.com/aryaflow","followers_url":"https://api.github.com/users/aryaflow/followers","following_url":"https://api.github.com/users/aryaflow/following{/other_user}","gists_url":"https://api.github.com/users/aryaflow/gists{/gist_id}","starred_url":"https://api.github.com/users/aryaflow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aryaflow/subscriptions","organizations_url":"https://api.github.com/users/aryaflow/orgs","repos_url":"https://api.github.com/users/aryaflow/repos","events_url":"https://api.github.com/users/aryaflow/events{/privacy}","received_events_url":"https://api.github.com/users/aryaflow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T12:40:39Z","updated_at":"2018-08-03T12:40:39Z","author_association":"NONE","body":"@hoesler hadoop-azure is not added by default. But it's needed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410241234/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410242447","html_url":"https://github.com/apache/druid/pull/6072#issuecomment-410242447","issue_url":"https://api.github.com/repos/apache/druid/issues/6072","id":410242447,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDI0MjQ0Nw==","user":{"login":"chengchengpei","id":5881383,"node_id":"MDQ6VXNlcjU4ODEzODM=","avatar_url":"https://avatars.githubusercontent.com/u/5881383?v=4","gravatar_id":"","url":"https://api.github.com/users/chengchengpei","html_url":"https://github.com/chengchengpei","followers_url":"https://api.github.com/users/chengchengpei/followers","following_url":"https://api.github.com/users/chengchengpei/following{/other_user}","gists_url":"https://api.github.com/users/chengchengpei/gists{/gist_id}","starred_url":"https://api.github.com/users/chengchengpei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengchengpei/subscriptions","organizations_url":"https://api.github.com/users/chengchengpei/orgs","repos_url":"https://api.github.com/users/chengchengpei/repos","events_url":"https://api.github.com/users/chengchengpei/events{/privacy}","received_events_url":"https://api.github.com/users/chengchengpei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T12:45:50Z","updated_at":"2018-08-03T12:45:50Z","author_association":"CONTRIBUTOR","body":"@jihoonson NP. How can I become committer?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410242447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410270802","html_url":"https://github.com/apache/druid/issues/1560#issuecomment-410270802","issue_url":"https://api.github.com/repos/apache/druid/issues/1560","id":410270802,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDI3MDgwMg==","user":{"login":"pdeva","id":3190176,"node_id":"MDQ6VXNlcjMxOTAxNzY=","avatar_url":"https://avatars.githubusercontent.com/u/3190176?v=4","gravatar_id":"","url":"https://api.github.com/users/pdeva","html_url":"https://github.com/pdeva","followers_url":"https://api.github.com/users/pdeva/followers","following_url":"https://api.github.com/users/pdeva/following{/other_user}","gists_url":"https://api.github.com/users/pdeva/gists{/gist_id}","starred_url":"https://api.github.com/users/pdeva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdeva/subscriptions","organizations_url":"https://api.github.com/users/pdeva/orgs","repos_url":"https://api.github.com/users/pdeva/repos","events_url":"https://api.github.com/users/pdeva/events{/privacy}","received_events_url":"https://api.github.com/users/pdeva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T14:27:56Z","updated_at":"2018-08-03T14:27:56Z","author_association":"CONTRIBUTOR","body":"i dont think this was ever fixed","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410270802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410300901","html_url":"https://github.com/apache/druid/issues/5150#issuecomment-410300901","issue_url":"https://api.github.com/repos/apache/druid/issues/5150","id":410300901,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDMwMDkwMQ==","user":{"login":"amalakar","id":65202,"node_id":"MDQ6VXNlcjY1MjAy","avatar_url":"https://avatars.githubusercontent.com/u/65202?v=4","gravatar_id":"","url":"https://api.github.com/users/amalakar","html_url":"https://github.com/amalakar","followers_url":"https://api.github.com/users/amalakar/followers","following_url":"https://api.github.com/users/amalakar/following{/other_user}","gists_url":"https://api.github.com/users/amalakar/gists{/gist_id}","starred_url":"https://api.github.com/users/amalakar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amalakar/subscriptions","organizations_url":"https://api.github.com/users/amalakar/orgs","repos_url":"https://api.github.com/users/amalakar/repos","events_url":"https://api.github.com/users/amalakar/events{/privacy}","received_events_url":"https://api.github.com/users/amalakar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T16:08:18Z","updated_at":"2018-08-03T16:08:18Z","author_association":"CONTRIBUTOR","body":"I havn’t made any progress in this issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410300901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410313066","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-410313066","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":410313066,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDMxMzA2Ng==","user":{"login":"mistercrunch","id":487433,"node_id":"MDQ6VXNlcjQ4NzQzMw==","avatar_url":"https://avatars.githubusercontent.com/u/487433?v=4","gravatar_id":"","url":"https://api.github.com/users/mistercrunch","html_url":"https://github.com/mistercrunch","followers_url":"https://api.github.com/users/mistercrunch/followers","following_url":"https://api.github.com/users/mistercrunch/following{/other_user}","gists_url":"https://api.github.com/users/mistercrunch/gists{/gist_id}","starred_url":"https://api.github.com/users/mistercrunch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mistercrunch/subscriptions","organizations_url":"https://api.github.com/users/mistercrunch/orgs","repos_url":"https://api.github.com/users/mistercrunch/repos","events_url":"https://api.github.com/users/mistercrunch/events{/privacy}","received_events_url":"https://api.github.com/users/mistercrunch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T16:53:00Z","updated_at":"2018-08-03T17:04:28Z","author_association":"MEMBER","body":"> Btw, this line of thinking is most effective if your queryGranularity is coarse, since Druid always sorts time first and then your other dimensions\r\n\r\nIn light of what you described, my intuition tells me that this might be a bad default in most cases (expect when `queryGranularity == segmentGranularity`). Can you think of reasons why `__time` this would be a hard requirement, or could this be changed? Of course we can't just change it as it would have complex implications on query perf, but maybe a new ingestion spec flag `sortyBy` that would allow putting `__time` elsewhere might help a lot in getting better compression.\r\n\r\nI see Druid does RLE encoding of bitmaps (in at least some cases), and I guess LZ4 does something that's effectively a bit like RLE encoding on column data. It seems like there's an opportunity to give people powerful options to get better compression / perf here.\r\n\r\nHappy to move this conversation to another GH issue if there's hope in doing this.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410313066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410315143","html_url":"https://github.com/apache/druid/pull/6016#issuecomment-410315143","issue_url":"https://api.github.com/repos/apache/druid/issues/6016","id":410315143,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDMxNTE0Mw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T17:00:37Z","updated_at":"2018-08-03T17:00:37Z","author_association":"CONTRIBUTOR","body":"other challenges with [not so mature] native code is that it is very hard to debug ( specially for java programmers who aren't that familiar with tooling necessary, extra setup required and the language itself).  also, bugs in native code could crash the jvm leaving little trace of what happened. getting in/out of jni is usually more expensive.\r\n\r\nbut again, experimenting is great.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410315143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410322187","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-410322187","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":410322187,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDMyMjE4Nw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T17:27:12Z","updated_at":"2018-08-03T17:27:12Z","author_association":"CONTRIBUTOR","body":"> In light of what you described, my intuition tells me that this might be a bad default in most cases (expect when queryGranularity == segmentGranularity). Can you think of reasons why __time this would be a hard requirement, or could this be changed? Of course we can't just change it as it would have complex implications on query perf, but maybe a new ingestion spec flag sortyBy that would allow putting __time elsewhere might help a lot in getting better compression.\r\n\r\nYeah there would be a ton of value in this! I think we should do a separate issue for it -- I can write one up with some of the considerations that will need to be taken into account. There's a lot of assumptions throughout the Druid codebase that the `__time` column is always sorted, and it would be some work to get through all of those, but I think it is tractable.\r\n\r\nFWIW one workaround you can do is set queryGranularity = segmentGranularity and then create a \"long\" typed dimension with the real timestamp in it. You won't be able to do timeseries queries on it, but you can do groupBys with `timestamp_floor` expressions. Druid SQL would also work, with a query like `SELECT TIME_FLOOR(MILLIS_TO_TIMESTAMP(real_timestamp), 'PT1H') ...`. For time filters you can use a combination of `intervals` and bound filters on your \"real_timestamp\" dimension. It is a little janky (and perf for timeseries-style queries won't be as good as using the `__time` column) but it will work for improving your compression and locality.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410322187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410323157","html_url":"https://github.com/apache/druid/issues/6100#issuecomment-410323157","issue_url":"https://api.github.com/repos/apache/druid/issues/6100","id":410323157,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDMyMzE1Nw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T17:30:40Z","updated_at":"2018-08-03T17:30:40Z","author_association":"CONTRIBUTOR","body":"@jon-wei has been working on some new docs; @jon-wei do you know if your work is related to these points?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410323157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410326897","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-410326897","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":410326897,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDMyNjg5Nw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T17:44:48Z","updated_at":"2018-08-03T17:44:48Z","author_association":"CONTRIBUTOR","body":"@clintropolis if you do end up further benchmarking sorting at persist time, then you can also consider reordering the dimensions from low to high cardinality as they are known at that point to potentially improve on size.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410326897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410334998","html_url":"https://github.com/apache/druid/pull/6027#issuecomment-410334998","issue_url":"https://api.github.com/repos/apache/druid/issues/6027","id":410334998,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDMzNDk5OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T18:15:25Z","updated_at":"2018-08-03T18:15:25Z","author_association":"CONTRIBUTOR","body":"> What's making me confused is why the Kryo is using the map returned from ObjectFlatteners. map is created by calling create() method which is defined as below:\r\n\r\nI think what Kryo is doing is trying to deserialize a MapBasedInputRow that includes a map returned by ObjectFlatteners. I guess what it does on the serializer end is write the class name of the map it's serializing, and then on the deserializer end it instantiates it with its default constructor and tries to `put` the records back in. This part fails because the map returned by ObjectFlatteners is an unmodifiable view.\r\n\r\nIMO, the best way to fix this is to make a copy of the InputRow before giving it to Kryo to serialize. This is happening in non-Druid code so I think it's best to make the change there.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410334998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410362439","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-410362439","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":410362439,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM2MjQzOQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T20:06:40Z","updated_at":"2018-08-03T20:06:40Z","author_association":"MEMBER","body":"@himanshug The persist benchmarks in my previous comment were done with re-ordered (and some removed/modified) dimensions to simulate a case where I would expect sorting (and rollup) to be effective.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410362439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410362519","html_url":"https://github.com/apache/druid/pull/6086#issuecomment-410362519","issue_url":"https://api.github.com/repos/apache/druid/issues/6086","id":410362519,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM2MjUxOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T20:06:59Z","updated_at":"2018-08-03T20:06:59Z","author_association":"CONTRIBUTOR","body":"LGTM after CI","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410362519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410369351","html_url":"https://github.com/apache/druid/pull/6075#issuecomment-410369351","issue_url":"https://api.github.com/repos/apache/druid/issues/6075","id":410369351,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM2OTM1MQ==","user":{"login":"chengchengpei","id":5881383,"node_id":"MDQ6VXNlcjU4ODEzODM=","avatar_url":"https://avatars.githubusercontent.com/u/5881383?v=4","gravatar_id":"","url":"https://api.github.com/users/chengchengpei","html_url":"https://github.com/chengchengpei","followers_url":"https://api.github.com/users/chengchengpei/followers","following_url":"https://api.github.com/users/chengchengpei/following{/other_user}","gists_url":"https://api.github.com/users/chengchengpei/gists{/gist_id}","starred_url":"https://api.github.com/users/chengchengpei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengchengpei/subscriptions","organizations_url":"https://api.github.com/users/chengchengpei/orgs","repos_url":"https://api.github.com/users/chengchengpei/repos","events_url":"https://api.github.com/users/chengchengpei/events{/privacy}","received_events_url":"https://api.github.com/users/chengchengpei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T20:35:46Z","updated_at":"2018-08-03T20:35:46Z","author_association":"CONTRIBUTOR","body":"@jon-wei could you please remove WIP flag? Thanks","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410369351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410369686","html_url":"https://github.com/apache/druid/pull/6072#issuecomment-410369686","issue_url":"https://api.github.com/repos/apache/druid/issues/6072","id":410369686,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM2OTY4Ng==","user":{"login":"chengchengpei","id":5881383,"node_id":"MDQ6VXNlcjU4ODEzODM=","avatar_url":"https://avatars.githubusercontent.com/u/5881383?v=4","gravatar_id":"","url":"https://api.github.com/users/chengchengpei","html_url":"https://github.com/chengchengpei","followers_url":"https://api.github.com/users/chengchengpei/followers","following_url":"https://api.github.com/users/chengchengpei/following{/other_user}","gists_url":"https://api.github.com/users/chengchengpei/gists{/gist_id}","starred_url":"https://api.github.com/users/chengchengpei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengchengpei/subscriptions","organizations_url":"https://api.github.com/users/chengchengpei/orgs","repos_url":"https://api.github.com/users/chengchengpei/repos","events_url":"https://api.github.com/users/chengchengpei/events{/privacy}","received_events_url":"https://api.github.com/users/chengchengpei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T20:37:16Z","updated_at":"2018-08-03T20:37:16Z","author_association":"CONTRIBUTOR","body":"@jihoonson Thanks. How can I get this merged?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410369686/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410369903","html_url":"https://github.com/apache/druid/pull/6072#issuecomment-410369903","issue_url":"https://api.github.com/repos/apache/druid/issues/6072","id":410369903,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM2OTkwMw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T20:38:13Z","updated_at":"2018-08-03T20:38:13Z","author_association":"CONTRIBUTOR","body":"@chengchengpei I'll merge, thanks for the contribution!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410369903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410384208","html_url":"https://github.com/apache/druid/issues/1560#issuecomment-410384208","issue_url":"https://api.github.com/repos/apache/druid/issues/1560","id":410384208,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM4NDIwOA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T21:44:27Z","updated_at":"2018-08-03T21:44:27Z","author_association":"CONTRIBUTOR","body":"It wasn't fixed, but we did remove the tool at some point since everything involved here is deprecated now! So I will close the issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410384208/reactions","total_count":1,"+1":0,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410386867","html_url":"https://github.com/apache/druid/issues/1204#issuecomment-410386867","issue_url":"https://api.github.com/repos/apache/druid/issues/1204","id":410386867,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM4Njg2Nw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T21:58:32Z","updated_at":"2018-08-03T21:58:32Z","author_association":"CONTRIBUTOR","body":"I believe #4611 fixed this.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410386867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410387085","html_url":"https://github.com/apache/druid/issues/1449#issuecomment-410387085","issue_url":"https://api.github.com/repos/apache/druid/issues/1449","id":410387085,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM4NzA4NQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T21:59:48Z","updated_at":"2018-08-03T21:59:48Z","author_association":"CONTRIBUTOR","body":"Yes, it is. It became possible as part of the numeric dimensions feature.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410387085/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410387273","html_url":"https://github.com/apache/druid/issues/1671#issuecomment-410387273","issue_url":"https://api.github.com/repos/apache/druid/issues/1671","id":410387273,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM4NzI3Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T22:00:42Z","updated_at":"2018-08-03T22:00:42Z","author_association":"CONTRIBUTOR","body":"I suppose it's valid as long as we support javascript at all, so we could leave it open. I am not sure if anyone has quantified the impact or not so I am not sure how big of a deal this is.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410387273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410387388","html_url":"https://github.com/apache/druid/pull/6027#issuecomment-410387388","issue_url":"https://api.github.com/repos/apache/druid/issues/6027","id":410387388,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM4NzM4OA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T22:00:57Z","updated_at":"2018-08-03T22:00:57Z","author_association":"CONTRIBUTOR","body":"I agree with @gianm. This problem should be fixed outside of Druid if possible. And, I don't think this is a blocker for 0.12.2. I'm removing the tag shortly.\r\n\r\n@leventov if you think this should be fixed in Druid, please let us know the reason. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410387388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410387923","html_url":"https://github.com/apache/druid/issues/1684#issuecomment-410387923","issue_url":"https://api.github.com/repos/apache/druid/issues/1684","id":410387923,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM4NzkyMw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T22:02:19Z","updated_at":"2018-08-03T22:02:19Z","author_association":"CONTRIBUTOR","body":"Certainly looks like it would have.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410387923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410388134","html_url":"https://github.com/apache/druid/issues/1746#issuecomment-410388134","issue_url":"https://api.github.com/repos/apache/druid/issues/1746","id":410388134,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM4ODEzNA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T22:03:30Z","updated_at":"2018-08-03T22:03:30Z","author_association":"CONTRIBUTOR","body":"Ah yes. Now they are \"WAITING\" if they are waiting on locks.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410388134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410388362","html_url":"https://github.com/apache/druid/issues/1835#issuecomment-410388362","issue_url":"https://api.github.com/repos/apache/druid/issues/1835","id":410388362,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM4ODM2Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T22:04:33Z","updated_at":"2018-08-03T22:04:33Z","author_association":"CONTRIBUTOR","body":"Sure, let's close it won't-fix.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410388362/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410388642","html_url":"https://github.com/apache/druid/issues/1827#issuecomment-410388642","issue_url":"https://api.github.com/repos/apache/druid/issues/1827","id":410388642,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM4ODY0Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T22:06:16Z","updated_at":"2018-08-03T22:06:16Z","author_association":"CONTRIBUTOR","body":"I think the real fix was to add druid.indexer.runner.javaOptsArray (https://github.com/apache/incubator-druid/pull/2533).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410388642/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410388709","html_url":"https://github.com/apache/druid/issues/1836#issuecomment-410388709","issue_url":"https://api.github.com/repos/apache/druid/issues/1836","id":410388709,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM4ODcwOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T22:06:35Z","updated_at":"2018-08-03T22:06:35Z","author_association":"CONTRIBUTOR","body":"Yes.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410388709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410389509","html_url":"https://github.com/apache/druid/pull/5938#issuecomment-410389509","issue_url":"https://api.github.com/repos/apache/druid/issues/5938","id":410389509,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDM4OTUwOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-03T22:11:21Z","updated_at":"2018-08-03T22:11:21Z","author_association":"CONTRIBUTOR","body":"I've pushed a fix for the tests.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410389509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410498288","html_url":"https://github.com/apache/druid/pull/5492#issuecomment-410498288","issue_url":"https://api.github.com/repos/apache/druid/issues/5492","id":410498288,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDQ5ODI4OA==","user":{"login":"josephglanville","id":605591,"node_id":"MDQ6VXNlcjYwNTU5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/605591?v=4","gravatar_id":"","url":"https://api.github.com/users/josephglanville","html_url":"https://github.com/josephglanville","followers_url":"https://api.github.com/users/josephglanville/followers","following_url":"https://api.github.com/users/josephglanville/following{/other_user}","gists_url":"https://api.github.com/users/josephglanville/gists{/gist_id}","starred_url":"https://api.github.com/users/josephglanville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josephglanville/subscriptions","organizations_url":"https://api.github.com/users/josephglanville/orgs","repos_url":"https://api.github.com/users/josephglanville/repos","events_url":"https://api.github.com/users/josephglanville/events{/privacy}","received_events_url":"https://api.github.com/users/josephglanville/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T06:07:10Z","updated_at":"2018-08-05T06:07:10Z","author_association":"CONTRIBUTOR","body":"@jihoonson if I understand the semantics correctly if you want to create segments with perfect rollup you can return input splits that map all of the data for each output segment to only one subtask per segment?\r\nie. have getSplits return `Steam<InputSplit<List<SplitType>>>` and withSplit take `InputSplit<List<SplitType>`. Where getSplits returns splits that are partitioned by output segment intervals.\r\n\r\nMy goal with this line of thinking is to alleviate the need for the merging/shuffle phase. As long as the number of files you need to read per segment isn't too large for a single subtask this seems like a reasonable approach?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410498288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410530313","html_url":"https://github.com/apache/druid/pull/6090#issuecomment-410530313","issue_url":"https://api.github.com/repos/apache/druid/issues/6090","id":410530313,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDUzMDMxMw==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T16:10:04Z","updated_at":"2018-08-05T16:10:04Z","author_association":"MEMBER","body":"Hi, @jihoonson . Thanks for your comments.\r\n\r\n> Also, please move this and this to HttpClientPipelineFactory, so that we can put all channel pipeline initialization codes together.\r\n\r\nYes, this change will init those channel pipelines more efficiently. However, this SSL handler may be designed for HTTPs requests, so it might not be reasonable if we move it to `HttpClientPipelineFactory`.. What do you think?\r\n\r\n> Regarding CauseMatcher, it sounds good to me. Please raise a new PR if you want to apply it to all possible use cases.\r\n\r\nSure, I will create a new PR to improve them.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410530313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410538507","html_url":"https://github.com/apache/druid/issues/6105#issuecomment-410538507","issue_url":"https://api.github.com/repos/apache/druid/issues/6105","id":410538507,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDUzODUwNw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T18:26:10Z","updated_at":"2018-08-05T18:26:10Z","author_association":"CONTRIBUTOR","body":"I changed the title a bit, since we do allow specifying the sort order for every column except __time (it's the order from dimensionsSpec) but we do not let you put time in the middle of them. So this issue may lead to adding a sortOrder parameter, but I wanted the title to capture the problem we're trying to solve.\r\n\r\nFor anyone reading, check out #6066 for motivation and what workarounds people use today.\r\n\r\nAs to removing the assumption that `__time` is sorted, these are the places I can think of where that exists:\r\n\r\n1. The `makeCursors` function in QueryableIndexStorageAdapter is responsible for creating a sequence of time-granular cursors. This will probably be the toughest thing to adjust, since many query engines depend on the time-ordered and time-granularized nature of these cursors (including the timeseries, topN, groupBy, and timeBoundary engines). Probably for timeseries the best thing to do is call through to the groupBy engine, which can handle its grouping keys being out of order, and is capable of grouping on time. For topN and groupBy I'm not so sure. For groupBy in particular keep in mind #1926; the behavior of \"granularity\" is not equivalent to the behavior of adding a time-floored dimension.\r\n2. makeCursors again: its time filtering functionality assumes that the time column is sorted.\r\n3. SingleScanTimeDimSelector is used for extractionFns on the `__time` column, and it also assumes the column is sorted.\r\n4. SingleLongInputCachingExpressionColumnValueSelector is used for expressions on the `__time` column. It doesn't assume sortedness, but the optimization it does may not make as much sense if the column is sorted.\r\n5. The `getMinTime()` and `getMaxTime()` functions in QueryableIndexStorageAdapter assume that they should return the first and last row, respectively.\r\n\r\nSome other considerations:\r\n\r\n- Given (1) we will probably want to translate some `granularity` based queries into queries that use the `timestamp_floor` expression. For example, a timeseries with granularity less than the segment interval should get executed the same way as a `timestamp_floor` groupBy, and we could make that translation under the hood. Therefore we should look into optimizing `timestamp_floor`. We should expect at least _some_ localized sortedness in the time column and the function should take advantage of that. Currently, it doesn't.\r\n- If it makes life easier for a first version of this patch, we could consider _not_ supporting \"granularity\" based queries for topN and groupBy on non-time-sorted segments at first. I believe they are less commonly used than granular timeseries, and could be added in later.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410538507/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410538984","html_url":"https://github.com/apache/druid/issues/6104#issuecomment-410538984","issue_url":"https://api.github.com/repos/apache/druid/issues/6104","id":410538984,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDUzODk4NA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T18:35:01Z","updated_at":"2018-08-05T18:35:01Z","author_association":"CONTRIBUTOR","body":"Hi @a2l007, I've used this extension with regular HDFS, but not with WebHDFS. It looks like this method is called during `getSplits` which is essential for M/R jobs to work. It also looks like the stack trace is all happening in hive and hadoop code. I wonder if there's some incompatibility between orc and webhdfs?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410538984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410539081","html_url":"https://github.com/apache/druid/issues/6102#issuecomment-410539081","issue_url":"https://api.github.com/repos/apache/druid/issues/6102","id":410539081,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDUzOTA4MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T18:36:36Z","updated_at":"2018-08-05T18:36:36Z","author_association":"CONTRIBUTOR","body":"Hi @aoeiuvb,\r\n\r\nThis behavior is intentional and is due to the fact that we have two kinds of delimiters: the field delimiter and a \"list delimiter\" within a field (in case your field is actually a list of separate values). The delimiters cannot be the same, since then we can't parse a row. I think setting the `listDelimiter` to some other value, like you did, is a good way to go.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410539081/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410539099","html_url":"https://github.com/apache/druid/issues/6102#issuecomment-410539099","issue_url":"https://api.github.com/repos/apache/druid/issues/6102","id":410539099,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDUzOTA5OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T18:36:58Z","updated_at":"2018-08-05T18:36:58Z","author_association":"CONTRIBUTOR","body":"Btw, I closed this since I think I answered your question, but feel free to post again if you are wondering something.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410539099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410543659","html_url":"https://github.com/apache/druid/issues/6108#issuecomment-410543659","issue_url":"https://api.github.com/repos/apache/druid/issues/6108","id":410543659,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDU0MzY1OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T19:54:09Z","updated_at":"2018-08-05T19:56:00Z","author_association":"CONTRIBUTOR","body":"Hi @pdeva, the answers to your questions are,\r\n\r\n1. A time filter looks like `__time >= TIMESTAMP '2000-01-01 00:00:00' AND __time < TIMESTAMP '2000-01-02 00:00:00'`. This syntax adheres to the SQL standard.\r\n2. If you group by a `TIME_FLOOR` function, that's like specifying granularity (this is mentioned in the docs under \"Query execution\" where it says we'll use timeseries if we can for this function).\r\n3. Not sure what you mean by this?\r\n4. Not sure what you mean by this?\r\n5. They are undocumented, but they won't be for long. http://druid.io/docs/latest/misc/math-expr.html might help you understand what they're doing.\r\n\r\nI agree an examples section would be nice; @jon-wei was working on some new tutorials for querying, maybe he can chime in with whether he had planned on adding SQL examples.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410543659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410548590","html_url":"https://github.com/apache/druid/issues/6108#issuecomment-410548590","issue_url":"https://api.github.com/repos/apache/druid/issues/6108","id":410548590,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDU0ODU5MA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T21:16:02Z","updated_at":"2018-08-05T21:16:02Z","author_association":"CONTRIBUTOR","body":"> maybe he can chime in with whether he had planned on adding SQL examples.\r\n\r\nI have one example query for \"wikipedia top pages\" in the new tutorials (the idea was more to show the tools/workflow vs being a tutorial on expressing queries in SQL, do you have any suggestions for common queries that would be good examples?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410548590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410549461","html_url":"https://github.com/apache/druid/issues/6108#issuecomment-410549461","issue_url":"https://api.github.com/repos/apache/druid/issues/6108","id":410549461,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDU0OTQ2MQ==","user":{"login":"pdeva","id":3190176,"node_id":"MDQ6VXNlcjMxOTAxNzY=","avatar_url":"https://avatars.githubusercontent.com/u/3190176?v=4","gravatar_id":"","url":"https://api.github.com/users/pdeva","html_url":"https://github.com/pdeva","followers_url":"https://api.github.com/users/pdeva/followers","following_url":"https://api.github.com/users/pdeva/following{/other_user}","gists_url":"https://api.github.com/users/pdeva/gists{/gist_id}","starred_url":"https://api.github.com/users/pdeva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdeva/subscriptions","organizations_url":"https://api.github.com/users/pdeva/orgs","repos_url":"https://api.github.com/users/pdeva/repos","events_url":"https://api.github.com/users/pdeva/events{/privacy}","received_events_url":"https://api.github.com/users/pdeva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T21:29:47Z","updated_at":"2018-08-05T21:29:47Z","author_association":"CONTRIBUTOR","body":"@gianm  clarifying:\r\n3. show atleast one query that selects data that is not a singular value but output as a time series. in all existing slides, examples i could find all queries output a singular value, vs something that would be shown on a graph as time series data.\r\n\r\n4. say a query for time series data between 1am and 10 am, grouped hourly. and assume there are no segments for time period 10am-11am. will the output contain a result for 10-11 with a ‘value’ of 0 or will 10-11 period be simply missing from output. this is an important edge case to know about when showing data in graph.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410549461/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410550178","html_url":"https://github.com/apache/druid/issues/6108#issuecomment-410550178","issue_url":"https://api.github.com/repos/apache/druid/issues/6108","id":410550178,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDU1MDE3OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T21:41:37Z","updated_at":"2018-08-05T21:41:37Z","author_association":"CONTRIBUTOR","body":"(3) sounds like it's really the same question as (2), and TIME_FLOOR is the answer. (4) adheres to standard SQL: result rows are only emitted where there is actual data. So there would be no row for 10am–11am.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410550178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410550232","html_url":"https://github.com/apache/druid/issues/6108#issuecomment-410550232","issue_url":"https://api.github.com/repos/apache/druid/issues/6108","id":410550232,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDU1MDIzMg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T21:42:32Z","updated_at":"2018-08-05T21:42:56Z","author_association":"CONTRIBUTOR","body":"> I have one example query for \"wikipedia top pages\" in the new tutorials (the idea was more to show the tools/workflow vs being a tutorial on expressing queries in SQL, do you have any suggestions for common queries that would be good examples?\r\n\r\nMaybe four queries: one that plans to a scan, one that plans to a timeseries, one that plans to a topN, and one that plans to a groupBy? And link to that from the SQL docs so people know where to go to find examples?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410550232/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410550299","html_url":"https://github.com/apache/druid/issues/6111#issuecomment-410550299","issue_url":"https://api.github.com/repos/apache/druid/issues/6111","id":410550299,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDU1MDI5OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T21:43:55Z","updated_at":"2018-08-05T21:43:55Z","author_association":"CONTRIBUTOR","body":"I think you need to add `--no-default-hadoop` to skip downloading Hadoop. I believe the help and/or docs for this command should mention that, if not we should add a mention of that.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410550299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410550351","html_url":"https://github.com/apache/druid/pull/6110#issuecomment-410550351","issue_url":"https://api.github.com/repos/apache/druid/issues/6110","id":410550351,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDU1MDM1MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T21:44:37Z","updated_at":"2018-08-05T21:44:37Z","author_association":"CONTRIBUTOR","body":"They use `druid.realtime.cache.*`, could you please update the doc to reflect that?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410550351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410550447","html_url":"https://github.com/apache/druid/issues/6111#issuecomment-410550447","issue_url":"https://api.github.com/repos/apache/druid/issues/6111","id":410550447,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDU1MDQ0Nw==","user":{"login":"pdeva","id":3190176,"node_id":"MDQ6VXNlcjMxOTAxNzY=","avatar_url":"https://avatars.githubusercontent.com/u/3190176?v=4","gravatar_id":"","url":"https://api.github.com/users/pdeva","html_url":"https://github.com/pdeva","followers_url":"https://api.github.com/users/pdeva/followers","following_url":"https://api.github.com/users/pdeva/following{/other_user}","gists_url":"https://api.github.com/users/pdeva/gists{/gist_id}","starred_url":"https://api.github.com/users/pdeva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdeva/subscriptions","organizations_url":"https://api.github.com/users/pdeva/orgs","repos_url":"https://api.github.com/users/pdeva/repos","events_url":"https://api.github.com/users/pdeva/events{/privacy}","received_events_url":"https://api.github.com/users/pdeva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-05T21:46:18Z","updated_at":"2018-08-05T21:46:18Z","author_association":"CONTRIBUTOR","body":"but why download hadoop client i the first place. i never asked for it. \r\nthe bug is regarding default behavior.\r\nthe flag should be to ‘enable’ downloading hadoop client not the other way around.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410550447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410616792","html_url":"https://github.com/apache/druid/issues/6096#issuecomment-410616792","issue_url":"https://api.github.com/repos/apache/druid/issues/6096","id":410616792,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDYxNjc5Mg==","user":{"login":"rathish","id":1155316,"node_id":"MDQ6VXNlcjExNTUzMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1155316?v=4","gravatar_id":"","url":"https://api.github.com/users/rathish","html_url":"https://github.com/rathish","followers_url":"https://api.github.com/users/rathish/followers","following_url":"https://api.github.com/users/rathish/following{/other_user}","gists_url":"https://api.github.com/users/rathish/gists{/gist_id}","starred_url":"https://api.github.com/users/rathish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rathish/subscriptions","organizations_url":"https://api.github.com/users/rathish/orgs","repos_url":"https://api.github.com/users/rathish/repos","events_url":"https://api.github.com/users/rathish/events{/privacy}","received_events_url":"https://api.github.com/users/rathish/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T07:40:27Z","updated_at":"2018-08-06T07:40:27Z","author_association":"NONE","body":"Yea, thanks Vadim. I have moved to proper Linux environment. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410616792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410708543","html_url":"https://github.com/apache/druid/issues/6113#issuecomment-410708543","issue_url":"https://api.github.com/repos/apache/druid/issues/6113","id":410708543,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDcwODU0Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T13:31:21Z","updated_at":"2018-08-06T13:31:21Z","author_association":"CONTRIBUTOR","body":"Hi @Harish346, Druid has a flat data model, but it can ingest nested json if you write a flattenSpec that tells Druid how to flatten nested data: http://druid.io/docs/latest/ingestion/flatten-json.html","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410708543/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410713423","html_url":"https://github.com/apache/druid/issues/6113#issuecomment-410713423","issue_url":"https://api.github.com/repos/apache/druid/issues/6113","id":410713423,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDcxMzQyMw==","user":{"login":"Harish346","id":40431077,"node_id":"MDQ6VXNlcjQwNDMxMDc3","avatar_url":"https://avatars.githubusercontent.com/u/40431077?v=4","gravatar_id":"","url":"https://api.github.com/users/Harish346","html_url":"https://github.com/Harish346","followers_url":"https://api.github.com/users/Harish346/followers","following_url":"https://api.github.com/users/Harish346/following{/other_user}","gists_url":"https://api.github.com/users/Harish346/gists{/gist_id}","starred_url":"https://api.github.com/users/Harish346/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Harish346/subscriptions","organizations_url":"https://api.github.com/users/Harish346/orgs","repos_url":"https://api.github.com/users/Harish346/repos","events_url":"https://api.github.com/users/Harish346/events{/privacy}","received_events_url":"https://api.github.com/users/Harish346/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T13:46:46Z","updated_at":"2018-08-06T13:46:46Z","author_association":"NONE","body":"Hi @gianm ,I read the document but I have a json array in which number of values vary each time. Is it possible to write flatten spec for all varying values in an array?For example below is my json data in which the number of values in array1 varies each time\r\n{\r\n  \"Sheet1\": [\r\n    {\r\n      \"array1\": [\r\n        \"xyz\",\r\n        \"zzz\",\r\n        \"yyy\"\r\n      ]\r\n    }\r\n  ]\r\n}","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410713423/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410714908","html_url":"https://github.com/apache/druid/issues/6113#issuecomment-410714908","issue_url":"https://api.github.com/repos/apache/druid/issues/6113","id":410714908,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDcxNDkwOA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T13:51:37Z","updated_at":"2018-08-06T13:51:37Z","author_association":"CONTRIBUTOR","body":"Hi @Harish346, you could write a flattenSpec that pulls out `$.Sheet1.array1`, and that would create a multi-value column in Druid. This doc explains how those work: http://druid.io/docs/latest/querying/multi-value-dimensions.html","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410714908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410737949","html_url":"https://github.com/apache/druid/issues/6104#issuecomment-410737949","issue_url":"https://api.github.com/repos/apache/druid/issues/6104","id":410737949,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDczNzk0OQ==","user":{"login":"a2l007","id":4603202,"node_id":"MDQ6VXNlcjQ2MDMyMDI=","avatar_url":"https://avatars.githubusercontent.com/u/4603202?v=4","gravatar_id":"","url":"https://api.github.com/users/a2l007","html_url":"https://github.com/a2l007","followers_url":"https://api.github.com/users/a2l007/followers","following_url":"https://api.github.com/users/a2l007/following{/other_user}","gists_url":"https://api.github.com/users/a2l007/gists{/gist_id}","starred_url":"https://api.github.com/users/a2l007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/a2l007/subscriptions","organizations_url":"https://api.github.com/users/a2l007/orgs","repos_url":"https://api.github.com/users/a2l007/repos","events_url":"https://api.github.com/users/a2l007/events{/privacy}","received_events_url":"https://api.github.com/users/a2l007/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T14:59:11Z","updated_at":"2018-08-06T14:59:11Z","author_association":"CONTRIBUTOR","body":"Yeah ORC does a lot of seeks and the check could be because it may not work well with WebHDFS i guess. I wonder if it would make sense to switch out `OrcInputFormat` from hive to https://orc.apache.org/api/orc-core/index.html?org/apache/orc/OrcFile.html , but I guess that would be a question for the owner of this extension.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410737949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410750340","html_url":"https://github.com/apache/druid/issues/6104#issuecomment-410750340","issue_url":"https://api.github.com/repos/apache/druid/issues/6104","id":410750340,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDc1MDM0MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T15:34:52Z","updated_at":"2018-08-06T15:34:52Z","author_association":"CONTRIBUTOR","body":"@a2l007 I am not too much of an ORC expert so I can't comment on that solution, but in terms of owners, contrib extensions are open to contributions from anyone. Please feel free to contribute something that you think is a meaningful step forwards!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410750340/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410779194","html_url":"https://github.com/apache/druid/issues/6108#issuecomment-410779194","issue_url":"https://api.github.com/repos/apache/druid/issues/6108","id":410779194,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDc3OTE5NA==","user":{"login":"pdeva","id":3190176,"node_id":"MDQ6VXNlcjMxOTAxNzY=","avatar_url":"https://avatars.githubusercontent.com/u/3190176?v=4","gravatar_id":"","url":"https://api.github.com/users/pdeva","html_url":"https://github.com/pdeva","followers_url":"https://api.github.com/users/pdeva/followers","following_url":"https://api.github.com/users/pdeva/following{/other_user}","gists_url":"https://api.github.com/users/pdeva/gists{/gist_id}","starred_url":"https://api.github.com/users/pdeva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pdeva/subscriptions","organizations_url":"https://api.github.com/users/pdeva/orgs","repos_url":"https://api.github.com/users/pdeva/repos","events_url":"https://api.github.com/users/pdeva/events{/privacy}","received_events_url":"https://api.github.com/users/pdeva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T17:06:08Z","updated_at":"2018-08-06T17:06:08Z","author_association":"CONTRIBUTOR","body":"@gianm regarding 4. is the behavior of native queries (topn, timeseries, groupby) the same as sql for this case? in that will they omit 10-11 from the results too?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410779194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410796733","html_url":"https://github.com/apache/druid/issues/6108#issuecomment-410796733","issue_url":"https://api.github.com/repos/apache/druid/issues/6108","id":410796733,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDc5NjczMw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T17:59:55Z","updated_at":"2018-08-06T17:59:55Z","author_association":"CONTRIBUTOR","body":"> @gianm regarding 4. is the behavior of native queries (topn, timeseries, groupby) the same as sql for this case? in that will they omit 10-11 from the results too?\r\n\r\ntopN and groupBy will; for timeseries it depends on the skipEmptyBuckets setting.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410796733/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410816556","html_url":"https://github.com/apache/druid/pull/6047#issuecomment-410816556","issue_url":"https://api.github.com/repos/apache/druid/issues/6047","id":410816556,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDgxNjU1Ng==","user":{"login":"hpandeycodeit","id":21266105,"node_id":"MDQ6VXNlcjIxMjY2MTA1","avatar_url":"https://avatars.githubusercontent.com/u/21266105?v=4","gravatar_id":"","url":"https://api.github.com/users/hpandeycodeit","html_url":"https://github.com/hpandeycodeit","followers_url":"https://api.github.com/users/hpandeycodeit/followers","following_url":"https://api.github.com/users/hpandeycodeit/following{/other_user}","gists_url":"https://api.github.com/users/hpandeycodeit/gists{/gist_id}","starred_url":"https://api.github.com/users/hpandeycodeit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hpandeycodeit/subscriptions","organizations_url":"https://api.github.com/users/hpandeycodeit/orgs","repos_url":"https://api.github.com/users/hpandeycodeit/repos","events_url":"https://api.github.com/users/hpandeycodeit/events{/privacy}","received_events_url":"https://api.github.com/users/hpandeycodeit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T18:58:59Z","updated_at":"2018-08-06T18:58:59Z","author_association":"MEMBER","body":"Hi @asdf2014, \r\n\r\nThanks, that helped with the memory issue but I am hitting this new issue when trying to start the services using any .sh file in the bin directory.\r\n\r\nCaused by: java.net.UnknownHostException: zk.host.ip: unknown error\r\n \r\nZookeeper is running. Do I have to set this \"zk.host.ip\" somewhere?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410816556/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410841678","html_url":"https://github.com/apache/druid/issues/6115#issuecomment-410841678","issue_url":"https://api.github.com/repos/apache/druid/issues/6115","id":410841678,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDg0MTY3OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T20:24:45Z","updated_at":"2018-08-06T20:24:45Z","author_association":"CONTRIBUTOR","body":"Sounds like a super useful feature. I have had to write shell loops for this before and it's annoying 😄 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410841678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410841902","html_url":"https://github.com/apache/druid/pull/6093#issuecomment-410841902","issue_url":"https://api.github.com/repos/apache/druid/issues/6093","id":410841902,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDg0MTkwMg==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T20:25:34Z","updated_at":"2018-08-06T20:25:34Z","author_association":"MEMBER","body":"please add a unit test for the combiner. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410841902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410844897","html_url":"https://github.com/apache/druid/pull/6107#issuecomment-410844897","issue_url":"https://api.github.com/repos/apache/druid/issues/6107","id":410844897,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDg0NDg5Nw==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T20:36:27Z","updated_at":"2018-08-06T20:36:27Z","author_association":"MEMBER","body":"Test failures look unrelated to me, can someone retry them?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410844897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410855961","html_url":"https://github.com/apache/druid/pull/6107#issuecomment-410855961","issue_url":"https://api.github.com/repos/apache/druid/issues/6107","id":410855961,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDg1NTk2MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T21:17:45Z","updated_at":"2018-08-06T21:17:45Z","author_association":"CONTRIBUTOR","body":"Tests look good now, so I'll merge it. Thanks @clintropolis!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410855961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410856812","html_url":"https://github.com/apache/druid/issues/5521#issuecomment-410856812","issue_url":"https://api.github.com/repos/apache/druid/issues/5521","id":410856812,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDg1NjgxMg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T21:21:10Z","updated_at":"2018-08-06T21:21:10Z","author_association":"CONTRIBUTOR","body":"Looks like we've fixed this issue. We can reopen this issue if we meet again. Closing now.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410856812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410864335","html_url":"https://github.com/apache/druid/pull/6015#issuecomment-410864335","issue_url":"https://api.github.com/repos/apache/druid/issues/6015","id":410864335,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDg2NDMzNQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T21:51:30Z","updated_at":"2018-08-06T21:51:30Z","author_association":"CONTRIBUTOR","body":"I'm removing this from 0.12.2 because `0.12.2-rc1` is available now but this isn't backported. I think it's fine because this is not a real bug but making the behavior more understandable when this error happens.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410864335/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410883523","html_url":"https://github.com/apache/druid/pull/6047#issuecomment-410883523","issue_url":"https://api.github.com/repos/apache/druid/issues/6047","id":410883523,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDg4MzUyMw==","user":{"login":"hpandeycodeit","id":21266105,"node_id":"MDQ6VXNlcjIxMjY2MTA1","avatar_url":"https://avatars.githubusercontent.com/u/21266105?v=4","gravatar_id":"","url":"https://api.github.com/users/hpandeycodeit","html_url":"https://github.com/hpandeycodeit","followers_url":"https://api.github.com/users/hpandeycodeit/followers","following_url":"https://api.github.com/users/hpandeycodeit/following{/other_user}","gists_url":"https://api.github.com/users/hpandeycodeit/gists{/gist_id}","starred_url":"https://api.github.com/users/hpandeycodeit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hpandeycodeit/subscriptions","organizations_url":"https://api.github.com/users/hpandeycodeit/orgs","repos_url":"https://api.github.com/users/hpandeycodeit/repos","events_url":"https://api.github.com/users/hpandeycodeit/events{/privacy}","received_events_url":"https://api.github.com/users/hpandeycodeit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-06T23:23:02Z","updated_at":"2018-08-06T23:23:02Z","author_association":"MEMBER","body":"@jihoonson, \r\n\r\nI have replaced the commands with the scripts to use to start the services. Since they all can be started in the same terminal window, I have modified the preceding text as well. \r\n\r\nThanks! \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410883523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410922649","html_url":"https://github.com/apache/druid/pull/6090#issuecomment-410922649","issue_url":"https://api.github.com/repos/apache/druid/issues/6090","id":410922649,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDkyMjY0OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T03:36:07Z","updated_at":"2018-08-07T03:36:07Z","author_association":"CONTRIBUTOR","body":"> However, this SSL handler may be designed for HTTPs requests, so it might not be reasonable if we move it to HttpClientPipelineFactory.\r\n\r\nNot sure what you mean. Would you tell me what's your concern? If you're concerned with its name indicates only `Http`, I think it's fine because it's easy to suppose it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410922649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410923528","html_url":"https://github.com/apache/druid/pull/5492#issuecomment-410923528","issue_url":"https://api.github.com/repos/apache/druid/issues/5492","id":410923528,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDkyMzUyOA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T03:42:20Z","updated_at":"2018-08-07T16:49:39Z","author_association":"CONTRIBUTOR","body":"@josephglanville in perfect roll-up, all rows which have the timestamp falling in the same interval should be in the same segment. If input data is already partitioned by timestamp, I think your idea would be nice. However, generally, we can't guarantee that data is already partitioned by their timestamp, and thus the shuffle phase is inevitable. \r\n\r\n@drcrallen thanks for the review! I'm going to resolve conflicts and merge this PR shortly.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410923528/reactions","total_count":3,"+1":0,"-1":0,"laugh":0,"hooray":3,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410962335","html_url":"https://github.com/apache/druid/pull/6090#issuecomment-410962335","issue_url":"https://api.github.com/repos/apache/druid/issues/6090","id":410962335,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDk2MjMzNQ==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T07:31:44Z","updated_at":"2018-08-07T07:31:44Z","author_association":"MEMBER","body":"Hi, @jihoonson . Yes, this is one of the things I concerned about. If I didn't think wrong, there are two more points.\r\n\r\n1. On the one hand, before adding SslHandler to pipeine, we should check if the URL protocol is HTTPs;\r\n\r\n2. On the other hand, the `HttpClientPipelineFactory` implements the `getPipeline()` method of `ChannelPipelineFactory`, which has a zero-lenght method argument, which means that those variables used to build `SslHandler` cannot be passed in by the `getPipeline` method. We can't even overload the `getPipeline()` method, only pass them through the constructor of  `ChannelPipelineFactory`. Then, i sorted out all of variables used to build `SslHandler`, including `String host, int port, ChannelFuture connectFuture, SSLContext sslContext, Timer timer, long sslHandshakeTimeout`. But, in the place where `HttpClientPipelineFactory` is initialized, they cannot be in  `io.druid.java.util.http.client.HttpClientInit#createBootstrap` method is obtained. In addition, the `SslHandler` instance itself still needs to be used by `org.jboss.netty.channel.ChannelFutureListener#operationComplete`, which means `getPipeLine` need to be able to return an instance of `SslHandler`, but it cannot be done, because its return value has been fixed to `ChannelPipeline`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410962335/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410975637","html_url":"https://github.com/apache/druid/issues/5876#issuecomment-410975637","issue_url":"https://api.github.com/repos/apache/druid/issues/5876","id":410975637,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDk3NTYzNw==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T08:22:33Z","updated_at":"2018-08-07T08:22:33Z","author_association":"MEMBER","body":"Just as the log said, your kafka topic has the same prefix of the key: druid.emitter.kafka.alert.topic","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410975637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410994099","html_url":"https://github.com/apache/druid/pull/6118#issuecomment-410994099","issue_url":"https://api.github.com/repos/apache/druid/issues/6118","id":410994099,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDk5NDA5OQ==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T09:26:45Z","updated_at":"2018-08-07T09:26:45Z","author_association":"MEMBER","body":"@QiuMM Nice catch :+1:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410994099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411105781","html_url":"https://github.com/apache/druid/issues/6104#issuecomment-411105781","issue_url":"https://api.github.com/repos/apache/druid/issues/6104","id":411105781,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTEwNTc4MQ==","user":{"login":"a2l007","id":4603202,"node_id":"MDQ6VXNlcjQ2MDMyMDI=","avatar_url":"https://avatars.githubusercontent.com/u/4603202?v=4","gravatar_id":"","url":"https://api.github.com/users/a2l007","html_url":"https://github.com/a2l007","followers_url":"https://api.github.com/users/a2l007/followers","following_url":"https://api.github.com/users/a2l007/following{/other_user}","gists_url":"https://api.github.com/users/a2l007/gists{/gist_id}","starred_url":"https://api.github.com/users/a2l007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/a2l007/subscriptions","organizations_url":"https://api.github.com/users/a2l007/orgs","repos_url":"https://api.github.com/users/a2l007/repos","events_url":"https://api.github.com/users/a2l007/events{/privacy}","received_events_url":"https://api.github.com/users/a2l007/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T15:51:07Z","updated_at":"2018-08-07T15:51:07Z","author_association":"CONTRIBUTOR","body":"Sure I'll investigate if it is indeed a better solution and then work towards contributing it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411105781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411124748","html_url":"https://github.com/apache/druid/pull/5492#issuecomment-411124748","issue_url":"https://api.github.com/repos/apache/druid/issues/5492","id":411124748,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTEyNDc0OA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T16:48:11Z","updated_at":"2018-08-07T16:48:11Z","author_association":"CONTRIBUTOR","body":"Tagged for special callout in release notes","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411124748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411139043","html_url":"https://github.com/apache/druid/issues/6088#issuecomment-411139043","issue_url":"https://api.github.com/repos/apache/druid/issues/6088","id":411139043,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTEzOTA0Mw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T17:34:21Z","updated_at":"2018-08-07T17:34:21Z","author_association":"CONTRIBUTOR","body":"Implementing (3) makes sense to me as well with one additional change that if limit was L then it would work like below.\r\ntry finding latest L (or less) in first \"hour\", say some x < L found      (write these x rows to response out)\r\nthen try finding latest (L-x) in second \"hour\"...\r\n... keep going till you either find L rows or have been through all segments.\r\n\r\nthe \"hour\" could be \"minute\", \"day\" etc ... it is either provided by the user in the query or automatically determined (e.g. use segment granularity). By breaking it down, I'm basically hoping there wouldn't 100s of segments in one \"hour\" window leading to the problem mentioned in (4).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411139043/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411160413","html_url":"https://github.com/apache/druid/issues/4826#issuecomment-411160413","issue_url":"https://api.github.com/repos/apache/druid/issues/4826","id":411160413,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTE2MDQxMw==","user":{"login":"RestfulBlue","id":32250229,"node_id":"MDQ6VXNlcjMyMjUwMjI5","avatar_url":"https://avatars.githubusercontent.com/u/32250229?v=4","gravatar_id":"","url":"https://api.github.com/users/RestfulBlue","html_url":"https://github.com/RestfulBlue","followers_url":"https://api.github.com/users/RestfulBlue/followers","following_url":"https://api.github.com/users/RestfulBlue/following{/other_user}","gists_url":"https://api.github.com/users/RestfulBlue/gists{/gist_id}","starred_url":"https://api.github.com/users/RestfulBlue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RestfulBlue/subscriptions","organizations_url":"https://api.github.com/users/RestfulBlue/orgs","repos_url":"https://api.github.com/users/RestfulBlue/repos","events_url":"https://api.github.com/users/RestfulBlue/events{/privacy}","received_events_url":"https://api.github.com/users/RestfulBlue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T18:44:03Z","updated_at":"2018-08-08T07:23:10Z","author_association":"NONE","body":"@gianm i also issue this error with version 12.2(builded from sources 2-3 weeks ago)\r\nusing simple sql query\r\n\r\nselect  __time,hostname \r\nfrom hardware \r\nwhere __time > TIME_SHIFT(CURRENT_TIMESTAMP,'PT1H',-1)\r\norder by __time desc\r\nlimit 100\r\n\r\n\r\noptimized plan :\r\n`DruidQueryRel(query=[{\"queryType\":\"select\",\"dataSource\":{\"type\":\"table\",\"name\":\"hardware\"},\"intervals\":{\"type\":\"intervals\",\"intervals\":[\"2018-08-07T17:32:17.001Z/146140482-04-24T15:36:27.903Z\"]},\"descending\":true,\"filter\":null,\"granularity\":{\"type\":\"all\"},\"dimensions\":[{\"type\":\"default\",\"dimension\":\"dummy\",\"outputName\":\"dummy\",\"outputType\":\"STRING\"}],\"metrics\":[\"__time\",\"hostname\"],\"virtualColumns\":[],\"pagingSpec\":{\"pagingIdentifiers\":{},\"threshold\":100,\"fromNext\":true},\"context\":{\"driver\":\"org.apache.calcite.avatica.remote.Driver\"}}], signature=[{__time:LONG, hostname:STRING}]) \r\n`\r\n\r\nError : \r\n`\r\norg.apache.calcite.avatica.AvaticaSqlException: Error -1 (00000) : Error while executing SQL \"select  __time,hostname \r\nfrom hardware \r\nwhere __time > TIME_SHIFT(CURRENT_TIMESTAMP,'PT1H',-1)\r\norder by __time desc\r\nlimit 100\": Remote driver error: IllegalStateException: DefaultQueryMetrics must not be modified from multiple threads. If it is needed to gather dimension or metric information from multiple threads or from an async thread, this information should explicitly be passed between threads (e. g. using Futures), or this DefaultQueryMetrics's ownerThread should be reassigned explicitly\r\n\tat org.apache.calcite.avatica.Helper.createException(Helper.java:53)\r\n\tat org.apache.calcite.avatica.Helper.createException(Helper.java:41)\r\n\tat org.apache.calcite.avatica.AvaticaStatement.executeInternal(AvaticaStatement.java:143)\r\n\tat org.apache.calcite.avatica.AvaticaStatement.execute(AvaticaStatement.java:177)\r\n\tat org.apache.commons.dbcp2.DelegatingStatement.execute(DelegatingStatement.java:291)\r\n\tat org.apache.commons.dbcp2.DelegatingStatement.execute(DelegatingStatement.java:291)\r\n\tat org.apache.zeppelin.jdbc.JDBCInterpreter.executeSql(JDBCInterpreter.java:597)\r\n\tat org.apache.zeppelin.jdbc.JDBCInterpreter.interpret(JDBCInterpreter.java:709)\r\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:97)\r\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:498)\r\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:175)\r\n\tat org.apache.zeppelin.scheduler.ParallelScheduler$JobRunner.run(ParallelScheduler.java:162)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\njava.lang.IllegalStateException: DefaultQueryMetrics must not be modified from multiple threads. If it is needed to gather dimension or metric information from multiple threads or from an async thread, this information should explicitly be passed between threads (e. g. using Futures), or this DefaultQueryMetrics's ownerThread should be reassigned explicitly\r\n\tat io.druid.query.DefaultQueryMetrics.checkModifiedFromOwnerThread(DefaultQueryMetrics.java:59)\r\n\tat io.druid.query.DefaultQueryMetrics.reportMetric(DefaultQueryMetrics.java:259)\r\n\tat io.druid.query.DefaultQueryMetrics.reportCpuTime(DefaultQueryMetrics.java:237)\r\n\tat io.druid.query.select.DefaultSelectQueryMetrics.reportCpuTime(DefaultSelectQueryMetrics.java:201)\r\n\tat io.druid.query.CPUTimeMetricQueryRunner$1.after(CPUTimeMetricQueryRunner.java:87)\r\n\tat io.druid.java.util.common.guava.WrappingYielder.close(WrappingYielder.java:96)\r\n\tat io.druid.java.util.common.guava.WrappingYielder.close(WrappingYielder.java:81)\r\n\tat io.druid.java.util.common.guava.Yielders$2.close(Yielders.java:73)\r\n\tat io.druid.java.util.common.guava.ConcatSequence.wrapYielder(ConcatSequence.java:114)\r\n\tat io.druid.java.util.common.guava.ConcatSequence.access$000(ConcatSequence.java:29)\r\n\tat io.druid.java.util.common.guava.ConcatSequence$2.next(ConcatSequence.java:134)\r\n\tat io.druid.sql.avatica.DruidStatement.nextFrame(DruidStatement.java:284)\r\n\tat io.druid.sql.avatica.DruidMeta.fetch(DruidMeta.java:233)\r\n\tat org.apache.calcite.avatica.remote.LocalService.apply(LocalService.java:239)\r\n\tat org.apache.calcite.avatica.remote.Service$FetchRequest.accept(Service.java:1371)\r\n\tat org.apache.calcite.avatica.remote.Service$FetchRequest.accept(Service.java:1338)\r\n\tat org.apache.calcite.avatica.remote.AbstractHandler.apply(AbstractHandler.java:94)\r\n\tat org.apache.calcite.avatica.remote.JsonHandler.apply(JsonHandler.java:52)\r\n\tat org.apache.calcite.avatica.server.AvaticaJsonHandler.handle(AvaticaJsonHandler.java:130)\r\n\tat io.druid.sql.avatica.DruidAvaticaHandler.handle(DruidAvaticaHandler.java:60)\r\n\tat org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\r\n\tat org.eclipse.jetty.server.Server.handle(Server.java:534)\r\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:320)\r\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:251)\r\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:283)\r\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:108)\r\n\tat org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\r\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)\r\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)\r\n\tat org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:671)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:589)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tSuppressed: java.lang.RuntimeException: java.util.concurrent.ExecutionException: java.lang.IllegalStateException: DefaultQueryMetrics must not be modified from multiple threads. If it is needed to gather dimension or metric information from multiple threads or from an async thread, this information should explicitly be passed between threads (e. g. using Futures), or this DefaultQueryMetrics's ownerThread should be reassigned explicitly\r\n\t\tat com.google.common.base.Throwables.propagate(Throwables.java:160)\r\n\t\tat io.druid.sql.avatica.DruidStatement.close(DruidStatement.java:342)\r\n\t\tat io.druid.sql.avatica.DruidStatement.nextFrame(DruidStatement.java:297)\r\n\t\t... 22 more\r\n\tCaused by: java.util.concurrent.ExecutionException: java.lang.IllegalStateException: DefaultQueryMetrics must not be modified from multiple threads. If it is needed to gather dimension or metric information from multiple threads or from an async thread, this information should explicitly be passed between threads (e. g. using Futures), or this DefaultQueryMetrics's ownerThread should be reassigned explicitly\r\n\t\tat java.util.concurrent.FutureTask.report(FutureTask.java:122)\r\n\t\tat java.util.concurrent.FutureTask.get(FutureTask.java:192)\r\n\t\tat io.druid.sql.avatica.DruidStatement.close(DruidStatement.java:326)\r\n\t\t... 23 more\r\n\tCaused by: java.lang.IllegalStateException: DefaultQueryMetrics must not be modified from multiple threads. If it is needed to gather dimension or metric information from multiple threads or from an async thread, this information should explicitly be passed between threads (e. g. using Futures), or this DefaultQueryMetrics's ownerThread should be reassigned explicitly\r\n\t\tat io.druid.query.DefaultQueryMetrics.checkModifiedFromOwnerThread(DefaultQueryMetrics.java:59)\r\n\t\tat io.druid.query.DefaultQueryMetrics.reportMetric(DefaultQueryMetrics.java:259)\r\n\t\tat io.druid.query.DefaultQueryMetrics.reportCpuTime(DefaultQueryMetrics.java:237)\r\n\t\tat io.druid.query.select.DefaultSelectQueryMetrics.reportCpuTime(DefaultSelectQueryMetrics.java:201)\r\n\t\tat io.druid.query.CPUTimeMetricQueryRunner$1.after(CPUTimeMetricQueryRunner.java:87)\r\n\t\tat io.druid.java.util.common.guava.WrappingYielder.close(WrappingYielder.java:96)\r\n\t\tat io.druid.java.util.common.guava.WrappingYielder.close(WrappingYielder.java:81)\r\n\t\tat io.druid.java.util.common.guava.ConcatSequence$2.close(ConcatSequence.java:148)\r\n\t\tat io.druid.java.util.common.guava.ConcatSequence$2.close(ConcatSequence.java:147)\r\n\t\tat io.druid.sql.avatica.DruidStatement.lambda$close$1(DruidStatement.java:322)\r\n\t\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t\t... 1 more\r\n`\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411160413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411163311","html_url":"https://github.com/apache/druid/issues/5006#issuecomment-411163311","issue_url":"https://api.github.com/repos/apache/druid/issues/5006","id":411163311,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTE2MzMxMQ==","user":{"login":"RestfulBlue","id":32250229,"node_id":"MDQ6VXNlcjMyMjUwMjI5","avatar_url":"https://avatars.githubusercontent.com/u/32250229?v=4","gravatar_id":"","url":"https://api.github.com/users/RestfulBlue","html_url":"https://github.com/RestfulBlue","followers_url":"https://api.github.com/users/RestfulBlue/followers","following_url":"https://api.github.com/users/RestfulBlue/following{/other_user}","gists_url":"https://api.github.com/users/RestfulBlue/gists{/gist_id}","starred_url":"https://api.github.com/users/RestfulBlue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RestfulBlue/subscriptions","organizations_url":"https://api.github.com/users/RestfulBlue/orgs","repos_url":"https://api.github.com/users/RestfulBlue/repos","events_url":"https://api.github.com/users/RestfulBlue/events{/privacy}","received_events_url":"https://api.github.com/users/RestfulBlue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T18:53:26Z","updated_at":"2018-08-07T19:03:13Z","author_association":"NONE","body":"@gianm yes, i have considered, but currently druid api can be used only from some ui apps, like grafana/metabase/etc. if we let every analytic/data scientist in our company access to api , then entire druid cluster will crash really soon :( only one way to protect it now is timeout with low value ( about 10s). in 12.2 druid ingestion via kafka indexing task looks stable. We have separated cluster for stress testing, with throughput about 500000rows/sec on hardware with 8 cores, 64gb mem, 6 servers and now there s no failed tasks ( in 12.1 1/3 of task was failed), but currently query api looks really unstable and too many things can go wrong ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411163311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411176545","html_url":"https://github.com/apache/druid/issues/5006#issuecomment-411176545","issue_url":"https://api.github.com/repos/apache/druid/issues/5006","id":411176545,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTE3NjU0NQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T19:38:20Z","updated_at":"2018-08-07T19:38:20Z","author_association":"CONTRIBUTOR","body":"@RestfulBlue I'd really try to move to Scan queries if you can… ultimately I believe we are going to be deprecating and removing Select queries. They are broken beyond repair, imo, and Scan is a good replacement (especially after #6088).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411176545/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411209773","html_url":"https://github.com/apache/druid/issues/6088#issuecomment-411209773","issue_url":"https://api.github.com/repos/apache/druid/issues/6088","id":411209773,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTIwOTc3Mw==","user":{"login":"KenjiTakahashi","id":431488,"node_id":"MDQ6VXNlcjQzMTQ4OA==","avatar_url":"https://avatars.githubusercontent.com/u/431488?v=4","gravatar_id":"","url":"https://api.github.com/users/KenjiTakahashi","html_url":"https://github.com/KenjiTakahashi","followers_url":"https://api.github.com/users/KenjiTakahashi/followers","following_url":"https://api.github.com/users/KenjiTakahashi/following{/other_user}","gists_url":"https://api.github.com/users/KenjiTakahashi/gists{/gist_id}","starred_url":"https://api.github.com/users/KenjiTakahashi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KenjiTakahashi/subscriptions","organizations_url":"https://api.github.com/users/KenjiTakahashi/orgs","repos_url":"https://api.github.com/users/KenjiTakahashi/repos","events_url":"https://api.github.com/users/KenjiTakahashi/events{/privacy}","received_events_url":"https://api.github.com/users/KenjiTakahashi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T21:32:57Z","updated_at":"2018-08-07T21:32:57Z","author_association":"CONTRIBUTOR","body":"FYI: I'd just like to see this kept as option in the query, so ones that do no need sorting avoid the performance hit.\r\n\r\nI'd also point out that, besides the memory hit, select also tends to be very slow. In some of our cases, it was literally 100's of times vs. scan.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411209773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411212023","html_url":"https://github.com/apache/druid/issues/5006#issuecomment-411212023","issue_url":"https://api.github.com/repos/apache/druid/issues/5006","id":411212023,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTIxMjAyMw==","user":{"login":"KenjiTakahashi","id":431488,"node_id":"MDQ6VXNlcjQzMTQ4OA==","avatar_url":"https://avatars.githubusercontent.com/u/431488?v=4","gravatar_id":"","url":"https://api.github.com/users/KenjiTakahashi","html_url":"https://github.com/KenjiTakahashi","followers_url":"https://api.github.com/users/KenjiTakahashi/followers","following_url":"https://api.github.com/users/KenjiTakahashi/following{/other_user}","gists_url":"https://api.github.com/users/KenjiTakahashi/gists{/gist_id}","starred_url":"https://api.github.com/users/KenjiTakahashi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KenjiTakahashi/subscriptions","organizations_url":"https://api.github.com/users/KenjiTakahashi/orgs","repos_url":"https://api.github.com/users/KenjiTakahashi/repos","events_url":"https://api.github.com/users/KenjiTakahashi/events{/privacy}","received_events_url":"https://api.github.com/users/KenjiTakahashi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T21:41:17Z","updated_at":"2018-08-07T21:41:17Z","author_association":"CONTRIBUTOR","body":"I'm with @gianm on this. I have examined the select in quite a detail in the past (before scan came to be, it is to be found somewhere in the issues/mailing list) and, sorry to say, but IMHO the whole design is just wrong, there's no use in trying to improve on it. Especially now, when we have scan.\r\n\r\nFYI: We have since moved all but one (and a very rarely occurring one, that needs #6088, actually) of our queries to scan and never looked back.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411212023/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411213124","html_url":"https://github.com/apache/druid/issues/5577#issuecomment-411213124","issue_url":"https://api.github.com/repos/apache/druid/issues/5577","id":411213124,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTIxMzEyNA==","user":{"login":"sasounda","id":18609305,"node_id":"MDQ6VXNlcjE4NjA5MzA1","avatar_url":"https://avatars.githubusercontent.com/u/18609305?v=4","gravatar_id":"","url":"https://api.github.com/users/sasounda","html_url":"https://github.com/sasounda","followers_url":"https://api.github.com/users/sasounda/followers","following_url":"https://api.github.com/users/sasounda/following{/other_user}","gists_url":"https://api.github.com/users/sasounda/gists{/gist_id}","starred_url":"https://api.github.com/users/sasounda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sasounda/subscriptions","organizations_url":"https://api.github.com/users/sasounda/orgs","repos_url":"https://api.github.com/users/sasounda/repos","events_url":"https://api.github.com/users/sasounda/events{/privacy}","received_events_url":"https://api.github.com/users/sasounda/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-07T21:45:39Z","updated_at":"2018-08-07T21:46:06Z","author_association":"NONE","body":"@gianm @fjy just wanted to check if someone is looking into this ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411213124/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411246720","html_url":"https://github.com/apache/druid/pull/6120#issuecomment-411246720","issue_url":"https://api.github.com/repos/apache/druid/issues/6120","id":411246720,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTI0NjcyMA==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T00:39:36Z","updated_at":"2018-08-08T00:39:36Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411246720/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411254406","html_url":"https://github.com/apache/druid/issues/6124#issuecomment-411254406","issue_url":"https://api.github.com/repos/apache/druid/issues/6124","id":411254406,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTI1NDQwNg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T01:30:34Z","updated_at":"2018-08-08T01:30:34Z","author_association":"CONTRIBUTOR","body":"> 5. Since the segments which are published twice are already stored in metastore, the publish fails.\r\n\r\nThis doesn't seem right: there is code specifically to handle the case where a task tries to publish a segment that some task already published. It happens all the time with replicas, and they just ignore that segment and move on to the next one.\r\n\r\nI wonder if the real reason for publish failure is that the startMetadata doesn't match up. I bet it wouldn't match up: it sounds like the task is trying to publish from the point it _originally_ started from rather than from the point it last published.\r\n\r\nIt sounds like there are two separate problems here:\r\n\r\n- In (7) the task should not have removed the published segments (this is the biggest bug).\r\n- In (3) the task should have done something smarter instead of restoring a setup that couldn't possibly work out.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411254406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411255990","html_url":"https://github.com/apache/druid/pull/6127#issuecomment-411255990","issue_url":"https://api.github.com/repos/apache/druid/issues/6127","id":411255990,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTI1NTk5MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T01:40:54Z","updated_at":"2018-08-08T01:40:54Z","author_association":"CONTRIBUTOR","body":"I LOVE THIS IDEA.\r\n\r\nPlease add some lines to redirects.json so the old links keep working.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411255990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411262036","html_url":"https://github.com/apache/druid/pull/6127#issuecomment-411262036","issue_url":"https://api.github.com/repos/apache/druid/issues/6127","id":411262036,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTI2MjAzNg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T02:20:48Z","updated_at":"2018-08-08T02:20:48Z","author_association":"CONTRIBUTOR","body":"Updated redirects","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411262036/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411279909","html_url":"https://github.com/apache/druid/issues/6124#issuecomment-411279909","issue_url":"https://api.github.com/repos/apache/druid/issues/6124","id":411279909,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTI3OTkwOQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T04:21:50Z","updated_at":"2018-08-08T04:22:53Z","author_association":"CONTRIBUTOR","body":"> This doesn't seem right: there is code specifically to handle the case where a task tries to publish a segment that some task already published. It happens all the time with replicas, and they just ignore that segment and move on to the next one.\r\n\r\nYes, correct. The task doesn't fail at this point, but it just fails to update the metastore.\r\n\r\n> I wonder if the real reason for publish failure is that the startMetadata doesn't match up. I bet it wouldn't match up: it sounds like the task is trying to publish from the point it originally started from rather than from the point it last published.\r\n\r\nHere is the [code](https://github.com/apache/incubator-druid/blob/master/server/src/main/java/io/druid/segment/realtime/appenderator/BaseAppenderatorDriver.java#L555-L581) what this error happens.\r\n\r\n```java\r\n              final boolean published = publisher.publishSegments(\r\n                  ImmutableSet.copyOf(segmentsAndMetadata.getSegments()),\r\n                  metadata == null ? null : ((AppenderatorDriverMetadata) metadata).getCallerMetadata()\r\n              );\r\n\r\n              if (published) {\r\n                log.info(\"Published segments.\");\r\n              } else {\r\n                log.info(\"Transaction failure while publishing segments, checking if someone else beat us to it.\");\r\n                final Set<SegmentIdentifier> segmentsIdentifiers = segmentsAndMetadata\r\n                    .getSegments()\r\n                    .stream()\r\n                    .map(SegmentIdentifier::fromDataSegment)\r\n                    .collect(Collectors.toSet());\r\n                if (usedSegmentChecker.findUsedSegments(segmentsIdentifiers)\r\n                                      .equals(Sets.newHashSet(segmentsAndMetadata.getSegments()))) {\r\n                  log.info(\r\n                      \"Removing our segments from deep storage because someone else already published them: %s\",\r\n                      segmentsAndMetadata.getSegments()\r\n                  );\r\n                  segmentsAndMetadata.getSegments().forEach(dataSegmentKiller::killQuietly);\r\n\r\n                  log.info(\"Our segments really do exist, awaiting handoff.\");\r\n                } else {\r\n                  throw new ISE(\"Failed to publish segments[%s]\", segmentsAndMetadata.getSegments());\r\n                }\r\n              }\r\n```\r\n\r\n`published` is false, so the task checks the segments it failed to publish are already being used using `usedSegmentChecker` which is the `ActionBasedUsedSegmentChecker` in this case. And `usedSegmentChecker.findUsedSegments(segmentsIdentifiers).equals(Sets.newHashSet(segmentsAndMetadata.getSegments()))` returns false and the task throws an exception. This is because the task generated more segments after restarting. I've verified this by comparing the publishing segments before and after restart.\r\n\r\nI didn't see any logs related to metadata mismatch. \r\n\r\n> In (7) the task should not have removed the published segments (this is the biggest bug).\r\n\r\nNot sure about this. This can make publishing segments non-atomic as well as potential garbage segments. Probably solving (3) would be enough because this should never happen?\r\n\r\n> In (3) the task should have done something smarter instead of restoring a setup that couldn't possibly work out.\r\n\r\nYes, I think we should keep the task states in local disk which represents what the task was doing. Also, for `usedSegmentChecker.findUsedSegments(segmentsIdentifiers).equals(Sets.newHashSet(segmentsAndMetadata.getSegments()))`, we can change this to check `usedSegments` _include_ `segmentsAndMetadata.getSegments()` and continue publishing the segments not in `usedSegments`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411279909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411281495","html_url":"https://github.com/apache/druid/issues/6004#issuecomment-411281495","issue_url":"https://api.github.com/repos/apache/druid/issues/6004","id":411281495,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTI4MTQ5NQ==","user":{"login":"doc987","id":36803572,"node_id":"MDQ6VXNlcjM2ODAzNTcy","avatar_url":"https://avatars.githubusercontent.com/u/36803572?v=4","gravatar_id":"","url":"https://api.github.com/users/doc987","html_url":"https://github.com/doc987","followers_url":"https://api.github.com/users/doc987/followers","following_url":"https://api.github.com/users/doc987/following{/other_user}","gists_url":"https://api.github.com/users/doc987/gists{/gist_id}","starred_url":"https://api.github.com/users/doc987/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/doc987/subscriptions","organizations_url":"https://api.github.com/users/doc987/orgs","repos_url":"https://api.github.com/users/doc987/repos","events_url":"https://api.github.com/users/doc987/events{/privacy}","received_events_url":"https://api.github.com/users/doc987/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T04:30:26Z","updated_at":"2018-08-08T04:30:26Z","author_association":"NONE","body":"That gets part of the way there, though the data provided by Collectd and Telegraf are formatted somewhat differently.  That means that either the an output transform would be needed for those programs, or an input transform for Druid.\r\n\r\nThe documentation page for the [Collectd JSON format](https://collectd.org/wiki/index.php/JSON) is currently down.  The Telegraf JSON format documentation is [here](https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md).\r\n\r\nSome sample code is shown below to convert JSON from Telegraf to JSON for Druid.  Due to the flattening of the JSON, there are some tag names (metric, name, timestamp, and value) that could result in name collisions, and are therefore dropped (if they exist) in the code below.  Another possibility would be to try and determine an alternative name.\r\n\r\nAny opinions on a good approach to take?  For example:\r\n1. Should Druid be able to read the Telegraf JSON format directly?  Since it's a rather generic format, it could also be used by other applications.\r\n2. Should the Telegraf format be flattened to the JSON format that Druid already reads?  If so, should the code be part of Druid, or separate?\r\n\r\nThe Druid [documentation](http://druid.io/docs/0.12.1/development/modules.html) mentions that ```io.druid.data.input.impl.InputRowParser``` should be extended for an input parser.\r\n\r\n```java\r\nimport java.util.*;\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport com.fasterxml.jackson.databind.JsonNode;\r\nimport com.fasterxml.jackson.databind.node.ObjectNode;\r\n\r\n//given String json from Telegraf, it might be converted to JSON input for Druid as follows\r\nTelegraf_Flatten tf = new Telegraf_Flatten();\r\nJsonNode node = tf.json_string_to_node(json);\r\njson = tf.flatten(node);\r\n\r\nclass Telegraf_Flatten {\r\n   \r\n   public JsonNode json_string_to_node(String json){\r\n      ObjectMapper mapper = new ObjectMapper();\r\n      JsonNode node = null;\r\n      try{\r\n         node = mapper.readTree(json);\r\n      }catch(java.io.IOException e){\r\n         e.printStackTrace();\r\n      }\r\n      return node;\r\n   }\r\n   \r\n   public String flatten(JsonNode node){\r\n      String json = null;\r\n      JsonNode metrics = node.path(\"metrics\");\r\n      if(metrics.isMissingNode()) json = flatten_single(node);\r\n      else json = this.flatten_batch(metrics);\r\n      return json;\r\n   }\r\n   \r\n   public String flatten_batch(JsonNode metrics){\r\n      String json = \"\";\r\n      for(JsonNode item : metrics){\r\n         json += this.flatten_single(item);\r\n      }\r\n      return json;\r\n   }\r\n   \r\n   public String flatten_single(JsonNode root){\r\n      \r\n      //extract nested json\r\n      JsonNode fields = root.get(\"fields\");\r\n      JsonNode tags   = root.path(\"tags\");\r\n      \r\n      ((ObjectNode) root).remove(\"fields\");\r\n      \r\n      //flatten tags\r\n      if(!tags.isMissingNode()){\r\n         ((ObjectNode) root).remove(\"tags\");\r\n         Iterator<Map.Entry<String,JsonNode>> iter = tags.fields();\r\n         while(iter.hasNext()){\r\n            Map.Entry<String,JsonNode> entry = iter.next();\r\n            if(root.path(entry.getKey()).isMissingNode()){\r\n               ((ObjectNode) root).set(entry.getKey(),entry.getValue());\r\n            }\r\n         }\r\n      }\r\n      \r\n      //split into one JsonNode object per field\r\n      Iterator<Map.Entry<String,JsonNode>> iter = fields.fields();\r\n      int metrics = fields.size();\r\n      JsonNode[] row = new JsonNode[metrics];\r\n      for(int i=0;iter.hasNext();i++){\r\n         Map.Entry<String,JsonNode> entry = iter.next();\r\n         row[i] = root.deepCopy();\r\n         ((ObjectNode) row[i]).put(\"metric\",entry.getKey());\r\n         ((ObjectNode) row[i]).set(\"value\",entry.getValue());\r\n      }\r\n      \r\n      //convert JsonNode(s) to JSON String\r\n      ObjectMapper mapper = new ObjectMapper();\r\n      String json = \"\";\r\n      for(int i=0;i<metrics;i++){\r\n         try{\r\n            json += mapper.writeValueAsString(row[i]) + \"\\n\";\r\n         }catch(JsonProcessingException e){\r\n            e.printStackTrace();\r\n         }\r\n      }\r\n      \r\n      return json;\r\n   }\r\n   \r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411281495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411288680","html_url":"https://github.com/apache/druid/issues/6004#issuecomment-411288680","issue_url":"https://api.github.com/repos/apache/druid/issues/6004","id":411288680,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTI4ODY4MA==","user":{"login":"josephglanville","id":605591,"node_id":"MDQ6VXNlcjYwNTU5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/605591?v=4","gravatar_id":"","url":"https://api.github.com/users/josephglanville","html_url":"https://github.com/josephglanville","followers_url":"https://api.github.com/users/josephglanville/followers","following_url":"https://api.github.com/users/josephglanville/following{/other_user}","gists_url":"https://api.github.com/users/josephglanville/gists{/gist_id}","starred_url":"https://api.github.com/users/josephglanville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josephglanville/subscriptions","organizations_url":"https://api.github.com/users/josephglanville/orgs","repos_url":"https://api.github.com/users/josephglanville/repos","events_url":"https://api.github.com/users/josephglanville/events{/privacy}","received_events_url":"https://api.github.com/users/josephglanville/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T05:22:01Z","updated_at":"2018-08-08T05:22:01Z","author_association":"CONTRIBUTOR","body":"It's already possible for an InputRowParser to automatically do this. When writing an InputRowParser you can choose to ignore the DimensionSpec/MetricsSpec and just emit MapBasedInputRow's with the appropriate shape.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411288680/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411322910","html_url":"https://github.com/apache/druid/pull/5712#issuecomment-411322910","issue_url":"https://api.github.com/repos/apache/druid/issues/5712","id":411322910,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTMyMjkxMA==","user":{"login":"DaimonPl","id":9693936,"node_id":"MDQ6VXNlcjk2OTM5MzY=","avatar_url":"https://avatars.githubusercontent.com/u/9693936?v=4","gravatar_id":"","url":"https://api.github.com/users/DaimonPl","html_url":"https://github.com/DaimonPl","followers_url":"https://api.github.com/users/DaimonPl/followers","following_url":"https://api.github.com/users/DaimonPl/following{/other_user}","gists_url":"https://api.github.com/users/DaimonPl/gists{/gist_id}","starred_url":"https://api.github.com/users/DaimonPl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaimonPl/subscriptions","organizations_url":"https://api.github.com/users/DaimonPl/orgs","repos_url":"https://api.github.com/users/DaimonPl/repos","events_url":"https://api.github.com/users/DaimonPl/events{/privacy}","received_events_url":"https://api.github.com/users/DaimonPl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T08:05:24Z","updated_at":"2018-08-08T08:05:24Z","author_association":"CONTRIBUTOR","body":"We are looking forward to have this feature.\r\n\r\nWe had to migrate another datasource from druid hll to thetasketch - because druid hll was as innacurate as 10% in some case. But... we are only doing count distinct approximation - once we have HllSketch available we would most likely migrate to it from thetasketch for speed/size improvement","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411322910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411335095","html_url":"https://github.com/apache/druid/issues/5006#issuecomment-411335095","issue_url":"https://api.github.com/repos/apache/druid/issues/5006","id":411335095,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTMzNTA5NQ==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T08:51:39Z","updated_at":"2018-08-08T08:51:39Z","author_association":"MEMBER","body":"> some ui apps, like grafana/metabase/etc. if we let every analytic/data scientist in our company access to api , then entire druid cluster will crash really soon\r\n\r\nHi, @RestfulBlue . Maybe you can try [Apache Superset](https://github.com/apache/superset), which supports permission control to prevent  ordinary users from sending queries that consume a lot of server resources, in addition, Superset also can predefine some dashboards instead of directly exposing the query api.\r\n\r\nTips: There is an [article](https://yuzhouwan.com/posts/743/) about superset on my personal blog that might help you.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411335095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411394513","html_url":"https://github.com/apache/druid/issues/6004#issuecomment-411394513","issue_url":"https://api.github.com/repos/apache/druid/issues/6004","id":411394513,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTM5NDUxMw==","user":{"login":"doc987","id":36803572,"node_id":"MDQ6VXNlcjM2ODAzNTcy","avatar_url":"https://avatars.githubusercontent.com/u/36803572?v=4","gravatar_id":"","url":"https://api.github.com/users/doc987","html_url":"https://github.com/doc987","followers_url":"https://api.github.com/users/doc987/followers","following_url":"https://api.github.com/users/doc987/following{/other_user}","gists_url":"https://api.github.com/users/doc987/gists{/gist_id}","starred_url":"https://api.github.com/users/doc987/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/doc987/subscriptions","organizations_url":"https://api.github.com/users/doc987/orgs","repos_url":"https://api.github.com/users/doc987/repos","events_url":"https://api.github.com/users/doc987/events{/privacy}","received_events_url":"https://api.github.com/users/doc987/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T12:53:17Z","updated_at":"2018-08-08T12:53:27Z","author_association":"NONE","body":"Isn't the code above acting as a row parser?  That is, transforming the input JSON format that Telegraf produces into the JSON format the Druid recognizes.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411394513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411459733","html_url":"https://github.com/apache/druid/pull/6128#issuecomment-411459733","issue_url":"https://api.github.com/repos/apache/druid/issues/6128","id":411459733,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTQ1OTczMw==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T16:02:37Z","updated_at":"2018-08-08T16:02:37Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411459733/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411459803","html_url":"https://github.com/apache/druid/pull/6127#issuecomment-411459803","issue_url":"https://api.github.com/repos/apache/druid/issues/6127","id":411459803,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTQ1OTgwMw==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T16:02:50Z","updated_at":"2018-08-08T16:02:50Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411459803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411459868","html_url":"https://github.com/apache/druid/pull/6126#issuecomment-411459868","issue_url":"https://api.github.com/repos/apache/druid/issues/6126","id":411459868,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTQ1OTg2OA==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T16:03:01Z","updated_at":"2018-08-08T16:03:01Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411459868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411459956","html_url":"https://github.com/apache/druid/pull/6122#issuecomment-411459956","issue_url":"https://api.github.com/repos/apache/druid/issues/6122","id":411459956,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTQ1OTk1Ng==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T16:03:15Z","updated_at":"2018-08-08T16:03:15Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411459956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411460359","html_url":"https://github.com/apache/druid/pull/6119#issuecomment-411460359","issue_url":"https://api.github.com/repos/apache/druid/issues/6119","id":411460359,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTQ2MDM1OQ==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T16:04:31Z","updated_at":"2018-08-08T16:04:31Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411460359/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411498697","html_url":"https://github.com/apache/druid/issues/6004#issuecomment-411498697","issue_url":"https://api.github.com/repos/apache/druid/issues/6004","id":411498697,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTQ5ODY5Nw==","user":{"login":"josephglanville","id":605591,"node_id":"MDQ6VXNlcjYwNTU5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/605591?v=4","gravatar_id":"","url":"https://api.github.com/users/josephglanville","html_url":"https://github.com/josephglanville","followers_url":"https://api.github.com/users/josephglanville/followers","following_url":"https://api.github.com/users/josephglanville/following{/other_user}","gists_url":"https://api.github.com/users/josephglanville/gists{/gist_id}","starred_url":"https://api.github.com/users/josephglanville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josephglanville/subscriptions","organizations_url":"https://api.github.com/users/josephglanville/orgs","repos_url":"https://api.github.com/users/josephglanville/repos","events_url":"https://api.github.com/users/josephglanville/events{/privacy}","received_events_url":"https://api.github.com/users/josephglanville/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T18:04:45Z","updated_at":"2018-08-08T18:04:45Z","author_association":"CONTRIBUTOR","body":"@doc987 InputRowParsers are actually specific code that is loaded as a Druid extension so rather than running externally of Druid and transforming the data into a format Druid already knows how to parse (like JSON) they can read the format directly and turn it into Druid's internal \"InputRow\" representation directly. This obviates the need for a configured schema in cases where the message contains the schema itself and there is a logic mapping of the source format to dimensions.\r\n\r\nThe important part of the picture is that dimensionSpec/metricsSpec in the provided ingestion spec doesn't need to be respected by your InputRowParser, the segment indexing code only cares about values returned from the parser itself which encode this information along with the row contents itself.\r\nSee the constructor for MapBasedInputRow for clarity.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411498697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/411507775","html_url":"https://github.com/apache/druid/issues/6113#issuecomment-411507775","issue_url":"https://api.github.com/repos/apache/druid/issues/6113","id":411507775,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMTUwNzc3NQ==","user":{"login":"Harish346","id":40431077,"node_id":"MDQ6VXNlcjQwNDMxMDc3","avatar_url":"https://avatars.githubusercontent.com/u/40431077?v=4","gravatar_id":"","url":"https://api.github.com/users/Harish346","html_url":"https://github.com/Harish346","followers_url":"https://api.github.com/users/Harish346/followers","following_url":"https://api.github.com/users/Harish346/following{/other_user}","gists_url":"https://api.github.com/users/Harish346/gists{/gist_id}","starred_url":"https://api.github.com/users/Harish346/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Harish346/subscriptions","organizations_url":"https://api.github.com/users/Harish346/orgs","repos_url":"https://api.github.com/users/Harish346/repos","events_url":"https://api.github.com/users/Harish346/events{/privacy}","received_events_url":"https://api.github.com/users/Harish346/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-08T18:33:51Z","updated_at":"2018-08-28T11:13:45Z","author_association":"NONE","body":"Hi @gianm \r\n**This is my ingestion spec file**\r\n\r\n{\r\n  \"type\": \"index_hadoop\",\r\n  \"spec\": {\r\n    \"ioConfig\": {\r\n      \"type\": \"hadoop\",\r\n      \"inputSpec\": {\r\n        \"type\": \"static\",\r\n        \"paths\": \"quickstart/samplefile.json\"\r\n      }\r\n    },\r\n    \"dataSchema\": {\r\n      \"dataSource\": \"samplefile\",\r\n      \"granularitySpec\": {\r\n        \"type\": \"uniform\",\r\n        \"segmentGranularity\": \"day\",\r\n        \"queryGranularity\": {\r\n          \"type\": \"none\"\r\n        },\r\n        \"intervals\": null\r\n      },\r\n      \"parser\": {\r\n        \"type\": \"hadoopyString\",\r\n        \"parseSpec\": {\r\n          \"format\": \"json\",\r\n          \"flattenSpec\": {\r\n            \"useFieldDiscovery\": true,\r\n            \"fields\": [\r\n              {\r\n                \"type\": \"path\",\r\n                \"name\": \"category\",\r\n                \"expr\": \"$..category\"\r\n              },\r\n              {\r\n                \"type\": \"path\",\r\n                \"name\": \"author\",\r\n                \"expr\": \"$..author\"\r\n              },\r\n              {\r\n                \"type\": \"path\",\r\n                \"name\": \"price\",\r\n                \"expr\": \"$..price\"\r\n              }\r\n            ]\r\n          },\r\n          \"dimensionsSpec\": {\r\n            \"dimensions\": [\r\n              \"category\",\r\n              \"author\"\r\n            ]\r\n          },\r\n          \"timestampSpec\": {\r\n            \"format\": \"iso\",\r\n            \"column\": \"timestamp\"\r\n          }\r\n        }\r\n      },\r\n      \"metricsSpec\": [ ]\r\n    },\r\n    \"tuningConfig\": {\r\n      \"type\": \"hadoop\",\r\n      \"partitionsSpec\": {\r\n        \"type\": \"hashed\",\r\n        \"targetPartitionSize\": 5000000\r\n      },\r\n      \"jobProperties\": {\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n**and following is my json data**\r\n\r\n{\r\n  \"store\": {\r\n    \"timestamp\": \"2018-08-01\",\r\n    \"book\": [\r\n      {\r\n        \"category\": \"reference\",\r\n        \"author\": \"Nigel Rees\",\r\n        \"price\": 8.95\r\n      },\r\n      {\r\n        \"category\": \"fiction\",\r\n        \"author\": \"Evelyn Waugh\",\r\n        \"price\": 12.99\r\n      },\r\n      {\r\n        \"category\": \"fiction\",\r\n        \"author\": \"Herman Melville\",\r\n        \"price\": 8.99\r\n      },\r\n      {\r\n        \"category\": \"fiction\",\r\n        \"author\": \"J. R. R. Tolkien\",\r\n        \"price\": 22.99\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nwhen i try to insert data into druid the task get created but the status gets always failed.\r\n**Below is my log**\r\n\r\nuid-indexing-service-0.12.1.jar:0.12.1]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_171]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_171]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_171]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_171]\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_171]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_171]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_171]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_171]\r\n\tat io.druid.indexing.common.task.HadoopTask.invokeForeignLoader(HadoopTask.java:219) ~[druid-indexing-service-0.12.1.jar:0.12.1]\r\n\t... 7 more\r\nCaused by: io.druid.java.util.common.ISE: Job[class io.druid.indexer.DetermineHashedPartitionsJob] failed!\r\n\tat io.druid.indexer.JobHelper.runJobs(JobHelper.java:391) ~[druid-indexing-hadoop-0.12.1.jar:0.12.1]\r\n\tat io.druid.indexer.HadoopDruidDetermineConfigurationJob.run(HadoopDruidDetermineConfigurationJob.java:91) ~[druid-indexing-hadoop-0.12.1.jar:0.12.1]\r\n\tat io.druid.indexing.common.task.HadoopIndexTask$HadoopDetermineConfigInnerProcessing.runTask(HadoopIndexTask.java:325) ~[druid-indexing-service-0.12.1.jar:0.12.1]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_171]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_171]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_171]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_171]\r\n\tat io.druid.indexing.common.task.HadoopTask.invokeForeignLoader(HadoopTask.java:219) ~[druid-indexing-service-0.12.1.jar:0.12.1]\r\n\t... 7 more\r\n2018-08-08T18:23:07,101 INFO [task-runner-0-priority-0] io.druid.indexing.overlord.TaskRunnerUtils - Task [index_hadoop_samplefile_2018-08-08T18:22:53.394Z] status changed to [FAILED].\r\n2018-08-08T18:23:07,105 INFO [task-runner-0-priority-0] io.druid.indexing.worker.executor.ExecutorLifecycle - Task completed with status: {\r\n  \"id\" : \"index_hadoop_samplefile_2018-08-08T18:22:53.394Z\",\r\n  \"status\" : \"FAILED\",\r\n  \"duration\" : 7055\r\n}","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/411507775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]