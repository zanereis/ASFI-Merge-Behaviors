[{"url":"https://api.github.com/repos/apache/jena/issues/comments/1150148309","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1150148309","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1150148309,"node_id":"IC_kwDOAHF7Ec5Ejd7V","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-08T16:41:10Z","updated_at":"2022-06-08T17:22:54Z","author_association":"CONTRIBUTOR","body":"My first though about how to interpret LOOP variables was as follows:\r\n```sparql\r\n?s ?p ?o .\r\nLOOP (?s) {\r\n   ?s ?p ?o # becomes ?s ?/p ?/o\r\n   LOOP (?p) {\r\n     ?s ?p ?o # becomes ?/s ?/p ?//o\r\n   }\r\n   LOOP (?s ?p) {\r\n     ?s ?p ?o # becomes ?s ?/p ?///o\r\n   }\r\n}\r\n```\r\nBut this means that any 'output' would have to be declared in addition and I guess that would be quite odd to use.\r\n\r\nSo if I understand correctly then the purpose of loop variables is to specify which of the variables to substitute **regardless** of scoping:\r\n```sparql\r\n?s ?p ?o\r\nLOOP (?s) {\r\n  SELECT (MIN(?o) AS ?x) {\r\n    ?s ?p ?o # Substitute the ?s here for any input ?s - even if internally we have ?/s ?/p ?/o\r\n  } GROUP BY ?p\r\n}\r\n```\r\nThis would mean that LOOP itself does not start a new scope - so ?x is visible to the outside as is.\r\nSo my remark with having to touch `TransformScopeRename` may thus be wrong and it's actually just a matter of getting the substitution right in the presence of scoped variables (and leaving the scope of unaffected variables untouched).\r\n\r\n\r\nFor my work on the plugin I may need to revise with my recent thoughts on this subject.\r\n\r\nI think I am now working on the last problem for finishing the functionality of the PR: dealing with unknown result set limits in the cache: A service clause with caching and/or bulk enabled should yield the exact same result as if these modifiers were absent.\r\nThis means I need to fiddle in some logic tha considers the 'largest seen result set size on a service so far' and which avoids serving data from cache if it cannot be guaranteed that the invisible result set size limit will be adhered to.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1150148309/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1150759426","html_url":"https://github.com/apache/jena/issues/1252#issuecomment-1150759426","issue_url":"https://api.github.com/repos/apache/jena/issues/1252","id":1150759426,"node_id":"IC_kwDOAHF7Ec5ElzIC","user":{"login":"kdejaeger","id":279268,"node_id":"MDQ6VXNlcjI3OTI2OA==","avatar_url":"https://avatars.githubusercontent.com/u/279268?v=4","gravatar_id":"","url":"https://api.github.com/users/kdejaeger","html_url":"https://github.com/kdejaeger","followers_url":"https://api.github.com/users/kdejaeger/followers","following_url":"https://api.github.com/users/kdejaeger/following{/other_user}","gists_url":"https://api.github.com/users/kdejaeger/gists{/gist_id}","starred_url":"https://api.github.com/users/kdejaeger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kdejaeger/subscriptions","organizations_url":"https://api.github.com/users/kdejaeger/orgs","repos_url":"https://api.github.com/users/kdejaeger/repos","events_url":"https://api.github.com/users/kdejaeger/events{/privacy}","received_events_url":"https://api.github.com/users/kdejaeger/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-09T07:16:04Z","updated_at":"2022-06-09T07:16:04Z","author_association":"NONE","body":"Can you guys document the 'deleteOld' parameter in de documentation. And also add a deleteOld parameter on the backup command?","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1150759426/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1150773823","html_url":"https://github.com/apache/jena/issues/1252#issuecomment-1150773823","issue_url":"https://api.github.com/repos/apache/jena/issues/1252","id":1150773823,"node_id":"IC_kwDOAHF7Ec5El2o_","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-09T07:32:03Z","updated_at":"2022-06-09T07:32:03Z","author_association":"MEMBER","body":"@kdejaeger - the website source is at https://github.com/apache/jena-site/ if you want to put in a pull request.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1150773823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1151439147","html_url":"https://github.com/apache/jena/pull/1370#issuecomment-1151439147","issue_url":"https://api.github.com/repos/apache/jena/issues/1370","id":1151439147,"node_id":"IC_kwDOAHF7Ec5EoZEr","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-09T18:05:12Z","updated_at":"2022-06-09T18:05:41Z","author_association":"CONTRIBUTOR","body":"I added the test case and rebased / squashed the commits.\r\nFor robustness I replaced the naive class cast with a check to ensure that there exists an ElementGroup to which to append the ElementBinds.\r\n\r\n```java\r\nif (activeElement instanceof ElementGroup) {\r\n    activeGroup = (ElementGroup)activeElement;\r\n} else {\r\n    // Not sure whether it's possible here for BINDs to exist with the\r\n    // activeElement NOT being a group pattern - but better safe than sorry\r\n    activeGroup = new ElementGroup();\r\n    activeGroup.addElement(activeElement);\r\n    query.setQueryPattern(activeGroup);\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1151439147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152082914","html_url":"https://github.com/apache/jena/issues/1369#issuecomment-1152082914","issue_url":"https://api.github.com/repos/apache/jena/issues/1369","id":1152082914,"node_id":"IC_kwDOAHF7Ec5Eq2Pi","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T07:57:28Z","updated_at":"2022-06-10T07:57:28Z","author_association":"MEMBER","body":"Fixed by #1370.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152082914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152362592","html_url":"https://github.com/apache/jena/pull/1371#issuecomment-1152362592","issue_url":"https://api.github.com/repos/apache/jena/issues/1371","id":1152362592,"node_id":"IC_kwDOAHF7Ec5Er6hg","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T13:28:34Z","updated_at":"2022-06-10T13:28:34Z","author_association":"MEMBER","body":"How did you end up with a concatenated stream in the first place?","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152362592/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152388165","html_url":"https://github.com/apache/jena/pull/1371#issuecomment-1152388165","issue_url":"https://api.github.com/repos/apache/jena/issues/1371","id":1152388165,"node_id":"IC_kwDOAHF7Ec5EsAxF","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T13:53:58Z","updated_at":"2022-06-10T15:05:04Z","author_association":"CONTRIBUTOR","body":"We didn't generate the file but I have come across such concatenated streams several times.\r\nI suppose it's a pretty standard feature; one can just do\r\n\r\n```bash\r\necho \"<urn:s> <urn:p> <urn:o> .\" > file1.txt\r\necho \"<urn:x> <urn:y> <urn:z> .\" > file2.txt\r\nbzip2 -c file1.txt > output.txt.bz2\r\nbzip2 -c file2.txt >> output.txt.bz2\r\nbzcat output.txt.bz2\r\n\r\n# Output:\r\n<urn:s> <urn:p> <urn:o> .\r\n<urn:x> <urn:y> <urn:z> .\r\n```\r\n\r\nI suppose some data publishers just use bash for loops or `ls` / `find` with `xargs` to create concatenated compressed datasets.\r\n\r\nNote sure if the parallel versions of bzip2 (pbzip2 and lbzip2) generate them.too.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152388165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152397248","html_url":"https://github.com/apache/jena/pull/1371#issuecomment-1152397248","issue_url":"https://api.github.com/repos/apache/jena/issues/1371","id":1152397248,"node_id":"IC_kwDOAHF7Ec5EsC_A","user":{"login":"SimonBin","id":10867832,"node_id":"MDQ6VXNlcjEwODY3ODMy","avatar_url":"https://avatars.githubusercontent.com/u/10867832?v=4","gravatar_id":"","url":"https://api.github.com/users/SimonBin","html_url":"https://github.com/SimonBin","followers_url":"https://api.github.com/users/SimonBin/followers","following_url":"https://api.github.com/users/SimonBin/following{/other_user}","gists_url":"https://api.github.com/users/SimonBin/gists{/gist_id}","starred_url":"https://api.github.com/users/SimonBin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SimonBin/subscriptions","organizations_url":"https://api.github.com/users/SimonBin/orgs","repos_url":"https://api.github.com/users/SimonBin/repos","events_url":"https://api.github.com/users/SimonBin/events{/privacy}","received_events_url":"https://api.github.com/users/SimonBin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T14:03:30Z","updated_at":"2022-06-10T14:03:30Z","author_association":"CONTRIBUTOR","body":"as far as I know @LorenzBuehmann correct me if wrong such files are natively produced by [osm2rdf](https://github.com/ad-freiburg/osm2rdf), which uses multi-threaded streaming & compression","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152397248/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152443104","html_url":"https://github.com/apache/jena/pull/1371#issuecomment-1152443104","issue_url":"https://api.github.com/repos/apache/jena/issues/1371","id":1152443104,"node_id":"IC_kwDOAHF7Ec5EsOLg","user":{"login":"LorenzBuehmann","id":976029,"node_id":"MDQ6VXNlcjk3NjAyOQ==","avatar_url":"https://avatars.githubusercontent.com/u/976029?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzBuehmann","html_url":"https://github.com/LorenzBuehmann","followers_url":"https://api.github.com/users/LorenzBuehmann/followers","following_url":"https://api.github.com/users/LorenzBuehmann/following{/other_user}","gists_url":"https://api.github.com/users/LorenzBuehmann/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzBuehmann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzBuehmann/subscriptions","organizations_url":"https://api.github.com/users/LorenzBuehmann/orgs","repos_url":"https://api.github.com/users/LorenzBuehmann/repos","events_url":"https://api.github.com/users/LorenzBuehmann/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzBuehmann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T14:47:55Z","updated_at":"2022-06-10T14:47:55Z","author_association":"CONTRIBUTOR","body":"@SimonBin that is correct, the compressed file is from osm2rdf project. And yes, according to code they used multiple threads for generating the output: https://github.com/ad-freiburg/osm2rdf/blob/master/src/util/Output.cpp\r\nAnd they have `concat` or `merge` as options it looks like. Probably our output is just concatenated\r\n\r\n@afs is it an issue? or just something you'd never expect?","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152443104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152446660","html_url":"https://github.com/apache/jena/pull/1371#issuecomment-1152446660","issue_url":"https://api.github.com/repos/apache/jena/issues/1371","id":1152446660,"node_id":"IC_kwDOAHF7Ec5EsPDE","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T14:51:50Z","updated_at":"2022-06-10T14:51:50Z","author_association":"MEMBER","body":"If the file name is included and meaningful in some way (c.f. tar, zip) then the base URI is affected. But tools seem to stream the result so it doesn't appear meaningful.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152446660/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152452674","html_url":"https://github.com/apache/jena/pull/1371#issuecomment-1152452674","issue_url":"https://api.github.com/repos/apache/jena/issues/1371","id":1152452674,"node_id":"IC_kwDOAHF7Ec5EsQhC","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T14:58:07Z","updated_at":"2022-06-10T15:08:27Z","author_association":"CONTRIBUTOR","body":"Note: A concatenated bzip2 file is NOT an archive - it's just a stream of content - in our case triples. I updated my bash script above with an RDF example. This is in contrast to `tar` or `zip` which typically involves multiple files. In bzip2 there are no extra file names to deal with.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152452674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152616482","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1152616482","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1152616482,"node_id":"IC_kwDOAHF7Ec5Es4gi","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T18:13:21Z","updated_at":"2022-06-10T18:13:21Z","author_association":"MEMBER","body":"The PR will add an option to make jena-geosparql ignore any persistent index.  All lookups will only look in the geosparql RDF data. This way, queries are correct with respect to data updates but slow.\r\n\r\nIs this the right thing to include in the codebase?\r\n\r\n@vtermanis - at what scale have you used this? Does that usage include containment queries?\r\n\r\nI propose merging this if there is a PR to update the\r\ndocumentation\r\n(https://github.com/apache/jena-site/blob/main/source/documentation/geosparql/geosparql-assembler.md).\r\n\r\nIs there a reason why the index can't be updated?\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152616482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152690045","html_url":"https://github.com/apache/jena/pull/1330#issuecomment-1152690045","issue_url":"https://api.github.com/repos/apache/jena/issues/1330","id":1152690045,"node_id":"IC_kwDOAHF7Ec5EtKd9","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-10T19:59:16Z","updated_at":"2022-06-10T19:59:16Z","author_association":"MEMBER","body":"Looks OK except for some details.\r\n\r\nThe build does not run.\r\n\r\nPlease add the Apache header (the same as in other java files in Apache Jena) to:\r\n\r\n`AsGeoJSONFFTest.java`\r\n`AsGeoJSONFF.java`\r\n`GeoJSONDatatype.java`\r\n\r\nYou can run the build with `mvn clean install` or `mvn clean install -Pdev` (although that does not include jena-fuseki-geosparql).\r\n\r\nGeoJSON is mentioned at https://jena.apache.org/documentation/geosparql/, (source: https://github.com/apache/jena-site/blob/main/source/documentation/geosparql/__index.md) which needs updating.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152690045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152970204","html_url":"https://github.com/apache/jena/pull/1373#issuecomment-1152970204","issue_url":"https://api.github.com/repos/apache/jena/issues/1373","id":1152970204,"node_id":"IC_kwDOAHF7Ec5EuO3c","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-11T17:34:54Z","updated_at":"2022-06-11T17:34:54Z","author_association":"MEMBER","body":"@kinow - small step to having the UI available in Fuseki Main!","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1152970204/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153112661","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1153112661","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1153112661,"node_id":"IC_kwDOAHF7Ec5EuxpV","user":{"login":"LorenzBuehmann","id":976029,"node_id":"MDQ6VXNlcjk3NjAyOQ==","avatar_url":"https://avatars.githubusercontent.com/u/976029?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzBuehmann","html_url":"https://github.com/LorenzBuehmann","followers_url":"https://api.github.com/users/LorenzBuehmann/followers","following_url":"https://api.github.com/users/LorenzBuehmann/following{/other_user}","gists_url":"https://api.github.com/users/LorenzBuehmann/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzBuehmann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzBuehmann/subscriptions","organizations_url":"https://api.github.com/users/LorenzBuehmann/orgs","repos_url":"https://api.github.com/users/LorenzBuehmann/repos","events_url":"https://api.github.com/users/LorenzBuehmann/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzBuehmann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-12T09:26:22Z","updated_at":"2022-06-12T09:27:58Z","author_association":"CONTRIBUTOR","body":"Nitpicking: why would we call the method `prepareSpatialExtension` at all if the spatial index isn't enabled? All it would do is to check emptiness of the dataset (which has no benefit) and then return in the next ìf` clause -> no need to call the method\r\n\r\n> Is there a reason why the index can't be updated?\r\n\r\n@afs The reason is the underlying datastructure of JTS, the [`STRtree`](https://locationtech.github.io/jts/javadoc/org/locationtech/jts/index/strtree/STRtree.html) to which items cannot be inserted once it has been built. We could allow for an update mode and switch to a [`Quadtree`](https://locationtech.github.io/jts/javadoc/org/locationtech/jts/index/quadtree/Quadtree.html) (a bit slower, but allows for insert/remove operations).\r\nMoreover, we will have think careful about updating the \"other\" indexing structure of the geospatial layer as well, i.e. that literal, transformation and query rewrite part I think. ","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153112661/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153122216","html_url":"https://github.com/apache/jena/issues/1374#issuecomment-1153122216","issue_url":"https://api.github.com/repos/apache/jena/issues/1374","id":1153122216,"node_id":"IC_kwDOAHF7Ec5Euz-o","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-12T10:19:36Z","updated_at":"2022-06-12T10:19:36Z","author_association":"MEMBER","body":"Hi @sszuev ,\r\n\r\nA copy of the context will share the original registries - the way to modify that is to modify the copy of the context. I'd put that code in the PropertyFunctionRegistry, not \"teach\" context about a specific setting - moie discussion for the PR - the copy operations look useful.\r\n\r\nThe best control over a query setup is via the new (4.3.x) builders which allow a change of context: `QueryExec` for graph level, `QueryExecution.create` for model level (the associated builder also some legacy compatibility about setting timeouts).\r\n\r\n```\r\n        Graph graph = GraphFactory.createDefaultGraph();\r\n\r\n        PropertyFunctionRegistry pfr = new PropertyFunctionRegistry();\r\n        PropertyFunction pf = new version();\r\n        pfr.put(\"urn:test:version\", (x)->pf);\r\n\r\n        Context cxt = ARQ.getContext().copy();\r\n        PropertyFunctionRegistry.set(cxt, pfr);\r\n\r\n        String qs = \"\"\"\r\n                SELECT * { ?x <urn:test:version> ?y }\r\n                \"\"\";\r\n        RowSet rowSet = QueryExec.graph(graph)\r\n                .context(cxt)\r\n                .query(qs)\r\n                .select();\r\n        RowSetOps.out(rowSet);\r\n```\r\nUnrelated: there is a problem with some system provided property functions. There is a hardwired translation in the code.\r\n```\r\n        Graph graph = GraphFactory.createDefaultGraph();\r\n        Context cxt = ARQ.getContext().copy();    \r\n        PropertyFunctionRegistry pfr = new PropertyFunctionRegistry();\r\n        PropertyFunctionRegistry.set(cxt, pfr);\r\n        String qs = \"\"\"\r\n                PREFIX afn:     <http://jena.apache.org/ARQ/function#>\r\n                PREFIX apf:     <http://jena.apache.org/ARQ/property#>\r\n                SELECT * { ?x apf:version ?y }\r\n                \"\"\";\r\n        RowSet rowSet = QueryExec.graph(graph)\r\n                .context(cxt)\r\n                .query(qs)\r\n                .select();\r\n        RowSetOps.out(rowSet);\r\n```\r\ndoesn't work - `apf:version` is still a property function because `afn` and `apf` are hardwired in the registry code to map to \"java:\" URI which then will always happen. That's a bug.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153122216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153134326","html_url":"https://github.com/apache/jena/issues/1374#issuecomment-1153134326","issue_url":"https://api.github.com/repos/apache/jena/issues/1374","id":1153134326,"node_id":"IC_kwDOAHF7Ec5Eu272","user":{"login":"sszuev","id":17473366,"node_id":"MDQ6VXNlcjE3NDczMzY2","avatar_url":"https://avatars.githubusercontent.com/u/17473366?v=4","gravatar_id":"","url":"https://api.github.com/users/sszuev","html_url":"https://github.com/sszuev","followers_url":"https://api.github.com/users/sszuev/followers","following_url":"https://api.github.com/users/sszuev/following{/other_user}","gists_url":"https://api.github.com/users/sszuev/gists{/gist_id}","starred_url":"https://api.github.com/users/sszuev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sszuev/subscriptions","organizations_url":"https://api.github.com/users/sszuev/orgs","repos_url":"https://api.github.com/users/sszuev/repos","events_url":"https://api.github.com/users/sszuev/events{/privacy}","received_events_url":"https://api.github.com/users/sszuev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-12T11:29:25Z","updated_at":"2022-06-12T11:33:25Z","author_association":"CONTRIBUTOR","body":"There is also a problem (or feature) with the `org.apache.jena.query.Query` itself: it caches functions in thread-unsafe manner. \r\nThis was unexpected behavior for me, and for a while I didn't realize that my code was working incorrectly.\r\n\r\nThis one is also a reason (although weak) to have obvious way to create ready to use `QueryExecution` from scratch with specified context, from some well-known place.  \r\nBut yes, we always can do the same things in our client-projects instead of patching Jena.   \r\nAnyway, I think tests provided by PR could be useful. ","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153134326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153150788","html_url":"https://github.com/apache/jena/issues/1374#issuecomment-1153150788","issue_url":"https://api.github.com/repos/apache/jena/issues/1374","id":1153150788,"node_id":"IC_kwDOAHF7Ec5Eu69E","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-12T12:30:27Z","updated_at":"2022-06-12T12:30:27Z","author_association":"MEMBER","body":"Where does `Query` cache functions? Do you mean in \"E_Function\"?\r\n\r\n`QueryExecution.create(...).context(cxt)...` will use that and only that context.\r\n\r\n`QueryExecutionFactory` provides common cases - and it had grown into a bit too large. The new-style builders are better for detailed setup.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153150788/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153164302","html_url":"https://github.com/apache/jena/issues/1374#issuecomment-1153164302","issue_url":"https://api.github.com/repos/apache/jena/issues/1374","id":1153164302,"node_id":"IC_kwDOAHF7Ec5Eu-QO","user":{"login":"sszuev","id":17473366,"node_id":"MDQ6VXNlcjE3NDczMzY2","avatar_url":"https://avatars.githubusercontent.com/u/17473366?v=4","gravatar_id":"","url":"https://api.github.com/users/sszuev","html_url":"https://github.com/sszuev","followers_url":"https://api.github.com/users/sszuev/followers","following_url":"https://api.github.com/users/sszuev/following{/other_user}","gists_url":"https://api.github.com/users/sszuev/gists{/gist_id}","starred_url":"https://api.github.com/users/sszuev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sszuev/subscriptions","organizations_url":"https://api.github.com/users/sszuev/orgs","repos_url":"https://api.github.com/users/sszuev/repos","events_url":"https://api.github.com/users/sszuev/events{/privacy}","received_events_url":"https://api.github.com/users/sszuev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-12T13:14:01Z","updated_at":"2022-06-12T13:14:01Z","author_association":"CONTRIBUTOR","body":"> Where does `Query` cache functions? Do you mean in \"E_Function\"?\r\n\r\nYes. `org.apache.jena.sparql.expr.E_Function`\r\n\r\n> `QueryExecution.create(...).context(cxt)...` will use that and only that context.\r\n \r\nOk, I see. \r\n\r\nBut replacing `QueryExecutionFactory.create(query, data.getGraph(), context)` (from PR) with the expression `QueryExecution.create().query(query).model(data).context(context).build()` causes test error (where query is `String`, not `Query`). \r\nHere https://github.com/sszuev/jena/blob/main/jena-arq/src/test/java/org/apache/jena/query/TestQueryExecutionFactory.java#L89\r\n\r\nJust found this, didn't dig yet.\r\n\r\n> QueryExecutionFactory provides common cases - and it had grown into a bit too large. The new-style builders are better for detailed setup.\r\n\r\nOk.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153164302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153177536","html_url":"https://github.com/apache/jena/issues/1374#issuecomment-1153177536","issue_url":"https://api.github.com/repos/apache/jena/issues/1374","id":1153177536,"node_id":"IC_kwDOAHF7Ec5EvBfA","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-12T13:56:16Z","updated_at":"2022-06-12T14:02:05Z","author_association":"MEMBER","body":"> But replacing `QueryExecutionFactory.create(query, data.getGraph(), context)` (from PR) with the expression `QueryExecution.create().query(query).model(data).context(context).build()` causes test error (where query is `String`, not `Query`).\r\n\r\nVisual inspection only but this looks odd. The PR new `create(query, graph, context)` uses `DatasetGraphWrapper` to apply the context. But I don't see this going to the `QueryExecDatasetBuilder`.  Dataset contexts are usually added to the context being built for the query (`Context.mergeCopy`), not a replacement. `DatasetGraphWrapper(,Context)` hides the wrapped dataset's context.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153177536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153279768","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1153279768","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1153279768,"node_id":"IC_kwDOAHF7Ec5EvacY","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-12T20:06:02Z","updated_at":"2022-06-12T20:07:27Z","author_association":"MEMBER","body":"@LorenzBuehmann thank you for the background. `jena-goesparql` isn't an area I have looked into much and it has quite a high learning curve.\r\n\r\nAll - what are the implications of using `Quadtree`? Is it a relatively contained change in class `SpatialIndex` or does it have wider implications? What, very roughly, is the performance difference of an `STRtree` and a `Quadtree?` What about #1327 (PR for \"allow geo index search for literals\")?\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153279768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153336489","html_url":"https://github.com/apache/jena/pull/1375#issuecomment-1153336489","issue_url":"https://api.github.com/repos/apache/jena/issues/1375","id":1153336489,"node_id":"IC_kwDOAHF7Ec5EvoSp","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T00:35:41Z","updated_at":"2022-06-13T00:43:04Z","author_association":"CONTRIBUTOR","body":"I suppose the ARQ method to copy the function registries should eventually also copy the service executor registries (one is already [available](https://github.com/apache/jena-site/blob/main/source/documentation/query/custom_service_executors.md) and another for bulk requests is [in the works](https://github.com/apache/jena/issues/1314)) - they are typically very small and I don't think it makes sense to exclude those when one explicitly asks for a deep copy of the context in order to add isolated extensions.\r\n\r\nMaybe instead of naming the method `copyWithFunctionRegistries` it should be\r\nmore generally `copyWithRegistries`? (Alternatively something like `copyWith{User,Plugin,Extension,...}Registries).`\r\nSo the naming should be clarified with the service executor registry in mind. Are there any further plugin registries in the context by default that would benefit from deep copying too?\r\n\r\nFor consistency, the `ServiceExecutorRegistry` registry should provide a `createFrom` method too but that I can add with a separate PR.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153336489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153549005","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1153549005","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1153549005,"node_id":"IC_kwDOAHF7Ec5EwcLN","user":{"login":"LorenzBuehmann","id":976029,"node_id":"MDQ6VXNlcjk3NjAyOQ==","avatar_url":"https://avatars.githubusercontent.com/u/976029?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzBuehmann","html_url":"https://github.com/LorenzBuehmann","followers_url":"https://api.github.com/users/LorenzBuehmann/followers","following_url":"https://api.github.com/users/LorenzBuehmann/following{/other_user}","gists_url":"https://api.github.com/users/LorenzBuehmann/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzBuehmann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzBuehmann/subscriptions","organizations_url":"https://api.github.com/users/LorenzBuehmann/orgs","repos_url":"https://api.github.com/users/LorenzBuehmann/repos","events_url":"https://api.github.com/users/LorenzBuehmann/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzBuehmann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T07:03:09Z","updated_at":"2022-06-13T07:03:09Z","author_association":"CONTRIBUTOR","body":"This article contains some numbers for JTS `Quadtree` vs `STRtree`: https://link.springer.com/article/10.1007/s41019-020-00147-9\r\n\r\nIt covers \r\n* indexing costs\r\n* index size\r\n* range queries\r\n* distance queries\r\n* point-in-polygon join query\r\n\r\nWe could keep the `STRtree` for read-only datasets, and I think we have to live with the `Quadtree` for read-write Datasets. Internally only `query` operation is called on the `STRtree`, thus changing the datastructure should be trivial.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153549005/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153588568","html_url":"https://github.com/apache/jena/pull/1315#issuecomment-1153588568","issue_url":"https://api.github.com/repos/apache/jena/issues/1315","id":1153588568,"node_id":"IC_kwDOAHF7Ec5Ewl1Y","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T07:48:03Z","updated_at":"2022-06-13T07:48:03Z","author_association":"MEMBER","body":"Would now be a good time to split the PR into the changes for service executor extensibility and the separate extra module?\r\n\r\nThen the service executor extensibility can go into the next release while the other work continues.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153588568/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153607187","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1153607187","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1153607187,"node_id":"IC_kwDOAHF7Ec5EwqYT","user":{"login":"vtermanis","id":6112689,"node_id":"MDQ6VXNlcjYxMTI2ODk=","avatar_url":"https://avatars.githubusercontent.com/u/6112689?v=4","gravatar_id":"","url":"https://api.github.com/users/vtermanis","html_url":"https://github.com/vtermanis","followers_url":"https://api.github.com/users/vtermanis/followers","following_url":"https://api.github.com/users/vtermanis/following{/other_user}","gists_url":"https://api.github.com/users/vtermanis/gists{/gist_id}","starred_url":"https://api.github.com/users/vtermanis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vtermanis/subscriptions","organizations_url":"https://api.github.com/users/vtermanis/orgs","repos_url":"https://api.github.com/users/vtermanis/repos","events_url":"https://api.github.com/users/vtermanis/events{/privacy}","received_events_url":"https://api.github.com/users/vtermanis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T08:08:28Z","updated_at":"2022-06-13T08:08:28Z","author_association":"NONE","body":"> at what scale have you used this? Does that usage include containment queries?\r\n\r\n@afs , we've only used the `geof:(distance|sfWithin|sfContains)` functions so far, the latter two with `geof:buffer` only. The scale is small for now (100k geometries).\r\n\r\n---\r\n\r\n> we will have think careful about updating the \"other\" indexing structure of the geospatial layer as well, i.e. that literal, transformation and query rewrite part I think.\r\n\r\n@LorenzBuehmann, do you mean because of the suggested `QuadTree` change for the spatial index or from a general performance perspective? (I saw your suggestion on using a different caching lib in Jira.)","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153607187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153617081","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1153617081","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1153617081,"node_id":"IC_kwDOAHF7Ec5Ewsy5","user":{"login":"vtermanis","id":6112689,"node_id":"MDQ6VXNlcjYxMTI2ODk=","avatar_url":"https://avatars.githubusercontent.com/u/6112689?v=4","gravatar_id":"","url":"https://api.github.com/users/vtermanis","html_url":"https://github.com/vtermanis","followers_url":"https://api.github.com/users/vtermanis/followers","following_url":"https://api.github.com/users/vtermanis/following{/other_user}","gists_url":"https://api.github.com/users/vtermanis/gists{/gist_id}","starred_url":"https://api.github.com/users/vtermanis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vtermanis/subscriptions","organizations_url":"https://api.github.com/users/vtermanis/orgs","repos_url":"https://api.github.com/users/vtermanis/repos","events_url":"https://api.github.com/users/vtermanis/events{/privacy}","received_events_url":"https://api.github.com/users/vtermanis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T08:17:57Z","updated_at":"2022-06-13T08:17:57Z","author_association":"NONE","body":"(sorry, one more Q @LorenzBuehmann )\r\n\r\n> we have to live with the Quadtree for read-write Datasets.\r\n\r\nWhat would it mean for persistence? (From my understanding the current `STRtree` index is serialised to disk in full.)\r\nFor the case where a write-heavy dataset is only used sparingly for GeoSPARQL queries, is it still useful to offer the \"no index\" option also, i.e.:\r\n\r\n1. `STRtree` index pre-generated either to file or into memory (current mode)\r\n2. `QuadTree` index updated during writes (in memory and/or disk?)\r\n    1. Can update geometries in data & continue to perform spatial queries\r\n    2. If have existing large dataset, have to pre-generate initial index on startup\r\n3. Spatial index disabled\r\n    1. No write & startup perf impact (if (2) persisted)\r\n    2. GeoSPARQL queries slow(er), choose option 1 or 2 if this matters","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153617081/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153626319","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1153626319","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1153626319,"node_id":"IC_kwDOAHF7Ec5EwvDP","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T08:26:05Z","updated_at":"2022-06-13T08:26:05Z","author_association":"MEMBER","body":"> (I [@vtermanis] saw your suggestion on using a different caching lib in Jira.)\r\n\r\n[JENA-2311](https://issues.apache.org/jira/browse/JENA-2311) and PR #1235.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153626319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153697322","html_url":"https://github.com/apache/jena/pull/1380#issuecomment-1153697322","issue_url":"https://api.github.com/repos/apache/jena/issues/1380","id":1153697322,"node_id":"IC_kwDOAHF7Ec5ExAYq","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T09:36:30Z","updated_at":"2022-06-13T09:36:30Z","author_association":"MEMBER","body":"This PR looks much smaller with whitespace changes filtered out.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153697322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153707521","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1153707521","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1153707521,"node_id":"IC_kwDOAHF7Ec5ExC4B","user":{"login":"LorenzBuehmann","id":976029,"node_id":"MDQ6VXNlcjk3NjAyOQ==","avatar_url":"https://avatars.githubusercontent.com/u/976029?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzBuehmann","html_url":"https://github.com/LorenzBuehmann","followers_url":"https://api.github.com/users/LorenzBuehmann/followers","following_url":"https://api.github.com/users/LorenzBuehmann/following{/other_user}","gists_url":"https://api.github.com/users/LorenzBuehmann/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzBuehmann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzBuehmann/subscriptions","organizations_url":"https://api.github.com/users/LorenzBuehmann/orgs","repos_url":"https://api.github.com/users/LorenzBuehmann/repos","events_url":"https://api.github.com/users/LorenzBuehmann/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzBuehmann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T09:46:45Z","updated_at":"2022-06-13T09:46:45Z","author_association":"CONTRIBUTOR","body":"> do you mean because of the suggested QuadTree change for the spatial index or from a general performance perspective? (I saw your suggestion on using a different caching lib in Jira.)\r\n\r\n@vtermanis I mean, once we allow for updates, in particular for removal we might have to address the current caching, i.e. maybe just invalidate or empty the current cache in the simplest case \r\n\r\n> What would it mean for persistence? (From my understanding the current STRtree index is serialised to disk in full.)\r\n\r\nYep, one of the things that would have to be discussed. I don't think JTS provides any disk-mapped datastructure, which means it remains open to when to persist the updates - that's always the case for in-memory index structures.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153707521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153881019","html_url":"https://github.com/apache/jena/pull/1375#issuecomment-1153881019","issue_url":"https://api.github.com/repos/apache/jena/issues/1375","id":1153881019,"node_id":"IC_kwDOAHF7Ec5ExtO7","user":{"login":"sszuev","id":17473366,"node_id":"MDQ6VXNlcjE3NDczMzY2","avatar_url":"https://avatars.githubusercontent.com/u/17473366?v=4","gravatar_id":"","url":"https://api.github.com/users/sszuev","html_url":"https://github.com/sszuev","followers_url":"https://api.github.com/users/sszuev/followers","following_url":"https://api.github.com/users/sszuev/following{/other_user}","gists_url":"https://api.github.com/users/sszuev/gists{/gist_id}","starred_url":"https://api.github.com/users/sszuev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sszuev/subscriptions","organizations_url":"https://api.github.com/users/sszuev/orgs","repos_url":"https://api.github.com/users/sszuev/repos","events_url":"https://api.github.com/users/sszuev/events{/privacy}","received_events_url":"https://api.github.com/users/sszuev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T12:56:58Z","updated_at":"2022-06-13T12:56:58Z","author_association":"CONTRIBUTOR","body":"> ServiceExecutorRegistry\r\n\r\n\r\n\r\n> I suppose the ARQ method to copy the function registries should eventually also copy the service executor registries (one is already [available](https://github.com/apache/jena-site/blob/main/source/documentation/query/custom_service_executors.md) and another for bulk requests is [in the works](https://github.com/apache/jena/issues/1314)) - they are typically very small and I don't think it makes sense to exclude those when one explicitly asks for a deep copy of the context in order to add isolated extensions.\r\n> \r\n> Maybe instead of naming the method `copyWithFunctionRegistries` it should be more generally `copyWithRegistries`? (Alternatively something like `copyWith{User,Plugin,Extension,...}Registries).` So the naming should be clarified with the service executor registry in mind. Are there any further plugin registries in the context by default that would benefit from deep copying too?\r\n> \r\n> For consistency, the `ServiceExecutorRegistry` registry should provide a `createFrom` method too but that I can add with a separate PR.\r\n\r\nI think this is a good idea.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153881019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153891201","html_url":"https://github.com/apache/jena/issues/1374#issuecomment-1153891201","issue_url":"https://api.github.com/repos/apache/jena/issues/1374","id":1153891201,"node_id":"IC_kwDOAHF7Ec5ExvuB","user":{"login":"sszuev","id":17473366,"node_id":"MDQ6VXNlcjE3NDczMzY2","avatar_url":"https://avatars.githubusercontent.com/u/17473366?v=4","gravatar_id":"","url":"https://api.github.com/users/sszuev","html_url":"https://github.com/sszuev","followers_url":"https://api.github.com/users/sszuev/followers","following_url":"https://api.github.com/users/sszuev/following{/other_user}","gists_url":"https://api.github.com/users/sszuev/gists{/gist_id}","starred_url":"https://api.github.com/users/sszuev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sszuev/subscriptions","organizations_url":"https://api.github.com/users/sszuev/orgs","repos_url":"https://api.github.com/users/sszuev/repos","events_url":"https://api.github.com/users/sszuev/events{/privacy}","received_events_url":"https://api.github.com/users/sszuev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T13:06:49Z","updated_at":"2022-06-13T13:06:49Z","author_association":"CONTRIBUTOR","body":"> > But replacing `QueryExecutionFactory.create(query, data.getGraph(), context)` (from PR) with the expression `QueryExecution.create().query(query).model(data).context(context).build()` causes test error (where query is `String`, not `Query`).\r\n> \r\n> Visual inspection only but this looks odd. The PR new `create(query, graph, context)` uses `DatasetGraphWrapper` to apply the context. But I don't see this going to the `QueryExecDatasetBuilder`. Dataset contexts are usually added to the context being built for the query (`Context.mergeCopy`), not a replacement. `DatasetGraphWrapper(,Context)` hides the wrapped dataset's context.\r\n\r\nI think, `QueryExecutionFactory.create(query, data.getGraph(), context)` can be removed from PR, and new bug for `QueryExecution.create().query(query).model(data).context(context).build()` with tests attached can be started.\r\n\r\n@afs  ?\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1153891201/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154091290","html_url":"https://github.com/apache/jena/pull/1375#issuecomment-1154091290","issue_url":"https://api.github.com/repos/apache/jena/issues/1375","id":1154091290,"node_id":"IC_kwDOAHF7Ec5Eygka","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T15:50:38Z","updated_at":"2022-06-13T15:50:38Z","author_association":"MEMBER","body":"> I suppose the ARQ method to copy the function registries should eventually also copy the service executor registries \r\n\r\nDiscussion on #1374.\r\n\r\nContext should be intent neutral and not know the value of any symbols.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154091290/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154094313","html_url":"https://github.com/apache/jena/issues/1374#issuecomment-1154094313","issue_url":"https://api.github.com/repos/apache/jena/issues/1374","id":1154094313,"node_id":"IC_kwDOAHF7Ec5EyhTp","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T15:53:33Z","updated_at":"2022-06-13T15:53:33Z","author_association":"MEMBER","body":"Seems reasonable.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154094313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154119286","html_url":"https://github.com/apache/jena/pull/1375#issuecomment-1154119286","issue_url":"https://api.github.com/repos/apache/jena/issues/1375","id":1154119286,"node_id":"IC_kwDOAHF7Ec5EynZ2","user":{"login":"sszuev","id":17473366,"node_id":"MDQ6VXNlcjE3NDczMzY2","avatar_url":"https://avatars.githubusercontent.com/u/17473366?v=4","gravatar_id":"","url":"https://api.github.com/users/sszuev","html_url":"https://github.com/sszuev","followers_url":"https://api.github.com/users/sszuev/followers","following_url":"https://api.github.com/users/sszuev/following{/other_user}","gists_url":"https://api.github.com/users/sszuev/gists{/gist_id}","starred_url":"https://api.github.com/users/sszuev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sszuev/subscriptions","organizations_url":"https://api.github.com/users/sszuev/orgs","repos_url":"https://api.github.com/users/sszuev/repos","events_url":"https://api.github.com/users/sszuev/events{/privacy}","received_events_url":"https://api.github.com/users/sszuev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T16:16:53Z","updated_at":"2022-06-14T07:06:31Z","author_association":"CONTRIBUTOR","body":"> Context should be intent neutral and not know the value of any symbols.\r\n\r\nWhat is appropriate place to such functionality ? \r\n`org.apache.jena.sparql.util.Contexts` ?     \r\n`org.apache.jena.sparql.util.ContextUtils` ?\r\n\r\nThis is static helper, instance of `Context` itself does not refer to any particular symbol. \r\nThere are already static helpers like `fromDataset(DatasetGraph)`. \r\nI don't quite understand why `import org.apache.jena.sparql.core.DatasetGraph` is ok, but `import org.apache.jena.sparql.function.FunctionRegistry` is not?  \r\nIf we move it to some other place it would be harder to find it. \r\n\r\nMaybe, in the case of `ContextUtils`, all other static-helpers should also be moved to that new class (with duplication and `@Deprecate` for original methods). Such a way makes more sense for me, then the helper-class for a single helper-method.\r\n\r\n\r\n  ","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154119286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154122367","html_url":"https://github.com/apache/jena/issues/1374#issuecomment-1154122367","issue_url":"https://api.github.com/repos/apache/jena/issues/1374","id":1154122367,"node_id":"IC_kwDOAHF7Ec5EyoJ_","user":{"login":"sszuev","id":17473366,"node_id":"MDQ6VXNlcjE3NDczMzY2","avatar_url":"https://avatars.githubusercontent.com/u/17473366?v=4","gravatar_id":"","url":"https://api.github.com/users/sszuev","html_url":"https://github.com/sszuev","followers_url":"https://api.github.com/users/sszuev/followers","following_url":"https://api.github.com/users/sszuev/following{/other_user}","gists_url":"https://api.github.com/users/sszuev/gists{/gist_id}","starred_url":"https://api.github.com/users/sszuev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sszuev/subscriptions","organizations_url":"https://api.github.com/users/sszuev/orgs","repos_url":"https://api.github.com/users/sszuev/repos","events_url":"https://api.github.com/users/sszuev/events{/privacy}","received_events_url":"https://api.github.com/users/sszuev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T16:19:41Z","updated_at":"2022-06-14T07:05:59Z","author_association":"CONTRIBUTOR","body":"> A copy of the context will share the original registries - the way to modify that is to modify the copy of the context. I'd put that code in the PropertyFunctionRegistry, not \"teach\" context about a specific setting - moie discussion for the PR - the copy operations look usefu\r\n\r\nWhat is appropriate place to such functionality ?\r\n`org.apache.jena.sparql.util.Contexts` ?\r\n`org.apache.jena.sparql.util.ContextUtils` ?\r\n\r\nIn the PR, this is static helper, instance of `Context` itself does not refer to any particular symbol.\r\nThere are already static helpers like `fromDataset(DatasetGraph)`.\r\nI don't quite understand why `import org.apache.jena.sparql.core.DatasetGraph` is ok, but `import org.apache.jena.sparql.function.FunctionRegistry` is not? \r\nIf we move it to some other place it would be harder to find it.\r\n\r\nMaybe, in the case of `ContextUtils`, all other static-helpers should also be moved to that new class (with duplication and `@Deprecate` for original methods). Such a way makes more sense for me, then the helper-class for a single helper-method.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154122367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154122887","html_url":"https://github.com/apache/jena/pull/1256#issuecomment-1154122887","issue_url":"https://api.github.com/repos/apache/jena/issues/1256","id":1154122887,"node_id":"IC_kwDOAHF7Ec5EyoSH","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T16:20:08Z","updated_at":"2022-06-13T16:20:08Z","author_association":"MEMBER","body":"@fkleedorfer - How's the weather?! Just checking in to see where we are on this PR.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154122887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154123940","html_url":"https://github.com/apache/jena/pull/1273#issuecomment-1154123940","issue_url":"https://api.github.com/repos/apache/jena/issues/1273","id":1154123940,"node_id":"IC_kwDOAHF7Ec5Eyoik","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T16:21:08Z","updated_at":"2022-06-13T16:21:08Z","author_association":"MEMBER","body":"@arne-bdt - just checking in to see where we are on this pull request.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154123940/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154151765","html_url":"https://github.com/apache/jena/pull/1330#issuecomment-1154151765","issue_url":"https://api.github.com/repos/apache/jena/issues/1330","id":1154151765,"node_id":"IC_kwDOAHF7Ec5EyvVV","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T16:46:53Z","updated_at":"2022-06-13T16:46:53Z","author_association":"MEMBER","body":"Tracking issue: https://github.com/apache/jena/issues/1383","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154151765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154153965","html_url":"https://github.com/apache/jena/issues/1383#issuecomment-1154153965","issue_url":"https://api.github.com/repos/apache/jena/issues/1383","id":1154153965,"node_id":"IC_kwDOAHF7Ec5Eyv3t","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T16:49:13Z","updated_at":"2022-06-13T16:49:13Z","author_association":"MEMBER","body":"Done with PR #1375 ","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154153965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154191966","html_url":"https://github.com/apache/jena/pull/1315#issuecomment-1154191966","issue_url":"https://api.github.com/repos/apache/jena/issues/1315","id":1154191966,"node_id":"IC_kwDOAHF7Ec5Ey5Je","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-13T17:30:13Z","updated_at":"2022-06-13T17:30:13Z","author_association":"MEMBER","body":"I'm unsubscribing from this PR due to the stream of notifications - can we keep the discussion on the issue please, particularly of the core changes and bulk in the extra module.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1154191966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155216001","html_url":"https://github.com/apache/jena/pull/1256#issuecomment-1155216001","issue_url":"https://api.github.com/repos/apache/jena/issues/1256","id":1155216001,"node_id":"IC_kwDOAHF7Ec5E2zKB","user":{"login":"fkleedorfer","id":551624,"node_id":"MDQ6VXNlcjU1MTYyNA==","avatar_url":"https://avatars.githubusercontent.com/u/551624?v=4","gravatar_id":"","url":"https://api.github.com/users/fkleedorfer","html_url":"https://github.com/fkleedorfer","followers_url":"https://api.github.com/users/fkleedorfer/followers","following_url":"https://api.github.com/users/fkleedorfer/following{/other_user}","gists_url":"https://api.github.com/users/fkleedorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/fkleedorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkleedorfer/subscriptions","organizations_url":"https://api.github.com/users/fkleedorfer/orgs","repos_url":"https://api.github.com/users/fkleedorfer/repos","events_url":"https://api.github.com/users/fkleedorfer/events{/privacy}","received_events_url":"https://api.github.com/users/fkleedorfer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T13:51:54Z","updated_at":"2022-06-14T13:51:54Z","author_association":"CONTRIBUTOR","body":"Thanks for the nudge. No progress on my side, but there are one or two things I'd still want to change before comitting... and I cannot do that before the end of June. If need be, we could merge this and change later. Your call?","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155216001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155283605","html_url":"https://github.com/apache/jena/pull/1256#issuecomment-1155283605","issue_url":"https://api.github.com/repos/apache/jena/issues/1256","id":1155283605,"node_id":"IC_kwDOAHF7Ec5E3DqV","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T14:37:14Z","updated_at":"2022-06-14T14:37:14Z","author_association":"MEMBER","body":"Merge now, and change is fine.\r\n\r\nDo you have a specific list of changes in mind?\r\n\r\nDocumentation will be needed sometime.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155283605/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155503951","html_url":"https://github.com/apache/jena/issues/1384#issuecomment-1155503951","issue_url":"https://api.github.com/repos/apache/jena/issues/1384","id":1155503951,"node_id":"IC_kwDOAHF7Ec5E35dP","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T17:40:21Z","updated_at":"2022-06-14T17:46:46Z","author_association":"MEMBER","body":"`HttpConnectionParams` is `org.apache.http.params.HttpConnectionParams`.\r\n\r\nJena now uses `java.net.http.HttpClient`, not Apache HttpClient.\r\n\r\nApache HttpClient is only in the dependencies because jsonld-java uses it. If Titanium becomes the only JSON-LD provider, then it won't be needed. We can probably drop the explicit mention now. jena used to need to control the version.\r\n\r\nIn `java.net.http`, connection timeout is \"TCP connection setup\" timeout. See `java.net.http.HttpClient.Builder.connectTimeout` \r\n\r\n> In the case where a new connection needs to be established, ...\r\n> If a new connection does not need to be established, for example if a connection can be reused\r\n> from a previous request, then this timeout duration has no effect.\r\n\r\nIn the case of `RDFConnection`it does reuse the `java.net.http.HttpClient` and hence connections.\r\nUnless provided, there is only one `HttpClient` (for all HTTP activity). So likely only the first use of the `RDFConnection` has any chance of a connection setup to a new remote and hence timeout.\r\n\r\nHTTP/2 : there is no TCP connection setup other that the one shared host-host connection.\r\n\r\nHTTP/3 : different again.\r\n\r\nI assumed the lack of timeout controls for `java.net.http.HttpClient` is looking to the future of HTTP/2 and HTTP/3 where things are different.\r\n\r\n----\r\n\r\n`QueryExecution.setTimeout` is deprecated. There is some compatibility code (a hidden delayed building) because there is a \"build-use\" pattern nowadays -- `QueryExec` does not allow changes of setup after building.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155503951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155532416","html_url":"https://github.com/apache/jena/pull/1375#issuecomment-1155532416","issue_url":"https://api.github.com/repos/apache/jena/issues/1375","id":1155532416,"node_id":"IC_kwDOAHF7Ec5E4AaA","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T18:13:15Z","updated_at":"2022-06-14T18:13:15Z","author_association":"MEMBER","body":"`ContextUtils` makes sense even if in `sparql.util`\r\n\r\n`Context` is also used in RIOT - it was originally query-specific and mostly internal use but having such a mechanism, it get reused and escaped.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155532416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155537503","html_url":"https://github.com/apache/jena/issues/1374#issuecomment-1155537503","issue_url":"https://api.github.com/repos/apache/jena/issues/1374","id":1155537503,"node_id":"IC_kwDOAHF7Ec5E4Bpf","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T18:19:17Z","updated_at":"2022-06-14T18:19:17Z","author_association":"MEMBER","body":"ContextUtils makes sense.\r\n\r\nIf it were each registry, I'd put the code there but to have a function that all three at once is better.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155537503/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155539386","html_url":"https://github.com/apache/jena/issues/1384#issuecomment-1155539386","issue_url":"https://api.github.com/repos/apache/jena/issues/1384","id":1155539386,"node_id":"IC_kwDOAHF7Ec5E4CG6","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T18:21:35Z","updated_at":"2022-06-14T18:25:47Z","author_association":"CONTRIBUTOR","body":"Sigh, too many issues lately so I it happens I do things too hastily - I didn't notice that the stack overflow snippet referred to apache http client because the title referred to java http and I googled for java net http.\r\n\r\nI see, the method now is [java.net.http.HttpClient.Builder.connectTimeout (javadoc)](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpClient.Builder.html#connectTimeout(java.time.Duration))\r\n\r\nSo I'll look into supplying my own HttpClient instance via `RDFConnectionRemoteBuilder#httpClient` then which would be good enough for my use case.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155539386/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155567554","html_url":"https://github.com/apache/jena/issues/1384#issuecomment-1155567554","issue_url":"https://api.github.com/repos/apache/jena/issues/1384","id":1155567554,"node_id":"IC_kwDOAHF7Ec5E4I_C","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-14T18:26:25Z","updated_at":"2022-06-14T18:26:25Z","author_association":"MEMBER","body":"Yes - setting up the HttpClient is the right way to do it.\r\n\r\nIt is the only way as it get frozen at that point. It is possible to manually clone the setting of an HttpClient but it's afresh setup and not having the same connection caching (HTTP/1.1).\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1155567554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156112337","html_url":"https://github.com/apache/jena/pull/1385#issuecomment-1156112337","issue_url":"https://api.github.com/repos/apache/jena/issues/1385","id":1156112337,"node_id":"IC_kwDOAHF7Ec5E6N_R","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T07:45:49Z","updated_at":"2022-06-15T07:45:49Z","author_association":"MEMBER","body":"No harm but \"clean install\" runs \"test\" anyway (or at least in the default lifecycle it does).\r\n\r\nhttps://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156112337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156117660","html_url":"https://github.com/apache/jena/pull/1385#issuecomment-1156117660","issue_url":"https://api.github.com/repos/apache/jena/issues/1385","id":1156117660,"node_id":"IC_kwDOAHF7Ec5E6PSc","user":{"login":"kinow","id":304786,"node_id":"MDQ6VXNlcjMwNDc4Ng==","avatar_url":"https://avatars.githubusercontent.com/u/304786?v=4","gravatar_id":"","url":"https://api.github.com/users/kinow","html_url":"https://github.com/kinow","followers_url":"https://api.github.com/users/kinow/followers","following_url":"https://api.github.com/users/kinow/following{/other_user}","gists_url":"https://api.github.com/users/kinow/gists{/gist_id}","starred_url":"https://api.github.com/users/kinow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kinow/subscriptions","organizations_url":"https://api.github.com/users/kinow/orgs","repos_url":"https://api.github.com/users/kinow/repos","events_url":"https://api.github.com/users/kinow/events{/privacy}","received_events_url":"https://api.github.com/users/kinow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T07:50:56Z","updated_at":"2022-06-15T07:50:56Z","author_association":"MEMBER","body":"> No harm but \"clean install\" runs \"test\" anyway (or at least in the default lifecycle it does).\r\n> \r\n> https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html\r\n\r\nYup. I just got used to detailing each task. I think in Commons some projects use `clean verify` instead, which shouldn't go as far as installing the archive in the local repo. Feel free to update those goals if you'd like.\r\n\r\nWe started using it in Commons to also standardize the build. This way in GH Actions/Travis/Jenkins/etc we can simply `mvn`, without worrying about which targets each project uses (some projects may require running specific tasks, like rat/jacoco/javadoc/etc separately).","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156117660/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156227019","html_url":"https://github.com/apache/jena/issues/1384#issuecomment-1156227019","issue_url":"https://api.github.com/repos/apache/jena/issues/1384","id":1156227019,"node_id":"IC_kwDOAHF7Ec5E6p_L","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T09:25:26Z","updated_at":"2022-06-15T09:36:35Z","author_association":"CONTRIBUTOR","body":"Hm again a twist: So with the connect timeout no longer present on the connection itself I have to set it on initialization.\r\n\r\nHowever for this part I was using my own assembler-like setup which sets up a factory for RDFConnection objects from an RDF document. Back then I didn't realize that Jena's assembler system is generic so it can create any java object from RDF.\r\n\r\nIn my case, this allows for linking RDF benchmark results back to the connection setup and the involved thresholds.\r\n\r\nRather then extending my own system I'd rather integrate with Jena assemblers.\r\nI think there is not yet an assembler for RDFConnection instances - is there?\r\n\r\nSo a rought draft would look like\r\n```ttl\r\n#conn.ttl\r\n<#httpClient> a ja:HttpClient ;\r\n  ja:connectTimeout 10 . # seconds\r\n\r\n<#conn> rdf:type ja:HttpRDFConnection;\r\n     ja:destination <http://dbpedia.org/sparql> ;\r\n     ja:httpClient <#httpClient> .\r\n```\r\n\r\nFollowed by\r\n```java\r\nResource spec = ModelFactory.load(\"conn.ttl\").getResource(\"#conn\");\r\nRDFConnection conn = RDFConnectionFactory.assemble(spec);\r\n```\r\n\r\nHowever, instead of returning only a single connection it may be better to create a factory for connections:\r\n```java\r\n/** A factory/supplier of RDFConnection instances. Similar to a JDBC DataSource. */\r\npublic interface RDFDataSource\r\n{\r\n    RDFConnection getConnection();\r\n}\r\n\r\nRDFDataSourceFactory.assemble(...);\r\n```\r\n\r\nWould this be a reasonable approach? And would it make sense to add this functionality to Jena itself at some point?\r\n(From my side it may be some time until I'd get around to do that because I'll try to resolve the other open issues first - so I am just asking for a perspective here)","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156227019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156415480","html_url":"https://github.com/apache/jena/pull/1256#issuecomment-1156415480","issue_url":"https://api.github.com/repos/apache/jena/issues/1256","id":1156415480,"node_id":"IC_kwDOAHF7Ec5E7X_4","user":{"login":"fkleedorfer","id":551624,"node_id":"MDQ6VXNlcjU1MTYyNA==","avatar_url":"https://avatars.githubusercontent.com/u/551624?v=4","gravatar_id":"","url":"https://api.github.com/users/fkleedorfer","html_url":"https://github.com/fkleedorfer","followers_url":"https://api.github.com/users/fkleedorfer/followers","following_url":"https://api.github.com/users/fkleedorfer/following{/other_user}","gists_url":"https://api.github.com/users/fkleedorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/fkleedorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkleedorfer/subscriptions","organizations_url":"https://api.github.com/users/fkleedorfer/orgs","repos_url":"https://api.github.com/users/fkleedorfer/repos","events_url":"https://api.github.com/users/fkleedorfer/events{/privacy}","received_events_url":"https://api.github.com/users/fkleedorfer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T12:34:22Z","updated_at":"2022-06-15T12:34:22Z","author_association":"CONTRIBUTOR","body":"> Merge now, and change is fine.\r\n\r\nOk.\r\n\r\n> Do you have a specific list of changes in mind?\r\n\r\nTwo things in particular: \r\n\r\n## 1. More efficient collection handling in Events\r\n\r\nCollections that are passed into Events' constructors are cloned and made unmodifiable in the constructor. This is wasteful, as we emit a lot of events, and it's quite possible nobody ever needs the collection. I'd like to change it so the reference to the original collection is stored in the event and a second reference is lazily initialized with the unmodifiable clone once the collection's getter is called. Alternatively, we could replace the reference to the original with the unmodifiable clone on first call to the getter. \r\n\r\nExample:\r\n\r\nCurrent:\r\n```\r\npublic abstract class AbstractConstraintEvaluationOnPathNodesEvent extends AbstractConstraintEvaluationForPathEvent\r\n                implements\r\n                ConstraintEvaluationOnPathNodesEvent {\r\n    private final Set<Node> valueNodes;\r\n\r\n    public AbstractConstraintEvaluationOnPathNodesEvent(ValidationContext vCxt, Shape shape, Node focusNode,\r\n                    Constraint constraint, Path path, Set<Node> valueNodes) {\r\n        super(vCxt, shape, focusNode, constraint, path);\r\n        this.valueNodes = Collections.unmodifiableSet(new HashSet<>(valueNodes));\r\n    }\r\n\r\n    @Override public Set<Node> getValueNodes() {\r\n        return valueNodes;\r\n    }\r\n}\r\n```\r\nPlanned:\r\n```\r\npublic abstract class AbstractConstraintEvaluationOnPathNodesEvent extends AbstractConstraintEvaluationForPathEvent\r\n                implements\r\n                ConstraintEvaluationOnPathNodesEvent {\r\n    private final Set<Node> valueNodes;\r\n    private Set<Node> valueNodesClone = null;\r\n\r\n    public AbstractConstraintEvaluationOnPathNodesEvent(ValidationContext vCxt, Shape shape, Node focusNode,\r\n                    Constraint constraint, Path path, Set<Node> valueNodes) {\r\n        super(vCxt, shape, focusNode, constraint, path);\r\n        this.valueNodes = valueNodes;\r\n    }\r\n\r\n    @Override public Set<Node> getValueNodes() {\r\n        if (valueNodes == null) {\r\n             // I think we don't need to synchronize here, not much harm will be done if called multiple times in parallel\r\n             this.valueNodesClone = Collections.unmodifiableSet(new HashSet<>(this.valueNodes));\r\n        }\r\n        return valueNodesClone;\r\n    }\r\n}\r\n```\r\n## 2. Refactor the ValidationListener interface\r\n\r\nI am not sure I like the ValidationListener, which has these methods:\r\n\r\n```\r\npublic interface ValidationListener {\r\n\r\n    void onConstraintViolatedEvent(ConstraintEvaluatedEvent e);\r\n\r\n    void onConstraintSatisfiedEvent(ConstraintEvaluatedEvent e);\r\n\r\n    void onValidationLifecycleEvent(ValidationLifecycleEvent e);\r\n\r\n}\r\n``` \r\n\r\nI don't like it much because it requires the following code in the ValidationContext:\r\n```\r\n            if (event instanceof ConstraintEvaluatedEvent){\r\n                if (((ConstraintEvaluatedEvent)event).isValid()){\r\n                    validationListener.onConstraintViolatedEvent((ConstraintEvaluatedEvent) event);\r\n                } else {\r\n                    validationListener.onConstraintSatisfiedEvent((ConstraintEvaluatedEvent) event);\r\n                }\r\n            } else if (event instanceof ValidationLifecycleEvent) {\r\n                validationListener.onValidationLifecycleEvent((ValidationLifecycleEvent) event);\r\n            } else {\r\n                throw new IllegalArgumentException(\"Cannot handle event \" + event);\r\n            }\r\n```\r\nI.e., the interface is prejudiced about what will constitute a separation of events that is relevant to the client. (constraintViolated, constraintSatisfied, or lifecycle). I am not certain what would be better, but I am leaning toward just one method, `onValidationEvent`, and providing a utility class or a base class for listeners that make it easy to select the events one is interested in.\r\n\r\n> Documentation will be needed sometime.\r\n\r\nAs an extension of https://jena.apache.org/documentation/shacl/index.html, I suppose?\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156415480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156620011","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1156620011","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1156620011,"node_id":"IC_kwDOAHF7Ec5E8J7r","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T15:29:56Z","updated_at":"2022-06-15T15:30:10Z","author_association":"CONTRIBUTOR","body":"#1388 is now a separate PR for the service executor extension system for ARQ.\r\n\r\nThe code of this PR is now under `jena-extras/jena-serviceplugins` (maybe singular?).\r\n\r\nThe code should now cover all functionality and some simple examples work - so my next step is on this PR is writing tests especially for the result set limit detection & handling logic.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156620011/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156985619","html_url":"https://github.com/apache/jena/issues/1384#issuecomment-1156985619","issue_url":"https://api.github.com/repos/apache/jena/issues/1384","id":1156985619,"node_id":"IC_kwDOAHF7Ec5E9jMT","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T21:57:31Z","updated_at":"2022-06-15T21:57:31Z","author_association":"MEMBER","body":"Reasonable yes. I use assembler to make things other than datasets quite often.\r\n\r\nhttps://github.com/Telicent-io/jena-fuseki-kafka/blob/main/ex-connector.ttl\r\n\r\nis a connector between Kafka and Jena.\r\n\r\n\r\n> Rather then extending my own system I'd rather integrate with Jena assemblers.\r\n\r\nThere is no need to be in Jena, nor use `ja:` just as there no need for vocabularies to be in Jena.Any code can register them. `AssemblerUtils`. This also means you can develop, try out and change based on your usage before it gets \"frozen\" by putting it in Jena.\r\n\r\nIs it something general other users would want? From what you describe (`RDFDataSource`), it is part of a bigger picture.\r\n\r\n\r\nAside: I've been toying with making more of assembling at the graph level. \r\n\r\nhttps://github.com/Telicent-io/jena-fuseki-kafka/blob/main/jena-kafka-connector/src/main/java/org/apache/jena/kafka/KafkaConnectorAssembler.java#L112","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156985619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156988374","html_url":"https://github.com/apache/jena/issues/1384#issuecomment-1156988374","issue_url":"https://api.github.com/repos/apache/jena/issues/1384","id":1156988374,"node_id":"IC_kwDOAHF7Ec5E9j3W","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-15T22:01:48Z","updated_at":"2022-06-15T22:01:48Z","author_association":"MEMBER","body":"If this issue is finished, could you close it please? It is very helpful to wrap things up - it helps track the state of the project.\r\n\r\nWe have the \"discussions\" area on GH for longer running and open ended discussions.\r\n\r\n\"Issues\" are ideally actionable. There will more of them so longer discussions that involve general users may can get a little lost if mixed into a big \"issues\" pool.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1156988374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1157545018","html_url":"https://github.com/apache/jena/issues/1384#issuecomment-1157545018","issue_url":"https://api.github.com/repos/apache/jena/issues/1384","id":1157545018,"node_id":"IC_kwDOAHF7Ec5E_rw6","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-16T11:22:03Z","updated_at":"2022-06-16T11:39:45Z","author_association":"CONTRIBUTOR","body":"> Is it something general other users would want?\r\n\r\nWell it's the analogy to JDBC, where DataSource is the factory for connection instances. \r\nBased on DataSource, there are systems such as [Hikari](https://github.com/brettwooldridge/HikariCP) that implement connection pooling, automatic stale connection detection and replay of statements that failed due to connection loss.\r\nThe pooling aspect is particularly nice, because it enables components to frequently acquire short-lived connections (OLTP).\r\nClosing those connections make them go back into the local pool without actually closing the physical connection to the database.\r\n\r\nAlso in the LSQ system, I use the RDF-variant of that interface for connection recovery: If it turns out that a connection was lost (e.g. due to a system-under-test actually crashing on a query) I can call `getConnection()` in a loop in an attempt to reconnect (e.g. while the docker container restarts). **using whatever settings were in place when the DataSource was created**.\r\n\r\nIn the bigger picture, Spring has the [EmbeddedDatabase](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/jdbc/datasource/embedded/EmbeddedDatabase.html) interface which extends DataSource with a `shutdown()` method (Nowadays I'd prefer `AutoClosable.close()`). This approach allows for abstracting e.g. a local Fuseki and a Virtuoso instances as `RDFDataSources`/`RDFDatabases`). The `close()` method could then e.g. shutdown the Virtuoso docker container.\r\n\r\nSo this pattern with an (RDF)DataSource is not my invention - but I noticed it's not part of the RDFConnection API.\r\nConversely, having the interfaces in Jena might make it easier to provide interoperable implementations outside of Jena because applications could rely on those interfaces.\r\n\r\nIf you want more evidence I could also eventually write to the Jena dev mailing list about it.\r\n\r\n> This also means you can develop, try out and change based on your usage before it gets \"frozen\" by putting it in Jena.\r\n\r\nYes, sure, I don't mean to 'spam' Jena with my custom components. But I think an assembler for the already Jena native class RDFConnection+HttpClient (maybe later also RDFDataSource) would be nice. But for now I'll go ahead as you suggest with making the changes in my own code.\r\n\r\nI leave the issue open in case you want to leave a comment on the RDFDataSource, other than that you can close it.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1157545018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1157670632","html_url":"https://github.com/apache/jena/issues/1384#issuecomment-1157670632","issue_url":"https://api.github.com/repos/apache/jena/issues/1384","id":1157670632,"node_id":"IC_kwDOAHF7Ec5FAKbo","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-16T13:36:07Z","updated_at":"2022-06-16T13:36:07Z","author_association":"MEMBER","body":"I confused by whether you are arguing for RDFDataSource or the assembler.\r\n\r\nIf you are proposing RDFDataSource with all the sophistication you describe (caveat - inevitable overlaps with java.net.http.HttpClient), then great (at the RDFLink level).\r\n\r\nAn assembler on its own seems isolated and can wait until RDFDataSource.\r\n\r\n> I could also eventually write to the Jena dev mailing list about it.\r\n\r\nThat's a good idea.\r\n\r\nAnd/or start a [discussion](https://github.com/apache/jena/discussions).","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1157670632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1157679564","html_url":"https://github.com/apache/jena/issues/1386#issuecomment-1157679564","issue_url":"https://api.github.com/repos/apache/jena/issues/1386","id":1157679564,"node_id":"IC_kwDOAHF7Ec5FAMnM","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-16T13:44:21Z","updated_at":"2022-06-16T13:44:21Z","author_association":"MEMBER","body":"Hi @Yalz -- what sort for formatting of JSON-LD output are you using with JSON-LD 1.0 / jsonld-java via Jena?\r\n\r\nYes, it can be added - the project welcomes contributions. \r\n\r\nA couple of thoughts:\r\n\r\n* [Titanium JSON-LD](https://github.com/filip26/titanium-json-ld) has the JSON-LD algorithms and it might be better to use Titanium directly if an API becomes little more than reflecting the Titanium capabilities.\r\n* Can we lean from the JSON-LD 1.0 experience where there are many formats - are they all equally valuable or are some commonly used and other rarely used?\r\n* And is there a common subset that can become the default `JSONLD_PRETTY` for any RDF or is the problem always going to involves data-specific configuration?\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1157679564/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158569936","html_url":"https://github.com/apache/jena/issues/1381#issuecomment-1158569936","issue_url":"https://api.github.com/repos/apache/jena/issues/1381","id":1158569936,"node_id":"IC_kwDOAHF7Ec5FDl_Q","user":{"login":"sszuev","id":17473366,"node_id":"MDQ6VXNlcjE3NDczMzY2","avatar_url":"https://avatars.githubusercontent.com/u/17473366?v=4","gravatar_id":"","url":"https://api.github.com/users/sszuev","html_url":"https://github.com/sszuev","followers_url":"https://api.github.com/users/sszuev/followers","following_url":"https://api.github.com/users/sszuev/following{/other_user}","gists_url":"https://api.github.com/users/sszuev/gists{/gist_id}","starred_url":"https://api.github.com/users/sszuev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sszuev/subscriptions","organizations_url":"https://api.github.com/users/sszuev/orgs","repos_url":"https://api.github.com/users/sszuev/repos","events_url":"https://api.github.com/users/sszuev/events{/privacy}","received_events_url":"https://api.github.com/users/sszuev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-17T07:16:13Z","updated_at":"2022-06-17T07:18:20Z","author_association":"CONTRIBUTOR","body":"One of the possible fix is to replace the line `cxt = baseContext;` with the line `ctx = Context.mergeCopy(ARQ.getContext(), baseContext);` in `org.apache.jena.sparql.util.ContextAccumulator#buildContext`: https://github.com/apache/jena/blob/main/jena-arq/src/main/java/org/apache/jena/sparql/util/ContextAccumulator.java#L145).    \r\n\r\nNot sure about side effects, but after this change there are no new fails of ARQ tests.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158569936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158581322","html_url":"https://github.com/apache/jena/pull/1375#issuecomment-1158581322","issue_url":"https://api.github.com/repos/apache/jena/issues/1375","id":1158581322,"node_id":"IC_kwDOAHF7Ec5FDoxK","user":{"login":"sszuev","id":17473366,"node_id":"MDQ6VXNlcjE3NDczMzY2","avatar_url":"https://avatars.githubusercontent.com/u/17473366?v=4","gravatar_id":"","url":"https://api.github.com/users/sszuev","html_url":"https://github.com/sszuev","followers_url":"https://api.github.com/users/sszuev/followers","following_url":"https://api.github.com/users/sszuev/following{/other_user}","gists_url":"https://api.github.com/users/sszuev/gists{/gist_id}","starred_url":"https://api.github.com/users/sszuev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sszuev/subscriptions","organizations_url":"https://api.github.com/users/sszuev/orgs","repos_url":"https://api.github.com/users/sszuev/repos","events_url":"https://api.github.com/users/sszuev/events{/privacy}","received_events_url":"https://api.github.com/users/sszuev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-17T07:31:19Z","updated_at":"2022-06-17T09:50:56Z","author_association":"CONTRIBUTOR","body":"> `ContextUtils` makes sense even if in `sparql.util`\r\n> \r\n> `Context` is also used in RIOT - it was originally query-specific and mostly internal use but having such a mechanism, it get reused and escaped.\r\n\r\nIs there something else I can do in additional in the bounds of this PR ? Maybe marking deprecated all other static-helpers of `Context` with replacing and moving?","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158581322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158676952","html_url":"https://github.com/apache/jena/issues/1387#issuecomment-1158676952","issue_url":"https://api.github.com/repos/apache/jena/issues/1387","id":1158676952,"node_id":"IC_kwDOAHF7Ec5FEAHY","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-17T09:17:26Z","updated_at":"2022-06-17T09:17:26Z","author_association":"MEMBER","body":"Please explain what is going on here and why these changes are necessary\r\n\r\nThis is a repeat comment from before - I am concerned that changes to central machinery for one particular usage will have consequences for other users that are hard to predict.\r\n\r\nDid you consider batching inside the service execution reading from the `nextStage(Binding)`?\r\n\r\nWhy is single treated different from a bulk of one?\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158676952/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158679954","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1158679954","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1158679954,"node_id":"IC_kwDOAHF7Ec5FEA2S","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-17T09:20:20Z","updated_at":"2022-06-17T09:20:20Z","author_association":"MEMBER","body":"Ref issue #1387.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158679954/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158687061","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1158687061","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1158687061,"node_id":"IC_kwDOAHF7Ec5FEClV","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-17T09:28:15Z","updated_at":"2022-06-17T09:28:15Z","author_association":"MEMBER","body":"The persistence is part of `jena-geosparql`:\r\n\r\nhttps://github.com/apache/jena/blob/main/jena-geosparql/src/main/java/org/apache/jena/geosparql/spatial/SpatialIndexStorage.java\r\n\r\nhttps://github.com/apache/jena/blob/ebb8b1202177c0dd74f88f808359497a38e8daf6/jena-geosparql/src/main/java/org/apache/jena/geosparql/spatial/SpatialIndex.java#L147\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158687061/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158791210","html_url":"https://github.com/apache/jena/pull/1388#issuecomment-1158791210","issue_url":"https://api.github.com/repos/apache/jena/issues/1388","id":1158791210,"node_id":"IC_kwDOAHF7Ec5FEcAq","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-17T11:45:58Z","updated_at":"2022-06-17T11:46:15Z","author_association":"CONTRIBUTOR","body":"Just to clarify, my next step on this PR is to update and write javadoc; especially for what purpose some of the classes are for. This should make reviewing easier.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158791210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158920943","html_url":"https://github.com/apache/jena/issues/1387#issuecomment-1158920943","issue_url":"https://api.github.com/repos/apache/jena/issues/1387","id":1158920943,"node_id":"IC_kwDOAHF7Ec5FE7rv","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-17T14:21:03Z","updated_at":"2022-06-17T14:59:24Z","author_association":"CONTRIBUTOR","body":"> Did you consider batching inside the service execution reading from the nextStage(Binding)?\r\n\r\nBatching based on \"push-events\" to `nextStage(Binding)` is extremely complex to implement when the rest of ARQ is \"pull\" based - i.e. operators are implemented as iterators that pull as many items as needed from their underlying inputs in order to produce the next item.\r\n\r\nAs an example why I am not blindly batching by n bindings:\r\n\r\nIt would be easily possible adding a subclass of `QueryIterRepeatApplyBulk` that calls an abstract `nextStage(Binding[] batch)` method. \r\n\r\nHowever, e.g. in #1314 I created conceptually a `IterBatchByService` (the actual naming is currently a bit awkward) which is an iterator over batches targeted at the same service and which is sourced by the query iterator of the lhs. It aims to create batches of a fixed size but it also adheres to a read ahead limit as to avoid consuming all of the lhs while attempting to fill a batch; or adding items to a batch that are too far ahead.\r\n\r\nThis is a bit smarter than blindly batching unrelated bindings.\r\nDoing this with a push-based API (that expects immediate return values) would be hell.\r\n\r\n> Why is single treated different from a bulk of one?\r\n\r\nWell, the single API is a special case of the bulk one - and the bulk one delegates to it. So its not really treating it differently but rather having two reasonable levels of abstraction (That's why I let QueryIterRepeatApply extend from QueryIterRepeatApplyBulk) - maybe the latter should be called simply `QueryIterFlatMap`.\r\nSingle is certainly more easy to implement - and so far this was how SERVICE was implemented in the first place!\r\nBulk is more powerful because it hands out the QueryIterator but that may require more effort (and knowledge) to work with.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1158920943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159024589","html_url":"https://github.com/apache/jena/pull/1375#issuecomment-1159024589","issue_url":"https://api.github.com/repos/apache/jena/issues/1375","id":1159024589,"node_id":"IC_kwDOAHF7Ec5FFU_N","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-17T16:06:54Z","updated_at":"2022-06-17T16:06:54Z","author_association":"MEMBER","body":">Is there something else I can do in additional in the bounds of this PR ?\r\n\r\nThanks for asking. \r\n\r\nMy first step is to look at #1381 to understand that - and it does currently look like there is a bug managing contexts in QueryExec. A fix may well have knock on-effects.\r\n\r\nAt the moment, there are several active and time-consuming PRs in flight in unrelated areas.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159024589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159075302","html_url":"https://github.com/apache/jena/issues/1381#issuecomment-1159075302","issue_url":"https://api.github.com/repos/apache/jena/issues/1381","id":1159075302,"node_id":"IC_kwDOAHF7Ec5FFhXm","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-17T17:06:30Z","updated_at":"2022-06-17T17:06:30Z","author_association":"MEMBER","body":"I have just found that property functions have to be explicitly enabled whereas custom functions do not which is why functions work and property functions don't in the test case.\r\n\r\nCustom functions are part of SPARQL.\r\nProperty functions are an ARQ feature.\r\n\r\nhttps://github.com/apache/jena/blob/ebb8b1202177c0dd74f88f808359497a38e8daf6/jena-arq/src/main/java/org/apache/jena/sparql/algebra/optimize/TransformPropertyFunction.java#L54\r\n\r\nThe DatasetGraphWrapper case merges in ARQ.getContext which has this set.\r\n`new Context()` does not.\r\n\r\nTry this with and without the `cxt.put`:\r\n```\r\n    private static Context testContext(int id) {\r\n        Context cxt = new Context() {\r\n            @Override\r\n            public String toString() {\r\n                return \"TestContext#\" + id;\r\n            }\r\n        };\r\n        cxt.put(ARQ.enablePropertyFunctions, true); \r\n        return cxt;\r\n    }\r\n```\r\nThat said, the defaults are confusing and silly.\r\n\r\nIt can be `isTrueOrUndef` in `TransformPropertyFunction`.\r\n`strictMode` turns property functions off explicitly so the system default behaviour does not need to be \"off\".\r\n\r\nIt took me a long time to see why even my minimal case based on your test case (thank you!) wasn't working.\r\n\r\nSorry for all the trouble.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159075302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159452829","html_url":"https://github.com/apache/jena/issues/1387#issuecomment-1159452829","issue_url":"https://api.github.com/repos/apache/jena/issues/1387","id":1159452829,"node_id":"IC_kwDOAHF7Ec5FG9id","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-18T12:04:34Z","updated_at":"2022-06-18T12:07:09Z","author_association":"CONTRIBUTOR","body":"I gave the QueryIteratorRepeatApply more thought and it turns out the extension system doesn't need a dedicated QueryIterator at all. Only the `OpExecutor` has to delegate the OpService case to the extension registry rather than directly creating a QueryIterService instance. Handlers in the registry for the bulk case (which receive the input QueryIterator) can choose to wrap that iterator with their own one (may be repeat-apply or some other) or pass them on to the next registered executor.\r\n\r\nThis means I can revert QueryIterRepeatApply.\r\n\r\nI am also looking into combining the bulk and single registry into a one class (I am just not yet sure whether this internally uses the two existing registries or its own set of attributes).\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159452829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159455323","html_url":"https://github.com/apache/jena/issues/1387#issuecomment-1159455323","issue_url":"https://api.github.com/repos/apache/jena/issues/1387","id":1159455323,"node_id":"IC_kwDOAHF7Ec5FG-Jb","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-18T12:21:49Z","updated_at":"2022-06-18T12:37:20Z","author_association":"CONTRIBUTOR","body":"W.r.t. to the comment that this is just for my solution: The bigger picture is that I would really love to have an infrastructure/path where it is possible to combine SERVICE plugins of different third-party systems such as those of sparql-anything ([this is their OpExecutor*](https://github.com/SPARQL-Anything/sparql.anything/blob/ba17609cb4a00838bce074a013e348f2d8ff8b25/sparql-anything-engine/src/main/java/com/github/sparqlanything/engine/FacadeXOpExecutor.java#L189)) - and of course those developed in my group. (Whether and when they'd upgrade is of course their choice.)\r\n\r\nBack then I reached out with [sparql-anything issue 60](https://github.com/SPARQL-Anything/sparql.anything/issues/60)\r\nWhenever you think this issue is in a state where its beneficial to reach out to them for comments I can do so.\r\n(IMO I should first make a stable proposal for the revised registry though)\r\n\r\n\\* Most work there happens in OpService; yet there is one override for OpBGP which extracts options from triples - similar to what stardog does. This would also be interesting to have as a future extension point but I don't think this has to be be a concern for this PR.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159455323/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159502749","html_url":"https://github.com/apache/jena/pull/1388#issuecomment-1159502749","issue_url":"https://api.github.com/repos/apache/jena/issues/1388","id":1159502749,"node_id":"IC_kwDOAHF7Ec5FHJud","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-18T16:22:57Z","updated_at":"2022-06-18T16:28:33Z","author_association":"CONTRIBUTOR","body":"May latest attempt at cleaning up and simplifying things:\r\n\r\n* Reverted QueryIterRepeatApply (it used inside of ServiceExecutorBulkToSingle which acts as the bridge between bulk and non-bulk)\r\n* Combined bulk and non-bulk registries\r\n* Deprecated ServiceExecution in favor using QueryIterator directly\r\n* OpExecutor now directly calls the plugin system\r\n* This way QueryIterService is actually not used anymore - service execution via the registry eventually by default ends up with a QueryIterRepeatApply. The still existing QueryIterService only uses the non-bulk part of the registry.\r\n\r\nIf there should be a dedicated QueryIterService which calls the registry rather than OpExecutor doing that, then actually the proper base class would be something like a QueryIterDeferred / LazyInitialization: That iterator just takes the iterator returned by the service handler and serves from it. No repeat apply / batching / stages needed at that time.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159502749/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159769615","html_url":"https://github.com/apache/jena/pull/1390#issuecomment-1159769615","issue_url":"https://api.github.com/repos/apache/jena/issues/1390","id":1159769615,"node_id":"IC_kwDOAHF7Ec5FIK4P","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-19T16:21:32Z","updated_at":"2022-06-19T16:21:32Z","author_association":"MEMBER","body":"> RDFConnection instance that is not backed by an RDFLink\r\n\r\nI'd like to understand where this arises. Since version 4.3, `RDFConnection` is a presentation and the machinery is all in `RDFLink`. \r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159769615/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159778632","html_url":"https://github.com/apache/jena/pull/1390#issuecomment-1159778632","issue_url":"https://api.github.com/repos/apache/jena/issues/1390","id":1159778632,"node_id":"IC_kwDOAHF7Ec5FINFI","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-19T17:14:04Z","updated_at":"2022-06-19T17:26:29Z","author_association":"CONTRIBUTOR","body":"In my case, its a mix of both legacy RDFConnection implementations from when the link layer did not exist - as well as custom decorations. For example, I was experimenting with a [getMetadata()](https://docs.oracle.com/javase/7/docs/api/java/sql/Connection.html#getMetaData()) method (analoguous to JDBC's connection) in order to allow for obtaining information about what the connection is connected to. For this I used RDFConnectionWrapper as in the provided test case.\r\n\r\n\r\nOn top of that, once I get an RDFConnection from a 'data source' I sometimes wrap the connection with query transformations (sometimes paired with result set post processing).\r\nThis way the data source, query transformations and application logic don't have to know each other - at the cost of resulting in a bit of ugly wrapping but that's typically not really an issue - unless when the wrappers don't delegate properly.\r\n\r\n```java\r\n    public static RDFConnection wrapWithLinkDecorator(RDFConnection conn, Function<? super RDFLink, ? extends RDFLink> linkDecorator) {\r\n        RDFLink oldLink = RDFLinkAdapter.adapt(conn);\r\n        RDFLink newLink = linkDecorator.apply(oldLink);\r\n        RDFConnection result = RDFConnectionAdapter.adapt(newLink);\r\n        return result;\r\n    }\r\n```\r\n\r\nYes, ideally RDFConnection would just be a presenter for an RDFLink but the link/conn machinery making that assumption and therefore only providing an incomplete wrapping was again an experience like catching a splinter. I am also already looking into whether in my case I can refactor the code to only use the link machinery, but that's quite heavy effort compared to 'completing' the adapters.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1159778632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1160200979","html_url":"https://github.com/apache/jena/pull/1390#issuecomment-1160200979","issue_url":"https://api.github.com/repos/apache/jena/issues/1390","id":1160200979,"node_id":"IC_kwDOAHF7Ec5FJ0MT","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-20T09:26:32Z","updated_at":"2022-06-20T09:31:04Z","author_association":"CONTRIBUTOR","body":"I also streamlined null handling in the wrappers\r\nExisting code would use both variants:\r\n```java\r\n// class RDFLinkAdapter\r\n    @Override\r\n    public Graph get() {\r\n        Model m = conn.fetch();\r\n        if ( m == null ) return null;\r\n        return m.getGraph();\r\n    }\r\n```\r\nas well as\r\n```java\r\n// class RDFLinkAdapter\r\n    @Override\r\n    public DatasetGraph getDataset() {\r\n        return conn.fetchDataset().asDatasetGraph(); // fails if fetchDataset returned null\r\n    }\r\n```\r\n\r\nI now changed that to:\r\n```java\r\n// class RDFLinkAdapter\r\n    @Override\r\n    public DatasetGraph getDataset() {\r\n        Dataset ds = conn.fetchDataset();\r\n        return ds == null ? null : ds.asDatasetGraph();\r\n    }\r\n```\r\n\r\nTo motivate this change: There is a bit of unclarity in getDataset()\r\n- It can delegate to fetchDataset() which downloads the dataset\r\n- It can return a dataset **view** over the remote endpoint (where the find method is implemented as sending SPARQL select queries)\r\n- It can return a local (in-memory) dataset\r\n- It may be an unsupported operation and thus yield null or raise UOE\r\n\r\nSo far I used getDataset() mainly to expose a local in memory datasets where polymorphic views via `Resource.as(class)` are most meaningful.\r\nConversely, such views are not really meaningful over remote views (each method call results in a remote request) or if getDataset delegates to fetchDataset which then attempts to download all of DBpedia.\r\n\r\nDepending on the use case it thus makes sense for getDataset to return null, raise a UOP, return the local copy or a view over remote requests. The contract does not state whether null or UOP should be used - The existing code in the first example above with `RDFLinkAdapter.get()` suggest null is valid!\r\nIn any case, I don't think that the adapters are the place to judge which is the 'correct' usage so that's why I added null delegation.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1160200979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1161393574","html_url":"https://github.com/apache/jena/pull/1392#issuecomment-1161393574","issue_url":"https://api.github.com/repos/apache/jena/issues/1392","id":1161393574,"node_id":"IC_kwDOAHF7Ec5FOXWm","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-21T07:56:20Z","updated_at":"2022-06-22T10:34:53Z","author_association":"CONTRIBUTOR","body":"- I just realized the method `getOrDefault` should be renamed to `chooseRegistry` - the same concept already exists with e.g.\r\n`public static PropertyFunctionRegistry chooseRegistry(Context context)` (will update later today) [done]\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1161393574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1162195038","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1162195038","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1162195038,"node_id":"IC_kwDOAHF7Ec5FRbBe","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-21T18:55:10Z","updated_at":"2022-06-21T18:56:17Z","author_association":"CONTRIBUTOR","body":"There are now tests that compare the outcomes of queries with different parameters for bulk size and caching enabled/disabled. So far all succeed - whoever reads this and has interest, feel free propose more tests.\r\nThe jena-serviceenhancer module (under jena-extras) now also has an assembler and a test case to check whether assembly works.\r\nThe pom includes an `ext` profile that creates a shaded jar for use with Fuseki.\r\nLaunching fuseki with the serviceenhancer jar on the classpath and an appropriate assembler successfully gives access to the enhanced functionality (see the queries in the test suite).\r\n\r\nCurrently the core interfaces of the caching API are in our third party 'aksw-commons' project. I'll try to move this to the module to make it self-contained. The idea would be to have a basic in-memory cache provider part of the module and allow for support for other cache providers (I actually also have a disk based one, but that one could be loaded as a separate plugin via a maven dependency).\r\nThe main issue I now have to work on is that the cache API lacks a method to suppress eviction of data ranges that have been scheduled for answering an active query.\r\nOther than that of course cleanup is needed.\r\n\r\n\r\nOne opinion I'm interested in is how the Fuseki integration should work - should it remain an extra module that can be shaded as it is currently done? And if so what would be an appropriate maven profile name?\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1162195038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1162784332","html_url":"https://github.com/apache/jena/pull/1394#issuecomment-1162784332","issue_url":"https://api.github.com/repos/apache/jena/issues/1394","id":1162784332,"node_id":"IC_kwDOAHF7Ec5FTq5M","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-22T08:05:42Z","updated_at":"2022-06-22T08:05:42Z","author_association":"MEMBER","body":"Github supports automated close of issues. I edited the description here to verify this works.\r\n\r\n(or maybe it makes it too simple and mistakes are easy to make!)\r\n\r\nWe can change the template. #1395\r\n\r\nhttps://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1162784332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1163272267","html_url":"https://github.com/apache/jena/issues/1397#issuecomment-1163272267","issue_url":"https://api.github.com/repos/apache/jena/issues/1397","id":1163272267,"node_id":"IC_kwDOAHF7Ec5FViBL","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-22T15:36:10Z","updated_at":"2022-06-22T15:36:10Z","author_association":"MEMBER","body":"Probably gets unwrapped by `ElementTransformCleanGroupsOfOne`.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1163272267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1163518437","html_url":"https://github.com/apache/jena/issues/1396#issuecomment-1163518437","issue_url":"https://api.github.com/repos/apache/jena/issues/1396","id":1163518437,"node_id":"IC_kwDOAHF7Ec5FWeHl","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-22T19:27:35Z","updated_at":"2022-06-22T19:27:35Z","author_association":"MEMBER","body":"This is not so clear cut.\r\n\r\nlog4j2 is not the only logging system so relying on a feature in normal mode of operation excludes other (e.g. JUL).\r\n\r\nIn [SPARQLQueryProcessor.java#L238](https://github.com/afs/jena/blob/63a8f50b8434d1eea52369798a1310415d58e2ec/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/servlets/SPARQLQueryProcessor.java#L238) verbose mode switches Fusek to print the query out multi-line.\r\n\r\nConfiguring log4j2 is interesting but it loses the ability to switch based on the verbose setting. In Fuseki Main, it is useful when developing when the Fuseki server is build programmatically.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1163518437/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1164089940","html_url":"https://github.com/apache/jena/issues/1396#issuecomment-1164089940","issue_url":"https://api.github.com/repos/apache/jena/issues/1396","id":1164089940,"node_id":"IC_kwDOAHF7Ec5FYppU","user":{"login":"OyvindLGjesdal","id":5328572,"node_id":"MDQ6VXNlcjUzMjg1NzI=","avatar_url":"https://avatars.githubusercontent.com/u/5328572?v=4","gravatar_id":"","url":"https://api.github.com/users/OyvindLGjesdal","html_url":"https://github.com/OyvindLGjesdal","followers_url":"https://api.github.com/users/OyvindLGjesdal/followers","following_url":"https://api.github.com/users/OyvindLGjesdal/following{/other_user}","gists_url":"https://api.github.com/users/OyvindLGjesdal/gists{/gist_id}","starred_url":"https://api.github.com/users/OyvindLGjesdal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OyvindLGjesdal/subscriptions","organizations_url":"https://api.github.com/users/OyvindLGjesdal/orgs","repos_url":"https://api.github.com/users/OyvindLGjesdal/repos","events_url":"https://api.github.com/users/OyvindLGjesdal/events{/privacy}","received_events_url":"https://api.github.com/users/OyvindLGjesdal/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T08:06:28Z","updated_at":"2022-06-23T08:06:28Z","author_association":"CONTRIBUTOR","body":"Thanks for the pointer to verbose flag, that is a workaround that we can apply and work with.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1164089940/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1164219490","html_url":"https://github.com/apache/jena/pull/1402#issuecomment-1164219490","issue_url":"https://api.github.com/repos/apache/jena/issues/1402","id":1164219490,"node_id":"IC_kwDOAHF7Ec5FZJRi","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T10:04:19Z","updated_at":"2022-06-23T10:04:19Z","author_association":"MEMBER","body":"FYI @Aklakan","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1164219490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1164272831","html_url":"https://github.com/apache/jena/issues/1399#issuecomment-1164272831","issue_url":"https://api.github.com/repos/apache/jena/issues/1399","id":1164272831,"node_id":"IC_kwDOAHF7Ec5FZWS_","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T11:04:15Z","updated_at":"2022-06-23T11:04:15Z","author_association":"CONTRIBUTOR","body":"So the rules should be like follows - right?\r\n\r\n- empty context &rarr; default behavior i.e. http service request should work\r\n- context with present but empty service executor registry &rarr; error because no registered executor\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1164272831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1164314008","html_url":"https://github.com/apache/jena/issues/1399#issuecomment-1164314008","issue_url":"https://api.github.com/repos/apache/jena/issues/1399","id":1164314008,"node_id":"IC_kwDOAHF7Ec5FZgWY","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T11:53:16Z","updated_at":"2022-06-23T11:53:16Z","author_association":"MEMBER","body":"Yes.\r\n\r\n\"Empty context\" here means no entry for `ARQConstants.registryServiceExecutors`. The rest of the context is not important.\r\n\r\nThis is motivated by the work elsewhere dealing with the context for query execution (other registries).\r\n\r\n1. There is already a separate flag to turn SERVICE off completely. \r\n2. \"No entry\" should give some default SPARQL execution as expected behaviour.\r\n\r\nWhat happens if there is an empty service executor registry is less important. Your suggestion makes sense to me because it is a configuration error by the application.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1164314008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1164633108","html_url":"https://github.com/apache/jena/issues/1399#issuecomment-1164633108","issue_url":"https://api.github.com/repos/apache/jena/issues/1399","id":1164633108,"node_id":"IC_kwDOAHF7Ec5FauQU","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T16:36:22Z","updated_at":"2022-06-23T16:36:31Z","author_association":"CONTRIBUTOR","body":"I added a fix within #1388 - will test tomorrow.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1164633108/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1164710500","html_url":"https://github.com/apache/jena/issues/1397#issuecomment-1164710500","issue_url":"https://api.github.com/repos/apache/jena/issues/1397","id":1164710500,"node_id":"IC_kwDOAHF7Ec5FbBJk","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-23T18:00:00Z","updated_at":"2022-06-23T18:01:36Z","author_association":"CONTRIBUTOR","body":"Yes, that seems to have been the reason - PR #1403  with test case created.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1164710500/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165255872","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1165255872","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1165255872,"node_id":"IC_kwDOAHF7Ec5FdGTA","user":{"login":"LorenzBuehmann","id":976029,"node_id":"MDQ6VXNlcjk3NjAyOQ==","avatar_url":"https://avatars.githubusercontent.com/u/976029?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzBuehmann","html_url":"https://github.com/LorenzBuehmann","followers_url":"https://api.github.com/users/LorenzBuehmann/followers","following_url":"https://api.github.com/users/LorenzBuehmann/following{/other_user}","gists_url":"https://api.github.com/users/LorenzBuehmann/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzBuehmann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzBuehmann/subscriptions","organizations_url":"https://api.github.com/users/LorenzBuehmann/orgs","repos_url":"https://api.github.com/users/LorenzBuehmann/repos","events_url":"https://api.github.com/users/LorenzBuehmann/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzBuehmann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T06:44:22Z","updated_at":"2022-06-24T06:44:22Z","author_association":"CONTRIBUTOR","body":"Well, that does only add items to the index before it is finally built and remains after that immutable. It then serializes the index as Java object stream to disk. Just the collection of items though, not the underlying STR-Tree - this will be rebuild each time on startup.\r\n\r\nBut there is no mechanism yet that would write changes made to a mutable R-Tree index to disk then, i.e. it would only be changed in-memory, but the question would be how to make those changes persistent. Re-serializing the index each time the RDF graph is being changed seems to be infeasible as it is somewhat slow for larger indexes and it currently just dumps the whole index.\r\nThe main problem is just that JTS doesn't provide any on-disk index afaik.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165255872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165485611","html_url":"https://github.com/apache/jena/pull/1402#issuecomment-1165485611","issue_url":"https://api.github.com/repos/apache/jena/issues/1402","id":1165485611,"node_id":"IC_kwDOAHF7Ec5Fd-Yr","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T11:33:18Z","updated_at":"2022-06-24T11:33:18Z","author_association":"CONTRIBUTOR","body":"> FYI @Aklakan\r\n\r\nAt first glance this only adds a context attribute and should thus not conflict with my work as I just pass the context along.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165485611/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165586283","html_url":"https://github.com/apache/jena/pull/1402#issuecomment-1165586283","issue_url":"https://api.github.com/repos/apache/jena/issues/1402","id":1165586283,"node_id":"IC_kwDOAHF7Ec5FeW9r","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T13:39:36Z","updated_at":"2022-06-24T13:39:36Z","author_association":"MEMBER","body":"It reuses an existing context key.\r\n\r\nIf you use `Service.java` then it will be honoured. If have a different execution code, you may want to implement the additional string value possibilities.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165586283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165657981","html_url":"https://github.com/apache/jena/pull/1315#issuecomment-1165657981","issue_url":"https://api.github.com/repos/apache/jena/issues/1315","id":1165657981,"node_id":"IC_kwDOAHF7Ec5Feod9","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T14:57:14Z","updated_at":"2022-06-24T15:26:39Z","author_association":"MEMBER","body":"Please could you use the syntax `GH-nnnn:` here and on other PR and issues?\r\n\r\nHaving things look the same would help me with dealing with the multiple open PRs and issues.\r\n\r\nThanks.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165657981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165662761","html_url":"https://github.com/apache/jena/pull/1392#issuecomment-1165662761","issue_url":"https://api.github.com/repos/apache/jena/issues/1392","id":1165662761,"node_id":"IC_kwDOAHF7Ec5Fepop","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T15:02:51Z","updated_at":"2022-06-24T15:02:51Z","author_association":"MEMBER","body":"GH-1391 isn't the issue for this PR nor is it this PR.\r\n\r\nCould you create an issue (or press send on a draft!) and label the commit please?\r\n\r\nAll this makes looking back over git history in several months/years time easier.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165662761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165692300","html_url":"https://github.com/apache/jena/pull/1404#issuecomment-1165692300","issue_url":"https://api.github.com/repos/apache/jena/issues/1404","id":1165692300,"node_id":"IC_kwDOAHF7Ec5Few2M","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T15:36:12Z","updated_at":"2022-06-24T18:38:41Z","author_association":"MEMBER","body":"Thanks - that looks right.\r\n\r\nIt may take a while to fully dig into this because `NodeUtils.compareRDFTerms` looks odd as well -- this would relate to plain string and lang string comparison and lead to a related but different failure of transitive compare relationships.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165692300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165726321","html_url":"https://github.com/apache/jena/pull/1392#issuecomment-1165726321","issue_url":"https://api.github.com/repos/apache/jena/issues/1392","id":1165726321,"node_id":"IC_kwDOAHF7Ec5Fe5Jx","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T16:15:40Z","updated_at":"2022-06-24T16:15:40Z","author_association":"MEMBER","body":"(sorry - misclick)","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165726321/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165732517","html_url":"https://github.com/apache/jena/pull/1392#issuecomment-1165732517","issue_url":"https://api.github.com/repos/apache/jena/issues/1392","id":1165732517,"node_id":"IC_kwDOAHF7Ec5Fe6ql","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T16:23:11Z","updated_at":"2022-06-24T16:23:11Z","author_association":"MEMBER","body":"Instead of using `chooseRegistry` in `QueryExecutionFactory`, `QueryExecDatasetBuilder` and `QueryEngineFactoryWrapper`, I think we can give a simpler view by replacing `QueryEngineRegistry.get().find` with `QueryEngineRegistry.findFactory` (currently, the definition of `findFactory`) and changing `findFactory` to be `chooseRegistry(context).find(...)`.\r\n\r\n`QueryEngineFactoryWrapper` can be left alone.\r\n`QueryExecutionFactory` and `QueryExecDatasetBuilder` needs teh change `get().find` to `findFactory`.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165732517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165734203","html_url":"https://github.com/apache/jena/pull/1392#issuecomment-1165734203","issue_url":"https://api.github.com/repos/apache/jena/issues/1392","id":1165734203,"node_id":"IC_kwDOAHF7Ec5Fe7E7","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T16:25:21Z","updated_at":"2022-06-24T16:25:21Z","author_association":"MEMBER","body":"The existing way to have a different query engine is to add a dataset-graph wrapper, and add an factory to the lookup chain.\r\nThat is very old and not really that useful.\r\n\r\nProbably, `DatasetGraph` should have an `exec(op, context)` but that's not a change to make lightly. So this PR is a useful addition and exploration of the ideal design.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165734203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165820724","html_url":"https://github.com/apache/jena/pull/1390#issuecomment-1165820724","issue_url":"https://api.github.com/repos/apache/jena/issues/1390","id":1165820724,"node_id":"IC_kwDOAHF7Ec5FfQM0","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T18:18:08Z","updated_at":"2022-06-24T18:18:08Z","author_association":"MEMBER","body":"The \"GH-xxxx:\" should refer to the issue.\r\n\r\nThe \"GH-yyyy:\" in commits will be a link and should refer to the issue, or the PR is there isn't an issue.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165820724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165821801","html_url":"https://github.com/apache/jena/pull/1390#issuecomment-1165821801","issue_url":"https://api.github.com/repos/apache/jena/issues/1390","id":1165821801,"node_id":"IC_kwDOAHF7Ec5FfQdp","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T18:19:39Z","updated_at":"2022-06-24T18:19:39Z","author_association":"MEMBER","body":"`DataSource` ought to work at the link/node/DatasetGraph level. This is the future - effectibvely stateless presentation object sover mechninary working at the Node level.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165821801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165835667","html_url":"https://github.com/apache/jena/issues/1399#issuecomment-1165835667","issue_url":"https://api.github.com/repos/apache/jena/issues/1399","id":1165835667,"node_id":"IC_kwDOAHF7Ec5FfT2T","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-24T18:37:39Z","updated_at":"2022-06-24T18:37:39Z","author_association":"MEMBER","body":"If you add \"This fixes #1399\" to the description, magic happens and this issue is automatically closed.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1165835667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1166306627","html_url":"https://github.com/apache/jena/pull/1315#issuecomment-1166306627","issue_url":"https://api.github.com/repos/apache/jena/issues/1315","id":1166306627,"node_id":"IC_kwDOAHF7Ec5FhG1D","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-25T15:05:27Z","updated_at":"2022-06-25T15:06:32Z","author_association":"CONTRIBUTOR","body":"Do you mean on the commit messages? I thought its only/mostly relevant upon squashing after successful review but sure I can do it during development too.\r\nAh, or are you referring to the broken/missing links between some of my other issues and PR? Yes, I'll fix them.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1166306627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1166309676","html_url":"https://github.com/apache/jena/pull/1315#issuecomment-1166309676","issue_url":"https://api.github.com/repos/apache/jena/issues/1315","id":1166309676,"node_id":"IC_kwDOAHF7Ec5FhHks","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-25T15:23:51Z","updated_at":"2022-06-25T15:23:51Z","author_association":"MEMBER","body":"Right - it does not have to be all commits. When there is a reference though, it's nice to use the same syntax everywhere - helps when looking through many items and helps scripts.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1166309676/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1166342182","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1166342182","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1166342182,"node_id":"IC_kwDOAHF7Ec5FhPgm","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-25T18:45:12Z","updated_at":"2022-06-25T18:56:33Z","author_association":"CONTRIBUTOR","body":"Ideally there would be a persistent R-Tree implementation similar to dboe's BPlusTree.\r\n\r\nBut even just serializing the in-memory data structure as a whole rather then having to rebuild it on start-up would be an improvement.\r\nAlso, using [kryo](https://github.com/EsotericSoftware/kryo) serialization (is BSD-3 compatible with Apache v2?) would most likely be faster than java serialization.\r\nI suppose parallel de-/serialization of tree data structures should be rather trivial to implement when going with the in-memory index solution for now.\r\n\r\nOne approach is also to represent grid cells (with optional nesting) as IDs and then link spatial objects to the grid cell ids - so a kind of poor man's quad tree represented in a B+ tree. This could be implemented with the TDB machinery - but not sure whether that'd be a worthwhile endeavor.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1166342182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1166475160","html_url":"https://github.com/apache/jena/pull/1404#issuecomment-1166475160","issue_url":"https://api.github.com/repos/apache/jena/issues/1404","id":1166475160,"node_id":"IC_kwDOAHF7Ec5Fhv-Y","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-26T09:52:56Z","updated_at":"2022-06-26T09:53:44Z","author_association":"MEMBER","body":"This would fix the presenting issue but it creates more change because the current (4.5.0) path of sorting are \"lang before lexicial\".\r\n\r\nMore general discussion on the JIRA ticket. [JENA-2333](https://issues.apache.org/jira/browse/JENA-2333).\r\n\r\nThere is a SPARQL 1.2 discussion that covers this area https://github.com/w3c/sparql-12/issues/88.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1166475160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1167113826","html_url":"https://github.com/apache/jena/pull/1256#issuecomment-1167113826","issue_url":"https://api.github.com/repos/apache/jena/issues/1256","id":1167113826,"node_id":"IC_kwDOAHF7Ec5FkL5i","user":{"login":"fkleedorfer","id":551624,"node_id":"MDQ6VXNlcjU1MTYyNA==","avatar_url":"https://avatars.githubusercontent.com/u/551624?v=4","gravatar_id":"","url":"https://api.github.com/users/fkleedorfer","html_url":"https://github.com/fkleedorfer","followers_url":"https://api.github.com/users/fkleedorfer/followers","following_url":"https://api.github.com/users/fkleedorfer/following{/other_user}","gists_url":"https://api.github.com/users/fkleedorfer/gists{/gist_id}","starred_url":"https://api.github.com/users/fkleedorfer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fkleedorfer/subscriptions","organizations_url":"https://api.github.com/users/fkleedorfer/orgs","repos_url":"https://api.github.com/users/fkleedorfer/repos","events_url":"https://api.github.com/users/fkleedorfer/events{/privacy}","received_events_url":"https://api.github.com/users/fkleedorfer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-27T09:31:12Z","updated_at":"2022-06-27T09:31:12Z","author_association":"CONTRIBUTOR","body":"I'm ok with merging this PR and making the above changes at some later point in time","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1167113826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]