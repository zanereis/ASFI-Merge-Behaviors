[{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1305823952","html_url":"https://github.com/apache/daffodil/pull/865#issuecomment-1305823952","issue_url":"https://api.github.com/repos/apache/daffodil/issues/865","id":1305823952,"node_id":"IC_kwDOBhBG1s5N1UrQ","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-07T15:59:32Z","updated_at":"2022-11-07T15:59:32Z","author_association":"CONTRIBUTOR","body":"Something doesn't add up.\r\n\r\nWe were at roughly 80% coverage on a 110K-lines code base.\r\n\r\nWe dropped to 64% coverage.  That's a 16% drop, meaning 17K-lines are no longer covered that were.\r\n\r\nThat's can't be explained by println statements in the Main/CLI code. \r\n\r\nSo I'm assuming my arithmetic here doesn't make sense. But I clearly don't understand what we mean by 80+% dropping to 64% coverage. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1305823952/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1305840271","html_url":"https://github.com/apache/daffodil/pull/865#issuecomment-1305840271","issue_url":"https://api.github.com/repos/apache/daffodil/issues/865","id":1305840271,"node_id":"IC_kwDOBhBG1s5N1YqP","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-07T16:09:27Z","updated_at":"2022-11-07T16:09:27Z","author_association":"MEMBER","body":"I think that 64% is just the the coverage of this PR, not the coverage of the entire codebase. So of the lines this PR changed to `src/main`, 64% of those lines have a test that hit them. The overall coverage is still about 80%.\r\n\r\nHere's the codecov page for this PR that makes it a bit more clear:\r\n\r\nhttps://app.codecov.io/gh/apache/daffodil/pull/865","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1305840271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1305846158","html_url":"https://github.com/apache/daffodil/pull/865#issuecomment-1305846158","issue_url":"https://api.github.com/repos/apache/daffodil/issues/865","id":1305846158,"node_id":"IC_kwDOBhBG1s5N1aGO","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-07T16:13:25Z","updated_at":"2022-11-07T16:13:25Z","author_association":"CONTRIBUTOR","body":"Ok. Then I suggest adding a ticket to enhance code coverage here. But I wouldn't hold up committing this much improvement for that. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1305846158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1307161856","html_url":"https://github.com/apache/daffodil/pull/865#issuecomment-1307161856","issue_url":"https://api.github.com/repos/apache/daffodil/issues/865","id":1307161856,"node_id":"IC_kwDOBhBG1s5N6bUA","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-08T12:47:12Z","updated_at":"2022-11-08T12:47:12Z","author_association":"MEMBER","body":"[DAFFODIL-2746](https://issues.apache.org/jira/browse/DAFFODIL-2746) added to improve CLI code coverage. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1307161856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1310418910","html_url":"https://github.com/apache/daffodil/pull/872#issuecomment-1310418910","issue_url":"https://api.github.com/repos/apache/daffodil/issues/872","id":1310418910,"node_id":"IC_kwDOBhBG1s5OG2fe","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-10T14:57:44Z","updated_at":"2022-11-10T14:57:44Z","author_association":"CONTRIBUTOR","body":"\r\n> I think this is a question for other devs: should we consider adding a GitHub action for macOS to ensure this continues to work?\r\n\r\nYes, but not as part of this ticket, but another one about specifically setting that up. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1310418910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1310420953","html_url":"https://github.com/apache/daffodil/pull/872#issuecomment-1310420953","issue_url":"https://api.github.com/repos/apache/daffodil/issues/872","id":1310420953,"node_id":"IC_kwDOBhBG1s5OG2_Z","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-10T14:59:09Z","updated_at":"2022-11-10T14:59:09Z","author_association":"MEMBER","body":"> The Build Documentation step generates 1 warning\r\n\r\nThere's lots of discussions on the internet about this error, with I think no real resolution. I think this might be a known issue. \r\n\r\n> The Run Integration Tests step now generates 3 warnings;\r\n\r\nThis was a change made in the recent integration test refactoring. We used to just have the blob tests commented out because they require manually generating large files to test. But because they were commented out, they were easy to forget about. To avoid that, I added some JUnit `assumeTrue` calls so that the tests would be skipped if those generated files didn't exist. That way the tests still pass, but we get a clear reminder that those tests exist and were skipped. We don't need to run these very often because blob logic doesn't change much, but they're good to know have be periodically reminded of.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1310420953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1310423337","html_url":"https://github.com/apache/daffodil/pull/872#issuecomment-1310423337","issue_url":"https://api.github.com/repos/apache/daffodil/issues/872","id":1310423337,"node_id":"IC_kwDOBhBG1s5OG3kp","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-10T15:00:42Z","updated_at":"2022-11-10T15:00:42Z","author_association":"MEMBER","body":"> > I think this is a question for other devs: should we consider adding a GitHub action for macOS to ensure this continues to work?\r\n> \r\n> Yes, but not as part of this ticket, but another one about specifically setting that up.\r\n\r\nAgreed it can be done separately. I've created [DAFFODIL-2747](https://issues.apache.org/jira/browse/DAFFODIL-2747) for this.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1310423337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1310443027","html_url":"https://github.com/apache/daffodil/pull/872#issuecomment-1310443027","issue_url":"https://api.github.com/repos/apache/daffodil/issues/872","id":1310443027,"node_id":"IC_kwDOBhBG1s5OG8YT","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-10T15:15:23Z","updated_at":"2022-11-10T15:15:23Z","author_association":"CONTRIBUTOR","body":"> I think this is a question for other devs: should we consider adding a GitHub action for macOS to ensure this continues to work?\r\n\r\nPeter and I certainly can modify the GitHub Actions CI workflow if anyone else would like macOS support.  If we do so, I propose that we run only one job on the macOS runner (that is, we don't test Java 8, 11, and 17 since that would be redundant with the Linux and Windows runners already testing Java 8, 11, and 17).  I have been using Java 11 as my machine's Java runtime up to now, but googling makes me think our choice really should be between Java 8 (if we want to support the most widely used Java runtime) or Java 17 (if we want to support the current LTS version and Java 17 was released over 1 year ago, so it's had enough time to fix bugs and become a stable runtime).  Shall we test only Java 17 on the macOS runner?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1310443027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1310448621","html_url":"https://github.com/apache/daffodil/pull/872#issuecomment-1310448621","issue_url":"https://api.github.com/repos/apache/daffodil/issues/872","id":1310448621,"node_id":"IC_kwDOBhBG1s5OG9vt","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-10T15:19:22Z","updated_at":"2022-11-10T15:19:22Z","author_association":"CONTRIBUTOR","body":"I'll move our discussion about Java runtimes to [DAFFODIL-2747](https://issues.apache.org/jira/browse/DAFFODIL-2747).","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1310448621/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1314064708","html_url":"https://github.com/apache/daffodil/pull/875#issuecomment-1314064708","issue_url":"https://api.github.com/repos/apache/daffodil/issues/875","id":1314064708,"node_id":"IC_kwDOBhBG1s5OUwlE","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-14T16:47:23Z","updated_at":"2022-11-14T16:47:23Z","author_association":"CONTRIBUTOR","body":"Your pull request description needs a body as well as the title and the DAFFODIL-2743 line.  The body should say which Scala classes had to be changed because they still had references to deprecated methods.  I also want to know why we didn't see compilation warnings alerting us that these deprecated methods still were being called.  I think it would be in scope for this PR to (temporarily or permanently) add a compilation option to enable deprecation warnings so we can see what other problems are there.  ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1314064708/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1314097596","html_url":"https://github.com/apache/daffodil/pull/875#issuecomment-1314097596","issue_url":"https://api.github.com/repos/apache/daffodil/issues/875","id":1314097596,"node_id":"IC_kwDOBhBG1s5OU4m8","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-14T17:09:58Z","updated_at":"2022-11-14T17:09:58Z","author_association":"MEMBER","body":"> I also want to know why we didn't see compilation warnings alerting us that these deprecated methods still were being called\r\n\r\nI don't think we called any deprecated methods, even in unit tests. Probably not a great idea from a code coverage perspective, but they were deprecated, so maybe it wasn't super important. We current set the `-deprecation` flag in scalacOptions, so I think  deprecation warnings are treated as errors, which is why we don't have any tests calling those functions, or else they would error.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1314097596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1314111878","html_url":"https://github.com/apache/daffodil/pull/875#issuecomment-1314111878","issue_url":"https://api.github.com/repos/apache/daffodil/issues/875","id":1314111878,"node_id":"IC_kwDOBhBG1s5OU8GG","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-14T17:19:28Z","updated_at":"2022-11-14T17:19:28Z","author_association":"CONTRIBUTOR","body":"> We current set the `-deprecation` flag in scalacOptions, so I think deprecation warnings are treated as errors, which is why we don't have any tests calling those functions, or else they would error.\r\n\r\nOK, I see, the compiler just didn't tell us that some javadocs or scaladocs still referred to deprecated functions.  Treating deprecation warnings as errors is fine with me.  Now the integration tests are failing and will need to be fixed as well.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1314111878/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1314216522","html_url":"https://github.com/apache/daffodil/pull/875#issuecomment-1314216522","issue_url":"https://api.github.com/repos/apache/daffodil/issues/875","id":1314216522,"node_id":"IC_kwDOBhBG1s5OVVpK","user":{"login":"shanedell","id":32347414,"node_id":"MDQ6VXNlcjMyMzQ3NDE0","avatar_url":"https://avatars.githubusercontent.com/u/32347414?v=4","gravatar_id":"","url":"https://api.github.com/users/shanedell","html_url":"https://github.com/shanedell","followers_url":"https://api.github.com/users/shanedell/followers","following_url":"https://api.github.com/users/shanedell/following{/other_user}","gists_url":"https://api.github.com/users/shanedell/gists{/gist_id}","starred_url":"https://api.github.com/users/shanedell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shanedell/subscriptions","organizations_url":"https://api.github.com/users/shanedell/orgs","repos_url":"https://api.github.com/users/shanedell/repos","events_url":"https://api.github.com/users/shanedell/events{/privacy}","received_events_url":"https://api.github.com/users/shanedell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-14T18:44:55Z","updated_at":"2022-11-14T18:44:55Z","author_association":"CONTRIBUTOR","body":"> Your pull request description needs a body as well as the title and the DAFFODIL-2743 line. The body should say which Scala classes had to be changed because they still had references to deprecated methods. I also want to know why we didn't see compilation warnings alerting us that these deprecated methods still were being called. I think it would be in scope for this PR to (temporarily or permanently) add a compilation option to enable deprecation warnings so we can see what other problems are there.\r\n\r\n@tuxji Do you want the specific class names and which methods were updated, just the class names that need updated/removed or just the file name?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1314216522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1314262592","html_url":"https://github.com/apache/daffodil/pull/875#issuecomment-1314262592","issue_url":"https://api.github.com/repos/apache/daffodil/issues/875","id":1314262592,"node_id":"IC_kwDOBhBG1s5OVg5A","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-14T19:24:07Z","updated_at":"2022-11-14T19:24:07Z","author_association":"CONTRIBUTOR","body":"> Do you want the specific class names and which methods were updated, just the class names that need updated/removed or just the file name?\r\n\r\nShane, the best level of detail to put in a pull request is somewhat subjective.  I personally review my own pull requests one file at a time and write a brief message about each file because doing so forces me to think about why the PR changes each file and sometimes reminds me of something I may have overlooked.  Here is an example I see in your own pull request.  The first changed file is Main.scala so I would write something like...\r\n\r\n`Main.scala: Call DataProcessor methods instead of deprecated HasSetDebugger methods.`\r\n\r\nI see two issues immediately when I look at Main.scala.  The first issue is that when I search all the files changed for other mentions of HasSetDebugger, I don't see HasSetDebugger's definition, only that it is no longer one of DataProcessor's traits.  I know immediately that the PR has not removed HasSetDebugger's definition yet (FYI, you can find HasSetDebugger's definition in the file daffodil-lib/src/main/scala/org/apache/daffodil/processors/Runtime.scala).  The second issue I see is that you can't simply replace `setDebugg*` calls with `withDebugg*` calls.  The `setDebugg*` calls are mutative - they change the called object's state.  The `withDebugg*` calls are immutative - they return a copy of the called object with the new value instead of the old value, but the called object's state hasn't changed in any way.  This could be why your integration tests are failing.\r\n\r\nThis example shows how the very act of writing down why your PR changes each file can help you notice problems yourself.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1314262592/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1315687430","html_url":"https://github.com/apache/daffodil/pull/875#issuecomment-1315687430","issue_url":"https://api.github.com/repos/apache/daffodil/issues/875","id":1315687430,"node_id":"IC_kwDOBhBG1s5Oa8wG","user":{"login":"shanedell","id":32347414,"node_id":"MDQ6VXNlcjMyMzQ3NDE0","avatar_url":"https://avatars.githubusercontent.com/u/32347414?v=4","gravatar_id":"","url":"https://api.github.com/users/shanedell","html_url":"https://github.com/shanedell","followers_url":"https://api.github.com/users/shanedell/followers","following_url":"https://api.github.com/users/shanedell/following{/other_user}","gists_url":"https://api.github.com/users/shanedell/gists{/gist_id}","starred_url":"https://api.github.com/users/shanedell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shanedell/subscriptions","organizations_url":"https://api.github.com/users/shanedell/orgs","repos_url":"https://api.github.com/users/shanedell/repos","events_url":"https://api.github.com/users/shanedell/events{/privacy}","received_events_url":"https://api.github.com/users/shanedell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-15T18:07:52Z","updated_at":"2022-11-15T18:07:52Z","author_association":"CONTRIBUTOR","body":"@tuxji Your comment makes a lot of sense to me thank you. Also with the Integration tests, is there a way I can run a single test or suite tests at a time instead of all them at once? This would just be to be to test fixes for them timing out.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1315687430/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1315701521","html_url":"https://github.com/apache/daffodil/pull/875#issuecomment-1315701521","issue_url":"https://api.github.com/repos/apache/daffodil/issues/875","id":1315701521,"node_id":"IC_kwDOBhBG1s5ObAMR","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-15T18:21:39Z","updated_at":"2022-11-15T18:21:39Z","author_association":"MEMBER","body":"> is there a way I can run a single test or suite tests at a time instead of all them at once? This would just be to be to test fixes for them timing out.\r\n\r\nThis is what I do using the sbt console:\r\n```bash\r\n$ sbt\r\nsbt:daffodil> daffodil-cli/IntegrationTest/testOnly org.apache.daffodil.foo.TestSuite -- --tests=test_name_of_test\r\n```\r\nLeave off the `-- --tests=...` to run all tests in a suite.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1315701521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1315862259","html_url":"https://github.com/apache/daffodil/pull/875#issuecomment-1315862259","issue_url":"https://api.github.com/repos/apache/daffodil/issues/875","id":1315862259,"node_id":"IC_kwDOBhBG1s5Obnbz","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-15T21:04:57Z","updated_at":"2022-11-15T21:04:57Z","author_association":"CONTRIBUTOR","body":"I put the instructions for running just one test on a wiki page, since I had always forgotten it by the time I needed it again.\r\n\r\nhttps://cwiki.apache.org/confluence/display/DAFFODIL/sbt+Tips+and+Tricks\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1315862259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1316073460","html_url":"https://github.com/apache/daffodil/pull/875#issuecomment-1316073460","issue_url":"https://api.github.com/repos/apache/daffodil/issues/875","id":1316073460,"node_id":"IC_kwDOBhBG1s5Oca_0","user":{"login":"shanedell","id":32347414,"node_id":"MDQ6VXNlcjMyMzQ3NDE0","avatar_url":"https://avatars.githubusercontent.com/u/32347414?v=4","gravatar_id":"","url":"https://api.github.com/users/shanedell","html_url":"https://github.com/shanedell","followers_url":"https://api.github.com/users/shanedell/followers","following_url":"https://api.github.com/users/shanedell/following{/other_user}","gists_url":"https://api.github.com/users/shanedell/gists{/gist_id}","starred_url":"https://api.github.com/users/shanedell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shanedell/subscriptions","organizations_url":"https://api.github.com/users/shanedell/orgs","repos_url":"https://api.github.com/users/shanedell/repos","events_url":"https://api.github.com/users/shanedell/events{/privacy}","received_events_url":"https://api.github.com/users/shanedell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-16T00:21:50Z","updated_at":"2022-11-16T00:21:50Z","author_association":"CONTRIBUTOR","body":"@stevedlawrence @mbeckerle @tuxji This should be good for another good look over as I fixed the issue that was causing issues with integration tests.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1316073460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1319162266","html_url":"https://github.com/apache/daffodil/pull/873#issuecomment-1319162266","issue_url":"https://api.github.com/repos/apache/daffodil/issues/873","id":1319162266,"node_id":"IC_kwDOBhBG1s5OoNGa","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-17T20:26:58Z","updated_at":"2022-11-17T20:26:58Z","author_association":"MEMBER","body":"I believe I've addressed all comments. Just need another +1","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1319162266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1319191429","html_url":"https://github.com/apache/daffodil/pull/873#issuecomment-1319191429","issue_url":"https://api.github.com/repos/apache/daffodil/issues/873","id":1319191429,"node_id":"IC_kwDOBhBG1s5OoUOF","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-17T20:57:02Z","updated_at":"2022-11-17T20:57:02Z","author_association":"CONTRIBUTOR","body":"> I believe I've addressed all comments. Just need another +1\r\n\r\nYes, you've addressed all comments and the changes look good.  I already gave my +1, someone else please review too.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1319191429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1320377951","html_url":"https://github.com/apache/daffodil/pull/877#issuecomment-1320377951","issue_url":"https://api.github.com/repos/apache/daffodil/issues/877","id":1320377951,"node_id":"IC_kwDOBhBG1s5Os15f","user":{"login":"shanedell","id":32347414,"node_id":"MDQ6VXNlcjMyMzQ3NDE0","avatar_url":"https://avatars.githubusercontent.com/u/32347414?v=4","gravatar_id":"","url":"https://api.github.com/users/shanedell","html_url":"https://github.com/shanedell","followers_url":"https://api.github.com/users/shanedell/followers","following_url":"https://api.github.com/users/shanedell/following{/other_user}","gists_url":"https://api.github.com/users/shanedell/gists{/gist_id}","starred_url":"https://api.github.com/users/shanedell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shanedell/subscriptions","organizations_url":"https://api.github.com/users/shanedell/orgs","repos_url":"https://api.github.com/users/shanedell/repos","events_url":"https://api.github.com/users/shanedell/events{/privacy}","received_events_url":"https://api.github.com/users/shanedell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-18T18:21:23Z","updated_at":"2022-11-18T18:22:19Z","author_association":"CONTRIBUTOR","body":"@tuxji @stevedlawrence These changes should removing the deprecated items that were inside of `Compiler.scala` and then traversed over another couple of files that were mentioned in the email thread https://lists.apache.org/thread/fnwc5vqytnl4brjztvwwk76vst34lskn.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1320377951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1320499306","html_url":"https://github.com/apache/daffodil/pull/879#issuecomment-1320499306","issue_url":"https://api.github.com/repos/apache/daffodil/issues/879","id":1320499306,"node_id":"IC_kwDOBhBG1s5OtThq","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-18T20:37:38Z","updated_at":"2022-11-18T20:37:38Z","author_association":"MEMBER","body":"Note that PR #873 needs to be merged before we can really get accurate numbers about how much this improves things.\r\n\r\nI think there is still alot of overhead related to the threads need to connect the SAX push-style API with our Daffodil unparse pull-style API, but this seems to have reduced it so unparse is a bit closer to other infoset inputters.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1320499306/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1320566001","html_url":"https://github.com/apache/daffodil/pull/878#issuecomment-1320566001","issue_url":"https://api.github.com/repos/apache/daffodil/issues/878","id":1320566001,"node_id":"IC_kwDOBhBG1s5Otjzx","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-18T21:50:41Z","updated_at":"2022-11-18T21:50:41Z","author_association":"CONTRIBUTOR","body":"> I'm sure people will try to encode an EXI file and decode an XML file the wrong way around and they should see an appropriate error message.\r\n\r\nI remember Mike commented in the JIRA issue that XML and EXI files look so different that we might not even need a `--decode` option.  It may be more work to implement but it might be nice to have file type recognition rather than `-d`.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1320566001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1329222907","html_url":"https://github.com/apache/daffodil/pull/880#issuecomment-1329222907","issue_url":"https://api.github.com/repos/apache/daffodil/issues/880","id":1329222907,"node_id":"IC_kwDOBhBG1s5POlT7","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T14:39:52Z","updated_at":"2022-11-28T14:39:52Z","author_association":"MEMBER","body":"Upgrading to F37 fails to build the windows MSI installer with an error about unable to find iconv.dll. I've found that if I run `dnf upgrade wine` when building the container it fixes the issue. Seems Fedora 37 release ships with wine-7.12, and running the upgrade command updates to 7.20.\r\n\r\nHowever, I'm hesitant to add the dnf upgrade command to the Dockerfile since it makes reproducibility difficult--every time we build a container we could get a newer version of wine. And wine is probably the one package we have the most issues with. Upgrades seem to frequently break things.\r\n\r\nWe could maybe pin to 7.20 with something like `dnf install wine-7.20`, and as long as F37 doesn't remove it from the `updates` repo we should be fine? Or we could just stick with F36 and close this PR...","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1329222907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1329287775","html_url":"https://github.com/apache/daffodil/pull/880#issuecomment-1329287775","issue_url":"https://api.github.com/repos/apache/daffodil/issues/880","id":1329287775,"node_id":"IC_kwDOBhBG1s5PO1Jf","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-28T15:21:57Z","updated_at":"2022-11-28T15:21:57Z","author_association":"CONTRIBUTOR","body":"Either choice sounds fine.  Another possible choice would be to switch to a different base Docker image which changes less frequently (assuming its license allows us to use it in our Apache infrastructure).  Choices include Debian stable, Ubuntu LTS, and more.  The Ubuntu LTS image on Docker Hub actually rolls up security patches into the base image periodically, but the patches are supposed to maintain package/API compatibility to some degree (see <https://askubuntu.com/questions/1062198/ubuntu-lts-stability>, <https://wiki.ubuntu.com/StableReleaseUpdates>, <https://ubuntu.com/security/docker-images>).","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1329287775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1331009938","html_url":"https://github.com/apache/daffodil/pull/878#issuecomment-1331009938","issue_url":"https://api.github.com/repos/apache/daffodil/issues/878","id":1331009938,"node_id":"IC_kwDOBhBG1s5PVZmS","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-29T17:20:23Z","updated_at":"2022-11-29T17:20:23Z","author_association":"CONTRIBUTOR","body":"All issues should be addressed, including errors that were being seen on Windows CI machines. @tuxji just need your approval as I removed the expectEOF function.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1331009938/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1331224033","html_url":"https://github.com/apache/daffodil/pull/879#issuecomment-1331224033","issue_url":"https://api.github.com/repos/apache/daffodil/issues/879","id":1331224033,"node_id":"IC_kwDOBhBG1s5PWN3h","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-29T19:57:53Z","updated_at":"2022-11-29T19:57:53Z","author_association":"MEMBER","body":"> Can this be set small enough as to enforce sequential behavior, i.e., no parallelism between the caller of the content handler and the unparser?\r\n\r\nWith this approach, no. Even with the batch size tunable is set to 1, the ContentHandler and SAXInfosetInputter can (and likely will) both do work a the same time. The ContentHandler will be preparing the next event while the SAXInfosetInputter is unparsing using the current event.\r\n\r\n> To reduce overhead, we need to enqueue many events before context switching and allowing the unparser to run. Arguably, we should just queue up events to some max count, or until we get endDocument. For small messages we would then get exactly one context switch per message.\r\n\r\nSome of the changes here weren't specific to the ArrayBlockingQueue approach (e.g. thread pool reuse, split() removal). I can apply them to the current coroutine approach and see how it compares. These changes definitely had a big speed up, but I'm not sure which individual changes had the biggest effect.\r\n\r\n> I continue to be of the opinion that overlap parallelism here is not an advantage. It just muddies the waters about timing and overhead of unparsing.\r\n\r\nI think one potential advantage of this parallel approach is if the incoming sax events are sporadic or relatively slow (e.g. serialized over a network/diode). With the coroutine approach, we won't attempt to do any unparsing until we get a full batch of events (or we reach the endDoc event). And if the batch size is set to something large to avoid context switching, it might mean a lot of waiting doing nothing until we get those events. With this parallel approach, we can at least start unparsing immediately and do work in the time waiting for those SAX events. Though, I'm not sure how likely that is with SAX so maybe it's not worth really considering. And maybe if that is the case, tuning the batch size to a small number is the right approach.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1331224033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1331234450","html_url":"https://github.com/apache/daffodil/pull/879#issuecomment-1331234450","issue_url":"https://api.github.com/repos/apache/daffodil/issues/879","id":1331234450,"node_id":"IC_kwDOBhBG1s5PWQaS","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-29T20:07:05Z","updated_at":"2022-11-29T20:07:05Z","author_association":"CONTRIBUTOR","body":"\r\n> I think one potential advantage of this parallel approach is if the incoming sax events are sporadic or relatively slow (e.g. serialized over a network/diode). With the coroutine approach, we won't attempt to do any unparsing until we get a full batch of events (or we reach the endDoc event). And if the batch size is set to something large to avoid context switching, it might mean a lot of waiting doing nothing until we get those events. \r\n\r\nWhile some applications (large data streaming) may be able to benefit from this, I know of at least one Daffodil cyberian implementation where the XML will be presented to Daffodil all at once, as a single buffer of XML data, to be unparsed.  In that case, any context switching is effectively just added overhead unless there are idle CPUs and idle memory bandwidth on the system (which I consider unlikely). ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1331234450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1341385983","html_url":"https://github.com/apache/daffodil/pull/886#issuecomment-1341385983","issue_url":"https://api.github.com/repos/apache/daffodil/issues/886","id":1341385983,"node_id":"IC_kwDOBhBG1s5P8-z_","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-07T18:21:52Z","updated_at":"2022-12-07T18:21:52Z","author_association":"CONTRIBUTOR","body":"Rebased and updated pull request, now needs a second reviewer.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1341385983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1341565694","html_url":"https://github.com/apache/daffodil/pull/886#issuecomment-1341565694","issue_url":"https://api.github.com/repos/apache/daffodil/issues/886","id":1341565694,"node_id":"IC_kwDOBhBG1s5P9qr-","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-07T20:38:55Z","updated_at":"2022-12-07T20:38:55Z","author_association":"CONTRIBUTOR","body":"I've removed all mentions/uses of `externalVars` in DataProcessor and restored `copy`'s original formatting.  I'm letting CI run the tests for me; if they pass, then this pull request is ready for a second reviewer to review it.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1341565694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1341772598","html_url":"https://github.com/apache/daffodil/pull/886#issuecomment-1341772598","issue_url":"https://api.github.com/repos/apache/daffodil/issues/886","id":1341772598,"node_id":"IC_kwDOBhBG1s5P-dM2","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-07T23:59:14Z","updated_at":"2022-12-07T23:59:14Z","author_association":"CONTRIBUTOR","body":"When you restore a saved compiled schema, you should get the initial values of any DFDL external variables, regardless of whether they had any values set before the schema was pre-compiled. \r\n\r\nSaving the parser does NOT lock-down/freeze or even utilize any variable values.  Saving the parser is supposed to be transparent, i.e., only faster, than using the uncompiled schema. \r\n\r\nFor example, expressions that refer to variables, even if the variable has been externally set, cannot be constant-folded by the schema compiler to remove the variable reference. Rather, any attempt to reference a variable at schema compile time causes the expression folding to stop. \r\n\r\nThere are, however, some tunables you can set which only affect schema compilation. Those are only used by the schema compiler so clearly one cannot subsequently modify them after restoring a saved processor. (You can, but it won't do anything because the compilation is already over. )  Example of this is a tunable to suppress a particular compile-time warning, or to specify a particular interpretation  (UnqualifiedPathStepPolicy is an example.) ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1341772598/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1353482021","html_url":"https://github.com/apache/daffodil/pull/894#issuecomment-1353482021","issue_url":"https://api.github.com/repos/apache/daffodil/issues/894","id":1353482021,"node_id":"IC_kwDOBhBG1s5QrH8l","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-15T17:49:21Z","updated_at":"2022-12-15T17:49:21Z","author_association":"CONTRIBUTOR","body":"I'm going to disregard the macos spurious check failure. That's not due to this fix certainly. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1353482021/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1357673944","html_url":"https://github.com/apache/daffodil/pull/896#issuecomment-1357673944","issue_url":"https://api.github.com/repos/apache/daffodil/issues/896","id":1357673944,"node_id":"IC_kwDOBhBG1s5Q7HXY","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-19T13:29:53Z","updated_at":"2022-12-19T13:29:53Z","author_association":"MEMBER","body":"> There is still an issue with one of the tests causing a stack trace from an IllegalArgumentException to be printed\r\n\r\nI did a little digging, and I think I found the cause. For reference, here's the stack trace:\r\n\r\n```\r\njava.lang.IllegalArgumentException\r\n  | => dat java.lang.AbstractStringBuilder.appendCodePoint(AbstractStringBuilder.java:800)\r\n        at java.lang.StringBuilder.appendCodePoint(StringBuilder.java:240)\r\n\tat com.siemens.ct.exi.core.io.channel.AbstractDecoderChannel.decodeStringOnlySupplementaryCodePoints(AbstractDecoderChannel.java:111)\r\n\tat com.siemens.ct.exi.core.io.channel.AbstractDecoderChannel.decodeStringOnly(AbstractDecoderChannel.java:89)\r\n\tat com.siemens.ct.exi.core.coder.AbstractEXIBodyDecoder.decodeLocalName(AbstractEXIBodyDecoder.java:170)\r\n\tat com.siemens.ct.exi.core.coder.AbstractEXIBodyDecoder.decodeQName(AbstractEXIBodyDecoder.java:133)\r\n\tat com.siemens.ct.exi.core.coder.AbstractEXIBodyDecoder.decodeStartElementGenericStructure(AbstractEXIBodyDecoder.java:484)\r\n\tat com.siemens.ct.exi.core.coder.EXIBodyDecoderInOrder.decodeStartElement(EXIBodyDecoderInOrder.java:126)\r\n\tat com.siemens.ct.exi.main.api.sax.SAXDecoder.parseEXIEvents(SAXDecoder.java:313)\r\n\tat com.siemens.ct.exi.main.api.sax.SAXDecoder.parse(SAXDecoder.java:250)\r\n\tat net.sf.saxon.resource.ActiveSAXSource.deliver(ActiveSAXSource.java:190)\r\n\tat net.sf.saxon.event.Sender.send(Sender.java:105)\r\n\tat net.sf.saxon.jaxp.IdentityTransformer.transform(IdentityTransformer.java:364)\r\n\tat org.apache.daffodil.Main$.runIgnoreExceptions(Main.scala:1307)\r\n\tat org.apache.daffodil.Main$.run(Main.scala:1433)\r\n\tat org.apache.daffodil.CLI.Util$CLIThread.run(Util.scala:281)\r\n```\r\n\r\nThe issue is that `appendCodePoint` can throw an IllegalArgumentException if the code point isn't valid unicode (this isn't really documented except for the fact that it is \"exactly like Characters.toChars\" which does document throwing this exception). Exificient doesn't catch this, so if this happens it bubbles all the way up to the `deliver` function in Saxon and is finally caught (and printed) here:\r\n\r\nhttps://saxonica.plan.io/projects/saxonmirrorhe/repository/he/entry/src/main/java/net/sf/saxon/resource/ActiveSAXSource.java?utf8=%E2%9C%93&rev=he_mirror_saxon_11_4#L233\r\n\r\nLooking at the latest dev branch of Saxon, this call to printStrackTrace has been removed, but still exists in the 11.4 release we use. So this will likely be fixed in the next version of Saxon. However, I *think* this is a bug in Exificient since it shouldn't throw an IllegalArgumentException, but should probably validate the codepoint and throw a SAX exception instead?\r\n\r\nDoes this sound right? Maybe we should open a ticket with efficient?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1357673944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1357802991","html_url":"https://github.com/apache/daffodil/pull/896#issuecomment-1357802991","issue_url":"https://api.github.com/repos/apache/daffodil/issues/896","id":1357802991,"node_id":"IC_kwDOBhBG1s5Q7m3v","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-19T15:04:46Z","updated_at":"2022-12-19T15:04:46Z","author_association":"CONTRIBUTOR","body":"Ah, I had stopped digging through the stack trace after the Exificient code and had assumed that something was just holding onto the stacktrace and printing it out from a different context or something.  Didn't think it would be Saxon actually printing it out directly to stderr.  Glad to see that there is a fix for it in Saxon.\r\n\r\nI'll add a bug to Exificient recommending that they catch this exception and throw it as some other exception type (likely going to be an EXIException if I had to guess).","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1357802991/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1357812866","html_url":"https://github.com/apache/daffodil/pull/896#issuecomment-1357812866","issue_url":"https://api.github.com/repos/apache/daffodil/issues/896","id":1357812866,"node_id":"IC_kwDOBhBG1s5Q7pSC","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-19T15:10:19Z","updated_at":"2022-12-19T15:10:19Z","author_association":"MEMBER","body":"In fact, now that I think about it, that's probably also the reason why we need this code:\r\n\r\nhttps://github.com/apache/daffodil/blob/main/daffodil-cli/src/main/scala/org/apache/daffodil/Main.scala#L1306-L1312\r\n\r\nSo what we thought was a generic exception was more likely an exificient bug.\r\n\r\nOnce Exifcient fixes this issue, we can change that from catching an Exception to whatever SAX exception they end up throwing.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1357812866/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1357982000","html_url":"https://github.com/apache/daffodil/pull/896#issuecomment-1357982000","issue_url":"https://api.github.com/repos/apache/daffodil/issues/896","id":1357982000,"node_id":"IC_kwDOBhBG1s5Q8Skw","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-19T17:13:20Z","updated_at":"2022-12-19T17:13:20Z","author_association":"CONTRIBUTOR","body":"Suggest: If you have a ticket URL for Exificient you could cite that in the comment just before the catch of e:Exception. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1357982000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1360078279","html_url":"https://github.com/apache/daffodil/pull/897#issuecomment-1360078279","issue_url":"https://api.github.com/repos/apache/daffodil/issues/897","id":1360078279,"node_id":"IC_kwDOBhBG1s5RESXH","user":{"login":"shanedell","id":32347414,"node_id":"MDQ6VXNlcjMyMzQ3NDE0","avatar_url":"https://avatars.githubusercontent.com/u/32347414?v=4","gravatar_id":"","url":"https://api.github.com/users/shanedell","html_url":"https://github.com/shanedell","followers_url":"https://api.github.com/users/shanedell/followers","following_url":"https://api.github.com/users/shanedell/following{/other_user}","gists_url":"https://api.github.com/users/shanedell/gists{/gist_id}","starred_url":"https://api.github.com/users/shanedell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shanedell/subscriptions","organizations_url":"https://api.github.com/users/shanedell/orgs","repos_url":"https://api.github.com/users/shanedell/repos","events_url":"https://api.github.com/users/shanedell/events{/privacy}","received_events_url":"https://api.github.com/users/shanedell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-20T19:54:31Z","updated_at":"2022-12-20T19:56:46Z","author_association":"CONTRIBUTOR","body":"@stevedlawrence I like @tuxji 's suggestion to use [github-wikito-converter](https://github.com/yakivmospan/github-wikito-converter). It works pretty well and makes one page. But when trying it with pdf it seems to not work right but it works for html properly, do we want to use that instead or what do you think?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1360078279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1360086063","html_url":"https://github.com/apache/daffodil/pull/897#issuecomment-1360086063","issue_url":"https://api.github.com/repos/apache/daffodil/issues/897","id":1360086063,"node_id":"IC_kwDOBhBG1s5REUQv","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-20T20:01:56Z","updated_at":"2022-12-20T20:01:56Z","author_association":"MEMBER","body":"I have no strong preference. I didn't come up with this requirement so I don't really know what the goal here is. Personally, if I wanted offline documentation I'd probably prefer a PDF, but I don't think I'll really use this (github wiki is fine for me) so don't let me sway the decision.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1360086063/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1362895816","html_url":"https://github.com/apache/daffodil/pull/899#issuecomment-1362895816","issue_url":"https://api.github.com/repos/apache/daffodil/issues/899","id":1362895816,"node_id":"IC_kwDOBhBG1s5RPCPI","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-22T14:20:32Z","updated_at":"2022-12-22T14:20:32Z","author_association":"CONTRIBUTOR","body":"There may be other areas where repElement should be used in this code, but this definitely fixes the alignment issues that Mike B was seeing.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1362895816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1364344043","html_url":"https://github.com/apache/daffodil/pull/900#issuecomment-1364344043","issue_url":"https://api.github.com/repos/apache/daffodil/issues/900","id":1364344043,"node_id":"IC_kwDOBhBG1s5RUjzr","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-23T21:24:10Z","updated_at":"2022-12-23T21:24:10Z","author_association":"CONTRIBUTOR","body":"Ready for review now. \r\nWorks for textNumberRep standard and zoned. Has tests for both. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1364344043/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1366130809","html_url":"https://github.com/apache/daffodil/pull/898#issuecomment-1366130809","issue_url":"https://api.github.com/repos/apache/daffodil/issues/898","id":1366130809,"node_id":"IC_kwDOBhBG1s5RbYB5","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-27T19:38:51Z","updated_at":"2022-12-27T19:40:25Z","author_association":"CONTRIBUTOR","body":"I just noticed that this PR needs to be merged by a Daffodil committer.  I confirm that all PR comments have been resolved, the PR has over 2 approvals, @mike-mcgann has squashed the PR to one commit, and all tests have passed successfully.  ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1366130809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1366157588","html_url":"https://github.com/apache/daffodil/pull/880#issuecomment-1366157588","issue_url":"https://api.github.com/repos/apache/daffodil/issues/880","id":1366157588,"node_id":"IC_kwDOBhBG1s5RbekU","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-27T20:23:25Z","updated_at":"2022-12-27T20:23:25Z","author_association":"CONTRIBUTOR","body":"I think these 2 are our best choices:\r\n\r\n1. Bump the Dockerfile to Fedora 37 even though we would have to install `wine-7.20` instead of `wine` and undo that change after the next bump to Fedora 38.  Pro: less work with no risk of updating wine version.  Con: more maintenance needed 6 months from now.\r\n2. Base the Dockerfile on Ubuntu LTS and install Ubuntu packages instead of Fedora packages with the assumption that Ubuntu will not bump wine between LTS bumps.  Pro: Dockerfile might need no changes for 2 years.  Con: Ubuntu might bump wine anyway as part of LTS security patches.\r\n\r\nChoice 1 seems lower risk but requires manual testing every 6 months.  Choice 2 seems lower maintenance after initial changes, but assumption of no wine bumps for 2 years may become false due to periodic rollup of LTS security patches into image.  I still suggest choice 2 is worth trying anyway.\r\n\r\nPlease vote for your choice.  ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1366157588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1366160229","html_url":"https://github.com/apache/daffodil/pull/879#issuecomment-1366160229","issue_url":"https://api.github.com/repos/apache/daffodil/issues/879","id":1366160229,"node_id":"IC_kwDOBhBG1s5RbfNl","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-27T20:30:12Z","updated_at":"2022-12-27T20:30:12Z","author_association":"CONTRIBUTOR","body":"This PR has received 2 approvals and passed all CI checks but now has a conflicting file.  @stevedlawrence, please resolve the conflict and merge the PR or rework/close the PR if you don't want to merge it in its current state.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1366160229/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1366712638","html_url":"https://github.com/apache/daffodil/pull/880#issuecomment-1366712638","issue_url":"https://api.github.com/repos/apache/daffodil/issues/880","id":1366712638,"node_id":"IC_kwDOBhBG1s5RdmE-","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-28T14:59:55Z","updated_at":"2022-12-28T14:59:55Z","author_association":"CONTRIBUTOR","body":"I would vote for stick with F36 and revisit when F38 is available. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1366712638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1366891150","html_url":"https://github.com/apache/daffodil/pull/897#issuecomment-1366891150","issue_url":"https://api.github.com/repos/apache/daffodil/issues/897","id":1366891150,"node_id":"IC_kwDOBhBG1s5ReRqO","user":{"login":"shanedell","id":32347414,"node_id":"MDQ6VXNlcjMyMzQ3NDE0","avatar_url":"https://avatars.githubusercontent.com/u/32347414?v=4","gravatar_id":"","url":"https://api.github.com/users/shanedell","html_url":"https://github.com/shanedell","followers_url":"https://api.github.com/users/shanedell/followers","following_url":"https://api.github.com/users/shanedell/following{/other_user}","gists_url":"https://api.github.com/users/shanedell/gists{/gist_id}","starred_url":"https://api.github.com/users/shanedell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shanedell/subscriptions","organizations_url":"https://api.github.com/users/shanedell/orgs","repos_url":"https://api.github.com/users/shanedell/repos","events_url":"https://api.github.com/users/shanedell/events{/privacy}","received_events_url":"https://api.github.com/users/shanedell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-28T20:09:39Z","updated_at":"2022-12-28T20:09:39Z","author_association":"CONTRIBUTOR","body":"@tuxji @mbeckerle @stevedlawrence Do you think it would be best to create a HTML and DOCX file? Then on the site have options under `Documentation` for `HTML | DOCX`? This way the user can view the single HTML page in their browser or download the DOCX file to view locally if they so desire?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1366891150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1366924917","html_url":"https://github.com/apache/daffodil/pull/897#issuecomment-1366924917","issue_url":"https://api.github.com/repos/apache/daffodil/issues/897","id":1366924917,"node_id":"IC_kwDOBhBG1s5ReZ51","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-28T21:27:26Z","updated_at":"2022-12-28T21:27:26Z","author_association":"CONTRIBUTOR","body":"> Do you think it would be best to create a HTML and DOCX file? \r\n\r\nThat is fine with me, especially if the docx file has better formatting in case someone wants to print the guide on paper.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1366924917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1367542419","html_url":"https://github.com/apache/daffodil/pull/900#issuecomment-1367542419","issue_url":"https://api.github.com/repos/apache/daffodil/issues/900","id":1367542419,"node_id":"IC_kwDOBhBG1s5RgwqT","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-29T19:38:26Z","updated_at":"2022-12-29T19:38:26Z","author_association":"CONTRIBUTOR","body":"DAFFODIL-853 says both V and P symbols need support, but this pull request adds support for only V.  Are you planning to make DAFFODIL-853 just about V and create a new issue for P, or what?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1367542419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1368009944","html_url":"https://github.com/apache/daffodil/pull/821#issuecomment-1368009944","issue_url":"https://api.github.com/repos/apache/daffodil/issues/821","id":1368009944,"node_id":"IC_kwDOBhBG1s5RiizY","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-12-30T16:55:25Z","updated_at":"2022-12-30T16:55:25Z","author_association":"CONTRIBUTOR","body":"We need to update this pull request's title and description since they no longer match what this pull request actually does.  We collectively decided not to create a tunable XMLOutputStyle, only pass an enum XMLTextEscapeStyle as a new constructor parameter to XMLTextInfosetOutputter.  We decided not to address the question how to let a CLI option change infoset outputter settings in this pull request, even though this pull request's issue, [DAFFODIL-2346](https://issues.apache.org/jira/browse/DAFFODIL-2346), originally requested a CLI option to use <!CDATA[]]> to preserve whitespace in XML infosets' simple elements' text content.\r\n\r\nNote that another issue, [DAFFODIL-2234](https://issues.apache.org/jira/browse/DAFFODIL-2234), also wants a CLI option to not pretty print XML or JSON infosets.  We already pass a boolean \"pretty\" as a constructor parameter to XMLTextInfosetOutputter, but we don't have any way for the CLI to change this constructor parameter's value from true to false in the places where the codebase passes true.\r\n\r\nIf we still punt the question of how to let the CLI, or TDML Runner, change infoset outputter settings to DAFFODIL-2234 instead of this pull request, then I suggest we edit this pull request's new title and description to:\r\n\r\n```text\r\nAllow <!CDATA[]]> to preserve whitespace in XML text content\r\n\r\nAdd a new constructor parameter (an enum XMLTextEscapeStyle with Standard and CDATA values) to XMLTextInfosetOutputter.  When CDATA is passed instead of the default Standard, wrap simple XML elements' text content in CDATA brackets to preserve any whitespace they contain.\r\n\r\nDAFFODIL-2346\r\n```\r\n\r\nAlso, I think we should consider adding new XMLTextInfosetOutputter methods which can change infoset outputter settings using \"withXXX\" calls instead of changing them in constructor parameters.  Calling \"withXXX\" methods is a more upward compatible and extensible mechanism to change objects' settings since we can simply add new \"withXXX\" methods in the future.  A \"withXXX\" method can also eliminate the need to pass a boolean or enum value since the \"withXXX\" method's name can describe the new setting as well, such as \"withPrettyPrint\" or \"withCDATA\".","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1368009944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1369716275","html_url":"https://github.com/apache/daffodil/pull/879#issuecomment-1369716275","issue_url":"https://api.github.com/repos/apache/daffodil/issues/879","id":1369716275,"node_id":"IC_kwDOBhBG1s5RpDYz","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-03T12:32:28Z","updated_at":"2023-01-03T12:32:28Z","author_association":"MEMBER","body":"> please resolve the conflict and merge the PR or rework/close the PR if you don't want to merge it in its current state.\r\n\r\nBased on @mbeckerle's comment, I've done a bit more testing and profiling of each individual change in this PR and I think the removal of the coroutines are a bit slower. I'll update this PR once i get a better grasp of which changes really do help with performance and which don't. I'll convert this PR to a draft and update once it's ready.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1369716275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1369720594","html_url":"https://github.com/apache/daffodil/pull/880#issuecomment-1369720594","issue_url":"https://api.github.com/repos/apache/daffodil/issues/880","id":1369720594,"node_id":"IC_kwDOBhBG1s5RpEcS","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-03T12:37:33Z","updated_at":"2023-01-03T12:37:33Z","author_association":"MEMBER","body":"Yeah, I think I agree with Mike. I don't think there's a big benefit updating to F37. I'm not against switching to some other OS if it handles this issue better, but I think that should be done as a separate PR since i probably needs a decent amount of testing and confirming any assumptions. I'm going to close this PR.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1369720594/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1369720630","html_url":"https://github.com/apache/daffodil/pull/880#issuecomment-1369720630","issue_url":"https://api.github.com/repos/apache/daffodil/issues/880","id":1369720630,"node_id":"IC_kwDOBhBG1s5RpEc2","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2023-01-03T12:37:36Z","updated_at":"2023-01-03T12:37:36Z","author_association":"CONTRIBUTOR","body":"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1369720630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1369924332","html_url":"https://github.com/apache/daffodil/pull/897#issuecomment-1369924332","issue_url":"https://api.github.com/repos/apache/daffodil/issues/897","id":1369924332,"node_id":"IC_kwDOBhBG1s5Rp2Ls","user":{"login":"shanedell","id":32347414,"node_id":"MDQ6VXNlcjMyMzQ3NDE0","avatar_url":"https://avatars.githubusercontent.com/u/32347414?v=4","gravatar_id":"","url":"https://api.github.com/users/shanedell","html_url":"https://github.com/shanedell","followers_url":"https://api.github.com/users/shanedell/followers","following_url":"https://api.github.com/users/shanedell/following{/other_user}","gists_url":"https://api.github.com/users/shanedell/gists{/gist_id}","starred_url":"https://api.github.com/users/shanedell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shanedell/subscriptions","organizations_url":"https://api.github.com/users/shanedell/orgs","repos_url":"https://api.github.com/users/shanedell/repos","events_url":"https://api.github.com/users/shanedell/events{/privacy}","received_events_url":"https://api.github.com/users/shanedell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-03T15:47:50Z","updated_at":"2023-01-03T15:47:50Z","author_association":"CONTRIBUTOR","body":"@tuxji @mbeckerle Can you guys give this another look over before merging? I generating both HTML and DOCX, but I generate the HTML doc with `github-wikito-converter` as it creates a better html page than pandoc does.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1369924332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1370943689","html_url":"https://github.com/apache/daffodil/pull/821#issuecomment-1370943689","issue_url":"https://api.github.com/repos/apache/daffodil/issues/821","id":1370943689,"node_id":"IC_kwDOBhBG1s5RtvDJ","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-04T13:41:18Z","updated_at":"2023-01-04T13:41:18Z","author_association":"MEMBER","body":"Agreed one the new PR title and commit message.\r\n\r\nAlso agreed on new withXXX functions for setting parameters, that's a much cleaner API. I'd suggest we do that as a separate PR though.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1370943689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1373673833","html_url":"https://github.com/apache/daffodil/pull/879#issuecomment-1373673833","issue_url":"https://api.github.com/repos/apache/daffodil/issues/879","id":1373673833,"node_id":"IC_kwDOBhBG1s5R4Jlp","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-06T13:56:17Z","updated_at":"2023-01-06T13:56:17Z","author_association":"MEMBER","body":"I've updated this PR with just the changes that I've found makes a noticeable improvement. The biggest improvement is using a thread pool so we reuse our coroutine threads where possible, but the other three commits did make a slight improvement on average. I've also update the PR description.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1373673833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1373954062","html_url":"https://github.com/apache/daffodil/pull/879#issuecomment-1373954062","issue_url":"https://api.github.com/repos/apache/daffodil/issues/879","id":1373954062,"node_id":"IC_kwDOBhBG1s5R5OAO","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-06T17:50:57Z","updated_at":"2023-01-06T17:50:57Z","author_association":"CONTRIBUTOR","body":"I don't have access to my computer today, but I wanted to look this over.\n\nI don't understand at all why a thread pool should make any difference and\nif using a thread pool does matter it suggests we are doing something\nterribly wrong. We should create the coroutine thread exactly once.\n\n\n\nOn Fri, Jan 6, 2023, 12:36 PM John Interrante ***@***.***>\nwrote:\n\n> ***@***.**** commented on this pull request.\n> ------------------------------\n>\n> In daffodil-lib/src/main/scala/org/apache/daffodil/util/Coroutines.scala\n> <https://github.com/apache/daffodil/pull/879#discussion_r1063639451>:\n>\n> >   import scala.util.Failure\n>   import scala.util.Success\n>   import scala.util.Try\n>\n> + object Coroutine {\n> +   val executionContext = new ExecutionContext {\n> +     private val threadPool = Executors.newCachedThreadPool()\n> +     def execute(runnable: Runnable): Unit = threadPool.submit(runnable)\n>\n> I didn't know we add only 1 extra thread per SAX unparse call anyway,\n> which is only going to double the total number of threads, not increase the\n> number of threads exponentially. No, we don't need to allow callers to pass\n> in an execution context. I agree it's really on the users to limit their\n> calls if they use Daffodil as a server and make as many SAX unparse calls\n> as there are connections from client machines.\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/daffodil/pull/879#discussion_r1063639451>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AALUDA6XNMAO4BER2XDRU2TWRBJZ5ANCNFSM6AAAAAASE3OHII>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1373954062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1373987770","html_url":"https://github.com/apache/daffodil/pull/879#issuecomment-1373987770","issue_url":"https://api.github.com/repos/apache/daffodil/issues/879","id":1373987770,"node_id":"IC_kwDOBhBG1s5R5WO6","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-06T18:30:02Z","updated_at":"2023-01-06T18:30:02Z","author_association":"MEMBER","body":"> We should create the coroutine thread exactly once.\r\n\r\nEvery new instance of the DaffodilUnparseContentHandler is a new coroutine and so will create a new thread. This is needed since a user could different SAX unparse calls in parallel and so they would need mutiple DaffodilUnparseContentHandlers, each with their own thread.\r\n\r\nAnd in the CLI performance command, each call to unparse creates a new DaffodilUnparseContentHandler, and thus a each uparse will create a new thread.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1373987770/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1374005969","html_url":"https://github.com/apache/daffodil/pull/905#issuecomment-1374005969","issue_url":"https://api.github.com/repos/apache/daffodil/issues/905","id":1374005969,"node_id":"IC_kwDOBhBG1s5R5arR","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-06T18:52:38Z","updated_at":"2023-01-06T18:52:38Z","author_association":"MEMBER","body":"As I re-reviewed this, I got thinking that this may not completely solve the hanging thread problem (though I think this fix is still correct and needed).\r\n\r\nFor example, say we have an XMLReader parsing some XML and sending events to our DaffodilUnparseContentHandler, and assume it's sent a bunch of events and the coroutine stuff is doing it's thing with a separate thread. Then the XMLReader hits somthing that isn't valid and the *XMLReader* (not our ContentHandler) throws a SAXException. When this happens, it doesn't notify the ContentHandler in any way that it's not going to get anymore events. In our specific case, that means our coroutine thread is going to hang since it still things more threads are on the way.\r\n\r\nIn the generic case it means there's no way for a ContentHandler to know when to clean up state in an error case. It can't differentiate between \"more events sure are taking a long time to arrive\" vs \"no more events are ever coming\". Seems like a flaw in the SAX API...\r\n\r\nI guess we could have some function that users must call if the XMLReader throws an exception that would allow us to shutdown the coroutine thread. But I don't think there's any way to force a user to call that function, so it's not a great API...\r\n\r\nAny other thoughts?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1374005969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1374326315","html_url":"https://github.com/apache/daffodil/pull/879#issuecomment-1374326315","issue_url":"https://api.github.com/repos/apache/daffodil/issues/879","id":1374326315,"node_id":"IC_kwDOBhBG1s5R6o4r","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-07T01:09:35Z","updated_at":"2023-01-07T01:09:35Z","author_association":"CONTRIBUTOR","body":"\r\n> > Can this be set small enough as to enforce sequential behavior, i.e., no parallelism between the caller of the content handler and the unparser?\r\n> \r\n> With this approach, no. Even with the batch size tunable is set to 1, the ContentHandler and SAXInfosetInputter can (and likely will) both do work a the same time. The ContentHandler will be preparing the next event while the SAXInfosetInputter is unparsing using the current event.\r\n\r\nRe-studying this PR briefly. I thought that when an event was queued for the peer co-routine, the main thread then would read from the reply queue, hence blocking itself until the peer replies back to it. \r\n\r\nThat was the notion for how the two coroutines never overlap in doing work. \r\n\r\nIs it not functioning that way now? \r\n\r\nAs I have tried to emphasize before, the goal, in fact the whole point of coroutines, is that it is a \"call\" that includes changing stacks too, but there is NO parallelism any more than there is when you call a procedure. Coroutines are a means of doing an inversion-of-control from push-to-pull or vice versa, but are not supposed to have any thread-safety implications, so both main and peer coroutines may run non-thread-safe code (if they want to) because there is not any concurrency. \r\n\r\nFrom other things I have read online, it seems there is quite high overhead to Java thread switching. People have ventured opinions like the whole point of co-routines is lost if you have to use kernel interfaces to implement it. \r\n\r\nBut how else are you supposed to do this control inversion from push to pull without it? \r\n\r\nNote that once we get to Java 19, there is a new non-kernel threads thread system for Java which could reduce the context switching overhead substantially. \r\nhttps://blogs.oracle.com/javamagazine/post/java-loom-virtual-threads-platform-threads. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1374326315/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1375637505","html_url":"https://github.com/apache/daffodil/pull/879#issuecomment-1375637505","issue_url":"https://api.github.com/repos/apache/daffodil/issues/879","id":1375637505,"node_id":"IC_kwDOBhBG1s5R_pAB","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-09T13:36:51Z","updated_at":"2023-01-09T13:36:51Z","author_association":"MEMBER","body":"> I thought that when an event was queued for the peer co-routine, the main thread then would read from the reply queue, hence blocking itself until the peer replies back to it.\r\n>\r\n> That was the notion for how the two coroutines never overlap in doing work.\r\n>\r\n> Is it not functioning that way now?\r\n\r\nYou are correct, this is how our coroutine implementation works.\r\n\r\nBut because java doesn't support native coroutines, the non-main coroutine executes in a separate thread. So even though there is no real parallelism, we do still have to create threads. This PR attempts to reduce the overhead of creating those threads by reusing them from a thread pool.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1375637505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1375988232","html_url":"https://github.com/apache/daffodil/pull/907#issuecomment-1375988232","issue_url":"https://api.github.com/repos/apache/daffodil/issues/907","id":1375988232,"node_id":"IC_kwDOBhBG1s5SA-oI","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-09T17:25:06Z","updated_at":"2023-01-09T17:25:06Z","author_association":"CONTRIBUTOR","body":"Forgot to add the new tdml file I created when I did a git commit.  Should all pass now.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1375988232/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1376347699","html_url":"https://github.com/apache/daffodil/pull/905#issuecomment-1376347699","issue_url":"https://api.github.com/repos/apache/daffodil/issues/905","id":1376347699,"node_id":"IC_kwDOBhBG1s5SCWYz","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-09T21:30:33Z","updated_at":"2023-01-09T21:30:33Z","author_association":"CONTRIBUTOR","body":"I guess the assumption in the SAX API is that the handlers are stateless, or don't require a shutdown/reset call. One would like to not have to define APIs to accomodate statefulness and resources needing to be released, but which just discard objects. It's a garbage collected language after all. But alas, it seems this is not adequate, as GC cleanup does not release resources like threads. \r\n\r\nMy guess is we need to add a reset/cleanup method, and point out that if it isn't called, that the thread will leak.  In our own test rig/CLI we need to find a place to call this reset/shutdown. \r\n\r\nI suspect many applications are not going to care. I suspect they will not create many of these, and their lifetime will be the lifetime of the entire application/JVM. \r\n\r\nWhen we do message-streaming it is important for unparse to not construct new handlers (therefore threads) on every call to parse/unparse one message. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1376347699/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1377185948","html_url":"https://github.com/apache/daffodil/pull/905#issuecomment-1377185948","issue_url":"https://api.github.com/repos/apache/daffodil/issues/905","id":1377185948,"node_id":"IC_kwDOBhBG1s5SFjCc","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-10T12:25:24Z","updated_at":"2023-01-10T12:25:24Z","author_association":"MEMBER","body":"> I would suggest you add a new failing test in this pull request if it's easy to write the test and defer fixing the test to a future PR if it's hard to fix the test.\r\n\r\nIt's not really specific to mixed content, and I'm not sure how easy it will be to find a reproducable test. I'll create a new ticket for this issue (I think something like reset is probably the right approach as Mike suggests) and see about creating a reproducable test and a fix soon.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1377185948/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1379633083","html_url":"https://github.com/apache/daffodil/pull/909#issuecomment-1379633083","issue_url":"https://api.github.com/repos/apache/daffodil/issues/909","id":1379633083,"node_id":"IC_kwDOBhBG1s5SO4e7","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-11T23:57:20Z","updated_at":"2023-01-11T23:57:20Z","author_association":"CONTRIBUTOR","body":"Abandoning. Forgot to rebase on latest first. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1379633083/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1379644605","html_url":"https://github.com/apache/daffodil/pull/910#issuecomment-1379644605","issue_url":"https://api.github.com/repos/apache/daffodil/issues/910","id":1379644605,"node_id":"IC_kwDOBhBG1s5SO7S9","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-12T00:13:25Z","updated_at":"2023-01-12T00:13:25Z","author_association":"CONTRIBUTOR","body":"Abandoning. Fails 1 test. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1379644605/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1379683764","html_url":"https://github.com/apache/daffodil/pull/900#issuecomment-1379683764","issue_url":"https://api.github.com/repos/apache/daffodil/issues/900","id":1379683764,"node_id":"IC_kwDOBhBG1s5SPE20","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-12T01:12:30Z","updated_at":"2023-01-12T01:12:30Z","author_association":"CONTRIBUTOR","body":"Actually I blew it creating PR 910.\r\n\r\nThe PR with the additional fixes per this PR review is \r\nhttps://github.com/apache/daffodil/pull/911","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1379683764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1380785675","html_url":"https://github.com/apache/daffodil/pull/901#issuecomment-1380785675","issue_url":"https://api.github.com/repos/apache/daffodil/issues/901","id":1380785675,"node_id":"IC_kwDOBhBG1s5STR4L","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-12T17:52:59Z","updated_at":"2023-01-12T17:52:59Z","author_association":"CONTRIBUTOR","body":"Still waiting for second +1.  Need someone else to please review and approve.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1380785675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1380789375","html_url":"https://github.com/apache/daffodil/pull/901#issuecomment-1380789375","issue_url":"https://api.github.com/repos/apache/daffodil/issues/901","id":1380789375,"node_id":"IC_kwDOBhBG1s5STSx_","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-12T17:56:41Z","updated_at":"2023-01-12T17:56:41Z","author_association":"MEMBER","body":"Did you have any chance to look at https://github.com/apache/daffodil/pull/901#discussion_r1067276335 about the alignment issue? There might be an alternative approach that doesn't require making those private field public. As I think I about it more, I'm not even sure comparing those two fields is accurate--I think there might be edge cases where it fails.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1380789375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1381138414","html_url":"https://github.com/apache/daffodil/pull/901#issuecomment-1381138414","issue_url":"https://api.github.com/repos/apache/daffodil/issues/901","id":1381138414,"node_id":"IC_kwDOBhBG1s5SUn_u","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-13T00:15:35Z","updated_at":"2023-01-13T00:15:35Z","author_association":"CONTRIBUTOR","body":"I am still trying to get time to finish this review. I did start, but didn't get into the thick of it. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1381138414/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1382077210","html_url":"https://github.com/apache/daffodil/pull/901#issuecomment-1382077210","issue_url":"https://api.github.com/repos/apache/daffodil/issues/901","id":1382077210,"node_id":"IC_kwDOBhBG1s5SYNMa","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-13T16:18:59Z","updated_at":"2023-01-13T16:18:59Z","author_association":"CONTRIBUTOR","body":"> Did you have any chance to look at [#901 (comment)](https://github.com/apache/daffodil/pull/901#discussion_r1067276335) about the alignment issue? There might be an alternative approach that doesn't require making those private field public. As I think I about it more, I'm not even sure comparing those two fields is accurate--I think there might be edge cases where it fails.\r\n\r\nYes, I have seen edge cases where comparing those two fields fails (that's why I asked for a better approach).  However, I have inserted the following code in Runtime2CodeGenerator.generateCode and SeqCompCodeGenerator.seqCompGenerateCode, set a breakpoint on the \"val breakHere\" line, debugged TestPadTest.c_padtest_01, and the values of the elemIsKnownToBeAligned, elemAlignmentInBits, and elemShouldAddPadding always stayed the same for every gram object walked: every element was known to be aligned to 8 bits, didn't need padding, and I never saw a 32-bit alignment value on any element.  I even tried tailOption instead of headOption and still didn't see a 32-bit alignment value.\r\n\r\n```scala\r\n    val context = gram.context\r\n    val elem = context.enclosingElements.headOption.orNull\r\n    if (elem != null) {\r\n      val name = gram.name\r\n      val elemName = elem.namedQName.toString\r\n      val elemIsKnownToBeAligned = elem.isKnownToBeAligned\r\n      val elemAlignmentInBits = elem.alignmentValueInBits\r\n      val elemShouldAddPadding = elem.shouldAddPadding\r\n      val breakHere = elem.namedQName.toString\r\n    }\r\n```\r\n\r\nNevertheless, Daffodil still inserts 3 fill bytes after a 1-byte hexBinary element in the TestPadTest.s_padtest_01 and TestPadTest.c_padtest_01 cases so the empty sequence inside padhexbinary is definitely causing fill bytes to be inserted:\r\n\r\n```xml\r\n  <xs:complexType name=\"padhexbinary\">\r\n    <xs:sequence>\r\n      <!-- Store variable-length opaque bytes -->\r\n      <xs:element name=\"opaque\" type=\"xs:hexBinary\"\r\n                  dfdl:lengthKind=\"prefixed\"\r\n                  dfdl:lengthUnits=\"bytes\"\r\n                  dfdl:prefixLengthType=\"length\"/>\r\n      <!-- Pad \"padhexbinary\" to a multiple of 4 bytes -->\r\n      <xs:sequence dfdl:alignment=\"4\" dfdl:alignmentUnits=\"bytes\"/>\r\n    </xs:sequence>\r\n  </xs:complexType>\r\n```\r\n\r\nDaffodil's schema compiler can't generate any element for the empty sequence because it's empty, but the gram objects don't have alignment fields themselves, so that's why I'm having to compare those private endingAlignmentApprox and priorAlignmentApprox fields.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1382077210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1382229205","html_url":"https://github.com/apache/daffodil/pull/901#issuecomment-1382229205","issue_url":"https://api.github.com/repos/apache/daffodil/issues/901","id":1382229205,"node_id":"IC_kwDOBhBG1s5SYyTV","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-13T18:29:54Z","updated_at":"2023-01-13T18:29:54Z","author_association":"MEMBER","body":"I think I've potentially tracked down part of the issue. In `elementParseAndUnspecifiedLengthGenerateCode`, we have this logic for complex types:\r\n```\r\n      context.elementChildren.foreach { child =>\r\n        cgState.addFieldDeclaration(context, child) // struct member for child\r\n        cgState.addComputations(child) // offset, ERD computations\r\n        cgState.addPerChildStatements(child) // initERD, parseSelf, unparseSelf for child\r\n      }\r\n```\r\nSo this is iterating over each child of the complex type. But that only includes actual element children, and so it skips over any other children (like the sequence) that are part of the content of the complex type.\r\n\r\nI'm not exactly sure how to fix this since I'm not too familiar with the code generator, but it feels like in this complex case, you instead want do something like `Runtime2CodeGenerator.generateCode(elementContentGram, cgState)` to recurse into the content gram of the complex element. This should recursively walk into the children to generate their individual parse/unparse code instead of doing it all in this loop.\r\n\r\nNote that if you do this, then I think you'll actually start to walk into AlignmentFill grammars. Then you won't even need to check for `isKnownToBeAligned` because Daffodil has already done it and optimized out any AlignmentFill grammars where alignment is known. So if if your code generator ever walks to this grammar then you just generate the right `parse_align` and `unparse_align` string.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1382229205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1384126319","html_url":"https://github.com/apache/daffodil/pull/914#issuecomment-1384126319","issue_url":"https://api.github.com/repos/apache/daffodil/issues/914","id":1384126319,"node_id":"IC_kwDOBhBG1s5SgBdv","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-16T14:13:39Z","updated_at":"2023-01-16T14:13:39Z","author_association":"CONTRIBUTOR","body":"We have some failing unit tests from the Java 8 CI jobs with this error message:\r\n\r\n```log\r\n[error] Test org.apache.daffodil.validation.schematron.TestSpiLoading.load failed: java.lang.UnsupportedClassVersionError: net/sf/saxon/TransformerFactoryImpl has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0, took 0.405 sec\r\n```\r\n\r\nSaxon-HE 12 contains class files targeting Java 11 despite the latest releases [page](https://www.saxonica.com/products/latest.xml) saying SaxonJ 12 is built and tested using Java 11 but should still be usable with Java 8 or later.  I have sent an email to support@saxonica.com to report the issue.  We will close this PR and wait for a newer release to come out.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1384126319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1385400982","html_url":"https://github.com/apache/daffodil/pull/821#issuecomment-1385400982","issue_url":"https://api.github.com/repos/apache/daffodil/issues/821","id":1385400982,"node_id":"IC_kwDOBhBG1s5Sk4qW","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-17T13:09:32Z","updated_at":"2023-01-17T13:09:32Z","author_association":"CONTRIBUTOR","body":"Feature that can allow for this parameterizing of the infoset outputters is in https://github.com/apache/daffodil/pull/912","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1385400982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1387239652","html_url":"https://github.com/apache/daffodil/pull/917#issuecomment-1387239652","issue_url":"https://api.github.com/repos/apache/daffodil/issues/917","id":1387239652,"node_id":"IC_kwDOBhBG1s5Sr5jk","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-18T15:17:34Z","updated_at":"2023-01-18T15:17:34Z","author_association":"CONTRIBUTOR","body":"Small change and really surprised we didn't have any existing tests that checked for this error situation where we attempt to use an invalid value for an enumeration.  I checked against the dfdl-regression test suite and it seems that pretty much everything passes.  I believe there may be a couple tests in P8 that need updating to not check for \"keyset-value\" anymore.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1387239652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1396197678","html_url":"https://github.com/apache/daffodil/pull/917#issuecomment-1396197678","issue_url":"https://api.github.com/repos/apache/daffodil/issues/917","id":1396197678,"node_id":"IC_kwDOBhBG1s5TOEku","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-18T22:49:03Z","updated_at":"2023-01-18T22:49:03Z","author_association":"CONTRIBUTOR","body":"Comments should be addressed now.  I actually had an unparser test case before, but it was triggering the same error message so I didn't think it was adding any additional coverage.  I was expecting to get the \"key not found\" error, but I think the only way that happens is when we are expecting a different type (ie expecting an int and get a string).","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1396197678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1396203999","html_url":"https://github.com/apache/daffodil/pull/901#issuecomment-1396203999","issue_url":"https://api.github.com/repos/apache/daffodil/issues/901","id":1396203999,"node_id":"IC_kwDOBhBG1s5TOGHf","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-18T22:57:51Z","updated_at":"2023-01-18T22:57:51Z","author_association":"CONTRIBUTOR","body":"Last point: I am sorry it took me like 2 weeks or so to get to this review. \r\n\r\nMany things are competing for my time right now. This stuff definitely requires one immerse onesself in it for a day-ish to get to where you can comment thoughtfully. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1396203999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1396930284","html_url":"https://github.com/apache/daffodil/pull/918#issuecomment-1396930284","issue_url":"https://api.github.com/repos/apache/daffodil/issues/918","id":1396930284,"node_id":"IC_kwDOBhBG1s5TQ3bs","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T12:53:13Z","updated_at":"2023-01-19T12:53:13Z","author_association":"MEMBER","body":"> I don't think the spec makes it clear that lengthUnit=\"bits\" cannot be used with xs:integer and xs:nonNegativeInteger. I see the following table:\r\n\r\nSection 12.3 of the says this in the table describing lengthUnits=\"bits\":\r\n\r\n> 'bits' may only be used for xs:boolean, xs:byte, xs:short, xs:int, xs:long, xs:unsignedByte, xs:unsignedShort, xs:unsignedInt, and xs:unsignedLong simple types with binary representation, and for calendar (date and time) simple types with binary packed representation.\r\n\r\nI don't understand the reasoning, bit it is pretty unambiguous.\r\n\r\nNote that this also adds that it's not allowed for `representation=\"binary\"`. So we *can* have `lengthUnits=\"bits\"` for these types when `representation=\"text\"`, we should ensure we still allow that.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1396930284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397047418","html_url":"https://github.com/apache/daffodil/pull/918#issuecomment-1397047418","issue_url":"https://api.github.com/repos/apache/daffodil/issues/918","id":1397047418,"node_id":"IC_kwDOBhBG1s5TRUB6","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T14:16:16Z","updated_at":"2023-01-19T14:16:16Z","author_association":"CONTRIBUTOR","body":"The DFDL spec is clear that (section 12.3 definition of lengthKind property:\r\n\r\n'bits' may only be used for xs:boolean, xs:byte, xs:short, xs:int, xs:long, xs:unsignedByte, xs:unsignedShort, xs:unsignedInt, and xs:unsignedLong simple types with binary representation, and for calendar (date and time) simple types with binary packed representation.\r\n\r\nInteger types other than these are xs:integer and xs:nonNegativeInteger.\r\n\r\nNumeric types other than those are float, double, decimal. \r\n\r\nThere has been agreement in the DFDL workgroup that lengthUnits bits will be allowed for hexBinary, and these can be arbitrarily long. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397047418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397050905","html_url":"https://github.com/apache/daffodil/pull/918#issuecomment-1397050905","issue_url":"https://api.github.com/repos/apache/daffodil/issues/918","id":1397050905,"node_id":"IC_kwDOBhBG1s5TRU4Z","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T14:18:44Z","updated_at":"2023-01-19T14:18:44Z","author_association":"CONTRIBUTOR","body":"If we are currently allowing bits, i.e., the code is present and tested, for integer and nonNegativeInteger types, then we should not disable this functionality, but rather should just add a tunable, defaulting to allowing the current behavior, which can be flipped to turn on stricter rules. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397050905/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397061459","html_url":"https://github.com/apache/daffodil/pull/918#issuecomment-1397061459","issue_url":"https://api.github.com/repos/apache/daffodil/issues/918","id":1397061459,"node_id":"IC_kwDOBhBG1s5TRXdT","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T14:26:11Z","updated_at":"2023-01-19T14:26:11Z","author_association":"CONTRIBUTOR","body":"> Note that this also adds that it's not allowed for `representation=\"binary\"`. So we _can_ have `lengthUnits=\"bits\"` for these types when `representation=\"text\"`, we should ensure we still allow that.\r\n\r\nI have asked for a clarification at the DFDL workgroup about this. I expect this is just poor wording, and there is no intention to allow 'bits' lengthUnits for these types ever. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397061459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397114069","html_url":"https://github.com/apache/daffodil/pull/918#issuecomment-1397114069","issue_url":"https://api.github.com/repos/apache/daffodil/issues/918","id":1397114069,"node_id":"IC_kwDOBhBG1s5TRkTV","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T15:02:56Z","updated_at":"2023-01-19T15:02:56Z","author_association":"MEMBER","body":"> If we are currently allowing bits, i.e., the code is present and tested, for integer and nonNegativeInteger types, then we should not disable this functionality, but rather should just add a tunable, defaulting to allowing the current behavior, which can be flipped to turn on stricter rules.\r\n\r\nThe current behavior is still allowed except that it now emits a warning. I updated the tests to reflect the desired usage. Do we want to:\r\n\r\n- Remove the warning, convert the SDW to a tunable SDE?\r\n- Update tests to try both the updated and deprecated way?\r\n- Revert tests back to the deprecated way and update to the desired usage later?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397114069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397207221","html_url":"https://github.com/apache/daffodil/pull/918#issuecomment-1397207221","issue_url":"https://api.github.com/repos/apache/daffodil/issues/918","id":1397207221,"node_id":"IC_kwDOBhBG1s5TR7C1","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T15:58:27Z","updated_at":"2023-01-19T15:58:27Z","author_association":"CONTRIBUTOR","body":"Let me opine about this for a sec and I think the right thing to do will emerge.\r\n\r\nDFDL didn't want to allow 'bits' for some things to both make implementations not have to agonize of features nobody would need, and to avoid users causing themselves grief. E.g., if we only want to support IEEE floats on byte boundaries then restricting xs:float to not have length units 'bits' makes some sense.\r\n\r\nWhat we have learned is that data format spec documents often pick one way of expressing length, e.g., bits, and stick with it. When creating a DFDL schema it is helpful to use the units that are in the spec document, even if the usage is restricted to multiples of 8 bits long.  So it is convenient in some cases to say dfdl:lengthUnits='bits' even for types where bits makes no sense like xs:float. \r\n\r\nSo for that reason, I think Daffodil never implemented checks to enforce what can have length units bits.\r\n\r\nBut, to the letter of the DFDL spec, length units 'bits' isn't allowed, so not portble.\r\n\r\nSo I think we want a tunable that says to warn on this usage (which can be suppresed), and a tunable to allow/disallow length units bits - i.e., cause it to be an SDE. \r\n\r\nThis would apply to all the types where we allow bits, but the DFDL spec does not. \r\nIncluding hexBinary, float, double, decimal, integer, nonNegativeInteger (assuming I have the right list).\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397207221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397209931","html_url":"https://github.com/apache/daffodil/pull/918#issuecomment-1397209931","issue_url":"https://api.github.com/repos/apache/daffodil/issues/918","id":1397209931,"node_id":"IC_kwDOBhBG1s5TR7tL","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T16:00:27Z","updated_at":"2023-01-19T16:00:27Z","author_association":"CONTRIBUTOR","body":"To be clear: we want a warning (which can be suppressed via existing means), and then a tunable which says whether to SDW, or SDE. Would default to SDW now. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397209931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397330529","html_url":"https://github.com/apache/daffodil/pull/918#issuecomment-1397330529","issue_url":"https://api.github.com/repos/apache/daffodil/issues/918","id":1397330529,"node_id":"IC_kwDOBhBG1s5TSZJh","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T17:15:31Z","updated_at":"2023-01-19T17:15:31Z","author_association":"CONTRIBUTOR","body":"> > Note that this also adds that it's not allowed for `representation=\"binary\"`. So we _can_ have `lengthUnits=\"bits\"` for these types when `representation=\"text\"`, we should ensure we still allow that.\r\n> \r\n> I have asked for a clarification at the DFDL workgroup about this. I expect this is just poor wording, and there is no intention to allow 'bits' lengthUnits for these types ever.\r\n\r\nPer discusssion on DFDL Workgroup 2023-01-19, the wording in the spec does not seem ambiguous. bits is allowed only for the specific set of types with binary representation, and this is to be interpreted as meaning that bits length units are allowed for that specific set of types only when they have binary representation, and bits is not allowed otherwise. Hence, bits is not allowed when they have text representation. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397330529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397371593","html_url":"https://github.com/apache/daffodil/pull/922#issuecomment-1397371593","issue_url":"https://api.github.com/repos/apache/daffodil/issues/922","id":1397371593,"node_id":"IC_kwDOBhBG1s5TSjLJ","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T17:44:29Z","updated_at":"2023-01-19T17:44:29Z","author_association":"CONTRIBUTOR","body":"Abort. Too many things subtly broken. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397371593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397418830","html_url":"https://github.com/apache/daffodil/pull/918#issuecomment-1397418830","issue_url":"https://api.github.com/repos/apache/daffodil/issues/918","id":1397418830,"node_id":"IC_kwDOBhBG1s5TSutO","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T18:21:21Z","updated_at":"2023-01-19T18:21:32Z","author_association":"MEMBER","body":"> To be clear: we want a warning (which can be suppressed via existing means), and then a tunable which says whether to SDW, or SDE. Would default to SDW now.\r\n\r\nUpdated to emit a warning by default and to raise an error when the `allowBigIntegerBits` tunable is set to false.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397418830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397419851","html_url":"https://github.com/apache/daffodil/pull/918#issuecomment-1397419851","issue_url":"https://api.github.com/repos/apache/daffodil/issues/918","id":1397419851,"node_id":"IC_kwDOBhBG1s5TSu9L","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T18:22:08Z","updated_at":"2023-01-19T18:22:08Z","author_association":"MEMBER","body":"> Hence, bits is not allowed when they have text representation.\r\n\r\nUpdated to add a check for binary representation. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397419851/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397422288","html_url":"https://github.com/apache/daffodil/pull/918#issuecomment-1397422288","issue_url":"https://api.github.com/repos/apache/daffodil/issues/918","id":1397422288,"node_id":"IC_kwDOBhBG1s5TSvjQ","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T18:23:45Z","updated_at":"2023-01-19T18:24:04Z","author_association":"MEMBER","body":"I think I have addressed all the outstanding issues with this PR. Let me know if there is additional discussion or changes that are necessary. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397422288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397702082","html_url":"https://github.com/apache/daffodil/pull/923#issuecomment-1397702082","issue_url":"https://api.github.com/repos/apache/daffodil/issues/923","id":1397702082,"node_id":"IC_kwDOBhBG1s5TTz3C","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T22:35:56Z","updated_at":"2023-01-19T22:35:56Z","author_association":"MEMBER","body":"I *think* I might know what the problem is. Each CLI test changes stdout/err/in to a temporary buffer during the duration of a test, which is needed to actually capture the output for expect. But this means CLI tests aren't thread safe and cannot be parallelized.\r\n\r\nSo in build.sbt we have this line to disable parallel CLI tests:\r\n\r\n```scala\r\nIntegrationTest / parallelExecution := false,\r\n```\r\nBut that means all of our CLI tests in the `Test` configuration will be run in parallel and randomly break. My guess is your IDE doesn't do this, or does some other magic when it runs tests.\r\n\r\nTo fix this, I think we can remove that line above from `build.sbt` and then add these lines to `daffodil-cli/build.sbt`\r\n```scala\r\nTest / parallelExecution := false\r\nIntegrationTest / parallelExecution := false\r\n```\r\n\r\nThis ensures that all daffodil-cli tests, whether forking or not, are run sequentially and avoids these thread unsafe issues. I tested it locally and it seems to work...\r\n\r\nExcept for one failure, apparently the test `org.apache.daffodil.parsing.TestCLIparsing.test_XXX_CLI_Parsing_SimpleParse_null` sets fork=true so that it can capture eof and make sure there is no output. But checking for eof and using getBefore is hack that isn't guaranteed to always work. We should just change that test so it outputs to a temp file and then checks that the file is empty.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397702082/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397745690","html_url":"https://github.com/apache/daffodil/pull/924#issuecomment-1397745690","issue_url":"https://api.github.com/repos/apache/daffodil/issues/924","id":1397745690,"node_id":"IC_kwDOBhBG1s5TT-ga","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-19T23:36:32Z","updated_at":"2023-01-19T23:36:32Z","author_association":"CONTRIBUTOR","body":"There are numerous more corner cases covered by testing now as well. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1397745690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1398737617","html_url":"https://github.com/apache/daffodil/pull/924#issuecomment-1398737617","issue_url":"https://api.github.com/repos/apache/daffodil/issues/924","id":1398737617,"node_id":"IC_kwDOBhBG1s5TXwrR","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-20T17:48:11Z","updated_at":"2023-01-20T17:48:11Z","author_association":"CONTRIBUTOR","body":"Thank you for the thorough review. I've addressed all feedback. \r\nOnce the checks pass I will merge this. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1398737617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1398788677","html_url":"https://github.com/apache/daffodil/pull/923#issuecomment-1398788677","issue_url":"https://api.github.com/repos/apache/daffodil/issues/923","id":1398788677,"node_id":"IC_kwDOBhBG1s5TX9JF","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-20T18:40:27Z","updated_at":"2023-01-20T18:40:27Z","author_association":"CONTRIBUTOR","body":"Pushed changes. Tests fixed. Comment added.  Packages revised to mostly flatten/remove them. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1398788677/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1398821757","html_url":"https://github.com/apache/daffodil/pull/923#issuecomment-1398821757","issue_url":"https://api.github.com/repos/apache/daffodil/issues/923","id":1398821757,"node_id":"IC_kwDOBhBG1s5TYFN9","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-20T19:11:48Z","updated_at":"2023-01-20T19:11:48Z","author_association":"CONTRIBUTOR","body":"There may be still some sort of timing/race-condition thing, as one of the CI test runs (Java 8 on Windows) a single CLI test failed. \r\nThis is of course spurious, but indicates a separate issue with the CLI test rig or expect framework we use for those. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1398821757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1398841458","html_url":"https://github.com/apache/daffodil/pull/923#issuecomment-1398841458","issue_url":"https://api.github.com/repos/apache/daffodil/issues/923","id":1398841458,"node_id":"IC_kwDOBhBG1s5TYKBy","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-20T19:33:00Z","updated_at":"2023-01-20T19:33:00Z","author_association":"CONTRIBUTOR","body":"@tuxji your re-review? ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1398841458/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1400663241","html_url":"https://github.com/apache/daffodil/pull/926#issuecomment-1400663241","issue_url":"https://api.github.com/repos/apache/daffodil/issues/926","id":1400663241,"node_id":"IC_kwDOBhBG1s5TfGzJ","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-23T16:51:16Z","updated_at":"2023-01-23T16:51:16Z","author_association":"MEMBER","body":"It looks like that error is a one-off, likely just a test taking too long and timing out. Please squash and this is good to merge.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1400663241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1400936565","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1400936565","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1400936565,"node_id":"IC_kwDOBhBG1s5TgJh1","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-23T20:27:33Z","updated_at":"2023-01-23T20:27:33Z","author_association":"CONTRIBUTOR","body":"In trying to run the refactor.sh script, I have found it is sensitive to the Java version and the Scala version that are executing at the command line. \r\n\r\nWhat versions are required? What versions are you using?\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1400936565/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1400947314","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1400947314","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1400947314,"node_id":"IC_kwDOBhBG1s5TgMJy","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-23T20:37:19Z","updated_at":"2023-01-23T20:37:51Z","author_association":"MEMBER","body":"> What versions are required? What versions are you using?\r\n\r\nI'm running with Scala 2.13.10 and Java 17.0.5\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1400947314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1401008790","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1401008790","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1401008790,"node_id":"IC_kwDOBhBG1s5TgbKW","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-23T21:29:49Z","updated_at":"2023-01-23T21:29:49Z","author_association":"CONTRIBUTOR","body":"Is there a way for a scala script to insist on a particular scala version, and error out if not the right one?\r\n\r\nI just installed the default scala on my Ubuntu 20.04 Linux, and it is scala v2.11. So no wonder things broke. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1401008790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1401294522","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1401294522","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1401294522,"node_id":"IC_kwDOBhBG1s5Thg66","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-24T01:44:18Z","updated_at":"2023-01-24T01:44:18Z","author_association":"CONTRIBUTOR","body":"Scripts work on scala 2.12.17, which is what I have installed now. \r\n\r\nI ran the scripts, and the resulting daffodil builds and tests without error. \r\n\r\nThe CI did fail on two of the configurations, but I think that is spurious. \r\n\r\nI think we should start planning for when to merge this.  We need to give people a chance to settle any large changes that modify numerous files. (I have one sort of like that in flight that I want to think about. )\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1401294522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1402045003","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1402045003","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1402045003,"node_id":"IC_kwDOBhBG1s5TkYJL","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-24T14:31:43Z","updated_at":"2023-01-25T14:55:40Z","author_association":"MEMBER","body":"> Is there a way for a scala script to insist on a particular scala version, and error out if not the right one?\r\n\r\nIf the refactor goes well these scripts can be thrown out so I'm not sure if this is the place to address the issue. I think the larger problem is that all of us ran this in different environments and got different results. Ubuntu installed 2.11 for you and Fedora 37 installed 2.13 for me. There is [pyenv](https://github.com/pyenv/pyenv) for Python which can help manage environments and there are similar tools for Node.js, Ruby, and even Terraform. I see there is a [scalaenv](https://github.com/scalaenv/scalaenv) which may be helpful for this but I'm new to the Scala world and don't know if this is a good package. We could even create a docker image for development that has exactly everything that is needed. \r\n\r\n> I think we should start planning for when to merge this. We need to give people a chance to settle any large changes that modify numerous files. (I have one sort of like that in flight that I want to think about. )\r\n\r\nOutstanding issues:\r\n\r\n- [x] ~~Finalize package names for daffodil-runtime1-layers and daffodil-runtime1-unparser. We need to come up with a decision on this.~~ *Mike B. says to use what we got and we can easily refactor again if desired* \r\n- [x] ratCheck needs to pass cleanly. I could use some help with those files getting flagged as binaries. *Having the filename contain `.lib` was causing it to be picked up as binary. Added to the RAT exclusions for now*\r\n- [x] lint-split-packages needs polish. This is the script that will traverse the source and look for these issues in the future. I'll work on this next. \r\n- [X] Now is a good time to bundle in any other adminstative tasks like this. There was some talk of incorporating an auto-formatter for the source code. Since that would probably change most source files now would be a great time to do this. *Will be in another PR*\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1402045003/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1403536481","html_url":"https://github.com/apache/daffodil/pull/918#issuecomment-1403536481","issue_url":"https://api.github.com/repos/apache/daffodil/issues/918","id":1403536481,"node_id":"IC_kwDOBhBG1s5TqERh","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-25T12:30:38Z","updated_at":"2023-01-25T12:30:38Z","author_association":"MEMBER","body":"Can you rebase to the lastest master and resolve the conflicts?\r\n\r\nAlso, can you add the Deprecated/Compatiability stuff to your commit message? Unfortunately updating the PR description doesn't change the commit to match and must be done manually.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1403536481/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]