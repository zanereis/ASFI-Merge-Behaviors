[{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569652","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569652","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569652,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk2NTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:04:47Z","updated_at":"2025-01-24T13:46:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45504914\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45504914</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/util.clj &#8212;<br/>\n    @@ -1062,6 +1062,22 @@<br/>\n     (defn hashmap-to-persistent <span class=\"error\">&#91;^HashMap m&#93;</span><br/>\n       (zipmap (.keySet m) (.values m)))</p>\n\n<p>    +(defn retry-on-exception<br/>\n    +  \"Retries specific function on exception based on retries count\"<br/>\n    +  <span class=\"error\">&#91;tries task-description f & args&#93;</span><br/>\n    +  (let [res (try {:value (apply f args)}<br/>\n    +      (catch Exception e<br/>\n    +(if (= 0 tries)<br/>\n    +  (throw e)<br/>\n    +  {:exception e})))]<br/>\n    +    (if (:exception res)<br/>\n    +      (do <br/>\n    +(log-error (:exception res) (str \"Failed to \" task-description \". Will make <span class=\"error\">&#91;\" tries \"&#93;</span> more attempts.\"))<br/>\n    +(recur (dec tries) task-description f args))<br/>\n    +      (do <br/>\n    +(log-debug (str \"Successful \" task-description \".\"))<br/>\n    +(:value res)))))<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Let's name the var `retries` instead of `tries`, since it calls the function `tries + 1` times.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569660","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569660","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569660,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk2NjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:06:21Z","updated_at":"2025-01-24T13:46:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45505075\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45505075</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/util.clj &#8212;<br/>\n    @@ -1062,6 +1062,22 @@<br/>\n     (defn hashmap-to-persistent <span class=\"error\">&#91;^HashMap m&#93;</span><br/>\n       (zipmap (.keySet m) (.values m)))</p>\n\n<p>    +(defn retry-on-exception<br/>\n    +  \"Retries specific function on exception based on retries count\"<br/>\n    +  <span class=\"error\">&#91;tries task-description f & args&#93;</span><br/>\n    +  (let [res (try {:value (apply f args)}<br/>\n    +      (catch Exception e<br/>\n    +(if (= 0 tries)<br/>\n    +  (throw e)<br/>\n    +  {:exception e})))]<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Probably should check that `tries` is not `pos?`, in case of crazy values of `tries`.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569660/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158496648","html_url":"https://github.com/apache/storm/pull/875#issuecomment-158496648","issue_url":"https://api.github.com/repos/apache/storm/issues/875","id":158496648,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODQ5NjY0OA==","user":{"login":"zhuoliu","id":11683054,"node_id":"MDQ6VXNlcjExNjgzMDU0","avatar_url":"https://avatars.githubusercontent.com/u/11683054?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuoliu","html_url":"https://github.com/zhuoliu","followers_url":"https://api.github.com/users/zhuoliu/followers","following_url":"https://api.github.com/users/zhuoliu/following{/other_user}","gists_url":"https://api.github.com/users/zhuoliu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuoliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuoliu/subscriptions","organizations_url":"https://api.github.com/users/zhuoliu/orgs","repos_url":"https://api.github.com/users/zhuoliu/repos","events_url":"https://api.github.com/users/zhuoliu/events{/privacy}","received_events_url":"https://api.github.com/users/zhuoliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:07:34Z","updated_at":"2015-11-20T19:07:34Z","author_association":"NONE","body":"Thanks @jerrypeng a lot for the thorough review and test verification! Camel case issue has been addressed.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158496648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630620","html_url":"https://github.com/apache/storm/issues/5036#issuecomment-2612630620","issue_url":"https://api.github.com/repos/apache/storm/issues/5036","id":2612630620,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzA2MjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:07:35Z","updated_at":"2025-01-24T14:13:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/875#issuecomment-158496648\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/875#issuecomment-158496648</a></p>\n\n<p>    Thanks @jerrypeng a lot for the thorough review and test verification! Camel case issue has been addressed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630620/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569666","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569666","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569666,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk2NjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:08:55Z","updated_at":"2025-01-24T13:46:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45505380\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45505380</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/cluster_state/zookeeper_state_factory.clj &#8212;<br/>\n    @@ -0,0 +1,157 @@<br/>\n    +;; Licensed to the Apache Software Foundation (ASF) under one<br/>\n    +;; or more contributor license agreements.  See the NOTICE file<br/>\n    +;; distributed with this work for additional information<br/>\n    +;; regarding copyright ownership.  The ASF licenses this file<br/>\n    +;; to you under the Apache License, Version 2.0 (the<br/>\n    +;; \"License\"); you may not use this file except in compliance<br/>\n    +;; with the License.  You may obtain a copy of the License at<br/>\n    +;;<br/>\n    +;; <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +;;<br/>\n    +;; Unless required by applicable law or agreed to in writing, software<br/>\n    +;; distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    +;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    +;; See the License for the specific language governing permissions and<br/>\n    +;; limitations under the License.<br/>\n    +<br/>\n    +(ns backtype.storm.cluster-state.zookeeper-state-factory<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.curator.framework.state ConnectionStateListener&#93;</span>)<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.zookeeper KeeperException KeeperException$NoNodeException ZooDefs ZooDefs$Ids ZooDefs$Perms&#93;</span><br/>\n    +   <span class=\"error\">&#91;backtype.storm.cluster ClusterState ClusterStateContext DaemonType&#93;</span>)<br/>\n    +  (:use <span class=\"error\">&#91;backtype.storm cluster config log util&#93;</span>)<br/>\n    +  (:require [backtype.storm <span class=\"error\">&#91;zookeeper :as zk&#93;</span>])<br/>\n    +  (:gen-class<br/>\n    +   :implements <span class=\"error\">&#91;backtype.storm.cluster.ClusterStateFactory&#93;</span>))<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Unused imports?</p>\n<ul>\n\t<li>`KeeperException`</li>\n\t<li>`ZooDefs`</li>\n\t<li>`ZooDefs$Ids`</li>\n\t<li>`ZooDefs$Perms`</li>\n\t<li>`ClusterStateContext`</li>\n</ul>\n\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569666/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569670","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569670","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569670,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk2NzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:11:00Z","updated_at":"2025-01-24T13:46:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45505612\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45505612</a></p>\n\n<p>    &#8212; Diff: bin/storm.py &#8212;<br/>\n    @@ -263,6 +263,17 @@ def upload_credentials(*args):<br/>\n     jvmtype=\"-client\",<br/>\n     extrajars=<span class=\"error\">&#91;USER_CONF_DIR, STORM_BIN_DIR&#93;</span>)</p>\n\n<p>    +def heartbeats(*args):<br/>\n    +    \"\"\"Syntax: [storm heartbeats <span class=\"error\">&#91;cmd&#93;</span>]<br/>\n    +<br/>\n    +    list <span class=\"error\">&#91;KEY...&#93;</span> - lists heartbeats nodes under KEY currently in pacemaker.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    According to the hearbeats.clj command, we also support a `get` subcommand.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612635031","html_url":"https://github.com/apache/storm/issues/5059#issuecomment-2612635031","issue_url":"https://api.github.com/repos/apache/storm/issues/5059","id":2612635031,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzUwMzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:13:10Z","updated_at":"2025-01-24T14:15:49Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user haohui commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/895#discussion_r45505881\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/895#discussion_r45505881</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/storm/trident/TridentTopology.java &#8212;<br/>\n    @@ -127,7 +128,21 @@ public Stream newStream(String txId, IPartitionedTridentSpout spout) {<br/>\n public Stream newStream(String txId, IOpaquePartitionedTridentSpout spout) </p>\n{\n     return newStream(txId, new OpaquePartitionedTridentSpoutExecutor(spout));\n }\n<ul class=\"alternate\" type=\"square\">\n\t<li><p>    +<br/>\n    +    public Stream newStream(String txId, ITridentDataSource dataSource) {<br/>\n    +if (dataSource instanceof IBatchSpout) </p>\n{\n    +    return newStream(txId, (IBatchSpout) dataSource);\n    +}\n<p> else if (dataSource instanceof ITridentSpout) </p>\n{\n    +    return newStream(txId, (ITridentSpout) dataSource);\n    +}\n<p> else if (dataSource instanceof IPartitionedTridentSpout) </p>\n{\n    +    return newStream(txId, (IPartitionedTridentSpout) dataSource);\n    +}\n<p> else if (dataSource instanceof IOpaquePartitionedTridentSpout) </p>\n{\n    +    return newStream(txId, (IOpaquePartitionedTridentSpout) dataSource);\n    +}\n<p> else {<br/>\n    +    throw new UnsupportedOperationException();</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Addressed in the latest version. Thanks!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612635031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569674","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569674","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569674,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk2NzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:13:36Z","updated_at":"2025-01-24T13:46:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45505939\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45505939</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/pacemaker/pacemaker.clj &#8212;<br/>\n    @@ -0,0 +1,239 @@<br/>\n    +;; Licensed to the Apache Software Foundation (ASF) under one<br/>\n    +;; or more contributor license agreements.  See the NOTICE file<br/>\n    +;; distributed with this work for additional information<br/>\n    +;; regarding copyright ownership.  The ASF licenses this file<br/>\n    +;; to you under the Apache License, Version 2.0 (the<br/>\n    +;; \"License\"); you may not use this file except in compliance<br/>\n    +;; with the License.  You may obtain a copy of the License at<br/>\n    +;;<br/>\n    +;; <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +;;<br/>\n    +;; Unless required by applicable law or agreed to in writing, software<br/>\n    +;; distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    +;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    +;; See the License for the specific language governing permissions and<br/>\n    +;; limitations under the License.<br/>\n    +<br/>\n    +(ns org.apache.storm.pacemaker.pacemaker<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.storm.pacemaker PacemakerServer IServerMessageHandler&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util.concurrent ConcurrentHashMap ThreadPoolExecutor TimeUnit LinkedBlockingDeque&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util.concurrent.atomic AtomicInteger&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util Date&#93;</span><br/>\n    +   [backtype.storm.generated<br/>\n    +    HBAuthorizationException HBExecutionException HBNodes HBRecords<br/>\n    +    HBServerMessageType HBMessage HBMessageData HBPulse])<br/>\n    +  (:use [clojure.string :only <span class=\"error\">&#91;replace-first split&#93;</span>]<br/>\n    +<span class=\"error\">&#91;backtype.storm log config util&#93;</span>)<br/>\n    +  (:require <span class=\"error\">&#91;clojure.java.jmx :as jmx&#93;</span>)<br/>\n    +  (:gen-class))<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Unused?</p>\n<ul>\n\t<li>`ThreadPoolExecutor`</li>\n\t<li>`TimeUnit`</li>\n\t<li>`LinkedBlockingQueue`</li>\n\t<li>`Date`</li>\n\t<li>`HBAuthorizationException`</li>\n\t<li>`HBExecutionException`</li>\n\t<li>`HBRecords`</li>\n</ul>\n\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569679","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569679","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569679,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk2Nzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:17:15Z","updated_at":"2025-01-24T13:46:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45506408\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45506408</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/pacemaker/pacemaker.clj &#8212;<br/>\n    @@ -0,0 +1,239 @@<br/>\n    +;; Licensed to the Apache Software Foundation (ASF) under one<br/>\n    +;; or more contributor license agreements.  See the NOTICE file<br/>\n    +;; distributed with this work for additional information<br/>\n    +;; regarding copyright ownership.  The ASF licenses this file<br/>\n    +;; to you under the Apache License, Version 2.0 (the<br/>\n    +;; \"License\"); you may not use this file except in compliance<br/>\n    +;; with the License.  You may obtain a copy of the License at<br/>\n    +;;<br/>\n    +;; <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +;;<br/>\n    +;; Unless required by applicable law or agreed to in writing, software<br/>\n    +;; distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    +;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    +;; See the License for the specific language governing permissions and<br/>\n    +;; limitations under the License.<br/>\n    +<br/>\n    +(ns org.apache.storm.pacemaker.pacemaker<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.storm.pacemaker PacemakerServer IServerMessageHandler&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util.concurrent ConcurrentHashMap ThreadPoolExecutor TimeUnit LinkedBlockingDeque&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util.concurrent.atomic AtomicInteger&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util Date&#93;</span><br/>\n    +   [backtype.storm.generated<br/>\n    +    HBAuthorizationException HBExecutionException HBNodes HBRecords<br/>\n    +    HBServerMessageType HBMessage HBMessageData HBPulse])<br/>\n    +  (:use [clojure.string :only <span class=\"error\">&#91;replace-first split&#93;</span>]<br/>\n    +<span class=\"error\">&#91;backtype.storm log config util&#93;</span>)<br/>\n    +  (:require <span class=\"error\">&#91;clojure.java.jmx :as jmx&#93;</span>)<br/>\n    +  (:gen-class))<br/>\n    +<br/>\n    +<br/>\n    +;; Stats Functions<br/>\n    +<br/>\n    +(def sleep-seconds 60)<br/>\n    +<br/>\n    +<br/>\n    +(defn- check-and-set-loop [stats key new & {:keys <span class=\"error\">&#91;compare new-fn&#93;</span><br/>\n    +    :or {compare (fn <span class=\"error\">&#91;new old&#93;</span> true)<br/>\n    + new-fn (fn <span class=\"error\">&#91;new old&#93;</span> new)}}]<br/>\n    +  (loop []<br/>\n    +    (let [old (.get (key stats))<br/>\n    +  new (new-fn new old)]<br/>\n    +      (if (compare new old)<br/>\n    +(if (.compareAndSet (key stats) old new)<br/>\n    +  nil<br/>\n    +  (recur))<br/>\n    +nil))))<br/>\n    +<br/>\n    +(defn- set-average <span class=\"error\">&#91;stats size&#93;</span><br/>\n    +  (check-and-set-loop<br/>\n    +   stats<br/>\n    +   :average-heartbeat-size<br/>\n    +   size<br/>\n    +   :new-fn (fn <span class=\"error\">&#91;new old&#93;</span><br/>\n    +    (let <span class=\"error\">&#91;count (.get (:send-pulse-count stats))&#93;</span><br/>\n    +; Weighted average<br/>\n    +      (/ (+ new (* count old)) (+ count 1))))))<br/>\n    +<br/>\n    +(defn- set-largest <span class=\"error\">&#91;stats size&#93;</span><br/>\n    +  (check-and-set-loop<br/>\n    +   stats<br/>\n    +   :largest-heartbeat-size<br/>\n    +   size<br/>\n    +   :compare #'>))<br/>\n    +<br/>\n    +(defn- report-stats <span class=\"error\">&#91;heartbeats stats last-five-s&#93;</span><br/>\n    +  (loop []<br/>\n    +      (let [send-count (.getAndSet (:send-pulse-count stats) 0)<br/>\n    +    received-size (.getAndSet (:total-received-size stats) 0)<br/>\n    +    get-count (.getAndSet (:get-pulse-count stats) 0)<br/>\n    +    sent-size (.getAndSet (:total-sent-size stats) 0)<br/>\n    +    largest (.getAndSet (:largest-heartbeat-size stats) 0)<br/>\n    +    average (.getAndSet (:average-heartbeat-size stats) 0)<br/>\n    +    total-keys (.size heartbeats)]<br/>\n    +(log-debug \"\\nReceived \" send-count \" heartbeats totaling \" received-size \" bytes,\\n\"<br/>\n    +   \"Sent \" get-count \" heartbeats totaling \" sent-size \" bytes,\\n\"<br/>\n    +   \"The largest heartbeat was \" largest \" bytes,\\n\"<br/>\n    +   \"The average heartbeat was \" average \" bytes,\\n\"<br/>\n    +   \"Pacemaker contained \" total-keys \" total keys\\n\"<br/>\n    +   \"in the last \" sleep-seconds \" second(s)\")<br/>\n    +(dosync (ref-set last-five-s<br/>\n    + {:send-pulse-count send-count<br/>\n    +  :total-received-size received-size<br/>\n    +  :get-pulse-count get-count<br/>\n    +  :total-sent-size sent-size<br/>\n    +  :largest-heartbeat-size largest<br/>\n    +  :average-heartbeat-size average<br/>\n    +  :total-keys total-keys})))<br/>\n    +      (Thread/sleep (* 1000 sleep-seconds))<br/>\n    +      (recur)))<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    minor: indent of `let`</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569679/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569683","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569683","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569683,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk2ODM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:18:00Z","updated_at":"2025-01-24T13:46:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45506483\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45506483</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/pacemaker/pacemaker.clj &#8212;<br/>\n    @@ -0,0 +1,239 @@<br/>\n    +;; Licensed to the Apache Software Foundation (ASF) under one<br/>\n    +;; or more contributor license agreements.  See the NOTICE file<br/>\n    +;; distributed with this work for additional information<br/>\n    +;; regarding copyright ownership.  The ASF licenses this file<br/>\n    +;; to you under the Apache License, Version 2.0 (the<br/>\n    +;; \"License\"); you may not use this file except in compliance<br/>\n    +;; with the License.  You may obtain a copy of the License at<br/>\n    +;;<br/>\n    +;; <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +;;<br/>\n    +;; Unless required by applicable law or agreed to in writing, software<br/>\n    +;; distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    +;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    +;; See the License for the specific language governing permissions and<br/>\n    +;; limitations under the License.<br/>\n    +<br/>\n    +(ns org.apache.storm.pacemaker.pacemaker<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.storm.pacemaker PacemakerServer IServerMessageHandler&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util.concurrent ConcurrentHashMap ThreadPoolExecutor TimeUnit LinkedBlockingDeque&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util.concurrent.atomic AtomicInteger&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util Date&#93;</span><br/>\n    +   [backtype.storm.generated<br/>\n    +    HBAuthorizationException HBExecutionException HBNodes HBRecords<br/>\n    +    HBServerMessageType HBMessage HBMessageData HBPulse])<br/>\n    +  (:use [clojure.string :only <span class=\"error\">&#91;replace-first split&#93;</span>]<br/>\n    +<span class=\"error\">&#91;backtype.storm log config util&#93;</span>)<br/>\n    +  (:require <span class=\"error\">&#91;clojure.java.jmx :as jmx&#93;</span>)<br/>\n    +  (:gen-class))<br/>\n    +<br/>\n    +<br/>\n    +;; Stats Functions<br/>\n    +<br/>\n    +(def sleep-seconds 60)<br/>\n    +<br/>\n    +<br/>\n    +(defn- check-and-set-loop [stats key new & {:keys <span class=\"error\">&#91;compare new-fn&#93;</span><br/>\n    +    :or {compare (fn <span class=\"error\">&#91;new old&#93;</span> true)<br/>\n    + new-fn (fn <span class=\"error\">&#91;new old&#93;</span> new)}}]<br/>\n    +  (loop []<br/>\n    +    (let [old (.get (key stats))<br/>\n    +  new (new-fn new old)]<br/>\n    +      (if (compare new old)<br/>\n    +(if (.compareAndSet (key stats) old new)<br/>\n    +  nil<br/>\n    +  (recur))<br/>\n    +nil))))<br/>\n    +<br/>\n    +(defn- set-average <span class=\"error\">&#91;stats size&#93;</span><br/>\n    +  (check-and-set-loop<br/>\n    +   stats<br/>\n    +   :average-heartbeat-size<br/>\n    +   size<br/>\n    +   :new-fn (fn <span class=\"error\">&#91;new old&#93;</span><br/>\n    +    (let <span class=\"error\">&#91;count (.get (:send-pulse-count stats))&#93;</span><br/>\n    +; Weighted average<br/>\n    +      (/ (+ new (* count old)) (+ count 1))))))<br/>\n    +<br/>\n    +(defn- set-largest <span class=\"error\">&#91;stats size&#93;</span><br/>\n    +  (check-and-set-loop<br/>\n    +   stats<br/>\n    +   :largest-heartbeat-size<br/>\n    +   size<br/>\n    +   :compare #'>))<br/>\n    +<br/>\n    +(defn- report-stats <span class=\"error\">&#91;heartbeats stats last-five-s&#93;</span><br/>\n    +  (loop []<br/>\n    +      (let [send-count (.getAndSet (:send-pulse-count stats) 0)<br/>\n    +    received-size (.getAndSet (:total-received-size stats) 0)<br/>\n    +    get-count (.getAndSet (:get-pulse-count stats) 0)<br/>\n    +    sent-size (.getAndSet (:total-sent-size stats) 0)<br/>\n    +    largest (.getAndSet (:largest-heartbeat-size stats) 0)<br/>\n    +    average (.getAndSet (:average-heartbeat-size stats) 0)<br/>\n    +    total-keys (.size heartbeats)]<br/>\n    +(log-debug \"\\nReceived \" send-count \" heartbeats totaling \" received-size \" bytes,\\n\"<br/>\n    +   \"Sent \" get-count \" heartbeats totaling \" sent-size \" bytes,\\n\"<br/>\n    +   \"The largest heartbeat was \" largest \" bytes,\\n\"<br/>\n    +   \"The average heartbeat was \" average \" bytes,\\n\"<br/>\n    +   \"Pacemaker contained \" total-keys \" total keys\\n\"<br/>\n    +   \"in the last \" sleep-seconds \" second(s)\")<br/>\n    +(dosync (ref-set last-five-s<br/>\n    + {:send-pulse-count send-count<br/>\n    +  :total-received-size received-size<br/>\n    +  :get-pulse-count get-count<br/>\n    +  :total-sent-size sent-size<br/>\n    +  :largest-heartbeat-size largest<br/>\n    +  :average-heartbeat-size average<br/>\n    +  :total-keys total-keys})))<br/>\n    +      (Thread/sleep (* 1000 sleep-seconds))<br/>\n    +      (recur)))<br/>\n    +<br/>\n    +;; JMX stuff<br/>\n    +(defn register <span class=\"error\">&#91;last-five-s&#93;</span><br/>\n    +  (jmx/register-mbean<br/>\n    +   (jmx/create-bean<br/>\n    +    last-five-s)<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    minor: one-space indent</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569688","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569688","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569688,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk2ODg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:19:58Z","updated_at":"2025-01-24T13:46:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45506713\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45506713</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/pacemaker/pacemaker.clj &#8212;<br/>\n    @@ -0,0 +1,239 @@<br/>\n    +;; Licensed to the Apache Software Foundation (ASF) under one<br/>\n    +;; or more contributor license agreements.  See the NOTICE file<br/>\n    +;; distributed with this work for additional information<br/>\n    +;; regarding copyright ownership.  The ASF licenses this file<br/>\n    +;; to you under the Apache License, Version 2.0 (the<br/>\n    +;; \"License\"); you may not use this file except in compliance<br/>\n    +;; with the License.  You may obtain a copy of the License at<br/>\n    +;;<br/>\n    +;; <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +;;<br/>\n    +;; Unless required by applicable law or agreed to in writing, software<br/>\n    +;; distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    +;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    +;; See the License for the specific language governing permissions and<br/>\n    +;; limitations under the License.<br/>\n    +<br/>\n    +(ns org.apache.storm.pacemaker.pacemaker<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.storm.pacemaker PacemakerServer IServerMessageHandler&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util.concurrent ConcurrentHashMap ThreadPoolExecutor TimeUnit LinkedBlockingDeque&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util.concurrent.atomic AtomicInteger&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util Date&#93;</span><br/>\n    +   [backtype.storm.generated<br/>\n    +    HBAuthorizationException HBExecutionException HBNodes HBRecords<br/>\n    +    HBServerMessageType HBMessage HBMessageData HBPulse])<br/>\n    +  (:use [clojure.string :only <span class=\"error\">&#91;replace-first split&#93;</span>]<br/>\n    +<span class=\"error\">&#91;backtype.storm log config util&#93;</span>)<br/>\n    +  (:require <span class=\"error\">&#91;clojure.java.jmx :as jmx&#93;</span>)<br/>\n    +  (:gen-class))<br/>\n    +<br/>\n    +<br/>\n    +;; Stats Functions<br/>\n    +<br/>\n    +(def sleep-seconds 60)<br/>\n    +<br/>\n    +<br/>\n    +(defn- check-and-set-loop [stats key new & {:keys <span class=\"error\">&#91;compare new-fn&#93;</span><br/>\n    +    :or {compare (fn <span class=\"error\">&#91;new old&#93;</span> true)<br/>\n    + new-fn (fn <span class=\"error\">&#91;new old&#93;</span> new)}}]<br/>\n    +  (loop []<br/>\n    +    (let [old (.get (key stats))<br/>\n    +  new (new-fn new old)]<br/>\n    +      (if (compare new old)<br/>\n    +(if (.compareAndSet (key stats) old new)<br/>\n    +  nil<br/>\n    +  (recur))<br/>\n    +nil))))<br/>\n    +<br/>\n    +(defn- set-average <span class=\"error\">&#91;stats size&#93;</span><br/>\n    +  (check-and-set-loop<br/>\n    +   stats<br/>\n    +   :average-heartbeat-size<br/>\n    +   size<br/>\n    +   :new-fn (fn <span class=\"error\">&#91;new old&#93;</span><br/>\n    +    (let <span class=\"error\">&#91;count (.get (:send-pulse-count stats))&#93;</span><br/>\n    +; Weighted average<br/>\n    +      (/ (+ new (* count old)) (+ count 1))))))<br/>\n    +<br/>\n    +(defn- set-largest <span class=\"error\">&#91;stats size&#93;</span><br/>\n    +  (check-and-set-loop<br/>\n    +   stats<br/>\n    +   :largest-heartbeat-size<br/>\n    +   size<br/>\n    +   :compare #'>))<br/>\n    +<br/>\n    +(defn- report-stats <span class=\"error\">&#91;heartbeats stats last-five-s&#93;</span><br/>\n    +  (loop []<br/>\n    +      (let [send-count (.getAndSet (:send-pulse-count stats) 0)<br/>\n    +    received-size (.getAndSet (:total-received-size stats) 0)<br/>\n    +    get-count (.getAndSet (:get-pulse-count stats) 0)<br/>\n    +    sent-size (.getAndSet (:total-sent-size stats) 0)<br/>\n    +    largest (.getAndSet (:largest-heartbeat-size stats) 0)<br/>\n    +    average (.getAndSet (:average-heartbeat-size stats) 0)<br/>\n    +    total-keys (.size heartbeats)]<br/>\n    +(log-debug \"\\nReceived \" send-count \" heartbeats totaling \" received-size \" bytes,\\n\"<br/>\n    +   \"Sent \" get-count \" heartbeats totaling \" sent-size \" bytes,\\n\"<br/>\n    +   \"The largest heartbeat was \" largest \" bytes,\\n\"<br/>\n    +   \"The average heartbeat was \" average \" bytes,\\n\"<br/>\n    +   \"Pacemaker contained \" total-keys \" total keys\\n\"<br/>\n    +   \"in the last \" sleep-seconds \" second(s)\")<br/>\n    +(dosync (ref-set last-five-s<br/>\n    + {:send-pulse-count send-count<br/>\n    +  :total-received-size received-size<br/>\n    +  :get-pulse-count get-count<br/>\n    +  :total-sent-size sent-size<br/>\n    +  :largest-heartbeat-size largest<br/>\n    +  :average-heartbeat-size average<br/>\n    +  :total-keys total-keys})))<br/>\n    +      (Thread/sleep (* 1000 sleep-seconds))<br/>\n    +      (recur)))<br/>\n    +<br/>\n    +;; JMX stuff<br/>\n    +(defn register <span class=\"error\">&#91;last-five-s&#93;</span><br/>\n    +  (jmx/register-mbean<br/>\n    +   (jmx/create-bean<br/>\n    +    last-five-s)<br/>\n    +   \"org.apache.storm.pacemaker.pacemaker:stats=Stats_Last_5_Seconds\"))<br/>\n    +<br/>\n    +<br/>\n    +;; Pacemaker Functions<br/>\n    +<br/>\n    +(defn hb-data <span class=\"error\">&#91;conf&#93;</span><br/>\n    +  (ConcurrentHashMap.))<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    remove `conf`?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569688/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569692","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569692","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569692,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk2OTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:26:05Z","updated_at":"2025-01-24T13:46:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45507464\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45507464</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/pacemaker/pacemaker.clj &#8212;<br/>\n    @@ -0,0 +1,239 @@<br/>\n    +;; Licensed to the Apache Software Foundation (ASF) under one<br/>\n    +;; or more contributor license agreements.  See the NOTICE file<br/>\n    +;; distributed with this work for additional information<br/>\n    +;; regarding copyright ownership.  The ASF licenses this file<br/>\n    +;; to you under the Apache License, Version 2.0 (the<br/>\n    +;; \"License\"); you may not use this file except in compliance<br/>\n    +;; with the License.  You may obtain a copy of the License at<br/>\n    +;;<br/>\n    +;; <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +;;<br/>\n    +;; Unless required by applicable law or agreed to in writing, software<br/>\n    +;; distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    +;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    +;; See the License for the specific language governing permissions and<br/>\n    +;; limitations under the License.<br/>\n    +<br/>\n    +(ns org.apache.storm.pacemaker.pacemaker<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.storm.pacemaker PacemakerServer IServerMessageHandler&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util.concurrent ConcurrentHashMap ThreadPoolExecutor TimeUnit LinkedBlockingDeque&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util.concurrent.atomic AtomicInteger&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util Date&#93;</span><br/>\n    +   [backtype.storm.generated<br/>\n    +    HBAuthorizationException HBExecutionException HBNodes HBRecords<br/>\n    +    HBServerMessageType HBMessage HBMessageData HBPulse])<br/>\n    +  (:use [clojure.string :only <span class=\"error\">&#91;replace-first split&#93;</span>]<br/>\n    +<span class=\"error\">&#91;backtype.storm log config util&#93;</span>)<br/>\n    +  (:require <span class=\"error\">&#91;clojure.java.jmx :as jmx&#93;</span>)<br/>\n    +  (:gen-class))<br/>\n    +<br/>\n    +<br/>\n    +;; Stats Functions<br/>\n    +<br/>\n    +(def sleep-seconds 60)<br/>\n    +<br/>\n    +<br/>\n    +(defn- check-and-set-loop [stats key new & {:keys <span class=\"error\">&#91;compare new-fn&#93;</span><br/>\n    +    :or {compare (fn <span class=\"error\">&#91;new old&#93;</span> true)<br/>\n    + new-fn (fn <span class=\"error\">&#91;new old&#93;</span> new)}}]<br/>\n    +  (loop []<br/>\n    +    (let [old (.get (key stats))<br/>\n    +  new (new-fn new old)]<br/>\n    +      (if (compare new old)<br/>\n    +(if (.compareAndSet (key stats) old new)<br/>\n    +  nil<br/>\n    +  (recur))<br/>\n    +nil))))<br/>\n    +<br/>\n    +(defn- set-average <span class=\"error\">&#91;stats size&#93;</span><br/>\n    +  (check-and-set-loop<br/>\n    +   stats<br/>\n    +   :average-heartbeat-size<br/>\n    +   size<br/>\n    +   :new-fn (fn <span class=\"error\">&#91;new old&#93;</span><br/>\n    +    (let <span class=\"error\">&#91;count (.get (:send-pulse-count stats))&#93;</span><br/>\n    +; Weighted average<br/>\n    +      (/ (+ new (* count old)) (+ count 1))))))<br/>\n    +<br/>\n    +(defn- set-largest <span class=\"error\">&#91;stats size&#93;</span><br/>\n    +  (check-and-set-loop<br/>\n    +   stats<br/>\n    +   :largest-heartbeat-size<br/>\n    +   size<br/>\n    +   :compare #'>))<br/>\n    +<br/>\n    +(defn- report-stats <span class=\"error\">&#91;heartbeats stats last-five-s&#93;</span><br/>\n    +  (loop []<br/>\n    +      (let [send-count (.getAndSet (:send-pulse-count stats) 0)<br/>\n    +    received-size (.getAndSet (:total-received-size stats) 0)<br/>\n    +    get-count (.getAndSet (:get-pulse-count stats) 0)<br/>\n    +    sent-size (.getAndSet (:total-sent-size stats) 0)<br/>\n    +    largest (.getAndSet (:largest-heartbeat-size stats) 0)<br/>\n    +    average (.getAndSet (:average-heartbeat-size stats) 0)<br/>\n    +    total-keys (.size heartbeats)]<br/>\n    +(log-debug \"\\nReceived \" send-count \" heartbeats totaling \" received-size \" bytes,\\n\"<br/>\n    +   \"Sent \" get-count \" heartbeats totaling \" sent-size \" bytes,\\n\"<br/>\n    +   \"The largest heartbeat was \" largest \" bytes,\\n\"<br/>\n    +   \"The average heartbeat was \" average \" bytes,\\n\"<br/>\n    +   \"Pacemaker contained \" total-keys \" total keys\\n\"<br/>\n    +   \"in the last \" sleep-seconds \" second(s)\")<br/>\n    +(dosync (ref-set last-five-s<br/>\n    + {:send-pulse-count send-count<br/>\n    +  :total-received-size received-size<br/>\n    +  :get-pulse-count get-count<br/>\n    +  :total-sent-size sent-size<br/>\n    +  :largest-heartbeat-size largest<br/>\n    +  :average-heartbeat-size average<br/>\n    +  :total-keys total-keys})))<br/>\n    +      (Thread/sleep (* 1000 sleep-seconds))<br/>\n    +      (recur)))<br/>\n    +<br/>\n    +;; JMX stuff<br/>\n    +(defn register <span class=\"error\">&#91;last-five-s&#93;</span><br/>\n    +  (jmx/register-mbean<br/>\n    +   (jmx/create-bean<br/>\n    +    last-five-s)<br/>\n    +   \"org.apache.storm.pacemaker.pacemaker:stats=Stats_Last_5_Seconds\"))<br/>\n    +<br/>\n    +<br/>\n    +;; Pacemaker Functions<br/>\n    +<br/>\n    +(defn hb-data <span class=\"error\">&#91;conf&#93;</span><br/>\n    +  (ConcurrentHashMap.))<br/>\n    +<br/>\n    +(defn create-path <span class=\"error\">&#91;^String path heartbeats&#93;</span><br/>\n    +  (HBMessage. HBServerMessageType/CREATE_PATH_RESPONSE nil))<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Current implementation is a no-op.  The parameters do make sense if we were to change implementation in the future.  We could leave these here or remove them.  I am fine with it either way.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569692/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569694","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569694","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569694,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk2OTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:27:32Z","updated_at":"2025-01-24T13:46:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45507626\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45507626</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/pacemaker/pacemaker_state_factory.clj &#8212;<br/>\n    @@ -0,0 +1,124 @@<br/>\n    +;; Licensed to the Apache Software Foundation (ASF) under one<br/>\n    +;; or more contributor license agreements.  See the NOTICE file<br/>\n    +;; distributed with this work for additional information<br/>\n    +;; regarding copyright ownership.  The ASF licenses this file<br/>\n    +;; to you under the Apache License, Version 2.0 (the<br/>\n    +;; \"License\"); you may not use this file except in compliance<br/>\n    +;; with the License.  You may obtain a copy of the License at<br/>\n    +;;<br/>\n    +;; <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +;;<br/>\n    +;; Unless required by applicable law or agreed to in writing, software<br/>\n    +;; distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    +;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    +;; See the License for the specific language governing permissions and<br/>\n    +;; limitations under the License.<br/>\n    +<br/>\n    +(ns org.apache.storm.pacemaker.pacemaker-state-factory<br/>\n    +  (:require <span class=\"error\">&#91;org.apache.storm.pacemaker pacemaker&#93;</span><br/>\n    +    [backtype.storm.cluster-state <span class=\"error\">&#91;zookeeper-state-factory :as zk-factory&#93;</span>]<br/>\n    +    [backtype.storm<br/>\n    +     <span class=\"error\">&#91;config :refer :all&#93;</span><br/>\n    +     <span class=\"error\">&#91;cluster :refer :all&#93;</span><br/>\n    +     <span class=\"error\">&#91;log :refer :all&#93;</span><br/>\n    +     <span class=\"error\">&#91;util :as util&#93;</span>])<br/>\n    +  (:import [backtype.storm.generated<br/>\n    +    HBExecutionException HBNodes HBRecords<br/>\n    +    HBServerMessageType HBMessage HBMessageData HBPulse]<br/>\n    +   <span class=\"error\">&#91;backtype.storm.cluster_state zookeeper_state_factory&#93;</span><br/>\n    +   <span class=\"error\">&#91;backtype.storm.cluster ClusterState&#93;</span><br/>\n    +   <span class=\"error\">&#91;org.apache.storm.pacemaker PacemakerClient&#93;</span>)<br/>\n    +  (:gen-class<br/>\n    +   :implements <span class=\"error\">&#91;backtype.storm.cluster.ClusterStateFactory&#93;</span>))<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Unused?</p>\n<ul>\n\t<li>`HBNodes`</li>\n\t<li>`HBRecords`</li>\n</ul>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630624","html_url":"https://github.com/apache/storm/issues/5036#issuecomment-2612630624","issue_url":"https://api.github.com/repos/apache/storm/issues/5036","id":2612630624,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzA2MjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:28:49Z","updated_at":"2025-01-24T14:13:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/875#discussion_r45507777\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/875#discussion_r45507777</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/utils/Utils.java &#8212;<br/>\n    @@ -764,5 +778,30 @@ public static long zipFileSize(File myFile) throws IOException{<br/>\n public static double zeroIfNaNOrInf(double x) </p>\n{\n     return (Double.isNaN(x) || Double.isInfinite(x)) ? 0.0 : x;\n }\n<p>    +<br/>\n    +    /**<br/>\n    +     * parses the arguments to extract jvm heap memory size.<br/>\n    +     * @param input<br/>\n    +     * @param defaultValue<br/>\n    +     * @return the value of the JVM heap memory setting in a java command.<br/>\n    +     */<br/>\n    +    public static Double parseWorkerChildOpts(String input, Double defaultValue) {<br/>\n    +if (input != null) {<br/>\n    +    Pattern optsPattern = Pattern.compile(\"Xmx<span class=\"error\">&#91;0-9&#93;</span>+m\");<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This is not good enough.  It is not just an 'm' that is supported.</p>\n\n<p>    From <a href=\"http://docs.oracle.com/javase/7/docs/technotes/tools/windows/java.html\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://docs.oracle.com/javase/7/docs/technotes/tools/windows/java.html</a></p>\n\n<p>    ```<br/>\n    -Xmxn</p>\n\n<p>Specifies the maximum size, in bytes, of the memory allocation pool. This value must a multiple of 1024 greater than 2 MB. Append the letter k or K to indicate kilobytes, or m or M to indicate megabytes. The default value is chosen at runtime based on system configuration.<br/>\n    ```</p>\n\n<p>    I have also seen 'g' and 'G' work for gigabytes too.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569700","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569700","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569700,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3MDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:29:55Z","updated_at":"2025-01-24T13:46:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45507897\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45507897</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/pacemaker/pacemaker_state_factory.clj &#8212;<br/>\n    @@ -0,0 +1,124 @@<br/>\n    +;; Licensed to the Apache Software Foundation (ASF) under one<br/>\n    +;; or more contributor license agreements.  See the NOTICE file<br/>\n    +;; distributed with this work for additional information<br/>\n    +;; regarding copyright ownership.  The ASF licenses this file<br/>\n    +;; to you under the Apache License, Version 2.0 (the<br/>\n    +;; \"License\"); you may not use this file except in compliance<br/>\n    +;; with the License.  You may obtain a copy of the License at<br/>\n    +;;<br/>\n    +;; <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +;;<br/>\n    +;; Unless required by applicable law or agreed to in writing, software<br/>\n    +;; distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    +;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    +;; See the License for the specific language governing permissions and<br/>\n    +;; limitations under the License.<br/>\n    +<br/>\n    +(ns org.apache.storm.pacemaker.pacemaker-state-factory<br/>\n    +  (:require <span class=\"error\">&#91;org.apache.storm.pacemaker pacemaker&#93;</span><br/>\n    +    [backtype.storm.cluster-state <span class=\"error\">&#91;zookeeper-state-factory :as zk-factory&#93;</span>]<br/>\n    +    [backtype.storm<br/>\n    +     <span class=\"error\">&#91;config :refer :all&#93;</span><br/>\n    +     <span class=\"error\">&#91;cluster :refer :all&#93;</span><br/>\n    +     <span class=\"error\">&#91;log :refer :all&#93;</span><br/>\n    +     <span class=\"error\">&#91;util :as util&#93;</span>])<br/>\n    +  (:import [backtype.storm.generated<br/>\n    +    HBExecutionException HBNodes HBRecords<br/>\n    +    HBServerMessageType HBMessage HBMessageData HBPulse]<br/>\n    +   <span class=\"error\">&#91;backtype.storm.cluster_state zookeeper_state_factory&#93;</span><br/>\n    +   <span class=\"error\">&#91;backtype.storm.cluster ClusterState&#93;</span><br/>\n    +   <span class=\"error\">&#91;org.apache.storm.pacemaker PacemakerClient&#93;</span>)<br/>\n    +  (:gen-class<br/>\n    +   :implements <span class=\"error\">&#91;backtype.storm.cluster.ClusterStateFactory&#93;</span>))<br/>\n    +<br/>\n    +;; So we can mock the client for testing<br/>\n    +(defn makeClient <span class=\"error\">&#91;conf&#93;</span><br/>\n    +  (PacemakerClient. conf))<br/>\n    +<br/>\n    +(defn makeZKState <span class=\"error\">&#91;conf auth-conf acls context&#93;</span><br/>\n    +  (.mkState (zookeeper_state_factory.) conf auth-conf acls context))<br/>\n    +<br/>\n    +(def max-retries 10)<br/>\n    +<br/>\n    +(defn -mkState <span class=\"error\">&#91;this conf auth-conf acls context&#93;</span><br/>\n    +  (let [zk-state (makeZKState conf auth-conf acls context)<br/>\n    +pacemaker-client (makeClient conf)]<br/>\n    +<br/>\n    +    (reify<br/>\n    +      ClusterState<br/>\n    +      ;; Let these pass through to the zk-state. We only want to handle heartbeats.<br/>\n    +      (register <span class=\"error\">&#91;this callback&#93;</span> (.register zk-state callback))<br/>\n    +      (unregister <span class=\"error\">&#91;this callback&#93;</span> (.unregister zk-state callback))<br/>\n    +      (set_ephemeral_node <span class=\"error\">&#91;this path data acls&#93;</span> (.set_ephemeral_node zk-state path data acls))<br/>\n    +      (create_sequential <span class=\"error\">&#91;this path data acls&#93;</span> (.create_sequential zk-state path data acls))<br/>\n    +      (set_data <span class=\"error\">&#91;this path data acls&#93;</span> (.set_data zk-state path data acls))<br/>\n    +      (delete_node <span class=\"error\">&#91;this path&#93;</span> (.delete_node zk-state path))<br/>\n    +      (get_data <span class=\"error\">&#91;this path watch?&#93;</span> (.get_data zk-state path watch?))<br/>\n    +      (get_data_with_version <span class=\"error\">&#91;this path watch?&#93;</span> (.get_data_with_version zk-state path watch?))<br/>\n    +      (get_version <span class=\"error\">&#91;this path watch?&#93;</span> (.get_version zk-state path watch?))<br/>\n    +      (get_children <span class=\"error\">&#91;this path watch?&#93;</span> (.get_children zk-state path watch?))<br/>\n    +      (mkdirs <span class=\"error\">&#91;this path acls&#93;</span> (.mkdirs zk-state path acls))<br/>\n    +      (node_exists <span class=\"error\">&#91;this path watch?&#93;</span> (.node_exists zk-state path watch?))<br/>\n    +      (add_listener <span class=\"error\">&#91;this listener&#93;</span> (.add_listener zk-state listener))<br/>\n    +      (sync_path <span class=\"error\">&#91;this path&#93;</span> (.sync_path zk-state path))<br/>\n    +      <br/>\n    +      (set_worker_hb <span class=\"error\">&#91;this path data acls&#93;</span><br/>\n    +(util/retry-on-exception<br/>\n    + max-retries<br/>\n    + \"set_worker_hb\"<br/>\n    + #(let [response<br/>\n    +(.send pacemaker-client<br/>\n    +       (HBMessage. HBServerMessageType/SEND_PULSE<br/>\n    +   (HBMessageData/pulse<br/>\n    +    (doto (HBPulse.)<br/>\n    +      (.set_id path)<br/>\n    +      (.set_details data)))))]<br/>\n    +    (if (= (.get_type response) HBServerMessageType/SEND_PULSE_RESPONSE)<br/>\n    +      :ok<br/>\n    +      (throw (HBExecutionException. \"Invalid Response Type\"))))))<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Do we need the `acls` param here?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569700/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630631","html_url":"https://github.com/apache/storm/issues/5036#issuecomment-2612630631","issue_url":"https://api.github.com/repos/apache/storm/issues/5036","id":2612630631,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzA2MzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:32:29Z","updated_at":"2025-01-24T14:13:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/875#discussion_r45508189\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/875#discussion_r45508189</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/scheduler/Cluster.java &#8212;<br/>\n    @@ -461,6 +466,75 @@ public SupervisorDetails getSupervisorById(String nodeId) </p>\n{\n     return networkTopography;\n }\n\n<p>    +    /*<br/>\n    +    * Get heap memory usage for a worker's main process and logwriter process<br/>\n    +    * */<br/>\n    +    private Double getAssignedMemoryForSlot(Map topConf) {<br/>\n    +Double totalWorkerMemory = 0.0;<br/>\n    +<br/>\n    +String topologyWorkerChildopts = Utils.getString(topConf.get(Config.TOPOLOGY_WORKER_CHILDOPTS), null);<br/>\n    +String workerChildopts = Utils.getString(topConf.get(Config.WORKER_CHILDOPTS), null);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Both of these configs will return either a string or a list of strings.  We should support both options.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630639","html_url":"https://github.com/apache/storm/issues/5036#issuecomment-2612630639","issue_url":"https://api.github.com/repos/apache/storm/issues/5036","id":2612630639,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzA2Mzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:33:59Z","updated_at":"2025-01-24T14:13:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/875#discussion_r45508355\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/875#discussion_r45508355</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/utils/Utils.java &#8212;<br/>\n    @@ -764,5 +778,30 @@ public static long zipFileSize(File myFile) throws IOException{<br/>\n public static double zeroIfNaNOrInf(double x) </p>\n{\n     return (Double.isNaN(x) || Double.isInfinite(x)) ? 0.0 : x;\n }\n<p>    +<br/>\n    +    /**<br/>\n    +     * parses the arguments to extract jvm heap memory size.<br/>\n    +     * @param input<br/>\n    +     * @param defaultValue<br/>\n    +     * @return the value of the JVM heap memory setting in a java command.<br/>\n    +     */<br/>\n    +    public static Double parseWorkerChildOpts(String input, Double defaultValue) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I would prefer to have the name of this function indicate what it is parsing out of the childopts.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158503645","html_url":"https://github.com/apache/storm/pull/875#issuecomment-158503645","issue_url":"https://api.github.com/repos/apache/storm/issues/875","id":158503645,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODUwMzY0NQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:34:19Z","updated_at":"2015-11-20T19:34:19Z","author_association":"CONTRIBUTOR","body":"Just a few more comments.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158503645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630646","html_url":"https://github.com/apache/storm/issues/5036#issuecomment-2612630646","issue_url":"https://api.github.com/repos/apache/storm/issues/5036","id":2612630646,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzA2NDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:34:20Z","updated_at":"2025-01-24T14:13:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/875#issuecomment-158503645\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/875#issuecomment-158503645</a></p>\n\n<p>    Just a few more comments.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569706","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569706","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569706,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:48:17Z","updated_at":"2025-01-24T13:46:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45510058\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45510058</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/Config.java &#8212;<br/>\n    @@ -778,6 +792,47 @@<br/>\n public static final String UI_HTTPS_NEED_CLIENT_AUTH = \"ui.https.need.client.auth\";</p>\n\n<p> /**<br/>\n    +     * The host that Pacemaker is running on.<br/>\n    +     */<br/>\n    +    @isString<br/>\n    +    public static final String PACEMAKER_HOST = \"pacemaker.host\";<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The port Pacemaker should run on. Clients should<br/>\n    +     * connect to this port to submit or read heartbeats.<br/>\n    +     */<br/>\n    +    @isNumber<br/>\n    +    @isPositiveNumber<br/>\n    +    public static final String PACEMAKER_PORT = \"pacemaker.port\";<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The maximum number of threads that should be used by the Pacemaker.<br/>\n    +     * When Pacemaker gets loaded it will spawn new threads, up to <br/>\n    +     * this many total, to handle the load.<br/>\n    +     */<br/>\n    +    @isNumber<br/>\n    +    @isPositiveNumber<br/>\n    +    public static final String PACEMAKER_MAX_THREADS = \"pacemaker.max.threads\";<br/>\n    +<br/>\n    +    /**<br/>\n    +     * This parameter is used by the storm-deploy project to configure the<br/>\n    +     * jvm options for the pacemaker daemon.<br/>\n    +     */<br/>\n    +    @isString<br/>\n    +    public static final String PACEMAKER_CHILDOPTS = \"pacemaker.childopts\";<br/>\n    +<br/>\n    +    /**<br/>\n    +     * This should be one of \"DIGEST\", \"KERBEROS\", or \"NONE\"<br/>\n    +     * Determines the mode of authentication the pacemaker server and client use.<br/>\n    +     * The client must either match the server, or be NONE. In the case of NONE,<br/>\n    +     * no authentication is performed for the client, and if the server is running with<br/>\n    +     * DIGEST or KERBEROS, the client can only write to the server (no reads).<br/>\n    +     * This is intended to provide a primitive form of access-control.<br/>\n    +     */<br/>\n    +    @isString<br/>\n    +    public static final String PACEMAKER_AUTH_METHOD = \"pacemaker.auth.method\";<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    It would be nice to have a validator that explicitly tests the value beyond its type, but we have other configs that do the same thing.  If it becomes an issue, we can create a validator as part of another jira.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569715","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569715","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569715,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3MTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:49:39Z","updated_at":"2025-01-24T13:46:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45510242\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45510242</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/cluster/ClusterState.java &#8212;<br/>\n    @@ -0,0 +1,209 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import clojure.lang.IFn;<br/>\n    +import java.util.List;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +<br/>\n    +/**<br/>\n    + * ClusterState provides the API for the pluggable state store used by the<br/>\n    + * Storm daemons. Data is stored in path/value format, and the store supports<br/>\n    + * listing sub-paths at a given path.<br/>\n    + * All data should be available across all nodes with eventual consistency.<br/>\n    + *<br/>\n    + * IMPORTANT NOTE:<br/>\n    + * Heartbeats have different api calls used to interact with them. The root<br/>\n    + * path <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/check.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> may or may not be the same as the root path for the other api calls.<br/>\n    + *<br/>\n    + * For example, performing these two calls:<br/>\n    + *     set_data(\"/path\", data, acls);<br/>\n    + *     void set_worker_hb(\"/path\", heartbeat, acls);<br/>\n    + * may or may not cause a collision in \"/path\".<br/>\n    + * Never use the same paths with the <b>_hb</b> methods as you do with the others.<br/>\n    + */<br/>\n    +public interface ClusterState {<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Registers a callback function that gets called when CuratorEvents happen.<br/>\n    +     * @param callback is a clojure IFn that accepts the type - translated to<br/>\n    +     * clojure keyword as in zookeeper.clj - and the path: (callback type path)<br/>\n    +     * @return is an id that can be passed to unregister(...) to unregister the<br/>\n    +     * callback.<br/>\n    +     */<br/>\n    +    String register(IFn callback);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Unregisters a callback function that was registered with register(...).<br/>\n    +     * @param id is the String id that was returned from register(...).<br/>\n    +     */<br/>\n    +    void unregister(String id);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Path will be appended with a monotonically increasing integer, a new node<br/>\n    +     * will be created there, and data will be put at that node.<br/>\n    +     * @param path The path that the monotonically increasing integer suffix will<br/>\n    +     * be added to.<br/>\n    +     * @param data The data that will be written at the suffixed path's node.<br/>\n    +     * @param acls The acls to apply to the path. May be null.<br/>\n    +     * @return The path with the integer suffix appended.<br/>\n    +     */<br/>\n    +    String create_sequential(String path, byte[] data, List<ACL> acls);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Creates nodes for path and all its parents. Path elements are separated by<br/>\n    +     * a \"/\", as in *nix filesystem notation. Equivalent to mkdir -p in *nix.<br/>\n    +     * @param path The path to create, along with all its parents.<br/>\n    +     * @param acls The acls to apply to the path. May be null.<br/>\n    +     * @return path<br/>\n    +     */<br/>\n    +    String mkdirs(String path, List<ACL> acls);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Deletes the node at a given path, and any child nodes that may exist.<br/>\n    +     * @param path The path to delete<br/>\n    +     */<br/>\n    +    void delete_node(String path);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Creates an ephemeral node at path. Ephemeral nodes are destroyed<br/>\n    +     * by the store when the client disconnects.<br/>\n    +     * @param path The path where a node will be created.<br/>\n    +     * @param data The data to be written at the node.<br/>\n    +     * @param acls The acls to apply to the path. May be null.<br/>\n    +     * @return path<br/>\n    +     */<br/>\n    +    void set_ephemeral_node(String path, byte[] data, List<ACL> acls);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Doc says this is supposed to return the path?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569718","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569718","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569718,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3MTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:52:14Z","updated_at":"2025-01-24T13:46:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45510536\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45510536</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/cluster/ClusterState.java &#8212;<br/>\n    @@ -0,0 +1,209 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import clojure.lang.IFn;<br/>\n    +import java.util.List;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +<br/>\n    +/**<br/>\n    + * ClusterState provides the API for the pluggable state store used by the<br/>\n    + * Storm daemons. Data is stored in path/value format, and the store supports<br/>\n    + * listing sub-paths at a given path.<br/>\n    + * All data should be available across all nodes with eventual consistency.<br/>\n    + *<br/>\n    + * IMPORTANT NOTE:<br/>\n    + * Heartbeats have different api calls used to interact with them. The root<br/>\n    + * path <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/check.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> may or may not be the same as the root path for the other api calls.<br/>\n    + *<br/>\n    + * For example, performing these two calls:<br/>\n    + *     set_data(\"/path\", data, acls);<br/>\n    + *     void set_worker_hb(\"/path\", heartbeat, acls);<br/>\n    + * may or may not cause a collision in \"/path\".<br/>\n    + * Never use the same paths with the <b>_hb</b> methods as you do with the others.<br/>\n    + */<br/>\n    +public interface ClusterState {<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Registers a callback function that gets called when CuratorEvents happen.<br/>\n    +     * @param callback is a clojure IFn that accepts the type - translated to<br/>\n    +     * clojure keyword as in zookeeper.clj - and the path: (callback type path)<br/>\n    +     * @return is an id that can be passed to unregister(...) to unregister the<br/>\n    +     * callback.<br/>\n    +     */<br/>\n    +    String register(IFn callback);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Unregisters a callback function that was registered with register(...).<br/>\n    +     * @param id is the String id that was returned from register(...).<br/>\n    +     */<br/>\n    +    void unregister(String id);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Path will be appended with a monotonically increasing integer, a new node<br/>\n    +     * will be created there, and data will be put at that node.<br/>\n    +     * @param path The path that the monotonically increasing integer suffix will<br/>\n    +     * be added to.<br/>\n    +     * @param data The data that will be written at the suffixed path's node.<br/>\n    +     * @param acls The acls to apply to the path. May be null.<br/>\n    +     * @return The path with the integer suffix appended.<br/>\n    +     */<br/>\n    +    String create_sequential(String path, byte[] data, List<ACL> acls);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Creates nodes for path and all its parents. Path elements are separated by<br/>\n    +     * a \"/\", as in *nix filesystem notation. Equivalent to mkdir -p in *nix.<br/>\n    +     * @param path The path to create, along with all its parents.<br/>\n    +     * @param acls The acls to apply to the path. May be null.<br/>\n    +     * @return path<br/>\n    +     */<br/>\n    +    String mkdirs(String path, List<ACL> acls);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Deletes the node at a given path, and any child nodes that may exist.<br/>\n    +     * @param path The path to delete<br/>\n    +     */<br/>\n    +    void delete_node(String path);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Creates an ephemeral node at path. Ephemeral nodes are destroyed<br/>\n    +     * by the store when the client disconnects.<br/>\n    +     * @param path The path where a node will be created.<br/>\n    +     * @param data The data to be written at the node.<br/>\n    +     * @param acls The acls to apply to the path. May be null.<br/>\n    +     * @return path<br/>\n    +     */<br/>\n    +    void set_ephemeral_node(String path, byte[] data, List<ACL> acls);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Gets the 'version' of the node at a path. Optionally sets a watch<br/>\n    +     * on that node. The version should increase whenever a write happens.<br/>\n    +     * @param path The path to get the version of.<br/>\n    +     * @param watch Whether or not to set a watch on the path. Watched paths<br/>\n    +     * emit events which are consumed by functions registered with the<br/>\n    +     * register method. Very useful for catching updates to nodes.<br/>\n    +     * @return The integer version of this node.<br/>\n    +     */<br/>\n    +    Integer get_version(String path, boolean watch);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Check if a node exists and optionally set a watch on the path.<br/>\n    +     * @param path The path to check for the existence of a node.<br/>\n    +     * @param watch Whether or not to set a watch on the path. Watched paths<br/>\n    +     * emit events which are consumed by functions registered with the<br/>\n    +     * register method. Very useful for catching updates to nodes.<br/>\n    +     * @return Whether or not a node exists at path.<br/>\n    +     */<br/>\n    +    boolean node_exists(String path, boolean watch);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Get a list of paths of all the child nodes which exist immediately<br/>\n    +     * under path.<br/>\n    +     * @param path The path to look under<br/>\n    +     * @param watch Whether or not to set a watch on the path. Watched paths<br/>\n    +     * emit events which are consumed by functions registered with the<br/>\n    +     * register method. Very useful for catching updates to nodes.<br/>\n    +     * @return list of string paths under path.<br/>\n    +     */<br/>\n    +    List<String> get_children(String path, boolean watch);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Close the connection to the data store.<br/>\n    +     */<br/>\n    +    void close();<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Set the value of the node at path to data.<br/>\n    +     * @param path The path whose node we want to set.<br/>\n    +     * @param data The data to put in the node.<br/>\n    +     * @param acls The acls to apply to the path. May be null.<br/>\n    +     */<br/>\n    +    void set_data(String path, byte[] data, List<ACL> acls);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Get the data from the node at path<br/>\n    +     * @param path The path to look under<br/>\n    +     * @param watch Whether or not to set a watch on the path. Watched paths<br/>\n    +     * emit events which are consumed by functions registered with the<br/>\n    +     * register method. Very useful for catching updates to nodes.<br/>\n    +     * @return The data at the node.<br/>\n    +     */<br/>\n    +    byte[] get_data(String path, boolean watch);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Get the data at the node along with its version. Data is returned<br/>\n    +     * in an APersistentMap with clojure keyword keys :data and :version.<br/>\n    +     * @param path The path to look under<br/>\n    +     * @param watch Whether or not to set a watch on the path. Watched paths<br/>\n    +     * emit events which are consumed by functions registered with the<br/>\n    +     * register method. Very useful for catching updates to nodes.<br/>\n    +     * @return An APersistentMap in the form {:data data :version version}<br/>\n    +     */<br/>\n    +    APersistentMap get_data_with_version(String path, boolean watch);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Write a worker heartbeat at the path.<br/>\n    +     * @param path The path whose node we want to set.<br/>\n    +     * @param data The data to put in the node.<br/>\n    +     * @param acls The acls to apply to the path. May be null.<br/>\n    +     */<br/>\n    +    void set_worker_hb(String path, byte[] data, List<ACL> acls);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Get the heartbeat from the node at path<br/>\n    +     * @param path The path to look under<br/>\n    +     * @param watch Whether or not to set a watch on the path. Watched paths<br/>\n    +     * emit events which are consumed by functions registered with the<br/>\n    +     * register method. Very useful for catching updates to nodes.<br/>\n    +     * @return The heartbeat at the node.<br/>\n    +     */<br/>\n    +    byte[] get_worker_hb(String path, boolean watch);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Get a list of paths of all the child nodes which exist immediately<br/>\n    +     * under path. This is similar to get_children, but must be used for<br/>\n    +     * any nodes<br/>\n    +     * @param path The path to look under<br/>\n    +     * @param watch Whether or not to set a watch on the path. Watched paths<br/>\n    +     * emit events which are consumed by functions registered with the<br/>\n    +     * register method. Very useful for catching updates to nodes.<br/>\n    +     * @return list of string paths under path.<br/>\n    +     */<br/>\n    +    List<String> get_worker_hb_children(String path, boolean watch);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Deletes the heartbeat at a given path, and any child nodes that may exist.<br/>\n    +     * @param path The path to delete.<br/>\n    +     */<br/>\n    +    void delete_worker_hb(String path);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Add a ClusterStateListener to the connection.<br/>\n    +     * @param listener A ClusterStateListener to handle changing cluster state<br/>\n    +     * events.<br/>\n    +     */<br/>\n    +    void add_listener(ClusterStateListener listener);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Force consistency on a path. Any writes committed on the path before<br/>\n    +     * this call will be completely propagated when it returns.<br/>\n    +     * @param The path to synchronize.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    minor: `path to synchronize` (evidently the first word is the param name here)</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569718/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569722","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569722","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569722,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3MjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:53:53Z","updated_at":"2025-01-24T13:46:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45510787\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45510787</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/cluster/ClusterStateFactory.java &#8212;<br/>\n    @@ -0,0 +1,28 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import java.util.List;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +<br/>\n    +public interface ClusterStateFactory {<br/>\n    +    <br/>\n    +    public ClusterState mkState(APersistentMap config, APersistentMap auth_conf, List<ACL> acls, ClusterStateContext context);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    minor: `public` not needed here.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569726","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569726","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569726,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3MjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:58:06Z","updated_at":"2025-01-24T13:46:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45511278\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45511278</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java &#8212;<br/>\n    @@ -243,7 +243,7 @@ public void send(Iterator<TaskMessage> msgs) {<br/>\n     if (closing) {<br/>\n int numMessages = iteratorSize(msgs);<br/>\n LOG.error(\"discarding {} messages because the Netty client to {} is being closed\", numMessages,</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>dstAddressPrefixedName);<br/>\n    +      dstAddressPrefixedName);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    The only changes to this file are white-space.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569726/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569731","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569731","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569731,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3MzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T19:59:33Z","updated_at":"2025-01-24T13:46:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45511484\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45511484</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/ControlMessage.java &#8212;<br/>\n    @@ -57,14 +57,19 @@ int encodeLength() {</p>\n<ul>\n\t<li>encode the current Control Message into a channel buffer</li>\n\t<li>@throws Exception<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>ChannelBuffer buffer() throws IOException {<br/>\n    +    public ChannelBuffer buffer() throws IOException {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    May as well fix the javadoc `@throws` here.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569731/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569734","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569734","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569734,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3MzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:00:17Z","updated_at":"2025-01-24T13:46:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45511599\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45511599</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/INettySerializable.java &#8212;<br/>\n    @@ -0,0 +1,26 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.messaging.netty;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import org.jboss.netty.buffer.ChannelBuffer;<br/>\n    +<br/>\n    +public interface INettySerializable {<br/>\n    +    public ChannelBuffer buffer() throws IOException;<br/>\n    +    public int encodeLength();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    methods don't need `public` here</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569737","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569737","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569737,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3Mzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:02:21Z","updated_at":"2025-01-24T13:46:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45511827\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45511827</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/KerberosSaslNettyClient.java &#8212;<br/>\n    @@ -0,0 +1,204 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.messaging.netty;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.security.auth.AuthUtils;<br/>\n    +import java.io.IOException;<br/>\n    +import java.security.Principal;<br/>\n    +import java.security.PrivilegedActionException;<br/>\n    +import java.security.PrivilegedExceptionAction;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.TreeMap;<br/>\n    +import javax.security.auth.Subject;<br/>\n    +import javax.security.auth.callback.Callback;<br/>\n    +import javax.security.auth.callback.CallbackHandler;<br/>\n    +import javax.security.auth.callback.UnsupportedCallbackException;<br/>\n    +import javax.security.auth.kerberos.KerberosTicket;<br/>\n    +import javax.security.auth.login.Configuration;<br/>\n    +import javax.security.auth.login.LoginException;<br/>\n    +import javax.security.sasl.Sasl;<br/>\n    +import javax.security.sasl.SaslClient;<br/>\n    +import javax.security.sasl.SaslException;<br/>\n    +import org.apache.zookeeper.Login;<br/>\n    +import org.apache.zookeeper.server.auth.KerberosName;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +/**<br/>\n    + * Implements SASL logic for storm worker client processes.<br/>\n    + */<br/>\n    +public class KerberosSaslNettyClient {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory<br/>\n    +.getLogger(KerberosSaslNettyClient.class);<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Used to respond to server's counterpart, SaslServer with SASL tokens<br/>\n    +     * represented as byte arrays.<br/>\n    +     */<br/>\n    +    private SaslClient saslClient;<br/>\n    +    private Subject subject;<br/>\n    +    private String jaas_section;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Create a KerberosSaslNettyClient for authentication with servers.<br/>\n    +     */<br/>\n    +    public KerberosSaslNettyClient(Map storm_conf, String jaas_section) {<br/>\n    +LOG.debug(\"KerberosSaslNettyClient: Creating SASL {} client to authenticate to server \",<br/>\n    +  SaslUtils.KERBEROS);<br/>\n    +<br/>\n    +LOG.info(\"Creating Kerberos Client.\");<br/>\n    +<br/>\n    +Configuration login_conf;<br/>\n    +try </p>\n{\n    +    login_conf = AuthUtils.GetConfiguration(storm_conf);\n    +}\n<p>    +catch (Throwable t) </p>\n{\n    +    LOG.error(\"Failed to get login_conf: \", t);\n    +    throw t;\n    +}\n<p>    +LOG.debug(\"KerberosSaslNettyClient: authmethod {}\", SaslUtils.KERBEROS);<br/>\n    +<br/>\n    +SaslClientCallbackHandler ch = new SaslClientCallbackHandler();<br/>\n    +<br/>\n    +subject = null;<br/>\n    +try {<br/>\n    +    LOG.debug(\"Setting Configuration to login_config: {}\", login_conf);<br/>\n    +    //specify a configuration object to be used<br/>\n    +    Configuration.setConfiguration(login_conf);<br/>\n    +    //now login<br/>\n    +    LOG.debug(\"Trying to login.\");<br/>\n    +    Login login = new Login(jaas_section, ch);<br/>\n    +    subject = login.getSubject();<br/>\n    +    LOG.debug(\"Got Subject: {}\", subject.toString());<br/>\n    +} catch (LoginException ex) </p>\n{\n    +    LOG.error(\"Client failed to login in principal:\" + ex, ex);\n    +    throw new RuntimeException(ex);\n    +}\n<p>    +<br/>\n    +//check the credential of our principal<br/>\n    +if (subject.getPrivateCredentials(KerberosTicket.class).isEmpty()) </p>\n{\n    +    LOG.error(\"Failed to verify user principal.\");\n    +    throw new RuntimeException(\"Fail to verify user principal with section \\\"\" +\n    +       jaas_section +\n    +       \"\\\" in login configuration file \" +\n    +       login_conf);\n    +}\n<p>    +<br/>\n    +String serviceName = null;<br/>\n    +try </p>\n{\n    +    serviceName = AuthUtils.get(login_conf, jaas_section, \"serviceName\");\n    +}\n<p>    +catch (IOException e) </p>\n{\n    +    LOG.error(\"Failed to get service name.\", e);\n    +    throw new RuntimeException(e);\n    +}\n<p>    +<br/>\n    +try {<br/>\n    +    Principal principal = (Principal)subject.getPrincipals().toArray()<span class=\"error\">&#91;0&#93;</span>;<br/>\n    +    final String fPrincipalName = principal.getName();<br/>\n    +    KerberosName kerbName = new KerberosName(principal.getName());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    `kerbName` unused?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569743","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569743","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569743,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3NDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:04:12Z","updated_at":"2025-01-24T13:46:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45512076\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45512076</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/KerberosSaslNettyServer.java &#8212;<br/>\n    @@ -0,0 +1,223 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.messaging.netty;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    unused?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569743/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569748","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569748","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569748,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3NDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:05:21Z","updated_at":"2025-01-24T13:46:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45512204\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45512204</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/KerberosSaslNettyServer.java &#8212;<br/>\n    @@ -0,0 +1,223 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.messaging.netty;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.security.auth.AuthUtils;<br/>\n    +import backtype.storm.security.auth.KerberosPrincipalToLocal;<br/>\n    +import java.io.IOException;<br/>\n    +import java.security.Principal;<br/>\n    +import java.security.PrivilegedActionException;<br/>\n    +import java.security.PrivilegedExceptionAction;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.TreeMap;<br/>\n    +import javax.security.auth.Subject;<br/>\n    +import javax.security.auth.callback.Callback;<br/>\n    +import javax.security.auth.callback.CallbackHandler;<br/>\n    +import javax.security.auth.callback.UnsupportedCallbackException;<br/>\n    +import javax.security.auth.kerberos.KerberosPrincipal;<br/>\n    +import javax.security.auth.kerberos.KerberosTicket;<br/>\n    +import javax.security.auth.login.Configuration;<br/>\n    +import javax.security.auth.login.LoginException;<br/>\n    +import javax.security.sasl.AuthorizeCallback;<br/>\n    +import javax.security.sasl.Sasl;<br/>\n    +import javax.security.sasl.SaslException;<br/>\n    +import javax.security.sasl.SaslServer;<br/>\n    +import org.apache.zookeeper.Login;<br/>\n    +import org.apache.zookeeper.server.auth.KerberosName;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +<br/>\n    +class KerberosSaslNettyServer {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory<br/>\n    +.getLogger(KerberosSaslNettyServer.class);<br/>\n    +<br/>\n    +    private SaslServer saslServer;<br/>\n    +    private Subject subject;<br/>\n    +    private String jaas_section;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    unused?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569751","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569751","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569751,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3NTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:06:18Z","updated_at":"2025-01-24T13:46:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45512296\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45512296</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/KerberosSaslNettyServer.java &#8212;<br/>\n    @@ -0,0 +1,223 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.messaging.netty;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.security.auth.AuthUtils;<br/>\n    +import backtype.storm.security.auth.KerberosPrincipalToLocal;<br/>\n    +import java.io.IOException;<br/>\n    +import java.security.Principal;<br/>\n    +import java.security.PrivilegedActionException;<br/>\n    +import java.security.PrivilegedExceptionAction;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.TreeMap;<br/>\n    +import javax.security.auth.Subject;<br/>\n    +import javax.security.auth.callback.Callback;<br/>\n    +import javax.security.auth.callback.CallbackHandler;<br/>\n    +import javax.security.auth.callback.UnsupportedCallbackException;<br/>\n    +import javax.security.auth.kerberos.KerberosPrincipal;<br/>\n    +import javax.security.auth.kerberos.KerberosTicket;<br/>\n    +import javax.security.auth.login.Configuration;<br/>\n    +import javax.security.auth.login.LoginException;<br/>\n    +import javax.security.sasl.AuthorizeCallback;<br/>\n    +import javax.security.sasl.Sasl;<br/>\n    +import javax.security.sasl.SaslException;<br/>\n    +import javax.security.sasl.SaslServer;<br/>\n    +import org.apache.zookeeper.Login;<br/>\n    +import org.apache.zookeeper.server.auth.KerberosName;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +<br/>\n    +class KerberosSaslNettyServer {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory<br/>\n    +.getLogger(KerberosSaslNettyServer.class);<br/>\n    +<br/>\n    +    private SaslServer saslServer;<br/>\n    +    private Subject subject;<br/>\n    +    private String jaas_section;<br/>\n    +    private List<String> authorizedUsers;<br/>\n    +<br/>\n    +    KerberosSaslNettyServer(Map storm_conf, String jaas_section, List<String> authorizedUsers) {<br/>\n    +this.authorizedUsers = authorizedUsers;<br/>\n    +LOG.debug(\"Getting Configuration.\");<br/>\n    +Configuration login_conf;<br/>\n    +try </p>\n{\n    +    login_conf = AuthUtils.GetConfiguration(storm_conf);\n    +}\n<p>    +catch (Throwable t) </p>\n{\n    +    LOG.error(\"Failed to get login_conf: \", t);\n    +    throw t;\n    +}\n<p>    +<br/>\n    +LOG.debug(\"KerberosSaslNettyServer: authmethod {}\", SaslUtils.KERBEROS);<br/>\n    +<br/>\n    +KerberosSaslCallbackHandler ch = new KerberosSaslNettyServer.KerberosSaslCallbackHandler(storm_conf, authorizedUsers);<br/>\n    +<br/>\n    +//login our principal<br/>\n    +subject = null;<br/>\n    +try {<br/>\n    +    LOG.debug(\"Setting Configuration to login_config: {}\", login_conf);<br/>\n    +    //specify a configuration object to be used<br/>\n    +    Configuration.setConfiguration(login_conf);<br/>\n    +    //now login<br/>\n    +    LOG.debug(\"Trying to login.\");<br/>\n    +    Login login = new Login(jaas_section, ch);<br/>\n    +    subject = login.getSubject();<br/>\n    +    LOG.debug(\"Got Subject: {}\", subject.toString());<br/>\n    +} catch (LoginException ex) </p>\n{\n    +    LOG.error(\"Server failed to login in principal:\", ex);\n    +    throw new RuntimeException(ex);\n    +}\n<p>    +<br/>\n    +//check the credential of our principal<br/>\n    +if (subject.getPrivateCredentials(KerberosTicket.class).isEmpty()) </p>\n{\n    +    LOG.error(\"Failed to verifyuser principal.\");\n    +    throw new RuntimeException(\"Fail to verify user principal with section \\\"\"\n    +       + jaas_section\n    +       + \"\\\" in login configuration file \"\n    +       + login_conf);\n    +}\n<p>    +<br/>\n    +try {<br/>\n    +    LOG.info(\"Creating Kerberos Server.\");<br/>\n    +    final CallbackHandler fch = ch;<br/>\n    +    Principal p = (Principal)subject.getPrincipals().toArray()<span class=\"error\">&#91;0&#93;</span>;<br/>\n    +    KerberosName kName = new KerberosName(p.getName());<br/>\n    +    final String fHost = kName.getHostName();<br/>\n    +    final String fServiceName = kName.getServiceName();<br/>\n    +    LOG.debug(\"Server with host: {}\", fHost);<br/>\n    +    saslServer =<br/>\n    +Subject.doAs(subject, new PrivilegedExceptionAction<SaslServer>() {<br/>\n    +public SaslServer run() {<br/>\n    +    try </p>\n{\n    +Map<String, String> props = new TreeMap<String,String>();\n    +props.put(Sasl.QOP, \"auth\");\n    +props.put(Sasl.SERVER_AUTH, \"false\");\n    +return Sasl.createSaslServer(SaslUtils.KERBEROS,\n    +     fServiceName,\n    +     fHost, props, fch);\n    +    }\n<p>    +    catch (Exception e) </p>\n{\n    +LOG.error(\"Subject failed to create sasl server.\", e);\n    +return null;\n    +    }\n<p>    +}<br/>\n    +    });<br/>\n    +    LOG.info(\"Got Server: {}\", saslServer);<br/>\n    +<br/>\n    +} catch (PrivilegedActionException e) </p>\n{\n    +    LOG.error(\"KerberosSaslNettyServer: Could not create SaslServer: \", e);\n    +    throw new RuntimeException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public boolean isComplete() </p>\n{\n    +return saslServer.isComplete();\n    +    }\n<p>    +<br/>\n    +    public String getUserName() </p>\n{\n    +return saslServer.getAuthorizationID();\n    +    }\n<p>    +<br/>\n    +    private String getPrincipal(Subject subject) {<br/>\n    +Set<Principal> principals = (Set<Principal>)subject.getPrincipals();<br/>\n    +if (principals==null || principals.size()<1) </p>\n{\n    +    LOG.info(\"No principal found in login subject\");\n    +    return null;\n    +}\n<p>    +return ((Principal)(principals.toArray()<span class=\"error\">&#91;0&#93;</span>)).getName();<br/>\n    +    }<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This private method does not appear to be used.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569755","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569755","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569755,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3NTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:06:44Z","updated_at":"2025-01-24T13:46:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45512326\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45512326</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/KerberosSaslNettyServer.java &#8212;<br/>\n    @@ -0,0 +1,223 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.messaging.netty;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.security.auth.AuthUtils;<br/>\n    +import backtype.storm.security.auth.KerberosPrincipalToLocal;<br/>\n    +import java.io.IOException;<br/>\n    +import java.security.Principal;<br/>\n    +import java.security.PrivilegedActionException;<br/>\n    +import java.security.PrivilegedExceptionAction;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.TreeMap;<br/>\n    +import javax.security.auth.Subject;<br/>\n    +import javax.security.auth.callback.Callback;<br/>\n    +import javax.security.auth.callback.CallbackHandler;<br/>\n    +import javax.security.auth.callback.UnsupportedCallbackException;<br/>\n    +import javax.security.auth.kerberos.KerberosPrincipal;<br/>\n    +import javax.security.auth.kerberos.KerberosTicket;<br/>\n    +import javax.security.auth.login.Configuration;<br/>\n    +import javax.security.auth.login.LoginException;<br/>\n    +import javax.security.sasl.AuthorizeCallback;<br/>\n    +import javax.security.sasl.Sasl;<br/>\n    +import javax.security.sasl.SaslException;<br/>\n    +import javax.security.sasl.SaslServer;<br/>\n    +import org.apache.zookeeper.Login;<br/>\n    +import org.apache.zookeeper.server.auth.KerberosName;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +<br/>\n    +class KerberosSaslNettyServer {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory<br/>\n    +.getLogger(KerberosSaslNettyServer.class);<br/>\n    +<br/>\n    +    private SaslServer saslServer;<br/>\n    +    private Subject subject;<br/>\n    +    private String jaas_section;<br/>\n    +    private List<String> authorizedUsers;<br/>\n    +<br/>\n    +    KerberosSaslNettyServer(Map storm_conf, String jaas_section, List<String> authorizedUsers) {<br/>\n    +this.authorizedUsers = authorizedUsers;<br/>\n    +LOG.debug(\"Getting Configuration.\");<br/>\n    +Configuration login_conf;<br/>\n    +try </p>\n{\n    +    login_conf = AuthUtils.GetConfiguration(storm_conf);\n    +}\n<p>    +catch (Throwable t) </p>\n{\n    +    LOG.error(\"Failed to get login_conf: \", t);\n    +    throw t;\n    +}\n<p>    +<br/>\n    +LOG.debug(\"KerberosSaslNettyServer: authmethod {}\", SaslUtils.KERBEROS);<br/>\n    +<br/>\n    +KerberosSaslCallbackHandler ch = new KerberosSaslNettyServer.KerberosSaslCallbackHandler(storm_conf, authorizedUsers);<br/>\n    +<br/>\n    +//login our principal<br/>\n    +subject = null;<br/>\n    +try {<br/>\n    +    LOG.debug(\"Setting Configuration to login_config: {}\", login_conf);<br/>\n    +    //specify a configuration object to be used<br/>\n    +    Configuration.setConfiguration(login_conf);<br/>\n    +    //now login<br/>\n    +    LOG.debug(\"Trying to login.\");<br/>\n    +    Login login = new Login(jaas_section, ch);<br/>\n    +    subject = login.getSubject();<br/>\n    +    LOG.debug(\"Got Subject: {}\", subject.toString());<br/>\n    +} catch (LoginException ex) </p>\n{\n    +    LOG.error(\"Server failed to login in principal:\", ex);\n    +    throw new RuntimeException(ex);\n    +}\n<p>    +<br/>\n    +//check the credential of our principal<br/>\n    +if (subject.getPrivateCredentials(KerberosTicket.class).isEmpty()) </p>\n{\n    +    LOG.error(\"Failed to verifyuser principal.\");\n    +    throw new RuntimeException(\"Fail to verify user principal with section \\\"\"\n    +       + jaas_section\n    +       + \"\\\" in login configuration file \"\n    +       + login_conf);\n    +}\n<p>    +<br/>\n    +try {<br/>\n    +    LOG.info(\"Creating Kerberos Server.\");<br/>\n    +    final CallbackHandler fch = ch;<br/>\n    +    Principal p = (Principal)subject.getPrincipals().toArray()<span class=\"error\">&#91;0&#93;</span>;<br/>\n    +    KerberosName kName = new KerberosName(p.getName());<br/>\n    +    final String fHost = kName.getHostName();<br/>\n    +    final String fServiceName = kName.getServiceName();<br/>\n    +    LOG.debug(\"Server with host: {}\", fHost);<br/>\n    +    saslServer =<br/>\n    +Subject.doAs(subject, new PrivilegedExceptionAction<SaslServer>() {<br/>\n    +public SaslServer run() {<br/>\n    +    try </p>\n{\n    +Map<String, String> props = new TreeMap<String,String>();\n    +props.put(Sasl.QOP, \"auth\");\n    +props.put(Sasl.SERVER_AUTH, \"false\");\n    +return Sasl.createSaslServer(SaslUtils.KERBEROS,\n    +     fServiceName,\n    +     fHost, props, fch);\n    +    }\n<p>    +    catch (Exception e) </p>\n{\n    +LOG.error(\"Subject failed to create sasl server.\", e);\n    +return null;\n    +    }\n<p>    +}<br/>\n    +    });<br/>\n    +    LOG.info(\"Got Server: {}\", saslServer);<br/>\n    +<br/>\n    +} catch (PrivilegedActionException e) </p>\n{\n    +    LOG.error(\"KerberosSaslNettyServer: Could not create SaslServer: \", e);\n    +    throw new RuntimeException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public boolean isComplete() </p>\n{\n    +return saslServer.isComplete();\n    +    }\n<p>    +<br/>\n    +    public String getUserName() </p>\n{\n    +return saslServer.getAuthorizationID();\n    +    }\n<p>    +<br/>\n    +    private String getPrincipal(Subject subject) {<br/>\n    +Set<Principal> principals = (Set<Principal>)subject.getPrincipals();<br/>\n    +if (principals==null || principals.size()<1) </p>\n{\n    +    LOG.info(\"No principal found in login subject\");\n    +    return null;\n    +}\n<p>    +return ((Principal)(principals.toArray()<span class=\"error\">&#91;0&#93;</span>)).getName();<br/>\n    +    }<br/>\n    +<br/>\n    +    /** CallbackHandler for SASL DIGEST-MD5 mechanism */<br/>\n    +    public static class KerberosSaslCallbackHandler implements CallbackHandler {<br/>\n    +<br/>\n    +/** Used to authenticate the clients */<br/>\n    +private Map config;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    unused?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569764","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569764","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569764,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3NjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:07:59Z","updated_at":"2025-01-24T13:46:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45512472\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45512472</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/KerberosSaslServerHandler.java &#8212;<br/>\n    @@ -0,0 +1,131 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.messaging.netty;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import org.jboss.netty.channel.Channel;<br/>\n    +import org.jboss.netty.channel.ChannelHandlerContext;<br/>\n    +import org.jboss.netty.channel.Channels;<br/>\n    +import org.jboss.netty.channel.ExceptionEvent;<br/>\n    +import org.jboss.netty.channel.MessageEvent;<br/>\n    +import org.jboss.netty.channel.SimpleChannelUpstreamHandler;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +public class KerberosSaslServerHandler extends SimpleChannelUpstreamHandler {<br/>\n    +<br/>\n    +    ISaslServer server;<br/>\n    +    /** Used for client or server's token to send or receive from each other. */<br/>\n    +    private Map storm_conf;<br/>\n    +    private String jaas_section;<br/>\n    +    private List<String> authorizedUsers;<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory<br/>\n    +.getLogger(KerberosSaslServerHandler.class);<br/>\n    +<br/>\n    +    public KerberosSaslServerHandler(ISaslServer server, Map storm_conf, String jaas_section, List<String> authorizedUsers) throws IOException </p>\n{\n    +this.server = server;\n    +this.storm_conf = storm_conf;\n    +this.jaas_section = jaas_section;\n    +this.authorizedUsers = authorizedUsers;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void messageReceived(ChannelHandlerContext ctx, MessageEvent e)<br/>\n    +throws Exception {<br/>\n    +Object msg = e.getMessage();<br/>\n    +if (msg == null)<br/>\n    +    return;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    minor: add braces to the `if`</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569767","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569767","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569767,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3Njc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:10:24Z","updated_at":"2025-01-24T13:46:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45512711\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45512711</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/KerberosSaslServerHandler.java &#8212;<br/>\n    @@ -0,0 +1,131 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.messaging.netty;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import org.jboss.netty.channel.Channel;<br/>\n    +import org.jboss.netty.channel.ChannelHandlerContext;<br/>\n    +import org.jboss.netty.channel.Channels;<br/>\n    +import org.jboss.netty.channel.ExceptionEvent;<br/>\n    +import org.jboss.netty.channel.MessageEvent;<br/>\n    +import org.jboss.netty.channel.SimpleChannelUpstreamHandler;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +public class KerberosSaslServerHandler extends SimpleChannelUpstreamHandler {<br/>\n    +<br/>\n    +    ISaslServer server;<br/>\n    +    /** Used for client or server's token to send or receive from each other. */<br/>\n    +    private Map storm_conf;<br/>\n    +    private String jaas_section;<br/>\n    +    private List<String> authorizedUsers;<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory<br/>\n    +.getLogger(KerberosSaslServerHandler.class);<br/>\n    +<br/>\n    +    public KerberosSaslServerHandler(ISaslServer server, Map storm_conf, String jaas_section, List<String> authorizedUsers) throws IOException </p>\n{\n    +this.server = server;\n    +this.storm_conf = storm_conf;\n    +this.jaas_section = jaas_section;\n    +this.authorizedUsers = authorizedUsers;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void messageReceived(ChannelHandlerContext ctx, MessageEvent e)<br/>\n    +throws Exception {<br/>\n    +Object msg = e.getMessage();<br/>\n    +if (msg == null)<br/>\n    +    return;<br/>\n    +<br/>\n    +Channel channel = ctx.getChannel();<br/>\n    +<br/>\n    +<br/>\n    +if (msg instanceof SaslMessageToken) {<br/>\n    +    // initialize server-side SASL functionality, if we haven't yet<br/>\n    +    // (in which case we are looking at the first SASL message from the<br/>\n    +    // client).<br/>\n    +    try {<br/>\n    +LOG.debug(\"Got SaslMessageToken!\");<br/>\n    +<br/>\n    +KerberosSaslNettyServer saslNettyServer = KerberosSaslNettyServerState.getKerberosSaslNettyServer<br/>\n    +    .get(channel);<br/>\n    +if (saslNettyServer == null) {<br/>\n    +    LOG.debug(\"No saslNettyServer for {}  yet; creating now, with topology token: \", channel);<br/>\n    +    try </p>\n{\n    +saslNettyServer = new KerberosSaslNettyServer(storm_conf, jaas_section, authorizedUsers);\n    +    }\n<p> catch (RuntimeException ioe) {<br/>\n    +LOG.error(\"Error occurred while creating saslNettyServer on server {} for client {}\",<br/>\n    +  channel.getLocalAddress(), channel.getRemoteAddress());<br/>\n    +saslNettyServer = null;<br/>\n    +    }<br/>\n    +<br/>\n    +    KerberosSaslNettyServerState.getKerberosSaslNettyServer.set(channel,<br/>\n    +saslNettyServer);<br/>\n    +} else {<br/>\n    +    LOG.debug(\"Found existing saslNettyServer on server: {} for client {}\",<br/>\n    +      channel.getLocalAddress(), channel.getRemoteAddress());<br/>\n    +}<br/>\n    +<br/>\n    +byte[] responseBytes = saslNettyServer.response(((SaslMessageToken) msg)<br/>\n    +.getSaslToken());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    If we catch the RTE above, we set `saslNettyServer = null` (even though it was already), and so at this line we would get a NullPointerException.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569767/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569772","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569772","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569772,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3NzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:12:02Z","updated_at":"2025-01-24T13:46:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45512856\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45512856</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/KerberosSaslServerHandler.java &#8212;<br/>\n    @@ -0,0 +1,131 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.messaging.netty;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import org.jboss.netty.channel.Channel;<br/>\n    +import org.jboss.netty.channel.ChannelHandlerContext;<br/>\n    +import org.jboss.netty.channel.Channels;<br/>\n    +import org.jboss.netty.channel.ExceptionEvent;<br/>\n    +import org.jboss.netty.channel.MessageEvent;<br/>\n    +import org.jboss.netty.channel.SimpleChannelUpstreamHandler;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +public class KerberosSaslServerHandler extends SimpleChannelUpstreamHandler {<br/>\n    +<br/>\n    +    ISaslServer server;<br/>\n    +    /** Used for client or server's token to send or receive from each other. */<br/>\n    +    private Map storm_conf;<br/>\n    +    private String jaas_section;<br/>\n    +    private List<String> authorizedUsers;<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory<br/>\n    +.getLogger(KerberosSaslServerHandler.class);<br/>\n    +<br/>\n    +    public KerberosSaslServerHandler(ISaslServer server, Map storm_conf, String jaas_section, List<String> authorizedUsers) throws IOException </p>\n{\n    +this.server = server;\n    +this.storm_conf = storm_conf;\n    +this.jaas_section = jaas_section;\n    +this.authorizedUsers = authorizedUsers;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void messageReceived(ChannelHandlerContext ctx, MessageEvent e)<br/>\n    +throws Exception {<br/>\n    +Object msg = e.getMessage();<br/>\n    +if (msg == null)<br/>\n    +    return;<br/>\n    +<br/>\n    +Channel channel = ctx.getChannel();<br/>\n    +<br/>\n    +<br/>\n    +if (msg instanceof SaslMessageToken) {<br/>\n    +    // initialize server-side SASL functionality, if we haven't yet<br/>\n    +    // (in which case we are looking at the first SASL message from the<br/>\n    +    // client).<br/>\n    +    try {<br/>\n    +LOG.debug(\"Got SaslMessageToken!\");<br/>\n    +<br/>\n    +KerberosSaslNettyServer saslNettyServer = KerberosSaslNettyServerState.getKerberosSaslNettyServer<br/>\n    +    .get(channel);<br/>\n    +if (saslNettyServer == null) {<br/>\n    +    LOG.debug(\"No saslNettyServer for {}  yet; creating now, with topology token: \", channel);<br/>\n    +    try </p>\n{\n    +saslNettyServer = new KerberosSaslNettyServer(storm_conf, jaas_section, authorizedUsers);\n    +    }\n<p> catch (RuntimeException ioe) {<br/>\n    +LOG.error(\"Error occurred while creating saslNettyServer on server {} for client {}\",<br/>\n    +  channel.getLocalAddress(), channel.getRemoteAddress());<br/>\n    +saslNettyServer = null;<br/>\n    +    }<br/>\n    +<br/>\n    +    KerberosSaslNettyServerState.getKerberosSaslNettyServer.set(channel,<br/>\n    +saslNettyServer);<br/>\n    +} else {<br/>\n    +    LOG.debug(\"Found existing saslNettyServer on server: {} for client {}\",<br/>\n    +      channel.getLocalAddress(), channel.getRemoteAddress());<br/>\n    +}<br/>\n    +<br/>\n    +byte[] responseBytes = saslNettyServer.response(((SaslMessageToken) msg)<br/>\n    +.getSaslToken());<br/>\n    +<br/>\n    +SaslMessageToken saslTokenMessageRequest = new SaslMessageToken(responseBytes);<br/>\n    +<br/>\n    +if(saslTokenMessageRequest.getSaslToken() == null) </p>\n{\n    +    channel.write(ControlMessage.SASL_COMPLETE_REQUEST);\n    +}\n<p> else </p>\n{\n    +    // Send response to client.\n    +    channel.write(saslTokenMessageRequest);\n    +}\n<p>    +<br/>\n    +if (saslNettyServer.isComplete()) {<br/>\n    +    // If authentication of client is complete, we will also send a<br/>\n    +    // SASL-Complete message to the client.<br/>\n    +    LOG.info(\"SASL authentication is complete for client with username: {}\",<br/>\n    +     saslNettyServer.getUserName());<br/>\n    +    channel.write(ControlMessage.SASL_COMPLETE_REQUEST);<br/>\n    +    LOG.debug(\"Removing SaslServerHandler from pipeline since SASL authentication is complete.\");<br/>\n    +    ctx.getPipeline().remove(this);<br/>\n    +    server.authenticated(channel);<br/>\n    +}<br/>\n    +return;<br/>\n    +    }<br/>\n    +    catch (Exception ex) </p>\n{\n    +LOG.error(\"Failed to handle SaslMessageToken: \", ex);\n    +throw ex;\n    +    }\n<p>    +} else {<br/>\n    +    // Client should not be sending other-than-SASL messages before<br/>\n    +    // SaslServerHandler has removed itself from the pipeline. Such<br/>\n    +    // non-SASL requests will be denied by the Authorize channel handler<br/>\n    +    // (the next handler upstream in the server pipeline) if SASL<br/>\n    +    // authentication has not completed.<br/>\n    +    LOG.warn(\"Sending upstream an unexpected non-SASL message : {}\",<br/>\n    +     msg);<br/>\n    +    Channels.fireMessageReceived(ctx, msg);<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e) {<br/>\n    +if(server != null) server.closeChannel(e.getChannel());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    minor: braces on `if`</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569772/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569774","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569774","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569774,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3NzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:14:21Z","updated_at":"2025-01-24T13:46:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45513090\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45513090</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslMessageToken.java &#8212;<br/>\n    @@ -63,7 +72,8 @@ public void setSaslToken(byte[] token) </p>\n{\n     this.token = token;\n }\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>int encodeLength() {<br/>\n    +\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    extra line</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569774/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569780","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569780","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569780,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3ODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:14:41Z","updated_at":"2025-01-24T13:46:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45513132\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45513132</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslMessageToken.java &#8212;<br/>\n    @@ -74,20 +84,32 @@ int encodeLength() {</p>\n<ul>\n\t<li></li>\n\t<li>@throws Exception<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>ChannelBuffer buffer() throws Exception {<br/>\n    +    public ChannelBuffer buffer() throws IOException {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    update javadoc with new exception</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569780/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569786","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569786","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569786,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3ODY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:15:13Z","updated_at":"2025-01-24T13:46:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45513199\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45513199</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslMessageToken.java &#8212;<br/>\n    @@ -74,20 +84,32 @@ int encodeLength() {</p>\n<ul>\n\t<li></li>\n\t<li>@throws Exception<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>ChannelBuffer buffer() throws Exception {<br/>\n    +    public ChannelBuffer buffer() throws IOException {<br/>\n     ChannelBufferOutputStream bout = new ChannelBufferOutputStream(<br/>\n     ChannelBuffers.directBuffer(encodeLength()));</li>\n\t<li>short identifier = -500;<br/>\n     int payload_len = 0;<br/>\n     if (token != null)<br/>\n payload_len = token.length;</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>bout.writeShort(identifier);</li>\n\t<li>bout.writeInt(payload_len);<br/>\n    +bout.writeShort(IDENTIFIER);<br/>\n    +bout.writeInt((int) payload_len);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    `(int)` cast not needed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569786/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569793","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569793","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569793,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3OTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:16:16Z","updated_at":"2025-01-24T13:46:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45513302\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45513302</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslMessageToken.java &#8212;<br/>\n    @@ -74,20 +84,32 @@ int encodeLength() {</p>\n<ul>\n\t<li></li>\n\t<li>@throws Exception<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>ChannelBuffer buffer() throws Exception {<br/>\n    +    public ChannelBuffer buffer() throws IOException {<br/>\n     ChannelBufferOutputStream bout = new ChannelBufferOutputStream(<br/>\n     ChannelBuffers.directBuffer(encodeLength()));</li>\n\t<li>short identifier = -500;<br/>\n     int payload_len = 0;<br/>\n     if (token != null)<br/>\n payload_len = token.length;</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>bout.writeShort(identifier);</li>\n\t<li>bout.writeInt(payload_len);<br/>\n    +bout.writeShort(IDENTIFIER);<br/>\n    +bout.writeInt((int) payload_len);<br/>\n    +<br/>\n     if (payload_len > 0) \n{\n bout.write(token);\n     }\n<p>     bout.close();<br/>\n     return bout.buffer();<br/>\n }<br/>\n    +    <br/>\n    +    public static SaslMessageToken read(byte[] serial) {<br/>\n    +ChannelBuffer sm_buffer = ChannelBuffers.copiedBuffer(serial);<br/>\n    +short identifier = sm_buffer.readShort();<br/>\n    +int payload_len = sm_buffer.readInt();<br/>\n    +if(identifier != -500) {</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Can we use the new `IDENTIFIER` constant here?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569793/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569798","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569798","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569798,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk3OTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:22:47Z","updated_at":"2025-01-24T13:46:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45513917\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45513917</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslNettyServer.java &#8212;<br/>\n    @@ -35,127 +35,124 @@</p>\n\n<p>     class SaslNettyServer {</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private static final Logger LOG = LoggerFactory</li>\n\t<li>.getLogger(SaslNettyServer.class);<br/>\n    -</li>\n\t<li>private SaslServer saslServer;<br/>\n    -</li>\n\t<li>SaslNettyServer(String topologyName, byte[] token) throws IOException {</li>\n\t<li>LOG.debug(\"SaslNettyServer: Topology token is: \" + topologyName</li>\n\t<li>+ \" with authmethod \" + SaslUtils.AUTH_DIGEST_MD5);<br/>\n    -</li>\n\t<li>try \n{\n    -\n    -\t\t\tSaslDigestCallbackHandler ch = new SaslNettyServer.SaslDigestCallbackHandler(\n    -\t\t\t\t\ttopologyName, token);\n    -\n    -\t\t\tsaslServer = Sasl.createSaslServer(SaslUtils.AUTH_DIGEST_MD5, null,\n    -\t\t\t\t\tSaslUtils.DEFAULT_REALM, SaslUtils.getSaslProps(), ch);\n    -\n    -\t\t}\n<p> catch (SaslException e) </p>\n{\n    -\t\t\tLOG.error(\"SaslNettyServer: Could not create SaslServer: \" + e);\n    -\t\t}\n<p>    -</p></li>\n\t<li>}<br/>\n    -</li>\n\t<li>public boolean isComplete() \n{\n    -\t\treturn saslServer.isComplete();\n    -\t}\n<p>    -</p></li>\n\t<li>public String getUserName() \n{\n    -\t\treturn saslServer.getAuthorizationID();\n    -\t}\n<p>    -</p></li>\n\t<li>/** CallbackHandler for SASL DIGEST-MD5 mechanism */</li>\n\t<li>public static class SaslDigestCallbackHandler implements CallbackHandler {<br/>\n    -</li>\n\t<li>/** Used to authenticate the clients */</li>\n\t<li>private byte[] userPassword;</li>\n\t<li>private String userName;<br/>\n    -</li>\n\t<li>public SaslDigestCallbackHandler(String topologyName, byte[] token) \n{\n    -\t\t\tLOG.debug(\"SaslDigestCallback: Creating SaslDigestCallback handler \"\n    -\t\t\t\t\t+ \"with topology token: \" + topologyName);\n    -\t\t\tthis.userName = topologyName;\n    -\t\t\tthis.userPassword = token;\n    -\t\t}\n<p>    -</p></li>\n\t<li>@Override</li>\n\t<li>public void handle(Callback[] callbacks) throws IOException,</li>\n\t<li>UnsupportedCallbackException {</li>\n\t<li>NameCallback nc = null;</li>\n\t<li>PasswordCallback pc = null;</li>\n\t<li>AuthorizeCallback ac = null;<br/>\n    -</li>\n\t<li>for (Callback callback : callbacks) {</li>\n\t<li>if (callback instanceof AuthorizeCallback) \n{\n    -\t\t\t\t\tac = (AuthorizeCallback) callback;\n    -\t\t\t\t}\n<p> else if (callback instanceof NameCallback) </p>\n{\n    -\t\t\t\t\tnc = (NameCallback) callback;\n    -\t\t\t\t}\n<p> else if (callback instanceof PasswordCallback) </p>\n{\n    -\t\t\t\t\tpc = (PasswordCallback) callback;\n    -\t\t\t\t}\n<p> else if (callback instanceof RealmCallback) </p>\n{\n    -\t\t\t\t\tcontinue; // realm is ignored\n    -\t\t\t\t}\n<p> else </p>\n{\n    -\t\t\t\t\tthrow new UnsupportedCallbackException(callback,\n    -\t\t\t\t\t\t\t\"handle: Unrecognized SASL DIGEST-MD5 Callback\");\n    -\t\t\t\t}</li>\n\t<li>}<br/>\n    -</li>\n\t<li>if (nc != null) \n{\n    -\t\t\t\tLOG.debug(\"handle: SASL server DIGEST-MD5 callback: setting \"\n    -\t\t\t\t\t\t+ \"username for client: \" + userName);\n    -\n    -\t\t\t\tnc.setName(userName);\n    -\t\t\t}\n<p>    -</p></li>\n\t<li>if (pc != null) \n{\n    -\t\t\t\tchar[] password = SaslUtils.encodePassword(userPassword);\n    -\n    -\t\t\t\tLOG.debug(\"handle: SASL server DIGEST-MD5 callback: setting \"\n    -\t\t\t\t\t\t+ \"password for client: \" + userPassword);\n    -\n    -\t\t\t\tpc.setPassword(password);\n    -\t\t\t}</li>\n\t<li>if (ac != null) {<br/>\n    -</li>\n\t<li>String authid = ac.getAuthenticationID();</li>\n\t<li>String authzid = ac.getAuthorizationID();<br/>\n    -</li>\n\t<li>if (authid.equals(authzid)) \n{\n    -\t\t\t\t\tac.setAuthorized(true);\n    -\t\t\t\t}\n<p> else </p>\n{\n    -\t\t\t\t\tac.setAuthorized(false);\n    -\t\t\t\t}\n<p>    -</p></li>\n\t<li>if (ac.isAuthorized()) \n{\n    -\t\t\t\t\tLOG.debug(\"handle: SASL server DIGEST-MD5 callback: setting \"\n    -\t\t\t\t\t\t\t+ \"canonicalized client ID: \" + userName);\n    -\t\t\t\t\tac.setAuthorizedID(authzid);\n    -\t\t\t\t}</li>\n\t<li>}</li>\n\t<li>}</li>\n\t<li>}<br/>\n    -</li>\n\t<li>/**</li>\n\t<li>* Used by SaslTokenMessage::processToken() to respond to server SASL</li>\n\t<li>* tokens.</li>\n\t<li>*</li>\n\t<li>* @param token</li>\n\t<li>*    Server's SASL token</li>\n\t<li>* @return token to send back to the server.</li>\n\t<li>*/</li>\n\t<li>public byte[] response(byte[] token) {</li>\n\t<li>try \n{\n    -\t\t\tLOG.debug(\"response: Responding to input token of length: \"\n    -\t\t\t\t\t+ token.length);\n    -\t\t\tbyte[] retval = saslServer.evaluateResponse(token);\n    -\t\t\tLOG.debug(\"response: Response token length: \" + retval.length);\n    -\t\t\treturn retval;\n    -\t\t}\n<p> catch (SaslException e) </p>\n{\n    -\t\t\tLOG.error(\"response: Failed to evaluate client token of length: \"\n    -\t\t\t\t\t+ token.length + \" : \" + e);\n    -\t\t\treturn null;\n    -\t\t}</li>\n\t<li>}<br/>\n    -}<br/>\n    \\ No newline at end of file<br/>\n    +\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    extra line</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569798/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569800","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569800","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569800,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4MDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:28:05Z","updated_at":"2025-01-24T13:46:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45514437\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45514437</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslStormServerAuthorizeHandler.java &#8212;<br/>\n    @@ -80,4 +80,4 @@ public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) </p>\n{\n     \t\t// pipeline component.\n     \t\tChannels.fireMessageReceived(ctx, msg);\n     \t}\n<p>    -}<br/>\n    \\ No newline at end of file<br/>\n    +}<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    revert white-space only change</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569804","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569804","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569804,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4MDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:32:29Z","updated_at":"2025-01-24T13:46:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45514952\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45514952</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslStormServerHandler.java &#8212;<br/>\n    @@ -136,17 +135,19 @@ public void messageReceived(ChannelHandlerContext ctx, MessageEvent e)</p>\n\n<p> @Override<br/>\n public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e) </p>\n{\n    -server.closeChannel(e.getChannel());\n    +if(server != null) server.closeChannel(e.getChannel());\n }\n\n<p> private void getSASLCredentials() throws IOException {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>topologyName = (String) this.server.storm_conf</li>\n\t<li>.get(Config.TOPOLOGY_NAME);</li>\n\t<li>String secretKey = SaslUtils.getSecretKey(this.server.storm_conf);<br/>\n    +String secretKey;<br/>\n    +topologyName = server.name();<br/>\n    +secretKey = server.secretKey();<br/>\n    +<br/>\n     if (secretKey != null) \n{\n token = secretKey.getBytes();\n     }\n<p>    +<br/>\n     LOG.debug(\"SASL credentials for storm topology \" + topologyName</p></li>\n\t<li>+ \" is \" + secretKey);<br/>\n    +  + \" is \" + secretKey);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Let's use format strings in this log message so we don't construct strings every time.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569808","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569808","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569808,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4MDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:34:06Z","updated_at":"2025-01-24T13:46:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45515115\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45515115</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Server.java &#8212;<br/>\n    @@ -17,6 +17,21 @@<br/>\n      */<br/>\n     package backtype.storm.messaging.netty;</p>\n\n<p>    +import backtype.storm.Config;<br/>\n    +import backtype.storm.grouping.Load;<br/>\n    +import backtype.storm.messaging.TaskMessage;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    `TaskMessage` is imported again further down.  There are quite a few unused imports too.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569811","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569811","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569811,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:35:12Z","updated_at":"2025-01-24T13:46:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45515221\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45515221</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/StormClientHandler.java &#8212;<br/>\n    @@ -75,7 +75,7 @@ public void messageReceived(ChannelHandlerContext ctx, MessageEvent event) </p>\n{\n    + message + \" (\" + client.getDstAddress() + \")\");\n     }\n<p> }<br/>\n    -<br/>\n    +<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    revert white-space only change</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569816","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569816","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569816,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4MTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:36:14Z","updated_at":"2025-01-24T13:46:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45515312\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45515312</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/StormServerHandler.java &#8212;<br/>\n    @@ -25,33 +26,39 @@<br/>\n     import org.jboss.netty.channel.SimpleChannelUpstreamHandler;<br/>\n     import org.slf4j.Logger;<br/>\n     import org.slf4j.LoggerFactory;<br/>\n    -import java.util.List;<br/>\n     import java.util.concurrent.atomic.AtomicInteger;</p>\n\n<p>    -class StormServerHandler extends SimpleChannelUpstreamHandler  {<br/>\n    +public class StormServerHandler extends SimpleChannelUpstreamHandler  {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(StormServerHandler.class);</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>Server server;<br/>\n    +    IServer server;<br/>\n private AtomicInteger failure_count; <br/>\n    +    private Channel channel;</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>StormServerHandler(Server server) {<br/>\n    +    public StormServerHandler(IServer server) \n{\n     this.server = server;\n     failure_count = new AtomicInteger(0);\n }</li>\n</ul>\n\n\n<p> @Override<br/>\n public void channelConnected(ChannelHandlerContext ctx, ChannelStateEvent e) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>server.addChannel(e.getChannel());<br/>\n    +server.channelConnected(e.getChannel());<br/>\n    +if(channel != null) {<br/>\n    +    LOG.debug(\"Replacing channel with new channel: \"<br/>\n    +      + channel.toString() + \" -> \" + e.getChannel().toString());\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Use format string for log message</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569821","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569821","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569821,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4MjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:36:43Z","updated_at":"2025-01-24T13:46:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45515366\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45515366</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/messaging/netty/StormServerHandler.java &#8212;<br/>\n    @@ -25,33 +26,39 @@<br/>\n     import org.jboss.netty.channel.SimpleChannelUpstreamHandler;<br/>\n     import org.slf4j.Logger;<br/>\n     import org.slf4j.LoggerFactory;<br/>\n    -import java.util.List;<br/>\n     import java.util.concurrent.atomic.AtomicInteger;</p>\n\n<p>    -class StormServerHandler extends SimpleChannelUpstreamHandler  {<br/>\n    +public class StormServerHandler extends SimpleChannelUpstreamHandler  {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(StormServerHandler.class);</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>Server server;<br/>\n    +    IServer server;<br/>\n private AtomicInteger failure_count; <br/>\n    +    private Channel channel;</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>StormServerHandler(Server server) {<br/>\n    +    public StormServerHandler(IServer server) \n{\n     this.server = server;\n     failure_count = new AtomicInteger(0);\n }</li>\n</ul>\n\n\n<p> @Override<br/>\n public void channelConnected(ChannelHandlerContext ctx, ChannelStateEvent e) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>server.addChannel(e.getChannel());<br/>\n    +server.channelConnected(e.getChannel());<br/>\n    +if(channel != null) {<br/>\n    +    LOG.debug(\"Replacing channel with new channel: \"<br/>\n    +      + channel.toString() + \" -> \" + e.getChannel().toString());\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Also, we don't need to call `.toString` here I don't think.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569825","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569825","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569825,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4MjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:37:23Z","updated_at":"2025-01-24T13:46:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45515426\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45515426</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/security/auth/AuthUtils.java &#8212;<br/>\n    @@ -32,12 +32,18 @@<br/>\n     import java.util.Collection;<br/>\n     import java.util.Set;<br/>\n     import java.util.HashSet;<br/>\n    +import java.util.HashMap;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Unused</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569830","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569830","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569830,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4MzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:37:52Z","updated_at":"2025-01-24T13:46:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user knusbaum commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45515488\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45515488</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/pacemaker/pacemaker.clj &#8212;<br/>\n    @@ -0,0 +1,239 @@<br/>\n    +;; Licensed to the Apache Software Foundation (ASF) under one<br/>\n    +;; or more contributor license agreements.  See the NOTICE file<br/>\n    +;; distributed with this work for additional information<br/>\n    +;; regarding copyright ownership.  The ASF licenses this file<br/>\n    +;; to you under the Apache License, Version 2.0 (the<br/>\n    +;; \"License\"); you may not use this file except in compliance<br/>\n    +;; with the License.  You may obtain a copy of the License at<br/>\n    +;;<br/>\n    +;; <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +;;<br/>\n    +;; Unless required by applicable law or agreed to in writing, software<br/>\n    +;; distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    +;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    +;; See the License for the specific language governing permissions and<br/>\n    +;; limitations under the License.<br/>\n    +<br/>\n    +(ns org.apache.storm.pacemaker.pacemaker<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.storm.pacemaker PacemakerServer IServerMessageHandler&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util.concurrent ConcurrentHashMap ThreadPoolExecutor TimeUnit LinkedBlockingDeque&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util.concurrent.atomic AtomicInteger&#93;</span><br/>\n    +   <span class=\"error\">&#91;java.util Date&#93;</span><br/>\n    +   [backtype.storm.generated<br/>\n    +    HBAuthorizationException HBExecutionException HBNodes HBRecords<br/>\n    +    HBServerMessageType HBMessage HBMessageData HBPulse])<br/>\n    +  (:use [clojure.string :only <span class=\"error\">&#91;replace-first split&#93;</span>]<br/>\n    +<span class=\"error\">&#91;backtype.storm log config util&#93;</span>)<br/>\n    +  (:require <span class=\"error\">&#91;clojure.java.jmx :as jmx&#93;</span>)<br/>\n    +  (:gen-class))<br/>\n    +<br/>\n    +<br/>\n    +;; Stats Functions<br/>\n    +<br/>\n    +(def sleep-seconds 60)<br/>\n    +<br/>\n    +<br/>\n    +(defn- check-and-set-loop [stats key new & {:keys <span class=\"error\">&#91;compare new-fn&#93;</span><br/>\n    +    :or {compare (fn <span class=\"error\">&#91;new old&#93;</span> true)<br/>\n    + new-fn (fn <span class=\"error\">&#91;new old&#93;</span> new)}}]<br/>\n    +  (loop []<br/>\n    +    (let [old (.get (key stats))<br/>\n    +  new (new-fn new old)]<br/>\n    +      (if (compare new old)<br/>\n    +(if (.compareAndSet (key stats) old new)<br/>\n    +  nil<br/>\n    +  (recur))<br/>\n    +nil))))<br/>\n    +<br/>\n    +(defn- set-average <span class=\"error\">&#91;stats size&#93;</span><br/>\n    +  (check-and-set-loop<br/>\n    +   stats<br/>\n    +   :average-heartbeat-size<br/>\n    +   size<br/>\n    +   :new-fn (fn <span class=\"error\">&#91;new old&#93;</span><br/>\n    +    (let <span class=\"error\">&#91;count (.get (:send-pulse-count stats))&#93;</span><br/>\n    +; Weighted average<br/>\n    +      (/ (+ new (* count old)) (+ count 1))))))<br/>\n    +<br/>\n    +(defn- set-largest <span class=\"error\">&#91;stats size&#93;</span><br/>\n    +  (check-and-set-loop<br/>\n    +   stats<br/>\n    +   :largest-heartbeat-size<br/>\n    +   size<br/>\n    +   :compare #'>))<br/>\n    +<br/>\n    +(defn- report-stats <span class=\"error\">&#91;heartbeats stats last-five-s&#93;</span><br/>\n    +  (loop []<br/>\n    +      (let [send-count (.getAndSet (:send-pulse-count stats) 0)<br/>\n    +    received-size (.getAndSet (:total-received-size stats) 0)<br/>\n    +    get-count (.getAndSet (:get-pulse-count stats) 0)<br/>\n    +    sent-size (.getAndSet (:total-sent-size stats) 0)<br/>\n    +    largest (.getAndSet (:largest-heartbeat-size stats) 0)<br/>\n    +    average (.getAndSet (:average-heartbeat-size stats) 0)<br/>\n    +    total-keys (.size heartbeats)]<br/>\n    +(log-debug \"\\nReceived \" send-count \" heartbeats totaling \" received-size \" bytes,\\n\"<br/>\n    +   \"Sent \" get-count \" heartbeats totaling \" sent-size \" bytes,\\n\"<br/>\n    +   \"The largest heartbeat was \" largest \" bytes,\\n\"<br/>\n    +   \"The average heartbeat was \" average \" bytes,\\n\"<br/>\n    +   \"Pacemaker contained \" total-keys \" total keys\\n\"<br/>\n    +   \"in the last \" sleep-seconds \" second(s)\")<br/>\n    +(dosync (ref-set last-five-s<br/>\n    + {:send-pulse-count send-count<br/>\n    +  :total-received-size received-size<br/>\n    +  :get-pulse-count get-count<br/>\n    +  :total-sent-size sent-size<br/>\n    +  :largest-heartbeat-size largest<br/>\n    +  :average-heartbeat-size average<br/>\n    +  :total-keys total-keys})))<br/>\n    +      (Thread/sleep (* 1000 sleep-seconds))<br/>\n    +      (recur)))<br/>\n    +<br/>\n    +;; JMX stuff<br/>\n    +(defn register <span class=\"error\">&#91;last-five-s&#93;</span><br/>\n    +  (jmx/register-mbean<br/>\n    +   (jmx/create-bean<br/>\n    +    last-five-s)<br/>\n    +   \"org.apache.storm.pacemaker.pacemaker:stats=Stats_Last_5_Seconds\"))<br/>\n    +<br/>\n    +<br/>\n    +;; Pacemaker Functions<br/>\n    +<br/>\n    +(defn hb-data <span class=\"error\">&#91;conf&#93;</span><br/>\n    +  (ConcurrentHashMap.))<br/>\n    +<br/>\n    +(defn create-path <span class=\"error\">&#91;^String path heartbeats&#93;</span><br/>\n    +  (HBMessage. HBServerMessageType/CREATE_PATH_RESPONSE nil))<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I'd rather leave the no-ops there as stubs for potential future expansion. Hopefully will help keep the structure of the program consistent.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569836","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569836","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569836,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4MzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:37:54Z","updated_at":"2025-01-24T13:46:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45515492\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45515492</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/security/auth/AuthUtils.java &#8212;<br/>\n    @@ -68,6 +74,37 @@ public static Configuration GetConfiguration(Map storm_conf) {<br/>\n }</p>\n\n<p> /**<br/>\n    +     * Pull a set of keys out of a Configuration.<br/>\n    +     * @param configs_to_pull A set of config keys that you want the values of.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    There isn't a `configs_to_pull` param.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569841","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569841","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569841,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4NDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:38:23Z","updated_at":"2025-01-24T13:46:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45515535\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45515535</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/security/auth/AuthUtils.java &#8212;<br/>\n    @@ -68,6 +74,37 @@ public static Configuration GetConfiguration(Map storm_conf) {<br/>\n }</p>\n\n<p> /**<br/>\n    +     * Pull a set of keys out of a Configuration.<br/>\n    +     * @param configs_to_pull A set of config keys that you want the values of.<br/>\n    +     * @param conf The config to pull the key/value pairs out of.<br/>\n    +     * @param conf_entry The app configuration entry name to get stuff from.<br/>\n    +     * @return Return a map of the configs in configs_to_pull to their values.<br/>\n    +     */<br/>\n    +    public static SortedMap<String, ?> PullConfig(Configuration conf,<br/>\n    +    String conf_entry) throws IOException {<br/>\n    +if(conf == null) </p>\n{\n    +    return null;\n    +}\n<p>    +AppConfigurationEntry configurationEntries[] = conf.getAppConfigurationEntry(conf_entry);<br/>\n    +if(configurationEntries == null) </p>\n{\n    +    String errorMessage = \"Could not find a '\" + conf_entry\n    ++ \"' entry in this configuration: Client cannot start.\";\n    +    throw new IOException(errorMessage);\n    +}\n<p>    +<br/>\n    +TreeMap<String, Object> results = new TreeMap<>();<br/>\n    +<br/>\n    +<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    extra line</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569847","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569847","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569847,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4NDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:39:28Z","updated_at":"2025-01-24T13:46:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user knusbaum commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45515660\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45515660</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/pacemaker/pacemaker_state_factory.clj &#8212;<br/>\n    @@ -0,0 +1,124 @@<br/>\n    +;; Licensed to the Apache Software Foundation (ASF) under one<br/>\n    +;; or more contributor license agreements.  See the NOTICE file<br/>\n    +;; distributed with this work for additional information<br/>\n    +;; regarding copyright ownership.  The ASF licenses this file<br/>\n    +;; to you under the Apache License, Version 2.0 (the<br/>\n    +;; \"License\"); you may not use this file except in compliance<br/>\n    +;; with the License.  You may obtain a copy of the License at<br/>\n    +;;<br/>\n    +;; <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +;;<br/>\n    +;; Unless required by applicable law or agreed to in writing, software<br/>\n    +;; distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    +;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    +;; See the License for the specific language governing permissions and<br/>\n    +;; limitations under the License.<br/>\n    +<br/>\n    +(ns org.apache.storm.pacemaker.pacemaker-state-factory<br/>\n    +  (:require <span class=\"error\">&#91;org.apache.storm.pacemaker pacemaker&#93;</span><br/>\n    +    [backtype.storm.cluster-state <span class=\"error\">&#91;zookeeper-state-factory :as zk-factory&#93;</span>]<br/>\n    +    [backtype.storm<br/>\n    +     <span class=\"error\">&#91;config :refer :all&#93;</span><br/>\n    +     <span class=\"error\">&#91;cluster :refer :all&#93;</span><br/>\n    +     <span class=\"error\">&#91;log :refer :all&#93;</span><br/>\n    +     <span class=\"error\">&#91;util :as util&#93;</span>])<br/>\n    +  (:import [backtype.storm.generated<br/>\n    +    HBExecutionException HBNodes HBRecords<br/>\n    +    HBServerMessageType HBMessage HBMessageData HBPulse]<br/>\n    +   <span class=\"error\">&#91;backtype.storm.cluster_state zookeeper_state_factory&#93;</span><br/>\n    +   <span class=\"error\">&#91;backtype.storm.cluster ClusterState&#93;</span><br/>\n    +   <span class=\"error\">&#91;org.apache.storm.pacemaker PacemakerClient&#93;</span>)<br/>\n    +  (:gen-class<br/>\n    +   :implements <span class=\"error\">&#91;backtype.storm.cluster.ClusterStateFactory&#93;</span>))<br/>\n    +<br/>\n    +;; So we can mock the client for testing<br/>\n    +(defn makeClient <span class=\"error\">&#91;conf&#93;</span><br/>\n    +  (PacemakerClient. conf))<br/>\n    +<br/>\n    +(defn makeZKState <span class=\"error\">&#91;conf auth-conf acls context&#93;</span><br/>\n    +  (.mkState (zookeeper_state_factory.) conf auth-conf acls context))<br/>\n    +<br/>\n    +(def max-retries 10)<br/>\n    +<br/>\n    +(defn -mkState <span class=\"error\">&#91;this conf auth-conf acls context&#93;</span><br/>\n    +  (let [zk-state (makeZKState conf auth-conf acls context)<br/>\n    +pacemaker-client (makeClient conf)]<br/>\n    +<br/>\n    +    (reify<br/>\n    +      ClusterState<br/>\n    +      ;; Let these pass through to the zk-state. We only want to handle heartbeats.<br/>\n    +      (register <span class=\"error\">&#91;this callback&#93;</span> (.register zk-state callback))<br/>\n    +      (unregister <span class=\"error\">&#91;this callback&#93;</span> (.unregister zk-state callback))<br/>\n    +      (set_ephemeral_node <span class=\"error\">&#91;this path data acls&#93;</span> (.set_ephemeral_node zk-state path data acls))<br/>\n    +      (create_sequential <span class=\"error\">&#91;this path data acls&#93;</span> (.create_sequential zk-state path data acls))<br/>\n    +      (set_data <span class=\"error\">&#91;this path data acls&#93;</span> (.set_data zk-state path data acls))<br/>\n    +      (delete_node <span class=\"error\">&#91;this path&#93;</span> (.delete_node zk-state path))<br/>\n    +      (get_data <span class=\"error\">&#91;this path watch?&#93;</span> (.get_data zk-state path watch?))<br/>\n    +      (get_data_with_version <span class=\"error\">&#91;this path watch?&#93;</span> (.get_data_with_version zk-state path watch?))<br/>\n    +      (get_version <span class=\"error\">&#91;this path watch?&#93;</span> (.get_version zk-state path watch?))<br/>\n    +      (get_children <span class=\"error\">&#91;this path watch?&#93;</span> (.get_children zk-state path watch?))<br/>\n    +      (mkdirs <span class=\"error\">&#91;this path acls&#93;</span> (.mkdirs zk-state path acls))<br/>\n    +      (node_exists <span class=\"error\">&#91;this path watch?&#93;</span> (.node_exists zk-state path watch?))<br/>\n    +      (add_listener <span class=\"error\">&#91;this listener&#93;</span> (.add_listener zk-state listener))<br/>\n    +      (sync_path <span class=\"error\">&#91;this path&#93;</span> (.sync_path zk-state path))<br/>\n    +      <br/>\n    +      (set_worker_hb <span class=\"error\">&#91;this path data acls&#93;</span><br/>\n    +(util/retry-on-exception<br/>\n    + max-retries<br/>\n    + \"set_worker_hb\"<br/>\n    + #(let [response<br/>\n    +(.send pacemaker-client<br/>\n    +       (HBMessage. HBServerMessageType/SEND_PULSE<br/>\n    +   (HBMessageData/pulse<br/>\n    +    (doto (HBPulse.)<br/>\n    +      (.set_id path)<br/>\n    +      (.set_details data)))))]<br/>\n    +    (if (= (.get_type response) HBServerMessageType/SEND_PULSE_RESPONSE)<br/>\n    +      :ok<br/>\n    +      (throw (HBExecutionException. \"Invalid Response Type\"))))))<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    It's part of the ClusterState interface spec.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569853","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569853","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569853,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4NTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:43:21Z","updated_at":"2025-01-24T13:46:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45516042\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45516042</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/pacemaker/PacemakerClient.java &#8212;<br/>\n    @@ -0,0 +1,252 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.pacemaker;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.generated.HBMessage;<br/>\n    +import backtype.storm.messaging.netty.Client;<br/>\n    +import backtype.storm.messaging.netty.ISaslClient;<br/>\n    +import backtype.storm.messaging.netty.NettyRenameThreadFactory;<br/>\n    +import backtype.storm.security.auth.AuthUtils;<br/>\n    +import backtype.storm.utils.StormBoundedExponentialBackoffRetry;<br/>\n    +import java.net.InetSocketAddress;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Timer;<br/>\n    +import java.util.TimerTask;<br/>\n    +import java.util.concurrent.Executors;<br/>\n    +import java.util.concurrent.LinkedBlockingQueue;<br/>\n    +import java.util.concurrent.ThreadFactory;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +import java.util.concurrent.atomic.AtomicReference;<br/>\n    +import javax.security.auth.login.Configuration;<br/>\n    +import org.apache.storm.pacemaker.codec.ThriftNettyClientCodec;<br/>\n    +import org.jboss.netty.bootstrap.ClientBootstrap;<br/>\n    +import org.jboss.netty.channel.Channel;<br/>\n    +import org.jboss.netty.channel.ChannelPipelineFactory;<br/>\n    +import org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +public class PacemakerClient implements ISaslClient {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(PacemakerClient.class);<br/>\n    +<br/>\n    +    private String topo_name;<br/>\n    +    private String secret;<br/>\n    +    private boolean ready = false;<br/>\n    +    private final ClientBootstrap bootstrap;<br/>\n    +    private AtomicReference<Channel> channelRef;<br/>\n    +    private AtomicBoolean closing;<br/>\n    +    private InetSocketAddress remote_addr;<br/>\n    +    private int maxPending = 100;<br/>\n    +    private HBMessage messages[];<br/>\n    +    private LinkedBlockingQueue<Integer> availableMessageSlots;<br/>\n    +    private ThriftNettyClientCodec.AuthMethod authMethod;<br/>\n    +<br/>\n    +    private StormBoundedExponentialBackoffRetry backoff = new StormBoundedExponentialBackoffRetry(100, 5000, 20);<br/>\n    +    private int retryTimes = 0;<br/>\n    +    <br/>\n    +    public PacemakerClient(Map config) {<br/>\n    +<br/>\n    +String host = (String)config.get(Config.PACEMAKER_HOST);<br/>\n    +int port = (int)config.get(Config.PACEMAKER_PORT);<br/>\n    +topo_name = (String)config.get(Config.TOPOLOGY_NAME);<br/>\n    +if(topo_name == null) </p>\n{\n    +    topo_name = \"pacemaker-client\";\n    +}\n<p>    +<br/>\n    +String auth = (String)config.get(Config.PACEMAKER_AUTH_METHOD);<br/>\n    +ThriftNettyClientCodec.AuthMethod authMethod;<br/>\n    +<br/>\n    +if(auth.equals(\"DIGEST\")) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This series of `if ... else if` can be a `switch`.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569859","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569859","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569859,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4NTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:45:54Z","updated_at":"2025-01-24T13:46:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45516340\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45516340</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/security/auth/AuthUtils.java &#8212;<br/>\n    @@ -276,4 +313,26 @@ public static String get(Configuration configuration, String section, String key<br/>\n     }<br/>\n     return null;<br/>\n }<br/>\n    +<br/>\n    +    private static final String USERNAME = \"username\";<br/>\n    +    private static final String PASSWORD = \"password\";<br/>\n    +<br/>\n    +    public static String makeDigestPayload(Configuration login_config, String config_section) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Technically this generates the secret payload, not the digest, but that is really minor.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569859/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630649","html_url":"https://github.com/apache/storm/issues/5036#issuecomment-2612630649","issue_url":"https://api.github.com/repos/apache/storm/issues/5036","id":2612630649,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzA2NDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:52:56Z","updated_at":"2025-01-24T14:13:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/875#discussion_r45517072\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/875#discussion_r45517072</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/utils/Utils.java &#8212;<br/>\n    @@ -503,6 +505,24 @@ public static boolean getBoolean(Object o, boolean defaultValue) {<br/>\n     }<br/>\n }</p>\n\n<p>    +    public static String getString(Object o, String defaultValue) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Can we inline this or move it someplace else, it does not feel generic enough to be a part of Utils.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569868","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569868","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569868,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4Njg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:53:21Z","updated_at":"2025-01-24T13:46:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45517109\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45517109</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/pacemaker/PacemakerClient.java &#8212;<br/>\n    @@ -0,0 +1,252 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.pacemaker;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.generated.HBMessage;<br/>\n    +import backtype.storm.messaging.netty.Client;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    unused?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158521004","html_url":"https://github.com/apache/storm/pull/875#issuecomment-158521004","issue_url":"https://api.github.com/repos/apache/storm/issues/875","id":158521004,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODUyMTAwNA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:53:59Z","updated_at":"2015-11-20T20:53:59Z","author_association":"CONTRIBUTOR","body":"One more minor comment and then I am +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158521004/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630660","html_url":"https://github.com/apache/storm/issues/5036#issuecomment-2612630660","issue_url":"https://api.github.com/repos/apache/storm/issues/5036","id":2612630660,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzA2NjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:54:01Z","updated_at":"2025-01-24T14:13:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/875#issuecomment-158521004\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/875#issuecomment-158521004</a></p>\n\n<p>    One more minor comment and then I am +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630660/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569870","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569870","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569870,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4NzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:55:27Z","updated_at":"2025-01-24T13:46:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45517334\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45517334</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/pacemaker/PacemakerServer.java &#8212;<br/>\n    @@ -0,0 +1,158 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.pacemaker;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.generated.HBMessage;<br/>\n    +import backtype.storm.messaging.netty.ISaslServer;<br/>\n    +import backtype.storm.messaging.netty.NettyRenameThreadFactory;<br/>\n    +import backtype.storm.security.auth.AuthUtils;<br/>\n    +import java.lang.InterruptedException;<br/>\n    +import java.net.InetSocketAddress;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.ConcurrentSkipListSet;<br/>\n    +import java.util.concurrent.Executors;<br/>\n    +import java.util.concurrent.ThreadFactory;<br/>\n    +import javax.security.auth.login.Configuration;<br/>\n    +import org.apache.storm.pacemaker.codec.ThriftNettyServerCodec;<br/>\n    +import org.jboss.netty.bootstrap.ServerBootstrap;<br/>\n    +import org.jboss.netty.channel.Channel;<br/>\n    +import org.jboss.netty.channel.ChannelPipelineFactory;<br/>\n    +import org.jboss.netty.channel.group.ChannelGroup;<br/>\n    +import org.jboss.netty.channel.group.DefaultChannelGroup;<br/>\n    +import org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +class PacemakerServer implements ISaslServer {<br/>\n    +<br/>\n    +    private static final long FIVE_MB_IN_BYTES = 5 * 1024 * 1024;<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(PacemakerServer.class);<br/>\n    +<br/>\n    +    private final ServerBootstrap bootstrap;<br/>\n    +    private int port;<br/>\n    +    private IServerMessageHandler handler;<br/>\n    +    private String secret;<br/>\n    +    private String topo_name;<br/>\n    +    private volatile ChannelGroup allChannels = new DefaultChannelGroup(\"storm-server\");<br/>\n    +    private ConcurrentSkipListSet<Channel> authenticated_channels = new ConcurrentSkipListSet<Channel>();<br/>\n    +    private ThriftNettyServerCodec.AuthMethod authMethod;<br/>\n    +<br/>\n    +    public PacemakerServer(IServerMessageHandler handler, Map config){<br/>\n    +int maxWorkers = (int)config.get(Config.PACEMAKER_MAX_THREADS);<br/>\n    +this.port = (int)config.get(Config.PACEMAKER_PORT);<br/>\n    +this.handler = handler;<br/>\n    +this.topo_name = \"pacemaker_server\";<br/>\n    +<br/>\n    +String auth = (String)config.get(Config.PACEMAKER_AUTH_METHOD);<br/>\n    +if(auth.equals(\"DIGEST\")) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    switch?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569870/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569877","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569877","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569877,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4Nzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:57:24Z","updated_at":"2025-01-24T13:46:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45517541\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45517541</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/pacemaker/codec/ThriftDecoder.java &#8212;<br/>\n    @@ -0,0 +1,77 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.pacemaker.codec;<br/>\n    +<br/>\n    +import org.jboss.netty.handler.codec.frame.FrameDecoder;<br/>\n    +import org.jboss.netty.channel.ChannelHandlerContext;<br/>\n    +import org.jboss.netty.channel.Channel;<br/>\n    +import backtype.storm.generated.HBMessage;<br/>\n    +import backtype.storm.generated.HBMessageData;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    unused</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569877/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569883","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569883","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569883,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4ODM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:58:16Z","updated_at":"2025-01-24T13:46:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45517616\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45517616</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/pacemaker/codec/ThriftDecoder.java &#8212;<br/>\n    @@ -0,0 +1,77 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.pacemaker.codec;<br/>\n    +<br/>\n    +import org.jboss.netty.handler.codec.frame.FrameDecoder;<br/>\n    +import org.jboss.netty.channel.ChannelHandlerContext;<br/>\n    +import org.jboss.netty.channel.Channel;<br/>\n    +import backtype.storm.generated.HBMessage;<br/>\n    +import backtype.storm.generated.HBMessageData;<br/>\n    +import backtype.storm.generated.HBServerMessageType;<br/>\n    +import org.jboss.netty.buffer.ChannelBuffer;<br/>\n    +import backtype.storm.utils.Utils;<br/>\n    +import backtype.storm.messaging.netty.ControlMessage;<br/>\n    +import backtype.storm.messaging.netty.SaslMessageToken;<br/>\n    +<br/>\n    +public class ThriftDecoder extends FrameDecoder {<br/>\n    +<br/>\n    +    @Override<br/>\n    +    protected Object decode(ChannelHandlerContext ctx, Channel channel, ChannelBuffer buf) throws Exception {<br/>\n    +<br/>\n    +long available = buf.readableBytes();<br/>\n    +if(available < 2) </p>\n{\n    +    return null;\n    +}\n<p>    +<br/>\n    +buf.markReaderIndex();<br/>\n    +<br/>\n    +int thriftLen = buf.readInt();<br/>\n    +available -= 4;<br/>\n    +<br/>\n    +if(available < thriftLen) </p>\n{\n    +    // We haven't received the entire object yet, return and wait for more bytes.\n    +    buf.resetReaderIndex();\n    +    return null;\n    +}\n<p>    +<br/>\n    +buf.discardReadBytes();<br/>\n    +<br/>\n    +HBMessage m;<br/>\n    +if(buf.hasArray()) {<br/>\n    +    m = (HBMessage)Utils.thriftDeserialize(HBMessage.class, buf.array(), 0, thriftLen);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    here and below: thriftDeserialize is generic so it doesn't need the cast.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569891","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569891","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569891,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4OTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:58:57Z","updated_at":"2025-01-24T13:46:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45517684\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45517684</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/pacemaker/codec/ThriftEncoder.java &#8212;<br/>\n    @@ -0,0 +1,108 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.pacemaker.codec;<br/>\n    +<br/>\n    +import org.jboss.netty.handler.codec.oneone.OneToOneEncoder;<br/>\n    +import org.jboss.netty.channel.ChannelHandlerContext;<br/>\n    +import org.jboss.netty.channel.Channel;<br/>\n    +import backtype.storm.generated.HBMessage;<br/>\n    +import backtype.storm.generated.HBMessageData;<br/>\n    +import backtype.storm.generated.HBServerMessageType;<br/>\n    +import org.jboss.netty.buffer.ChannelBuffers;<br/>\n    +import org.jboss.netty.buffer.ChannelBuffer;<br/>\n    +import backtype.storm.utils.Utils;<br/>\n    +import backtype.storm.messaging.netty.ControlMessage;<br/>\n    +import backtype.storm.messaging.netty.SaslMessageToken;<br/>\n    +import backtype.storm.messaging.netty.INettySerializable;<br/>\n    +import java.io.IOException;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import org.apache.thrift.TBase;<br/>\n    +<br/>\n    +public class ThriftEncoder extends OneToOneEncoder {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory<br/>\n    +.getLogger(ThriftEncoder.class);<br/>\n    +<br/>\n    +    private HBMessage encodeNettySerializable(INettySerializable netty_message,<br/>\n    +      HBServerMessageType mType) {<br/>\n    +<br/>\n    +HBMessageData message_data = new HBMessageData();<br/>\n    +HBMessage m = new HBMessage();<br/>\n    +try {<br/>\n    +    ChannelBuffer cbuffer = netty_message.buffer();<br/>\n    +    if(cbuffer.hasArray()) </p>\n{\n    +message_data.set_message_blob(cbuffer.array());\n    +    }\n<p>    +    else </p>\n{\n    +byte buff[] = new byte[netty_message.encodeLength()];\n    +cbuffer.readBytes(buff, 0, netty_message.encodeLength());\n    +message_data.set_message_blob(buff);\n    +    }\n<p>    +    m.set_type(mType);<br/>\n    +    m.set_data(message_data);<br/>\n    +    return m;<br/>\n    +}<br/>\n    +catch( IOException e) </p>\n{\n    +    LOG.error(\"Failed to encode NettySerializable: \", e);\n    +    throw new RuntimeException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    protected Object encode(ChannelHandlerContext ctx, Channel channel, Object msg) {<br/>\n    +if(msg == null) return null;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    minor: braces for `if`</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569897","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569897","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569897,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk4OTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T20:59:44Z","updated_at":"2025-01-24T13:46:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45517771\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45517771</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/pacemaker/codec/ThriftEncoder.java &#8212;<br/>\n    @@ -0,0 +1,108 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.pacemaker.codec;<br/>\n    +<br/>\n    +import org.jboss.netty.handler.codec.oneone.OneToOneEncoder;<br/>\n    +import org.jboss.netty.channel.ChannelHandlerContext;<br/>\n    +import org.jboss.netty.channel.Channel;<br/>\n    +import backtype.storm.generated.HBMessage;<br/>\n    +import backtype.storm.generated.HBMessageData;<br/>\n    +import backtype.storm.generated.HBServerMessageType;<br/>\n    +import org.jboss.netty.buffer.ChannelBuffers;<br/>\n    +import org.jboss.netty.buffer.ChannelBuffer;<br/>\n    +import backtype.storm.utils.Utils;<br/>\n    +import backtype.storm.messaging.netty.ControlMessage;<br/>\n    +import backtype.storm.messaging.netty.SaslMessageToken;<br/>\n    +import backtype.storm.messaging.netty.INettySerializable;<br/>\n    +import java.io.IOException;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import org.apache.thrift.TBase;<br/>\n    +<br/>\n    +public class ThriftEncoder extends OneToOneEncoder {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory<br/>\n    +.getLogger(ThriftEncoder.class);<br/>\n    +<br/>\n    +    private HBMessage encodeNettySerializable(INettySerializable netty_message,<br/>\n    +      HBServerMessageType mType) {<br/>\n    +<br/>\n    +HBMessageData message_data = new HBMessageData();<br/>\n    +HBMessage m = new HBMessage();<br/>\n    +try {<br/>\n    +    ChannelBuffer cbuffer = netty_message.buffer();<br/>\n    +    if(cbuffer.hasArray()) </p>\n{\n    +message_data.set_message_blob(cbuffer.array());\n    +    }\n<p>    +    else </p>\n{\n    +byte buff[] = new byte[netty_message.encodeLength()];\n    +cbuffer.readBytes(buff, 0, netty_message.encodeLength());\n    +message_data.set_message_blob(buff);\n    +    }\n<p>    +    m.set_type(mType);<br/>\n    +    m.set_data(message_data);<br/>\n    +    return m;<br/>\n    +}<br/>\n    +catch( IOException e) </p>\n{\n    +    LOG.error(\"Failed to encode NettySerializable: \", e);\n    +    throw new RuntimeException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    protected Object encode(ChannelHandlerContext ctx, Channel channel, Object msg) {<br/>\n    +if(msg == null) return null;<br/>\n    +<br/>\n    +LOG.debug(\"Trying to encode: \" + msg.getClass().toString() + \" : \" + msg.toString());<br/>\n    +<br/>\n    +HBMessage m;<br/>\n    +if(msg instanceof INettySerializable) {<br/>\n    +    INettySerializable nettyMsg = (INettySerializable)msg;<br/>\n    +<br/>\n    +    HBServerMessageType type;<br/>\n    +    if(msg instanceof ControlMessage) </p>\n{\n    +type = HBServerMessageType.CONTROL_MESSAGE;\n    +    }\n<p>    +    else if(msg instanceof SaslMessageToken) </p>\n{\n    +type = HBServerMessageType.SASL_MESSAGE_TOKEN;\n    +    }\n<p>    +    else </p>\n{\n    +LOG.error(\"Didn't recognise INettySerializable: \" + nettyMsg.toString());\n    +throw new RuntimeException(\"Unrecognized INettySerializable.\");\n    +    }\n<p>    +    m = encodeNettySerializable(nettyMsg, type);<br/>\n    +}<br/>\n    +else </p>\n{\n    +    m = (HBMessage)msg;\n    +}\n<p>    +<br/>\n    +try {<br/>\n    +    byte serialized[] = Utils.thriftSerialize((TBase)m);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    already a `TBase`</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569901","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569901","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569901,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk5MDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T21:05:21Z","updated_at":"2025-01-24T13:46:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#discussion_r45518313\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#discussion_r45518313</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/org/apache/storm/pacemaker_test.clj &#8212;<br/>\n    @@ -0,0 +1,242 @@<br/>\n    +;; Licensed to the Apache Software Foundation (ASF) under one<br/>\n    +;; or more contributor license agreements.  See the NOTICE file<br/>\n    +;; distributed with this work for additional information<br/>\n    +;; regarding copyright ownership.  The ASF licenses this file<br/>\n    +;; to you under the Apache License, Version 2.0 (the<br/>\n    +;; \"License\"); you may not use this file except in compliance<br/>\n    +;; with the License.  You may obtain a copy of the License at<br/>\n    +;;<br/>\n    +;; <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +;;<br/>\n    +;; Unless required by applicable law or agreed to in writing, software<br/>\n    +;; distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    +;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    +;; See the License for the specific language governing permissions and<br/>\n    +;; limitations under the License.<br/>\n    +(ns org.apache.storm.pacemaker-test<br/>\n    +  (:require <span class=\"error\">&#91;clojure.test :refer :all&#93;</span><br/>\n    +    [org.apache.storm.pacemaker <span class=\"error\">&#91;pacemaker :as pacemaker&#93;</span>]<br/>\n    +    <span class=\"error\">&#91;conjure.core :as conjure&#93;</span>)<br/>\n    +  (:import [backtype.storm.generated<br/>\n    +    HBExecutionException HBNodes HBRecords<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    These three unused?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158523479","html_url":"https://github.com/apache/storm/pull/838#issuecomment-158523479","issue_url":"https://api.github.com/repos/apache/storm/issues/838","id":158523479,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODUyMzQ3OQ==","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T21:06:46Z","updated_at":"2015-11-20T21:06:46Z","author_association":"NONE","body":"Some comments, mostly just code clean-up around new changes though.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158523479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569905","html_url":"https://github.com/apache/storm/issues/4724#issuecomment-2612569905","issue_url":"https://api.github.com/repos/apache/storm/issues/4724","id":2612569905,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Njk5MDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T21:06:47Z","updated_at":"2025-01-24T13:46:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/838#issuecomment-158523479\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/838#issuecomment-158523479</a></p>\n\n<p>    Some comments, mostly just code clean-up around new changes though.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612569905/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158538482","html_url":"https://github.com/apache/storm/pull/875#issuecomment-158538482","issue_url":"https://api.github.com/repos/apache/storm/issues/875","id":158538482,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODUzODQ4Mg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T22:04:13Z","updated_at":"2015-11-20T22:04:13Z","author_association":"CONTRIBUTOR","body":"travis CI failure looks unrelated +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158538482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630669","html_url":"https://github.com/apache/storm/issues/5036#issuecomment-2612630669","issue_url":"https://api.github.com/repos/apache/storm/issues/5036","id":2612630669,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzA2Njk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T22:04:14Z","updated_at":"2025-01-24T14:13:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/875#issuecomment-158538482\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/875#issuecomment-158538482</a></p>\n\n<p>    travis CI failure looks unrelated +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630669/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630676","html_url":"https://github.com/apache/storm/issues/5036#issuecomment-2612630676","issue_url":"https://api.github.com/repos/apache/storm/issues/5036","id":2612630676,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzA2NzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T22:26:43Z","updated_at":"2025-01-24T14:13:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/875\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/875</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630676/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630684","html_url":"https://github.com/apache/storm/issues/5036#issuecomment-2612630684","issue_url":"https://api.github.com/repos/apache/storm/issues/5036","id":2612630684,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzA2ODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T22:27:05Z","updated_at":"2025-01-24T14:13:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zhuoliu\" class=\"user-hover\" rel=\"zhuoliu\">Zhuo Liu</a>,</p>\n\n<p>I merged this into master.  Great work</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612630684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612634746","html_url":"https://github.com/apache/storm/issues/5058#issuecomment-2612634746","issue_url":"https://api.github.com/repos/apache/storm/issues/5058","id":2612634746,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzQ3NDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T22:51:21Z","updated_at":"2025-01-24T14:15:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/894#discussion_r45529315\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/894#discussion_r45529315</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/RawScheme.java &#8212;<br/>\n    @@ -18,11 +18,13 @@<br/>\n     package backtype.storm.spout;</p>\n\n<p>     import backtype.storm.tuple.Fields;<br/>\n    +<br/>\n    +import java.nio.ByteBuffer;<br/>\n     import java.util.List;<br/>\n     import static backtype.storm.utils.Utils.tuple;</p>\n\n<p>     public class RawScheme implements Scheme {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>public List<Object> deserialize(byte[] ser) {<br/>\n    +    public List<Object> deserialize(ByteBuffer ser) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    @arunmahadevan good point. we can use ByteBuffer.array() to have same signature.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612634746/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612635036","html_url":"https://github.com/apache/storm/issues/5059#issuecomment-2612635036","issue_url":"https://api.github.com/repos/apache/storm/issues/5059","id":2612635036,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzUwMzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T23:11:13Z","updated_at":"2025-01-24T14:15:49Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/895\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/895</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612635036/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158553123","html_url":"https://github.com/apache/storm/pull/895#issuecomment-158553123","issue_url":"https://api.github.com/repos/apache/storm/issues/895","id":158553123,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODU1MzEyMw==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T23:11:15Z","updated_at":"2015-11-20T23:11:15Z","author_association":"CONTRIBUTOR","body":"thanks @haohui  merged into master.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158553123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612635038","html_url":"https://github.com/apache/storm/issues/5059#issuecomment-2612635038","issue_url":"https://api.github.com/repos/apache/storm/issues/5059","id":2612635038,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzUwMzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-20T23:11:16Z","updated_at":"2025-01-24T14:15:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/895#issuecomment-158553123\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/895#issuecomment-158553123</a></p>\n\n<p>    thanks @haohui  merged into master.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612635038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612635042","html_url":"https://github.com/apache/storm/issues/5059#issuecomment-2612635042","issue_url":"https://api.github.com/repos/apache/storm/issues/5059","id":2612635042,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzUwNDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-21T02:10:50Z","updated_at":"2025-01-24T14:15:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=wheat9\">wheat9</a>:</i>\n<p>Thanks everyone for the reviews and commits.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612635042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158578419","html_url":"https://github.com/apache/storm/pull/532#issuecomment-158578419","issue_url":"https://api.github.com/repos/apache/storm/issues/532","id":158578419,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODU3ODQxOQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-21T02:38:35Z","updated_at":"2015-11-22T14:03:05Z","author_association":"CONTRIBUTOR","body":"@revans2 \nSorry to respond late.\nI agree that we can set default value of TOPOLOGY_SHELLBOLT_MAX_PENDING to reasonable value  (not off) when deadlock bug you stated is fixed. Then ShellBolt could play well with ABP. \n\n> I'm curious that ShellBolt could play with ABP when TOPOLOGY_SHELLBOLT_MAX_PENDING is off cause ShellBolt always tries to buffer pending writes ASAP regardless of pressure of subprocess.\n> \n> > Sorry I forgot stdin buffer you said. It seems to work when stdin buffer fills up.\n\nIn order to resolve deadlock, I think we can have another queue which only stores pending messages for taskid which is unbounded (not affected to TOPOLOGY_SHELLBOLT_MAX_PENDING). \nAnd we introduce priorities for kinds of ShellBolt message, heartbeat > taskid > process, and let BoltWriterRunnable always tries to send message for higher priority. \nIn result, only Thread which runs execute() could be blocked, and it is unblocked as soon as pending taskids are all sent.\n\nIt doesn't end up starvation because heartbeat is triggered for every 1 sec, and taskids messages are never generated while subprocess doesn't process any requests.\n\nAdditional points of this approach are,\n1. Count of sended pending messages before sending taskids is minimized so subprocess can finish emitting new tuple faster. We can reduce waiting time for taskids.\n(Some BoltMsgs could be transferred while receiving request, emitting to _collector and writing taskids.)\n2. It can also greatly reduce size of subprocess's pending_commands queue, which could reduce out of memory issue for subprocess. It is more important than ShellBolt's OOME because subprocess's memory issue could make machine hang or down.\n3. 2. also reduce wait time for processing heartbeat message, which has been a headache issue.\n\nI'll close this pull request and work on new approach.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158578419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612537724","html_url":"https://github.com/apache/storm/issues/4597#issuecomment-2612537724","issue_url":"https://api.github.com/repos/apache/storm/issues/4597","id":2612537724,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Mzc3MjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-21T02:38:36Z","updated_at":"2025-01-24T13:30:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/532#issuecomment-158578419\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/532#issuecomment-158578419</a></p>\n\n<p>    @revans2 <br/>\n    Sorry to respond late.<br/>\n    I agree that we can set default value of TOPOLOGY_SHELLBOLT_MAX_PENDING to reasonable value  (not off) when deadlock bug you stated is fixed. Then ShellBolt could play well with ABP. <br/>\n    I'm curious that ShellBolt could play with ABP when TOPOLOGY_SHELLBOLT_MAX_PENDING is off cause ShellBolt always tries to buffer pending writes ASAP regardless of pressure of subprocess.</p>\n\n<p>    In order to resolve deadlock, I think we can have another queue which only stores pending messages for taskid which is unbounded (not affected to TOPOLOGY_SHELLBOLT_MAX_PENDING). <br/>\n    And we introduce priorities for kinds of ShellBolt message, heartbeat > taskid > process, and let BoltWriterRunnable always tries to send message for higher priority. <br/>\n    In result, only Thread which runs execute() could be blocked, and it is unblocked as soon as pending taskids are all sent.</p>\n\n<p>    It doesn't end up starvation because heartbeat is triggered for every 1 sec, and taskids messages are never generated while subprocess doesn't process any requests.</p>\n\n<p>    Additional points of this approach are,<br/>\n    1. Subprocess can finish emitting new tuple regardless of count of added pending messages before adding taskids. We can reduce waiting time for taskids.<br/>\n    2. It can also greatly reduce size of subprocess's pending_commands queue, which could reduce out of memory issue for subprocess. It is more important than ShellBolt's OOME because subprocess's memory issue could make machine hang or down.<br/>\n    3. 2. also reduce wait time for processing heartbeat message, which has been a headache issue.</p>\n\n<p>    I'll close this pull request and work on new approach.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612537724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612537727","html_url":"https://github.com/apache/storm/issues/4597#issuecomment-2612537727","issue_url":"https://api.github.com/repos/apache/storm/issues/4597","id":2612537727,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Mzc3Mjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-21T02:38:38Z","updated_at":"2025-01-24T13:30:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/532\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/532</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612537727/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612635294","html_url":"https://github.com/apache/storm/issues/5061#issuecomment-2612635294","issue_url":"https://api.github.com/repos/apache/storm/issues/5061","id":2612635294,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzUyOTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-21T03:20:07Z","updated_at":"2025-01-24T14:15:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ptgoetz\">ptgoetz</a>:</i>\n<p>I think this might the same thing I saw with building the master branch on JDK 1.7 on OSX.</p>\n\n<p>On OS X its manifests as a sementation fault (jvm crash). But it doesn't happen with 1.8.</p>\n\n<p>Can you try with 1.8?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612635294/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158759020","html_url":"https://github.com/apache/storm/pull/532#issuecomment-158759020","issue_url":"https://api.github.com/repos/apache/storm/issues/532","id":158759020,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODc1OTAyMA==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-22T13:17:21Z","updated_at":"2015-11-22T13:17:21Z","author_association":"CONTRIBUTOR","body":"@revans2 \nI thought about deadlock again, and I couldn't see deadlock you stated.\n\nLet's think about these scenario, subprocess emits tuple and waits for taskids while _pendingWrites is full.\n- ExecutorThread will be blocked waiting for writing BoltMsg to _pendingWrites (since it's fix size queue).\n- ReaderThread will be blocked waiting for writing taskids - which subprocess is waiting for - to _pendingWrites (again, since it's fix size queue).\n- WriterThread will pull message from _pendingWrites and send to subprocess.\n  - Though message is BoltMsg, not taskids, subprocess can add BoltMsg (tuple) to its pending queue (unbounded) when waiting for taskids.\n- _pendingWrites adds message in order, so eventually taskids is written to _pendingWrites and ReaderThread will be unblocked. (Sure, eventually ExecutorThread will be unblocked, too)\n- Subprocess can finish emitting tuple, and continue processing.\n\nIt seems to be safe because of unbounded queues in subprocess.\nPlease let me know if I missed something.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158759020/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612537731","html_url":"https://github.com/apache/storm/issues/4597#issuecomment-2612537731","issue_url":"https://api.github.com/repos/apache/storm/issues/4597","id":2612537731,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Mzc3MzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-22T13:17:23Z","updated_at":"2025-01-24T13:30:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/532#issuecomment-158759020\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/532#issuecomment-158759020</a></p>\n\n<p>    @revans2 <br/>\n    I thought about deadlock again, and I couldn't see deadlock you stated.</p>\n\n<p>    Let's think about these scenario, subprocess emits tuple and waits for taskids while _pendingWrites is full.</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>ExecutorThread will be blocked waiting for writing BoltMsg to _pendingWrites (since it's fix size queue).</li>\n\t<li>ReaderThread will be blocked waiting for writing taskids - which subprocess is waiting for - to _pendingWrites (again, since it's fix size queue).</li>\n\t<li>WriterThread will pull message from _pendingWrites and send to subprocess.</li>\n\t<li>Though message is BoltMsg, not taskids, subprocess can add BoltMsg (tuple) to its pending queue (unbounded) when waiting for taskids.</li>\n\t<li>_pendingWrites adds message in order, so eventually taskids is written to _pendingWrites and ReaderThread will be unblocked. (Sure, eventually ExecutorThread will be unblocked, too)</li>\n\t<li>Subprocess can finish emitting tuple, and continue processing.</li>\n</ul>\n\n\n<p>    It seems to be safe because of unbounded queues in subprocess.<br/>\n    Please let me know if I missed something.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612537731/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612538212","html_url":"https://github.com/apache/storm/issues/4599#issuecomment-2612538212","issue_url":"https://api.github.com/repos/apache/storm/issues/4599","id":2612538212,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MzgyMTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-22T13:42:21Z","updated_at":"2025-01-24T13:31:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Current ShellBolt implementations force subprocess to send \"ack\" or \"fail\" to ShellBolt regardless of acking mode.<br/>\n(ShellBolt._inputs will fill up if subprocess doesn't send \"ack\" or \"fail\".)</p>\n\n<p>With assumption, <a href=\"https://issues.apache.org/jira/browse/STORM-742\" title=\"Very busy ShellBolt subprocess with ACK mode cannot respond heartbeat just in time\" class=\"issue-link\" data-issue-key=\"STORM-742\"><del>STORM-742</del></a> could be also applied to non-ACK mode.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612538212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158761979","html_url":"https://github.com/apache/storm/pull/532#issuecomment-158761979","issue_url":"https://api.github.com/repos/apache/storm/issues/532","id":158761979,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODc2MTk3OQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-22T14:04:41Z","updated_at":"2015-11-22T14:04:41Z","author_association":"CONTRIBUTOR","body":"If there's no deadlock when _pendingWrites is bounded queue, we can just set default value of TOPOLOGY_SHELLBOLT_MAX_PENDING to reasonable and deny set it to null. In result ABP will work.\n\nBtw, approach I commented before still have advantages whether there's deadlock issue or not.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158761979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612537735","html_url":"https://github.com/apache/storm/issues/4597#issuecomment-2612537735","issue_url":"https://api.github.com/repos/apache/storm/issues/4597","id":2612537735,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Mzc3MzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-22T14:04:42Z","updated_at":"2025-01-24T13:30:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/532#issuecomment-158761979\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/532#issuecomment-158761979</a></p>\n\n<p>    If there's no deadlock when _pendingWrites is bounded queue, we can just set default value of TOPOLOGY_SHELLBOLT_MAX_PENDING to reasonable and deny set it to null. In result ABP will work.</p>\n\n<p>    Btw, approach I commented before still have advantages whether there's deadlock issue or not.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612537735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612537741","html_url":"https://github.com/apache/storm/issues/4597#issuecomment-2612537741","issue_url":"https://api.github.com/repos/apache/storm/issues/4597","id":2612537741,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1Mzc3NDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-22T14:46:31Z","updated_at":"2025-01-24T13:30:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user HeartSaVioR opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/897\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/897</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-756\" title=\"[multilang] Introduce overflow control mechanism\" class=\"issue-link\" data-issue-key=\"STORM-756\"><del>STORM-756</del></a> Handle taskids response as soon as possible</p>\n\n<p>    This is the implementation of <a href=\"https://github.com/apache/storm/pull/532#issuecomment-158578419\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/532#issuecomment-158578419</a><br/>\n    Please refer comment to see purpose of this PR.</p>\n\n<p>    Message's priority was heartbeat > taskids = BoltMsg, but in this PR, I changed priority to heartbeat > taskids > BoltMsg.<br/>\n    In order to accomplish this, taskids and BoltMsgs use their own queue. Queue for taskids is unbounded but queue for BoltMsgs is bounded (fixed size) so that executor thread can be blocked and ABP comes into play.</p>\n\n<p>    Please note that BoltWriterRunnable polls message from both queues when it is only available. It's for minimizing wait for taskids, but it can spin CPU so CPU usage will be a bit higher than current.<br/>\n    I'd like to discuss about better / safer approach, for example, adding potential lag via poll with timeout.</p>\n\n<p>    @revans2 It's alternative approach of #532. Please review and comment. Thanks!</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/HeartSaVioR/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/HeartSaVioR/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-756\" title=\"[multilang] Introduce overflow control mechanism\" class=\"issue-link\" data-issue-key=\"STORM-756\"><del>STORM-756</del></a>-v2</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/897.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/897.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #897</p>\n\n<hr />\n<p>commit a16eca7e0b35c35be064a742f834add1e4f20879<br/>\nAuthor: Jungtaek Lim <kabhwan@gmail.com><br/>\nDate:   2015-11-22T09:25:51Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-756\" title=\"[multilang] Introduce overflow control mechanism\" class=\"issue-link\" data-issue-key=\"STORM-756\"><del>STORM-756</del></a> Handle taskids response ASAP</p>\n\n<ul>\n\t<li>create new queue which stores only taskids responses\n\t<ul>\n\t\t<li>BoltReaderRunnable thread is no longer blocked by _pendingWrites.put()</li>\n\t</ul>\n\t</li>\n\t<li>let BoltWriterRunnable sends messages with respecting priorities\n\t<ul>\n\t\t<li>heartbeat > taskids > tuple</li>\n\t</ul>\n\t</li>\n\t<li>set sleep time from multilang_test long enough\n\t<ul>\n\t\t<li>that topology is activate and it processes some tuples for a while</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>commit d91c393f092ad2e050f14bc3c6ab9e9658545c26<br/>\nAuthor: Jungtaek Lim <kabhwan@gmail.com><br/>\nDate:   2015-11-22T09:56:50Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-756\" title=\"[multilang] Introduce overflow control mechanism\" class=\"issue-link\" data-issue-key=\"STORM-756\"><del>STORM-756</del></a> set default value of topology.shellbolt.max.pending</p>\n\n<ul>\n\t<li>Bounded _pendingWrites makes ShellBolt play well with ABP</li>\n</ul>\n\n\n<p>commit 124f664af6d8cdf995ed4061b1f1a90c84e7c18e<br/>\nAuthor: Jungtaek Lim <kabhwan@gmail.com><br/>\nDate:   2015-11-22T14:15:19Z</p>\n\n<p>    Remove unneeded comment</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612537741/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158775737","html_url":"https://github.com/apache/storm/pull/845#issuecomment-158775737","issue_url":"https://api.github.com/repos/apache/storm/issues/845","id":158775737,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODc3NTczNw==","user":{"login":"redsanket","id":8295799,"node_id":"MDQ6VXNlcjgyOTU3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8295799?v=4","gravatar_id":"","url":"https://api.github.com/users/redsanket","html_url":"https://github.com/redsanket","followers_url":"https://api.github.com/users/redsanket/followers","following_url":"https://api.github.com/users/redsanket/following{/other_user}","gists_url":"https://api.github.com/users/redsanket/gists{/gist_id}","starred_url":"https://api.github.com/users/redsanket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redsanket/subscriptions","organizations_url":"https://api.github.com/users/redsanket/orgs","repos_url":"https://api.github.com/users/redsanket/repos","events_url":"https://api.github.com/users/redsanket/events{/privacy}","received_events_url":"https://api.github.com/users/redsanket/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-22T16:28:24Z","updated_at":"2015-11-22T16:28:24Z","author_association":"NONE","body":"@d2r Removed the config\n\n/**\n     \\* Which implementation of {@link backtype.storm.codedistributor.ICodeDistributor} should be used by storm for code\n     \\* distribution.\n     */\n    @isString\n    public static final String STORM_CODE_DISTRIBUTOR_CLASS = \"storm.codedistributor.class\";\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158775737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612634754","html_url":"https://github.com/apache/storm/issues/5058#issuecomment-2612634754","issue_url":"https://api.github.com/repos/apache/storm/issues/5058","id":2612634754,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzQ3NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-22T19:40:17Z","updated_at":"2025-01-24T14:15:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/894#discussion_r45563324\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/894#discussion_r45563324</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/src/jvm/storm/kafka/StringScheme.java &#8212;<br/>\n    @@ -20,23 +20,27 @@<br/>\n     import backtype.storm.spout.Scheme;<br/>\n     import backtype.storm.tuple.Fields;<br/>\n     import backtype.storm.tuple.Values;<br/>\n    +import backtype.storm.utils.Utils;</p>\n\n<p>    -import java.io.UnsupportedEncodingException;<br/>\n    +import java.nio.ByteBuffer;<br/>\n    +import java.nio.charset.Charset;<br/>\n    +import java.nio.charset.StandardCharsets;<br/>\n     import java.util.List;</p>\n\n<p>     public class StringScheme implements Scheme {<br/>\n    -<br/>\n    +    private static final Charset UTF8_CHARSET = StandardCharsets.UTF_8;<br/>\n public static final String STRING_SCHEME_KEY = \"str\";</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>public List<Object> deserialize(byte[] bytes) {<br/>\n    +    public List<Object> deserialize(ByteBuffer bytes) \n{\n     return new Values(deserializeString(bytes));\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>public static String deserializeString(byte[] string) {</li>\n\t<li>try \n{\n    -    return new String(string, \"UTF-8\");\n    -}\n<p> catch (UnsupportedEncodingException e) {</p></li>\n\t<li>throw new RuntimeException(e);<br/>\n    +    public static String deserializeString(ByteBuffer string) {<br/>\n    +if (!string.hasArray()) {\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I think this should be `if (string.hasArray())`</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612634754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612634759","html_url":"https://github.com/apache/storm/issues/5058#issuecomment-2612634759","issue_url":"https://api.github.com/repos/apache/storm/issues/5058","id":2612634759,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzQ3NTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-22T19:42:54Z","updated_at":"2025-01-24T14:15:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/894#discussion_r45563348\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/894#discussion_r45563348</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/src/jvm/storm/kafka/StringScheme.java &#8212;<br/>\n    @@ -20,23 +20,27 @@<br/>\n     import backtype.storm.spout.Scheme;<br/>\n     import backtype.storm.tuple.Fields;<br/>\n     import backtype.storm.tuple.Values;<br/>\n    +import backtype.storm.utils.Utils;</p>\n\n<p>    -import java.io.UnsupportedEncodingException;<br/>\n    +import java.nio.ByteBuffer;<br/>\n    +import java.nio.charset.Charset;<br/>\n    +import java.nio.charset.StandardCharsets;<br/>\n     import java.util.List;</p>\n\n<p>     public class StringScheme implements Scheme {<br/>\n    -<br/>\n    +    private static final Charset UTF8_CHARSET = StandardCharsets.UTF_8;<br/>\n public static final String STRING_SCHEME_KEY = \"str\";</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>public List<Object> deserialize(byte[] bytes) {<br/>\n    +    public List<Object> deserialize(ByteBuffer bytes) \n{\n     return new Values(deserializeString(bytes));\n }</li>\n</ul>\n\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>public static String deserializeString(byte[] string) {</li>\n\t<li>try \n{\n    -    return new String(string, \"UTF-8\");\n    -}\n<p> catch (UnsupportedEncodingException e) {</p></li>\n\t<li>throw new RuntimeException(e);<br/>\n    +    public static String deserializeString(ByteBuffer string) {<br/>\n    +if (!string.hasArray()) {<br/>\n    +    int base = string.arrayOffset();<br/>\n    +    return new String(string.array(), base + string.position(), base + string.limit());\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    `String` ctor takes length as the last arg, so you need to pass `limit - pos`. Also the charset is missing.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612634759/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158807186","html_url":"https://github.com/apache/storm/pull/827#issuecomment-158807186","issue_url":"https://api.github.com/repos/apache/storm/issues/827","id":158807186,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODgwNzE4Ng==","user":{"login":"satishd","id":2577761,"node_id":"MDQ6VXNlcjI1Nzc3NjE=","avatar_url":"https://avatars.githubusercontent.com/u/2577761?v=4","gravatar_id":"","url":"https://api.github.com/users/satishd","html_url":"https://github.com/satishd","followers_url":"https://api.github.com/users/satishd/followers","following_url":"https://api.github.com/users/satishd/following{/other_user}","gists_url":"https://api.github.com/users/satishd/gists{/gist_id}","starred_url":"https://api.github.com/users/satishd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/satishd/subscriptions","organizations_url":"https://api.github.com/users/satishd/orgs","repos_url":"https://api.github.com/users/satishd/repos","events_url":"https://api.github.com/users/satishd/events{/privacy}","received_events_url":"https://api.github.com/users/satishd/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-22T22:00:44Z","updated_at":"2015-11-23T04:26:24Z","author_association":"MEMBER","body":"@fhussonnois I think we should accept only cql strings for now instead of giving a fluent API for building queries. This requires implementing all kinds of queries supported by cql just to map column names which is kind of unnecessary. Cassandra connector API should be agnostic about the cql by simply using datastax driver. This avoids implementing any new features being added in cql by cassandra connector APIs. We should support only simple/prepared/batched statement builder by giving respective API to map columns with tuples. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158807186/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612605710","html_url":"https://github.com/apache/storm/issues/4913#issuecomment-2612605710","issue_url":"https://api.github.com/repos/apache/storm/issues/4913","id":2612605710,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDU3MTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-22T22:00:45Z","updated_at":"2025-01-24T14:02:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/827#issuecomment-158807186\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/827#issuecomment-158807186</a></p>\n\n<p>    @fhussonnois I think we should accept only cql strings for now instead of giving a fluent API for building queries. This requires implementing all kinds of queries supported by cql just to map column names. Cassandra connector API should be agnostic about the cql by simply using datastax driver. This avoids implementing any new features being added in cql. We should support only simple/prepared statement builder. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612605710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612538219","html_url":"https://github.com/apache/storm/issues/4599#issuecomment-2612538219","issue_url":"https://api.github.com/repos/apache/storm/issues/4599","id":2612538219,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MzgyMTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-23T03:40:44Z","updated_at":"2025-01-24T13:31:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Thinking it once more, I think forcing subprocess to send ack / fail is a matter (bug) of current ShellBolt implementation, which should be fixed.<br/>\n(Filed issue to <a href=\"https://issues.apache.org/jira/browse/STORM-1224\" title=\"ShellBolt only increases memory usage when subprocess doesn&#39;t send ack / fail\" class=\"issue-link\" data-issue-key=\"STORM-1224\"><del>STORM-1224</del></a>)</p>\n\n<p>In that case, we couldn't resolve this issue. Reopening.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612538219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625663","html_url":"https://github.com/apache/storm/issues/5005#issuecomment-2612625663","issue_url":"https://api.github.com/repos/apache/storm/issues/5005","id":2612625663,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjU2NjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-23T08:29:13Z","updated_at":"2025-01-24T14:11:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/855#discussion_r45579748\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/855#discussion_r45579748</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/windowing/EventImpl.java &#8212;<br/>\n    @@ -0,0 +1,38 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.windowing;<br/>\n    +<br/>\n    +class EventImpl<T> implements Event<T> {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Agree with your comments for value types and final classes. When I wrote, I was not sure whether we would need another implementation and it turns out that we need another implementation (watermark events) for tracking tuple timestamps.<br/>\n    If unsure I feel it might be better to err by having interfaces. It makes it easier to write mock implementation for testing and makes the apis more readable without cluttering with the implementation details. (see below link for more details).</p>\n\n<p>    <a href=\"http://programmers.stackexchange.com/questions/159813/do-i-need-to-use-an-interface-when-only-one-class-will-ever-implement-it/159909#159909\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://programmers.stackexchange.com/questions/159813/do-i-need-to-use-an-interface-when-only-one-class-will-ever-implement-it/159909#159909</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612625663/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612632343","html_url":"https://github.com/apache/storm/issues/5045#issuecomment-2612632343","issue_url":"https://api.github.com/repos/apache/storm/issues/5045","id":2612632343,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzIzNDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-23T09:07:40Z","updated_at":"2025-01-24T14:14:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user arunmahadevan opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/899\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/899</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1207\" title=\"Add flux support for handling windowed bolts\" class=\"issue-link\" data-issue-key=\"STORM-1207\"><del>STORM-1207</del></a>: Added flux support for IWindowedBolt</p>\n\n<p>    1. Added flux support for handling IWindowed bolt<br/>\n    2. Fix `canInvokeWithArgs` to handle multi argument overloaded methods<br/>\n    3. Sample flux topology with windowing</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/arunmahadevan/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/arunmahadevan/storm</a> windowing-flux</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/899.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/899.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #899</p>\n\n<hr />\n<p>commit 69b9cf581fd977f6c28b3a78a116deddadc44014<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2015-11-18T08:21:46Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1207\" title=\"Add flux support for handling windowed bolts\" class=\"issue-link\" data-issue-key=\"STORM-1207\"><del>STORM-1207</del></a>: Added flux support for IWindowedBolt</p>\n\n<p>    1. Added flux support for handling IWindowed bolt<br/>\n    2. Fix `canInvokeWithArgs` to handle multi argument overloaded methods<br/>\n    3. Sample flux topology with windowing</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612632343/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612558952","html_url":"https://github.com/apache/storm/issues/4666#issuecomment-2612558952","issue_url":"https://api.github.com/repos/apache/storm/issues/4666","id":2612558952,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NTg5NTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-23T11:05:23Z","updated_at":"2025-01-24T13:41:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/572#discussion_r45591441\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/572#discussion_r45591441</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/src/jvm/storm/kafka/bolt/KafkaBolt.java &#8212;<br/>\n    @@ -102,12 +114,40 @@ public void execute(Tuple input) {<br/>\n key = mapper.getKeyFromTuple(input);<br/>\n message = mapper.getMessageFromTuple(input);<br/>\n topic = topicSelector.getTopic(input);</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>if(topic != null ) {</li>\n\t<li>producer.send(new KeyedMessage<K, V>(topic, key, message));<br/>\n    +    if (topic != null ) {<br/>\n    +Callback callback = null;<br/>\n    +<br/>\n    +if (!fireAndForget && async) {<br/>\n    +    callback = new Callback() {<br/>\n    +@Override<br/>\n    +public void onCompletion(RecordMetadata ignored, Exception e) {<br/>\n    +    synchronized (collector) \n<div class=\"error\"><span class=\"error\">Unknown macro: {    +if (e != null) {\n    +    collector.reportError(e);\n    +    collector.fail(input);\n    +} else {\n    +    collector.ack(input);\n    +}    +    }</span> </div>\n<p>    +}<br/>\n    +    };<br/>\n    +}<br/>\n    +Future<RecordMetadata> result = producer.send(new ProducerRecord<K, V>(topic, key, message), callback);<br/>\n    +if (!async) {<br/>\n    +    try {<br/>\n    +result.get();<br/>\n    +collector.ack(input);</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    does this call take place in the same executor thread? </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612558952/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612628603","html_url":"https://github.com/apache/storm/issues/5025#issuecomment-2612628603","issue_url":"https://api.github.com/repos/apache/storm/issues/5025","id":2612628603,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2Mjg2MDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-23T12:54:19Z","updated_at":"2025-01-24T14:13:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user arunmahadevan opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/900\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/900</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1187\" title=\"Support for late and out of order events in time based windows\" class=\"issue-link\" data-issue-key=\"STORM-1187\"><del>STORM-1187</del></a> Support windowing based on tuple ts</p>\n\n<p>    Support for doing window calculations based to tuple timestamps and handle<br/>\n    out of order events based on time lag.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/arunmahadevan/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/arunmahadevan/storm</a> windowing-eventts</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/900.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/900.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #900</p>\n\n<hr />\n<p>commit 3c73fc72a92a0b4f0df805081868c2177768bd25<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2015-11-13T12:36:56Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1187\" title=\"Support for late and out of order events in time based windows\" class=\"issue-link\" data-issue-key=\"STORM-1187\"><del>STORM-1187</del></a> Support windowing based on tuple ts</p>\n\n<p>    Support for doing window calculations based to tuple timestamps and handle<br/>\n    out of order events based on time lag.</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612628603/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158930102","html_url":"https://github.com/apache/storm/pull/827#issuecomment-158930102","issue_url":"https://api.github.com/repos/apache/storm/issues/827","id":158930102,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODkzMDEwMg==","user":{"login":"fhussonnois","id":1786576,"node_id":"MDQ6VXNlcjE3ODY1NzY=","avatar_url":"https://avatars.githubusercontent.com/u/1786576?v=4","gravatar_id":"","url":"https://api.github.com/users/fhussonnois","html_url":"https://github.com/fhussonnois","followers_url":"https://api.github.com/users/fhussonnois/followers","following_url":"https://api.github.com/users/fhussonnois/following{/other_user}","gists_url":"https://api.github.com/users/fhussonnois/gists{/gist_id}","starred_url":"https://api.github.com/users/fhussonnois/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fhussonnois/subscriptions","organizations_url":"https://api.github.com/users/fhussonnois/orgs","repos_url":"https://api.github.com/users/fhussonnois/repos","events_url":"https://api.github.com/users/fhussonnois/events{/privacy}","received_events_url":"https://api.github.com/users/fhussonnois/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-23T13:13:44Z","updated_at":"2015-11-23T13:13:44Z","author_association":"CONTRIBUTOR","body":"@satishd I think the fluent API handles common use cases. Its purpose is to ease the cassandra integration because creating a CQL statement from tuple is cumbersome. In case of specifics needs developers can still implement their own CQLStatementTupleMapper. So I think it will be bad to remove that API. In fact, there is a risk that developers that will use the connector have to re-develop a DSL.\nI'm not sure, but I think there is not a lot changes into cassandra connector API. DataStax seems to focus their developments onto the cassandra internal system and not onto query language support.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158930102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612605717","html_url":"https://github.com/apache/storm/issues/4913#issuecomment-2612605717","issue_url":"https://api.github.com/repos/apache/storm/issues/4913","id":2612605717,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDU3MTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-23T13:13:45Z","updated_at":"2025-01-24T14:02:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user fhussonnois commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/827#issuecomment-158930102\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/827#issuecomment-158930102</a></p>\n\n<p>    @satishd I think the fluent API handles common use cases. Its purpose is to ease the cassandra integration because creating a CQL statement from tuple is cumbersome. In case of specifics needs developers can still implement their own CQLStatementTupleMapper. So I think it will be bad to remove that API. In fact, there is a risk that developers that will use the connector have to re-develop a DSL.<br/>\n    I'm not sure, but I think there is not a lot changes into cassandra connector API. DataStax seems to focus their developments onto the cassandra internal system and not onto query language support.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612605717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158967800","html_url":"https://github.com/apache/storm/pull/890#issuecomment-158967800","issue_url":"https://api.github.com/repos/apache/storm/issues/890","id":158967800,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODk2NzgwMA==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-23T15:26:38Z","updated_at":"2015-11-23T15:26:38Z","author_association":"CONTRIBUTOR","body":"still +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158967800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612634143","html_url":"https://github.com/apache/storm/issues/5055#issuecomment-2612634143","issue_url":"https://api.github.com/repos/apache/storm/issues/5055","id":2612634143,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzQxNDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-23T15:26:39Z","updated_at":"2025-01-24T14:15:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/890#issuecomment-158967800\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/890#issuecomment-158967800</a></p>\n\n<p>    still +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612634143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/158968474","html_url":"https://github.com/apache/storm/pull/890#issuecomment-158968474","issue_url":"https://api.github.com/repos/apache/storm/issues/890","id":158968474,"node_id":"MDEyOklzc3VlQ29tbWVudDE1ODk2ODQ3NA==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-23T15:28:12Z","updated_at":"2015-11-23T15:28:12Z","author_association":"CONTRIBUTOR","body":"@kishorvpatil can we merge it now?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/158968474/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612634148","html_url":"https://github.com/apache/storm/issues/5055#issuecomment-2612634148","issue_url":"https://api.github.com/repos/apache/storm/issues/5055","id":2612634148,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzQxNDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-23T15:28:13Z","updated_at":"2025-01-24T14:15:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/890#issuecomment-158968474\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/890#issuecomment-158968474</a></p>\n\n<p>    @kishorvpatil can we merge it now?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612634148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612558956","html_url":"https://github.com/apache/storm/issues/4666#issuecomment-2612558956","issue_url":"https://api.github.com/repos/apache/storm/issues/4666","id":2612558956,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NTg5NTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-11-23T15:40:55Z","updated_at":"2025-01-24T13:41:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=zhuoliu\">zhuoliu</a>:</i>\n<p>Hi <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=abhishekamralkar\" class=\"user-hover\" rel=\"abhishekamralkar\">Abhishek Amralkar</a>, yes. And I guess what we are curious is: since this call takes place within the same executor thread, why do we need to add \"synchronized\"? That is because the OutputCollector is not yet as thread-safe as it claims in the documentation (see <a href=\"https://issues.apache.org/jira/browse/STORM-120\" title=\"util/acquire-random-range-id is not thread-safe\" class=\"issue-link\" data-issue-key=\"STORM-120\"><del>STORM-120</del></a>). Once we got <a href=\"https://issues.apache.org/jira/browse/STORM-120\" title=\"util/acquire-random-range-id is not thread-safe\" class=\"issue-link\" data-issue-key=\"STORM-120\"><del>STORM-120</del></a> bug fixed, we may remove the \"synchronized\".</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612558956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]