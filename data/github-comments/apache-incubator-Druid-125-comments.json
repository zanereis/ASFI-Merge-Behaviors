[{"url":"https://api.github.com/repos/apache/druid/issues/comments/276341648","html_url":"https://github.com/apache/druid/pull/3874#issuecomment-276341648","issue_url":"https://api.github.com/repos/apache/druid/issues/3874","id":276341648,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjM0MTY0OA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T11:38:15Z","updated_at":"2017-01-31T11:38:15Z","author_association":"CONTRIBUTOR","body":"The latest patch looks good to me.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276341648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276357455","html_url":"https://github.com/apache/druid/issues/3891#issuecomment-276357455","issue_url":"https://api.github.com/repos/apache/druid/issues/3891","id":276357455,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjM1NzQ1NQ==","user":{"login":"weijietong","id":728692,"node_id":"MDQ6VXNlcjcyODY5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/728692?v=4","gravatar_id":"","url":"https://api.github.com/users/weijietong","html_url":"https://github.com/weijietong","followers_url":"https://api.github.com/users/weijietong/followers","following_url":"https://api.github.com/users/weijietong/following{/other_user}","gists_url":"https://api.github.com/users/weijietong/gists{/gist_id}","starred_url":"https://api.github.com/users/weijietong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weijietong/subscriptions","organizations_url":"https://api.github.com/users/weijietong/orgs","repos_url":"https://api.github.com/users/weijietong/repos","events_url":"https://api.github.com/users/weijietong/events{/privacy}","received_events_url":"https://api.github.com/users/weijietong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T13:03:29Z","updated_at":"2017-01-31T13:03:29Z","author_association":"NONE","body":"Except avoiding the serde bottleneck,Arrow stores data as off heap DirectByteBuffer. By leveraging NIO RPC , we can achieve sending data with zero copy memory performance , that is what Servelet does not support .  \n\nbtw I want to know how to enable Smile binary json format at current Druid version.\n\nI agree that http and json is still useful for most common case. Substituting seems rash.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276357455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276362599","html_url":"https://github.com/apache/druid/issues/3864#issuecomment-276362599","issue_url":"https://api.github.com/repos/apache/druid/issues/3864","id":276362599,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjM2MjU5OQ==","user":{"login":"DaimonPl","id":9693936,"node_id":"MDQ6VXNlcjk2OTM5MzY=","avatar_url":"https://avatars.githubusercontent.com/u/9693936?v=4","gravatar_id":"","url":"https://api.github.com/users/DaimonPl","html_url":"https://github.com/DaimonPl","followers_url":"https://api.github.com/users/DaimonPl/followers","following_url":"https://api.github.com/users/DaimonPl/following{/other_user}","gists_url":"https://api.github.com/users/DaimonPl/gists{/gist_id}","starred_url":"https://api.github.com/users/DaimonPl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaimonPl/subscriptions","organizations_url":"https://api.github.com/users/DaimonPl/orgs","repos_url":"https://api.github.com/users/DaimonPl/repos","events_url":"https://api.github.com/users/DaimonPl/events{/privacy}","received_events_url":"https://api.github.com/users/DaimonPl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T13:28:22Z","updated_at":"2017-01-31T13:28:22Z","author_association":"CONTRIBUTOR","body":"I'll be working on this. Is there some way to contact you in case i have some doubts?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276362599/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276368290","html_url":"https://github.com/apache/druid/issues/3864#issuecomment-276368290","issue_url":"https://api.github.com/repos/apache/druid/issues/3864","id":276368290,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjM2ODI5MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T13:53:38Z","updated_at":"2017-01-31T13:53:38Z","author_association":"CONTRIBUTOR","body":"Sure, just post here!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276368290/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276434181","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276434181","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276434181,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQzNDE4MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T17:35:42Z","updated_at":"2017-01-31T17:36:54Z","author_association":"CONTRIBUTOR","body":"@leventov On the question of whether Memory should be part of Druid or not, my thought is that it is weird for Druid to depend on sketches-core, but if Memory stuff was broken out into its own library that both Druid and sketches-core used, then that could be fine. To me the decision of incorporating anything into the Druid tree or using it as a dependency should be made based on:\r\n\r\n- Do we think we'll want to make changes to the library?\r\n- Does the library have other users/contributors that we want to share development efforts with?\r\n\r\nIMO, if the answer to those questions are \"yes\" and \"no\", respectively, for a given library then we should incorporate it into Druid. If the answers are anything else then it's better to keep it separate. I think for extendedset, bytebuffer-collections, and large portions of java-util, Druid was the only user so it made sense to merge them in. Memory has at least one other active user (datasketches) so to me that suggests including it as a dependency.\r\n\r\nIf that causes problems for Druid development we could always revisit.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276434181/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276434949","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276434949","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276434949,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQzNDk0OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T17:38:18Z","updated_at":"2017-01-31T17:38:18Z","author_association":"CONTRIBUTOR","body":"@leerho Could you elaborate on what's wrong with Cleaner? It's been added recently to a few places in the Druid code base and if it's scary I'd like to understand why.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276434949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276435507","html_url":"https://github.com/apache/druid/pull/3842#issuecomment-276435507","issue_url":"https://api.github.com/repos/apache/druid/issues/3842","id":276435507,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQzNTUwNw==","user":{"login":"dclim","id":11050882,"node_id":"MDQ6VXNlcjExMDUwODgy","avatar_url":"https://avatars.githubusercontent.com/u/11050882?v=4","gravatar_id":"","url":"https://api.github.com/users/dclim","html_url":"https://github.com/dclim","followers_url":"https://api.github.com/users/dclim/followers","following_url":"https://api.github.com/users/dclim/following{/other_user}","gists_url":"https://api.github.com/users/dclim/gists{/gist_id}","starred_url":"https://api.github.com/users/dclim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dclim/subscriptions","organizations_url":"https://api.github.com/users/dclim/orgs","repos_url":"https://api.github.com/users/dclim/repos","events_url":"https://api.github.com/users/dclim/events{/privacy}","received_events_url":"https://api.github.com/users/dclim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T17:40:10Z","updated_at":"2017-01-31T17:40:10Z","author_association":"CONTRIBUTOR","body":"I'm good with this after a few minor comments. I didn't test it out, I'm assuming you guys have done sufficient testing on it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276435507/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276437116","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276437116","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276437116,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQzNzExNg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T17:45:59Z","updated_at":"2017-01-31T17:45:59Z","author_association":"CONTRIBUTOR","body":"@cheddar \r\n\r\n> Fwiw, I think it is better to try to do an all-or-nothing swap of the libraries and just make sure that we support the same persisted data. It's a much larger PR and will be a significant QA/code review risk, but this is also something that I think we either want to take whole-hog or not at all.\r\n\r\nWould you also propose changing factorizeBuffered to take Memory on the aggregators?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276437116/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276440206","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276440206","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276440206,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQ0MDIwNg==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T17:57:03Z","updated_at":"2017-01-31T17:57:03Z","author_association":"CONTRIBUTOR","body":"@gianm yes, I would propose that the BufferedAggregators essentially become `MemoryAggregators`.  A good amount of the speed gains that we can expect from the change will come from the intermediate processing layer, which means that the aggregators would have to change.\r\n\r\nThis will have wide-reaching affects on anyone that has done their own aggregators as extensions, but I think that it is the only way to actually make the change (and that's part of the risk of the change and why I think it will take a while to get it actually accepted)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276440206/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276441899","html_url":"https://github.com/apache/druid/pull/3842#issuecomment-276441899","issue_url":"https://api.github.com/repos/apache/druid/issues/3842","id":276441899,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQ0MTg5OQ==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T18:03:12Z","updated_at":"2017-01-31T18:03:12Z","author_association":"MEMBER","body":"@dclim for https://github.com/druid-io/druid/pull/3842#discussion_r98103572 what's the conclusion, should we reset in all cases or just when `leastAvailableOffset > nextOffset` ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276441899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276444121","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276444121","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276444121,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQ0NDEyMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T18:11:24Z","updated_at":"2017-01-31T18:11:24Z","author_association":"CONTRIBUTOR","body":"Sounds like it's time to make the 0.11.0 milestone in github then!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276444121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276453920","html_url":"https://github.com/apache/druid/pull/3842#issuecomment-276453920","issue_url":"https://api.github.com/repos/apache/druid/issues/3842","id":276453920,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQ1MzkyMA==","user":{"login":"dclim","id":11050882,"node_id":"MDQ6VXNlcjExMDUwODgy","avatar_url":"https://avatars.githubusercontent.com/u/11050882?v=4","gravatar_id":"","url":"https://api.github.com/users/dclim","html_url":"https://github.com/dclim","followers_url":"https://api.github.com/users/dclim/followers","following_url":"https://api.github.com/users/dclim/following{/other_user}","gists_url":"https://api.github.com/users/dclim/gists{/gist_id}","starred_url":"https://api.github.com/users/dclim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dclim/subscriptions","organizations_url":"https://api.github.com/users/dclim/orgs","repos_url":"https://api.github.com/users/dclim/repos","events_url":"https://api.github.com/users/dclim/events{/privacy}","received_events_url":"https://api.github.com/users/dclim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T18:46:51Z","updated_at":"2017-01-31T18:46:51Z","author_association":"CONTRIBUTOR","body":"@pjain1 I'm fine with it as is","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276453920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276454917","html_url":"https://github.com/apache/druid/pull/3842#issuecomment-276454917","issue_url":"https://api.github.com/repos/apache/druid/issues/3842","id":276454917,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQ1NDkxNw==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T18:50:30Z","updated_at":"2017-01-31T18:50:30Z","author_association":"MEMBER","body":"@dclim ok took care of your comments","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276454917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276461340","html_url":"https://github.com/apache/druid/pull/3842#issuecomment-276461340","issue_url":"https://api.github.com/repos/apache/druid/issues/3842","id":276461340,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQ2MTM0MA==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T19:13:31Z","updated_at":"2017-01-31T19:13:31Z","author_association":"MEMBER","body":"fixed typo","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276461340/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276466519","html_url":"https://github.com/apache/druid/pull/3743#issuecomment-276466519","issue_url":"https://api.github.com/repos/apache/druid/issues/3743","id":276466519,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQ2NjUxOQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T19:31:23Z","updated_at":"2017-01-31T19:31:23Z","author_association":"MEMBER","body":"@cheddar @akashdw After Druid dev sync I don't _require_ review from another committer outside Yahoo, so when I finish my code-level review, this PR could be merged.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276466519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276469662","html_url":"https://github.com/apache/druid/pull/3842#issuecomment-276469662","issue_url":"https://api.github.com/repos/apache/druid/issues/3842","id":276469662,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQ2OTY2Mg==","user":{"login":"dclim","id":11050882,"node_id":"MDQ6VXNlcjExMDUwODgy","avatar_url":"https://avatars.githubusercontent.com/u/11050882?v=4","gravatar_id":"","url":"https://api.github.com/users/dclim","html_url":"https://github.com/dclim","followers_url":"https://api.github.com/users/dclim/followers","following_url":"https://api.github.com/users/dclim/following{/other_user}","gists_url":"https://api.github.com/users/dclim/gists{/gist_id}","starred_url":"https://api.github.com/users/dclim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dclim/subscriptions","organizations_url":"https://api.github.com/users/dclim/orgs","repos_url":"https://api.github.com/users/dclim/repos","events_url":"https://api.github.com/users/dclim/events{/privacy}","received_events_url":"https://api.github.com/users/dclim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T19:42:26Z","updated_at":"2017-01-31T19:42:26Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276469662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276469833","html_url":"https://github.com/apache/druid/pull/3863#issuecomment-276469833","issue_url":"https://api.github.com/repos/apache/druid/issues/3863","id":276469833,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQ2OTgzMw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T19:43:04Z","updated_at":"2017-01-31T19:43:04Z","author_association":"CONTRIBUTOR","body":"thanks, :+1:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276469833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276485894","html_url":"https://github.com/apache/druid/issues/3776#issuecomment-276485894","issue_url":"https://api.github.com/repos/apache/druid/issues/3776","id":276485894,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQ4NTg5NA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T20:42:58Z","updated_at":"2017-01-31T20:42:58Z","author_association":"CONTRIBUTOR","body":"I'm working on a PR for this","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276485894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276485981","html_url":"https://github.com/apache/druid/issues/3588#issuecomment-276485981","issue_url":"https://api.github.com/repos/apache/druid/issues/3588","id":276485981,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjQ4NTk4MQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-31T20:43:17Z","updated_at":"2017-01-31T20:43:17Z","author_association":"CONTRIBUTOR","body":"Taking this one as well","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276485981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276534044","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276534044","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276534044,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjUzNDA0NA==","user":{"login":"weijietong","id":728692,"node_id":"MDQ6VXNlcjcyODY5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/728692?v=4","gravatar_id":"","url":"https://api.github.com/users/weijietong","html_url":"https://github.com/weijietong","followers_url":"https://api.github.com/users/weijietong/followers","following_url":"https://api.github.com/users/weijietong/following{/other_user}","gists_url":"https://api.github.com/users/weijietong/gists{/gist_id}","starred_url":"https://api.github.com/users/weijietong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weijietong/subscriptions","organizations_url":"https://api.github.com/users/weijietong/orgs","repos_url":"https://api.github.com/users/weijietong/repos","events_url":"https://api.github.com/users/weijietong/events{/privacy}","received_events_url":"https://api.github.com/users/weijietong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T00:05:58Z","updated_at":"2017-02-01T00:05:58Z","author_association":"NONE","body":"Does that mean a mmap call will return the Memory , aggregators will base on the Memory too ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276534044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276548114","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276548114","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276548114,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjU0ODExNA==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T01:31:23Z","updated_at":"2017-02-01T01:31:23Z","author_association":"CONTRIBUTOR","body":"@weijietong yes, that is the proposed change.  We discussed the process and we are currently exploring two phases\r\n\r\n1. convert the \"persist and read\" paths to be based on Memory.  This might affect `ComplexMetricSerde` but should not affect the aggregators\r\n2. convert the query processing, this will affect aggregators\r\n\r\nWe will try to complete phase 1 entirely before phase 2.  The `Memory` interface should then also provide the interface required to integrate with other systems (like a distributed FS) if that is a requirement.  We can try to guess at the right \"factory\" interface to enable slotting in other `Memory` implementations as an extension point.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276548114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276550666","html_url":"https://github.com/apache/druid/pull/3838#issuecomment-276550666","issue_url":"https://api.github.com/repos/apache/druid/issues/3838","id":276550666,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjU1MDY2Ng==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T01:48:26Z","updated_at":"2017-02-01T01:48:26Z","author_association":"CONTRIBUTOR","body":"@leventov addressed your latest comments","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276550666/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276561997","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276561997","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276561997,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjU2MTk5Nw==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T03:14:07Z","updated_at":"2017-02-01T03:14:07Z","author_association":"CONTRIBUTOR","body":"@gianm  \n\n\"Could you elaborate on what's wrong with Cleaner? It's been added recently to a few places in the Druid code base and if it's scary I'd like to understand why.\"\nI just found out that our corp email was screwing up and has not been sending my replies :(  !!I have a hunch that a number of my replies have been going into a bit-bucket!So here is the reply I sent at noon today.\n\n- Creates another dependency on a non-public internal set of classes of the JVM.- It is not clear to me that Cleaner is essential, or at least it hasn't been essential so far.  \n\nMore: There is no way to achieve from Java the performance attained using Unsafe and this is why it is so widely used. Cleaner, on the other hand, is a convenience in that it allows programmers not to have to worry about freeing resources that they have allocated.  \n\nOverusing Cleaner can cause contention, and block GC operations. See https://srvaroa.github.io/java/jvm/unsafe/2016/08/28/sun-misc-cleaner.html.\n\nThere are other attempts to create public Cleaners, but from what I have read, with varied success.\nDirectByteBuffers (DBBs) are created with a messy process inside the JVM using VM calls, Bits.reserveMemory(), which calls an internal SharedSecrets() that tracks all instances of DBB. and of course Cleaner.  \n\nI do not recommend attempting to create your own DirectByteBuffers outside the JVM.  And I don't recommend attempting to create a DBB from a Memory object.  Create DBBs sparingly, and reuse them if you can.\n\n\n\n\n \n \n\n    On Tuesday, January 31, 2017 9:38 AM, Gian Merlino <notifications@github.com> wrote:\n \n\n @leerho Could you elaborate on what's wrong with Cleaner? It's been added recently to a few places in the Druid code base and if it's scary I'd like to understand why.—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread. \n\n   ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276561997/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276563498","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276563498","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276563498,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjU2MzQ5OA==","user":{"login":"weijietong","id":728692,"node_id":"MDQ6VXNlcjcyODY5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/728692?v=4","gravatar_id":"","url":"https://api.github.com/users/weijietong","html_url":"https://github.com/weijietong","followers_url":"https://api.github.com/users/weijietong/followers","following_url":"https://api.github.com/users/weijietong/following{/other_user}","gists_url":"https://api.github.com/users/weijietong/gists{/gist_id}","starred_url":"https://api.github.com/users/weijietong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weijietong/subscriptions","organizations_url":"https://api.github.com/users/weijietong/orgs","repos_url":"https://api.github.com/users/weijietong/repos","events_url":"https://api.github.com/users/weijietong/events{/privacy}","received_events_url":"https://api.github.com/users/weijietong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T03:28:03Z","updated_at":"2017-02-01T03:28:03Z","author_association":"NONE","body":"Very glad to see this process, I think this will be a great huge refactor job to Druid，but it's valuable.\r\n\r\nBtw , the coding convention of Druid ,with too much anonymous inner class 、functional programming, makes codes verbose 、unreadable. Guava has officially announced the\r\n [Caveats](https://github.com/google/guava/wiki/FunctionalExplained) .   Functional programming is the language like scala which is  good at .  If you accept this opinion, maybe we can refactor the indexing and querying part of the codes by the way at this milestone.\r\n\r\n@leerho  I think Memory may implement a reference count memory recycle algorithm like what Netty   \r\n does , not to depend on the cleaner of JVM.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276563498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276573689","html_url":"https://github.com/apache/druid/pull/3743#issuecomment-276573689","issue_url":"https://api.github.com/repos/apache/druid/issues/3743","id":276573689,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjU3MzY4OQ==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T05:06:48Z","updated_at":"2017-02-01T05:06:48Z","author_association":"CONTRIBUTOR","body":"Thanks @leventov for the review. Addressed your comments.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276573689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276573771","html_url":"https://github.com/apache/druid/pull/3877#issuecomment-276573771","issue_url":"https://api.github.com/repos/apache/druid/issues/3877","id":276573771,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjU3Mzc3MQ==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T05:07:36Z","updated_at":"2017-02-01T05:07:36Z","author_association":"CONTRIBUTOR","body":"Thanks @himanshug. Addressed comments.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276573771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276581985","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276581985","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276581985,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjU4MTk4NQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T06:20:44Z","updated_at":"2017-02-01T06:23:48Z","author_association":"MEMBER","body":"@leerho @weijietong \r\n\r\n<h4>On <code>Cleaner</code></h4>\r\n\r\nI don't see real options.\r\n - Mandatory manual `close()` / `free()`. I want to write database in Java, not C++98. Memory leaks, use-after-free guaranteed. It works (only with very experienced teams and if a lot of resources invested into code quality) in C++ projects because C++ developers are disciplined and have a lot of experience dealing with pitfalls of manual memory management. We are not.\r\n - Mandatory manual reference counting = `shared_ptr`. I don't want to write database in C++11 either. Seriously, I had experience developing \"better `ByteBuffer` frameworks\" 3-4 times, the last one is https://github.com/OpenHFT/Chronicle-Bytes. Reference counting is implemented there. My experience from this attempt: reference counting doesn't work in Java. Fortunately Chronicle Bytes also use `Cleaner`s as safety net, so manual reference counting is not mandatory with Chronicle Bytes.<p>It might work in Netty, but keep in mind that Netty is a more narrowly scoped framework, there are a few patterns how buffers are used there. I'm not sure they have to share buffers between concurrent threads, we have(?) in groupBy. Nevertheless I see messages in @normanmaurer's Twitter about finding another memory leak in Netty almost every single weak.\r\n\r\n - `finalize()` - a slower alternative to `Cleaner`, which causes GC problems.\r\n - Do you know other options?\r\n\r\nIMO DirectByteBuffer's approach with using `Cleaner` and not requiring manual memory management is just right for Java. The two mistakes that they made are\r\n - No \"public\" way to voluntary \"free\" the buffer before it is reclaimed by GC, however everybody use `((DirectByteBuffer) bb).clean()`.\r\n - It doesn't implement `AutoCloseable`, so couldn't be used in try-with-resources statement. This is why we have to add wrappers like [`MappedByteBufferHandler`](https://github.com/druid-io/druid/blob/4b3bd8bd630130fb852dfa3054bd9a60d507fd2b/java-util/src/main/java/io/druid/java/util/common/MappedByteBufferHandler.java)\r\n\r\nBut those mistakes could be easily fixed in `Memory`.\r\n\r\n<hr>\r\n\r\n> Creates another dependency on a non-public internal set of classes of the JVM.- It is not clear to me that Cleaner is essential, or at least it hasn't been essential so far.\r\n\r\nIt is already a dependency.\r\n\r\n> Overusing Cleaner can cause contention, and block GC operations. See https://srvaroa.github.io/java/jvm/unsafe/2016/08/28/sun-misc-cleaner.html.\r\n\r\nAt least it won't be worse than now, because every `DirectByteBuffer` uses `Cleaner` internally. There is no reason why we should use more \"native\" `Memory` objects, than `DirectByteBuffer` objects now. Likely we can use less `Memory` objects, because there is no 2 GB limitation in `Memory` and some distinct `ByteBuffer`s used now probably could be coalesced.\r\n\r\nAnother advantages of using `Cleaner`s: \r\n - Ability to interop (zero-copy conversion) `Memory` <-> `ByteBuffer`, that could appear to be needed even if we take all-or-nothing refactoring approach\r\n - This allows to use `Memory` *just* as we currently use ByteBuffers without regression. It will greatly reduce the *risk* and size of the refactoring.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276581985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276584370","html_url":"https://github.com/apache/druid/pull/3838#issuecomment-276584370","issue_url":"https://api.github.com/repos/apache/druid/issues/3838","id":276584370,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjU4NDM3MA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T06:39:45Z","updated_at":"2017-02-01T06:39:45Z","author_association":"CONTRIBUTOR","body":"@leventov updated PR again","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276584370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276589924","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276589924","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276589924,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjU4OTkyNA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T07:24:04Z","updated_at":"2017-02-01T07:24:04Z","author_association":"MEMBER","body":"@cheddar @gianm \r\n\r\n<h4>On <code>Memory</code> in Druid source</h4>\r\n\r\n> Do we think we'll want to make changes to the library?\r\n\r\n*Yes* during the initial refactoring and experimentation, when the refactoring is complete, maybe very rarely.\r\n\r\nSo I think the approach with breaking `Memory` into a small library works, if Yahoo guys change it during the refactoring so that there is complete agreement on it's design and implementation.\r\n\r\n> I think for extendedset, bytebuffer-collections, and large portions of java-util, Druid was the only user so it made sense to merge them in.\r\n\r\nMost important reason is that we want to make changes in those libs, which affect Druid code as well, i. e. \"cross-lib refactoring\". This is less likely for `Memory`, again, if it is reviewed thoroughly during the refactoring.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276589924/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276595444","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276595444","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276595444,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjU5NTQ0NA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T08:02:20Z","updated_at":"2017-02-01T08:12:21Z","author_association":"MEMBER","body":"@leerho \r\n\r\n<h3>Closer look at <code>Memory</code> design</h3>\r\n\r\n<h4><code>NativeMemory</code></h4>\r\n\r\n<ol><li>\r\n\r\nI'm concerned about offset -> address conversion with using two instance fields:\r\n<code>\r\nnativeRawStartAddress_ + objectBaseOffset_ + offsetBytes\r\n</code>\r\n\r\n\r\nThere should be a way to avoid this cost in critical places. Hotspot JIT itself is not very good and reliable at moving field reads outside loops, even if the fields are not changed, even if the fields are `final`.\r\n\r\nI suggest to make those offsets part of `offsetBytes` value, passed to every method. It makes `Memory` effectively stateless, if assertions (or a special boolean flag, controlling bound checks) are off.\r\n\r\nOther approaches:\r\n - Use `getAddress()` and raw `Unsafe` bypassing `Memory`. Downsides:\r\n    - Losing assertion-enabled bound checks\r\n    - Explicit dependencies on `Unsafe` in more parts of the code.\r\n - Add a set of `getXxxByAddress()` and `putXxxByAddress()` methods to `Memory`, i. e. wrap bound check and `Unsafe` call. Downside: more methods in the interface, which is easy to confuse unintentionally.\r\n</li><li>\r\nMixing Unsafe get/put with some object (<code>memArray_</code> is not <code>null</code>) and with \"raw\" address (<code>memArray_</code> is <code>null</code>) at the same site may have negative performance implications. To be tested.\r\n</li></ol>\r\n\r\n<h4><code>MemoryRegion</code></h4>\r\n\r\nThings I'm concerned about\r\n - Mutability via `assign()`.\r\n - `volatile` fields.\r\n - Delegation to \"abstracted\" base `mem_`.\r\n\r\nI suggested instead of `MemoryRegion`, where it is used, to create another copy of `NativeMemory` or `NativeMemoryR` with adjusted bounds. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276595444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276698947","html_url":"https://github.com/apache/druid/pull/3895#issuecomment-276698947","issue_url":"https://api.github.com/repos/apache/druid/issues/3895","id":276698947,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjY5ODk0Nw==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T16:07:57Z","updated_at":"2017-02-01T16:07:57Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276698947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276730983","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276730983","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276730983,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjczMDk4Mw==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T17:57:55Z","updated_at":"2017-02-01T17:57:55Z","author_association":"CONTRIBUTOR","body":"@leventov Thank you for your comments!\r\n\r\n- \"Mandatory manual close() / free(). I want to write database in Java, not C++98. ... C++11\".\r\nI don't want you to have to write in C++ either.  \r\n\r\nBut if you read some of the visceral comments coming from the Oracle-dominated JCP and even some of the authors of the JEPs submitted to the JCP, we (you and I) are not writing in \"Java\" either as we have broken the rules by writing \"... libraries and applications that, knowingly or not, make use of these non-standard, unstable and unsupported internal APIs.\" and \"If you want to perform dangerous manual memory allocations, there are other languages for that.\"   This is scary language by folks that have major influence on the future direction of Java.  (There may be some glimmers of hope in the latest JEP 260 proposal, but we will have to wait and see.)\r\n\r\nClearly, we are writing Java code in a grey area where we are trying to get as close to the metal as possible and still produce robust and maintainable systems.  I am open to morphing Memory, within reason, respecting current backward compatibility issues, into what would also be acceptable to the Druid designers.\r\n\r\n- `finalize()`:  The `Memory` use of `finalize()` is pretty benign and narrow (but I'm open to other solutions).  Currently, any direct memory allocation via `AllocMemory()`, does not actually rely on `finalize()` directly to free memory.  Instead, if the JVM calls `finalize()` an exception is thrown informing the developer that he/she did not properly `freeMemory()`.   The **only** instances of Memory that even expose the `finalize()` method are those that actually used `AllocMemory()` or `MemoryMappedFile()` to create native, off-heap memory.  This was done intentionally to reduce the number of finalize objects that the JVM has to track. My understanding from @cheddar is that these are required only in a few places in Druid, and the actual number of these allocations is not huge. \r\n\r\nIt is an assumption, on my part, that the number of developers who actually have to write the code that creates and frees native memory in Druid is a small number of skilled Java developers who  could quickly learn the patterns doing these allocations correctly.  The number of developers that receive views of Memory for reading /writing of data can be much larger.  These folks will not have the burden of worrying about freeing memory and even if they did attempt to free memory it results in a no-op.\r\n\r\nI have more comments on some of your excellent following posts to the one above. But I have to break away for a few hours.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276730983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276755540","html_url":"https://github.com/apache/druid/pull/3853#issuecomment-276755540","issue_url":"https://api.github.com/repos/apache/druid/issues/3853","id":276755540,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc1NTU0MA==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T19:27:35Z","updated_at":"2017-02-01T19:27:35Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276755540/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276757373","html_url":"https://github.com/apache/druid/pull/3853#issuecomment-276757373","issue_url":"https://api.github.com/repos/apache/druid/issues/3853","id":276757373,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc1NzM3Mw==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T19:33:48Z","updated_at":"2017-02-01T19:33:48Z","author_association":"MEMBER","body":"@himanshug: Handled review comments from slim, Please check again. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276757373/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276766936","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276766936","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276766936,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc2NjkzNg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T20:07:32Z","updated_at":"2017-02-01T20:11:23Z","author_association":"MEMBER","body":"@leerho \r\n\r\nTwo recent PRs (which @gianm mentioned): [StupidPool fixes](https://github.com/druid-io/druid/pull/3631) and [it's follow-up](https://github.com/druid-io/druid/pull/3874) specifically move away replace `finalize()` to using `Cleaner`s. Applying this change in Metamarkets's production led to [50% less GC CPU, less pauses and pauses shorter](https://github.com/druid-io/druid/pull/3631#issuecomment-268316201):\r\n![image](https://cloud.githubusercontent.com/assets/609240/22523540/5f83c79a-e885-11e6-98f2-69e0ed645fa7.png)\r\n\r\n - [0.9.2-mmx-19 is the version where \"StupidPool fixes\" PR was backported.](https://github.com/metamx/druid/releases/tag/druid-0.9.2-mmx19)\r\n - This improvement happened in two pre-Christmas weeks, which are as busy as previous weeks. Extra decrease in the Christmas week is because of reduced load.\r\n\r\nIn your previous messages you raise concern about `Cleaner`'s scalability. I agree it's not ideal and the cost is not trivial, but `finalize()` is even less scalable and slower.\r\n\r\nBecause of the mistake in the `finalize()` design that allows to \"resurrect\" objects during the `finalize()`, Objects with `finalize()` overridden couldn't often been reclaimed during the specific GC pause/phase even if unreachable, that often leads to OutOfMemoryErrors. After this \"StupidPool fixes\" backport we see much less OOMs in production: before there were several OOMs each week, after - a few (maybe less than 5) OOMs during a month and a half.\r\n\r\n> But if you read some of the visceral comments coming from the Oracle-dominated JCP and even some of the authors of the JEPs submitted to the JCP, we (you and I) are not writing in \"Java\" either as we have broken the rules by writing \"... libraries and applications that, knowingly or not, make use of these non-standard, unstable and unsupported internal APIs.\" and \"If you want to perform dangerous manual memory allocations, there are other languages for that.\" This is scary language by folks that have major influence on the future direction of Java. (There may be some glimmers of hope in the latest JEP 260 proposal, but we will have to wait and see.)\r\n\r\n`Cleaner` is \"less\" an internal and unsupported API than say `MagicAccessorImpl` and `SharedSecrets`: [`sun.misc.Cleaner` is standardized in Java 9 as `java.lang.ref.Cleaner` as a replacement for finalization](https://bugs.openjdk.java.net/browse/JDK-8138696).\r\n\r\nI don't agree with the argument that \"Cleaner is so hard to use right that only Java gurus and JDK authors should be allowed to do that.\"\r\n - We already use `Cleaner` successfully\r\n - In Java 9 it is exposed to the public, so considered by JDK authors to be comprehensible and safe enough to be used by all Java developers.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276766936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276783839","html_url":"https://github.com/apache/druid/pull/3873#issuecomment-276783839","issue_url":"https://api.github.com/repos/apache/druid/issues/3873","id":276783839,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc4MzgzOQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T21:12:37Z","updated_at":"2017-02-01T21:12:37Z","author_association":"CONTRIBUTOR","body":"@himanshug @jihoonson \r\n\r\nThanks for the comments so far, updated the PR","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276783839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276794597","html_url":"https://github.com/apache/druid/pull/3895#issuecomment-276794597","issue_url":"https://api.github.com/repos/apache/druid/issues/3895","id":276794597,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc5NDU5Nw==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T21:52:25Z","updated_at":"2017-02-01T21:52:25Z","author_association":"CONTRIBUTOR","body":"@schmee can you fill out the CLA here? http://druid.io/community/cla.html","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276794597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276798278","html_url":"https://github.com/apache/druid/issues/3820#issuecomment-276798278","issue_url":"https://api.github.com/repos/apache/druid/issues/3820","id":276798278,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc5ODI3OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T22:06:33Z","updated_at":"2017-02-01T22:06:33Z","author_association":"CONTRIBUTOR","body":"I'd like to avoid having a performance impact on historicals, where sorting is not necessary, and doing it would be wasteful.\r\n\r\nI would be fine with fixing this by just forcing cache to be disabled for groupBy v2 on brokers. If it works fine for historicals, then moving cache to historicals is a viable option for users to get groupBy caching. If we go this way, it'd be good to log a warning on broker startup if the user tried to enable groupBy caching.\r\n\r\nI would also be fine with fixing this by sorting results when pulling from cache, but only on brokers. (It has to be when pulling, not when inserting, because it's possible the brokers and historicals share a memcache and a historical wrote in some unsorted results)\r\n\r\nBoth of those approaches mean that the query tool chest needs to know whether it's on a broker or not. I'm not sure of the best way to expose that (isBroker is probably wrong). Maybe \"willMergeRunners\"? (groupBy v2 does sorting & merging in mergeRunners, so that'd be enough info)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276798278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276799456","html_url":"https://github.com/apache/druid/pull/3873#issuecomment-276799456","issue_url":"https://api.github.com/repos/apache/druid/issues/3873","id":276799456,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njc5OTQ1Ng==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T22:11:15Z","updated_at":"2017-02-01T22:11:15Z","author_association":"CONTRIBUTOR","body":"marking this WIP, fixing some test failures, will reopen later","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276799456/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276807313","html_url":"https://github.com/apache/druid/pull/3894#issuecomment-276807313","issue_url":"https://api.github.com/repos/apache/druid/issues/3894","id":276807313,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjgwNzMxMw==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T22:43:13Z","updated_at":"2017-02-01T22:43:13Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276807313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276814171","html_url":"https://github.com/apache/druid/pull/3893#issuecomment-276814171","issue_url":"https://api.github.com/repos/apache/druid/issues/3893","id":276814171,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjgxNDE3MQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T23:13:58Z","updated_at":"2017-02-01T23:13:58Z","author_association":"CONTRIBUTOR","body":"@gianm updated this to place the temp dir config in `druid.processing.tmpDir` instead","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276814171/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276817143","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276817143","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276817143,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjgxNzE0Mw==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-01T23:28:00Z","updated_at":"2017-02-01T23:28:00Z","author_association":"CONTRIBUTOR","body":"@leventov Ok, given that Cleaner is getting promoted, I'll concede.  And if we need to migrate Memory to Cleaner, we will do it.   \r\n\r\nI want to return to your \"Closer look at Memory\". Thank you for your critique, your suggestions are very welcome!\r\n\r\nFirst the 3 `MemoryRegion` issues.  \r\n\r\n- The volatile modifiers I had already decided to remove.  \r\n\r\n- Making `MemoryRegion` immutable is also possible, but there are some use cases, for example, where having a mutable version eliminates the need for the JVM to create millions of objects.  \r\n\r\n- Removing the \"delegation\" aspect of the MR methods could also be fixed, but in my own testing I have found that JIT does a pretty good job of eliminating method call layers.  \r\n\r\n- `NativeMemory`, offset -> address conversion issues\r\n\r\n`nativeRawStartAddress_` and  `objectBaseOffset_` play an important role in communicating what the backing memory actually is and how to properly set up the correct addresses for Unsafe. There is a little state table at the top of `NativeMemory` that illustrates the different values of these variables and the states of Memory.  \r\n\r\nThe most dramatic speedup is achieved when the method called is static final.  For the cases where speed is absolutely critical I create the static methods required where I pass what I call the `memObj`, and `memAdd` which are derived from a Memory instance.  And in the most critical cases, where I need to access several such methods, rather than relying on class variables, I will bring them into the the top of the method to increase the probability that they end up on the stack.  As an example, see [lines 135-150](https://github.com/DataSketches/sketches-core/blob/master/sketches/src/main/java/com/yahoo/sketches/theta/DirectQuickSelectSketch.java).  My point here is **not** to recommend that everyone do this, but that it is **possible** to do this from a `Memory` instance when required.  \r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276817143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276833148","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276833148","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276833148,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjgzMzE0OA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T00:55:42Z","updated_at":"2017-02-02T00:56:22Z","author_association":"MEMBER","body":"@leerho thanks.\r\n\r\n> Making `MemoryRegion` immutable is also possible, but there are some use cases, for example, where having a mutable version eliminates the need for the JVM to create millions of objects.\r\n\r\nSounds reasonable, let's keep it mutable.\r\n\r\n<hr>\r\n\r\n> Removing the \"delegation\" aspect of the MR methods could also be fixed, but in my own testing I have found that JIT does a pretty good job of eliminating method call layers.\r\n\r\n - In my experience it JIT makes inlines methods well but keeps artifact checks in the generated assembly, i. e. class checks. Making `MemoryRegion` delegation-free helps with it.\r\n - Also it should be pretty easy to implement without need to change the code that uses `MemoryRegion`.\r\n - Also consider implicit mutability problem, if `MemoryRegion` wraps another `MemoryRegion`, and the base is changed, so the derived MR is also implicitly changed. IMO it's safer and easier if we explicitly state that created MR borrows bounds and backing storage of the base MR at the moment of creation and future changes to the base MR doesn't affect the created MR.\r\n\r\n<hr>\r\n\r\n> `nativeRawStartAddress_` and `objectBaseOffset_` play an important role in communicating what the backing memory actually is and how to properly set up the correct addresses for `Unsafe`. There is a little state table at the top of `NativeMemory` that illustrates the different values of these variables and the states of `Memory`.\r\n\r\nI understand this. My proposal is to incorporate those offsets into the primitive long `offsetBytes`, passed around everywhere. I. e. in each `Memory`, 0 is not a valid `offsetBytes`, bytes offsets between `Memory.start()` and `Memory.end()` (example names) are valid. `start()` and `end()` are determined by each `Memory` depending on the backing storage. I. e. for off-heap allocated `Memory`, `.start()` returns the allocated address. For `byte[]`-backed `Memory`, `.start()` is `ARRAY_BYTE_BASE_OFFSET`. Then, in all `getXxx()` and `putXxx()` no conversion is needed, only assertion-enabled bound checks and call to Unsafe with the given `offsetBytes`.\r\n\r\nOr in other words, make what is currently returned from `getCumulativeOffset(offsetBytes)` *the* `offsetBytes`.\r\n\r\nWe took this approach in Chronicle Bytes' `BytesStore` and it worked out well.\r\n<p>\r\n\r\n> The most dramatic speedup is achieved when the method called is static final. For the cases where speed is absolutely critical I create the static methods required where I pass what I call the memObj, and memAdd which are derived from a Memory instance. And in the most critical cases, where I need to access several such methods, rather than relying on class variables, I will bring them into the the top of the method to increase the probability that they end up on the stack. As an example, see [lines 135-150](https://github.com/DataSketches/sketches-core/blob/master/sketches/src/main/java/com/yahoo/sketches/theta/DirectQuickSelectSketch.java). My point here is not to recommend that everyone do this, but that it is possible to do this from a Memory instance when required.\r\n\r\nThis is what I described as an option [above](https://github.com/druid-io/druid/issues/3892#issuecomment-276595444):\r\n\r\n- Use getAddress() and raw Unsafe bypassing Memory. Downsides:\r\n     - Losing assertion-enabled bound checks\r\n     - Explicit dependencies on Unsafe in more parts of the code.\r\n\r\nAnd I can add to this list the concern of mixing access with null and non-null as `memObj`, that I mentioned above. It may turn or not to be a performance problem, but if it will, you should add x2 more boilerplate to the code like you referenced. Or it could be encapsulated in `Memory` by making two different impls: `OffHeapMemory` and `HeapMemory`.\r\n\r\n`ByteBuffer` also does this by splitting `DirectByteBuffer` and `HeapByteBuffer`, that could also be a sign that expressing them with a single class is suboptimal.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276833148/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276856026","html_url":"https://github.com/apache/druid/pull/3897#issuecomment-276856026","issue_url":"https://api.github.com/repos/apache/druid/issues/3897","id":276856026,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njg1NjAyNg==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T03:06:57Z","updated_at":"2017-02-02T03:06:57Z","author_association":"CONTRIBUTOR","body":"already fixed in master","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276856026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276859104","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276859104","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276859104,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njg1OTEwNA==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T03:34:48Z","updated_at":"2017-02-02T03:34:48Z","author_association":"CONTRIBUTOR","body":"@leventov This is all very substantive feedback, thank you!  \r\n\r\n> Also consider implicit mutability problem, if MemoryRegion wraps another MemoryRegion, and the base is changed, so the derived MR is also implicitly changed. IMO it's safer and easier if we explicitly state that created MR borrows bounds and backing storage of the base MR at the moment of creation and future changes to the base MR doesn't affect the created MR.\r\n\r\nGood point!  Fortunately hierarchical MR are not that frequent. But you are right that once created, the leaf node MR should directly reference itself back to the backing store and not its MR parent.\r\n\r\n> Use getAddress() and raw Unsafe bypassing Memory. Downsides:\r\n>     Losing assertion-enabled bound checks\r\n>     Explicit dependencies on Unsafe in more parts of the code.\r\n\r\nYep! But I see no way around these for truly critical speed sections.  We just have to try to clearly identify and document these sections and limit the number of them.\r\n\r\n> And I can add to this list the concern of mixing access with null and non-null as memObj, that I mentioned above. It may turn or not to be a performance problem, but if it will, you should add x2 more boilerplate to the code like you referenced. Or it could be encapsulated in Memory by making two different impls: OffHeapMemory and HeapMemory.\r\n\r\n> ByteBuffer also does this by splitting DirectByteBuffer and HeapByteBuffer, that could also be a sign that expressing them with a single class is suboptimal.\r\n\r\nJust because it was done in BB, doesn't by definition make it optimal.  I'm not very impressed with the ByteBuffer architecture. The ByteBuffer hierarchy under the covers explodes into nearly 100 classes which had to be machine generated and vary hugely in their performance and all sharing inadequate and clumsy APIs. (e.g., HeapBB R/W of longs are about 8X slower than a Heap LongBuffer R/W of longs! No excuse!)  Which may have been ok for reading and writing packet streams, but clumsy for anything else. \r\n\r\n\r\nLet's discuss strategy.  We have discussed a number of things: \r\n\r\n- The implicit (hierarchical) mutability issue needs to be fixed and should not be that difficult.\r\n- We agree to keep MR mutable.\r\n- The two class vars `nativeRawStartAddress_` and `objectBaseOffset_`:  If I understand your concern, it performance and that it requires two accesses of class vars instead of one.  I'd have to creates some tests of this, but I have a hunch that the speed improvement would be minor compared to the penalty of the methods not being static.  \r\n\r\nI have to run now, but lets try to make a list :)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276859104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276866358","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-276866358","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":276866358,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njg2NjM1OA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T04:36:11Z","updated_at":"2017-02-02T04:36:11Z","author_association":"MEMBER","body":"@leerho \r\n\r\n> Yep! But I see no way around these for truly critical speed sections. We just have to try to clearly identify and document these sections and limit the number of them.\r\n\r\nI suggested a way that is likely as fast as static method approach, if `Memory` is a *local variable* in a loop, JIT will likely pull it's class check out of the loop: making \"CumulativeOffset\" *the* `offsetBytes`. It's explained in details in my previous comment.\r\n\r\nIt's important to make methods on `Memory` abstraction as fast as possible, not just provide workarounds. Consider `BufferAggregator.aggregate()`. We don't want all buffer aggregators to use address and `Unsafe` directly. The method signature should be changed to `aggregate(Memory mem, long position)`. So we want trivial operations with `Memory` in `BufferAggregator.aggregate()` impls to be fast. Extracting `Memory.getCumulativeOffset()`, `Memory.array()` from `Memory` in a trivial `aggregate()` which makes just two operations with `Memory`: one get and one put (e. g. see `DoubleMaxBufferAggregator`) makes little sense.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276866358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276869981","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-276869981","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":276869981,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njg2OTk4MQ==","user":{"login":"dkhwangbo","id":13585249,"node_id":"MDQ6VXNlcjEzNTg1MjQ5","avatar_url":"https://avatars.githubusercontent.com/u/13585249?v=4","gravatar_id":"","url":"https://api.github.com/users/dkhwangbo","html_url":"https://github.com/dkhwangbo","followers_url":"https://api.github.com/users/dkhwangbo/followers","following_url":"https://api.github.com/users/dkhwangbo/following{/other_user}","gists_url":"https://api.github.com/users/dkhwangbo/gists{/gist_id}","starred_url":"https://api.github.com/users/dkhwangbo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkhwangbo/subscriptions","organizations_url":"https://api.github.com/users/dkhwangbo/orgs","repos_url":"https://api.github.com/users/dkhwangbo/repos","events_url":"https://api.github.com/users/dkhwangbo/events{/privacy}","received_events_url":"https://api.github.com/users/dkhwangbo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T05:10:07Z","updated_at":"2017-02-02T05:10:07Z","author_association":"CONTRIBUTOR","body":"@b-slim I just reflect your another comment. Please feel free for review and giving another comment to me.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276869981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276877377","html_url":"https://github.com/apache/druid/pull/3893#issuecomment-276877377","issue_url":"https://api.github.com/repos/apache/druid/issues/3893","id":276877377,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njg3NzM3Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T06:15:08Z","updated_at":"2017-02-02T06:15:08Z","author_association":"CONTRIBUTOR","body":"Looks good to me.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276877377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276924914","html_url":"https://github.com/apache/druid/pull/3889#issuecomment-276924914","issue_url":"https://api.github.com/repos/apache/druid/issues/3889","id":276924914,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NjkyNDkxNA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T10:46:53Z","updated_at":"2017-02-02T10:46:53Z","author_association":"CONTRIBUTOR","body":"@leventov, nice work. I looked over the patch and am still reviewing.\r\nSo far, the patch looks good and I have only one question. How large is the runtime inspection overhead?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276924914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/276978808","html_url":"https://github.com/apache/druid/issues/3864#issuecomment-276978808","issue_url":"https://api.github.com/repos/apache/druid/issues/3864","id":276978808,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Njk3ODgwOA==","user":{"login":"DaimonPl","id":9693936,"node_id":"MDQ6VXNlcjk2OTM5MzY=","avatar_url":"https://avatars.githubusercontent.com/u/9693936?v=4","gravatar_id":"","url":"https://api.github.com/users/DaimonPl","html_url":"https://github.com/DaimonPl","followers_url":"https://api.github.com/users/DaimonPl/followers","following_url":"https://api.github.com/users/DaimonPl/following{/other_user}","gists_url":"https://api.github.com/users/DaimonPl/gists{/gist_id}","starred_url":"https://api.github.com/users/DaimonPl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaimonPl/subscriptions","organizations_url":"https://api.github.com/users/DaimonPl/orgs","repos_url":"https://api.github.com/users/DaimonPl/repos","events_url":"https://api.github.com/users/DaimonPl/events{/privacy}","received_events_url":"https://api.github.com/users/DaimonPl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T14:53:46Z","updated_at":"2017-02-02T14:53:46Z","author_association":"CONTRIBUTOR","body":"First PR available (extraction of HLL code to separate module)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/276978808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277039318","html_url":"https://github.com/apache/druid/pull/3900#issuecomment-277039318","issue_url":"https://api.github.com/repos/apache/druid/issues/3900","id":277039318,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzAzOTMxOA==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T18:23:22Z","updated_at":"2017-02-02T18:23:22Z","author_association":"CONTRIBUTOR","body":"I'm pretty on board with this. It'll allow us to have different and possibly better versions of HLL","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277039318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277040575","html_url":"https://github.com/apache/druid/pull/3900#issuecomment-277040575","issue_url":"https://api.github.com/repos/apache/druid/issues/3900","id":277040575,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzA0MDU3NQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T18:27:49Z","updated_at":"2017-02-02T18:27:49Z","author_association":"CONTRIBUTOR","body":"I don't think there's a need to have pluggable HLL variants (might as well be another aggregator type). But splitting is nice since it allows people that want to get HLLs out of (or into) Druid to use this module to serialize and deserialize them, same as is currently possible for datasketches.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277040575/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277093483","html_url":"https://github.com/apache/druid/pull/3873#issuecomment-277093483","issue_url":"https://api.github.com/repos/apache/druid/issues/3873","id":277093483,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzA5MzQ4Mw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T21:43:06Z","updated_at":"2017-02-02T21:43:06Z","author_association":"CONTRIBUTOR","body":"@himanshug @jihoonson \r\n\r\nUpdated this with a few more changes:\r\n* added a small optimization to skip aggregation for keys that have already been ejected from the heap when the sorting columns are a subset of the grouping key (can't be in the top N at that point, so no need to aggregate them anymore) \r\n* changed \"has aggregators\" condition to \"has non-grouping key fields\" \r\n* throws an exception now if the user sets the flag to force push down when post aggs are included in the sorting order (needs a change to the post agg interface to support byte serde and something like getMaxIntermediateSize() from AggregatorFactory, and I think that's too big for this PR)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277093483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277095469","html_url":"https://github.com/apache/druid/pull/3903#issuecomment-277095469","issue_url":"https://api.github.com/repos/apache/druid/issues/3903","id":277095469,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzA5NTQ2OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T21:50:44Z","updated_at":"2017-02-02T21:50:44Z","author_association":"CONTRIBUTOR","body":"Nice catch. How did you notice this? Did it cause wrong or weird behavior?\r\n\r\nI'm asking because it looks like the current behavior is \"harmless\" in that the string \"end\" is always greater than a time string, so `\"end\" > time_string` will always be true. IIRC, in the places this filter is used, it's an optimization to prevent returning a ton of segments from the DB. I think there's also follow up checks to filter down to the proper intervals in code. So if that's right there would be some performance impact but not correctness impact.\r\n\r\nAlso I think this will break postgresql metadata stores since it uses double-quotes to quote fields rather than backticks. So we need some way for the metadata storage extension to specify whether it likes double-quotes or backticks for this kind of thing.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277095469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277095723","html_url":"https://github.com/apache/druid/pull/3903#issuecomment-277095723","issue_url":"https://api.github.com/repos/apache/druid/issues/3903","id":277095723,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzA5NTcyMw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T21:51:40Z","updated_at":"2017-02-02T21:51:40Z","author_association":"CONTRIBUTOR","body":"CI bombed, possibly because Derby (which we use there) also doesn't like backticks. They are nonstandard and kind of a mysql thing.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277095723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277097293","html_url":"https://github.com/apache/druid/pull/3838#issuecomment-277097293","issue_url":"https://api.github.com/repos/apache/druid/issues/3838","id":277097293,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzA5NzI5Mw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T21:57:45Z","updated_at":"2017-02-02T21:57:45Z","author_association":"CONTRIBUTOR","body":"@dclim Thanks for the review, addressed your comments","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277097293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277102107","html_url":"https://github.com/apache/druid/pull/3838#issuecomment-277102107","issue_url":"https://api.github.com/repos/apache/druid/issues/3838","id":277102107,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzEwMjEwNw==","user":{"login":"dclim","id":11050882,"node_id":"MDQ6VXNlcjExMDUwODgy","avatar_url":"https://avatars.githubusercontent.com/u/11050882?v=4","gravatar_id":"","url":"https://api.github.com/users/dclim","html_url":"https://github.com/dclim","followers_url":"https://api.github.com/users/dclim/followers","following_url":"https://api.github.com/users/dclim/following{/other_user}","gists_url":"https://api.github.com/users/dclim/gists{/gist_id}","starred_url":"https://api.github.com/users/dclim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dclim/subscriptions","organizations_url":"https://api.github.com/users/dclim/orgs","repos_url":"https://api.github.com/users/dclim/repos","events_url":"https://api.github.com/users/dclim/events{/privacy}","received_events_url":"https://api.github.com/users/dclim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T22:15:56Z","updated_at":"2017-02-02T22:15:56Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277102107/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277112790","html_url":"https://github.com/apache/druid/pull/3838#issuecomment-277112790","issue_url":"https://api.github.com/repos/apache/druid/issues/3838","id":277112790,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzExMjc5MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T23:02:47Z","updated_at":"2017-02-02T23:02:47Z","author_association":"CONTRIBUTOR","body":"Taking one more look since the last round of changes.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277112790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277115127","html_url":"https://github.com/apache/druid/pull/3889#issuecomment-277115127","issue_url":"https://api.github.com/repos/apache/druid/issues/3889","id":277115127,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzExNTEyNw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T23:14:13Z","updated_at":"2017-02-02T23:14:13Z","author_association":"MEMBER","body":"@jihoonson thank you.\r\n\r\nRuntime inspection overhead is about 150 ns per `PooledTopNAlgorithm.scanAndAggregate()` call.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277115127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277116568","html_url":"https://github.com/apache/druid/pull/3711#issuecomment-277116568","issue_url":"https://api.github.com/repos/apache/druid/issues/3711","id":277116568,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzExNjU2OA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T23:21:26Z","updated_at":"2017-02-02T23:21:26Z","author_association":"CONTRIBUTOR","body":":+1:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277116568/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277118114","html_url":"https://github.com/apache/druid/pull/3711#issuecomment-277118114","issue_url":"https://api.github.com/repos/apache/druid/issues/3711","id":277118114,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzExODExNA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T23:28:40Z","updated_at":"2017-02-02T23:29:36Z","author_association":"CONTRIBUTOR","body":"If a user deploys a coordinator with this patch, would this break existing deployments (i.e., could the new hybrid coordinator/overlord take leadership from the existing overlord, with the user having configured their environment to point to only that old overlord?)\r\n\r\nIf so, let's mark this incompatible or set the `beOverlord` to false by default for now","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277118114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277122949","html_url":"https://github.com/apache/druid/pull/3903#issuecomment-277122949","issue_url":"https://api.github.com/repos/apache/druid/issues/3903","id":277122949,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzEyMjk0OQ==","user":{"login":"michaelschiff","id":1669670,"node_id":"MDQ6VXNlcjE2Njk2NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1669670?v=4","gravatar_id":"","url":"https://api.github.com/users/michaelschiff","html_url":"https://github.com/michaelschiff","followers_url":"https://api.github.com/users/michaelschiff/followers","following_url":"https://api.github.com/users/michaelschiff/following{/other_user}","gists_url":"https://api.github.com/users/michaelschiff/gists{/gist_id}","starred_url":"https://api.github.com/users/michaelschiff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/michaelschiff/subscriptions","organizations_url":"https://api.github.com/users/michaelschiff/orgs","repos_url":"https://api.github.com/users/michaelschiff/repos","events_url":"https://api.github.com/users/michaelschiff/events{/privacy}","received_events_url":"https://api.github.com/users/michaelschiff/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T23:52:52Z","updated_at":"2017-02-02T23:52:58Z","author_association":"CONTRIBUTOR","body":"> it's an optimization to prevent returning a ton of segments from the DB\r\n\r\nThese calls started to return way too many segments, and were slowing down.  We started looking at them just because of the slow query speeds.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277122949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277124022","html_url":"https://github.com/apache/druid/pull/3903#issuecomment-277124022","issue_url":"https://api.github.com/repos/apache/druid/issues/3903","id":277124022,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzEyNDAyMg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-02T23:58:47Z","updated_at":"2017-02-02T23:59:06Z","author_association":"CONTRIBUTOR","body":"Got it, that makes sense. Would you mind adjusting things so it still works on Derby and Postgres? If so we can take the fix.\r\n\r\nThe approach could be similar to how payload types are handled, see `protected String getPayloadType()` in SQLMetadataConnector.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277124022/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277211484","html_url":"https://github.com/apache/druid/pull/3900#issuecomment-277211484","issue_url":"https://api.github.com/repos/apache/druid/issues/3900","id":277211484,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzIxMTQ4NA==","user":{"login":"DaimonPl","id":9693936,"node_id":"MDQ6VXNlcjk2OTM5MzY=","avatar_url":"https://avatars.githubusercontent.com/u/9693936?v=4","gravatar_id":"","url":"https://api.github.com/users/DaimonPl","html_url":"https://github.com/DaimonPl","followers_url":"https://api.github.com/users/DaimonPl/followers","following_url":"https://api.github.com/users/DaimonPl/following{/other_user}","gists_url":"https://api.github.com/users/DaimonPl/gists{/gist_id}","starred_url":"https://api.github.com/users/DaimonPl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DaimonPl/subscriptions","organizations_url":"https://api.github.com/users/DaimonPl/orgs","repos_url":"https://api.github.com/users/DaimonPl/repos","events_url":"https://api.github.com/users/DaimonPl/events{/privacy}","received_events_url":"https://api.github.com/users/DaimonPl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T10:13:02Z","updated_at":"2017-02-03T10:13:02Z","author_association":"CONTRIBUTOR","body":"CLA filled.\r\n\r\nThx for tip about ByteBuffer - HyperLogLogCollector updated with makeCollectorSharingStorage - ByteBuffer#duplicate() name is very misleading :/","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277211484/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277274661","html_url":"https://github.com/apache/druid/pull/3902#issuecomment-277274661","issue_url":"https://api.github.com/repos/apache/druid/issues/3902","id":277274661,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzI3NDY2MQ==","user":{"login":"kaijianding","id":8663725,"node_id":"MDQ6VXNlcjg2NjM3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/8663725?v=4","gravatar_id":"","url":"https://api.github.com/users/kaijianding","html_url":"https://github.com/kaijianding","followers_url":"https://api.github.com/users/kaijianding/followers","following_url":"https://api.github.com/users/kaijianding/following{/other_user}","gists_url":"https://api.github.com/users/kaijianding/gists{/gist_id}","starred_url":"https://api.github.com/users/kaijianding/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaijianding/subscriptions","organizations_url":"https://api.github.com/users/kaijianding/orgs","repos_url":"https://api.github.com/users/kaijianding/repos","events_url":"https://api.github.com/users/kaijianding/events{/privacy}","received_events_url":"https://api.github.com/users/kaijianding/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T15:21:52Z","updated_at":"2017-02-03T15:27:49Z","author_association":"CONTRIBUTOR","body":"If I understand correctly, you update segments by calling httpClient.go(url) for each server in the `servers` list infinitely inside a thread pool.\r\nTo my knowledge, the httpClient.go() use a connection pool which actually using ImmediateCreationResourceHolder. This resourceHolder holds an objectList whose size is configed by broker.numConnections. httpClient.go takes first connection from the head of objectList and give it back and add the connection to the end of objectList when httpClient.go() finished.\r\nIn this way all connections hold by this resourceHolder are active(or hot?), whether this is a kind of waste if the druid cluster is a not a busy cluster?\r\n\r\nIf the cluster is not a busy cluster, can a connection is in `disconnected` state(disconnected by historical/realtime node when over the `idleTimeOut`) when attempt to use this connection to get segment list? In this case a new connection is created(renew), will it cause performance issue if lots of connections need to be renew? Can always get a disconnected connection for the server if the `servers` list is large and numConnections is too big?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277274661/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277291258","html_url":"https://github.com/apache/druid/pull/3900#issuecomment-277291258","issue_url":"https://api.github.com/repos/apache/druid/issues/3900","id":277291258,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzI5MTI1OA==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T16:19:31Z","updated_at":"2017-02-03T16:19:31Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277291258/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277292261","html_url":"https://github.com/apache/druid/pull/3904#issuecomment-277292261","issue_url":"https://api.github.com/repos/apache/druid/issues/3904","id":277292261,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzI5MjI2MQ==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T16:23:13Z","updated_at":"2017-02-03T16:23:13Z","author_association":"MEMBER","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277292261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277294357","html_url":"https://github.com/apache/druid/pull/3904#issuecomment-277294357","issue_url":"https://api.github.com/repos/apache/druid/issues/3904","id":277294357,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzI5NDM1Nw==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T16:30:49Z","updated_at":"2017-02-03T16:30:49Z","author_association":"MEMBER","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277294357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277302204","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-277302204","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":277302204,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzMwMjIwNA==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T16:59:59Z","updated_at":"2017-02-03T16:59:59Z","author_association":"MEMBER","body":"also it would be great if you can write some documentation for this extension. For example, here's the documentation for `StatsD Emitter` - https://github.com/druid-io/druid/blob/master/docs/content/development/extensions-contrib/statsd.md\r\nYou can include the extension in list of Community Extensions here - https://github.com/druid-io/druid/blob/master/docs/content/development/extensions.md","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277302204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277311418","html_url":"https://github.com/apache/druid/pull/3711#issuecomment-277311418","issue_url":"https://api.github.com/repos/apache/druid/issues/3711","id":277311418,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzMxMTQxOA==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T17:36:46Z","updated_at":"2017-02-03T17:36:46Z","author_association":"MEMBER","body":"This looks a little messy to me but I cannot think of any other way apart from creating an entirely new node type so 👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277311418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277313450","html_url":"https://github.com/apache/druid/pull/3900#issuecomment-277313450","issue_url":"https://api.github.com/repos/apache/druid/issues/3900","id":277313450,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzMxMzQ1MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T17:44:49Z","updated_at":"2017-02-03T17:44:49Z","author_association":"CONTRIBUTOR","body":"LGTM, thx @DaimonPl!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277313450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277316810","html_url":"https://github.com/apache/druid/issues/3905#issuecomment-277316810","issue_url":"https://api.github.com/repos/apache/druid/issues/3905","id":277316810,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzMxNjgxMA==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T17:58:46Z","updated_at":"2017-02-03T17:58:46Z","author_association":"CONTRIBUTOR","body":"@julianhyde i have run this same query on my druid and it works. can you please provide the exception stack from druid side ? and which version are you trying ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277316810/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277317146","html_url":"https://github.com/apache/druid/issues/3905#issuecomment-277317146","issue_url":"https://api.github.com/repos/apache/druid/issues/3905","id":277317146,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzMxNzE0Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T18:00:03Z","updated_at":"2017-02-03T18:00:03Z","author_association":"CONTRIBUTOR","body":"@julianhyde Do you have a copy of the http response from Druid, or alternatively are there any interesting exceptions in the Druid broker or historical logs?\r\n\r\nI wonder if it's something to do with granularity \"none\". Issuing queries with none granularity is a little sketchy because it leads to generating a cursor for every possible millisecond -- and there's a lot of milliseconds between 1900 and 2015.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277317146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277320371","html_url":"https://github.com/apache/druid/issues/3905#issuecomment-277320371","issue_url":"https://api.github.com/repos/apache/druid/issues/3905","id":277320371,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzMyMDM3MQ==","user":{"login":"julianhyde","id":1130553,"node_id":"MDQ6VXNlcjExMzA1NTM=","avatar_url":"https://avatars.githubusercontent.com/u/1130553?v=4","gravatar_id":"","url":"https://api.github.com/users/julianhyde","html_url":"https://github.com/julianhyde","followers_url":"https://api.github.com/users/julianhyde/followers","following_url":"https://api.github.com/users/julianhyde/following{/other_user}","gists_url":"https://api.github.com/users/julianhyde/gists{/gist_id}","starred_url":"https://api.github.com/users/julianhyde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/julianhyde/subscriptions","organizations_url":"https://api.github.com/users/julianhyde/orgs","repos_url":"https://api.github.com/users/julianhyde/repos","events_url":"https://api.github.com/users/julianhyde/events{/privacy}","received_events_url":"https://api.github.com/users/julianhyde/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T18:13:13Z","updated_at":"2017-02-03T18:13:13Z","author_association":"NONE","body":"I'm running druid-0.9.1.1 (set up via https://github.com/vlsi/calcite-test-dataset if you want to reproduce the exact environment).\r\n\r\nHere's the end of `broker.log`:\r\n\r\n```\r\n2017-02-03T18:09:17,023 ERROR [qtp448782465-27] io.druid.server.QueryResource - Exception handling request: {class=io.druid.server.QueryResource, exceptionType=class com.fasterxml.jackson.databind\r\n.JsonMappingException, exceptionMessage=Instantiation of [simple type, class io.druid.query.timeseries.TimeseriesQuery] value failed: Must have at least one AggregatorFactory, exception=com.faster\r\nxml.jackson.databind.JsonMappingException: Instantiation of [simple type, class io.druid.query.timeseries.TimeseriesQuery] value failed: Must have at least one AggregatorFactory, query=unparsable \r\nquery, peer=10.0.2.2}\r\ncom.fasterxml.jackson.databind.JsonMappingException: Instantiation of [simple type, class io.druid.query.timeseries.TimeseriesQuery] value failed: Must have at least one AggregatorFactory\r\n        at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.wrapException(StdValueInstantiator.java:405) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromObjectWith(StdValueInstantiator.java:234) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:167) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:398) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1064) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:264) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:156) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:126) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:113) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:84) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.deser.AbstractDeserializer.deserializeWithType(AbstractDeserializer.java:132) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:41) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3066) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2207) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at io.druid.server.QueryResource.doPost(QueryResource.java:176) [druid-server-0.9.1.1.jar:0.9.1.1]\r\n        at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source) ~[?:?]\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_72]\r\n        at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_72]\r\n        at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60) [jersey-server-1.19.jar:1.19]\r\n        at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205) [jersey-server-1.19\r\n.jar:1.19]\r\n        at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75) [jersey-server-1.19.jar:1.19]\r\n        at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302) [jersey-server-1.19.jar:1.19]\r\n        at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108) [jersey-server-1.19.jar:1.19]\r\n        at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147) [jersey-server-1.19.jar:1.19]\r\n        at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84) [jersey-server-1.19.jar:1.19]\r\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542) [jersey-server-1.19.jar:1.19]\r\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473) [jersey-server-1.19.jar:1.19]\r\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419) [jersey-server-1.19.jar:1.19]\r\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409) [jersey-server-1.19.jar:1.19]\r\n        at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409) [jersey-servlet-1.19.jar:1.19]\r\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558) [jersey-servlet-1.19.jar:1.19]\r\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733) [jersey-servlet-1.19.jar:1.19]\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) [javax.servlet-api-3.1.0.jar:3.1.0]\r\n        at com.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:278) [guice-servlet-4.0-beta.jar:?]\r\n        at com.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:268) [guice-servlet-4.0-beta.jar:?]\r\n        at com.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:180) [guice-servlet-4.0-beta.jar:?]\r\n        at com.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:93) [guice-servlet-4.0-beta.jar:?]\r\n        at com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85) [guice-servlet-4.0-beta.jar:?]\r\n        at com.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:120) [guice-servlet-4.0-beta.jar:?]\r\n        at com.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:132) [guice-servlet-4.0-beta.jar:?]\r\n        at com.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:129) [guice-servlet-4.0-beta.jar:?]\r\n        at com.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:206) [guice-servlet-4.0-beta.jar:?]\r\n        at com.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:129) [guice-servlet-4.0-beta.jar:?]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) [jetty-servlet-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.servlets.UserAgentFilter.doFilter(UserAgentFilter.java:83) [jetty-servlets-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) [jetty-servlet-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.servlets.UserAgentFilter.doFilter(UserAgentFilter.java:83) [jetty-servlets-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.servlets.GzipFilter.doFilter(GzipFilter.java:364) [jetty-servlets-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) [jetty-servlet-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) [jetty-servlet-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221) [jetty-server-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125) [jetty-server-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) [jetty-servlet-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) [jetty-server-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059) [jetty-server-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [jetty-server-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52) [jetty-server-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) [jetty-server-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.server.Server.handle(Server.java:497) [jetty-server-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310) [jetty-server-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248) [jetty-server-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540) [jetty-io-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:620) [jetty-util-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:540) [jetty-util-9.2.5.v20141112.jar:9.2.5.v20141112]\r\n        at java.lang.Thread.run(Thread.java:745) [?:1.8.0_72]\r\nCaused by: java.lang.IllegalArgumentException: Must have at least one AggregatorFactory\r\n        at com.google.common.base.Preconditions.checkArgument(Preconditions.java:125) ~[guava-16.0.1.jar:?]\r\n        at io.druid.query.Queries.verifyAggregations(Queries.java:40) ~[druid-processing-0.9.1.1.jar:0.9.1.1]\r\n        at io.druid.query.timeseries.TimeseriesQuery.<init>(TimeseriesQuery.java:68) ~[druid-processing-0.9.1.1.jar:0.9.1.1]\r\n        at sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source) ~[?:?]\r\n        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_72]\r\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_72]\r\n        at com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.call(AnnotatedConstructor.java:125) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromObjectWith(StdValueInstantiator.java:230) ~[jackson-databind-2.4.6.jar:2.4.6]\r\n        ... 61 more\r\n2017-02-03T18:09:17,025 INFO [qtp448782465-27] com.metamx.emitter.core.LoggingEmitter - Event [{\"feed\":\"alerts\",\"timestamp\":\"2017-02-03T18:09:17.025Z\",\"service\":\"druid/broker\",\"host\":\"ubuntucalcite:8082\",\"severity\":\"component-failure\",\"description\":\"Exception handling request\",\"data\":{\"class\":\"io.druid.server.QueryResource\",\"exceptionType\":\"com.fasterxml.jackson.databind.JsonMappingException\",\"exceptionMessage\":\"Instantiation of [simple type, class io.druid.query.timeseries.TimeseriesQuery] value failed: Must have at least one AggregatorFactory\",\"exceptionStackTrace\":\"com.fasterxml.jackson.databind.JsonMappingException: Instantiation of [simple type, class io.druid.query.timeseries.TimeseriesQuery] value failed: Must have at least one AggregatorFactory\\n\\tat com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.wrapException(StdValueInstantiator.java:405)\\n\\tat com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromObjectWith(StdValueInstantiator.java:234)\\n\\tat com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:167)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:398)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1064)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:264)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:156)\\n\\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:126)\\n\\tat com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:113)\\n\\tat com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:84)\\n\\tat com.fasterxml.jackson.databind.deser.AbstractDeserializer.deserializeWithType(AbstractDeserializer.java:132)\\n\\tat com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:41)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3066)\\n\\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2207)\\n\\tat io.druid.server.QueryResource.doPost(QueryResource.java:176)\\n\\tat sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)\\n\\tat com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)\\n\\tat com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)\\n\\tat com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)\\n\\tat com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)\\n\\tat com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\\n\\tat com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\\n\\tat com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\\n\\tat com.google.inject.servlet.ServletDefinition.doServiceImpl(ServletDefinition.java:278)\\n\\tat com.google.inject.servlet.ServletDefinition.doService(ServletDefinition.java:268)\\n\\tat com.google.inject.servlet.ServletDefinition.service(ServletDefinition.java:180)\\n\\tat com.google.inject.servlet.ManagedServletPipeline.service(ManagedServletPipeline.java:93)\\n\\tat com.google.inject.servlet.FilterChainInvocation.doFilter(FilterChainInvocation.java:85)\\n\\tat com.google.inject.servlet.ManagedFilterPipeline.dispatch(ManagedFilterPipeline.java:120)\\n\\tat com.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:132)\\n\\tat com.google.inject.servlet.GuiceFilter$1.call(GuiceFilter.java:129)\\n\\tat com.google.inject.servlet.GuiceFilter$Context.call(GuiceFilter.java:206)\\n\\tat com.google.inject.servlet.GuiceFilter.doFilter(GuiceFilter.java:129)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\\n\\tat org.eclipse.jetty.servlets.UserAgentFilter.doFilter(UserAgentFilter.java:83)\\n\\tat org.eclipse.jetty.servlets.GzipFilter.doFilter(GzipFilter.java:364)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\\n\\tat org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\\n\\tat org.eclipse.jetty.server.Server.handle(Server.java:497)\\n\\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\\n\\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\\n\\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:620)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:540)\\n\\tat java.lang.Thread.run(Thread.java:745)\\nCaused by: java.lang.IllegalArgumentException: Must have at least one AggregatorFactory\\n\\tat com.google.common.base.Preconditions.checkArgument(Preconditions.java:125)\\n\\tat io.druid.query.Queries.verifyAggregations(Queries.java:40)\\n\\tat io.druid.query.timeseries.TimeseriesQuery.<init>(TimeseriesQuery.java:68)\\n\\tat sun.reflect.GeneratedConstructorAccessor64.newInstance(Unknown Source)\\n\\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\\n\\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\\n\\tat com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.call(AnnotatedConstructor.java:125)\\n\\tat com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromObjectWith(StdValueInstantiator.java:230)\\n\\t... 61 more\\n\",\"exception\":\"com.fasterxml.jackson.databind.JsonMappingException: Instantiation of [simple type, class io.druid.query.timeseries.TimeseriesQuery] value failed: Must have at least one AggregatorFactory\",\"query\":\"unparsable query\",\"peer\":\"10.0.2.2\"}}]\r\n```\r\n\r\nAlso, `coordinator.log` has several messages like this:\r\n```\r\n2017-02-03T18:12:18,701 WARN [Coordinator-Exec--0] io.druid.server.coordinator.rules.LoadRule - Not enough [_default_tier] servers or node capacity to assign segment[foodmart_1997-01-01T00:00:00.000Z_1997-02-01T00:00:00.000Z_2017-02-02T23:08:00.863Z]! Expected Replicants[2]\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277320371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277321198","html_url":"https://github.com/apache/druid/issues/3905#issuecomment-277321198","issue_url":"https://api.github.com/repos/apache/druid/issues/3905","id":277321198,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzMyMTE5OA==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T18:16:37Z","updated_at":"2017-02-03T18:16:37Z","author_association":"CONTRIBUTOR","body":"you need this patch https://github.com/druid-io/druid/pull/3216","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277321198/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277321382","html_url":"https://github.com/apache/druid/issues/3905#issuecomment-277321382","issue_url":"https://api.github.com/repos/apache/druid/issues/3905","id":277321382,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzMyMTM4Mg==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T18:17:23Z","updated_at":"2017-02-03T18:17:23Z","author_association":"CONTRIBUTOR","body":"@julianhyde bumping the version to 0.9.2 should solve this.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277321382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277333735","html_url":"https://github.com/apache/druid/pull/3902#issuecomment-277333735","issue_url":"https://api.github.com/repos/apache/druid/issues/3902","id":277333735,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzMzMzczNQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T19:05:58Z","updated_at":"2017-02-03T19:05:58Z","author_association":"CONTRIBUTOR","body":"@kaijianding thanks for taking a look. you are right about the connection usage and yes coordinator/broker would be using one connection from HttpClient per historical/realtime all the time.\r\nOn a non-busy cluster or in the worst case coordinator/broker would have to create one connection per historical/realtime every 4 mins ( default config in HttpServerInventoryViewConfig ). But, They will be created sequentially and not in parallel.\r\nHowever, it turns out that this problem can be very easily fixed by changing the get/giveBack behavior of ResourcePool.ImmediateCreationResourceHolder to LIFO instead of current FIFO. It can be done by replacing https://github.com/metamx/http-client/blob/master/src/main/java/com/metamx/http/client/pool/ResourcePool.java#L237 by `objectList.addFirst(object)`. I will do a PR to fix that.\r\n\r\nbtw, I have also made few updates in SegmentListerResource to make it async and not hold any jetty threads while in wait.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277333735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277343093","html_url":"https://github.com/apache/druid/pull/3711#issuecomment-277343093","issue_url":"https://api.github.com/repos/apache/druid/issues/3711","id":277343093,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM0MzA5Mw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T19:43:20Z","updated_at":"2017-02-03T19:43:20Z","author_association":"CONTRIBUTOR","body":"@jon-wei  that should not be a problem , it should still work as this makes coordinator process equivalent of a (coordinator+overlord) process.\r\noriginally, I had `beOverlord ` set to false by default but it was decided to make it true by default to encourage customers to use it. In any case, let us hold on from merging this till next dev sync and we can rethink the decision on that.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277343093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277348164","html_url":"https://github.com/apache/druid/pull/3711#issuecomment-277348164","issue_url":"https://api.github.com/repos/apache/druid/issues/3711","id":277348164,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM0ODE2NA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T20:03:36Z","updated_at":"2017-02-03T20:03:36Z","author_association":"CONTRIBUTOR","body":"Since it's a major change I think it's best to make it false by default in the code (for better compat with existing installs). But we can certainly change the quickstart configs to include beOverlord=true. I find that generally people start from the quickstart configs and copy them to start a prod config, so that'll have the effect of encouraging people to use it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277348164/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277369180","html_url":"https://github.com/apache/druid/pull/3850#issuecomment-277369180","issue_url":"https://api.github.com/repos/apache/druid/issues/3850","id":277369180,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM2OTE4MA==","user":{"login":"praveev","id":297278,"node_id":"MDQ6VXNlcjI5NzI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/297278?v=4","gravatar_id":"","url":"https://api.github.com/users/praveev","html_url":"https://github.com/praveev","followers_url":"https://api.github.com/users/praveev/followers","following_url":"https://api.github.com/users/praveev/following{/other_user}","gists_url":"https://api.github.com/users/praveev/gists{/gist_id}","starred_url":"https://api.github.com/users/praveev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveev/subscriptions","organizations_url":"https://api.github.com/users/praveev/orgs","repos_url":"https://api.github.com/users/praveev/repos","events_url":"https://api.github.com/users/praveev/events{/privacy}","received_events_url":"https://api.github.com/users/praveev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T21:38:42Z","updated_at":"2017-02-03T21:38:42Z","author_association":"CONTRIBUTOR","body":"@leventov i see that you've self-assigned this. Can you pls review? I can make the changes together all at once then","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277369180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277375358","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-277375358","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":277375358,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM3NTM1OA==","user":{"login":"AshwinJay","id":222056,"node_id":"MDQ6VXNlcjIyMjA1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/222056?v=4","gravatar_id":"","url":"https://api.github.com/users/AshwinJay","html_url":"https://github.com/AshwinJay","followers_url":"https://api.github.com/users/AshwinJay/followers","following_url":"https://api.github.com/users/AshwinJay/following{/other_user}","gists_url":"https://api.github.com/users/AshwinJay/gists{/gist_id}","starred_url":"https://api.github.com/users/AshwinJay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AshwinJay/subscriptions","organizations_url":"https://api.github.com/users/AshwinJay/orgs","repos_url":"https://api.github.com/users/AshwinJay/repos","events_url":"https://api.github.com/users/AshwinJay/events{/privacy}","received_events_url":"https://api.github.com/users/AshwinJay/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T22:06:34Z","updated_at":"2017-02-03T22:06:34Z","author_association":"NONE","body":"Flink does something similar (you may already know):\r\n\r\n- https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=53741525\r\n- https://flink.apache.org/news/2015/05/11/Juggling-with-Bits-and-Bytes.html\r\n- https://cwiki.apache.org/confluence/display/FLINK/Netty+memory+allocation\r\n\r\nI'm surprised that you'd not want to use Netty's allocator. Are the leaks that bad or that widespread? There are some goodies in addition to the allocator:\r\n\r\n- https://netty.io/4.1/api/io/netty/channel/CoalescingBufferQueue.html\r\n- https://netty.io/4.0/api/io/netty/buffer/ByteBufUtil.html\r\n\r\nPresto:\r\n\r\n- https://github.com/prestodb/presto/tree/c73359fe2173e01140b7d5f102b286e81c1ae4a8/presto-main/src/main/java/com/facebook/presto/memory\r\n- https://github.com/prestodb/presto/blob/master/presto-spi/src/main/java/com/facebook/presto/spi/Page.java\r\n- https://github.com/prestodb/presto/tree/master/presto-spi/src/main/java/com/facebook/presto/spi/block\r\n\r\n(Pardon the intrusion, but I'm trying to understand why almost every big open source Java project ends up creating its own Unsafe based memory manager)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277375358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277375511","html_url":"https://github.com/apache/druid/pull/3848#issuecomment-277375511","issue_url":"https://api.github.com/repos/apache/druid/issues/3848","id":277375511,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM3NTUxMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T22:07:19Z","updated_at":"2017-02-03T22:07:19Z","author_association":"CONTRIBUTOR","body":"Taking another look now, @jihoonson ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277375511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277377710","html_url":"https://github.com/apache/druid/pull/3873#issuecomment-277377710","issue_url":"https://api.github.com/repos/apache/druid/issues/3873","id":277377710,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzM3NzcxMA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-03T22:17:29Z","updated_at":"2017-02-03T22:17:41Z","author_association":"CONTRIBUTOR","body":"i looked at LimitedBufferGrouper and ByteBufferMinMaxOffsetHeap , they look OK but I'm assuming enough unit testing is done to catch any non-trivial issues.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277377710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277403247","html_url":"https://github.com/apache/druid/pull/3743#issuecomment-277403247","issue_url":"https://api.github.com/repos/apache/druid/issues/3743","id":277403247,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwMzI0Nw==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T00:56:05Z","updated_at":"2017-02-04T01:20:41Z","author_association":"CONTRIBUTOR","body":"@leventov Addressed comments. Changed GenericIndexedV2 header file to store value offsets in native endian byte order.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277403247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277409797","html_url":"https://github.com/apache/druid/issues/3885#issuecomment-277409797","issue_url":"https://api.github.com/repos/apache/druid/issues/3885","id":277409797,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQwOTc5Nw==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T02:02:45Z","updated_at":"2017-02-04T02:08:34Z","author_association":"CONTRIBUTOR","body":"@gianm GenericIndexedWriter gets TmpFileIOPeon to create header and value files. Probably we should remove `deleteOnExit()` to prevent any side effects. We could make `IOPean` Closeable and do the cleanup in close method. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277409797/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277411244","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-277411244","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":277411244,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQxMTI0NA==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T02:21:02Z","updated_at":"2017-02-04T02:21:02Z","author_association":"CONTRIBUTOR","body":"@AshwinJay We aren't creating yet another unsafe based memory manager, instead we are borrowing these from DataSketches Memory [lib](https://github.com/DataSketches). \r\n\r\n@leventov On the discussion regarding cleaner vs using free, here is my take:\r\n1. Memory is supposed to be allocated in large chunks so we allocate very few times\r\n2. We have clear entry exit points for where Memory is being allocated (1-2 places in the whole code base) and this is the correct programming model for Memory.\r\n3. We already have a finalize in Memory incase someone forgets to free explicitly. Finalize will be slower, but it is very infrequent.\r\n\r\nDo you see value in having us use cleaner for Memory? Would love to know your thoughts.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277411244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277413724","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-277413724","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":277413724,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQxMzcyNA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T02:59:50Z","updated_at":"2017-02-04T02:59:50Z","author_association":"MEMBER","body":"@niketh \r\n\r\n`ByteBuffer.allocate()` is used 152 times, `allocateDirect()` - 6 times, `Files.map()` - 9 times.\r\n\r\n> We already have a finalize in Memory incase someone forgets to free explicitly. Finalize will be slower, but it is very infrequent.\r\n\r\n - The problem is OOMs because of inability to reclaim finalizable objects on a given GC phase. Allocating larger objects only makes it worse.\r\n - Currently StupidPool of ByteBuffers allocates as many ByteBuffers as ResourceHolders, the effect of changing that resource holders from using `finalize()` to `Cleaner` [is big](https://github.com/druid-io/druid/issues/3892#issuecomment-276766936). It was N ByteBuffer (Cleaner) + N ResourceHolders (`finalize()`). It is changed to N ByteBuffers (Cleaner) + N ResourceHolders (Cleaner). If you will change to N Memory (finalize()) + N ResourceHolders (Cleaner), I expect the effect will be just opposite to the shown above.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277413724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277413898","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-277413898","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":277413898,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQxMzg5OA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T03:03:21Z","updated_at":"2017-02-04T03:03:21Z","author_association":"MEMBER","body":"@niketh already having `finalize()` is not an argument, IMHO, because changing from `finalize()` to `Cleaner` and back is a 100 line change with zero implications on the rest of the codebase.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277413898/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277416589","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-277416589","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":277416589,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQxNjU4OQ==","user":{"login":"dkhwangbo","id":13585249,"node_id":"MDQ6VXNlcjEzNTg1MjQ5","avatar_url":"https://avatars.githubusercontent.com/u/13585249?v=4","gravatar_id":"","url":"https://api.github.com/users/dkhwangbo","html_url":"https://github.com/dkhwangbo","followers_url":"https://api.github.com/users/dkhwangbo/followers","following_url":"https://api.github.com/users/dkhwangbo/following{/other_user}","gists_url":"https://api.github.com/users/dkhwangbo/gists{/gist_id}","starred_url":"https://api.github.com/users/dkhwangbo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkhwangbo/subscriptions","organizations_url":"https://api.github.com/users/dkhwangbo/orgs","repos_url":"https://api.github.com/users/dkhwangbo/repos","events_url":"https://api.github.com/users/dkhwangbo/events{/privacy}","received_events_url":"https://api.github.com/users/dkhwangbo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T03:56:15Z","updated_at":"2017-02-04T03:56:15Z","author_association":"CONTRIBUTOR","body":"@pjain1 Thanks for your review! I just reflect your kind comment and also write documentation. Please review it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277416589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277417348","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-277417348","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":277417348,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQxNzM0OA==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T04:11:56Z","updated_at":"2017-02-04T04:11:56Z","author_association":"CONTRIBUTOR","body":"@leventov Makes sense, We will make Memory use cleaners instead of finalize.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277417348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277419223","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-277419223","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":277419223,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQxOTIyMw==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T04:54:37Z","updated_at":"2017-02-04T04:54:37Z","author_association":"MEMBER","body":"@dkhwangbo Also please file the CLA if you have not done so far - http://druid.io/community/cla.html","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277419223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277419668","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-277419668","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":277419668,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQxOTY2OA==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T05:06:09Z","updated_at":"2017-02-04T05:06:09Z","author_association":"MEMBER","body":"@dkhwangbo have you tested this emitter on your druid cluster ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277419668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277420699","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-277420699","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":277420699,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyMDY5OQ==","user":{"login":"dkhwangbo","id":13585249,"node_id":"MDQ6VXNlcjEzNTg1MjQ5","avatar_url":"https://avatars.githubusercontent.com/u/13585249?v=4","gravatar_id":"","url":"https://api.github.com/users/dkhwangbo","html_url":"https://github.com/dkhwangbo","followers_url":"https://api.github.com/users/dkhwangbo/followers","following_url":"https://api.github.com/users/dkhwangbo/following{/other_user}","gists_url":"https://api.github.com/users/dkhwangbo/gists{/gist_id}","starred_url":"https://api.github.com/users/dkhwangbo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkhwangbo/subscriptions","organizations_url":"https://api.github.com/users/dkhwangbo/orgs","repos_url":"https://api.github.com/users/dkhwangbo/repos","events_url":"https://api.github.com/users/dkhwangbo/events{/privacy}","received_events_url":"https://api.github.com/users/dkhwangbo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T05:33:06Z","updated_at":"2017-02-04T05:33:06Z","author_association":"CONTRIBUTOR","body":"@pjain1 I reflect your comment! This extension is running in my druid cluster since 3 weeks ago and All functionality doing well. Also, I already done signing CLA during writing [this PR](https://github.com/druid-io/druid/pull/3780)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277420699/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277423933","html_url":"https://github.com/apache/druid/pull/3530#issuecomment-277423933","issue_url":"https://api.github.com/repos/apache/druid/issues/3530","id":277423933,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQyMzkzMw==","user":{"login":"praveev","id":297278,"node_id":"MDQ6VXNlcjI5NzI3OA==","avatar_url":"https://avatars.githubusercontent.com/u/297278?v=4","gravatar_id":"","url":"https://api.github.com/users/praveev","html_url":"https://github.com/praveev","followers_url":"https://api.github.com/users/praveev/followers","following_url":"https://api.github.com/users/praveev/following{/other_user}","gists_url":"https://api.github.com/users/praveev/gists{/gist_id}","starred_url":"https://api.github.com/users/praveev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/praveev/subscriptions","organizations_url":"https://api.github.com/users/praveev/orgs","repos_url":"https://api.github.com/users/praveev/repos","events_url":"https://api.github.com/users/praveev/events{/privacy}","received_events_url":"https://api.github.com/users/praveev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T06:47:47Z","updated_at":"2017-02-04T06:47:47Z","author_association":"CONTRIBUTOR","body":"@gianm does using builder pattern serve this purpose? Unit test seem to pass. This ensures that those who want basePersistDirectory explicitly create it ahead of time. No creation is done in the getBasePersistDirectory() call","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277423933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277451912","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-277451912","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":277451912,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ1MTkxMg==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T15:10:03Z","updated_at":"2017-02-04T15:10:03Z","author_association":"MEMBER","body":"Closing/Reopening PR for travis","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277451912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277452053","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-277452053","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":277452053,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ1MjA1Mw==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T15:12:30Z","updated_at":"2017-02-04T15:12:30Z","author_association":"MEMBER","body":"Changes look good to me so 👍 .. however I have one last question - Why are you not handling `AlertEvent` ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277452053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277454130","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-277454130","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":277454130,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ1NDEzMA==","user":{"login":"dkhwangbo","id":13585249,"node_id":"MDQ6VXNlcjEzNTg1MjQ5","avatar_url":"https://avatars.githubusercontent.com/u/13585249?v=4","gravatar_id":"","url":"https://api.github.com/users/dkhwangbo","html_url":"https://github.com/dkhwangbo","followers_url":"https://api.github.com/users/dkhwangbo/followers","following_url":"https://api.github.com/users/dkhwangbo/following{/other_user}","gists_url":"https://api.github.com/users/dkhwangbo/gists{/gist_id}","starred_url":"https://api.github.com/users/dkhwangbo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkhwangbo/subscriptions","organizations_url":"https://api.github.com/users/dkhwangbo/orgs","repos_url":"https://api.github.com/users/dkhwangbo/repos","events_url":"https://api.github.com/users/dkhwangbo/events{/privacy}","received_events_url":"https://api.github.com/users/dkhwangbo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T15:45:56Z","updated_at":"2017-02-04T15:45:56Z","author_association":"CONTRIBUTOR","body":"@pjain1 To make this PR, I refer `graphite-emitter` and `StatsD-emitter`. Both has no handling `AlertEvent`. (Just `graphite-emitter` write error log when `AlertEvent` emitted). I dig a little up but  druid has no documentation about `AlertEvent`, furthermore, `AlertEvent` class only used in `ambari-metrics-emitter` and `graphite-emitter` in whole druid project. So, I cannot get a sense how to handle `AlertEvent` appropriately.\r\n\r\nWhat's the purpose of `AlertEvent`? When `AlertEvent` is emitted? What's the class `AlertEvent` called? If you give me the answer of my question, I really appreciate your help and support.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277454130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277481530","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-277481530","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":277481530,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4MTUzMA==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-04T22:06:21Z","updated_at":"2017-02-04T22:06:21Z","author_association":"CONTRIBUTOR","body":"@leventov \r\n\r\n- The \"mutable MemoryRegion problem\" has been fixed.  I decided that a mutable `MemoryRegion` was not worth this risk, so I made it immutable.  In looking at where we had used the mutability it was basically an end-around to not having a relative position and it was easy to convert these cases to use an immutable MR.  @cheddar and I discussed this and we think that what would be more useful would be a true \"positional\" parallel interface.  It is open for discussion how this would be implemented.  \r\n- `NativeMemory`, offset -> address conversion issues.  I am still looking at this.\r\n- \"Removing the \"delegation\" aspect of the MR methods\" Holding off on this until later.\r\n- Meanwhile @niketh is busy implementing `Cleaner`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277481530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277489906","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-277489906","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":277489906,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ4OTkwNg==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T01:08:46Z","updated_at":"2017-02-05T01:08:46Z","author_association":"MEMBER","body":"[This](https://github.com/metamx/emitter/blob/master/src/main/java/com/metamx/emitter/service/AlertEvent.java) is the `AlertEvent` class. It is outside of Druid repo. It is used whenever an Alert is made using `log.makeAlert()`. This is used for alerting critical problematic situations like Segment could not be loaded or task failed to run etc.\r\n\r\nI am not sure why `graphite-emitter` is not handling alerts but for Kafka emitter Ideally alerts should go to a different topic than the metrics (`ServiceMetricEvent`) so that users immediately know that something is wrong in the cluster and they can take a look.\r\n\r\nI am OK with the PR as it is, if someone wants to have alerts handled then it can be done in a follow up PR. If you want you can write the code for handling alerts in this PR as well or in a follow up PR or you can choose not to do it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277489906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/277492212","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-277492212","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":277492212,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NzQ5MjIxMg==","user":{"login":"dkhwangbo","id":13585249,"node_id":"MDQ6VXNlcjEzNTg1MjQ5","avatar_url":"https://avatars.githubusercontent.com/u/13585249?v=4","gravatar_id":"","url":"https://api.github.com/users/dkhwangbo","html_url":"https://github.com/dkhwangbo","followers_url":"https://api.github.com/users/dkhwangbo/followers","following_url":"https://api.github.com/users/dkhwangbo/following{/other_user}","gists_url":"https://api.github.com/users/dkhwangbo/gists{/gist_id}","starred_url":"https://api.github.com/users/dkhwangbo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkhwangbo/subscriptions","organizations_url":"https://api.github.com/users/dkhwangbo/orgs","repos_url":"https://api.github.com/users/dkhwangbo/repos","events_url":"https://api.github.com/users/dkhwangbo/events{/privacy}","received_events_url":"https://api.github.com/users/dkhwangbo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-02-05T02:07:25Z","updated_at":"2017-02-05T02:07:25Z","author_association":"CONTRIBUTOR","body":"@pjain1 Oh, I got it. Thanks for your nice explanation. I'll add the code line to handle `AlertEvent` in another kafka topic. I'll ping you when I ready for review.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/277492212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]