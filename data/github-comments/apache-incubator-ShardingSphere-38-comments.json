[{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469026524","html_url":"https://github.com/apache/shardingsphere/pull/1952#issuecomment-469026524","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1952","id":469026524,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTAyNjUyNA==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-03T14:08:59Z","updated_at":"2019-03-03T14:08:59Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6869](https://coveralls.io/builds/21922581)\n\n* **99** of **101**   **(98.02%)**  changed or added relevant lines in **2** files are covered.\n* No unchanged relevant lines lost coverage.\n* Overall coverage remained the same at **71.865%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/metadata/CachedDatabaseMetaData.java](https://coveralls.io/builds/21922581/source?filename=sharding-jdbc%2Fsharding-jdbc-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingjdbc%2Fjdbc%2Fcore%2Fdatasource%2Fmetadata%2FCachedDatabaseMetaData.java#L439) | 2 | 4 | 50.0%\n<!-- | **Total:** | **99** | **101** | **98.02%** | -->\n\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/21922581/badge)](https://coveralls.io/builds/21922581) |\n| :-- | --: |\n| Change from base [Build 6868](https://coveralls.io/builds/21917436): |  0.0% |\n| Covered Lines: | 10866 |\n| Relevant Lines: | 15120 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469026524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469063925","html_url":"https://github.com/apache/shardingsphere/pull/1955#issuecomment-469063925","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1955","id":469063925,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTA2MzkyNQ==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-03T21:03:04Z","updated_at":"2019-03-03T21:03:04Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6875](https://coveralls.io/builds/21924982)\n\n* **0** of **4**   **(0.0%)**  changed or added relevant lines in **1** file are covered.\n* No unchanged relevant lines lost coverage.\n* Overall coverage decreased (**-0.01%**) to **71.713%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/metadata/table/executor/TableMetaDataInitializer.java](https://coveralls.io/builds/21924982/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fmetadata%2Ftable%2Fexecutor%2FTableMetaDataInitializer.java#L96) | 0 | 4 | 0.0%\n<!-- | **Total:** | **0** | **4** | **0.0%** | -->\n\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/21924982/badge)](https://coveralls.io/builds/21924982) |\n| :-- | --: |\n| Change from base [Build 6874](https://coveralls.io/builds/21924667): |  -0.01% |\n| Covered Lines: | 10866 |\n| Relevant Lines: | 15152 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469063925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469083908","html_url":"https://github.com/apache/shardingsphere/pull/1953#issuecomment-469083908","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1953","id":469083908,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTA4MzkwOA==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-04T00:42:48Z","updated_at":"2019-03-04T00:42:48Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6871](https://coveralls.io/builds/21923162)\n\n* **0** of **29**   **(0.0%)**  changed or added relevant lines in **3** files are covered.\n* **1** unchanged line in **1** file lost coverage.\n* Overall coverage decreased (**-0.1%**) to **71.623%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/ShardingCTLBackendHandlerFactory.java](https://coveralls.io/builds/21923162/source?filename=sharding-proxy%2Fsharding-proxy-backend%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Fbackend%2Ftext%2Fsctl%2FShardingCTLBackendHandlerFactory.java#L55) | 0 | 2 | 0.0%\n| [sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/explain/ShardingCTLExplainParser.java](https://coveralls.io/builds/21923162/source?filename=sharding-proxy%2Fsharding-proxy-backend%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Fbackend%2Ftext%2Fsctl%2Fexplain%2FShardingCTLExplainParser.java#L34) | 0 | 9 | 0.0%\n| [sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/explain/ShardingCTLExplainBackendHandler.java](https://coveralls.io/builds/21923162/source?filename=sharding-proxy%2Fsharding-proxy-backend%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Fbackend%2Ftext%2Fsctl%2Fexplain%2FShardingCTLExplainBackendHandler.java#L57) | 0 | 18 | 0.0%\n<!-- | **Total:** | **0** | **29** | **0.0%** | -->\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| [sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/ShardingCTLBackendHandlerFactory.java](https://coveralls.io/builds/21923162/source?filename=sharding-proxy%2Fsharding-proxy-backend%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Fbackend%2Ftext%2Fsctl%2FShardingCTLBackendHandlerFactory.java#L58) | 1 | 28.57% |\n<!-- | **Total:** | **1** |  | -->\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/21923162/badge)](https://coveralls.io/builds/21923162) |\n| :-- | --: |\n| Change from base [Build 6868](https://coveralls.io/builds/21917436): |  -0.1% |\n| Covered Lines: | 10805 |\n| Relevant Lines: | 15086 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469083908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469085619","html_url":"https://github.com/apache/shardingsphere/issues/1900#issuecomment-469085619","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1900","id":469085619,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTA4NTYxOQ==","user":{"login":"KomachiSion","id":37170243,"node_id":"MDQ6VXNlcjM3MTcwMjQz","avatar_url":"https://avatars.githubusercontent.com/u/37170243?v=4","gravatar_id":"","url":"https://api.github.com/users/KomachiSion","html_url":"https://github.com/KomachiSion","followers_url":"https://api.github.com/users/KomachiSion/followers","following_url":"https://api.github.com/users/KomachiSion/following{/other_user}","gists_url":"https://api.github.com/users/KomachiSion/gists{/gist_id}","starred_url":"https://api.github.com/users/KomachiSion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KomachiSion/subscriptions","organizations_url":"https://api.github.com/users/KomachiSion/orgs","repos_url":"https://api.github.com/users/KomachiSion/repos","events_url":"https://api.github.com/users/KomachiSion/events{/privacy}","received_events_url":"https://api.github.com/users/KomachiSion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-04T01:00:24Z","updated_at":"2019-03-04T01:00:24Z","author_association":"MEMBER","body":"@imhager, have any progress for this issue? If no feedback, we will close this issue tomorrow.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469085619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469088969","html_url":"https://github.com/apache/shardingsphere/issues/1711#issuecomment-469088969","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1711","id":469088969,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTA4ODk2OQ==","user":{"login":"codefairy08","id":39583929,"node_id":"MDQ6VXNlcjM5NTgzOTI5","avatar_url":"https://avatars.githubusercontent.com/u/39583929?v=4","gravatar_id":"","url":"https://api.github.com/users/codefairy08","html_url":"https://github.com/codefairy08","followers_url":"https://api.github.com/users/codefairy08/followers","following_url":"https://api.github.com/users/codefairy08/following{/other_user}","gists_url":"https://api.github.com/users/codefairy08/gists{/gist_id}","starred_url":"https://api.github.com/users/codefairy08/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefairy08/subscriptions","organizations_url":"https://api.github.com/users/codefairy08/orgs","repos_url":"https://api.github.com/users/codefairy08/repos","events_url":"https://api.github.com/users/codefairy08/events{/privacy}","received_events_url":"https://api.github.com/users/codefairy08/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-04T01:29:51Z","updated_at":"2019-03-04T01:29:51Z","author_association":"CONTRIBUTOR","body":"@dalaocu \r\ni have tried more than 3 times,  no warning log was found。\r\n logs as follow：\r\n  .   ____          _            __ _ _\r\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\r\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\r\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\r\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\r\n =========|_|==============|___/=/_/_/_/\r\n :: Spring Boot ::        (v2.1.2.RELEASE)\r\n\r\n2019-03-04 09:25:42.238  INFO 2160 --- [           main] c.d.s.demo.ShardingDemoApplication       : Starting ShardingDemoApplication on DESKTOP-UJ1QVF3 with PID 2160 (E:\\gitrepo\\1711_demo\\sharding-demo\\bin\\main started by dhj in E:\\gitrepo\\1711_demo\\sharding-demo)\r\n2019-03-04 09:25:42.240  INFO 2160 --- [           main] c.d.s.demo.ShardingDemoApplication       : No active profile set, falling back to default profiles: default\r\n2019-03-04 09:25:42.672  INFO 2160 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.\r\n2019-03-04 09:25:42.723  INFO 2160 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 46ms. Found 1 repository interfaces.\r\n2019-03-04 09:25:42.971  INFO 2160 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ac6dc77d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\r\n2019-03-04 09:25:43.321  INFO 2160 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8082 (http)\r\n2019-03-04 09:25:43.341  INFO 2160 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\r\n2019-03-04 09:25:43.341  INFO 2160 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.14]\r\n2019-03-04 09:25:43.349  INFO 2160 --- [           main] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: []\r\n2019-03-04 09:25:43.422  INFO 2160 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\r\n2019-03-04 09:25:43.422  INFO 2160 --- [           main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1153 ms\r\n2019-03-04 09:25:43.621  INFO 2160 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [\r\n\tname: default\r\n\t...]\r\n2019-03-04 09:25:43.668  INFO 2160 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.3.7.Final}\r\n2019-03-04 09:25:43.669  INFO 2160 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found\r\n2019-03-04 09:25:43.774  INFO 2160 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.4.Final}\r\n2019-03-04 09:25:43.871  INFO 2160 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...\r\n2019-03-04 09:25:43.971  INFO 2160 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.\r\n2019-03-04 09:25:43.982  INFO 2160 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: com.dalaocu.sharding.demo.config.MysqlConfig\r\n2019-03-04 09:25:44.429  INFO 2160 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'\r\n2019-03-04 09:25:44.779  INFO 2160 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'\r\n2019-03-04 09:25:44.816  WARN 2160 --- [           main] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning\r\n2019-03-04 09:25:44.980  INFO 2160 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8082 (http) with context path ''\r\n2019-03-04 09:25:44.981  INFO 2160 --- [           main] c.d.s.demo.ShardingDemoApplication       : Started ShardingDemoApplication in 2.987 seconds (JVM running for 3.272)","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469088969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469113980","html_url":"https://github.com/apache/shardingsphere/issues/1927#issuecomment-469113980","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1927","id":469113980,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTExMzk4MA==","user":{"login":"cherrylzhao","id":8317649,"node_id":"MDQ6VXNlcjgzMTc2NDk=","avatar_url":"https://avatars.githubusercontent.com/u/8317649?v=4","gravatar_id":"","url":"https://api.github.com/users/cherrylzhao","html_url":"https://github.com/cherrylzhao","followers_url":"https://api.github.com/users/cherrylzhao/followers","following_url":"https://api.github.com/users/cherrylzhao/following{/other_user}","gists_url":"https://api.github.com/users/cherrylzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/cherrylzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cherrylzhao/subscriptions","organizations_url":"https://api.github.com/users/cherrylzhao/orgs","repos_url":"https://api.github.com/users/cherrylzhao/repos","events_url":"https://api.github.com/users/cherrylzhao/events{/privacy}","received_events_url":"https://api.github.com/users/cherrylzhao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-04T04:24:29Z","updated_at":"2019-03-04T04:24:59Z","author_association":"MEMBER","body":"hi, I have made a sharding-jdbc docker environment based on our released example. the result is ok, so I think you have a wrong configuration while using XA transaction. so I will close this issue if you have no reply today.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469113980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469131767","html_url":"https://github.com/apache/shardingsphere/issues/1602#issuecomment-469131767","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1602","id":469131767,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTEzMTc2Nw==","user":{"login":"steveNash12","id":46519675,"node_id":"MDQ6VXNlcjQ2NTE5Njc1","avatar_url":"https://avatars.githubusercontent.com/u/46519675?v=4","gravatar_id":"","url":"https://api.github.com/users/steveNash12","html_url":"https://github.com/steveNash12","followers_url":"https://api.github.com/users/steveNash12/followers","following_url":"https://api.github.com/users/steveNash12/following{/other_user}","gists_url":"https://api.github.com/users/steveNash12/gists{/gist_id}","starred_url":"https://api.github.com/users/steveNash12/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/steveNash12/subscriptions","organizations_url":"https://api.github.com/users/steveNash12/orgs","repos_url":"https://api.github.com/users/steveNash12/repos","events_url":"https://api.github.com/users/steveNash12/events{/privacy}","received_events_url":"https://api.github.com/users/steveNash12/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-04T06:15:44Z","updated_at":"2019-03-04T06:15:44Z","author_association":"NONE","body":"@Repository\r\n@Mapper\r\npublic interface UserRoleMapper extends BaseMapper<UserRole> {\r\n    // 在@Select中定义更新数据库语句\r\n    @Select(\"INSERT INTO `user_role`(`username`, `role_name`) VALUES (#{userRole.username}, #{userRole.roleName})\")\r\n    Integer insertBySelect(@Param(\"userRole\") UserRole userRole);\r\n}\r\n\r\n你要插入数据，但是用的 select  注解，改成@insert 应该就好了。\r\n我也没注意 update的时候写成了select。","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469131767/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469142345","html_url":"https://github.com/apache/shardingsphere/issues/1497#issuecomment-469142345","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1497","id":469142345,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTE0MjM0NQ==","user":{"login":"avalon566","id":48051589,"node_id":"MDQ6VXNlcjQ4MDUxNTg5","avatar_url":"https://avatars.githubusercontent.com/u/48051589?v=4","gravatar_id":"","url":"https://api.github.com/users/avalon566","html_url":"https://github.com/avalon566","followers_url":"https://api.github.com/users/avalon566/followers","following_url":"https://api.github.com/users/avalon566/following{/other_user}","gists_url":"https://api.github.com/users/avalon566/gists{/gist_id}","starred_url":"https://api.github.com/users/avalon566/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avalon566/subscriptions","organizations_url":"https://api.github.com/users/avalon566/orgs","repos_url":"https://api.github.com/users/avalon566/repos","events_url":"https://api.github.com/users/avalon566/events{/privacy}","received_events_url":"https://api.github.com/users/avalon566/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-04T07:09:52Z","updated_at":"2019-03-04T07:09:52Z","author_association":"CONTRIBUTOR","body":"i am interested in resolving this issue.but it doesn't seem that the dev branch can support the datetime range sharding strategy,i need to finish this task first?","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469142345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469143239","html_url":"https://github.com/apache/shardingsphere/pull/1956#issuecomment-469143239","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1956","id":469143239,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTE0MzIzOQ==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-04T07:14:07Z","updated_at":"2019-03-04T07:14:07Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6876](https://coveralls.io/builds/21925392)\n\n* **5** of **14**   **(35.71%)**  changed or added relevant lines in **6** files are covered.\n* No unchanged relevant lines lost coverage.\n* Overall coverage increased (+**0.02%**) to **71.746%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/common/netty/FrontendChannelInboundHandler.java](https://coveralls.io/builds/21925392/source?filename=sharding-proxy%2Fsharding-proxy-frontend%2Fsharding-proxy-frontend-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Ffrontend%2Fcommon%2Fnetty%2FFrontendChannelInboundHandler.java#L71) | 0 | 1 | 0.0%\n| [sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/MySQLCommandExecutor.java](https://coveralls.io/builds/21925392/source?filename=sharding-proxy%2Fsharding-proxy-frontend%2Fsharding-proxy-frontend-mysql%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Ffrontend%2Fmysql%2FMySQLCommandExecutor.java#L119) | 0 | 1 | 0.0%\n| [sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/PostgreSQLCommandExecutor.java](https://coveralls.io/builds/21925392/source?filename=sharding-proxy%2Fsharding-proxy-frontend%2Fsharding-proxy-frontend-postgresql%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Ffrontend%2Fpostgresql%2FPostgreSQLCommandExecutor.java#L130) | 0 | 1 | 0.0%\n| [sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/connection/ResourceSynchronizer.java](https://coveralls.io/builds/21925392/source?filename=sharding-proxy%2Fsharding-proxy-backend%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Fbackend%2Fcommunication%2Fjdbc%2Fconnection%2FResourceSynchronizer.java#L43) | 2 | 8 | 25.0%\n<!-- | **Total:** | **5** | **14** | **35.71%** | -->\n\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/21925392/badge)](https://coveralls.io/builds/21925392) |\n| :-- | --: |\n| Change from base [Build 6874](https://coveralls.io/builds/21924667): |  0.02% |\n| Covered Lines: | 10866 |\n| Relevant Lines: | 15145 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469143239/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469150516","html_url":"https://github.com/apache/shardingsphere/issues/1926#issuecomment-469150516","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1926","id":469150516,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTE1MDUxNg==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-04T07:46:14Z","updated_at":"2019-03-04T07:46:14Z","author_association":"MEMBER","body":"If no update, i will close this issue the day after tomorrow.\r\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469150516/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469153714","html_url":"https://github.com/apache/shardingsphere/issues/1954#issuecomment-469153714","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1954","id":469153714,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTE1MzcxNA==","user":{"login":"codefairy08","id":39583929,"node_id":"MDQ6VXNlcjM5NTgzOTI5","avatar_url":"https://avatars.githubusercontent.com/u/39583929?v=4","gravatar_id":"","url":"https://api.github.com/users/codefairy08","html_url":"https://github.com/codefairy08","followers_url":"https://api.github.com/users/codefairy08/followers","following_url":"https://api.github.com/users/codefairy08/following{/other_user}","gists_url":"https://api.github.com/users/codefairy08/gists{/gist_id}","starred_url":"https://api.github.com/users/codefairy08/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefairy08/subscriptions","organizations_url":"https://api.github.com/users/codefairy08/orgs","repos_url":"https://api.github.com/users/codefairy08/repos","events_url":"https://api.github.com/users/codefairy08/events{/privacy}","received_events_url":"https://api.github.com/users/codefairy08/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-04T07:59:05Z","updated_at":"2019-03-04T08:01:33Z","author_association":"CONTRIBUTOR","body":"@avalon566  the feture is ok , i had test again.  support  both limit ?  and limit ?,?. if you have encountered problems. please provide exception clause.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469153714/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469155150","html_url":"https://github.com/apache/shardingsphere/issues/1926#issuecomment-469155150","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1926","id":469155150,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTE1NTE1MA==","user":{"login":"baisijian","id":10204340,"node_id":"MDQ6VXNlcjEwMjA0MzQw","avatar_url":"https://avatars.githubusercontent.com/u/10204340?v=4","gravatar_id":"","url":"https://api.github.com/users/baisijian","html_url":"https://github.com/baisijian","followers_url":"https://api.github.com/users/baisijian/followers","following_url":"https://api.github.com/users/baisijian/following{/other_user}","gists_url":"https://api.github.com/users/baisijian/gists{/gist_id}","starred_url":"https://api.github.com/users/baisijian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baisijian/subscriptions","organizations_url":"https://api.github.com/users/baisijian/orgs","repos_url":"https://api.github.com/users/baisijian/repos","events_url":"https://api.github.com/users/baisijian/events{/privacy}","received_events_url":"https://api.github.com/users/baisijian/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-04T08:04:29Z","updated_at":"2019-03-04T08:04:29Z","author_association":"NONE","body":"Thanks a lot","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469155150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469159360","html_url":"https://github.com/apache/shardingsphere/issues/1954#issuecomment-469159360","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1954","id":469159360,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTE1OTM2MA==","user":{"login":"avalon566","id":48051589,"node_id":"MDQ6VXNlcjQ4MDUxNTg5","avatar_url":"https://avatars.githubusercontent.com/u/48051589?v=4","gravatar_id":"","url":"https://api.github.com/users/avalon566","html_url":"https://github.com/avalon566","followers_url":"https://api.github.com/users/avalon566/followers","following_url":"https://api.github.com/users/avalon566/following{/other_user}","gists_url":"https://api.github.com/users/avalon566/gists{/gist_id}","starred_url":"https://api.github.com/users/avalon566/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/avalon566/subscriptions","organizations_url":"https://api.github.com/users/avalon566/orgs","repos_url":"https://api.github.com/users/avalon566/repos","events_url":"https://api.github.com/users/avalon566/events{/privacy}","received_events_url":"https://api.github.com/users/avalon566/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-04T08:20:16Z","updated_at":"2019-03-04T08:20:16Z","author_association":"CONTRIBUTOR","body":"Test SQL:select * from t_order limit 10,10\r\n```\r\njava.lang.NumberFormatException: For input string: \"10,10\"\r\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\r\n\tat java.lang.Integer.parseInt(Integer.java:580)\r\n\tat java.math.BigInteger.<init>(BigInteger.java:470)\r\n\tat org.apache.shardingsphere.core.util.NumberUtil.getExactlyNumber(NumberUtil.java:72)\r\n\tat org.apache.shardingsphere.core.parsing.antlr.extractor.impl.dql.LimitExtractor.createLimitValueSegment(LimitExtractor.java:69)\r\n\tat org.apache.shardingsphere.core.parsing.antlr.extractor.impl.dql.LimitExtractor.extract(LimitExtractor.java:49)\r\n\tat org.apache.shardingsphere.core.parsing.antlr.extractor.SQLSegmentsExtractorEngine.extract(SQLSegmentsExtractorEngine.java:44)\r\n\tat org.apache.shardingsphere.core.parsing.antlr.AntlrParsingEngine.parse(AntlrParsingEngine.java:60)\r\n\tat org.apache.shardingsphere.core.parsing.SQLParsingEngine.parse(SQLParsingEngine.java:68)\r\n\tat org.apache.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.parse(ParsingSQLRouter.java:82)\r\n\tat org.apache.shardingsphere.core.routing.StatementRoutingEngine.route(StatementRoutingEngine.java:54)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.StatementExecutorWrapper.doShardingRoute(StatementExecutorWrapper.java:72)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.StatementExecutorWrapper.route(StatementExecutorWrapper.java:55)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:78)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.text.query.QueryBackendHandler.execute(QueryBackendHandler.java:54)\r\n\tat org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.text.query.MySQLComQueryPacket.execute(MySQLComQueryPacket.java:90)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.writePackets(MySQLFrontendEngine.java:119)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.executeCommand(MySQLFrontendEngine.java:104)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.common.netty.FrontendChannelInboundHandler$1.run(FrontendChannelInboundHandler.java:70)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469159360/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469305818","html_url":"https://github.com/apache/shardingsphere/issues/1966#issuecomment-469305818","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1966","id":469305818,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTMwNTgxOA==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-04T15:58:15Z","updated_at":"2019-03-04T15:58:15Z","author_association":"MEMBER","body":"What is your expected behaviour if sharding value is null?","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469305818/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469403426","html_url":"https://github.com/apache/shardingsphere/pull/1958#issuecomment-469403426","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1958","id":469403426,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTQwMzQyNg==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-04T20:09:58Z","updated_at":"2019-03-05T20:41:56Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6888](https://coveralls.io/builds/21943981)\n\n* **16** of **34**   **(47.06%)**  changed or added relevant lines in **12** files are covered.\n* No unchanged relevant lines lost coverage.\n* Overall coverage increased (+**0.003%**) to **71.726%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/rewrite/SQLBuilder.java](https://coveralls.io/builds/21943981/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Frewrite%2FSQLBuilder.java#L158) | 1 | 2 | 50.0%\n| [sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/StatementExecutorWrapper.java](https://coveralls.io/builds/21943981/source?filename=sharding-proxy%2Fsharding-proxy-backend%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Fbackend%2Fcommunication%2Fjdbc%2Fwrapper%2FStatementExecutorWrapper.java#L64) | 0 | 1 | 0.0%\n| [sharding-proxy/sharding-proxy-bootstrap/src/main/java/org/apache/shardingsphere/shardingproxy/Bootstrap.java](https://coveralls.io/builds/21943981/source?filename=sharding-proxy%2Fsharding-proxy-bootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2FBootstrap.java#L103) | 0 | 1 | 0.0%\n| [sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/PreparedStatementExecutorWrapper.java](https://coveralls.io/builds/21943981/source?filename=sharding-proxy%2Fsharding-proxy-backend%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Fbackend%2Fcommunication%2Fjdbc%2Fwrapper%2FPreparedStatementExecutorWrapper.java#L68) | 0 | 2 | 0.0%\n| [sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java](https://coveralls.io/builds/21943981/source?filename=sharding-jdbc%2Fsharding-jdbc-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingjdbc%2Fjdbc%2Fcore%2Fstatement%2FEncryptPreparedStatement.java#L98) | 0 | 4 | 0.0%\n| [sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/LogicSchemas.java](https://coveralls.io/builds/21943981/source?filename=sharding-proxy%2Fsharding-proxy-backend%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Fbackend%2Fschema%2FLogicSchemas.java#L79) | 0 | 4 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/routing/BatchRouteUnit.java](https://coveralls.io/builds/21943981/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Frouting%2FBatchRouteUnit.java#L68) | 0 | 5 | 0.0%\n<!-- | **Total:** | **16** | **34** | **47.06%** | -->\n\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/21943981/badge)](https://coveralls.io/builds/21943981) |\n| :-- | --: |\n| Change from base [Build 6885](https://coveralls.io/builds/21943381): |  0.003% |\n| Covered Lines: | 10860 |\n| Relevant Lines: | 15141 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469403426/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469510485","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-469510485","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":469510485,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTUxMDQ4NQ==","user":{"login":"cherrylzhao","id":8317649,"node_id":"MDQ6VXNlcjgzMTc2NDk=","avatar_url":"https://avatars.githubusercontent.com/u/8317649?v=4","gravatar_id":"","url":"https://api.github.com/users/cherrylzhao","html_url":"https://github.com/cherrylzhao","followers_url":"https://api.github.com/users/cherrylzhao/followers","following_url":"https://api.github.com/users/cherrylzhao/following{/other_user}","gists_url":"https://api.github.com/users/cherrylzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/cherrylzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cherrylzhao/subscriptions","organizations_url":"https://api.github.com/users/cherrylzhao/orgs","repos_url":"https://api.github.com/users/cherrylzhao/repos","events_url":"https://api.github.com/users/cherrylzhao/events{/privacy}","received_events_url":"https://api.github.com/users/cherrylzhao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T02:29:43Z","updated_at":"2019-03-05T02:29:43Z","author_association":"MEMBER","body":"hi, linyuliang, thanks for your feedback.\r\nplease show me your sharing configuration, thanks.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469510485/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469511288","html_url":"https://github.com/apache/shardingsphere/issues/1711#issuecomment-469511288","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1711","id":469511288,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTUxMTI4OA==","user":{"login":"dalaocu","id":20871639,"node_id":"MDQ6VXNlcjIwODcxNjM5","avatar_url":"https://avatars.githubusercontent.com/u/20871639?v=4","gravatar_id":"","url":"https://api.github.com/users/dalaocu","html_url":"https://github.com/dalaocu","followers_url":"https://api.github.com/users/dalaocu/followers","following_url":"https://api.github.com/users/dalaocu/following{/other_user}","gists_url":"https://api.github.com/users/dalaocu/gists{/gist_id}","starred_url":"https://api.github.com/users/dalaocu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dalaocu/subscriptions","organizations_url":"https://api.github.com/users/dalaocu/orgs","repos_url":"https://api.github.com/users/dalaocu/repos","events_url":"https://api.github.com/users/dalaocu/events{/privacy}","received_events_url":"https://api.github.com/users/dalaocu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T02:33:31Z","updated_at":"2019-03-05T02:33:31Z","author_association":"NONE","body":"Do you modify any code? I found you run it in windows. Mine is centos and mac. Is it related to the OS?","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469511288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469512316","html_url":"https://github.com/apache/shardingsphere/issues/1711#issuecomment-469512316","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1711","id":469512316,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTUxMjMxNg==","user":{"login":"dalaocu","id":20871639,"node_id":"MDQ6VXNlcjIwODcxNjM5","avatar_url":"https://avatars.githubusercontent.com/u/20871639?v=4","gravatar_id":"","url":"https://api.github.com/users/dalaocu","html_url":"https://github.com/dalaocu","followers_url":"https://api.github.com/users/dalaocu/followers","following_url":"https://api.github.com/users/dalaocu/following{/other_user}","gists_url":"https://api.github.com/users/dalaocu/gists{/gist_id}","starred_url":"https://api.github.com/users/dalaocu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dalaocu/subscriptions","organizations_url":"https://api.github.com/users/dalaocu/orgs","repos_url":"https://api.github.com/users/dalaocu/repos","events_url":"https://api.github.com/users/dalaocu/events{/privacy}","received_events_url":"https://api.github.com/users/dalaocu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T02:38:27Z","updated_at":"2019-03-05T02:38:27Z","author_association":"NONE","body":"If you can't repeat the warn log, I have to set the log level manually...\r\n`logging.level.org.hibernate=ERROR\r\n`\r\nBut I think it's not elegant.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469512316/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469517637","html_url":"https://github.com/apache/shardingsphere/issues/1900#issuecomment-469517637","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1900","id":469517637,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTUxNzYzNw==","user":{"login":"KomachiSion","id":37170243,"node_id":"MDQ6VXNlcjM3MTcwMjQz","avatar_url":"https://avatars.githubusercontent.com/u/37170243?v=4","gravatar_id":"","url":"https://api.github.com/users/KomachiSion","html_url":"https://github.com/KomachiSion","followers_url":"https://api.github.com/users/KomachiSion/followers","following_url":"https://api.github.com/users/KomachiSion/following{/other_user}","gists_url":"https://api.github.com/users/KomachiSion/gists{/gist_id}","starred_url":"https://api.github.com/users/KomachiSion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KomachiSion/subscriptions","organizations_url":"https://api.github.com/users/KomachiSion/orgs","repos_url":"https://api.github.com/users/KomachiSion/repos","events_url":"https://api.github.com/users/KomachiSion/events{/privacy}","received_events_url":"https://api.github.com/users/KomachiSion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T03:03:54Z","updated_at":"2019-03-05T03:03:54Z","author_association":"MEMBER","body":"If no response **more than 7 days** , we will close it.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469517637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469523747","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-469523747","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":469523747,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTUyMzc0Nw==","user":{"login":"linyuliang","id":3059826,"node_id":"MDQ6VXNlcjMwNTk4MjY=","avatar_url":"https://avatars.githubusercontent.com/u/3059826?v=4","gravatar_id":"","url":"https://api.github.com/users/linyuliang","html_url":"https://github.com/linyuliang","followers_url":"https://api.github.com/users/linyuliang/followers","following_url":"https://api.github.com/users/linyuliang/following{/other_user}","gists_url":"https://api.github.com/users/linyuliang/gists{/gist_id}","starred_url":"https://api.github.com/users/linyuliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linyuliang/subscriptions","organizations_url":"https://api.github.com/users/linyuliang/orgs","repos_url":"https://api.github.com/users/linyuliang/repos","events_url":"https://api.github.com/users/linyuliang/events{/privacy}","received_events_url":"https://api.github.com/users/linyuliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T03:35:53Z","updated_at":"2019-03-05T05:49:21Z","author_association":"NONE","body":"I use sharding-jdbc for single database and sub-table。\r\n\r\nmy sharding config file is sharding.yml :\r\n\r\n```\r\ndataSources:\r\n  shardingdb: !!org.apache.commons.dbcp.BasicDataSource\r\n    driverClassName: org.mariadb.jdbc.Driver\r\n    url: jdbc:mysql://Mysql:3306/test?useUnicode=true&characterEncoding=utf-8\r\n    username: test\r\n    password: test\r\n    initialSize: 3\r\n    minIdle: 3\r\n    maxIdle: 20\r\n    maxActive: 100\r\n    maxWait: 60000\r\n    timeBetweenEvictionRunsMillis: 60000\r\n    minEvictableIdleTimeMillis: 300000\r\n    validationQuery: SELECT 1\r\n    testWhileIdle: true\r\n    testOnBorrow: true\r\n    testOnReturn: false\r\n    logAbandoned: true\r\n    removeAbandoned: true\r\n    removeAbandonedTimeout: 60\r\n\r\nshardingRule:\r\n  tables:\r\n\r\n    #新增的mysql表分片配置\r\n    app_ap_offline_event:\r\n      tableStrategy:\r\n        standard:\r\n      #精确分片算法类名称，用于=和IN\r\n           preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n      #范围分片算法类名称，用于BETWEEN，可选\r\n           rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n           shardingColumn: ymd\r\n\r\n    app_network_flow_minute:\r\n      tableStrategy:\r\n        standard:\r\n          #精确分片算法类名称，用于=和IN\r\n          preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n          #范围分片算法类名称，用于BETWEEN，可选\r\n          rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n          shardingColumn: ymd\r\n\r\n    app_rrm_radio_link_quality:\r\n      tableStrategy:\r\n        standard:\r\n          #精确分片算法类名称，用于=和IN\r\n          preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n          #范围分片算法类名称，用于BETWEEN，可选\r\n          rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n          shardingColumn: ymd\r\n\r\n    app_sta_working_info_day:\r\n      tableStrategy:\r\n        #        inline:\r\n        #          shardingColumn: ymd\r\n        #          algorithmExpression: app_sta_working_info_day_${ymd}\r\n        standard:\r\n          #精确分片算法类名称，用于=和IN\r\n          preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n          #范围分片算法类名称，用于BETWEEN，可选\r\n          rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n          shardingColumn: ymd\r\n    app_ap_offline_event_hour_stats:\r\n      tableStrategy:\r\n        standard:\r\n          #精确分片算法类名称，用于=和IN\r\n          preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n          #范围分片算法类名称，用于BETWEEN，可选\r\n          rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n          shardingColumn: ymd\r\n    app_sta_flow_info:\r\n      tableStrategy:\r\n        standard:\r\n          #精确分片算法类名称，用于=和IN\r\n          preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n          #范围分片算法类名称，用于BETWEEN，可选\r\n          rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n          shardingColumn: ymd\r\n    app_ap_offline_summary:\r\n      tableStrategy:\r\n        standard:\r\n          #精确分片算法类名称，用于=和IN\r\n          preciseAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n          #范围分片算法类名称，用于BETWEEN，可选\r\n          rangeAlgorithmClassName: com.test.sharding.DateStringStandardShardingAlgorithm\r\n          shardingColumn: ymd\r\n\r\n  bindingTables:\r\n\r\n    #新增的mysql表需要规则绑定\r\n    - app_ap_offline_event\r\n    - app_network_flow_minute\r\n    - app_rrm_radio_link_quality\r\n    - app_sta_working_info_day\r\n    - app_ap_offline_event_hour_stats\r\n    - app_sta_flow_info\r\n    - app_ap_offline_summary\r\n```\r\n\r\nMy DateStringStandardShardingAlgorithm.java:\r\n\r\n```\r\nimport com.google.common.collect.Range;\r\nimport io.shardingsphere.api.algorithm.sharding.PreciseShardingValue;\r\nimport io.shardingsphere.api.algorithm.sharding.RangeShardingValue;\r\nimport io.shardingsphere.api.algorithm.sharding.standard.PreciseShardingAlgorithm;\r\nimport io.shardingsphere.api.algorithm.sharding.standard.RangeShardingAlgorithm;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport java.text.ParseException;\r\nimport java.util.*;\r\n\r\n\r\npublic class DateStringStandardShardingAlgorithm extends BaseShardingFilter implements PreciseShardingAlgorithm<String>, RangeShardingAlgorithm<String> {\r\n    private static final Logger logger = LoggerFactory.getLogger(DateStringStandardShardingAlgorithm.class);\r\n\r\n    @Override\r\n    public String doSharding(Collection<String> availableTargetNames, PreciseShardingValue<String> shardingValue) {\r\n//*********************** shardingValue.getLogicTableName()  is error **************************\r\n        return getTableName(shardingValue.getLogicTableName() , \"_\" + shardingValue.getValue());\r\n    }\r\n\r\n    @Override\r\n    public Collection<String> doSharding(Collection<String> availableTargetNames,\r\n                                         RangeShardingValue<String> shardingValue) {\r\n\r\n        List<String> result = new ArrayList<>();\r\n        Range<String> ranges = shardingValue.getValueRange();\r\n        final String logicTableName = shardingValue.getLogicTableName();\r\n        Date startTime;\r\n        try {\r\n            startTime = YYYYMMDD.parse(ranges.lowerEndpoint());\r\n        } catch (ParseException e) {\r\n            throw new RuntimeException(\"table\" + logicTableName + \" timeRange start parameter not yyyyMMdd format error:\" + ranges.lowerEndpoint());\r\n        }\r\n        Date endTime;\r\n        try {\r\n            endTime = YYYYMMDD.parse(ranges.upperEndpoint());\r\n        } catch (ParseException e) {\r\n            throw new RuntimeException(\"table\" + logicTableName + \" timeRange end parameter not yyyyMMdd format error:\" + ranges.lowerEndpoint());\r\n        }\r\n        // 此处应该返回 tablePrefix+201808 , tablePrefix+201809,tablePrefix+201810,\r\n        Calendar cal = Calendar.getInstance();\r\n\r\n        result = getTableNames(result, startTime, endTime, cal, logicTableName);\r\n\r\n        return result;\r\n    }\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469523747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469526359","html_url":"https://github.com/apache/shardingsphere/issues/1968#issuecomment-469526359","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1968","id":469526359,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTUyNjM1OQ==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T03:50:48Z","updated_at":"2019-03-05T03:50:48Z","author_association":"MEMBER","body":"ShradingSphere is not MySQL database middleware, it is a public databases middleware, we don't want to MySQL special on this product.\r\nManagement MySQL is another tool, I think user should separate them. Any suggestions?","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469526359/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469532892","html_url":"https://github.com/apache/shardingsphere/issues/1889#issuecomment-469532892","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1889","id":469532892,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTUzMjg5Mg==","user":{"login":"daizf","id":8006592,"node_id":"MDQ6VXNlcjgwMDY1OTI=","avatar_url":"https://avatars.githubusercontent.com/u/8006592?v=4","gravatar_id":"","url":"https://api.github.com/users/daizf","html_url":"https://github.com/daizf","followers_url":"https://api.github.com/users/daizf/followers","following_url":"https://api.github.com/users/daizf/following{/other_user}","gists_url":"https://api.github.com/users/daizf/gists{/gist_id}","starred_url":"https://api.github.com/users/daizf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daizf/subscriptions","organizations_url":"https://api.github.com/users/daizf/orgs","repos_url":"https://api.github.com/users/daizf/repos","events_url":"https://api.github.com/users/daizf/events{/privacy}","received_events_url":"https://api.github.com/users/daizf/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T04:28:25Z","updated_at":"2019-03-05T04:28:25Z","author_association":"NONE","body":"@terrymanu Brother liang:\r\nWhere can I get the source of sharding-jdbc-spring-namespace moudle for V3.1.0 ?","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469532892/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469560618","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-469560618","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":469560618,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTU2MDYxOA==","user":{"login":"cherrylzhao","id":8317649,"node_id":"MDQ6VXNlcjgzMTc2NDk=","avatar_url":"https://avatars.githubusercontent.com/u/8317649?v=4","gravatar_id":"","url":"https://api.github.com/users/cherrylzhao","html_url":"https://github.com/cherrylzhao","followers_url":"https://api.github.com/users/cherrylzhao/followers","following_url":"https://api.github.com/users/cherrylzhao/following{/other_user}","gists_url":"https://api.github.com/users/cherrylzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/cherrylzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cherrylzhao/subscriptions","organizations_url":"https://api.github.com/users/cherrylzhao/orgs","repos_url":"https://api.github.com/users/cherrylzhao/repos","events_url":"https://api.github.com/users/cherrylzhao/events{/privacy}","received_events_url":"https://api.github.com/users/cherrylzhao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T06:46:19Z","updated_at":"2019-03-05T06:46:19Z","author_association":"MEMBER","body":"hi, would you please make \"sql.show: true\", and paste the Log information.\r\nI can't reproduce your issue on my local simulation environment, please see my test case:\r\n[YamlConfigurationExampleTest](https://github.com/cherrylzhao/sharding-sphere-example/blob/dev-3.1.0-docker/sharding-jdbc-example/raw-jdbc-nodep-example/src/test/java/io/shardingsphere/example/jdbc/YamlConfigurationExampleTest.java)","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469560618/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469576664","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-469576664","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":469576664,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTU3NjY2NA==","user":{"login":"linyuliang","id":3059826,"node_id":"MDQ6VXNlcjMwNTk4MjY=","avatar_url":"https://avatars.githubusercontent.com/u/3059826?v=4","gravatar_id":"","url":"https://api.github.com/users/linyuliang","html_url":"https://github.com/linyuliang","followers_url":"https://api.github.com/users/linyuliang/followers","following_url":"https://api.github.com/users/linyuliang/following{/other_user}","gists_url":"https://api.github.com/users/linyuliang/gists{/gist_id}","starred_url":"https://api.github.com/users/linyuliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linyuliang/subscriptions","organizations_url":"https://api.github.com/users/linyuliang/orgs","repos_url":"https://api.github.com/users/linyuliang/repos","events_url":"https://api.github.com/users/linyuliang/events{/privacy}","received_events_url":"https://api.github.com/users/linyuliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T07:53:17Z","updated_at":"2019-03-05T07:53:17Z","author_association":"NONE","body":"YamlConfigurationExampleTest.java:\r\n\r\n```\r\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\npackage io.shardingsphere.example.jdbc;\r\n\r\nimport io.shardingsphere.example.config.ExampleConfiguration;\r\nimport io.shardingsphere.example.jdbc.nodep.YamlConfigurationExample;\r\nimport io.shardingsphere.example.jdbc.nodep.config.ShardingTablesConfigurationPrecise;\r\nimport io.shardingsphere.example.repository.api.service.CommonService;\r\nimport io.shardingsphere.example.repository.jdbc.repository.JDBCOrderItemRepositoryImpl;\r\nimport io.shardingsphere.example.repository.jdbc.repository.JDBCOrderRepositoryImpl;\r\nimport io.shardingsphere.example.repository.jdbc.service.RawPojoService;\r\nimport io.shardingsphere.shardingjdbc.api.yaml.YamlShardingDataSourceFactory;\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\n\r\nimport javax.sql.DataSource;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\nimport java.util.concurrent.CountDownLatch;\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.Executors;\r\nimport java.util.concurrent.atomic.AtomicLong;\r\n\r\npublic class YamlConfigurationExampleTest {\r\n    \r\n    private File yamlFile = new File(YamlConfigurationExample.class.getResource(\"/META-INF/sharding-tables.yaml\").getFile());\r\n    \r\n    @Before\r\n    public void setUp() throws SQLException, IOException {\r\n        DataSource dataSource = YamlShardingDataSourceFactory.createDataSource(yamlFile);\r\n        CommonService commonService = new RawPojoService(new JDBCOrderRepositoryImpl(dataSource), new JDBCOrderItemRepositoryImpl(dataSource));\r\n        commonService.initEnvironment();\r\n    }\r\n    \r\n    @Test\r\n    public void assertTableShardingMultiThread() throws SQLException, InterruptedException, IOException {\r\n        final DataSource dataSource = YamlShardingDataSourceFactory.createDataSource(yamlFile);\r\n        ExecutorService executorService = Executors.newFixedThreadPool(10);\r\n        final CountDownLatch latch = new CountDownLatch(100);\r\n        final AtomicLong orderId = new AtomicLong(0);\r\n        for (int i = 0; i < 100; i++) {\r\n            executorService.execute(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    try {\r\n                        executeQuery(dataSource, 0L);\r\n                        latch.countDown();\r\n                    } catch (SQLException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            });\r\n            executorService.execute(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    try {\r\n                        executeQueryOrderItem(dataSource, 1L);\r\n                        latch.countDown();\r\n                    } catch (SQLException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        latch.await();\r\n    }\r\n    \r\n    private void executeQuery(final DataSource dataSource, final Long orderId) throws SQLException {\r\n        String sql = \"select * from t_order where order_id = ?\";\r\n        try (Connection connection = dataSource.getConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(sql)) {\r\n            preparedStatement.setLong(1, orderId);\r\n            preparedStatement.execute();\r\n        }\r\n    }\r\n\r\n    private void executeQueryOrderItem(final DataSource dataSource, final Long orderId) throws SQLException {\r\n        String sql = \"select * from t_order_item where order_id = ?\";\r\n        try (Connection connection = dataSource.getConnection();\r\n             PreparedStatement preparedStatement = connection.prepareStatement(sql)) {\r\n            preparedStatement.setLong(1, orderId);\r\n            preparedStatement.execute();\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nPreciseModuloShardingTableAlgorithm.java\r\n\r\n```\r\n/*\r\n * Copyright 2016-2018 shardingsphere.io.\r\n * <p>\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * </p>\r\n */\r\n\r\npackage io.shardingsphere.example.algorithm;\r\n\r\nimport io.shardingsphere.api.algorithm.sharding.PreciseShardingValue;\r\nimport io.shardingsphere.api.algorithm.sharding.standard.PreciseShardingAlgorithm;\r\n\r\nimport java.util.Collection;\r\n\r\npublic class PreciseModuloShardingTableAlgorithm implements PreciseShardingAlgorithm<Long> {\r\n    \r\n    @Override\r\n    public String doSharding(final Collection<String> tableNames, final PreciseShardingValue<Long> shardingValue) {\r\n        System.out.println(shardingValue.getLogicTableName()+\":\"+shardingValue.getColumnName()+\":\"+shardingValue.getValue());\r\n        for (String each : tableNames) {\r\n            if (each.endsWith(shardingValue.getValue() % 2 + \"\")) {\r\n                return each;\r\n            }\r\n        }\r\n        throw new UnsupportedOperationException();\r\n    }\r\n}\r\n\r\n```\r\n\r\nExpected print:\r\nt_order:order_id:0\r\nt_order_item:order_id:1\r\n\r\nActual print:\r\nt_order:order_id:0\r\nt_order:order_id:1\r\nt_order_item:order_id:0\r\nt_order_item:order_id:1\r\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469576664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469594349","html_url":"https://github.com/apache/shardingsphere/issues/206#issuecomment-469594349","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/206","id":469594349,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTU5NDM0OQ==","user":{"login":"acseed","id":13638307,"node_id":"MDQ6VXNlcjEzNjM4MzA3","avatar_url":"https://avatars.githubusercontent.com/u/13638307?v=4","gravatar_id":"","url":"https://api.github.com/users/acseed","html_url":"https://github.com/acseed","followers_url":"https://api.github.com/users/acseed/followers","following_url":"https://api.github.com/users/acseed/following{/other_user}","gists_url":"https://api.github.com/users/acseed/gists{/gist_id}","starred_url":"https://api.github.com/users/acseed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acseed/subscriptions","organizations_url":"https://api.github.com/users/acseed/orgs","repos_url":"https://api.github.com/users/acseed/repos","events_url":"https://api.github.com/users/acseed/events{/privacy}","received_events_url":"https://api.github.com/users/acseed/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T08:52:47Z","updated_at":"2019-03-05T08:52:47Z","author_association":"NONE","body":"> @ben1247 ，可以确信这是一个BUG,能否提交一个DEBUG级别的日志，我这边本地测试没出现过，生产环境有出现，但修改日志级别要等下一次更新。\r\n\r\n这个循环删除有问题， 我这边在有subQuery的时候出现， \r\nremove之后下标就变了， 还拿之前的下标remove就出问题了\r\n\r\n代码位置：SelectStatement.resetLimitTokens\r\nfor (int each : toBeRemovedIndexes) {\r\n            sqlTokens.remove(each);\r\n }","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469594349/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469594546","html_url":"https://github.com/apache/shardingsphere/issues/206#issuecomment-469594546","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/206","id":469594546,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTU5NDU0Ng==","user":{"login":"acseed","id":13638307,"node_id":"MDQ6VXNlcjEzNjM4MzA3","avatar_url":"https://avatars.githubusercontent.com/u/13638307?v=4","gravatar_id":"","url":"https://api.github.com/users/acseed","html_url":"https://github.com/acseed","followers_url":"https://api.github.com/users/acseed/followers","following_url":"https://api.github.com/users/acseed/following{/other_user}","gists_url":"https://api.github.com/users/acseed/gists{/gist_id}","starred_url":"https://api.github.com/users/acseed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acseed/subscriptions","organizations_url":"https://api.github.com/users/acseed/orgs","repos_url":"https://api.github.com/users/acseed/repos","events_url":"https://api.github.com/users/acseed/events{/privacy}","received_events_url":"https://api.github.com/users/acseed/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T08:53:20Z","updated_at":"2019-03-05T08:53:20Z","author_association":"NONE","body":"这个循环删除有问题， 我这边在有subQuery的时候出现，\r\nremove之后下标就变了， 还拿之前的下标remove就出问题了\r\n\r\n代码位置：SelectStatement.resetLimitTokens\r\nfor (int each : toBeRemovedIndexes) {\r\nsqlTokens.remove(each);\r\n}","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469594546/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469631740","html_url":"https://github.com/apache/shardingsphere/issues/234#issuecomment-469631740","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/234","id":469631740,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTYzMTc0MA==","user":{"login":"Myshiner","id":48242833,"node_id":"MDQ6VXNlcjQ4MjQyODMz","avatar_url":"https://avatars.githubusercontent.com/u/48242833?v=4","gravatar_id":"","url":"https://api.github.com/users/Myshiner","html_url":"https://github.com/Myshiner","followers_url":"https://api.github.com/users/Myshiner/followers","following_url":"https://api.github.com/users/Myshiner/following{/other_user}","gists_url":"https://api.github.com/users/Myshiner/gists{/gist_id}","starred_url":"https://api.github.com/users/Myshiner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Myshiner/subscriptions","organizations_url":"https://api.github.com/users/Myshiner/orgs","repos_url":"https://api.github.com/users/Myshiner/repos","events_url":"https://api.github.com/users/Myshiner/events{/privacy}","received_events_url":"https://api.github.com/users/Myshiner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T10:40:56Z","updated_at":"2019-03-05T10:40:56Z","author_association":"NONE","body":"点石经纬-https://www.okayzhihui.com/ -智慧教育","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469631740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469662351","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-469662351","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":469662351,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTY2MjM1MQ==","user":{"login":"cherrylzhao","id":8317649,"node_id":"MDQ6VXNlcjgzMTc2NDk=","avatar_url":"https://avatars.githubusercontent.com/u/8317649?v=4","gravatar_id":"","url":"https://api.github.com/users/cherrylzhao","html_url":"https://github.com/cherrylzhao","followers_url":"https://api.github.com/users/cherrylzhao/followers","following_url":"https://api.github.com/users/cherrylzhao/following{/other_user}","gists_url":"https://api.github.com/users/cherrylzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/cherrylzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cherrylzhao/subscriptions","organizations_url":"https://api.github.com/users/cherrylzhao/orgs","repos_url":"https://api.github.com/users/cherrylzhao/repos","events_url":"https://api.github.com/users/cherrylzhao/events{/privacy}","received_events_url":"https://api.github.com/users/cherrylzhao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T12:29:35Z","updated_at":"2019-03-05T12:29:35Z","author_association":"MEMBER","body":"thanks for reply，let me check it lately","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469662351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469666244","html_url":"https://github.com/apache/shardingsphere/issues/1972#issuecomment-469666244","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1972","id":469666244,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTY2NjI0NA==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T12:43:54Z","updated_at":"2019-03-05T12:43:54Z","author_association":"MEMBER","body":"What's mean 'no config rule table'?","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469666244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469673768","html_url":"https://github.com/apache/shardingsphere/issues/1972#issuecomment-469673768","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1972","id":469673768,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTY3Mzc2OA==","user":{"login":"mfeng-ya","id":42688346,"node_id":"MDQ6VXNlcjQyNjg4MzQ2","avatar_url":"https://avatars.githubusercontent.com/u/42688346?v=4","gravatar_id":"","url":"https://api.github.com/users/mfeng-ya","html_url":"https://github.com/mfeng-ya","followers_url":"https://api.github.com/users/mfeng-ya/followers","following_url":"https://api.github.com/users/mfeng-ya/following{/other_user}","gists_url":"https://api.github.com/users/mfeng-ya/gists{/gist_id}","starred_url":"https://api.github.com/users/mfeng-ya/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mfeng-ya/subscriptions","organizations_url":"https://api.github.com/users/mfeng-ya/orgs","repos_url":"https://api.github.com/users/mfeng-ya/repos","events_url":"https://api.github.com/users/mfeng-ya/events{/privacy}","received_events_url":"https://api.github.com/users/mfeng-ya/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T13:10:26Z","updated_at":"2019-03-05T13:10:26Z","author_association":"NONE","body":"Table not sharding, used default datasource","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469673768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469676833","html_url":"https://github.com/apache/shardingsphere/pull/1970#issuecomment-469676833","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1970","id":469676833,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTY3NjgzMw==","user":{"login":"tuohai666","id":24643893,"node_id":"MDQ6VXNlcjI0NjQzODkz","avatar_url":"https://avatars.githubusercontent.com/u/24643893?v=4","gravatar_id":"","url":"https://api.github.com/users/tuohai666","html_url":"https://github.com/tuohai666","followers_url":"https://api.github.com/users/tuohai666/followers","following_url":"https://api.github.com/users/tuohai666/following{/other_user}","gists_url":"https://api.github.com/users/tuohai666/gists{/gist_id}","starred_url":"https://api.github.com/users/tuohai666/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuohai666/subscriptions","organizations_url":"https://api.github.com/users/tuohai666/orgs","repos_url":"https://api.github.com/users/tuohai666/repos","events_url":"https://api.github.com/users/tuohai666/events{/privacy}","received_events_url":"https://api.github.com/users/tuohai666/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T13:20:32Z","updated_at":"2019-03-05T13:20:32Z","author_association":"MEMBER","body":"Please resolve the conflicts","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469676833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469714924","html_url":"https://github.com/apache/shardingsphere/pull/1974#issuecomment-469714924","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1974","id":469714924,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTcxNDkyNA==","user":{"login":"acseed","id":13638307,"node_id":"MDQ6VXNlcjEzNjM4MzA3","avatar_url":"https://avatars.githubusercontent.com/u/13638307?v=4","gravatar_id":"","url":"https://api.github.com/users/acseed","html_url":"https://github.com/acseed","followers_url":"https://api.github.com/users/acseed/followers","following_url":"https://api.github.com/users/acseed/following{/other_user}","gists_url":"https://api.github.com/users/acseed/gists{/gist_id}","starred_url":"https://api.github.com/users/acseed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acseed/subscriptions","organizations_url":"https://api.github.com/users/acseed/orgs","repos_url":"https://api.github.com/users/acseed/repos","events_url":"https://api.github.com/users/acseed/events{/privacy}","received_events_url":"https://api.github.com/users/acseed/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T15:07:09Z","updated_at":"2019-03-05T15:07:09Z","author_association":"NONE","body":"fix  在foreach 按照下标删除会导致越界","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469714924/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469717190","html_url":"https://github.com/apache/shardingsphere/pull/1974#issuecomment-469717190","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1974","id":469717190,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTcxNzE5MA==","user":{"login":"acseed","id":13638307,"node_id":"MDQ6VXNlcjEzNjM4MzA3","avatar_url":"https://avatars.githubusercontent.com/u/13638307?v=4","gravatar_id":"","url":"https://api.github.com/users/acseed","html_url":"https://github.com/acseed","followers_url":"https://api.github.com/users/acseed/followers","following_url":"https://api.github.com/users/acseed/following{/other_user}","gists_url":"https://api.github.com/users/acseed/gists{/gist_id}","starred_url":"https://api.github.com/users/acseed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acseed/subscriptions","organizations_url":"https://api.github.com/users/acseed/orgs","repos_url":"https://api.github.com/users/acseed/repos","events_url":"https://api.github.com/users/acseed/events{/privacy}","received_events_url":"https://api.github.com/users/acseed/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-05T15:12:43Z","updated_at":"2019-03-05T15:12:43Z","author_association":"NONE","body":"resetLimitTokens fix remove bug","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469717190/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469924216","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-469924216","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":469924216,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTkyNDIxNg==","user":{"login":"cherrylzhao","id":8317649,"node_id":"MDQ6VXNlcjgzMTc2NDk=","avatar_url":"https://avatars.githubusercontent.com/u/8317649?v=4","gravatar_id":"","url":"https://api.github.com/users/cherrylzhao","html_url":"https://github.com/cherrylzhao","followers_url":"https://api.github.com/users/cherrylzhao/followers","following_url":"https://api.github.com/users/cherrylzhao/following{/other_user}","gists_url":"https://api.github.com/users/cherrylzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/cherrylzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cherrylzhao/subscriptions","organizations_url":"https://api.github.com/users/cherrylzhao/orgs","repos_url":"https://api.github.com/users/cherrylzhao/repos","events_url":"https://api.github.com/users/cherrylzhao/events{/privacy}","received_events_url":"https://api.github.com/users/cherrylzhao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T01:08:23Z","updated_at":"2019-03-06T01:08:23Z","author_association":"MEMBER","body":"hi, I have checked the result, actual print result was in different thread, routing in one thread is right.\r\nyou can use Logger instead of printf to see the result.\r\n![image](https://user-images.githubusercontent.com/8317649/53848458-5b1ef580-3fef-11e9-88ce-4a3dc2c040cb.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469924216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469936093","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-469936093","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":469936093,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTkzNjA5Mw==","user":{"login":"linyuliang","id":3059826,"node_id":"MDQ6VXNlcjMwNTk4MjY=","avatar_url":"https://avatars.githubusercontent.com/u/3059826?v=4","gravatar_id":"","url":"https://api.github.com/users/linyuliang","html_url":"https://github.com/linyuliang","followers_url":"https://api.github.com/users/linyuliang/followers","following_url":"https://api.github.com/users/linyuliang/following{/other_user}","gists_url":"https://api.github.com/users/linyuliang/gists{/gist_id}","starred_url":"https://api.github.com/users/linyuliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linyuliang/subscriptions","organizations_url":"https://api.github.com/users/linyuliang/orgs","repos_url":"https://api.github.com/users/linyuliang/repos","events_url":"https://api.github.com/users/linyuliang/events{/privacy}","received_events_url":"https://api.github.com/users/linyuliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T02:01:13Z","updated_at":"2019-03-06T02:01:13Z","author_association":"NONE","body":"From your screenshot, it's still wrong.\r\nThe select sqls are：\r\nSelect * from t_order where order_id=0\r\nor\r\nselect * from t_order_item where order_id=1\r\n\r\nbut the 5th line it print:\r\nt_order:order_id:1","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469936093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469936990","html_url":"https://github.com/apache/shardingsphere/pull/1960#issuecomment-469936990","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1960","id":469936990,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTkzNjk5MA==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T02:05:16Z","updated_at":"2019-03-06T02:05:16Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6909](https://coveralls.io/builds/21961886)\n\n* **1** of **10**   **(10.0%)**  changed or added relevant lines in **1** file are covered.\n* No unchanged relevant lines lost coverage.\n* Overall coverage decreased (**-0.02%**) to **71.785%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/LogicSchemas.java](https://coveralls.io/builds/21961886/source?filename=sharding-proxy%2Fsharding-proxy-backend%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Fbackend%2Fschema%2FLogicSchemas.java#L111) | 1 | 10 | 10.0%\n<!-- | **Total:** | **1** | **10** | **10.0%** | -->\n\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/21961886/badge)](https://coveralls.io/builds/21961886) |\n| :-- | --: |\n| Change from base [Build 6908](https://coveralls.io/builds/21952393): |  -0.02% |\n| Covered Lines: | 10851 |\n| Relevant Lines: | 15116 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469936990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469938077","html_url":"https://github.com/apache/shardingsphere/issues/1971#issuecomment-469938077","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1971","id":469938077,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTkzODA3Nw==","user":{"login":"cherrylzhao","id":8317649,"node_id":"MDQ6VXNlcjgzMTc2NDk=","avatar_url":"https://avatars.githubusercontent.com/u/8317649?v=4","gravatar_id":"","url":"https://api.github.com/users/cherrylzhao","html_url":"https://github.com/cherrylzhao","followers_url":"https://api.github.com/users/cherrylzhao/followers","following_url":"https://api.github.com/users/cherrylzhao/following{/other_user}","gists_url":"https://api.github.com/users/cherrylzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/cherrylzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cherrylzhao/subscriptions","organizations_url":"https://api.github.com/users/cherrylzhao/orgs","repos_url":"https://api.github.com/users/cherrylzhao/repos","events_url":"https://api.github.com/users/cherrylzhao/events{/privacy}","received_events_url":"https://api.github.com/users/cherrylzhao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T02:09:52Z","updated_at":"2019-03-06T02:09:52Z","author_association":"MEMBER","body":"hi, thanks for feedback. we have fixed this issue in 4.0.0.M1-SNAPSHOT, you can verify it in dev branch, thanks.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469938077/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469938698","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-469938698","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":469938698,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTkzODY5OA==","user":{"login":"cherrylzhao","id":8317649,"node_id":"MDQ6VXNlcjgzMTc2NDk=","avatar_url":"https://avatars.githubusercontent.com/u/8317649?v=4","gravatar_id":"","url":"https://api.github.com/users/cherrylzhao","html_url":"https://github.com/cherrylzhao","followers_url":"https://api.github.com/users/cherrylzhao/followers","following_url":"https://api.github.com/users/cherrylzhao/following{/other_user}","gists_url":"https://api.github.com/users/cherrylzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/cherrylzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cherrylzhao/subscriptions","organizations_url":"https://api.github.com/users/cherrylzhao/orgs","repos_url":"https://api.github.com/users/cherrylzhao/repos","events_url":"https://api.github.com/users/cherrylzhao/events{/privacy}","received_events_url":"https://api.github.com/users/cherrylzhao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T02:12:39Z","updated_at":"2019-03-06T02:12:39Z","author_association":"MEMBER","body":"ok , I have got your point ,thanks\r\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469938698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469940994","html_url":"https://github.com/apache/shardingsphere/pull/1962#issuecomment-469940994","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1962","id":469940994,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk0MDk5NA==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T02:23:45Z","updated_at":"2019-03-06T02:23:45Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6916](https://coveralls.io/builds/21964336)\n\n* **91** of **119**   **(76.47%)**  changed or added relevant lines in **29** files are covered.\n* **1** unchanged line in **1** file lost coverage.\n* Overall coverage decreased (**-0.03%**) to **70.763%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/impl/dml/InsertFiller.java](https://coveralls.io/builds/21964336/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fimpl%2Fdml%2FInsertFiller.java#L140) | 1 | 2 | 50.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/sql/segment/column/ColumnSegment.java](https://coveralls.io/builds/21964336/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Fsql%2Fsegment%2Fcolumn%2FColumnSegment.java#L78) | 2 | 3 | 66.67%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/sql/segment/expr/CommonExpressionSegment.java](https://coveralls.io/builds/21964336/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Fsql%2Fsegment%2Fexpr%2FCommonExpressionSegment.java#L63) | 6 | 7 | 85.71%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/sql/segment/expr/EqualsValueExpressionSegment.java](https://coveralls.io/builds/21964336/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Fsql%2Fsegment%2Fexpr%2FEqualsValueExpressionSegment.java#L39) | 0 | 1 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/sql/segment/expr/FunctionExpressionSegment.java](https://coveralls.io/builds/21964336/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Fsql%2Fsegment%2Fexpr%2FFunctionExpressionSegment.java#L48) | 0 | 1 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/sql/segment/expr/PropertyExpressionSegment.java](https://coveralls.io/builds/21964336/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Fsql%2Fsegment%2Fexpr%2FPropertyExpressionSegment.java#L54) | 0 | 1 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/sql/segment/expr/SubquerySegment.java](https://coveralls.io/builds/21964336/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Fsql%2Fsegment%2Fexpr%2FSubquerySegment.java#L103) | 0 | 1 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/context/condition/Condition.java](https://coveralls.io/builds/21964336/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fparser%2Fcontext%2Fcondition%2FCondition.java#L80) | 7 | 8 | 87.5%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/token/EncryptColumnToken.java](https://coveralls.io/builds/21964336/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fparser%2Ftoken%2FEncryptColumnToken.java#L31) | 0 | 1 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/token/SQLToken.java](https://coveralls.io/builds/21964336/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fparser%2Ftoken%2FSQLToken.java#L32) | 0 | 1 | 0.0%\n<!-- | **Total:** | **91** | **119** | **76.47%** | -->\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/impl/OrConditionFiller.java](https://coveralls.io/builds/21964336/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fimpl%2FOrConditionFiller.java#L213) | 1 | 78.0% |\n<!-- | **Total:** | **1** |  | -->\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/21964336/badge)](https://coveralls.io/builds/21964336) |\n| :-- | --: |\n| Change from base [Build 6915](https://coveralls.io/builds/21963825): |  -0.03% |\n| Covered Lines: | 10865 |\n| Relevant Lines: | 15354 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469940994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469943279","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-469943279","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":469943279,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk0MzI3OQ==","user":{"login":"cherrylzhao","id":8317649,"node_id":"MDQ6VXNlcjgzMTc2NDk=","avatar_url":"https://avatars.githubusercontent.com/u/8317649?v=4","gravatar_id":"","url":"https://api.github.com/users/cherrylzhao","html_url":"https://github.com/cherrylzhao","followers_url":"https://api.github.com/users/cherrylzhao/followers","following_url":"https://api.github.com/users/cherrylzhao/following{/other_user}","gists_url":"https://api.github.com/users/cherrylzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/cherrylzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cherrylzhao/subscriptions","organizations_url":"https://api.github.com/users/cherrylzhao/orgs","repos_url":"https://api.github.com/users/cherrylzhao/repos","events_url":"https://api.github.com/users/cherrylzhao/events{/privacy}","received_events_url":"https://api.github.com/users/cherrylzhao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T02:34:21Z","updated_at":"2019-03-06T02:34:21Z","author_association":"MEMBER","body":"it's ok in 4.0.0.M1, you can verify it using dev branch. I will trace the bug reason continually.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469943279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469943393","html_url":"https://github.com/apache/shardingsphere/issues/1973#issuecomment-469943393","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1973","id":469943393,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk0MzM5Mw==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T02:34:56Z","updated_at":"2019-03-06T02:34:56Z","author_association":"MEMBER","body":"No, we will public spi for SQL parser and database protocol at version 4.0.0.\r\nIf user want support other databases, they can implement spi and do it themselves ","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469943393/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469944692","html_url":"https://github.com/apache/shardingsphere/pull/1964#issuecomment-469944692","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1964","id":469944692,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk0NDY5Mg==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T02:40:43Z","updated_at":"2019-03-06T02:40:43Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6922](https://coveralls.io/builds/21968221)\n\n* **1** of **1**   **(100.0%)**  changed or added relevant line in **1** file are covered.\n* **6** unchanged lines in **1** file lost coverage.\n* Overall coverage decreased (**-0.04%**) to **71.076%**\n\n---\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/rule/TableRule.java](https://coveralls.io/builds/21968221/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Frule%2FTableRule.java#L220) | 6 | 84.21% |\n<!-- | **Total:** | **6** |  | -->\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/21968221/badge)](https://coveralls.io/builds/21968221) |\n| :-- | --: |\n| Change from base [Build 6921](https://coveralls.io/builds/21967638): |  -0.04% |\n| Covered Lines: | 10773 |\n| Relevant Lines: | 15157 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469944692/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469944696","html_url":"https://github.com/apache/shardingsphere/pull/1965#issuecomment-469944696","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1965","id":469944696,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk0NDY5Ng==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T02:40:43Z","updated_at":"2019-03-06T02:40:43Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6923](https://coveralls.io/builds/21968563)\n\n* **7** of **8**   **(87.5%)**  changed or added relevant lines in **3** files are covered.\n* **2** unchanged lines in **1** file lost coverage.\n* Overall coverage increased (+**0.004%**) to **71.122%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/close/MySQLComStmtClosePacketExecutor.java](https://coveralls.io/builds/21968563/source?filename=sharding-proxy%2Fsharding-proxy-transport%2Fsharding-proxy-transport-mysql%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Ftransport%2Fmysql%2Fpacket%2Fcommand%2Fquery%2Fbinary%2Fclose%2FMySQLComStmtClosePacketExecutor.java#L38) | 0 | 1 | 0.0%\n<!-- | **Total:** | **7** | **8** | **87.5%** | -->\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| [sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/close/MySQLComStmtClosePacketExecutor.java](https://coveralls.io/builds/21968563/source?filename=sharding-proxy%2Fsharding-proxy-transport%2Fsharding-proxy-transport-mysql%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Ftransport%2Fmysql%2Fpacket%2Fcommand%2Fquery%2Fbinary%2Fclose%2FMySQLComStmtClosePacketExecutor.java#L37) | 2 | 0.0% |\n<!-- | **Total:** | **2** |  | -->\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/21968563/badge)](https://coveralls.io/builds/21968563) |\n| :-- | --: |\n| Change from base [Build 6921](https://coveralls.io/builds/21967638): |  0.004% |\n| Covered Lines: | 10787 |\n| Relevant Lines: | 15167 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469944696/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469944834","html_url":"https://github.com/apache/shardingsphere/pull/1974#issuecomment-469944834","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1974","id":469944834,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk0NDgzNA==","user":{"login":"tuohai666","id":24643893,"node_id":"MDQ6VXNlcjI0NjQzODkz","avatar_url":"https://avatars.githubusercontent.com/u/24643893?v=4","gravatar_id":"","url":"https://api.github.com/users/tuohai666","html_url":"https://github.com/tuohai666","followers_url":"https://api.github.com/users/tuohai666/followers","following_url":"https://api.github.com/users/tuohai666/following{/other_user}","gists_url":"https://api.github.com/users/tuohai666/gists{/gist_id}","starred_url":"https://api.github.com/users/tuohai666/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuohai666/subscriptions","organizations_url":"https://api.github.com/users/tuohai666/orgs","repos_url":"https://api.github.com/users/tuohai666/repos","events_url":"https://api.github.com/users/tuohai666/events{/privacy}","received_events_url":"https://api.github.com/users/tuohai666/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T02:41:19Z","updated_at":"2019-03-06T02:41:46Z","author_association":"MEMBER","body":"1. Good idea to simplify the code, we decide to merge your pr. But the original code can not lead to a bug really, you can find out the reason by yourself.\r\n2. Why not respond my comment before?\r\n![image](https://user-images.githubusercontent.com/24643893/53852268-66c4e900-3ffc-11e9-8eff-08361ca9ddfb.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469944834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469947310","html_url":"https://github.com/apache/shardingsphere/issues/1972#issuecomment-469947310","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1972","id":469947310,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk0NzMxMA==","user":{"login":"tuohai666","id":24643893,"node_id":"MDQ6VXNlcjI0NjQzODkz","avatar_url":"https://avatars.githubusercontent.com/u/24643893?v=4","gravatar_id":"","url":"https://api.github.com/users/tuohai666","html_url":"https://github.com/tuohai666","followers_url":"https://api.github.com/users/tuohai666/followers","following_url":"https://api.github.com/users/tuohai666/following{/other_user}","gists_url":"https://api.github.com/users/tuohai666/gists{/gist_id}","starred_url":"https://api.github.com/users/tuohai666/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuohai666/subscriptions","organizations_url":"https://api.github.com/users/tuohai666/orgs","repos_url":"https://api.github.com/users/tuohai666/repos","events_url":"https://api.github.com/users/tuohai666/events{/privacy}","received_events_url":"https://api.github.com/users/tuohai666/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T02:53:38Z","updated_at":"2019-03-06T02:53:38Z","author_association":"MEMBER","body":"Please refer to https://github.com/apache/incubator-shardingsphere/issues/1857","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469947310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469952301","html_url":"https://github.com/apache/shardingsphere/issues/1946#issuecomment-469952301","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1946","id":469952301,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk1MjMwMQ==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T03:18:56Z","updated_at":"2019-03-06T03:18:56Z","author_association":"MEMBER","body":"If no other update, I will close this issue tomorrow.\r\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469952301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469954873","html_url":"https://github.com/apache/shardingsphere/pull/1969#issuecomment-469954873","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1969","id":469954873,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk1NDg3Mw==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T03:33:34Z","updated_at":"2019-03-06T03:33:34Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6935](https://coveralls.io/builds/21988247)\n\n* **4** of **4**   **(100.0%)**  changed or added relevant lines in **1** file are covered.\n* No unchanged relevant lines lost coverage.\n* Overall coverage increased (+**0.002%**) to **71.042%**\n\n---\n\n\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/21988247/badge)](https://coveralls.io/builds/21988247) |\n| :-- | --: |\n| Change from base [Build 6934](https://coveralls.io/builds/21976016): |  0.002% |\n| Covered Lines: | 10782 |\n| Relevant Lines: | 15177 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469954873/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469957971","html_url":"https://github.com/apache/shardingsphere/pull/1974#issuecomment-469957971","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1974","id":469957971,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk1Nzk3MQ==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T03:52:23Z","updated_at":"2019-03-06T03:52:23Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6942](https://coveralls.io/builds/21997476)\n\n* **4** of **4**   **(100.0%)**  changed or added relevant lines in **1** file are covered.\n* No unchanged relevant lines lost coverage.\n* Overall coverage decreased (**-0.008%**) to **71.029%**\n\n---\n\n\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/21997476/badge)](https://coveralls.io/builds/21997476) |\n| :-- | --: |\n| Change from base [Build 6941](https://coveralls.io/builds/21995781): |  -0.008% |\n| Covered Lines: | 10778 |\n| Relevant Lines: | 15174 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469957971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469963296","html_url":"https://github.com/apache/shardingsphere/pull/1974#issuecomment-469963296","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1974","id":469963296,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk2MzI5Ng==","user":{"login":"acseed","id":13638307,"node_id":"MDQ6VXNlcjEzNjM4MzA3","avatar_url":"https://avatars.githubusercontent.com/u/13638307?v=4","gravatar_id":"","url":"https://api.github.com/users/acseed","html_url":"https://github.com/acseed","followers_url":"https://api.github.com/users/acseed/followers","following_url":"https://api.github.com/users/acseed/following{/other_user}","gists_url":"https://api.github.com/users/acseed/gists{/gist_id}","starred_url":"https://api.github.com/users/acseed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acseed/subscriptions","organizations_url":"https://api.github.com/users/acseed/orgs","repos_url":"https://api.github.com/users/acseed/repos","events_url":"https://api.github.com/users/acseed/events{/privacy}","received_events_url":"https://api.github.com/users/acseed/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T04:25:35Z","updated_at":"2019-03-06T04:25:35Z","author_association":"NONE","body":"> 1. Good idea to simplify the code, we decide to merge your pr. But the original code can not lead to a bug really, you can find out the reason by yourself.\r\n> 2. Why not respond my comment before?\r\n>    ![image](https://user-images.githubusercontent.com/24643893/53852268-66c4e900-3ffc-11e9-8eff-08361ca9ddfb.png)\r\n\r\n> it is not just simplify the code,  the original code do lead to a bug, the \"toBeRemovedIndexes\"  is the index to remove,  but after sqlTokens remove the first, the index in sqlTokens is changed, this may cause java.lang.IndexOutOfBoundsException,  when select sql has subQuery, the bug occurs, you try","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469963296/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469963701","html_url":"https://github.com/apache/shardingsphere/pull/1974#issuecomment-469963701","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1974","id":469963701,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk2MzcwMQ==","user":{"login":"acseed","id":13638307,"node_id":"MDQ6VXNlcjEzNjM4MzA3","avatar_url":"https://avatars.githubusercontent.com/u/13638307?v=4","gravatar_id":"","url":"https://api.github.com/users/acseed","html_url":"https://github.com/acseed","followers_url":"https://api.github.com/users/acseed/followers","following_url":"https://api.github.com/users/acseed/following{/other_user}","gists_url":"https://api.github.com/users/acseed/gists{/gist_id}","starred_url":"https://api.github.com/users/acseed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acseed/subscriptions","organizations_url":"https://api.github.com/users/acseed/orgs","repos_url":"https://api.github.com/users/acseed/repos","events_url":"https://api.github.com/users/acseed/events{/privacy}","received_events_url":"https://api.github.com/users/acseed/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T04:28:16Z","updated_at":"2019-03-06T04:28:16Z","author_association":"NONE","body":"> > 1. Good idea to simplify the code, we decide to merge your pr. But the original code can not lead to a bug really, you can find out the reason by yourself.\r\n> > 2. Why not respond my comment before?\r\n> >    ![image](https://user-images.githubusercontent.com/24643893/53852268-66c4e900-3ffc-11e9-8eff-08361ca9ddfb.png)\r\n> \r\n> > it is not just simplify the code,  the original code do lead to a bug, the \"toBeRemovedIndexes\"  is the index to remove,  but after sqlTokens remove the first, the index in sqlTokens is changed, this may cause java.lang.IndexOutOfBoundsException,  when select sql has subQuery, the bug occurs, you try\r\n\r\nit is my fault not to respond your comment before, sorry","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469963701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469987261","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-469987261","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":469987261,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk4NzI2MQ==","user":{"login":"cherrylzhao","id":8317649,"node_id":"MDQ6VXNlcjgzMTc2NDk=","avatar_url":"https://avatars.githubusercontent.com/u/8317649?v=4","gravatar_id":"","url":"https://api.github.com/users/cherrylzhao","html_url":"https://github.com/cherrylzhao","followers_url":"https://api.github.com/users/cherrylzhao/followers","following_url":"https://api.github.com/users/cherrylzhao/following{/other_user}","gists_url":"https://api.github.com/users/cherrylzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/cherrylzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cherrylzhao/subscriptions","organizations_url":"https://api.github.com/users/cherrylzhao/orgs","repos_url":"https://api.github.com/users/cherrylzhao/repos","events_url":"https://api.github.com/users/cherrylzhao/events{/privacy}","received_events_url":"https://api.github.com/users/cherrylzhao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T06:35:52Z","updated_at":"2019-03-06T06:35:52Z","author_association":"MEMBER","body":"hi, this is the bug in `FromWhereExtractor` for Antlr Parsing Engine. we have fixed it.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469987261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469989818","html_url":"https://github.com/apache/shardingsphere/pull/1975#issuecomment-469989818","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1975","id":469989818,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk4OTgxOA==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T06:47:08Z","updated_at":"2019-03-06T06:47:08Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6951](https://coveralls.io/builds/22013270)\n\n* **488** of **544**   **(89.71%)**  changed or added relevant lines in **30** files are covered.\n* No unchanged relevant lines lost coverage.\n* Overall coverage increased (+**0.6%**) to **71.639%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/namespace/parser/KeyGeneratorBeanDefinitionParser.java](https://coveralls.io/builds/22013270/source?filename=sharding-spring%2Fsharding-jdbc-spring%2Fsharding-jdbc-spring-namespace%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingjdbc%2Fspring%2Fnamespace%2Fparser%2FKeyGeneratorBeanDefinitionParser.java#L50) | 9 | 10 | 90.0%\n| [sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/namespace/parser/ShardingStrategyBeanDefinition.java](https://coveralls.io/builds/22013270/source?filename=sharding-spring%2Fsharding-jdbc-spring%2Fsharding-jdbc-spring-namespace%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingjdbc%2Fspring%2Fnamespace%2Fparser%2FShardingStrategyBeanDefinition.java#L56) | 25 | 26 | 96.15%\n| [sharding-spring/sharding-transaction-spring/src/main/java/org/apache/shardingsphere/transaction/handler/JpaTransactionManagerHandler.java](https://coveralls.io/builds/22013270/source?filename=sharding-spring%2Fsharding-transaction-spring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Ftransaction%2Fhandler%2FJpaTransactionManagerHandler.java#L64) | 14 | 15 | 93.33%\n| [sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.java](https://coveralls.io/builds/22013270/source?filename=sharding-spring%2Fsharding-jdbc-spring%2Fsharding-jdbc-spring-boot-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingjdbc%2Fspring%2Fboot%2FSpringBootConfiguration.java#L90) | 20 | 22 | 90.91%\n| [sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/namespace/parser/EncryptorBeanDefinitionParser.java](https://coveralls.io/builds/22013270/source?filename=sharding-spring%2Fsharding-jdbc-spring%2Fsharding-jdbc-spring-namespace%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingjdbc%2Fspring%2Fnamespace%2Fparser%2FEncryptorBeanDefinitionParser.java#L54) | 14 | 16 | 87.5%\n| [sharding-spring/sharding-transaction-spring/src/main/java/org/apache/shardingsphere/transaction/aspect/ShardingTransactionalAspect.java](https://coveralls.io/builds/22013270/source?filename=sharding-spring%2Fsharding-transaction-spring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Ftransaction%2Faspect%2FShardingTransactionalAspect.java#L90) | 47 | 49 | 95.92%\n| [sharding-spring/sharding-transaction-spring-boot-starter/src/main/java/org/apache/shardingsphere/transaction/spring/boot/ShardingTransactionConfiguration.java](https://coveralls.io/builds/22013270/source?filename=sharding-spring%2Fsharding-transaction-spring-boot-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Ftransaction%2Fspring%2Fboot%2FShardingTransactionConfiguration.java#L89) | 10 | 15 | 66.67%\n| [sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/OrchestrationSpringBootConfiguration.java](https://coveralls.io/builds/22013270/source?filename=sharding-spring%2Fsharding-jdbc-orchestration-spring%2Fsharding-jdbc-orchestration-spring-boot-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingjdbc%2Forchestration%2Fspring%2Fboot%2FOrchestrationSpringBootConfiguration.java#L107) | 34 | 44 | 77.27%\n| [sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/util/PropertyUtil.java](https://coveralls.io/builds/22013270/source?filename=sharding-spring%2Fsharding-jdbc-orchestration-spring%2Fsharding-jdbc-orchestration-spring-boot-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingjdbc%2Forchestration%2Fspring%2Fboot%2Futil%2FPropertyUtil.java#L42) | 21 | 37 | 56.76%\n| [sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/boot/util/PropertyUtil.java](https://coveralls.io/builds/22013270/source?filename=sharding-spring%2Fsharding-jdbc-spring%2Fsharding-jdbc-spring-boot-starter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingjdbc%2Fspring%2Fboot%2Futil%2FPropertyUtil.java#L42) | 21 | 37 | 56.76%\n<!-- | **Total:** | **488** | **544** | **89.71%** | -->\n\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/22013270/badge)](https://coveralls.io/builds/22013270) |\n| :-- | --: |\n| Change from base [Build 6950](https://coveralls.io/builds/22012301): |  0.6% |\n| Covered Lines: | 11266 |\n| Relevant Lines: | 15726 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469989818/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469993989","html_url":"https://github.com/apache/shardingsphere/issues/1976#issuecomment-469993989","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1976","id":469993989,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2OTk5Mzk4OQ==","user":{"login":"tianmingxing","id":5615719,"node_id":"MDQ6VXNlcjU2MTU3MTk=","avatar_url":"https://avatars.githubusercontent.com/u/5615719?v=4","gravatar_id":"","url":"https://api.github.com/users/tianmingxing","html_url":"https://github.com/tianmingxing","followers_url":"https://api.github.com/users/tianmingxing/followers","following_url":"https://api.github.com/users/tianmingxing/following{/other_user}","gists_url":"https://api.github.com/users/tianmingxing/gists{/gist_id}","starred_url":"https://api.github.com/users/tianmingxing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tianmingxing/subscriptions","organizations_url":"https://api.github.com/users/tianmingxing/orgs","repos_url":"https://api.github.com/users/tianmingxing/repos","events_url":"https://api.github.com/users/tianmingxing/events{/privacy}","received_events_url":"https://api.github.com/users/tianmingxing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T07:06:07Z","updated_at":"2019-03-06T07:07:27Z","author_association":"NONE","body":"What if you specify a custom sharding algorithm in the configuration file?\r\n\r\n```properties\r\nsharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id\r\nsharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=master$->{user_id % 2}\r\n```\r\n\r\n```properties\r\n...default-database-strategy.inline.algorithm-expression=master$->{user_id PreciseConsistentHashShardingDatabaseAlgorithm}\r\n```\r\n\r\nThis should be the question I eventually want to ask. I don't want to move all the configuration in the file into the code.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/469993989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470025349","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-470025349","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":470025349,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDAyNTM0OQ==","user":{"login":"linyuliang","id":3059826,"node_id":"MDQ6VXNlcjMwNTk4MjY=","avatar_url":"https://avatars.githubusercontent.com/u/3059826?v=4","gravatar_id":"","url":"https://api.github.com/users/linyuliang","html_url":"https://github.com/linyuliang","followers_url":"https://api.github.com/users/linyuliang/followers","following_url":"https://api.github.com/users/linyuliang/following{/other_user}","gists_url":"https://api.github.com/users/linyuliang/gists{/gist_id}","starred_url":"https://api.github.com/users/linyuliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linyuliang/subscriptions","organizations_url":"https://api.github.com/users/linyuliang/orgs","repos_url":"https://api.github.com/users/linyuliang/repos","events_url":"https://api.github.com/users/linyuliang/events{/privacy}","received_events_url":"https://api.github.com/users/linyuliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T09:01:48Z","updated_at":"2019-03-06T09:01:48Z","author_association":"NONE","body":"would you post the patch file link please？I want to merge it in Version 3.1.0 .","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470025349/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470029835","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-470029835","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":470029835,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDAyOTgzNQ==","user":{"login":"cherrylzhao","id":8317649,"node_id":"MDQ6VXNlcjgzMTc2NDk=","avatar_url":"https://avatars.githubusercontent.com/u/8317649?v=4","gravatar_id":"","url":"https://api.github.com/users/cherrylzhao","html_url":"https://github.com/cherrylzhao","followers_url":"https://api.github.com/users/cherrylzhao/followers","following_url":"https://api.github.com/users/cherrylzhao/following{/other_user}","gists_url":"https://api.github.com/users/cherrylzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/cherrylzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cherrylzhao/subscriptions","organizations_url":"https://api.github.com/users/cherrylzhao/orgs","repos_url":"https://api.github.com/users/cherrylzhao/repos","events_url":"https://api.github.com/users/cherrylzhao/events{/privacy}","received_events_url":"https://api.github.com/users/cherrylzhao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T09:15:28Z","updated_at":"2019-03-06T09:15:28Z","author_association":"MEMBER","body":"please reference this file [AbstractFromWhereExtractor.java](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/extractor/impl/dql/AbstractFromWhereExtractor.java)\r\n\r\nthe point is that make `predicateSegmentExtractor` property only instance once.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470029835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470042082","html_url":"https://github.com/apache/shardingsphere/pull/1981#issuecomment-470042082","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1981","id":470042082,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDA0MjA4Mg==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T09:51:18Z","updated_at":"2019-03-06T09:51:18Z","author_association":"MEMBER","body":"Can you resolve the conflict first?","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470042082/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470045983","html_url":"https://github.com/apache/shardingsphere/issues/1979#issuecomment-470045983","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1979","id":470045983,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDA0NTk4Mw==","user":{"login":"KomachiSion","id":37170243,"node_id":"MDQ6VXNlcjM3MTcwMjQz","avatar_url":"https://avatars.githubusercontent.com/u/37170243?v=4","gravatar_id":"","url":"https://api.github.com/users/KomachiSion","html_url":"https://github.com/KomachiSion","followers_url":"https://api.github.com/users/KomachiSion/followers","following_url":"https://api.github.com/users/KomachiSion/following{/other_user}","gists_url":"https://api.github.com/users/KomachiSion/gists{/gist_id}","starred_url":"https://api.github.com/users/KomachiSion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KomachiSion/subscriptions","organizations_url":"https://api.github.com/users/KomachiSion/orgs","repos_url":"https://api.github.com/users/KomachiSion/repos","events_url":"https://api.github.com/users/KomachiSion/events{/privacy}","received_events_url":"https://api.github.com/users/KomachiSion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T10:02:11Z","updated_at":"2019-03-06T10:02:11Z","author_association":"MEMBER","body":"Hi @cocoyadi, Can you show the full sharding configuration. ","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470045983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470051103","html_url":"https://github.com/apache/shardingsphere/issues/1976#issuecomment-470051103","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1976","id":470051103,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDA1MTEwMw==","user":{"login":"tianmingxing","id":5615719,"node_id":"MDQ6VXNlcjU2MTU3MTk=","avatar_url":"https://avatars.githubusercontent.com/u/5615719?v=4","gravatar_id":"","url":"https://api.github.com/users/tianmingxing","html_url":"https://github.com/tianmingxing","followers_url":"https://api.github.com/users/tianmingxing/followers","following_url":"https://api.github.com/users/tianmingxing/following{/other_user}","gists_url":"https://api.github.com/users/tianmingxing/gists{/gist_id}","starred_url":"https://api.github.com/users/tianmingxing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tianmingxing/subscriptions","organizations_url":"https://api.github.com/users/tianmingxing/orgs","repos_url":"https://api.github.com/users/tianmingxing/repos","events_url":"https://api.github.com/users/tianmingxing/events{/privacy}","received_events_url":"https://api.github.com/users/tianmingxing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T10:17:11Z","updated_at":"2019-03-06T10:17:11Z","author_association":"NONE","body":"@terrymanu help me!","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470051103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470065416","html_url":"https://github.com/apache/shardingsphere/pull/1982#issuecomment-470065416","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1982","id":470065416,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDA2NTQxNg==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T11:01:55Z","updated_at":"2019-03-06T11:01:55Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6957](https://coveralls.io/builds/22016822)\n\n* **87** of **265**   **(32.83%)**  changed or added relevant lines in **36** files are covered.\n* **44** unchanged lines in **3** files lost coverage.\n* Overall coverage decreased (**-0.7%**) to **71.047%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/AntlrParsingEngine.java](https://coveralls.io/builds/22016822/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2FAntlrParsingEngine.java#L57) | 4 | 5 | 80.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/common/segment/impl/dql/SelectClauseFiller.java](https://coveralls.io/builds/22016822/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fcommon%2Fsegment%2Fimpl%2Fdql%2FSelectClauseFiller.java#L86) | 5 | 6 | 83.33%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/common/statement/impl/ShowParamFiller.java](https://coveralls.io/builds/22016822/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fcommon%2Fstatement%2Fimpl%2FShowParamFiller.java#L31) | 0 | 1 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/segment/impl/OrConditionFiller.java](https://coveralls.io/builds/22016822/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fsharding%2Fsegment%2Fimpl%2FOrConditionFiller.java#L54) | 0 | 1 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/statement/impl/dml/InsertFiller.java](https://coveralls.io/builds/22016822/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fsharding%2Fstatement%2Fimpl%2Fdml%2FInsertFiller.java#L55) | 0 | 1 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/rule/registry/ParsingRuleRegistry.java](https://coveralls.io/builds/22016822/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Frule%2Fregistry%2FParsingRuleRegistry.java#L85) | 33 | 34 | 97.06%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/SQLStatementFillerEngine.java](https://coveralls.io/builds/22016822/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2FSQLStatementFillerEngine.java#L85) | 5 | 7 | 71.43%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/common/segment/impl/dql/SelectItemFiller.java](https://coveralls.io/builds/22016822/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fcommon%2Fsegment%2Fimpl%2Fdql%2FSelectItemFiller.java#L74) | 0 | 2 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/common/segment/impl/ddl/CommonTableFiller.java](https://coveralls.io/builds/22016822/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fcommon%2Fsegment%2Fimpl%2Fddl%2FCommonTableFiller.java#L31) | 0 | 3 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/common/segment/impl/dql/SubqueryFiller.java](https://coveralls.io/builds/22016822/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fcommon%2Fsegment%2Fimpl%2Fdql%2FSubqueryFiller.java#L31) | 0 | 4 | 0.0%\n<!-- | **Total:** | **87** | **265** | **32.83%** | -->\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| [sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/netty/FrontendChannelInboundHandler.java](https://coveralls.io/builds/22016822/source?filename=sharding-proxy%2Fsharding-proxy-frontend%2Fsharding-proxy-frontend-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Ffrontend%2Fnetty%2FFrontendChannelInboundHandler.java#L38) | 10 | 0.0% |\n| [sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendEngine.java](https://coveralls.io/builds/22016822/source?filename=sharding-proxy%2Fsharding-proxy-frontend%2Fsharding-proxy-frontend-mysql%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Ffrontend%2Fmysql%2FMySQLFrontendEngine.java#L65) | 15 | 26.09% |\n| [sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/PostgreSQLFrontendEngine.java](https://coveralls.io/builds/22016822/source?filename=sharding-proxy%2Fsharding-proxy-frontend%2Fsharding-proxy-frontend-postgresql%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Ffrontend%2Fpostgresql%2FPostgreSQLFrontendEngine.java#L62) | 19 | 0.0% |\n<!-- | **Total:** | **44** |  | -->\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/22016822/badge)](https://coveralls.io/builds/22016822) |\n| :-- | --: |\n| Change from base [Build 6956](https://coveralls.io/builds/22016404): |  -0.7% |\n| Covered Lines: | 11293 |\n| Relevant Lines: | 15895 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470065416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470096528","html_url":"https://github.com/apache/shardingsphere/issues/1966#issuecomment-470096528","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1966","id":470096528,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDA5NjUyOA==","user":{"login":"songxu","id":3148530,"node_id":"MDQ6VXNlcjMxNDg1MzA=","avatar_url":"https://avatars.githubusercontent.com/u/3148530?v=4","gravatar_id":"","url":"https://api.github.com/users/songxu","html_url":"https://github.com/songxu","followers_url":"https://api.github.com/users/songxu/followers","following_url":"https://api.github.com/users/songxu/following{/other_user}","gists_url":"https://api.github.com/users/songxu/gists{/gist_id}","starred_url":"https://api.github.com/users/songxu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/songxu/subscriptions","organizations_url":"https://api.github.com/users/songxu/orgs","repos_url":"https://api.github.com/users/songxu/repos","events_url":"https://api.github.com/users/songxu/events{/privacy}","received_events_url":"https://api.github.com/users/songxu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T12:54:42Z","updated_at":"2019-03-06T12:54:42Z","author_association":"NONE","body":"> What is your expected behaviour if sharding value is null?\r\n\r\nI expected to thrown an exception.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470096528/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470105246","html_url":"https://github.com/apache/shardingsphere/pull/1983#issuecomment-470105246","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1983","id":470105246,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDEwNTI0Ng==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T13:23:52Z","updated_at":"2019-03-06T13:23:52Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6965](https://coveralls.io/builds/22019043)\n\n* **19** of **20**   **(95.0%)**  changed or added relevant lines in **2** files are covered.\n* No unchanged relevant lines lost coverage.\n* Overall coverage increased (+**0.02%**) to **71.75%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/token/ItemsToken.java](https://coveralls.io/builds/22019043/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fparser%2Ftoken%2FItemsToken.java#L36) | 0 | 1 | 0.0%\n<!-- | **Total:** | **19** | **20** | **95.0%** | -->\n\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/22019043/badge)](https://coveralls.io/builds/22019043) |\n| :-- | --: |\n| Change from base [Build 6963](https://coveralls.io/builds/22017615): |  0.02% |\n| Covered Lines: | 11274 |\n| Relevant Lines: | 15713 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470105246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470149872","html_url":"https://github.com/apache/shardingsphere/issues/1976#issuecomment-470149872","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1976","id":470149872,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDE0OTg3Mg==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-06T15:26:32Z","updated_at":"2019-03-06T15:26:32Z","author_association":"MEMBER","body":"Have you been read document and try to example first?","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470149872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470345102","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-470345102","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":470345102,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDM0NTEwMg==","user":{"login":"linyuliang","id":3059826,"node_id":"MDQ6VXNlcjMwNTk4MjY=","avatar_url":"https://avatars.githubusercontent.com/u/3059826?v=4","gravatar_id":"","url":"https://api.github.com/users/linyuliang","html_url":"https://github.com/linyuliang","followers_url":"https://api.github.com/users/linyuliang/followers","following_url":"https://api.github.com/users/linyuliang/following{/other_user}","gists_url":"https://api.github.com/users/linyuliang/gists{/gist_id}","starred_url":"https://api.github.com/users/linyuliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linyuliang/subscriptions","organizations_url":"https://api.github.com/users/linyuliang/orgs","repos_url":"https://api.github.com/users/linyuliang/repos","events_url":"https://api.github.com/users/linyuliang/events{/privacy}","received_events_url":"https://api.github.com/users/linyuliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T01:25:21Z","updated_at":"2019-03-07T01:25:21Z","author_association":"NONE","body":"thanks，it seems work.  The modified file：\r\n```\r\n\r\n/*\r\n * Copyright 2016-2018 shardingsphere.io.\r\n * <p>\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * </p>\r\n */\r\n\r\npackage io.shardingsphere.core.parsing.antlr.extractor.impl;\r\n\r\nimport com.google.common.base.Optional;\r\nimport com.google.common.base.Preconditions;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.OptionalSQLSegmentExtractor;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.util.ExtractorUtils;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.util.RuleName;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.FromWhereSegment;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.condition.OrConditionSegment;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.table.TableJoinSegment;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.table.TableSegment;\r\nimport org.antlr.v4.runtime.ParserRuleContext;\r\nimport org.antlr.v4.runtime.tree.TerminalNode;\r\n\r\nimport java.util.Collection;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n/**\r\n * From clause extractor.\r\n *\r\n * @author duhongjun\r\n */\r\npublic final class FromWhereExtractor implements OptionalSQLSegmentExtractor {\r\n\r\n    private final TableNameExtractor tableNameExtractor = new TableNameExtractor();\r\n\r\n    private PredicateExtractor predicateSegmentExtractor = new PredicateExtractor(new HashMap<>());\r\n\r\n    @Override\r\n    public Optional<FromWhereSegment> extract(final ParserRuleContext ancestorNode) {\r\n        return extract(ancestorNode, ancestorNode);\r\n    }\r\n\r\n    /**\r\n     * Extract SQL segment from SQL AST.\r\n     *\r\n     * @param ancestorNode ancestor node of AST\r\n     * @param rootNode root node of AST\r\n     * @return SQL segment\r\n     */\r\n    public Optional<FromWhereSegment> extract(final ParserRuleContext ancestorNode, final ParserRuleContext rootNode) {\r\n        Optional<ParserRuleContext> selectClauseNode = ExtractorUtils.findFirstChildNode(ancestorNode, RuleName.SELECT_CLAUSE);\r\n        if (!selectClauseNode.isPresent()) {\r\n            return Optional.absent();\r\n        }\r\n        Optional<ParserRuleContext> fromNode = ExtractorUtils.findFirstChildNodeNoneRecursive(selectClauseNode.get().getParent(), RuleName.FROM_CLAUSE);\r\n        if (!fromNode.isPresent()) {\r\n            return Optional.absent();\r\n        }\r\n        Collection<ParserRuleContext> tableReferenceNodes = ExtractorUtils.getAllDescendantNodes(fromNode.get(), RuleName.TABLE_REFERENCE);\r\n        if (tableReferenceNodes.isEmpty()) {\r\n            return Optional.absent();\r\n        }\r\n        FromWhereSegment result = new FromWhereSegment();\r\n//        predicateSegmentExtractor = new PredicateExtractor(result.getTableAliases());\r\n        Collection<ParserRuleContext> questionNodes = ExtractorUtils.getAllDescendantNodes(rootNode, RuleName.QUESTION);\r\n        result.setParameterCount(questionNodes.size());\r\n        Map<ParserRuleContext, Integer> questionNodeIndexMap = getPlaceholderAndNodeIndexMap(questionNodes);\r\n        extractAndFillTableSegment(result, tableReferenceNodes, questionNodeIndexMap);\r\n        extractAndFillWhere(result, questionNodeIndexMap, fromNode.get().getParent());\r\n        return Optional.of(result);\r\n    }\r\n\r\n    private Map<ParserRuleContext, Integer> getPlaceholderAndNodeIndexMap(final Collection<ParserRuleContext> questionNodes) {\r\n        Map<ParserRuleContext, Integer> result = new HashMap<>(questionNodes.size(), 1);\r\n        int index = 0;\r\n        for (ParserRuleContext each : questionNodes) {\r\n            result.put(each, index++);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private void extractAndFillTableSegment(final FromWhereSegment fromWhereSegment,\r\n                                            final Collection<ParserRuleContext> tableReferenceNodes, final Map<ParserRuleContext, Integer> questionNodeIndexMap) {\r\n        for (ParserRuleContext each : tableReferenceNodes) {\r\n            for (int i = 0; i < each.getChildCount(); i++) {\r\n                if (each.getChild(i) instanceof TerminalNode) {\r\n                    continue;\r\n                }\r\n                ParserRuleContext childNode = (ParserRuleContext) each.getChild(i);\r\n                if (RuleName.TABLE_REFERENCES.getName().equals(childNode.getClass().getSimpleName())) {\r\n                    Collection<ParserRuleContext> subTableReferenceNodes = ExtractorUtils.getAllDescendantNodes(childNode, RuleName.TABLE_REFERENCE);\r\n                    if (!subTableReferenceNodes.isEmpty()) {\r\n                        extractAndFillTableSegment(fromWhereSegment, subTableReferenceNodes, questionNodeIndexMap);\r\n                    }\r\n                    continue;\r\n                }\r\n                fillTable(fromWhereSegment, childNode, questionNodeIndexMap);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void fillTable(final FromWhereSegment fromWhereSegment, final ParserRuleContext joinOrTableFactorNode, final Map<ParserRuleContext, Integer> questionNodeIndexMap) {\r\n        if (!RuleName.JOIN_TABLE.getName().endsWith(joinOrTableFactorNode.getClass().getSimpleName())) {\r\n            Optional<TableSegment> tableSegment = tableNameExtractor.extract(joinOrTableFactorNode);\r\n            Preconditions.checkState(tableSegment.isPresent());\r\n            fillTableResult(fromWhereSegment, tableSegment.get());\r\n        }\r\n        Optional<ParserRuleContext> joinConditionNode = ExtractorUtils.findFirstChildNode(joinOrTableFactorNode, RuleName.JOIN_CONDITION);\r\n        if (!joinConditionNode.isPresent()) {\r\n            return;\r\n        }\r\n        Optional<ParserRuleContext> tableFactorNode = ExtractorUtils.findFirstChildNode(joinOrTableFactorNode, RuleName.TABLE_FACTOR);\r\n        Preconditions.checkState(tableFactorNode.isPresent());\r\n        Optional<TableSegment> tableSegment = tableNameExtractor.extract(tableFactorNode.get());\r\n        Preconditions.checkState(tableSegment.isPresent());\r\n        TableJoinSegment tableJoinResult = new TableJoinSegment(tableSegment.get());\r\n        Optional<OrConditionSegment> conditionResult = buildCondition(joinConditionNode.get(), questionNodeIndexMap);\r\n        if (conditionResult.isPresent()) {\r\n            tableJoinResult.getJoinConditions().getAndConditions().addAll(conditionResult.get().getAndConditions());\r\n            fromWhereSegment.getConditions().getAndConditions().addAll(conditionResult.get().getAndConditions());\r\n        }\r\n        fillTableResult(fromWhereSegment, tableJoinResult);\r\n    }\r\n\r\n    private void fillTableResult(final FromWhereSegment fromWhereSegment, final TableSegment tableSegment) {\r\n        String alias = tableSegment.getName();\r\n        if (tableSegment.getAlias().isPresent()) {\r\n            alias = tableSegment.getAlias().get();\r\n        }\r\n        fromWhereSegment.getTableAliases().put(alias, tableSegment.getName());\r\n    }\r\n\r\n    private void extractAndFillWhere(final FromWhereSegment fromWhereSegment, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext ancestorNode) {\r\n        Optional<ParserRuleContext> whereNode = ExtractorUtils.findFirstChildNodeNoneRecursive(ancestorNode, RuleName.WHERE_CLAUSE);\r\n        if (!whereNode.isPresent()) {\r\n            return;\r\n        }\r\n        Optional<OrConditionSegment> conditions = buildCondition((ParserRuleContext) whereNode.get().getChild(1), questionNodeIndexMap);\r\n        if (conditions.isPresent()) {\r\n            fromWhereSegment.getConditions().getAndConditions().addAll(conditions.get().getAndConditions());\r\n        }\r\n    }\r\n\r\n    private Optional<OrConditionSegment> buildCondition(final ParserRuleContext node, final Map<ParserRuleContext, Integer> questionNodeIndexMap) {\r\n        Optional<ParserRuleContext> exprNode = ExtractorUtils.findFirstChildNode(node, RuleName.EXPR);\r\n        return exprNode.isPresent() ? predicateSegmentExtractor.extractCondition(questionNodeIndexMap, exprNode.get()) : Optional.<OrConditionSegment>absent();\r\n    }\r\n}\r\n \r\n```","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470345102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470349834","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-470349834","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":470349834,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDM0OTgzNA==","user":{"login":"cherrylzhao","id":8317649,"node_id":"MDQ6VXNlcjgzMTc2NDk=","avatar_url":"https://avatars.githubusercontent.com/u/8317649?v=4","gravatar_id":"","url":"https://api.github.com/users/cherrylzhao","html_url":"https://github.com/cherrylzhao","followers_url":"https://api.github.com/users/cherrylzhao/followers","following_url":"https://api.github.com/users/cherrylzhao/following{/other_user}","gists_url":"https://api.github.com/users/cherrylzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/cherrylzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cherrylzhao/subscriptions","organizations_url":"https://api.github.com/users/cherrylzhao/orgs","repos_url":"https://api.github.com/users/cherrylzhao/repos","events_url":"https://api.github.com/users/cherrylzhao/events{/privacy}","received_events_url":"https://api.github.com/users/cherrylzhao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T01:47:31Z","updated_at":"2019-03-07T01:47:31Z","author_association":"MEMBER","body":"@codefairy08 please make a check of above modified file","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470349834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470367741","html_url":"https://github.com/apache/shardingsphere/issues/1984#issuecomment-470367741","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1984","id":470367741,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDM2Nzc0MQ==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T03:13:26Z","updated_at":"2019-03-07T03:13:26Z","author_association":"MEMBER","body":"**For English only**, other languages will not accept.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470367741/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470377310","html_url":"https://github.com/apache/shardingsphere/issues/1976#issuecomment-470377310","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1976","id":470377310,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDM3NzMxMA==","user":{"login":"tianmingxing","id":5615719,"node_id":"MDQ6VXNlcjU2MTU3MTk=","avatar_url":"https://avatars.githubusercontent.com/u/5615719?v=4","gravatar_id":"","url":"https://api.github.com/users/tianmingxing","html_url":"https://github.com/tianmingxing","followers_url":"https://api.github.com/users/tianmingxing/followers","following_url":"https://api.github.com/users/tianmingxing/following{/other_user}","gists_url":"https://api.github.com/users/tianmingxing/gists{/gist_id}","starred_url":"https://api.github.com/users/tianmingxing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tianmingxing/subscriptions","organizations_url":"https://api.github.com/users/tianmingxing/orgs","repos_url":"https://api.github.com/users/tianmingxing/repos","events_url":"https://api.github.com/users/tianmingxing/events{/privacy}","received_events_url":"https://api.github.com/users/tianmingxing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T04:09:07Z","updated_at":"2019-03-07T04:09:07Z","author_association":"NONE","body":"Please believe me, I have read all the documentation! I found out how to customize the sharding algorithm, but I didn't find how to specify it in the config file, I mean it is configured in the properties file.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470377310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470380956","html_url":"https://github.com/apache/shardingsphere/issues/1946#issuecomment-470380956","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1946","id":470380956,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDM4MDk1Ng==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T04:32:43Z","updated_at":"2019-03-07T04:32:43Z","author_association":"MEMBER","body":"If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470380956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470381203","html_url":"https://github.com/apache/shardingsphere/issues/1976#issuecomment-470381203","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1976","id":470381203,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDM4MTIwMw==","user":{"login":"cherrylzhao","id":8317649,"node_id":"MDQ6VXNlcjgzMTc2NDk=","avatar_url":"https://avatars.githubusercontent.com/u/8317649?v=4","gravatar_id":"","url":"https://api.github.com/users/cherrylzhao","html_url":"https://github.com/cherrylzhao","followers_url":"https://api.github.com/users/cherrylzhao/followers","following_url":"https://api.github.com/users/cherrylzhao/following{/other_user}","gists_url":"https://api.github.com/users/cherrylzhao/gists{/gist_id}","starred_url":"https://api.github.com/users/cherrylzhao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cherrylzhao/subscriptions","organizations_url":"https://api.github.com/users/cherrylzhao/orgs","repos_url":"https://api.github.com/users/cherrylzhao/repos","events_url":"https://api.github.com/users/cherrylzhao/events{/privacy}","received_events_url":"https://api.github.com/users/cherrylzhao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T04:34:14Z","updated_at":"2019-03-07T04:34:14Z","author_association":"MEMBER","body":"please see the raw-jdbc-example","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470381203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470383676","html_url":"https://github.com/apache/shardingsphere/issues/1924#issuecomment-470383676","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1924","id":470383676,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDM4MzY3Ng==","user":{"login":"tristaZero","id":27757146,"node_id":"MDQ6VXNlcjI3NzU3MTQ2","avatar_url":"https://avatars.githubusercontent.com/u/27757146?v=4","gravatar_id":"","url":"https://api.github.com/users/tristaZero","html_url":"https://github.com/tristaZero","followers_url":"https://api.github.com/users/tristaZero/followers","following_url":"https://api.github.com/users/tristaZero/following{/other_user}","gists_url":"https://api.github.com/users/tristaZero/gists{/gist_id}","starred_url":"https://api.github.com/users/tristaZero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tristaZero/subscriptions","organizations_url":"https://api.github.com/users/tristaZero/orgs","repos_url":"https://api.github.com/users/tristaZero/repos","events_url":"https://api.github.com/users/tristaZero/events{/privacy}","received_events_url":"https://api.github.com/users/tristaZero/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T04:49:55Z","updated_at":"2019-03-07T04:49:55Z","author_association":"CONTRIBUTOR","body":"@zouxiaoming2000 \r\nHi, i speculate you mistake this setting item.\r\nIf you set sharding.jdbc.config.orchestration.overwrite to false, the local configuration will not be written to registry, and the shardingSphere will start up with local config.  if you want to use the configuration from regsitry, you only need to write the configuration of zookeeper into configuration file.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470383676/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470385951","html_url":"https://github.com/apache/shardingsphere/issues/1976#issuecomment-470385951","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1976","id":470385951,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDM4NTk1MQ==","user":{"login":"tristaZero","id":27757146,"node_id":"MDQ6VXNlcjI3NzU3MTQ2","avatar_url":"https://avatars.githubusercontent.com/u/27757146?v=4","gravatar_id":"","url":"https://api.github.com/users/tristaZero","html_url":"https://github.com/tristaZero","followers_url":"https://api.github.com/users/tristaZero/followers","following_url":"https://api.github.com/users/tristaZero/following{/other_user}","gists_url":"https://api.github.com/users/tristaZero/gists{/gist_id}","starred_url":"https://api.github.com/users/tristaZero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tristaZero/subscriptions","organizations_url":"https://api.github.com/users/tristaZero/orgs","repos_url":"https://api.github.com/users/tristaZero/repos","events_url":"https://api.github.com/users/tristaZero/events{/privacy}","received_events_url":"https://api.github.com/users/tristaZero/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T05:03:39Z","updated_at":"2019-03-07T05:16:31Z","author_association":"CONTRIBUTOR","body":"@xiaoxing598 \r\n[Here](https://github.com/apache/incubator-shardingsphere-example/tree/dev/example-utility/src/main/java/io/shardingsphere/example/algorithm) is exmaple.\r\n\r\nHow to use your customized sharding statergy? Please refer to:\r\n```\r\nsharding.jdbc.config.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_id\r\nsharding.jdbc.config.sharding.tables.t_order_item.table-strategy.standard.preciseAlgorithmClassName=io.shardingsphere.example.algorithm.PreciseModuloShardingTableAlgorithm\r\n```","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470385951/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470392183","html_url":"https://github.com/apache/shardingsphere/issues/1927#issuecomment-470392183","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1927","id":470392183,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDM5MjE4Mw==","user":{"login":"sfiloveyou","id":6682457,"node_id":"MDQ6VXNlcjY2ODI0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/6682457?v=4","gravatar_id":"","url":"https://api.github.com/users/sfiloveyou","html_url":"https://github.com/sfiloveyou","followers_url":"https://api.github.com/users/sfiloveyou/followers","following_url":"https://api.github.com/users/sfiloveyou/following{/other_user}","gists_url":"https://api.github.com/users/sfiloveyou/gists{/gist_id}","starred_url":"https://api.github.com/users/sfiloveyou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sfiloveyou/subscriptions","organizations_url":"https://api.github.com/users/sfiloveyou/orgs","repos_url":"https://api.github.com/users/sfiloveyou/repos","events_url":"https://api.github.com/users/sfiloveyou/events{/privacy}","received_events_url":"https://api.github.com/users/sfiloveyou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T05:37:33Z","updated_at":"2019-03-07T05:37:33Z","author_association":"NONE","body":"i have the same issue \r\nCaused by: java.lang.NoClassDefFoundError: com/atomikos/icatch/HeuristicMessage\r\n\tat io.shardingsphere.transaction.xa.manager.AtomikosDataSourceBeanWrapper.<init>(AtomikosDataSourceBeanWrapper.java:38) ~[sharding-transaction-2pc-xa-3.1.0.jar:na]\r\n\tat io.shardingsphere.transaction.xa.manager.AtomikosTransactionManager.wrapDataSource(AtomikosTransactionManager.java:106) ~[sharding-transaction-2pc-xa-3.1.0.jar:na]\r\n\tat io.shardingsphere.transaction.xa.convert.XADataSourceConverter.convert(XADataSourceConverter.java:54) ~[sharding-transaction-2pc-xa-3.1.0.jar:na]\r\n\tat io.shardingsphere.transaction.core.datasource.ShardingTransactionalDataSource.<init>(ShardingTransactionalDataSource.java:54) ~[sharding-transaction-core-3.1.0.jar:na]\r\n\tat io.shardingsphere.shardingjdbc.jdbc.adapter.AbstractDataSourceAdapter.<init>(AbstractDataSourceAdapter.java:59) ~[sharding-jdbc-core-3.1.0.jar:na]\r\n\tat io.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource.<init>(ShardingDataSource.java:54) ~[sharding-jdbc-core-3.1.0.jar:na]\r\n\tat io.shardingsphere.shardingjdbc.api.ShardingDataSourceFactory.createDataSource(ShardingDataSourceFactory.java:51) ~[sharding-jdbc-core-3.1.0.jar:na]\r\n\tat com.yiyunpower.yicloud.config.ShardingDruidDataSource.dataSource(ShardingDruidDataSource.java:117) ~[classes/:na]\r\n\tat com.yiyunpower.yicloud.config.ShardingDruidDataSource$$EnhancerBySpringCGLIB$$2339e312.CGLIB$dataSource$5(<generated>) ~[classes/:na]\r\n\tat com.yiyunpower.yicloud.config.ShardingDruidDataSource$$EnhancerBySpringCGLIB$$2339e312$$FastClassBySpringCGLIB$$134a4f11.invoke(<generated>) ~[classes/:na]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) ~[spring-core-4.3.20.RELEASE.jar:4.3.20.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) ~[spring-context-4.3.20.RELEASE.jar:4.3.20.RELEASE]\r\n\tat com.yiyunpower.yicloud.config.ShardingDruidDataSource$$EnhancerBySpringCGLIB$$2339e312.dataSource(<generated>) ~[classes/:na]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_151]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_151]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_151]\r\n\tat java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_151]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) ~[spring-beans-4.3.20.RELEASE.jar:4.3.20.RELEASE]\r\n\t... 90 common frames omitted\r\nCaused by: java.lang.ClassNotFoundException: com.atomikos.icatch.HeuristicMessage\r\n\tat java.net.URLClassLoader.findClass(Unknown Source) ~[na:1.8.0_151]\r\n\tat java.lang.ClassLoader.loadClass(Unknown Source) ~[na:1.8.0_151]\r\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source) ~[na:1.8.0_151]\r\n\tat java.lang.ClassLoader.loadClass(Unknown Source) ~[na:1.8.0_151]\r\n\t... 108 common frames omitted","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470392183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470393392","html_url":"https://github.com/apache/shardingsphere/issues/1980#issuecomment-470393392","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1980","id":470393392,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDM5MzM5Mg==","user":{"login":"tristaZero","id":27757146,"node_id":"MDQ6VXNlcjI3NzU3MTQ2","avatar_url":"https://avatars.githubusercontent.com/u/27757146?v=4","gravatar_id":"","url":"https://api.github.com/users/tristaZero","html_url":"https://github.com/tristaZero","followers_url":"https://api.github.com/users/tristaZero/followers","following_url":"https://api.github.com/users/tristaZero/following{/other_user}","gists_url":"https://api.github.com/users/tristaZero/gists{/gist_id}","starred_url":"https://api.github.com/users/tristaZero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tristaZero/subscriptions","organizations_url":"https://api.github.com/users/tristaZero/orgs","repos_url":"https://api.github.com/users/tristaZero/repos","events_url":"https://api.github.com/users/tristaZero/events{/privacy}","received_events_url":"https://api.github.com/users/tristaZero/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T05:43:26Z","updated_at":"2019-03-07T05:51:55Z","author_association":"CONTRIBUTOR","body":"@wayne0zhang which version do you use?\r\nIn latest version, i.e.,4.0.0.M1-SNAPSHOT,\r\n```\r\npackage org.apache.shardingsphere.core.routing.type.standard;\r\n\r\nprivate List<RouteValue> getTableShardingValuesFromHint() {\r\n        return getRouteValues(HintManagerHolder.getTableShardingValues(logicTableName));\r\n    }\r\n```\r\nWe get shardingValues from HintManagerHolder, where user puts shardingValues. And then we will pass shardingValues to doSharding() in HintShardingAlgorithm, and calculate the target tables by calling doSharding() in HintShardingAlgorithm.\r\n\r\n***Therefore, shardingColumns in HintShardingStrategy will not be used, but doSharding() in HintShardingAlgorithm will be called anyway.***","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470393392/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470394982","html_url":"https://github.com/apache/shardingsphere/pull/1987#issuecomment-470394982","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1987","id":470394982,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDM5NDk4Mg==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T05:51:23Z","updated_at":"2019-03-07T05:51:23Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6981](https://coveralls.io/builds/22036658)\n\n* **1** of **2**   **(50.0%)**  changed or added relevant lines in **2** files are covered.\n* **21** unchanged lines in **3** files lost coverage.\n* Overall coverage decreased (**-0.01%**) to **71.11%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/command/CommandExecutorTask.java](https://coveralls.io/builds/22036658/source?filename=sharding-proxy%2Fsharding-proxy-frontend%2Fsharding-proxy-frontend-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Ffrontend%2Fcommand%2FCommandExecutorTask.java#L65) | 0 | 1 | 0.0%\n<!-- | **Total:** | **1** | **2** | **50.0%** | -->\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/optimizer/engine/encrypt/EncryptInsertOptimizeEngine.java](https://coveralls.io/builds/22036658/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Foptimizer%2Fengine%2Fencrypt%2FEncryptInsertOptimizeEngine.java#L112) | 5 | 0.0% |\n| [sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/query/PostgreSQLColumnDescription.java](https://coveralls.io/builds/22036658/source?filename=sharding-proxy%2Fsharding-proxy-transport%2Fsharding-proxy-transport-postgresql%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Ftransport%2Fpostgresql%2Fpacket%2Fcommand%2Fquery%2FPostgreSQLColumnDescription.java#L33) | 5 | 0.0% |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/extractor/impl/PredicateExtractor.java](https://coveralls.io/builds/22036658/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Fextractor%2Fimpl%2FPredicateExtractor.java#L58) | 11 | 88.89% |\n<!-- | **Total:** | **21** |  | -->\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/22036658/badge)](https://coveralls.io/builds/22036658) |\n| :-- | --: |\n| Change from base [Build 6977](https://coveralls.io/builds/22035950): |  -0.01% |\n| Covered Lines: | 11305 |\n| Relevant Lines: | 15898 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470394982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470395192","html_url":"https://github.com/apache/shardingsphere/issues/1976#issuecomment-470395192","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1976","id":470395192,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDM5NTE5Mg==","user":{"login":"tianmingxing","id":5615719,"node_id":"MDQ6VXNlcjU2MTU3MTk=","avatar_url":"https://avatars.githubusercontent.com/u/5615719?v=4","gravatar_id":"","url":"https://api.github.com/users/tianmingxing","html_url":"https://github.com/tianmingxing","followers_url":"https://api.github.com/users/tianmingxing/followers","following_url":"https://api.github.com/users/tianmingxing/following{/other_user}","gists_url":"https://api.github.com/users/tianmingxing/gists{/gist_id}","starred_url":"https://api.github.com/users/tianmingxing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tianmingxing/subscriptions","organizations_url":"https://api.github.com/users/tianmingxing/orgs","repos_url":"https://api.github.com/users/tianmingxing/repos","events_url":"https://api.github.com/users/tianmingxing/events{/privacy}","received_events_url":"https://api.github.com/users/tianmingxing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T05:52:21Z","updated_at":"2019-03-07T05:52:21Z","author_association":"NONE","body":"@tristaZero Thank you for the example given. Can the above rules be applied to the library logic? I don't want to repeat the configuration for each table, after all, their fragmentation rules are the same.\r\n\r\nI just tried to use the following configuration, but the log failed.\r\n```\r\nsharding.jdbc.config.sharding.default-database-strategy.inline.preciseAlgorithmClassName = com.xxx.xxx.config.PreciseConsistentHashShardingDatabaseAlgorithm\r\n\r\nFactory method 'dataSource' threw exception; nested exception is java.lang.NullPointerException: Sharding algorithm expression cannot be null.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470395192/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470397330","html_url":"https://github.com/apache/shardingsphere/issues/1976#issuecomment-470397330","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1976","id":470397330,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDM5NzMzMA==","user":{"login":"tianmingxing","id":5615719,"node_id":"MDQ6VXNlcjU2MTU3MTk=","avatar_url":"https://avatars.githubusercontent.com/u/5615719?v=4","gravatar_id":"","url":"https://api.github.com/users/tianmingxing","html_url":"https://github.com/tianmingxing","followers_url":"https://api.github.com/users/tianmingxing/followers","following_url":"https://api.github.com/users/tianmingxing/following{/other_user}","gists_url":"https://api.github.com/users/tianmingxing/gists{/gist_id}","starred_url":"https://api.github.com/users/tianmingxing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tianmingxing/subscriptions","organizations_url":"https://api.github.com/users/tianmingxing/orgs","repos_url":"https://api.github.com/users/tianmingxing/repos","events_url":"https://api.github.com/users/tianmingxing/events{/privacy}","received_events_url":"https://api.github.com/users/tianmingxing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T06:02:51Z","updated_at":"2019-03-07T06:02:51Z","author_association":"NONE","body":"> please see the raw-jdbc-example\r\n\r\nI did not find in the project \"incubator-shardingsphere-example\" how the custom shard logic is configured in the Properties file, only to find out how to use code configuration, and XML file configuration.\r\nThere is indeed a missing configuration example for the Properties file.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470397330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470403498","html_url":"https://github.com/apache/shardingsphere/issues/1976#issuecomment-470403498","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1976","id":470403498,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQwMzQ5OA==","user":{"login":"tianmingxing","id":5615719,"node_id":"MDQ6VXNlcjU2MTU3MTk=","avatar_url":"https://avatars.githubusercontent.com/u/5615719?v=4","gravatar_id":"","url":"https://api.github.com/users/tianmingxing","html_url":"https://github.com/tianmingxing","followers_url":"https://api.github.com/users/tianmingxing/followers","following_url":"https://api.github.com/users/tianmingxing/following{/other_user}","gists_url":"https://api.github.com/users/tianmingxing/gists{/gist_id}","starred_url":"https://api.github.com/users/tianmingxing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tianmingxing/subscriptions","organizations_url":"https://api.github.com/users/tianmingxing/orgs","repos_url":"https://api.github.com/users/tianmingxing/repos","events_url":"https://api.github.com/users/tianmingxing/events{/privacy}","received_events_url":"https://api.github.com/users/tianmingxing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T06:31:18Z","updated_at":"2019-03-07T06:31:18Z","author_association":"NONE","body":"> @xiaoxing598\r\n> [Here](https://github.com/apache/incubator-shardingsphere-example/tree/dev/example-utility/src/main/java/io/shardingsphere/example/algorithm) is exmaple.\r\n> \r\n> How to use your customized sharding statergy? Please refer to:\r\n> \r\n> ```\r\n> sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_id\r\n> sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.standard.preciseAlgorithmClassName=io.shardingsphere.example.algorithm.PreciseModuloShardingTableAlgorithm\r\n> ```\r\n\r\nI need to set the sharding strategy of the sub-library instead of the sub-table strategy. The example you gave is incorrect.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470403498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470404637","html_url":"https://github.com/apache/shardingsphere/issues/1976#issuecomment-470404637","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1976","id":470404637,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQwNDYzNw==","user":{"login":"tianmingxing","id":5615719,"node_id":"MDQ6VXNlcjU2MTU3MTk=","avatar_url":"https://avatars.githubusercontent.com/u/5615719?v=4","gravatar_id":"","url":"https://api.github.com/users/tianmingxing","html_url":"https://github.com/tianmingxing","followers_url":"https://api.github.com/users/tianmingxing/followers","following_url":"https://api.github.com/users/tianmingxing/following{/other_user}","gists_url":"https://api.github.com/users/tianmingxing/gists{/gist_id}","starred_url":"https://api.github.com/users/tianmingxing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tianmingxing/subscriptions","organizations_url":"https://api.github.com/users/tianmingxing/orgs","repos_url":"https://api.github.com/users/tianmingxing/repos","events_url":"https://api.github.com/users/tianmingxing/events{/privacy}","received_events_url":"https://api.github.com/users/tianmingxing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T06:36:19Z","updated_at":"2019-03-07T06:36:19Z","author_association":"NONE","body":"@terrymanu I need to set the sharding strategy on the specified data node. I don't split the table in my project, just split the different data sources.\r\n\r\nI expect to be able to configure this as follows:\r\n```properties \r\nsharding.jdbc.config.sharding.master-slave-rules.ds0.master-data-source-name = master0\r\nsharding.jdbc.config.sharding.master-slave-rules.ds0.slave-data-source-names = master0slave0\r\nsharding.jdbc.config.sharding.master-slave-rules.ds1.master-data-source-name = master1\r\nsharding.jdbc.config.sharding.master-slave-rules.ds1.slave-data-source-names = master1slave0\r\nsharding.jdbc.config.sharding.master-slave-rules.ds2.master-data-source-name = master2\r\nsharding.jdbc.config.sharding.master-slave-rules.ds2.slave-data-source-names = master2slave0\r\n\r\nsharding.jdbc.config.sharding.master-slave-rules.ds->{1..2}.strategy.preciseAlgorithmClassName=xxx.PreciseConsistentHashShardingDatabaseAlgorithm\r\n```","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470404637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470407182","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-470407182","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":470407182,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQwNzE4Mg==","user":{"login":"codefairy08","id":39583929,"node_id":"MDQ6VXNlcjM5NTgzOTI5","avatar_url":"https://avatars.githubusercontent.com/u/39583929?v=4","gravatar_id":"","url":"https://api.github.com/users/codefairy08","html_url":"https://github.com/codefairy08","followers_url":"https://api.github.com/users/codefairy08/followers","following_url":"https://api.github.com/users/codefairy08/following{/other_user}","gists_url":"https://api.github.com/users/codefairy08/gists{/gist_id}","starred_url":"https://api.github.com/users/codefairy08/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefairy08/subscriptions","organizations_url":"https://api.github.com/users/codefairy08/orgs","repos_url":"https://api.github.com/users/codefairy08/repos","events_url":"https://api.github.com/users/codefairy08/events{/privacy}","received_events_url":"https://api.github.com/users/codefairy08/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T06:48:04Z","updated_at":"2019-03-07T06:48:04Z","author_association":"CONTRIBUTOR","body":"@linyuliang  thanks for your code， but your  modification does not fix this bug,  i commit code.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470407182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470408146","html_url":"https://github.com/apache/shardingsphere/issues/1979#issuecomment-470408146","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1979","id":470408146,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQwODE0Ng==","user":{"login":"cocoyadi","id":18412315,"node_id":"MDQ6VXNlcjE4NDEyMzE1","avatar_url":"https://avatars.githubusercontent.com/u/18412315?v=4","gravatar_id":"","url":"https://api.github.com/users/cocoyadi","html_url":"https://github.com/cocoyadi","followers_url":"https://api.github.com/users/cocoyadi/followers","following_url":"https://api.github.com/users/cocoyadi/following{/other_user}","gists_url":"https://api.github.com/users/cocoyadi/gists{/gist_id}","starred_url":"https://api.github.com/users/cocoyadi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cocoyadi/subscriptions","organizations_url":"https://api.github.com/users/cocoyadi/orgs","repos_url":"https://api.github.com/users/cocoyadi/repos","events_url":"https://api.github.com/users/cocoyadi/events{/privacy}","received_events_url":"https://api.github.com/users/cocoyadi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T06:52:27Z","updated_at":"2019-03-07T06:52:27Z","author_association":"NONE","body":"Full sharding configuration as below:\r\n```\r\n@Configuration\r\n@MapperScan(basePackages = {\"com.xxx.mapper.content\"}, sqlSessionFactoryRef = \"contentSqlSessionFactory\")\r\npublic class ContentConfiguration {\r\n    private static final String CONTENT_DATABASE = \"database\";\r\n    private static final String CONTENT_TABLES = \"table\";\r\n\r\n    @Value(\"${spring.datasource.type}\")\r\n    private Class<? extends DataSource> dataSourceType;\r\n\r\n    @Value(\"${datasource.content.url}\")\r\n    private String url;\r\n\r\n    @Value(\"${datasource.content.username}\")\r\n    private String username;\r\n\r\n    @Value(\"${datasource.content.password}\")\r\n    private String password;\r\n\r\n    /**\r\n     * create  datasource map\r\n     * @return\r\n     */\r\n    private Map<String, DataSource> createContentDataSourceMap() {\r\n        Map<String, DataSource> result = new HashMap<>();\r\n        String databaseName = null;\r\n        for(int i =0; i<4;i++){\r\n           databaseName = CONTENT_DATABASE+\"_\"+i;\r\n           result.put(databaseName, createContentDataSource(databaseName));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * create datasource\r\n     * @param dataSourceName\r\n     * @return\r\n     */\r\n    private DataSource createContentDataSource(final String dataSourceName) {\r\n        DruidDataSource datasource = new DruidDataSource();\r\n        datasource.setDriverClassName(com.mysql.jdbc.Driver.class.getName());\r\n        String[] urls = url.split(\"\\\\?\");\r\n        datasource.setUrl(urls[0]+dataSourceName+\"?\"+urls[1]);\r\n        datasource.setUsername(username);\r\n        datasource.setPassword(password);\r\n        return datasource;\r\n    }\r\n\r\n    @Bean(\"contentSqlSessionFactory\")\r\n    public SqlSessionFactory contentSqlSessionFactory(@Qualifier(\"contentShardingDataSource\") DataSource contentShardingDataSource) throws Exception {\r\n        SqlSessionFactoryBean bean = new SqlSessionFactoryBean();\r\n        bean.setDataSource(contentShardingDataSource);\r\n        bean.setMapperLocations(new PathMatchingResourcePatternResolver().getResources(\"classpath:mapper/content/*.xml\"));\r\n        return bean.getObject();\r\n    }\r\n\r\n    /**\r\n     * sharding configuration\r\n     * @return\r\n     * @throws SQLException\r\n     */\r\n    @Bean(name = \"contentShardingDataSource\")\r\n    public DataSource getContentShardingDataSource(@Autowired @Qualifier(\"contentTableRuleConfiguration\") TableRuleConfiguration tableRuleConfiguration) throws SQLException {\r\n        ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\r\n        shardingRuleConfig.getBindingTableGroups().add(CONTENT_TABLES);\r\n \r\n        shardingRuleConfig.setDefaultDatabaseShardingStrategyConfig(new StandardShardingStrategyConfiguration(\"id\", new ContentShardingDatabaseAlgorithm()));\r\n        // table sharding configuration\r\n        shardingRuleConfig.getTableRuleConfigs().add(tableRuleConfiguration);\r\n        return ShardingDataSourceFactory.createDataSource(createContentDataSourceMap(), shardingRuleConfig,new ConcurrentHashMap(), new Properties());\r\n    }\r\n\r\n\r\n    /**\r\n     * table sharding  algorithm\r\n     * @return\r\n     */\r\n    @Bean(\"contentTableRuleConfiguration\")\r\n    public TableRuleConfiguration getContentTableRuleConfiguration() {\r\n \r\n        StandardShardingStrategyConfiguration standardStrategy = new StandardShardingStrategyConfiguration(\"id\", new ContentShardingTablesAlgorithm());\r\n        TableRuleConfiguration TableRuleConfig = new TableRuleConfiguration();\r\n        TableRuleConfig.setLogicTable(CONTENT_TABLES);\r\n        TableRuleConfig.setTableShardingStrategyConfig(standardStrategy);\r\n        return TableRuleConfig;\r\n    }\r\n\r\n}\r\n\r\n```\r\ndatasource configuration:\r\n```\r\n  content:\r\n    driver-class-name: com.mysql.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/?characterEncoding=gbk&useUnicode=true&rewriteBatchedStatements=true&autoReconnect=true&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull\r\n    username: root\r\n    password: password123\r\n```","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470408146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470414227","html_url":"https://github.com/apache/shardingsphere/issues/1980#issuecomment-470414227","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1980","id":470414227,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQxNDIyNw==","user":{"login":"wayne0zhang","id":16120313,"node_id":"MDQ6VXNlcjE2MTIwMzEz","avatar_url":"https://avatars.githubusercontent.com/u/16120313?v=4","gravatar_id":"","url":"https://api.github.com/users/wayne0zhang","html_url":"https://github.com/wayne0zhang","followers_url":"https://api.github.com/users/wayne0zhang/followers","following_url":"https://api.github.com/users/wayne0zhang/following{/other_user}","gists_url":"https://api.github.com/users/wayne0zhang/gists{/gist_id}","starred_url":"https://api.github.com/users/wayne0zhang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wayne0zhang/subscriptions","organizations_url":"https://api.github.com/users/wayne0zhang/orgs","repos_url":"https://api.github.com/users/wayne0zhang/repos","events_url":"https://api.github.com/users/wayne0zhang/events{/privacy}","received_events_url":"https://api.github.com/users/wayne0zhang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T07:17:48Z","updated_at":"2019-03-07T07:17:48Z","author_association":"NONE","body":"where can i find another version?\r\nhttps://mvnrepository.com/artifact/io.shardingjdbc/sharding-jdbc-core\r\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470414227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470415942","html_url":"https://github.com/apache/shardingsphere/issues/1976#issuecomment-470415942","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1976","id":470415942,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQxNTk0Mg==","user":{"login":"tianmingxing","id":5615719,"node_id":"MDQ6VXNlcjU2MTU3MTk=","avatar_url":"https://avatars.githubusercontent.com/u/5615719?v=4","gravatar_id":"","url":"https://api.github.com/users/tianmingxing","html_url":"https://github.com/tianmingxing","followers_url":"https://api.github.com/users/tianmingxing/followers","following_url":"https://api.github.com/users/tianmingxing/following{/other_user}","gists_url":"https://api.github.com/users/tianmingxing/gists{/gist_id}","starred_url":"https://api.github.com/users/tianmingxing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tianmingxing/subscriptions","organizations_url":"https://api.github.com/users/tianmingxing/orgs","repos_url":"https://api.github.com/users/tianmingxing/repos","events_url":"https://api.github.com/users/tianmingxing/events{/privacy}","received_events_url":"https://api.github.com/users/tianmingxing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T07:25:02Z","updated_at":"2019-03-07T07:25:02Z","author_association":"NONE","body":"@tristaZero According to the following configuration, I can fulfill my needs.\r\n\r\n```Properties\r\nsharding.jdbc.config.sharding.default-database-strategy.standard.sharding-column=order_id\r\nsharding.jdbc.config.sharding.default-database-strategy.standard.precise-algorithm-class-name=com.xxx.config.PreciseConsistentHashShardingDatabaseAlgorithm\r\n```","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470415942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470417826","html_url":"https://github.com/apache/shardingsphere/issues/1967#issuecomment-470417826","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1967","id":470417826,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQxNzgyNg==","user":{"login":"linyuliang","id":3059826,"node_id":"MDQ6VXNlcjMwNTk4MjY=","avatar_url":"https://avatars.githubusercontent.com/u/3059826?v=4","gravatar_id":"","url":"https://api.github.com/users/linyuliang","html_url":"https://github.com/linyuliang","followers_url":"https://api.github.com/users/linyuliang/followers","following_url":"https://api.github.com/users/linyuliang/following{/other_user}","gists_url":"https://api.github.com/users/linyuliang/gists{/gist_id}","starred_url":"https://api.github.com/users/linyuliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linyuliang/subscriptions","organizations_url":"https://api.github.com/users/linyuliang/orgs","repos_url":"https://api.github.com/users/linyuliang/repos","events_url":"https://api.github.com/users/linyuliang/events{/privacy}","received_events_url":"https://api.github.com/users/linyuliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T07:33:32Z","updated_at":"2019-03-07T08:05:21Z","author_association":"NONE","body":"@codefairy08\r\nIs your code based on version 3.1.0?\r\n Is version 3.1.0  the latest release version?\r\n I don't want to change too much code based on version 3.1.0.  Based on your code and version 3.1.0, I merged code like this:\r\n\r\nExpressionExtractor.java:\r\n```\r\n/*\r\n * Copyright 2016-2018 shardingsphere.io.\r\n * <p>\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * </p>\r\n */\r\n\r\npackage io.shardingsphere.core.parsing.antlr.extractor.impl;\r\n\r\nimport com.google.common.base.Optional;\r\nimport com.google.common.base.Preconditions;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.OptionalSQLSegmentExtractor;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.impl.dql.SubqueryExtractor;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.util.ExtractorUtils;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.util.RuleName;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.column.ColumnSegment;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.expr.*;\r\nimport io.shardingsphere.core.parsing.lexer.token.Symbol;\r\nimport io.shardingsphere.core.util.SQLUtil;\r\nimport org.antlr.v4.runtime.ParserRuleContext;\r\nimport org.antlr.v4.runtime.tree.ParseTree;\r\nimport org.antlr.v4.runtime.tree.TerminalNode;\r\n\r\nimport java.util.HashMap;\r\n\r\n/**\r\n * Expression extractor.\r\n *\r\n * @author duhongjun\r\n */\r\npublic final class ExpressionExtractor implements OptionalSQLSegmentExtractor {\r\n\r\n    @Override\r\n    public Optional<? extends ExpressionSegment> extract(final ParserRuleContext expressionNode) {\r\n        String firstChildText = expressionNode.getText();\r\n        if (firstChildText.endsWith(Symbol.STAR.getLiterals())) {\r\n            return Optional.of(getStarExpressionSegment(expressionNode, firstChildText));\r\n        }\r\n        Optional<ParserRuleContext> subqueryNode = ExtractorUtils.findFirstChildNode(expressionNode, RuleName.SUBQUERY);\r\n        return subqueryNode.isPresent() ? new SubqueryExtractor().extract(subqueryNode.get()) : Optional.of(getExpressionWithAliasSegment(expressionNode));\r\n    }\r\n\r\n    private ExpressionSegment getStarExpressionSegment(final ParserRuleContext expressionNode, final String text) {\r\n        StarExpressionSegment result = new StarExpressionSegment(expressionNode.getStart().getStartIndex());\r\n        if (text.contains(Symbol.DOT.getLiterals())) {\r\n            result.setOwner(SQLUtil.getExactlyValue(text.substring(0, text.indexOf(Symbol.DOT.getLiterals()))));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private ExpressionWithAliasSegment getExpressionWithAliasSegment(final ParserRuleContext expressionNode) {\r\n        ExpressionWithAliasSegment result;\r\n        Optional<ParserRuleContext> functionNode = ExtractorUtils.findFirstChildNode(expressionNode, RuleName.FUNCTION_CALL);\r\n        if (functionNode.isPresent()) {\r\n            result = getFunctionExpressionSegment(expressionNode, functionNode.get());\r\n        } else if (RuleName.COLUMN_NAME.getName().equals(expressionNode.getChild(0).getClass().getSimpleName())) {\r\n            result = getPropertyExpressionSegment(expressionNode);\r\n        } else {\r\n            result = new CommonExpressionSegment(expressionNode.getStart().getStartIndex(), expressionNode.getStop().getStopIndex());\r\n        }\r\n        Optional<String> alias = getAlias(expressionNode);\r\n        if (alias.isPresent()) {\r\n            result.setAlias(alias.get());\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private ExpressionWithAliasSegment getFunctionExpressionSegment(final ParserRuleContext expressionNode, final ParserRuleContext functionNode) {\r\n        String functionName = functionNode.getChild(0).getText();\r\n        int startIndex = ((TerminalNode) functionNode.getChild(1)).getSymbol().getStartIndex();\r\n        int distinctColumnNameStartPosition = ExtractorUtils.findFirstChildNode(expressionNode, RuleName.DISTINCT).isPresent() ? calculateDistinctColumnNamePosition(functionNode) : -1;\r\n        return new FunctionExpressionSegment(functionName, functionNode.getStart().getStartIndex(), startIndex, functionNode.getStop().getStopIndex(), distinctColumnNameStartPosition);\r\n    }\r\n\r\n    private int calculateDistinctColumnNamePosition(final ParserRuleContext functionNode) {\r\n        ParseTree distinctItemNode = functionNode.getChild(3);\r\n        if (distinctItemNode instanceof TerminalNode) {\r\n            return ((TerminalNode) distinctItemNode).getSymbol().getStartIndex();\r\n        }\r\n        if (distinctItemNode instanceof ParserRuleContext) {\r\n            return ((ParserRuleContext) distinctItemNode).getStart().getStartIndex();\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    private ExpressionWithAliasSegment getPropertyExpressionSegment(final ParserRuleContext expressionNode) {\r\n        ParserRuleContext columnNode = (ParserRuleContext) expressionNode.getChild(0);\r\n        Optional<ColumnSegment> columnSegment = new ColumnSegmentExtractor(new HashMap<String, String>()).extract(columnNode);\r\n        Preconditions.checkState(columnSegment.isPresent());\r\n        return new PropertyExpressionSegment(columnSegment.get().getOwner(), columnSegment.get().getName(), columnNode.getStart().getStartIndex(), columnNode.getStop().getStopIndex());\r\n    }\r\n\r\n    private Optional<String> getAlias(final ParserRuleContext expressionNode) {\r\n        Optional<ParserRuleContext> aliasNode = ExtractorUtils.findFirstChildNode(expressionNode, RuleName.ALIAS);\r\n        return aliasNode.isPresent() ? Optional.of(SQLUtil.getExactlyValue(aliasNode.get().getText())) : Optional.absent();\r\n    }\r\n}\r\n\r\n\r\n```\r\n\r\nFromWhereExtractor .java\r\n```\r\n/*\r\n * Copyright 2016-2018 shardingsphere.io.\r\n * <p>\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * </p>\r\n */\r\n\r\npackage io.shardingsphere.core.parsing.antlr.extractor.impl;\r\n\r\nimport com.google.common.base.Optional;\r\nimport com.google.common.base.Preconditions;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.OptionalSQLSegmentExtractor;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.util.ExtractorUtils;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.util.RuleName;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.FromWhereSegment;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.condition.OrConditionSegment;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.table.TableJoinSegment;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.table.TableSegment;\r\nimport org.antlr.v4.runtime.ParserRuleContext;\r\nimport org.antlr.v4.runtime.tree.TerminalNode;\r\n\r\nimport java.util.Collection;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n/**\r\n * From clause extractor.\r\n *\r\n * @author duhongjun\r\n */\r\npublic final class FromWhereExtractor implements OptionalSQLSegmentExtractor {\r\n\r\n    private final TableNameExtractor tableNameExtractor = new TableNameExtractor();\r\n\r\n    private PredicateExtractor predicateSegmentExtractor = new PredicateExtractor();\r\n\r\n    @Override\r\n    public Optional<FromWhereSegment> extract(final ParserRuleContext ancestorNode) {\r\n        return extract(ancestorNode, ancestorNode);\r\n    }\r\n\r\n    /**\r\n     * Extract SQL segment from SQL AST.\r\n     *\r\n     * @param ancestorNode ancestor node of AST\r\n     * @param rootNode root node of AST\r\n     * @return SQL segment\r\n     */\r\n    public Optional<FromWhereSegment> extract(final ParserRuleContext ancestorNode, final ParserRuleContext rootNode) {\r\n        Optional<ParserRuleContext> selectClauseNode = ExtractorUtils.findFirstChildNode(ancestorNode, RuleName.SELECT_CLAUSE);\r\n        if (!selectClauseNode.isPresent()) {\r\n            return Optional.absent();\r\n        }\r\n        Optional<ParserRuleContext> fromNode = ExtractorUtils.findFirstChildNodeNoneRecursive(selectClauseNode.get().getParent(), RuleName.FROM_CLAUSE);\r\n        if (!fromNode.isPresent()) {\r\n            return Optional.absent();\r\n        }\r\n        Collection<ParserRuleContext> tableReferenceNodes = ExtractorUtils.getAllDescendantNodes(fromNode.get(), RuleName.TABLE_REFERENCE);\r\n        if (tableReferenceNodes.isEmpty()) {\r\n            return Optional.absent();\r\n        }\r\n        FromWhereSegment result = new FromWhereSegment();\r\n        Collection<ParserRuleContext> questionNodes = ExtractorUtils.getAllDescendantNodes(rootNode, RuleName.QUESTION);\r\n        result.setParameterCount(questionNodes.size());\r\n        Map<ParserRuleContext, Integer> questionNodeIndexMap = getPlaceholderAndNodeIndexMap(questionNodes);\r\n        extractAndFillTableSegment(result, tableReferenceNodes, questionNodeIndexMap);\r\n        extractAndFillWhere(result, questionNodeIndexMap, fromNode.get().getParent());\r\n        return Optional.of(result);\r\n    }\r\n\r\n    private Map<ParserRuleContext, Integer> getPlaceholderAndNodeIndexMap(final Collection<ParserRuleContext> questionNodes) {\r\n        Map<ParserRuleContext, Integer> result = new HashMap<>(questionNodes.size(), 1);\r\n        int index = 0;\r\n        for (ParserRuleContext each : questionNodes) {\r\n            result.put(each, index++);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private void extractAndFillTableSegment(final FromWhereSegment fromWhereSegment,\r\n                                            final Collection<ParserRuleContext> tableReferenceNodes, final Map<ParserRuleContext, Integer> questionNodeIndexMap) {\r\n        for (ParserRuleContext each : tableReferenceNodes) {\r\n            for (int i = 0; i < each.getChildCount(); i++) {\r\n                if (each.getChild(i) instanceof TerminalNode) {\r\n                    continue;\r\n                }\r\n                ParserRuleContext childNode = (ParserRuleContext) each.getChild(i);\r\n                if (RuleName.TABLE_REFERENCES.getName().equals(childNode.getClass().getSimpleName())) {\r\n                    Collection<ParserRuleContext> subTableReferenceNodes = ExtractorUtils.getAllDescendantNodes(childNode, RuleName.TABLE_REFERENCE);\r\n                    if (!subTableReferenceNodes.isEmpty()) {\r\n                        extractAndFillTableSegment(fromWhereSegment, subTableReferenceNodes, questionNodeIndexMap);\r\n                    }\r\n                    continue;\r\n                }\r\n                fillTable(fromWhereSegment, childNode, questionNodeIndexMap);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void fillTable(final FromWhereSegment fromWhereSegment, final ParserRuleContext joinOrTableFactorNode, final Map<ParserRuleContext, Integer> questionNodeIndexMap) {\r\n        if (!RuleName.JOIN_TABLE.getName().endsWith(joinOrTableFactorNode.getClass().getSimpleName())) {\r\n            Optional<TableSegment> tableSegment = tableNameExtractor.extract(joinOrTableFactorNode);\r\n            Preconditions.checkState(tableSegment.isPresent());\r\n            fillTableResult(fromWhereSegment, tableSegment.get());\r\n        }\r\n        Optional<ParserRuleContext> joinConditionNode = ExtractorUtils.findFirstChildNode(joinOrTableFactorNode, RuleName.JOIN_CONDITION);\r\n        if (!joinConditionNode.isPresent()) {\r\n            return;\r\n        }\r\n        Optional<ParserRuleContext> tableFactorNode = ExtractorUtils.findFirstChildNode(joinOrTableFactorNode, RuleName.TABLE_FACTOR);\r\n        Preconditions.checkState(tableFactorNode.isPresent());\r\n        Optional<TableSegment> tableSegment = tableNameExtractor.extract(tableFactorNode.get());\r\n        Preconditions.checkState(tableSegment.isPresent());\r\n        TableJoinSegment tableJoinResult = new TableJoinSegment(tableSegment.get());\r\n        Optional<OrConditionSegment> conditionResult = buildCondition(fromWhereSegment.getTableAliases(), joinConditionNode.get(), questionNodeIndexMap);\r\n        if (conditionResult.isPresent()) {\r\n            tableJoinResult.getJoinConditions().getAndConditions().addAll(conditionResult.get().getAndConditions());\r\n            fromWhereSegment.getConditions().getAndConditions().addAll(conditionResult.get().getAndConditions());\r\n        }\r\n        fillTableResult(fromWhereSegment, tableJoinResult);\r\n    }\r\n\r\n    private void fillTableResult(final FromWhereSegment fromWhereSegment, final TableSegment tableSegment) {\r\n        String alias = tableSegment.getName();\r\n        if (tableSegment.getAlias().isPresent()) {\r\n            alias = tableSegment.getAlias().get();\r\n        }\r\n        fromWhereSegment.getTableAliases().put(alias, tableSegment.getName());\r\n    }\r\n\r\n    private void extractAndFillWhere(final FromWhereSegment fromWhereSegment, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext ancestorNode) {\r\n        Optional<ParserRuleContext> whereNode = ExtractorUtils.findFirstChildNodeNoneRecursive(ancestorNode, RuleName.WHERE_CLAUSE);\r\n        if (!whereNode.isPresent()) {\r\n            return;\r\n        }\r\n        Optional<OrConditionSegment> conditions = buildCondition(fromWhereSegment.getTableAliases(), (ParserRuleContext) whereNode.get().getChild(1), questionNodeIndexMap);\r\n        if (conditions.isPresent()) {\r\n            fromWhereSegment.getConditions().getAndConditions().addAll(conditions.get().getAndConditions());\r\n        }\r\n    }\r\n\r\n    private Optional<OrConditionSegment> buildCondition(final Map<String, String> tableAlias, final ParserRuleContext node, final Map<ParserRuleContext, Integer> questionNodeIndexMap) {\r\n        Optional<ParserRuleContext> exprNode = ExtractorUtils.findFirstChildNode(node, RuleName.EXPR);\r\n        return exprNode.isPresent() ? predicateSegmentExtractor.extractCondition(tableAlias, questionNodeIndexMap, exprNode.get()) : Optional.absent();\r\n    }\r\n}\r\n\r\n```\r\n\r\nPredicateExtractor.java\r\n```\r\n/*\r\n * Copyright 2016-2018 shardingsphere.io.\r\n * <p>\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * </p>\r\n */\r\n\r\npackage io.shardingsphere.core.parsing.antlr.extractor.impl;\r\n\r\nimport com.google.common.base.Optional;\r\nimport com.google.common.base.Preconditions;\r\nimport io.shardingsphere.core.constant.ShardingOperator;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.OptionalSQLSegmentExtractor;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.util.ExtractorUtils;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.util.LogicalOperator;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.util.Paren;\r\nimport io.shardingsphere.core.parsing.antlr.extractor.util.RuleName;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.column.ColumnSegment;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.condition.AndConditionSegment;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.condition.ConditionSegment;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.condition.OrConditionSegment;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.condition.PredicateSegment;\r\nimport io.shardingsphere.core.parsing.antlr.sql.segment.expr.*;\r\nimport io.shardingsphere.core.parsing.lexer.token.DefaultKeyword;\r\nimport io.shardingsphere.core.parsing.lexer.token.Symbol;\r\nimport io.shardingsphere.core.util.NumberUtil;\r\nimport lombok.RequiredArgsConstructor;\r\nimport org.antlr.v4.runtime.ParserRuleContext;\r\n\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\n/**\r\n * Predicate extractor.\r\n *\r\n * @author duhongjun\r\n */\r\n@RequiredArgsConstructor\r\npublic final class PredicateExtractor implements OptionalSQLSegmentExtractor {\r\n\r\n    @Override\r\n    public Optional<PredicateSegment> extract(final ParserRuleContext ancestorNode) {\r\n        throw new RuntimeException();\r\n    }\r\n\r\n    /**\r\n     * Extract SQL segment from SQL AST.\r\n     *\r\n     * @param questionNodeIndexMap question node map\r\n     * @param exprNode             expression node of AST\r\n     * @return or condition\r\n     */\r\n    public Optional<OrConditionSegment> extractCondition(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext exprNode) {\r\n        int index = -1;\r\n        for (int i = 0; i < exprNode.getChildCount(); i++) {\r\n            if (LogicalOperator.isLogicalOperator(exprNode.getChild(i).getText())) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (index > 0) {\r\n            Optional<OrConditionSegment> leftOrCondition = extractCondition(tableAlias, questionNodeIndexMap, (ParserRuleContext) exprNode.getChild(index - 1));\r\n            Optional<OrConditionSegment> rightOrCondition = extractCondition(tableAlias, questionNodeIndexMap, (ParserRuleContext) exprNode.getChild(index + 1));\r\n            if (leftOrCondition.isPresent() && rightOrCondition.isPresent()) {\r\n                return Optional.of(mergeCondition(leftOrCondition.get(), rightOrCondition.get(), exprNode.getChild(index).getText()));\r\n            }\r\n            return leftOrCondition.isPresent() ? leftOrCondition : rightOrCondition;\r\n        }\r\n        return extractConditionForParen(tableAlias, questionNodeIndexMap, exprNode);\r\n    }\r\n\r\n    private OrConditionSegment mergeCondition(final OrConditionSegment leftOrCondition, final OrConditionSegment rightOrCondition, final String operator) {\r\n        if (LogicalOperator.isOrOperator(operator)) {\r\n            leftOrCondition.getAndConditions().addAll(rightOrCondition.getAndConditions());\r\n            return leftOrCondition;\r\n        }\r\n        OrConditionSegment result = new OrConditionSegment();\r\n        for (AndConditionSegment each : leftOrCondition.getAndConditions()) {\r\n            for (AndConditionSegment eachRightOr : rightOrCondition.getAndConditions()) {\r\n                AndConditionSegment tempList = new AndConditionSegment();\r\n                tempList.getConditions().addAll(each.getConditions());\r\n                tempList.getConditions().addAll(eachRightOr.getConditions());\r\n                result.getAndConditions().add(tempList);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private Optional<OrConditionSegment> extractConditionForParen(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext exprNode) {\r\n        int index = -1;\r\n        for (int i = 0; i < exprNode.getChildCount(); i++) {\r\n            if (Paren.isLeftParen(exprNode.getChild(i).getText())) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (-1 != index) {\r\n            Preconditions.checkState(Paren.match(exprNode.getChild(index).getText(), exprNode.getChild(index + 2).getText()), \"Missing right paren.\");\r\n            if (RuleName.EXPR.getName().equals(exprNode.getChild(index + 1).getClass().getSimpleName())) {\r\n                return extractCondition(tableAlias, questionNodeIndexMap, (ParserRuleContext) exprNode.getChild(index + 1));\r\n            }\r\n            return Optional.absent();\r\n        }\r\n        Optional<ConditionSegment> condition = buildCondition(tableAlias, questionNodeIndexMap, exprNode);\r\n        if (!condition.isPresent()) {\r\n            return Optional.absent();\r\n        }\r\n        OrConditionSegment result = new OrConditionSegment();\r\n        AndConditionSegment newAndCondition = new AndConditionSegment();\r\n        newAndCondition.getConditions().add(condition.get());\r\n        result.getAndConditions().add(newAndCondition);\r\n        return Optional.of(result);\r\n    }\r\n\r\n    private Optional<ConditionSegment> buildCondition(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext exprNode) {\r\n        Optional<ConditionSegment> result = buildEqualCondition(tableAlias, questionNodeIndexMap, exprNode);\r\n        if (result.isPresent()) {\r\n            return result;\r\n        }\r\n        return buildPredicateCondition(tableAlias, questionNodeIndexMap, exprNode);\r\n    }\r\n\r\n    private Optional<ConditionSegment> buildEqualCondition(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext exprNode) {\r\n        Optional<ParserRuleContext> comparisionNode = ExtractorUtils.findFirstChildNode(exprNode, RuleName.COMPARISON_OPERATOR);\r\n        if (!comparisionNode.isPresent() || !isValidEqualCondition(comparisionNode.get())) {\r\n            return Optional.absent();\r\n        }\r\n        Optional<ParserRuleContext> leftNode = ExtractorUtils.findFirstChildNode((ParserRuleContext) comparisionNode.get().parent.getChild(0), RuleName.COLUMN_NAME);\r\n        Optional<ParserRuleContext> rightNode = ExtractorUtils.findFirstChildNode((ParserRuleContext) comparisionNode.get().parent.getChild(2), RuleName.COLUMN_NAME);\r\n        if (!leftNode.isPresent() && !rightNode.isPresent()) {\r\n            return Optional.absent();\r\n        }\r\n        if (leftNode.isPresent() && rightNode.isPresent()) {\r\n            Optional<ColumnSegment> leftColumn = buildColumn(tableAlias, leftNode.get());\r\n            Optional<ColumnSegment> rightColumn = buildColumn(tableAlias, rightNode.get());\r\n            Preconditions.checkState(leftColumn.isPresent() && rightColumn.isPresent());\r\n            return Optional.of(new ConditionSegment(leftColumn.get(), ShardingOperator.EQUAL, rightColumn.get()));\r\n        }\r\n        Optional<ColumnSegment> column = buildColumn(tableAlias, exprNode);\r\n        Preconditions.checkState(column.isPresent());\r\n        ParserRuleContext valueNode = leftNode.isPresent() ? (ParserRuleContext) comparisionNode.get().parent.getChild(2) : (ParserRuleContext) comparisionNode.get().parent.getChild(0);\r\n        Optional<? extends ExpressionSegment> sqlExpression = buildExpression(questionNodeIndexMap, valueNode);\r\n        return sqlExpression.isPresent()\r\n                ? Optional.of(new ConditionSegment(column.get(), ShardingOperator.EQUAL, new EqualsValueExpressionSegment(sqlExpression.get()))) : Optional.absent();\r\n    }\r\n\r\n    private boolean isValidEqualCondition(final ParserRuleContext comparisionNode) {\r\n        return Symbol.EQ.getLiterals().equalsIgnoreCase(comparisionNode.getText()) && 3 == comparisionNode.getParent().getChildCount();\r\n    }\r\n\r\n    private Optional<? extends ExpressionSegment> buildExpression(final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext valueNode) {\r\n        Optional<? extends ExpressionSegment> sqlExpression = new ExpressionExtractor().extract(valueNode);\r\n        if (!sqlExpression.isPresent() || !(sqlExpression.get() instanceof CommonExpressionSegment)) {\r\n            return sqlExpression;\r\n        }\r\n        CommonExpressionSegment commonExpressionSegment = (CommonExpressionSegment) sqlExpression.get();\r\n        Optional<ParserRuleContext> expressionNode = ExtractorUtils.findFirstChildNode(valueNode, RuleName.QUESTION);\r\n        if (expressionNode.isPresent()) {\r\n            Integer index = questionNodeIndexMap.get(expressionNode.get());\r\n            commonExpressionSegment.setIndex(index);\r\n        } else {\r\n            Optional<ParserRuleContext> bitExprNode = ExtractorUtils.findFirstChildNode(valueNode, RuleName.BIT_EXPR);\r\n            expressionNode = ExtractorUtils.findFirstChildNode(valueNode, RuleName.NUMBER);\r\n            if (expressionNode.isPresent() && (!bitExprNode.isPresent() || 1 == bitExprNode.get().getChildCount())) {\r\n                commonExpressionSegment.setValue(NumberUtil.getExactlyNumber(expressionNode.get().getText(), 10));\r\n            }\r\n        }\r\n        return sqlExpression;\r\n    }\r\n\r\n    private Optional<ConditionSegment> buildPredicateCondition(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext exprNode) {\r\n        Optional<ParserRuleContext> predicateNode = ExtractorUtils.findFirstChildNode(exprNode, RuleName.PREDICATE);\r\n        if (!predicateNode.isPresent()) {\r\n            return Optional.absent();\r\n        }\r\n        if (1 != predicateNode.get().getParent().getChildCount()) {\r\n            return Optional.absent();\r\n        }\r\n        if (5 == predicateNode.get().getChildCount() && DefaultKeyword.BETWEEN.name().equalsIgnoreCase(predicateNode.get().getChild(1).getText())) {\r\n            Optional<ConditionSegment> result = buildBetweenCondition(tableAlias, questionNodeIndexMap, predicateNode.get());\r\n            if (result.isPresent()) {\r\n                return result;\r\n            }\r\n        }\r\n        if (5 <= predicateNode.get().getChildCount() && DefaultKeyword.IN.name().equalsIgnoreCase(predicateNode.get().getChild(1).getText())) {\r\n            Optional<ConditionSegment> result = buildInCondition(tableAlias, questionNodeIndexMap, predicateNode.get());\r\n            if (result.isPresent()) {\r\n                return result;\r\n            }\r\n        }\r\n        return Optional.absent();\r\n    }\r\n\r\n    private Optional<ConditionSegment> buildBetweenCondition(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext predicateNode) {\r\n        Optional<ColumnSegment> column = buildColumn(tableAlias, (ParserRuleContext) predicateNode.getChild(0));\r\n        if (!column.isPresent()) {\r\n            return Optional.absent();\r\n        }\r\n        Optional<? extends ExpressionSegment> beginSQLExpression = buildExpression(questionNodeIndexMap, (ParserRuleContext) predicateNode.getChild(2));\r\n        Optional<? extends ExpressionSegment> endSQLExpression = buildExpression(questionNodeIndexMap, (ParserRuleContext) predicateNode.getChild(4));\r\n        if (beginSQLExpression.isPresent() && endSQLExpression.isPresent()) {\r\n            return Optional.of(new ConditionSegment(column.get(), ShardingOperator.BETWEEN, new BetweenValueExpressionSegment(beginSQLExpression.get(), endSQLExpression.get())));\r\n        }\r\n        return Optional.absent();\r\n    }\r\n\r\n    private Optional<ConditionSegment> buildInCondition(final Map<String, String> tableAlias, final Map<ParserRuleContext, Integer> questionNodeIndexMap, final ParserRuleContext predicateNode) {\r\n        Optional<ColumnSegment> column = buildColumn(tableAlias, (ParserRuleContext) predicateNode.getChild(0));\r\n        if (!column.isPresent()) {\r\n            return Optional.absent();\r\n        }\r\n        List<ExpressionSegment> sqlExpressions = new LinkedList<>();\r\n        for (int i = 3; i < predicateNode.getChildCount(); i++) {\r\n            if (RuleName.SIMPLE_EXPR.getName().equals(predicateNode.getChild(i).getClass().getSimpleName())) {\r\n                Optional<? extends ExpressionSegment> expression = buildExpression(questionNodeIndexMap, (ParserRuleContext) predicateNode.getChild(i));\r\n                if (!expression.isPresent()) {\r\n                    sqlExpressions.clear();\r\n                    break;\r\n                }\r\n                sqlExpressions.add(expression.get());\r\n            }\r\n        }\r\n        if (!sqlExpressions.isEmpty()) {\r\n            InValueExpressionSegment inExpressionSegment = new InValueExpressionSegment();\r\n            inExpressionSegment.getSqlExpressions().addAll(sqlExpressions);\r\n            return Optional.of(new ConditionSegment(column.get(), ShardingOperator.IN, inExpressionSegment));\r\n        }\r\n        return Optional.absent();\r\n    }\r\n\r\n    private Optional<ColumnSegment> buildColumn(final Map<String, String> tableAlias, final ParserRuleContext parentNode) {\r\n        return new ColumnSegmentExtractor(tableAlias).extract(parentNode);\r\n    }\r\n}\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470417826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470421105","html_url":"https://github.com/apache/shardingsphere/issues/1385#issuecomment-470421105","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1385","id":470421105,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQyMTEwNQ==","user":{"login":"KomachiSion","id":37170243,"node_id":"MDQ6VXNlcjM3MTcwMjQz","avatar_url":"https://avatars.githubusercontent.com/u/37170243?v=4","gravatar_id":"","url":"https://api.github.com/users/KomachiSion","html_url":"https://github.com/KomachiSion","followers_url":"https://api.github.com/users/KomachiSion/followers","following_url":"https://api.github.com/users/KomachiSion/following{/other_user}","gists_url":"https://api.github.com/users/KomachiSion/gists{/gist_id}","starred_url":"https://api.github.com/users/KomachiSion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KomachiSion/subscriptions","organizations_url":"https://api.github.com/users/KomachiSion/orgs","repos_url":"https://api.github.com/users/KomachiSion/repos","events_url":"https://api.github.com/users/KomachiSion/events{/privacy}","received_events_url":"https://api.github.com/users/KomachiSion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T07:47:12Z","updated_at":"2019-03-07T07:47:12Z","author_association":"MEMBER","body":"refer to #1774 .","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470421105/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470428997","html_url":"https://github.com/apache/shardingsphere/issues/1979#issuecomment-470428997","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1979","id":470428997,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQyODk5Nw==","user":{"login":"KomachiSion","id":37170243,"node_id":"MDQ6VXNlcjM3MTcwMjQz","avatar_url":"https://avatars.githubusercontent.com/u/37170243?v=4","gravatar_id":"","url":"https://api.github.com/users/KomachiSion","html_url":"https://github.com/KomachiSion","followers_url":"https://api.github.com/users/KomachiSion/followers","following_url":"https://api.github.com/users/KomachiSion/following{/other_user}","gists_url":"https://api.github.com/users/KomachiSion/gists{/gist_id}","starred_url":"https://api.github.com/users/KomachiSion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KomachiSion/subscriptions","organizations_url":"https://api.github.com/users/KomachiSion/orgs","repos_url":"https://api.github.com/users/KomachiSion/repos","events_url":"https://api.github.com/users/KomachiSion/events{/privacy}","received_events_url":"https://api.github.com/users/KomachiSion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T08:16:45Z","updated_at":"2019-03-07T08:23:43Z","author_association":"MEMBER","body":"@cocoyadi , I find that your configuration didn't set the actual dataNodes. It might cause shardingsphere do cartesian route.\r\n\r\nI suggest you add `TableRuleConfig.setActualDataNodes(\"database_0.table_${000...250},database_1.table_${251...500}\")` in `getContentTableRuleConfiguration` method then retry.","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470428997/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470429387","html_url":"https://github.com/apache/shardingsphere/issues/1980#issuecomment-470429387","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1980","id":470429387,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQyOTM4Nw==","user":{"login":"wayne0zhang","id":16120313,"node_id":"MDQ6VXNlcjE2MTIwMzEz","avatar_url":"https://avatars.githubusercontent.com/u/16120313?v=4","gravatar_id":"","url":"https://api.github.com/users/wayne0zhang","html_url":"https://github.com/wayne0zhang","followers_url":"https://api.github.com/users/wayne0zhang/followers","following_url":"https://api.github.com/users/wayne0zhang/following{/other_user}","gists_url":"https://api.github.com/users/wayne0zhang/gists{/gist_id}","starred_url":"https://api.github.com/users/wayne0zhang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wayne0zhang/subscriptions","organizations_url":"https://api.github.com/users/wayne0zhang/orgs","repos_url":"https://api.github.com/users/wayne0zhang/repos","events_url":"https://api.github.com/users/wayne0zhang/events{/privacy}","received_events_url":"https://api.github.com/users/wayne0zhang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T08:18:18Z","updated_at":"2019-03-07T08:18:18Z","author_association":"NONE","body":"> @wayne0zhang which version do you use?\r\n> In latest version, i.e.,4.0.0.M1-SNAPSHOT,\r\n> \r\n> ```\r\n> package org.apache.shardingsphere.core.routing.type.standard;\r\n> \r\n> private List<RouteValue> getTableShardingValuesFromHint() {\r\n>         return getRouteValues(HintManagerHolder.getTableShardingValues(logicTableName));\r\n>     }\r\n> ```\r\n> We get shardingValues from HintManagerHolder, where user puts shardingValues. And then we will pass shardingValues to doSharding() in HintShardingAlgorithm, and calculate the target tables by calling doSharding() in HintShardingAlgorithm.\r\n> \r\n> _**Therefore, shardingColumns in HintShardingStrategy will not be used, but doSharding() in HintShardingAlgorithm will be called anyway.**_\r\n\r\nok ,i got it. you fixed it in the later version. but we can not get it from maven .\r\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470429387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470433740","html_url":"https://github.com/apache/shardingsphere/pull/1988#issuecomment-470433740","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1988","id":470433740,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQzMzc0MA==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T08:33:33Z","updated_at":"2019-03-07T08:33:33Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6987](https://coveralls.io/builds/22038776)\n\n* **11** of **28**   **(39.29%)**  changed or added relevant lines in **7** files are covered.\n* No unchanged relevant lines lost coverage.\n* Overall coverage increased (+**0.01%**) to **71.119%**\n\n---\n\n|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |\n| :-----|--------------|--------|---: |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/extractor/impl/dql/SubqueryExtractor.java](https://coveralls.io/builds/22038776/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Fextractor%2Fimpl%2Fdql%2FSubqueryExtractor.java#L58) | 0 | 1 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/encrypt/segment/impl/EncryptOrConditionFiller.java](https://coveralls.io/builds/22038776/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fencrypt%2Fsegment%2Fimpl%2FEncryptOrConditionFiller.java#L105) | 0 | 1 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/segment/impl/OrConditionFiller.java](https://coveralls.io/builds/22038776/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fsharding%2Fsegment%2Fimpl%2FOrConditionFiller.java#L167) | 0 | 1 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/extractor/impl/expression/ExpressionExtractor.java](https://coveralls.io/builds/22038776/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Fextractor%2Fimpl%2Fexpression%2FExpressionExtractor.java#L77) | 0 | 2 | 0.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/statement/impl/dml/UpdateSetWhereFiller.java](https://coveralls.io/builds/22038776/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fsharding%2Fstatement%2Fimpl%2Fdml%2FUpdateSetWhereFiller.java#L66) | 4 | 8 | 50.0%\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/encrypt/segment/impl/EncryptUpdateSetWhereFiller.java](https://coveralls.io/builds/22038776/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fencrypt%2Fsegment%2Fimpl%2FEncryptUpdateSetWhereFiller.java#L50) | 0 | 8 | 0.0%\n<!-- | **Total:** | **11** | **28** | **39.29%** | -->\n\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/22038776/badge)](https://coveralls.io/builds/22038776) |\n| :-- | --: |\n| Change from base [Build 6986](https://coveralls.io/builds/22038464): |  0.01% |\n| Covered Lines: | 11308 |\n| Relevant Lines: | 15900 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470433740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470435894","html_url":"https://github.com/apache/shardingsphere/issues/1989#issuecomment-470435894","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1989","id":470435894,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQzNTg5NA==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T08:40:37Z","updated_at":"2019-03-07T08:40:37Z","author_association":"MEMBER","body":"Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470435894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470438748","html_url":"https://github.com/apache/shardingsphere/issues/1991#issuecomment-470438748","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1991","id":470438748,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQzODc0OA==","user":{"login":"maxiaoxian","id":2852394,"node_id":"MDQ6VXNlcjI4NTIzOTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2852394?v=4","gravatar_id":"","url":"https://api.github.com/users/maxiaoxian","html_url":"https://github.com/maxiaoxian","followers_url":"https://api.github.com/users/maxiaoxian/followers","following_url":"https://api.github.com/users/maxiaoxian/following{/other_user}","gists_url":"https://api.github.com/users/maxiaoxian/gists{/gist_id}","starred_url":"https://api.github.com/users/maxiaoxian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maxiaoxian/subscriptions","organizations_url":"https://api.github.com/users/maxiaoxian/orgs","repos_url":"https://api.github.com/users/maxiaoxian/repos","events_url":"https://api.github.com/users/maxiaoxian/events{/privacy}","received_events_url":"https://api.github.com/users/maxiaoxian/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T08:50:17Z","updated_at":"2019-03-07T08:50:17Z","author_association":"NONE","body":"Caused by: java.lang.NullPointerException\r\n\tat io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:139)\r\n\tat sun.reflect.GeneratedMethodAccessor187.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)\r\n\tat com.sun.proxy.$Proxy133.execute(Unknown Source)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\r\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\r\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\r\n\tat com.sun.proxy.$Proxy131.update(Unknown Source)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\r\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470438748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470441893","html_url":"https://github.com/apache/shardingsphere/issues/1990#issuecomment-470441893","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1990","id":470441893,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQ0MTg5Mw==","user":{"login":"mfeng-ya","id":42688346,"node_id":"MDQ6VXNlcjQyNjg4MzQ2","avatar_url":"https://avatars.githubusercontent.com/u/42688346?v=4","gravatar_id":"","url":"https://api.github.com/users/mfeng-ya","html_url":"https://github.com/mfeng-ya","followers_url":"https://api.github.com/users/mfeng-ya/followers","following_url":"https://api.github.com/users/mfeng-ya/following{/other_user}","gists_url":"https://api.github.com/users/mfeng-ya/gists{/gist_id}","starred_url":"https://api.github.com/users/mfeng-ya/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mfeng-ya/subscriptions","organizations_url":"https://api.github.com/users/mfeng-ya/orgs","repos_url":"https://api.github.com/users/mfeng-ya/repos","events_url":"https://api.github.com/users/mfeng-ya/events{/privacy}","received_events_url":"https://api.github.com/users/mfeng-ya/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T09:00:36Z","updated_at":"2019-03-07T09:00:36Z","author_association":"NONE","body":"Which version is stable and usable now? ","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470441893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470448875","html_url":"https://github.com/apache/shardingsphere/issues/1993#issuecomment-470448875","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1993","id":470448875,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQ0ODg3NQ==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T09:22:11Z","updated_at":"2019-03-07T09:22:11Z","author_association":"MEMBER","body":"No, sharding strategy cannot exist together","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470448875/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470453168","html_url":"https://github.com/apache/shardingsphere/issues/1991#issuecomment-470453168","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1991","id":470453168,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQ1MzE2OA==","user":{"login":"tristaZero","id":27757146,"node_id":"MDQ6VXNlcjI3NzU3MTQ2","avatar_url":"https://avatars.githubusercontent.com/u/27757146?v=4","gravatar_id":"","url":"https://api.github.com/users/tristaZero","html_url":"https://github.com/tristaZero","followers_url":"https://api.github.com/users/tristaZero/followers","following_url":"https://api.github.com/users/tristaZero/following{/other_user}","gists_url":"https://api.github.com/users/tristaZero/gists{/gist_id}","starred_url":"https://api.github.com/users/tristaZero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tristaZero/subscriptions","organizations_url":"https://api.github.com/users/tristaZero/orgs","repos_url":"https://api.github.com/users/tristaZero/repos","events_url":"https://api.github.com/users/tristaZero/events{/privacy}","received_events_url":"https://api.github.com/users/tristaZero/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T09:34:54Z","updated_at":"2019-03-07T09:34:54Z","author_association":"CONTRIBUTOR","body":"Please support configuration file, and your core JAVA source code that can show\r\nhow you use PreparedStatement.addBatch() and PreparedStatement.executeBatch()","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470453168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470456562","html_url":"https://github.com/apache/shardingsphere/pull/1992#issuecomment-470456562","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1992","id":470456562,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQ1NjU2Mg==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T09:44:39Z","updated_at":"2019-03-07T09:44:39Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6990](https://coveralls.io/builds/22039865)\n\n* **0** of **0**   changed or added relevant lines in **0** files are covered.\n* **9** unchanged lines in **3** files lost coverage.\n* Overall coverage increased (+**0.09%**) to **71.217%**\n\n---\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/statement/impl/dml/UpdateSetWhereFiller.java](https://coveralls.io/builds/22039865/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fsharding%2Fstatement%2Fimpl%2Fdml%2FUpdateSetWhereFiller.java#L63) | 1 | 90.0% |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/encrypt/segment/impl/EncryptUpdateSetWhereFiller.java](https://coveralls.io/builds/22039865/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fencrypt%2Fsegment%2Fimpl%2FEncryptUpdateSetWhereFiller.java#L60) | 1 | 0.0% |\n| [sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/datasource/JDBCBackendDataSource.java](https://coveralls.io/builds/22039865/source?filename=sharding-proxy%2Fsharding-proxy-backend%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fshardingproxy%2Fbackend%2Fcommunication%2Fjdbc%2Fdatasource%2FJDBCBackendDataSource.java#L70) | 7 | 64.0% |\n<!-- | **Total:** | **9** |  | -->\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/22039865/badge)](https://coveralls.io/builds/22039865) |\n| :-- | --: |\n| Change from base [Build 6989](https://coveralls.io/builds/22039473): |  0.09% |\n| Covered Lines: | 11315 |\n| Relevant Lines: | 15888 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470456562/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470459415","html_url":"https://github.com/apache/shardingsphere/issues/1991#issuecomment-470459415","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1991","id":470459415,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQ1OTQxNQ==","user":{"login":"maxiaoxian","id":2852394,"node_id":"MDQ6VXNlcjI4NTIzOTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2852394?v=4","gravatar_id":"","url":"https://api.github.com/users/maxiaoxian","html_url":"https://github.com/maxiaoxian","followers_url":"https://api.github.com/users/maxiaoxian/followers","following_url":"https://api.github.com/users/maxiaoxian/following{/other_user}","gists_url":"https://api.github.com/users/maxiaoxian/gists{/gist_id}","starred_url":"https://api.github.com/users/maxiaoxian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maxiaoxian/subscriptions","organizations_url":"https://api.github.com/users/maxiaoxian/orgs","repos_url":"https://api.github.com/users/maxiaoxian/repos","events_url":"https://api.github.com/users/maxiaoxian/events{/privacy}","received_events_url":"https://api.github.com/users/maxiaoxian/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T09:53:07Z","updated_at":"2019-03-07T09:53:07Z","author_association":"NONE","body":" @Bean(name = \"shardingDataSource\")\r\n    @Primary\r\n    public DataSource getShardingDataSource() throws SQLException {\r\n        // 读写分离配置\r\n        MasterSlaveRuleConfiguration masterSlaveRuleConfig =\r\n                new MasterSlaveRuleConfiguration(\"ds\", \"fcWriteDataSource\", Arrays.asList(\"fcRead1DataSource\", \"fcRead2DataSource\"), MasterSlaveLoadBalanceAlgorithmType.getDefaultAlgorithmType().getAlgorithm());\r\n\r\n        Set<MasterSlaveRuleConfiguration> masterSlaveRuleConfigurationSet = new HashSet<>();\r\n        masterSlaveRuleConfigurationSet.add(masterSlaveRuleConfig);\r\n\r\n        ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\r\n        shardingRuleConfig.setMasterSlaveRuleConfigs(masterSlaveRuleConfigurationSet);\r\n\r\n        // 分表规则配置\r\n        TableRuleConfiguration f_order_report = getTableRule(\"f_order_report\", \"ds.f_order_report_${['123','432']}\", \"ou_id\");\r\n        TableRuleConfiguration f_order_business_model = getTableRule(\"f_order_business_model\", \"ds.f_order_business_model_${['123','432']}\", \"ou_id\");\r\n        shardingRuleConfig.getTableRuleConfigs().add(f_order_report);\r\n        shardingRuleConfig.getTableRuleConfigs().add(f_order_business_model);\r\n\r\n        // 默认分表策略设置\r\n//        shardingRuleConfig.setDefaultTableShardingStrategyConfig(\r\n//                new StandardShardingStrategyConfiguration(\"none\",\r\n//                        new NoneDatabaseShardingAlgorithm()));\r\n        shardingRuleConfig.setDefaultTableShardingStrategyConfig(new NoneShardingStrategyConfiguration());\r\n        // 设置默认数据库，解决只有部分表需要分表的问题\r\n        shardingRuleConfig.setDefaultDataSourceName(\"fcWriteDataSource\");\r\n        Map<String, Object> configMap = new HashMap<>();\r\n        return ShardingDataSourceFactory.createDataSource(createDataSourceMap(), shardingRuleConfig, configMap, new Properties());\r\n    }","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470459415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470459858","html_url":"https://github.com/apache/shardingsphere/issues/1991#issuecomment-470459858","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1991","id":470459858,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQ1OTg1OA==","user":{"login":"maxiaoxian","id":2852394,"node_id":"MDQ6VXNlcjI4NTIzOTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2852394?v=4","gravatar_id":"","url":"https://api.github.com/users/maxiaoxian","html_url":"https://github.com/maxiaoxian","followers_url":"https://api.github.com/users/maxiaoxian/followers","following_url":"https://api.github.com/users/maxiaoxian/following{/other_user}","gists_url":"https://api.github.com/users/maxiaoxian/gists{/gist_id}","starred_url":"https://api.github.com/users/maxiaoxian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maxiaoxian/subscriptions","organizations_url":"https://api.github.com/users/maxiaoxian/orgs","repos_url":"https://api.github.com/users/maxiaoxian/repos","events_url":"https://api.github.com/users/maxiaoxian/events{/privacy}","received_events_url":"https://api.github.com/users/maxiaoxian/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T09:54:19Z","updated_at":"2019-03-07T09:54:19Z","author_association":"NONE","body":"<insert id=\"insertBatch\" parameterType=\"map\">\r\n        insert into f_order_business_model (\r\n        <include refid=\"Base_Column_List\"/>\r\n        )\r\n        values (\r\n        <foreach collection=\"list\" item=\"item\" index=\"index\" close=\"\" separator=\"),(\">\r\n             #{item.orderId,jdbcType=BIGINT}   , ....\r\n        </foreach>\r\n        )","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470459858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470461252","html_url":"https://github.com/apache/shardingsphere/issues/1990#issuecomment-470461252","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1990","id":470461252,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQ2MTI1Mg==","user":{"login":"mfeng-ya","id":42688346,"node_id":"MDQ6VXNlcjQyNjg4MzQ2","avatar_url":"https://avatars.githubusercontent.com/u/42688346?v=4","gravatar_id":"","url":"https://api.github.com/users/mfeng-ya","html_url":"https://github.com/mfeng-ya","followers_url":"https://api.github.com/users/mfeng-ya/followers","following_url":"https://api.github.com/users/mfeng-ya/following{/other_user}","gists_url":"https://api.github.com/users/mfeng-ya/gists{/gist_id}","starred_url":"https://api.github.com/users/mfeng-ya/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mfeng-ya/subscriptions","organizations_url":"https://api.github.com/users/mfeng-ya/orgs","repos_url":"https://api.github.com/users/mfeng-ya/repos","events_url":"https://api.github.com/users/mfeng-ya/events{/privacy}","received_events_url":"https://api.github.com/users/mfeng-ya/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T09:58:09Z","updated_at":"2019-03-07T10:03:31Z","author_association":"NONE","body":"new question\r\nShardingRule i think is singleton\r\n![image](https://user-images.githubusercontent.com/42688346/53948569-14babb00-4103-11e9-8695-60e18146d992.png)\r\n![image](https://user-images.githubusercontent.com/42688346/53947909-afb29580-4101-11e9-8e73-20552c538e25.png)\r\norg.apache.commons.collections4.map.ReferenceMap is not thread-safe, cache used with it no problem in multi thread concurrent?\r\n![image](https://user-images.githubusercontent.com/42688346/53948327-847c7600-4102-11e9-9030-b5a5b7bfaf38.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470461252/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470472631","html_url":"https://github.com/apache/shardingsphere/issues/1990#issuecomment-470472631","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1990","id":470472631,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQ3MjYzMQ==","user":{"login":"mfeng-ya","id":42688346,"node_id":"MDQ6VXNlcjQyNjg4MzQ2","avatar_url":"https://avatars.githubusercontent.com/u/42688346?v=4","gravatar_id":"","url":"https://api.github.com/users/mfeng-ya","html_url":"https://github.com/mfeng-ya","followers_url":"https://api.github.com/users/mfeng-ya/followers","following_url":"https://api.github.com/users/mfeng-ya/following{/other_user}","gists_url":"https://api.github.com/users/mfeng-ya/gists{/gist_id}","starred_url":"https://api.github.com/users/mfeng-ya/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mfeng-ya/subscriptions","organizations_url":"https://api.github.com/users/mfeng-ya/orgs","repos_url":"https://api.github.com/users/mfeng-ya/repos","events_url":"https://api.github.com/users/mfeng-ya/events{/privacy}","received_events_url":"https://api.github.com/users/mfeng-ya/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T10:30:44Z","updated_at":"2019-03-07T10:30:44Z","author_association":"NONE","body":"Could change  field 'parsingResultCache' to #ThreadLocal in #ShardingRule?","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470472631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470487381","html_url":"https://github.com/apache/shardingsphere/pull/1994#issuecomment-470487381","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1994","id":470487381,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQ4NzM4MQ==","user":{"login":"coveralls","id":2354108,"node_id":"MDQ6VXNlcjIzNTQxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2354108?v=4","gravatar_id":"","url":"https://api.github.com/users/coveralls","html_url":"https://github.com/coveralls","followers_url":"https://api.github.com/users/coveralls/followers","following_url":"https://api.github.com/users/coveralls/following{/other_user}","gists_url":"https://api.github.com/users/coveralls/gists{/gist_id}","starred_url":"https://api.github.com/users/coveralls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coveralls/subscriptions","organizations_url":"https://api.github.com/users/coveralls/orgs","repos_url":"https://api.github.com/users/coveralls/repos","events_url":"https://api.github.com/users/coveralls/events{/privacy}","received_events_url":"https://api.github.com/users/coveralls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T11:15:43Z","updated_at":"2019-03-07T11:15:43Z","author_association":"NONE","body":"## Pull Request Test Coverage Report for [Build 6994](https://coveralls.io/builds/22041513)\n\n* **4** of **4**   **(100.0%)**  changed or added relevant lines in **1** file are covered.\n* **8** unchanged lines in **2** files lost coverage.\n* Overall coverage increased (+**0.05%**) to **71.221%**\n\n---\n\n\n|  Files with Coverage Reduction | New Missed Lines | % |\n| :-----|--------------|--: |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/sharding/statement/impl/dml/UpdateSetWhereFiller.java](https://coveralls.io/builds/22041513/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fsharding%2Fstatement%2Fimpl%2Fdml%2FUpdateSetWhereFiller.java#L63) | 2 | 90.0% |\n| [sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/encrypt/segment/impl/EncryptUpdateSetWhereFiller.java](https://coveralls.io/builds/22041513/source?filename=sharding-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fshardingsphere%2Fcore%2Fparsing%2Fantlr%2Ffiller%2Fencrypt%2Fsegment%2Fimpl%2FEncryptUpdateSetWhereFiller.java#L39) | 6 | 0.0% |\n<!-- | **Total:** | **8** |  | -->\n\n|  Totals | [![Coverage Status](https://coveralls.io/builds/22041513/badge)](https://coveralls.io/builds/22041513) |\n| :-- | --: |\n| Change from base [Build 6991](https://coveralls.io/builds/22040272): |  0.05% |\n| Covered Lines: | 11317 |\n| Relevant Lines: | 15890 |\n\n---\n##### 💛  - [Coveralls](https://coveralls.io)\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470487381/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470492478","html_url":"https://github.com/apache/shardingsphere/issues/1996#issuecomment-470492478","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1996","id":470492478,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDQ5MjQ3OA==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-07T11:34:29Z","updated_at":"2019-03-07T11:34:29Z","author_association":"MEMBER","body":"duplicate with #1764","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470492478/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470771297","html_url":"https://github.com/apache/shardingsphere/issues/1997#issuecomment-470771297","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1997","id":470771297,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDc3MTI5Nw==","user":{"login":"terrymanu","id":5516298,"node_id":"MDQ6VXNlcjU1MTYyOTg=","avatar_url":"https://avatars.githubusercontent.com/u/5516298?v=4","gravatar_id":"","url":"https://api.github.com/users/terrymanu","html_url":"https://github.com/terrymanu","followers_url":"https://api.github.com/users/terrymanu/followers","following_url":"https://api.github.com/users/terrymanu/following{/other_user}","gists_url":"https://api.github.com/users/terrymanu/gists{/gist_id}","starred_url":"https://api.github.com/users/terrymanu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terrymanu/subscriptions","organizations_url":"https://api.github.com/users/terrymanu/orgs","repos_url":"https://api.github.com/users/terrymanu/repos","events_url":"https://api.github.com/users/terrymanu/events{/privacy}","received_events_url":"https://api.github.com/users/terrymanu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-08T01:42:09Z","updated_at":"2019-03-08T01:42:09Z","author_association":"MEMBER","body":"I don't want define one time query for database, sharing-jdbc is jdbc extension and sharding-proxy is database  extension.\r\nDefine a new concept need more discuss. \r\nWe prefer don't add new behaviour by default.\r\nFor batch job or some business query, the better way is dev this logic to business codes, not at ShardingSphere. We should keep ShardingSphere clear","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470771297/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470774537","html_url":"https://github.com/apache/shardingsphere/issues/1997#issuecomment-470774537","issue_url":"https://api.github.com/repos/apache/shardingsphere/issues/1997","id":470774537,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3MDc3NDUzNw==","user":{"login":"wy-coder","id":11376195,"node_id":"MDQ6VXNlcjExMzc2MTk1","avatar_url":"https://avatars.githubusercontent.com/u/11376195?v=4","gravatar_id":"","url":"https://api.github.com/users/wy-coder","html_url":"https://github.com/wy-coder","followers_url":"https://api.github.com/users/wy-coder/followers","following_url":"https://api.github.com/users/wy-coder/following{/other_user}","gists_url":"https://api.github.com/users/wy-coder/gists{/gist_id}","starred_url":"https://api.github.com/users/wy-coder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wy-coder/subscriptions","organizations_url":"https://api.github.com/users/wy-coder/orgs","repos_url":"https://api.github.com/users/wy-coder/repos","events_url":"https://api.github.com/users/wy-coder/events{/privacy}","received_events_url":"https://api.github.com/users/wy-coder/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-08T01:58:25Z","updated_at":"2019-03-08T02:05:59Z","author_association":"NONE","body":"That is to say：\r\n\r\nAll jdbc supports full table **no sort paging** scanning , but sahrding-jdbc does not.\r\n\r\nif do not support force route to a specify database, how to do full table **no sort paging**?\r\n\r\nlimit 200 300\r\n\r\ndb1 : limit 0 300\r\ndb2 : limit 0 300\r\ndb3 : limit 0 300\r\nassemble and sort 0 900\r\n\r\nlimit 200 300 from 0 900\r\nThis is not efficient.\r\n\r\nwe need:\r\nnode1 : db1 : limit 0 100\r\nnode2 : db1 : limit 100 200\r\nnode3 : db1 : limit 200 300\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/shardingsphere/issues/comments/470774537/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"performed_via_github_app":null}]