[{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1123112460","html_url":"https://github.com/apache/brpc/issues/1401#issuecomment-1123112460","issue_url":"https://api.github.com/repos/apache/brpc/issues/1401","id":1123112460,"node_id":"IC_kwDOBhmkcs5C8VYM","user":{"login":"changchengx","id":19362263,"node_id":"MDQ6VXNlcjE5MzYyMjYz","avatar_url":"https://avatars.githubusercontent.com/u/19362263?v=4","gravatar_id":"","url":"https://api.github.com/users/changchengx","html_url":"https://github.com/changchengx","followers_url":"https://api.github.com/users/changchengx/followers","following_url":"https://api.github.com/users/changchengx/following{/other_user}","gists_url":"https://api.github.com/users/changchengx/gists{/gist_id}","starred_url":"https://api.github.com/users/changchengx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/changchengx/subscriptions","organizations_url":"https://api.github.com/users/changchengx/orgs","repos_url":"https://api.github.com/users/changchengx/repos","events_url":"https://api.github.com/users/changchengx/events{/privacy}","received_events_url":"https://api.github.com/users/changchengx/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-11T02:28:55Z","updated_at":"2022-05-11T02:28:55Z","author_association":"NONE","body":"@wwbmmm \r\nI tested the RoCE LAG device with below command and it could work\r\n```\r\n[307 /brpc/example/rdma_performance/]$ ./perf_server --rdma_device mlx5_bond_1\r\n[306 /brpc/example/rdma_performance/]$ ./perf_client --rdma_device mlx5_bond_1 --servers=192.168.30.7:8002 --attachment_size=1024 --thread_num=10\r\n```\r\nAccording to the experiment's result, brpc doesn't support multi rdma devices, so it need to specify which device should be used with the option ```--rdma_device```.\r\n\r\n**brpc supports RoCE LAG device, right?**","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1123112460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1123133177","html_url":"https://github.com/apache/brpc/issues/1401#issuecomment-1123133177","issue_url":"https://api.github.com/repos/apache/brpc/issues/1401","id":1123133177,"node_id":"IC_kwDOBhmkcs5C8ab5","user":{"login":"Tuvie","id":5780312,"node_id":"MDQ6VXNlcjU3ODAzMTI=","avatar_url":"https://avatars.githubusercontent.com/u/5780312?v=4","gravatar_id":"","url":"https://api.github.com/users/Tuvie","html_url":"https://github.com/Tuvie","followers_url":"https://api.github.com/users/Tuvie/followers","following_url":"https://api.github.com/users/Tuvie/following{/other_user}","gists_url":"https://api.github.com/users/Tuvie/gists{/gist_id}","starred_url":"https://api.github.com/users/Tuvie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tuvie/subscriptions","organizations_url":"https://api.github.com/users/Tuvie/orgs","repos_url":"https://api.github.com/users/Tuvie/repos","events_url":"https://api.github.com/users/Tuvie/events{/privacy}","received_events_url":"https://api.github.com/users/Tuvie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-11T03:11:21Z","updated_at":"2022-05-11T03:11:21Z","author_association":"CONTRIBUTOR","body":"@changchengx \r\nYes, brpc can support RoCE LAG device. But brpc does not support multi rdma devices without LAG.","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1123133177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1123136541","html_url":"https://github.com/apache/brpc/issues/1401#issuecomment-1123136541","issue_url":"https://api.github.com/repos/apache/brpc/issues/1401","id":1123136541,"node_id":"IC_kwDOBhmkcs5C8bQd","user":{"login":"changchengx","id":19362263,"node_id":"MDQ6VXNlcjE5MzYyMjYz","avatar_url":"https://avatars.githubusercontent.com/u/19362263?v=4","gravatar_id":"","url":"https://api.github.com/users/changchengx","html_url":"https://github.com/changchengx","followers_url":"https://api.github.com/users/changchengx/followers","following_url":"https://api.github.com/users/changchengx/following{/other_user}","gists_url":"https://api.github.com/users/changchengx/gists{/gist_id}","starred_url":"https://api.github.com/users/changchengx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/changchengx/subscriptions","organizations_url":"https://api.github.com/users/changchengx/orgs","repos_url":"https://api.github.com/users/changchengx/repos","events_url":"https://api.github.com/users/changchengx/events{/privacy}","received_events_url":"https://api.github.com/users/changchengx/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-11T03:18:15Z","updated_at":"2022-05-11T03:18:15Z","author_association":"NONE","body":"@Tuvie \r\nGot it. Thanks","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1123136541/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125593116","html_url":"https://github.com/apache/brpc/issues/1718#issuecomment-1125593116","issue_url":"https://api.github.com/repos/apache/brpc/issues/1718","id":1125593116,"node_id":"IC_kwDOBhmkcs5DFzAc","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T02:22:39Z","updated_at":"2022-05-13T02:22:39Z","author_association":"CONTRIBUTOR","body":"这个堆栈是错乱的，是不是core和bin的版本没对上？","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125593116/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125599463","html_url":"https://github.com/apache/brpc/issues/1572#issuecomment-1125599463","issue_url":"https://api.github.com/repos/apache/brpc/issues/1572","id":1125599463,"node_id":"IC_kwDOBhmkcs5DF0jn","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T02:36:39Z","updated_at":"2022-05-13T02:36:39Z","author_association":"CONTRIBUTOR","body":"DynamicPartitionChannel要求每个分库至少要有一个可用实例才能提供服务","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125599463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125603101","html_url":"https://github.com/apache/brpc/issues/1513#issuecomment-1125603101","issue_url":"https://api.github.com/repos/apache/brpc/issues/1513","id":1125603101,"node_id":"IC_kwDOBhmkcs5DF1cd","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T02:45:32Z","updated_at":"2022-05-13T02:45:32Z","author_association":"CONTRIBUTOR","body":"设置为2可能会导致brpc无法正常工作（在开启SSL的情况下，存在两个会阻塞pthread的epoll线程）","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125603101/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125603672","html_url":"https://github.com/apache/brpc/issues/1512#issuecomment-1125603672","issue_url":"https://api.github.com/repos/apache/brpc/issues/1512","id":1125603672,"node_id":"IC_kwDOBhmkcs5DF1lY","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T02:47:02Z","updated_at":"2022-05-13T02:47:02Z","author_association":"CONTRIBUTOR","body":"Related issue: #1595","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125603672/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125637917","html_url":"https://github.com/apache/brpc/issues/1511#issuecomment-1125637917","issue_url":"https://api.github.com/repos/apache/brpc/issues/1511","id":1125637917,"node_id":"IC_kwDOBhmkcs5DF98d","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T04:10:56Z","updated_at":"2022-05-13T04:10:56Z","author_association":"CONTRIBUTOR","body":"> 感谢回复。 之前没有描述清楚，在一台机器有多个实例，这多个实例会想其它机器上面的多个实例频繁发送消息，我想要把一段时间内发往相同机器rpc请求合并起来在同一个时间发送以减小网络负担， ![image](https://user-images.githubusercontent.com/48236141/129346471-8ddd686c-c00e-4557-82f2-598f982ad9d2.png) 像这个把a，b的请求合成c，然后c一段时间后发给d，再由d下发给下面的服务e，f，最后实现a向e发送rpc，b向f发送rpc。 原先a，b，e，f对rpc的处理涉及许多需要controller处理的地方，最后也需要调用closure->Done()，不知道要怎么处理这两个的合并。\r\n\r\n按照你的描述，a和b应该是不同的进程，如果要合并a和b的请求，那么就涉及跨进程通信了，这样或许能减少网络负担，但是增加了跨进程的开销，很可能得不偿失","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125637917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125638897","html_url":"https://github.com/apache/brpc/issues/1501#issuecomment-1125638897","issue_url":"https://api.github.com/repos/apache/brpc/issues/1501","id":1125638897,"node_id":"IC_kwDOBhmkcs5DF-Lx","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T04:13:11Z","updated_at":"2022-05-13T04:13:11Z","author_association":"CONTRIBUTOR","body":"brpc-java是另一个项目，有对应的issue：https://github.com/baidu/brpc-java/issues/219\r\n这里close了","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125638897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125665605","html_url":"https://github.com/apache/brpc/issues/1761#issuecomment-1125665605","issue_url":"https://api.github.com/repos/apache/brpc/issues/1761","id":1125665605,"node_id":"IC_kwDOBhmkcs5DGEtF","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T05:17:44Z","updated_at":"2022-05-13T05:17:44Z","author_association":"CONTRIBUTOR","body":"The append function is void, it will not return -1: \r\n`void append(const Movable& other);`\r\nhttps://github.com/apache/incubator-brpc/blob/master/src/butil/iobuf.h#L206","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125665605/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125688479","html_url":"https://github.com/apache/brpc/issues/1761#issuecomment-1125688479","issue_url":"https://api.github.com/repos/apache/brpc/issues/1761","id":1125688479,"node_id":"IC_kwDOBhmkcs5DGKSf","user":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T06:07:04Z","updated_at":"2022-05-13T06:07:58Z","author_association":"NONE","body":"@wwbmmm Thank you for the quick response. I was referring to these two `append` calls. https://github.com/apache/incubator-brpc/blob/master/src/brpc/policy/baidu_rpc_protocol.cpp#L83-L87","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125688479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125692488","html_url":"https://github.com/apache/brpc/issues/1761#issuecomment-1125692488","issue_url":"https://api.github.com/repos/apache/brpc/issues/1761","id":1125692488,"node_id":"IC_kwDOBhmkcs5DGLRI","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T06:14:12Z","updated_at":"2022-05-13T06:14:12Z","author_association":"CONTRIBUTOR","body":"> @wwbmmm Thank you for the quick response. I was referring to these two `append` calls. https://github.com/apache/incubator-brpc/blob/master/src/brpc/policy/baidu_rpc_protocol.cpp#L83-L87\r\n\r\nIt is better to check return code for these two `append` calls. But in practice, we rarely encounter `append` failures.","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125692488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125695013","html_url":"https://github.com/apache/brpc/issues/1761#issuecomment-1125695013","issue_url":"https://api.github.com/repos/apache/brpc/issues/1761","id":1125695013,"node_id":"IC_kwDOBhmkcs5DGL4l","user":{"login":"amosbird","id":5085485,"node_id":"MDQ6VXNlcjUwODU0ODU=","avatar_url":"https://avatars.githubusercontent.com/u/5085485?v=4","gravatar_id":"","url":"https://api.github.com/users/amosbird","html_url":"https://github.com/amosbird","followers_url":"https://api.github.com/users/amosbird/followers","following_url":"https://api.github.com/users/amosbird/following{/other_user}","gists_url":"https://api.github.com/users/amosbird/gists{/gist_id}","starred_url":"https://api.github.com/users/amosbird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amosbird/subscriptions","organizations_url":"https://api.github.com/users/amosbird/orgs","repos_url":"https://api.github.com/users/amosbird/repos","events_url":"https://api.github.com/users/amosbird/events{/privacy}","received_events_url":"https://api.github.com/users/amosbird/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T06:18:20Z","updated_at":"2022-05-13T06:18:20Z","author_association":"NONE","body":"> It is better to check return code for these two append calls.\r\n\r\nI guess the answer is UB then :)\r\n\r\n> But in practice, we rarely encounter append failures.\r\n\r\nMemory allocation failures are always rare. However, well-defined applications are required to handle it properly. This is especially true since brpc identifies itself as an industrial-grade RPC framework.","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125695013/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125695920","html_url":"https://github.com/apache/brpc/pull/1657#issuecomment-1125695920","issue_url":"https://api.github.com/repos/apache/brpc/issues/1657","id":1125695920,"node_id":"IC_kwDOBhmkcs5DGMGw","user":{"login":"mapx","id":4576282,"node_id":"MDQ6VXNlcjQ1NzYyODI=","avatar_url":"https://avatars.githubusercontent.com/u/4576282?v=4","gravatar_id":"","url":"https://api.github.com/users/mapx","html_url":"https://github.com/mapx","followers_url":"https://api.github.com/users/mapx/followers","following_url":"https://api.github.com/users/mapx/following{/other_user}","gists_url":"https://api.github.com/users/mapx/gists{/gist_id}","starred_url":"https://api.github.com/users/mapx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mapx/subscriptions","organizations_url":"https://api.github.com/users/mapx/orgs","repos_url":"https://api.github.com/users/mapx/repos","events_url":"https://api.github.com/users/mapx/events{/privacy}","received_events_url":"https://api.github.com/users/mapx/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T06:19:54Z","updated_at":"2022-05-13T06:19:54Z","author_association":"NONE","body":"ping","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125695920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125800563","html_url":"https://github.com/apache/brpc/issues/1307#issuecomment-1125800563","issue_url":"https://api.github.com/repos/apache/brpc/issues/1307","id":1125800563,"node_id":"IC_kwDOBhmkcs5DGlpz","user":{"login":"tanzhongyi003","id":20179982,"node_id":"MDQ6VXNlcjIwMTc5OTgy","avatar_url":"https://avatars.githubusercontent.com/u/20179982?v=4","gravatar_id":"","url":"https://api.github.com/users/tanzhongyi003","html_url":"https://github.com/tanzhongyi003","followers_url":"https://api.github.com/users/tanzhongyi003/followers","following_url":"https://api.github.com/users/tanzhongyi003/following{/other_user}","gists_url":"https://api.github.com/users/tanzhongyi003/gists{/gist_id}","starred_url":"https://api.github.com/users/tanzhongyi003/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tanzhongyi003/subscriptions","organizations_url":"https://api.github.com/users/tanzhongyi003/orgs","repos_url":"https://api.github.com/users/tanzhongyi003/repos","events_url":"https://api.github.com/users/tanzhongyi003/events{/privacy}","received_events_url":"https://api.github.com/users/tanzhongyi003/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T08:40:17Z","updated_at":"2022-05-13T08:40:17Z","author_association":"MEMBER","body":"open another issue to track this。\r\n\r\nhttps://github.com/apache/incubator-brpc/issues/1640\r\n\r\nso close this","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125800563/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125813668","html_url":"https://github.com/apache/brpc/issues/1507#issuecomment-1125813668","issue_url":"https://api.github.com/repos/apache/brpc/issues/1507","id":1125813668,"node_id":"IC_kwDOBhmkcs5DGo2k","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T08:54:41Z","updated_at":"2022-05-13T08:54:41Z","author_association":"CONTRIBUTOR","body":"> 3个rpc调用中的2个是在协程中进行的，另1个是在timer线程（pthread）调用的。\r\n\r\ntimer 回调里是不能执行CallMethod，这样会把timer thread阻塞，然后超时也就失效了。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125813668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125831809","html_url":"https://github.com/apache/brpc/issues/1465#issuecomment-1125831809","issue_url":"https://api.github.com/repos/apache/brpc/issues/1465","id":1125831809,"node_id":"IC_kwDOBhmkcs5DGtSB","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T09:15:05Z","updated_at":"2022-05-13T09:15:05Z","author_association":"CONTRIBUTOR","body":"Fixed by #1711","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125831809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125836937","html_url":"https://github.com/apache/brpc/issues/1454#issuecomment-1125836937","issue_url":"https://api.github.com/repos/apache/brpc/issues/1454","id":1125836937,"node_id":"IC_kwDOBhmkcs5DGuiJ","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T09:20:55Z","updated_at":"2022-05-13T09:20:55Z","author_association":"CONTRIBUTOR","body":"brpc支持链接protobuf 3的库，出于兼容性考虑，brpc内部的pb定义仍然用的是syntax=proto2。但基于brpc的用户代码是可以使用syntax=proto3的，也可以联编其它基于syntax=proto3实现的库。\r\n如果还有遇到pb3不兼容的问题，可以把问题的复现方法描述一下，这里先close了。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125836937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125856713","html_url":"https://github.com/apache/brpc/pull/1751#issuecomment-1125856713","issue_url":"https://api.github.com/repos/apache/brpc/issues/1751","id":1125856713,"node_id":"IC_kwDOBhmkcs5DGzXJ","user":{"login":"yanglimingcn","id":7091130,"node_id":"MDQ6VXNlcjcwOTExMzA=","avatar_url":"https://avatars.githubusercontent.com/u/7091130?v=4","gravatar_id":"","url":"https://api.github.com/users/yanglimingcn","html_url":"https://github.com/yanglimingcn","followers_url":"https://api.github.com/users/yanglimingcn/followers","following_url":"https://api.github.com/users/yanglimingcn/following{/other_user}","gists_url":"https://api.github.com/users/yanglimingcn/gists{/gist_id}","starred_url":"https://api.github.com/users/yanglimingcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanglimingcn/subscriptions","organizations_url":"https://api.github.com/users/yanglimingcn/orgs","repos_url":"https://api.github.com/users/yanglimingcn/repos","events_url":"https://api.github.com/users/yanglimingcn/events{/privacy}","received_events_url":"https://api.github.com/users/yanglimingcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T09:42:53Z","updated_at":"2022-05-13T09:42:53Z","author_association":"CONTRIBUTOR","body":"已经按照你的建议修改了，这样代码清晰很多","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1125856713/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1126584275","html_url":"https://github.com/apache/brpc/pull/1751#issuecomment-1126584275","issue_url":"https://api.github.com/repos/apache/brpc/issues/1751","id":1126584275,"node_id":"IC_kwDOBhmkcs5DJk_T","user":{"login":"yanglimingcn","id":7091130,"node_id":"MDQ6VXNlcjcwOTExMzA=","avatar_url":"https://avatars.githubusercontent.com/u/7091130?v=4","gravatar_id":"","url":"https://api.github.com/users/yanglimingcn","html_url":"https://github.com/yanglimingcn","followers_url":"https://api.github.com/users/yanglimingcn/followers","following_url":"https://api.github.com/users/yanglimingcn/following{/other_user}","gists_url":"https://api.github.com/users/yanglimingcn/gists{/gist_id}","starred_url":"https://api.github.com/users/yanglimingcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanglimingcn/subscriptions","organizations_url":"https://api.github.com/users/yanglimingcn/orgs","repos_url":"https://api.github.com/users/yanglimingcn/repos","events_url":"https://api.github.com/users/yanglimingcn/events{/privacy}","received_events_url":"https://api.github.com/users/yanglimingcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-13T23:55:44Z","updated_at":"2022-05-14T00:38:39Z","author_association":"CONTRIBUTOR","body":"nosched参数是不是可以去掉了，如果nosignal是true，就不要调用exchange，而是调用ready_to_run\r\n另外，我觉得exchange里面的nosignal=true会有问题，因为当前协程切出去了，再次回来需要一个flush，这个flush不知道谁去执行。这和其它地方的nosignal不一样，其它地方都是本协程唤醒其它协程，最后执行一次flush","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1126584275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1127144707","html_url":"https://github.com/apache/brpc/pull/1751#issuecomment-1127144707","issue_url":"https://api.github.com/repos/apache/brpc/issues/1751","id":1127144707,"node_id":"IC_kwDOBhmkcs5DLt0D","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-16T02:17:03Z","updated_at":"2022-05-16T02:17:03Z","author_association":"CONTRIBUTOR","body":"> nosched参数是不是可以去掉了，如果nosignal是true，就不要调用exchange，而是调用ready_to_run 另外，我觉得exchange里面的nosignal=true会有问题，因为当前协程切出去了，再次回来需要一个flush，这个flush不知道谁去执行。这和其它地方的nosignal不一样，其它地方都是本协程唤醒其它协程，最后执行一次flush\r\n\r\n你的意思是只需要支持nosched=true && nosignal=true 和 nosched=false && nosignal=false这两种场景是吗？\r\n如果暂时没有nosched=true && nosignal=false和nosched=false && nosignal=true这两种场景的需求，也可以先去掉nosched参数。将来有需求再添加","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1127144707/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1127154396","html_url":"https://github.com/apache/brpc/pull/1751#issuecomment-1127154396","issue_url":"https://api.github.com/repos/apache/brpc/issues/1751","id":1127154396,"node_id":"IC_kwDOBhmkcs5DLwLc","user":{"login":"yanglimingcn","id":7091130,"node_id":"MDQ6VXNlcjcwOTExMzA=","avatar_url":"https://avatars.githubusercontent.com/u/7091130?v=4","gravatar_id":"","url":"https://api.github.com/users/yanglimingcn","html_url":"https://github.com/yanglimingcn","followers_url":"https://api.github.com/users/yanglimingcn/followers","following_url":"https://api.github.com/users/yanglimingcn/following{/other_user}","gists_url":"https://api.github.com/users/yanglimingcn/gists{/gist_id}","starred_url":"https://api.github.com/users/yanglimingcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanglimingcn/subscriptions","organizations_url":"https://api.github.com/users/yanglimingcn/orgs","repos_url":"https://api.github.com/users/yanglimingcn/repos","events_url":"https://api.github.com/users/yanglimingcn/events{/privacy}","received_events_url":"https://api.github.com/users/yanglimingcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-16T02:38:15Z","updated_at":"2022-05-16T02:58:24Z","author_association":"CONTRIBUTOR","body":"> > nosched参数是不是可以去掉了，如果nosignal是true，就不要调用exchange，而是调用ready_to_run 另外，我觉得exchange里面的nosignal=true会有问题，因为当前协程切出去了，再次回来需要一个flush，这个flush不知道谁去执行。这和其它地方的nosignal不一样，其它地方都是本协程唤醒其它协程，最后执行一次flush\r\n> \r\n> 你的意思是只需要支持nosched=true && nosignal=true 和 nosched=false && nosignal=false这两种场景是吗？ 如果暂时没有nosched=true && nosignal=false和nosched=false && nosignal=true这两种场景的需求，也可以先去掉nosched参数。将来有需求再添加\r\n\r\n嗯，这个需求最初的意思其实是让当前协程不被切换出去，尽量把一些事情处理完了，再统一去调度其他的协程。我再发出一版，辛苦你再Review一下。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1127154396/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1127170357","html_url":"https://github.com/apache/brpc/pull/1717#issuecomment-1127170357","issue_url":"https://api.github.com/repos/apache/brpc/issues/1717","id":1127170357,"node_id":"IC_kwDOBhmkcs5DL0E1","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-16T03:16:27Z","updated_at":"2022-05-16T03:16:27Z","author_association":"CONTRIBUTOR","body":"Github出bug了，这个PR的内容丢失了。我没有做任何操作，就显示PR合入了master，实际上并没有合入。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1127170357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1127548809","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1127548809","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1127548809,"node_id":"IC_kwDOBhmkcs5DNQeJ","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-16T11:23:24Z","updated_at":"2022-05-16T11:23:24Z","author_association":"CONTRIBUTOR","body":"非常感谢，这个PR解答了我多年的困惑！","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1127548809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1127883615","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1127883615","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1127883615,"node_id":"IC_kwDOBhmkcs5DOiNf","user":{"login":"guodongxiaren","id":5945107,"node_id":"MDQ6VXNlcjU5NDUxMDc=","avatar_url":"https://avatars.githubusercontent.com/u/5945107?v=4","gravatar_id":"","url":"https://api.github.com/users/guodongxiaren","html_url":"https://github.com/guodongxiaren","followers_url":"https://api.github.com/users/guodongxiaren/followers","following_url":"https://api.github.com/users/guodongxiaren/following{/other_user}","gists_url":"https://api.github.com/users/guodongxiaren/gists{/gist_id}","starred_url":"https://api.github.com/users/guodongxiaren/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guodongxiaren/subscriptions","organizations_url":"https://api.github.com/users/guodongxiaren/orgs","repos_url":"https://api.github.com/users/guodongxiaren/repos","events_url":"https://api.github.com/users/guodongxiaren/events{/privacy}","received_events_url":"https://api.github.com/users/guodongxiaren/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-16T16:28:33Z","updated_at":"2022-05-16T16:28:33Z","author_association":"MEMBER","body":"rpc_replay是不是也有类似问题","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1127883615/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1128270415","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1128270415","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1128270415,"node_id":"IC_kwDOBhmkcs5DQApP","user":{"login":"bumingchun","id":20112368,"node_id":"MDQ6VXNlcjIwMTEyMzY4","avatar_url":"https://avatars.githubusercontent.com/u/20112368?v=4","gravatar_id":"","url":"https://api.github.com/users/bumingchun","html_url":"https://github.com/bumingchun","followers_url":"https://api.github.com/users/bumingchun/followers","following_url":"https://api.github.com/users/bumingchun/following{/other_user}","gists_url":"https://api.github.com/users/bumingchun/gists{/gist_id}","starred_url":"https://api.github.com/users/bumingchun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bumingchun/subscriptions","organizations_url":"https://api.github.com/users/bumingchun/orgs","repos_url":"https://api.github.com/users/bumingchun/repos","events_url":"https://api.github.com/users/bumingchun/events{/privacy}","received_events_url":"https://api.github.com/users/bumingchun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-17T00:28:40Z","updated_at":"2022-05-17T00:28:40Z","author_association":"CONTRIBUTOR","body":"> rpc_replay是不是也有类似问题\r\n\r\n是的，rpc_replay也有一样的问题。本次只修改了rpc_press是想让大家帮忙review一下目前这样改的思路是否可行，然后再修改rpc_replay","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1128270415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1128304897","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1128304897","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1128304897,"node_id":"IC_kwDOBhmkcs5DQJEB","user":{"login":"guodongxiaren","id":5945107,"node_id":"MDQ6VXNlcjU5NDUxMDc=","avatar_url":"https://avatars.githubusercontent.com/u/5945107?v=4","gravatar_id":"","url":"https://api.github.com/users/guodongxiaren","html_url":"https://github.com/guodongxiaren","followers_url":"https://api.github.com/users/guodongxiaren/followers","following_url":"https://api.github.com/users/guodongxiaren/following{/other_user}","gists_url":"https://api.github.com/users/guodongxiaren/gists{/gist_id}","starred_url":"https://api.github.com/users/guodongxiaren/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guodongxiaren/subscriptions","organizations_url":"https://api.github.com/users/guodongxiaren/orgs","repos_url":"https://api.github.com/users/guodongxiaren/repos","events_url":"https://api.github.com/users/guodongxiaren/events{/privacy}","received_events_url":"https://api.github.com/users/guodongxiaren/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-17T01:32:30Z","updated_at":"2022-05-17T01:32:30Z","author_association":"MEMBER","body":"把时间分辨率从us变成ns有什么特殊的考虑吗？是不是和要解决的问题无关？","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1128304897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1128315655","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1128315655","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1128315655,"node_id":"IC_kwDOBhmkcs5DQLsH","user":{"login":"bumingchun","id":20112368,"node_id":"MDQ6VXNlcjIwMTEyMzY4","avatar_url":"https://avatars.githubusercontent.com/u/20112368?v=4","gravatar_id":"","url":"https://api.github.com/users/bumingchun","html_url":"https://github.com/bumingchun","followers_url":"https://api.github.com/users/bumingchun/followers","following_url":"https://api.github.com/users/bumingchun/following{/other_user}","gists_url":"https://api.github.com/users/bumingchun/gists{/gist_id}","starred_url":"https://api.github.com/users/bumingchun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bumingchun/subscriptions","organizations_url":"https://api.github.com/users/bumingchun/orgs","repos_url":"https://api.github.com/users/bumingchun/repos","events_url":"https://api.github.com/users/bumingchun/events{/privacy}","received_events_url":"https://api.github.com/users/bumingchun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-17T01:49:36Z","updated_at":"2022-05-17T01:49:36Z","author_association":"CONTRIBUTOR","body":"\r\n\r\n\r\n> 把时间分辨率从us变成ns有什么特殊的考虑吗？是不是和要解决的问题无关？\r\n\r\n将时间分辨率从us变成ns是为了解决高qps情况下，因为取整interval精度不够的问题，导致压测qps不准问题。举例说明，例如我们设置req_rate为510000，要是使用us，计算出来的interval = 1 us，要是忽略发送请求的时间(理想情况)，则最终的qps是1000000。要是使用ns，计算出来的interval是1960ns，忽略发送请求时间，则最终qps为510204，更为准确。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1128315655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1128355708","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1128355708","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1128355708,"node_id":"IC_kwDOBhmkcs5DQVd8","user":{"login":"jamesge","id":6566535,"node_id":"MDQ6VXNlcjY1NjY1MzU=","avatar_url":"https://avatars.githubusercontent.com/u/6566535?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesge","html_url":"https://github.com/jamesge","followers_url":"https://api.github.com/users/jamesge/followers","following_url":"https://api.github.com/users/jamesge/following{/other_user}","gists_url":"https://api.github.com/users/jamesge/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesge/subscriptions","organizations_url":"https://api.github.com/users/jamesge/orgs","repos_url":"https://api.github.com/users/jamesge/repos","events_url":"https://api.github.com/users/jamesge/events{/privacy}","received_events_url":"https://api.github.com/users/jamesge/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-17T03:03:20Z","updated_at":"2022-05-17T03:03:20Z","author_association":"CONTRIBUTOR","body":"新老代码的主要差异在计算“实际的延时”这点上：老代码大约是用前1秒的平均延时，新代码是只用上一次访问的延时。这个差异可能难以得出“随程序运行时间变长，抖动出现的次数越来越多，发送地请求会越来越不均匀”这个结论。需要要进一步看看深层次的原因，可能和高qps场景下一些计算的精度不够关联更大。这个随机抖动场景是否能人为构造一下？ @bumingchun   这样其他人也可以复现debug看看。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1128355708/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1128361374","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1128361374","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1128361374,"node_id":"IC_kwDOBhmkcs5DQW2e","user":{"login":"jamesge","id":6566535,"node_id":"MDQ6VXNlcjY1NjY1MzU=","avatar_url":"https://avatars.githubusercontent.com/u/6566535?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesge","html_url":"https://github.com/jamesge","followers_url":"https://api.github.com/users/jamesge/followers","following_url":"https://api.github.com/users/jamesge/following{/other_user}","gists_url":"https://api.github.com/users/jamesge/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesge/subscriptions","organizations_url":"https://api.github.com/users/jamesge/orgs","repos_url":"https://api.github.com/users/jamesge/repos","events_url":"https://api.github.com/users/jamesge/events{/privacy}","received_events_url":"https://api.github.com/users/jamesge/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-17T03:14:57Z","updated_at":"2022-05-17T03:16:16Z","author_association":"CONTRIBUTOR","body":"> > 把时间分辨率从us变成ns有什么特殊的考虑吗？是不是和要解决的问题无关？\r\n> \r\n> 将时间分辨率从us变成ns是为了解决高qps情况下，因为取整interval精度不够的问题，导致压测qps不准问题。举例说明，例如我们设置req_rate为510000，要是使用us，计算出来的interval = 1 us，要是忽略发送请求的时间(理想情况)，则最终的qps是1000000。要是使用ns，计算出来的interval是1960ns，忽略发送请求时间，则最终qps为510204，更为准确。\r\n\r\n基于通知机制的(condition)的唤醒精度是60us，sleep的精度一般远大于60us，小于2ms。只是把参数计算地很精确的话，传给sleep后的实际效果其实得不到保证。一般要追求精确的时间控制，是不能使用sleep机制的，这里用sleep的潜台词就是这个场景下代码简单比时间精准更重要，用us肯定是够了。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1128361374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1128652472","html_url":"https://github.com/apache/brpc/issues/1595#issuecomment-1128652472","issue_url":"https://api.github.com/repos/apache/brpc/issues/1595","id":1128652472,"node_id":"IC_kwDOBhmkcs5DRd64","user":{"login":"xiweiw16","id":3904376,"node_id":"MDQ6VXNlcjM5MDQzNzY=","avatar_url":"https://avatars.githubusercontent.com/u/3904376?v=4","gravatar_id":"","url":"https://api.github.com/users/xiweiw16","html_url":"https://github.com/xiweiw16","followers_url":"https://api.github.com/users/xiweiw16/followers","following_url":"https://api.github.com/users/xiweiw16/following{/other_user}","gists_url":"https://api.github.com/users/xiweiw16/gists{/gist_id}","starred_url":"https://api.github.com/users/xiweiw16/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiweiw16/subscriptions","organizations_url":"https://api.github.com/users/xiweiw16/orgs","repos_url":"https://api.github.com/users/xiweiw16/repos","events_url":"https://api.github.com/users/xiweiw16/events{/privacy}","received_events_url":"https://api.github.com/users/xiweiw16/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-17T09:42:12Z","updated_at":"2022-05-17T09:42:12Z","author_association":"NONE","body":"> > > 之前我们做过实验，在框架层面支持 arena 所带来的性能提升很微弱，所以没有推进支持\r\n> > \r\n> > \r\n> > 在需要填充大量数据到Response中的情况下还是很有必要的，特别是业务代码都基于Arena的情况下，最后的数据Copy是明显的瓶颈。\r\n> \r\n> 你的需求是框架创建的request和response对象都在Arena中分配吗？\r\n\r\n是的；不过我们的实际场景还需要业务能take the ownership of the arena for async usage of the subsequence logic","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1128652472/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129143811","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1129143811","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1129143811,"node_id":"IC_kwDOBhmkcs5DTV4D","user":{"login":"guodongxiaren","id":5945107,"node_id":"MDQ6VXNlcjU5NDUxMDc=","avatar_url":"https://avatars.githubusercontent.com/u/5945107?v=4","gravatar_id":"","url":"https://api.github.com/users/guodongxiaren","html_url":"https://github.com/guodongxiaren","followers_url":"https://api.github.com/users/guodongxiaren/followers","following_url":"https://api.github.com/users/guodongxiaren/following{/other_user}","gists_url":"https://api.github.com/users/guodongxiaren/gists{/gist_id}","starred_url":"https://api.github.com/users/guodongxiaren/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guodongxiaren/subscriptions","organizations_url":"https://api.github.com/users/guodongxiaren/orgs","repos_url":"https://api.github.com/users/guodongxiaren/repos","events_url":"https://api.github.com/users/guodongxiaren/events{/privacy}","received_events_url":"https://api.github.com/users/guodongxiaren/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-17T17:41:24Z","updated_at":"2022-05-17T17:41:24Z","author_association":"MEMBER","body":"这个PR还是有必要重点关注一下，虽然代码diff有待商榷。但是提到的问题是真实存在的，我之前也遇到过rpc_replay发稳定流量给预发布环境，每隔几天服务端就恶化的问题。还有就是压测的时候，流量持续一段较长时间服务性能恶化。重启服务不能恢复，但是重启rpc_replay能恢复。当时我也观察到每次恶化的时候rpc_replay输出的日志中qps不均衡的问题。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129143811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129506245","html_url":"https://github.com/apache/brpc/pull/1764#issuecomment-1129506245","issue_url":"https://api.github.com/repos/apache/brpc/issues/1764","id":1129506245,"node_id":"IC_kwDOBhmkcs5DUuXF","user":{"login":"GOGOYAO","id":18675094,"node_id":"MDQ6VXNlcjE4Njc1MDk0","avatar_url":"https://avatars.githubusercontent.com/u/18675094?v=4","gravatar_id":"","url":"https://api.github.com/users/GOGOYAO","html_url":"https://github.com/GOGOYAO","followers_url":"https://api.github.com/users/GOGOYAO/followers","following_url":"https://api.github.com/users/GOGOYAO/following{/other_user}","gists_url":"https://api.github.com/users/GOGOYAO/gists{/gist_id}","starred_url":"https://api.github.com/users/GOGOYAO/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GOGOYAO/subscriptions","organizations_url":"https://api.github.com/users/GOGOYAO/orgs","repos_url":"https://api.github.com/users/GOGOYAO/repos","events_url":"https://api.github.com/users/GOGOYAO/events{/privacy}","received_events_url":"https://api.github.com/users/GOGOYAO/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-18T02:37:01Z","updated_at":"2022-05-18T02:37:01Z","author_association":"CONTRIBUTOR","body":"@lorinlee @chenzhangyi ","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129506245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129515233","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1129515233","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1129515233,"node_id":"IC_kwDOBhmkcs5DUwjh","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-18T02:58:51Z","updated_at":"2022-05-18T02:58:51Z","author_association":"CONTRIBUTOR","body":"这个问题可以复用，启动echo_server，然后用rpc_press压，当传`-thread_num=12 -qps=0`（同步发送）时，qps大概是100000，且cpu使用稳定在2左右。\r\n当传`-thread_num=12 -qps=100000`（异步发送）时，可以看到，虽然rpc_press显示的qps一直在100000左右，但是server的cpu使用率会一路下降到1以下。如果重启rpc_press，cpu使用率会再次升到2（图中时间粒度太粗，被平均了），然后又逐步下降到1以下。\r\n<img width=\"832\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3894631/168946958-787d2d28-8a1a-4d91-a028-3e4f92db6b43.png\">\r\n\r\n我推测的原因是这样的：\r\n1. 如 @jamesge 指出的，sleep的精度一般远大于60us，那么在qps较大的时候，每次计算出来要sleep的时间间隔是比较短的，比如本来只需sleep 10us，每隔10us发一个请求，结果sleep实际花了100us，接着会立即发出10个请求，这就造成了抖动\r\n2. 如 @bumingchun 指出的，抖动会在队列中一直存在，那么过了一个完整的窗口之后，会计算出应该sleep 100us，这时调用sleep，可能实际的sleep时间变成了200us，如此反复抖动会不断积累变大\r\n3. 最终导致的结果是，server端收到的瞬时qps是不均匀的（以毫秒为尺度来看），可能某段时间一个请求都没有，某段时间收到大量请求，但是以秒的尺度来看，qps的数值是均匀的\r\n4. 由于单连接会合并同一时间的IO，瞬时qps越高，合并效果越好，cpu使用率越低。在echo_server的例子中，随着瞬时qps越来越不均衡，cpu使用率也越来越低。但对于其它的业务场景，比如在业务代码中使用到很多锁的话，有可能会出现瞬时qps越高、cpu使用越高的情况，那么就会出现压测过程中服务性能越变越差的现象。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129515233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129570599","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1129570599","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1129570599,"node_id":"IC_kwDOBhmkcs5DU-En","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-18T05:06:37Z","updated_at":"2022-05-18T05:06:37Z","author_association":"CONTRIBUTOR","body":"补充一些信息：\r\n我加了一个bvar Maxer，统计两次请求之前的间隔的最大值：\r\n```cpp\r\nbvar::Maxer<int> g_request_interval;\r\nbvar::Window<bvar::Maxer<int> > g_request_interval_window(\"max_request_interval\", &g_request_interval, 1);\r\n```\r\n发送请求那里：\r\n```cpp\r\ng_request_interval << (end_time - timeq.back());\r\n```\r\n\r\n然后用异步rpc_press，可以看到这个值是不断在增长的：\r\n<img width=\"796\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3894631/168960967-53389217-2f6a-4b13-bd53-d087e08671f0.png\">\r\n\r\n对应的，latency也在不断增长\r\n<img width=\"851\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3894631/168961051-3018c76d-5ff3-4d49-9d44-60bd245bf2e6.png\">\r\n\r\n而cpu（无论是rpc press还是server端）则呈现先下降后增长的状态：\r\n<img width=\"827\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3894631/168961141-bf39770d-5959-45ac-971f-a86b4a6170cb.png\">\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129570599/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129674002","html_url":"https://github.com/apache/brpc/issues/1664#issuecomment-1129674002","issue_url":"https://api.github.com/repos/apache/brpc/issues/1664","id":1129674002,"node_id":"IC_kwDOBhmkcs5DVXUS","user":{"login":"yanglimingcn","id":7091130,"node_id":"MDQ6VXNlcjcwOTExMzA=","avatar_url":"https://avatars.githubusercontent.com/u/7091130?v=4","gravatar_id":"","url":"https://api.github.com/users/yanglimingcn","html_url":"https://github.com/yanglimingcn","followers_url":"https://api.github.com/users/yanglimingcn/followers","following_url":"https://api.github.com/users/yanglimingcn/following{/other_user}","gists_url":"https://api.github.com/users/yanglimingcn/gists{/gist_id}","starred_url":"https://api.github.com/users/yanglimingcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanglimingcn/subscriptions","organizations_url":"https://api.github.com/users/yanglimingcn/orgs","repos_url":"https://api.github.com/users/yanglimingcn/repos","events_url":"https://api.github.com/users/yanglimingcn/events{/privacy}","received_events_url":"https://api.github.com/users/yanglimingcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-18T07:35:40Z","updated_at":"2022-05-18T07:35:40Z","author_association":"CONTRIBUTOR","body":"FATAL日志\r\nF20220518 14:41:05.319069 13154 bthread-0 global.cpp:299] external/com_google_protobuf/src/google/protobuf/message_lite.cc:68 CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): brpc.RpczSpan was modified concurrently during serialization.","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129674002/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129685964","html_url":"https://github.com/apache/brpc/issues/1664#issuecomment-1129685964","issue_url":"https://api.github.com/repos/apache/brpc/issues/1664","id":1129685964,"node_id":"IC_kwDOBhmkcs5DVaPM","user":{"login":"yanglimingcn","id":7091130,"node_id":"MDQ6VXNlcjcwOTExMzA=","avatar_url":"https://avatars.githubusercontent.com/u/7091130?v=4","gravatar_id":"","url":"https://api.github.com/users/yanglimingcn","html_url":"https://github.com/yanglimingcn","followers_url":"https://api.github.com/users/yanglimingcn/followers","following_url":"https://api.github.com/users/yanglimingcn/following{/other_user}","gists_url":"https://api.github.com/users/yanglimingcn/gists{/gist_id}","starred_url":"https://api.github.com/users/yanglimingcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanglimingcn/subscriptions","organizations_url":"https://api.github.com/users/yanglimingcn/orgs","repos_url":"https://api.github.com/users/yanglimingcn/repos","events_url":"https://api.github.com/users/yanglimingcn/events{/privacy}","received_events_url":"https://api.github.com/users/yanglimingcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-18T07:49:58Z","updated_at":"2022-05-18T07:49:58Z","author_association":"CONTRIBUTOR","body":"感觉是自己多加一些span的内容，比较容易复现core","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129685964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129775748","html_url":"https://github.com/apache/brpc/issues/1664#issuecomment-1129775748","issue_url":"https://api.github.com/repos/apache/brpc/issues/1664","id":1129775748,"node_id":"IC_kwDOBhmkcs5DVwKE","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-18T09:21:08Z","updated_at":"2022-05-18T09:21:08Z","author_association":"CONTRIBUTOR","body":"@yanglimingcn 你是有使用异步rpc，并且在异步rpc返回之前就执行server端的done->Run() ?","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129775748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129801052","html_url":"https://github.com/apache/brpc/issues/1664#issuecomment-1129801052","issue_url":"https://api.github.com/repos/apache/brpc/issues/1664","id":1129801052,"node_id":"IC_kwDOBhmkcs5DV2Vc","user":{"login":"yanglimingcn","id":7091130,"node_id":"MDQ6VXNlcjcwOTExMzA=","avatar_url":"https://avatars.githubusercontent.com/u/7091130?v=4","gravatar_id":"","url":"https://api.github.com/users/yanglimingcn","html_url":"https://github.com/yanglimingcn","followers_url":"https://api.github.com/users/yanglimingcn/followers","following_url":"https://api.github.com/users/yanglimingcn/following{/other_user}","gists_url":"https://api.github.com/users/yanglimingcn/gists{/gist_id}","starred_url":"https://api.github.com/users/yanglimingcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanglimingcn/subscriptions","organizations_url":"https://api.github.com/users/yanglimingcn/orgs","repos_url":"https://api.github.com/users/yanglimingcn/repos","events_url":"https://api.github.com/users/yanglimingcn/events{/privacy}","received_events_url":"https://api.github.com/users/yanglimingcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-18T09:46:25Z","updated_at":"2022-05-18T09:48:02Z","author_association":"CONTRIBUTOR","body":"没有，都是同步的rpc，core这个服务就是一个后端的server，不会再调用其他server了，里面的一些函数打印了一些span信息。\r\n但是这个server的处理行为大概有这样的场景，A协程如果正在处理，B协程进来发现A协程占用这资源，B就会把请求放到一个链表List里面，之后B就退出了，但是B没有做请求的应答。等A协程处理完请求并且应答完了，A会从链表List里面拿到B的请求处理并且做应答。这样的行为也类似于异步调用了server端的done->Run()了。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129801052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129862584","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1129862584","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1129862584,"node_id":"IC_kwDOBhmkcs5DWFW4","user":{"login":"bumingchun","id":20112368,"node_id":"MDQ6VXNlcjIwMTEyMzY4","avatar_url":"https://avatars.githubusercontent.com/u/20112368?v=4","gravatar_id":"","url":"https://api.github.com/users/bumingchun","html_url":"https://github.com/bumingchun","followers_url":"https://api.github.com/users/bumingchun/followers","following_url":"https://api.github.com/users/bumingchun/following{/other_user}","gists_url":"https://api.github.com/users/bumingchun/gists{/gist_id}","starred_url":"https://api.github.com/users/bumingchun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bumingchun/subscriptions","organizations_url":"https://api.github.com/users/bumingchun/orgs","repos_url":"https://api.github.com/users/bumingchun/repos","events_url":"https://api.github.com/users/bumingchun/events{/privacy}","received_events_url":"https://api.github.com/users/bumingchun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-18T10:54:00Z","updated_at":"2022-05-18T11:12:50Z","author_association":"CONTRIBUTOR","body":"> 新老代码的主要差异在计算“实际的延时”这点上：老代码大约是用前1秒的平均延时，新代码是只用上一次访问的延时。这个差异可能难以得出“随程序运行时间变长，抖动出现的次数越来越多，发送地请求会越来越不均匀”这个结论。需要要进一步看看深层次的原因，可能和高qps场景下一些计算的精度不够关联更大。这个随机抖动场景是否能人为构造一下？ @bumingchun 这样其他人也可以复现debug看看。\r\n\r\n新代码计算expected_time的方式为(start_time + n * interval)，其中start_time是发第一个请求的时间，n是请求个数，并不是依赖上一次的访问时延，程序启动的时间就决定了每个请求发送的expected_time，这种实现方式中expected_time不受抖动影响。旧的实现方式中抖动是会累计的，本次抖动会影响一个窗口过后请求的发送时间，并一直传递，所以我才有“随程序运行时间变长，抖动出现的次数越来越多，发送地请求会越来越不均匀”的结论。\r\n\r\n按照你的提示@jamesge，我在发送代码中引入一个人为抖动，可以稳定复现该问题，具体代码在 [reproduce_rpc_press_issue](https://github.com/bumingchun/incubator-brpc/tree/reproduce_rpc_press_issue) 这里，大家可以参考一下。\r\n\r\n利用修改后rpc_press压测echo_server(为了让接口延时变大，在代码中增加了一段for循环)，压测4000qps，可以看到接口延时在持续上涨，并且concurrency波动很大。\r\n![image](https://user-images.githubusercontent.com/20112368/169016629-30fd7cad-e715-448e-8c70-a70139038cfd.png)\r\n\r\n同时我又修改了rpc_press中info_thread.cpp的代码，让其以10ms为间隔打印发送的请求数，可以看到压测一段时间后，每10ms发送的请求数很不均匀\r\n![image](https://user-images.githubusercontent.com/20112368/169017151-31ef7d1f-6289-4b2a-8a9d-0af836968038.png)\r\n\r\n压测命令为:  ./rpc_press -proto=../../example/echo_c++/echo.proto -method=example.EchoService.Echo -server=xxx:8000 -input=./test_echo.json -qps=4000\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1129862584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1130201354","html_url":"https://github.com/apache/brpc/issues/1664#issuecomment-1130201354","issue_url":"https://api.github.com/repos/apache/brpc/issues/1664","id":1130201354,"node_id":"IC_kwDOBhmkcs5DXYEK","user":{"login":"jamesge","id":6566535,"node_id":"MDQ6VXNlcjY1NjY1MzU=","avatar_url":"https://avatars.githubusercontent.com/u/6566535?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesge","html_url":"https://github.com/jamesge","followers_url":"https://api.github.com/users/jamesge/followers","following_url":"https://api.github.com/users/jamesge/following{/other_user}","gists_url":"https://api.github.com/users/jamesge/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesge/subscriptions","organizations_url":"https://api.github.com/users/jamesge/orgs","repos_url":"https://api.github.com/users/jamesge/repos","events_url":"https://api.github.com/users/jamesge/events{/privacy}","received_events_url":"https://api.github.com/users/jamesge/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-18T15:58:05Z","updated_at":"2022-05-18T15:58:05Z","author_association":"CONTRIBUTOR","body":"> 没有，都是同步的rpc，core这个服务就是一个后端的server，不会再调用其他server了，里面的一些函数打印了一些span信息。 但是这个server的处理行为大概有这样的场景，A协程如果正在处理，B协程进来发现A协程占用这资源，B就会把请求放到一个链表List里面，之后B就退出了，但是B没有做请求的应答。等A协程处理完请求并且应答完了，A会从链表List里面拿到B的请求处理并且做应答。这样的行为也类似于异步调用了server端的done->Run()了。\r\n\r\n”B就退出了“，这里的”退出“是指什么？结合这里的上下文，我理解是把B处看到的请求、controller、done之类的都放在那个List里，之后A处拿出来处理一番？这样其实就是异步了。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1130201354/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1130217556","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1130217556","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1130217556,"node_id":"IC_kwDOBhmkcs5DXcBU","user":{"login":"jamesge","id":6566535,"node_id":"MDQ6VXNlcjY1NjY1MzU=","avatar_url":"https://avatars.githubusercontent.com/u/6566535?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesge","html_url":"https://github.com/jamesge","followers_url":"https://api.github.com/users/jamesge/followers","following_url":"https://api.github.com/users/jamesge/following{/other_user}","gists_url":"https://api.github.com/users/jamesge/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesge/subscriptions","organizations_url":"https://api.github.com/users/jamesge/orgs","repos_url":"https://api.github.com/users/jamesge/repos","events_url":"https://api.github.com/users/jamesge/events{/privacy}","received_events_url":"https://api.github.com/users/jamesge/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-18T16:13:28Z","updated_at":"2022-05-18T16:13:28Z","author_association":"CONTRIBUTOR","body":"> 新代码计算expected_time的方式为(start_time + n * interval)，其中start_time是发第一个请求的时间，n是请求个数，并不是依赖上一次的访问时延，程序启动的时间就决定了每个请求发送的expected_time，这种实现方式中expected_time不受抖动影响。旧的实现方式中抖动是会累计的，本次抖动会影响一个窗口过后请求的发送时间，并一直传递，所以我才有“随程序运行时间变长，抖动出现的次数越来越多，发送地请求会越来越不均匀”的结论。\r\n\r\n新方法中一旦某段时间发送特别慢（如线程不被调度了），恢复后实际时间就会远大于预期时间，之后会不做任何sleep以最大速率连续发送，直到预期时间追上？这个其实timeq针对的问题，只受之前一段请求的影响。\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1130217556/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1130940828","html_url":"https://github.com/apache/brpc/issues/1664#issuecomment-1130940828","issue_url":"https://api.github.com/repos/apache/brpc/issues/1664","id":1130940828,"node_id":"IC_kwDOBhmkcs5DaMmc","user":{"login":"yanglimingcn","id":7091130,"node_id":"MDQ6VXNlcjcwOTExMzA=","avatar_url":"https://avatars.githubusercontent.com/u/7091130?v=4","gravatar_id":"","url":"https://api.github.com/users/yanglimingcn","html_url":"https://github.com/yanglimingcn","followers_url":"https://api.github.com/users/yanglimingcn/followers","following_url":"https://api.github.com/users/yanglimingcn/following{/other_user}","gists_url":"https://api.github.com/users/yanglimingcn/gists{/gist_id}","starred_url":"https://api.github.com/users/yanglimingcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanglimingcn/subscriptions","organizations_url":"https://api.github.com/users/yanglimingcn/orgs","repos_url":"https://api.github.com/users/yanglimingcn/repos","events_url":"https://api.github.com/users/yanglimingcn/events{/privacy}","received_events_url":"https://api.github.com/users/yanglimingcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-19T01:27:25Z","updated_at":"2022-05-19T02:21:59Z","author_association":"CONTRIBUTOR","body":"> > 没有，都是同步的rpc，core这个服务就是一个后端的server，不会再调用其他server了，里面的一些函数打印了一些span信息。 但是这个server的处理行为大概有这样的场景，A协程如果正在处理，B协程进来发现A协程占用这资源，B就会把请求放到一个链表List里面，之后B就退出了，但是B没有做请求的应答。等A协程处理完请求并且应答完了，A会从链表List里面拿到B的请求处理并且做应答。这样的行为也类似于异步调用了server端的done->Run()了。\r\n> \r\n> ”B就退出了“，这里的”退出“是指什么？结合这里的上下文，我理解是把B处看到的请求、controller、done之类的都放在那个List里，之后A处拿出来处理一番？这样其实就是异步了。\r\n\r\n是的，B将controller done request response 放到List，然后自己就结束了执行流程。这个请求会被A从List里面取出来处理，并且应答给客户端。这样对于rpcz会有问题是吗？\r\n我这里是不是应该让A从List取出B的请求，首先执行一下span->AsParent()，否则用的还是A请求的span信息，但是A请求以及它的span这时候已经释放了。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1130940828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1130963674","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1130963674","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1130963674,"node_id":"IC_kwDOBhmkcs5DaSLa","user":{"login":"bumingchun","id":20112368,"node_id":"MDQ6VXNlcjIwMTEyMzY4","avatar_url":"https://avatars.githubusercontent.com/u/20112368?v=4","gravatar_id":"","url":"https://api.github.com/users/bumingchun","html_url":"https://github.com/bumingchun","followers_url":"https://api.github.com/users/bumingchun/followers","following_url":"https://api.github.com/users/bumingchun/following{/other_user}","gists_url":"https://api.github.com/users/bumingchun/gists{/gist_id}","starred_url":"https://api.github.com/users/bumingchun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bumingchun/subscriptions","organizations_url":"https://api.github.com/users/bumingchun/orgs","repos_url":"https://api.github.com/users/bumingchun/repos","events_url":"https://api.github.com/users/bumingchun/events{/privacy}","received_events_url":"https://api.github.com/users/bumingchun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-19T01:42:37Z","updated_at":"2022-05-19T01:42:37Z","author_association":"CONTRIBUTOR","body":"> > 新代码计算expected_time的方式为(start_time + n * interval)，其中start_time是发第一个请求的时间，n是请求个数，并不是依赖上一次的访问时延，程序启动的时间就决定了每个请求发送的expected_time，这种实现方式中expected_time不受抖动影响。旧的实现方式中抖动是会累计的，本次抖动会影响一个窗口过后请求的发送时间，并一直传递，所以我才有“随程序运行时间变长，抖动出现的次数越来越多，发送地请求会越来越不均匀”的结论。\r\n> \r\n> 新方法中一旦某段时间发送特别慢（如线程不被调度了），恢复后实际时间就会远大于预期时间，之后会不做任何sleep以最大速率连续发送，直到预期时间追上？这个其实timeq针对的问题，只受之前一段请求的影响。\r\n\r\n\r\n\r\n> \r\n\r\n我理解新方法和原有实现都有这个问题，且原有实现抖动会被累计，影响之后的窗口，这才是最大的问题。\r\n以4000qps举例，分析两种情况 \r\n情况一：假设end_time - expected_time = 0.5s时，两种方式都会已最大速率连续发送约2000个请求，但原有实现连续发送2000个请求的时间都记录在窗口中，会导致下一个窗口中2000个请求还是连续发送。新的方式中只要expected_time追上end_time后，对后续请求没有影响。 \r\n情况二：假设end_time - expected_time = 2s时，新的方式会连续发送8000个请求，旧方式会连续发送2000个请求，这个情况下原有实现是可以减少连续发送请求数，但是原有实现之后的所有请求都是以2000一组连续发送的，以后发送请求都是不均匀的。\r\n\r\n我刚刚研究了一下jmeter的实现方式，[代码如下](https://github.com/apache/jmeter/blob/master/src/components/src/main/java/org/apache/jmeter/timers/ConstantThroughputTimer.java)，它的实现是用上一次发送请求的延时来计算sleep时间，这个方式可以避免你提到的连续发送问题，但弊端是因为抖动qps会小于预设值。我提交的新实现方式则是会在抖动后连续发送请求来尽量保证qps准确。大家可以看看我们采用哪种方式更合适。\r\n![image](https://user-images.githubusercontent.com/20112368/169182485-a59b7517-7d53-4021-b90d-974c08dd6f64.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1130963674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1130979356","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1130979356","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1130979356,"node_id":"IC_kwDOBhmkcs5DaWAc","user":{"login":"bumingchun","id":20112368,"node_id":"MDQ6VXNlcjIwMTEyMzY4","avatar_url":"https://avatars.githubusercontent.com/u/20112368?v=4","gravatar_id":"","url":"https://api.github.com/users/bumingchun","html_url":"https://github.com/bumingchun","followers_url":"https://api.github.com/users/bumingchun/followers","following_url":"https://api.github.com/users/bumingchun/following{/other_user}","gists_url":"https://api.github.com/users/bumingchun/gists{/gist_id}","starred_url":"https://api.github.com/users/bumingchun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bumingchun/subscriptions","organizations_url":"https://api.github.com/users/bumingchun/orgs","repos_url":"https://api.github.com/users/bumingchun/repos","events_url":"https://api.github.com/users/bumingchun/events{/privacy}","received_events_url":"https://api.github.com/users/bumingchun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-19T01:53:06Z","updated_at":"2022-05-19T01:53:06Z","author_association":"CONTRIBUTOR","body":"又想了一下，可能采用jmeter的这种实现方式更好，出现抖动、线程不被调度等情况，很有可能是发压力的机器的问题(负载，网络等)，这个时候在qps指标上体现出这些问题，也有利于问题排查。如果通过连续发送的方式补上因为抖动造成的影响，有2个弊端，1、造成一定程度请求不均匀，2、没有暴露压力机的问题，不利于问题排查。所以倾向采用jmeter的实现方式。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1130979356/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1131182482","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1131182482","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1131182482,"node_id":"IC_kwDOBhmkcs5DbHmS","user":{"login":"jamesge","id":6566535,"node_id":"MDQ6VXNlcjY1NjY1MzU=","avatar_url":"https://avatars.githubusercontent.com/u/6566535?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesge","html_url":"https://github.com/jamesge","followers_url":"https://api.github.com/users/jamesge/followers","following_url":"https://api.github.com/users/jamesge/following{/other_user}","gists_url":"https://api.github.com/users/jamesge/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesge/subscriptions","organizations_url":"https://api.github.com/users/jamesge/orgs","repos_url":"https://api.github.com/users/jamesge/repos","events_url":"https://api.github.com/users/jamesge/events{/privacy}","received_events_url":"https://api.github.com/users/jamesge/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-19T04:14:43Z","updated_at":"2022-05-19T04:14:43Z","author_association":"CONTRIBUTOR","body":"> 我理解新方法和原有实现都有这个问题，且原有实现抖动会被累计，影响之后的窗口，这才是最大的问题。 以4000qps举例，分析两种情况 情况一：假设end_time - expected_time = 0.5s时，两种方式都会已最大速率连续发送约2000个请求，但原有实现连续发送2000个请求的时间都记录在窗口中，会导致下一个窗口中2000个请求还是连续发送。新的方式中只要expected_time追上end_time后，对后续请求没有影响。 情况二：假设end_time - expected_time = 2s时，新的方式会连续发送8000个请求，旧方式会连续发送2000个请求，这个情况下原有实现是可以减少连续发送请求数，但是原有实现之后的所有请求都是以2000一组连续发送的，以后发送请求都是不均匀的。\r\n\r\n”原有实现连续发送2000个请求的时间都记录在窗口中“，发送2000个请求后导致缓慢的那个请求已经出队列了吧，并不会导致后面连续发送，这个判断是有问题的。新方法相当于老方法中的timeq无限大，jmeter的方法类似于timeq容量为1。jmeter的方法就如你说的，在很多情况下会导致实际qps低于指定qps，相当于压力总是打了个折扣。老方法就是注意到这一点做了折中。\r\n\r\n我本地观察了一些cases，”抖动“问题的主要原因我认为是：1. 高qps导致usleep精度不足； 2. 线程不够。这两个问题会交织在一起：现在代码中默认一个线程可以承担10000qps，可以达到，但会导致usleep精度不足，现象就是qps明显低于预期。把单个线程承担的qps调低，以及对timeq容量上限、usleep逻辑做些调整，应该可以解决问题。\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1131182482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1131236413","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1131236413","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1131236413,"node_id":"IC_kwDOBhmkcs5DbUw9","user":{"login":"bumingchun","id":20112368,"node_id":"MDQ6VXNlcjIwMTEyMzY4","avatar_url":"https://avatars.githubusercontent.com/u/20112368?v=4","gravatar_id":"","url":"https://api.github.com/users/bumingchun","html_url":"https://github.com/bumingchun","followers_url":"https://api.github.com/users/bumingchun/followers","following_url":"https://api.github.com/users/bumingchun/following{/other_user}","gists_url":"https://api.github.com/users/bumingchun/gists{/gist_id}","starred_url":"https://api.github.com/users/bumingchun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bumingchun/subscriptions","organizations_url":"https://api.github.com/users/bumingchun/orgs","repos_url":"https://api.github.com/users/bumingchun/repos","events_url":"https://api.github.com/users/bumingchun/events{/privacy}","received_events_url":"https://api.github.com/users/bumingchun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-19T05:48:44Z","updated_at":"2022-05-19T06:05:00Z","author_association":"CONTRIBUTOR","body":"> > 我理解新方法和原有实现都有这个问题，且原有实现抖动会被累计，影响之后的窗口，这才是最大的问题。 以4000qps举例，分析两种情况 情况一：假设end_time - expected_time = 0.5s时，两种方式都会已最大速率连续发送约2000个请求，但原有实现连续发送2000个请求的时间都记录在窗口中，会导致下一个窗口中2000个请求还是连续发送。新的方式中只要expected_time追上end_time后，对后续请求没有影响。 情况二：假设end_time - expected_time = 2s时，新的方式会连续发送8000个请求，旧方式会连续发送2000个请求，这个情况下原有实现是可以减少连续发送请求数，但是原有实现之后的所有请求都是以2000一组连续发送的，以后发送请求都是不均匀的。\r\n> \r\n> ”原有实现连续发送2000个请求的时间都记录在窗口中“，发送2000个请求后导致缓慢的那个请求已经出队列了吧，并不会导致后面连续发送，这个判断是有问题的。新方法相当于老方法中的timeq无限大，jmeter的方法类似于timeq容量为1。jmeter的方法就如你说的，在很多情况下会导致实际qps低于指定qps，相当于压力总是打了个折扣。老方法就是注意到这一点做了折中。\r\n> \r\n> 我本地观察了一些cases，”抖动“问题的主要原因我认为是：1. 高qps导致usleep精度不足； 2. 线程不够。这两个问题会交织在一起：现在代码中默认一个线程可以承担10000qps，可以达到，但会导致usleep精度不足，现象就是qps明显低于预期。把单个线程承担的qps调低，以及对timeq容量上限、usleep逻辑做些调整，应该可以解决问题。\r\n\r\n\"发送2000个请求后导致缓慢的那个请求已经出队列了吧，并不会导致后面连续发送\"，我理解是会影响后面请求发送的，我把这个过程画了个图，你看我的图有问题吗？是不是可以说明这个问题。\r\n![image](https://user-images.githubusercontent.com/20112368/169221390-018bafb2-c6ac-4776-b352-ee9f22ffd2a3.png)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1131236413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1131592164","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1131592164","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1131592164,"node_id":"IC_kwDOBhmkcs5Dcrnk","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-19T11:52:30Z","updated_at":"2022-05-19T12:00:44Z","author_association":"CONTRIBUTOR","body":"> > 新代码计算expected_time的方式为(start_time + n * interval)，其中start_time是发第一个请求的时间，n是请求个数，并不是依赖上一次的访问时延，程序启动的时间就决定了每个请求发送的expected_time，这种实现方式中expected_time不受抖动影响。旧的实现方式中抖动是会累计的，本次抖动会影响一个窗口过后请求的发送时间，并一直传递，所以我才有“随程序运行时间变长，抖动出现的次数越来越多，发送地请求会越来越不均匀”的结论。\r\n> \r\n> 新方法中一旦某段时间发送特别慢（如线程不被调度了），恢复后实际时间就会远大于预期时间，之后会不做任何sleep以最大速率连续发送，直到预期时间追上？这个其实timeq针对的问题，只受之前一段请求的影响。\r\n\r\n有个改进的方法，每隔n个请求，重置expected_time = end_time + interval\r\n或者限制expected_time不能落后当前时间太多(X)\r\n```cpp\r\nif (expected_time < end_time - X) {\r\n    expected_time = end_time - X;\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1131592164/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1132354473","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1132354473","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1132354473,"node_id":"IC_kwDOBhmkcs5Dflup","user":{"login":"bumingchun","id":20112368,"node_id":"MDQ6VXNlcjIwMTEyMzY4","avatar_url":"https://avatars.githubusercontent.com/u/20112368?v=4","gravatar_id":"","url":"https://api.github.com/users/bumingchun","html_url":"https://github.com/bumingchun","followers_url":"https://api.github.com/users/bumingchun/followers","following_url":"https://api.github.com/users/bumingchun/following{/other_user}","gists_url":"https://api.github.com/users/bumingchun/gists{/gist_id}","starred_url":"https://api.github.com/users/bumingchun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bumingchun/subscriptions","organizations_url":"https://api.github.com/users/bumingchun/orgs","repos_url":"https://api.github.com/users/bumingchun/repos","events_url":"https://api.github.com/users/bumingchun/events{/privacy}","received_events_url":"https://api.github.com/users/bumingchun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-20T01:29:04Z","updated_at":"2022-05-20T01:29:04Z","author_association":"CONTRIBUTOR","body":"> > > 新代码计算expected_time的方式为(start_time + n * interval)，其中start_time是发第一个请求的时间，n是请求个数，并不是依赖上一次的访问时延，程序启动的时间就决定了每个请求发送的expected_time，这种实现方式中expected_time不受抖动影响。旧的实现方式中抖动是会累计的，本次抖动会影响一个窗口过后请求的发送时间，并一直传递，所以我才有“随程序运行时间变长，抖动出现的次数越来越多，发送地请求会越来越不均匀”的结论。\r\n> > \r\n> > \r\n> > 新方法中一旦某段时间发送特别慢（如线程不被调度了），恢复后实际时间就会远大于预期时间，之后会不做任何sleep以最大速率连续发送，直到预期时间追上？这个其实timeq针对的问题，只受之前一段请求的影响。\r\n> \r\n> 有个改进的方法，每隔n个请求，重置expected_time = end_time + interval 或者限制expected_time不能落后当前时间太多(X)\r\n> \r\n> ```c++\r\n> if (expected_time < end_time - X) {\r\n>     expected_time = end_time - X;\r\n> }\r\n> ```\r\n\r\n这个思路可以，相当于是我的实现方式和jmeter实现方式的折中。即可以尽量保证qps等于预设值，也可以避免大量请求以最高速率发送。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1132354473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1132520442","html_url":"https://github.com/apache/brpc/issues/1664#issuecomment-1132520442","issue_url":"https://api.github.com/repos/apache/brpc/issues/1664","id":1132520442,"node_id":"IC_kwDOBhmkcs5DgOP6","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-20T06:24:46Z","updated_at":"2022-05-20T06:24:46Z","author_association":"CONTRIBUTOR","body":"> 是的，B将controller done request response 放到List，然后自己就结束了执行流程。这个请求会被A从List里面取出来处理，并且应答给客户端。这样对于rpcz会有问题是吗？\r\n> 我这里是不是应该让A从List取出B的请求，首先执行一下span->AsParent()，否则用的还是A请求的span信息，但是A请求以及它的span这时候已经释放了。\r\n\r\nspan->AsParent()是为了让client端创建span的时候能找到parent span，但是按你的说法“这个服务就是一个后端的server，不会再调用其他server了”，那么应该没用到client，所以是否执行span->AsParent()应该无影响？\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1132520442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1132645757","html_url":"https://github.com/apache/brpc/issues/1664#issuecomment-1132645757","issue_url":"https://api.github.com/repos/apache/brpc/issues/1664","id":1132645757,"node_id":"IC_kwDOBhmkcs5Dgs19","user":{"login":"yanglimingcn","id":7091130,"node_id":"MDQ6VXNlcjcwOTExMzA=","avatar_url":"https://avatars.githubusercontent.com/u/7091130?v=4","gravatar_id":"","url":"https://api.github.com/users/yanglimingcn","html_url":"https://github.com/yanglimingcn","followers_url":"https://api.github.com/users/yanglimingcn/followers","following_url":"https://api.github.com/users/yanglimingcn/following{/other_user}","gists_url":"https://api.github.com/users/yanglimingcn/gists{/gist_id}","starred_url":"https://api.github.com/users/yanglimingcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanglimingcn/subscriptions","organizations_url":"https://api.github.com/users/yanglimingcn/orgs","repos_url":"https://api.github.com/users/yanglimingcn/repos","events_url":"https://api.github.com/users/yanglimingcn/events{/privacy}","received_events_url":"https://api.github.com/users/yanglimingcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-20T08:47:26Z","updated_at":"2022-05-20T08:58:50Z","author_association":"CONTRIBUTOR","body":"> > 是的，B将controller done request response 放到List，然后自己就结束了执行流程。这个请求会被A从List里面取出来处理，并且应答给客户端。这样对于rpcz会有问题是吗？\r\n> > 我这里是不是应该让A从List取出B的请求，首先执行一下span->AsParent()，否则用的还是A请求的span信息，但是A请求以及它的span这时候已经释放了。\r\n> \r\n> span->AsParent()是为了让client端创建span的时候能找到parent span，但是按你的说法“这个服务就是一个后端的server，不会再调用其他server了”，那么应该没用到client，所以是否执行span->AsParent()应该无影响？\r\n\r\n这块如果不调用span->AsParent，因为A协程已经处理完了自己的请求，controller都已经释放了，span也可能回收了，接下来A协程去执行B协程的请求，如果继续使用A其原有请求的span就会引起问题。所以需要把B协程的那个请求设置成thread local的span。\r\n服务端在比如baidu_std协议，ProcessRpcRequest里面也会做span->AsParent()，这个span就是当前请求的span。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1132645757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1132770659","html_url":"https://github.com/apache/brpc/issues/1664#issuecomment-1132770659","issue_url":"https://api.github.com/repos/apache/brpc/issues/1664","id":1132770659,"node_id":"IC_kwDOBhmkcs5DhLVj","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-20T11:03:40Z","updated_at":"2022-05-20T11:03:40Z","author_association":"CONTRIBUTOR","body":"> 这块如果不调用span->AsParent，因为A协程已经处理完了自己的请求，controller都已经释放了，span也可能回收了，接下来A协程去执行B协程的请求，如果继续使用A其原有请求的span就会引起问题。所以需要把B协程的那个请求设置成thread local的span。\r\n> 服务端在比如baidu_std协议，ProcessRpcRequest里面也会做span->AsParent()，这个span就是当前请求的span。\r\n\r\nspan->AsParent设置的是bthread::tls_bls.rpcz_parent_span\r\n而bthread::tls_bls.rpcz_parent_span只有在Channel::CallMethod里面，或者AnnotateSpan/TRACEPRINTF的时候会读取。只有在用到这些功能的时候才会有可能出现“继续使用A其原有请求的span就会引起问题”","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1132770659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1132887716","html_url":"https://github.com/apache/brpc/issues/1664#issuecomment-1132887716","issue_url":"https://api.github.com/repos/apache/brpc/issues/1664","id":1132887716,"node_id":"IC_kwDOBhmkcs5Dhn6k","user":{"login":"yanglimingcn","id":7091130,"node_id":"MDQ6VXNlcjcwOTExMzA=","avatar_url":"https://avatars.githubusercontent.com/u/7091130?v=4","gravatar_id":"","url":"https://api.github.com/users/yanglimingcn","html_url":"https://github.com/yanglimingcn","followers_url":"https://api.github.com/users/yanglimingcn/followers","following_url":"https://api.github.com/users/yanglimingcn/following{/other_user}","gists_url":"https://api.github.com/users/yanglimingcn/gists{/gist_id}","starred_url":"https://api.github.com/users/yanglimingcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanglimingcn/subscriptions","organizations_url":"https://api.github.com/users/yanglimingcn/orgs","repos_url":"https://api.github.com/users/yanglimingcn/repos","events_url":"https://api.github.com/users/yanglimingcn/events{/privacy}","received_events_url":"https://api.github.com/users/yanglimingcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-20T13:14:46Z","updated_at":"2022-05-20T13:14:46Z","author_association":"CONTRIBUTOR","body":"> > 这块如果不调用span->AsParent，因为A协程已经处理完了自己的请求，controller都已经释放了，span也可能回收了，接下来A协程去执行B协程的请求，如果继续使用A其原有请求的span就会引起问题。所以需要把B协程的那个请求设置成thread local的span。\r\n> > 服务端在比如baidu_std协议，ProcessRpcRequest里面也会做span->AsParent()，这个span就是当前请求的span。\r\n> \r\n> span->AsParent设置的是bthread::tls_bls.rpcz_parent_span 而bthread::tls_bls.rpcz_parent_span只有在Channel::CallMethod里面，或者AnnotateSpan/TRACEPRINTF的时候会读取。只有在用到这些功能的时候才会有可能出现“继续使用A其原有请求的span就会引起问题”\r\n\r\n所以，我现在的程序模型，A协程处理了B协程的请求，想要跟踪B请求的执行耗时情况，是不是得显示调用B请求的span的AsParent。或者这种场景，你有什么建议吗？","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1132887716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1134096908","html_url":"https://github.com/apache/brpc/issues/1664#issuecomment-1134096908","issue_url":"https://api.github.com/repos/apache/brpc/issues/1664","id":1134096908,"node_id":"IC_kwDOBhmkcs5DmPIM","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-23T02:21:10Z","updated_at":"2022-05-23T02:21:10Z","author_association":"CONTRIBUTOR","body":"> 所以，我现在的程序模型，A协程处理了B协程的请求，想要跟踪B请求的执行耗时情况，是不是得显示调用B请求的span的AsParent。或者这种场景，你有什么建议吗？\r\n\r\n如果没有调用到Channel::CallMethod或者AnnotateSpan/TRACEPRINTF，应该也可以不用显示调用B请求的span的AsParent。当然保险起见调一下AsParent也好，以免未来代码变更引入了上述调用。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1134096908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1134103646","html_url":"https://github.com/apache/brpc/issues/1428#issuecomment-1134103646","issue_url":"https://api.github.com/repos/apache/brpc/issues/1428","id":1134103646,"node_id":"IC_kwDOBhmkcs5DmQxe","user":{"login":"gyd-a","id":52058819,"node_id":"MDQ6VXNlcjUyMDU4ODE5","avatar_url":"https://avatars.githubusercontent.com/u/52058819?v=4","gravatar_id":"","url":"https://api.github.com/users/gyd-a","html_url":"https://github.com/gyd-a","followers_url":"https://api.github.com/users/gyd-a/followers","following_url":"https://api.github.com/users/gyd-a/following{/other_user}","gists_url":"https://api.github.com/users/gyd-a/gists{/gist_id}","starred_url":"https://api.github.com/users/gyd-a/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gyd-a/subscriptions","organizations_url":"https://api.github.com/users/gyd-a/orgs","repos_url":"https://api.github.com/users/gyd-a/repos","events_url":"https://api.github.com/users/gyd-a/events{/privacy}","received_events_url":"https://api.github.com/users/gyd-a/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-23T02:34:09Z","updated_at":"2022-05-23T02:34:09Z","author_association":"NONE","body":"> 已经解决。确实是因为该进程 map count 达到了 /proc/sys/vm/max_map_count 导致 allocate_stack_storage 失败，bthread 都进入了 pthread 模型，最终阻塞在 futex_wait_private\r\n\r\n\r\n大佬，您好，这个问题有结果吗？你们真正用上自定义线程池了吗？","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1134103646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1134383120","html_url":"https://github.com/apache/brpc/issues/1664#issuecomment-1134383120","issue_url":"https://api.github.com/repos/apache/brpc/issues/1664","id":1134383120,"node_id":"IC_kwDOBhmkcs5DnVAQ","user":{"login":"yanglimingcn","id":7091130,"node_id":"MDQ6VXNlcjcwOTExMzA=","avatar_url":"https://avatars.githubusercontent.com/u/7091130?v=4","gravatar_id":"","url":"https://api.github.com/users/yanglimingcn","html_url":"https://github.com/yanglimingcn","followers_url":"https://api.github.com/users/yanglimingcn/followers","following_url":"https://api.github.com/users/yanglimingcn/following{/other_user}","gists_url":"https://api.github.com/users/yanglimingcn/gists{/gist_id}","starred_url":"https://api.github.com/users/yanglimingcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanglimingcn/subscriptions","organizations_url":"https://api.github.com/users/yanglimingcn/orgs","repos_url":"https://api.github.com/users/yanglimingcn/repos","events_url":"https://api.github.com/users/yanglimingcn/events{/privacy}","received_events_url":"https://api.github.com/users/yanglimingcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-23T08:56:12Z","updated_at":"2022-05-23T08:56:12Z","author_association":"CONTRIBUTOR","body":"感谢两位的帮助， @jamesge @wwbmmm ","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1134383120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1136698061","html_url":"https://github.com/apache/brpc/issues/1765#issuecomment-1136698061","issue_url":"https://api.github.com/repos/apache/brpc/issues/1765","id":1136698061,"node_id":"IC_kwDOBhmkcs5DwKLN","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-25T03:58:28Z","updated_at":"2022-05-25T03:58:28Z","author_association":"CONTRIBUTOR","body":"same as #1693","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1136698061/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1137629449","html_url":"https://github.com/apache/brpc/issues/1693#issuecomment-1137629449","issue_url":"https://api.github.com/repos/apache/brpc/issues/1693","id":1137629449,"node_id":"IC_kwDOBhmkcs5DztkJ","user":{"login":"songdongsheng","id":68488,"node_id":"MDQ6VXNlcjY4NDg4","avatar_url":"https://avatars.githubusercontent.com/u/68488?v=4","gravatar_id":"","url":"https://api.github.com/users/songdongsheng","html_url":"https://github.com/songdongsheng","followers_url":"https://api.github.com/users/songdongsheng/followers","following_url":"https://api.github.com/users/songdongsheng/following{/other_user}","gists_url":"https://api.github.com/users/songdongsheng/gists{/gist_id}","starred_url":"https://api.github.com/users/songdongsheng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/songdongsheng/subscriptions","organizations_url":"https://api.github.com/users/songdongsheng/orgs","repos_url":"https://api.github.com/users/songdongsheng/repos","events_url":"https://api.github.com/users/songdongsheng/events{/privacy}","received_events_url":"https://api.github.com/users/songdongsheng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-25T17:44:24Z","updated_at":"2022-05-25T17:44:24Z","author_association":"NONE","body":"在使用 brpc 的代码中，全面关闭 **const** 优化是极为不负责任的做法，这么粗暴的绕过问题，会让人对 brpc 的代码质量产生疑虑，阻碍 brpc 的推广。\r\n\r\n1. 如果 brpc 认为 glibc  做得不对，可以给它报告 bug，说明理由。\r\n2. 作为一个临时方案，定义一个 bthread_errno() 或 brpc_errno()，比简单粗暴的禁止 **const** 优化优雅，也易于让人接受。\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1137629449/reactions","total_count":9,"+1":9,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1138074480","html_url":"https://github.com/apache/brpc/issues/1693#issuecomment-1138074480","issue_url":"https://api.github.com/repos/apache/brpc/issues/1693","id":1138074480,"node_id":"IC_kwDOBhmkcs5D1aNw","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-26T02:21:16Z","updated_at":"2022-05-26T02:21:16Z","author_association":"CONTRIBUTOR","body":"> 2\\. 作为一个临时方案，定义一个 bthread_errno() 或 brpc_errno()，比简单粗暴的禁止 **const** 优化优雅，也易于让人接受。\r\n\r\n这个方案在 https://github.com/apache/incubator-brpc/blob/master/src/bthread/errno.h 已经实现了。问题在于，不只是brpc自身代码在使用errno时需要include \"bthread/errno.h\", 用户代码里也要加，包括用户通过第三方库间接使用到errno的情况。除了errno，还有pthread_self等函数也需要处理，这样搞很容易疏漏，导致未定义的行为，而且难以追查。\r\n\r\n给glibc报bug的方案，我再看看","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1138074480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1138293469","html_url":"https://github.com/apache/brpc/issues/1691#issuecomment-1138293469","issue_url":"https://api.github.com/repos/apache/brpc/issues/1691","id":1138293469,"node_id":"IC_kwDOBhmkcs5D2Prd","user":{"login":"helifu","id":8478817,"node_id":"MDQ6VXNlcjg0Nzg4MTc=","avatar_url":"https://avatars.githubusercontent.com/u/8478817?v=4","gravatar_id":"","url":"https://api.github.com/users/helifu","html_url":"https://github.com/helifu","followers_url":"https://api.github.com/users/helifu/followers","following_url":"https://api.github.com/users/helifu/following{/other_user}","gists_url":"https://api.github.com/users/helifu/gists{/gist_id}","starred_url":"https://api.github.com/users/helifu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/helifu/subscriptions","organizations_url":"https://api.github.com/users/helifu/orgs","repos_url":"https://api.github.com/users/helifu/repos","events_url":"https://api.github.com/users/helifu/events{/privacy}","received_events_url":"https://api.github.com/users/helifu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-26T08:26:55Z","updated_at":"2022-05-26T08:26:55Z","author_association":"NONE","body":"hit the same question on version 1.0.0:\r\n```\r\n../output/lib/libbrpc.so: undefined reference to `snappy::GetUncompressedLength(char const*, unsigned long, unsigned long*)'\r\n../output/lib/libbrpc.so: undefined reference to `snappy::MaxCompressedLength(unsigned long)'\r\n../output/lib/libbrpc.so: undefined reference to `snappy::RawUncompress(char const*, unsigned long, char*)'\r\n../output/lib/libbrpc.so: undefined reference to `snappy::RawCompress(char const*, unsigned long, char*, unsigned long*)'\r\ncollect2: error: ld returned 1 exit status\r\nmake[2]: *** [output/bin/protoc-gen-mcpack] Error 1\r\nmake[1]: *** [src/CMakeFiles/protoc-gen-mcpack.dir/all] Error 2\r\nmake[1]: *** Waiting for unfinished jobs....\r\n^Cmake[2]: make[2]: make[2]: make[2]: make[2]: *** Deleting file `output/bin/rpc_press'*** Deleting file `output/bin/rpc_replay'*** Deleting file `output/bin/trackme_server'*** Deleting file `output/bin/parallel_http'\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1138293469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1138309876","html_url":"https://github.com/apache/brpc/issues/1664#issuecomment-1138309876","issue_url":"https://api.github.com/repos/apache/brpc/issues/1664","id":1138309876,"node_id":"IC_kwDOBhmkcs5D2Tr0","user":{"login":"yanglimingcn","id":7091130,"node_id":"MDQ6VXNlcjcwOTExMzA=","avatar_url":"https://avatars.githubusercontent.com/u/7091130?v=4","gravatar_id":"","url":"https://api.github.com/users/yanglimingcn","html_url":"https://github.com/yanglimingcn","followers_url":"https://api.github.com/users/yanglimingcn/followers","following_url":"https://api.github.com/users/yanglimingcn/following{/other_user}","gists_url":"https://api.github.com/users/yanglimingcn/gists{/gist_id}","starred_url":"https://api.github.com/users/yanglimingcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yanglimingcn/subscriptions","organizations_url":"https://api.github.com/users/yanglimingcn/orgs","repos_url":"https://api.github.com/users/yanglimingcn/repos","events_url":"https://api.github.com/users/yanglimingcn/events{/privacy}","received_events_url":"https://api.github.com/users/yanglimingcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-26T08:47:49Z","updated_at":"2022-05-26T08:47:49Z","author_association":"CONTRIBUTOR","body":"补充：如果业务逻辑需要异步，可以把span从请求的上下文提取，然后执行span->AnnotateSpan。请求上下文肯定时刻都在一个线程上执行。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1138309876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1138313339","html_url":"https://github.com/apache/brpc/issues/1691#issuecomment-1138313339","issue_url":"https://api.github.com/repos/apache/brpc/issues/1691","id":1138313339,"node_id":"IC_kwDOBhmkcs5D2Uh7","user":{"login":"helifu","id":8478817,"node_id":"MDQ6VXNlcjg0Nzg4MTc=","avatar_url":"https://avatars.githubusercontent.com/u/8478817?v=4","gravatar_id":"","url":"https://api.github.com/users/helifu","html_url":"https://github.com/helifu","followers_url":"https://api.github.com/users/helifu/followers","following_url":"https://api.github.com/users/helifu/following{/other_user}","gists_url":"https://api.github.com/users/helifu/gists{/gist_id}","starred_url":"https://api.github.com/users/helifu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/helifu/subscriptions","organizations_url":"https://api.github.com/users/helifu/orgs","repos_url":"https://api.github.com/users/helifu/repos","events_url":"https://api.github.com/users/helifu/events{/privacy}","received_events_url":"https://api.github.com/users/helifu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-26T08:52:10Z","updated_at":"2022-05-26T08:52:10Z","author_association":"NONE","body":"> hit the same question on version 1.0.0:\r\n> \r\n> ```\r\n> ../output/lib/libbrpc.so: undefined reference to `snappy::GetUncompressedLength(char const*, unsigned long, unsigned long*)'\r\n> ../output/lib/libbrpc.so: undefined reference to `snappy::MaxCompressedLength(unsigned long)'\r\n> ../output/lib/libbrpc.so: undefined reference to `snappy::RawUncompress(char const*, unsigned long, char*)'\r\n> ../output/lib/libbrpc.so: undefined reference to `snappy::RawCompress(char const*, unsigned long, char*, unsigned long*)'\r\n> collect2: error: ld returned 1 exit status\r\n> make[2]: *** [output/bin/protoc-gen-mcpack] Error 1\r\n> make[1]: *** [src/CMakeFiles/protoc-gen-mcpack.dir/all] Error 2\r\n> make[1]: *** Waiting for unfinished jobs....\r\n> ^Cmake[2]: make[2]: make[2]: make[2]: make[2]: *** Deleting file `output/bin/rpc_press'*** Deleting file `output/bin/rpc_replay'*** Deleting file `output/bin/trackme_server'*** Deleting file `output/bin/parallel_http'\r\n> ```\r\n\r\nFixed by a manual operation.","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1138313339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1139941777","html_url":"https://github.com/apache/brpc/issues/493#issuecomment-1139941777","issue_url":"https://api.github.com/repos/apache/brpc/issues/493","id":1139941777,"node_id":"IC_kwDOBhmkcs5D8iGR","user":{"login":"zwkno1","id":6861609,"node_id":"MDQ6VXNlcjY4NjE2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/6861609?v=4","gravatar_id":"","url":"https://api.github.com/users/zwkno1","html_url":"https://github.com/zwkno1","followers_url":"https://api.github.com/users/zwkno1/followers","following_url":"https://api.github.com/users/zwkno1/following{/other_user}","gists_url":"https://api.github.com/users/zwkno1/gists{/gist_id}","starred_url":"https://api.github.com/users/zwkno1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zwkno1/subscriptions","organizations_url":"https://api.github.com/users/zwkno1/orgs","repos_url":"https://api.github.com/users/zwkno1/repos","events_url":"https://api.github.com/users/zwkno1/events{/privacy}","received_events_url":"https://api.github.com/users/zwkno1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-27T18:52:15Z","updated_at":"2022-05-27T18:53:01Z","author_association":"CONTRIBUTOR","body":"#1768 这个pr可以解决","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1139941777/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1140244725","html_url":"https://github.com/apache/brpc/issues/1769#issuecomment-1140244725","issue_url":"https://api.github.com/repos/apache/brpc/issues/1769","id":1140244725,"node_id":"IC_kwDOBhmkcs5D9sD1","user":{"login":"jialei-jialei","id":13553842,"node_id":"MDQ6VXNlcjEzNTUzODQy","avatar_url":"https://avatars.githubusercontent.com/u/13553842?v=4","gravatar_id":"","url":"https://api.github.com/users/jialei-jialei","html_url":"https://github.com/jialei-jialei","followers_url":"https://api.github.com/users/jialei-jialei/followers","following_url":"https://api.github.com/users/jialei-jialei/following{/other_user}","gists_url":"https://api.github.com/users/jialei-jialei/gists{/gist_id}","starred_url":"https://api.github.com/users/jialei-jialei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jialei-jialei/subscriptions","organizations_url":"https://api.github.com/users/jialei-jialei/orgs","repos_url":"https://api.github.com/users/jialei-jialei/repos","events_url":"https://api.github.com/users/jialei-jialei/events{/privacy}","received_events_url":"https://api.github.com/users/jialei-jialei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-28T11:46:38Z","updated_at":"2022-05-28T11:46:38Z","author_association":"NONE","body":"用了ssl证书","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1140244725/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1143371873","html_url":"https://github.com/apache/brpc/issues/1693#issuecomment-1143371873","issue_url":"https://api.github.com/repos/apache/brpc/issues/1693","id":1143371873,"node_id":"IC_kwDOBhmkcs5EJnhh","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-01T09:42:05Z","updated_at":"2022-06-01T09:42:05Z","author_association":"CONTRIBUTOR","body":"> 给glibc报bug的方案，我再看看\r\n\r\n查了一些资料。目前找到的比较充分的讨论是LLVM社区的这个讨论：[[llvm-dev] [RFC] Coroutine and pthread_self](https://lists.llvm.org/pipermail/llvm-dev/2020-November/146766.html)\r\n相关Issue：https://github.com/llvm/llvm-project/issues/47177\r\n\r\n讨论中提到的一些问题：\r\n1. [gcc关于函数的`const` attribute的说明](https://gcc.gnu.org/onlinedocs/gcc/Common-Function-Attributes.html)，并没有写清楚是否是在 *同一线程下* 执行结果相同，在实践中，却被广泛地当成 *同一线程下* 执行结果相同来处理。比如基础库中存在大量将返回tls变量地址的函数定义为`const`的情况，而编译器也默认只在同一个函数调用内将多次`const`函数调用进行合并。有人[在gcc社区要求澄清](https://gcc.gnu.org/legacy-ml/gcc/2015-09/msg00354.html)，但是没有得到明确的答复。\r\n2. 上述实践在过去没有问题，因为在同一个函数中的代码总是在同一个线程中执行。但是协程的出现打破了这种情况（无论是c++20的协程还是类似bthread的这种协程），同一个函数中的代码可能会被协程切换到另一个线程下执行。\r\n\r\n讨论的几种解决方案：\r\n1. 修改pthread_self()等函数的声明。但是，这个问题在于要改很多基础库。\r\n2. 编译器识别当前函数是否存在协程环境（如co_await关键字），如果存在，则放弃某些优化。这个需要修改很多个优化器，并且会给将来新增的优化器带来负担。并且如何判断协程环境也是个困难（bthread调用并没有co_await这样的标志）。\r\n3. 新增一个编译器开关来指定是否支持协程安全，如果开启这个开关，则对tls变量和`const`函数进行特殊处理以确保在协程环境下运行正确。实际上，MSVC已经提供了[这样的开关](https://docs.microsoft.com/en-us/cpp/build/reference/gt-support-fiber-safe-thread-local-storage?view=msvc-160)。个人认为这个方案是比较理想的方案。\r\n\r\n目前，LLVM社区有一些PR在尝试解决这个问题：\r\n\r\n* [Fix TLS and Coroutine](https://reviews.llvm.org/D92661)\r\n* [Drop const attribute on pthread_self when coroutine is enabled](https://reviews.llvm.org/D92662)\r\n\r\n其它相关讨论：\r\n\r\n* [Disabling TLS address caching to help QEMU on GNU/Linux](https://www.mail-archive.com/gcc@gcc.gnu.org/msg96208.html)\r\n* [Why pthread_self is marked with attribute(const)?](https://stackoverflow.com/questions/36876996/why-pthread-self-is-marked-with-attributeconst)","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1143371873/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1145835758","html_url":"https://github.com/apache/brpc/issues/1773#issuecomment-1145835758","issue_url":"https://api.github.com/repos/apache/brpc/issues/1773","id":1145835758,"node_id":"IC_kwDOBhmkcs5ETBDu","user":{"login":"zhaodongzhi","id":6293650,"node_id":"MDQ6VXNlcjYyOTM2NTA=","avatar_url":"https://avatars.githubusercontent.com/u/6293650?v=4","gravatar_id":"","url":"https://api.github.com/users/zhaodongzhi","html_url":"https://github.com/zhaodongzhi","followers_url":"https://api.github.com/users/zhaodongzhi/followers","following_url":"https://api.github.com/users/zhaodongzhi/following{/other_user}","gists_url":"https://api.github.com/users/zhaodongzhi/gists{/gist_id}","starred_url":"https://api.github.com/users/zhaodongzhi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhaodongzhi/subscriptions","organizations_url":"https://api.github.com/users/zhaodongzhi/orgs","repos_url":"https://api.github.com/users/zhaodongzhi/repos","events_url":"https://api.github.com/users/zhaodongzhi/events{/privacy}","received_events_url":"https://api.github.com/users/zhaodongzhi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-03T10:44:05Z","updated_at":"2022-06-03T10:44:05Z","author_association":"NONE","body":"MR：https://github.com/apache/incubator-brpc/pull/1774\r\n可以解决这个问题","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1145835758/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146579231","html_url":"https://github.com/apache/brpc/issues/1775#issuecomment-1146579231","issue_url":"https://api.github.com/repos/apache/brpc/issues/1775","id":1146579231,"node_id":"IC_kwDOBhmkcs5EV2kf","user":{"login":"jamesge","id":6566535,"node_id":"MDQ6VXNlcjY1NjY1MzU=","avatar_url":"https://avatars.githubusercontent.com/u/6566535?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesge","html_url":"https://github.com/jamesge","followers_url":"https://api.github.com/users/jamesge/followers","following_url":"https://api.github.com/users/jamesge/following{/other_user}","gists_url":"https://api.github.com/users/jamesge/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesge/subscriptions","organizations_url":"https://api.github.com/users/jamesge/orgs","repos_url":"https://api.github.com/users/jamesge/repos","events_url":"https://api.github.com/users/jamesge/events{/privacy}","received_events_url":"https://api.github.com/users/jamesge/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-04T09:44:09Z","updated_at":"2022-06-04T09:44:09Z","author_association":"CONTRIBUTOR","body":"试试这个接口，这是专门用来读chunked response的： https://github.com/apache/incubator-brpc/blob/master/src/brpc/progressive_reader.h\r\n\r\n但此接口比较底层，获取events后需要append至一个IOBuf内然后按格式边界自行切割、使用\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146579231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146580394","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1146580394","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1146580394,"node_id":"IC_kwDOBhmkcs5EV22q","user":{"login":"bumingchun","id":20112368,"node_id":"MDQ6VXNlcjIwMTEyMzY4","avatar_url":"https://avatars.githubusercontent.com/u/20112368?v=4","gravatar_id":"","url":"https://api.github.com/users/bumingchun","html_url":"https://github.com/bumingchun","followers_url":"https://api.github.com/users/bumingchun/followers","following_url":"https://api.github.com/users/bumingchun/following{/other_user}","gists_url":"https://api.github.com/users/bumingchun/gists{/gist_id}","starred_url":"https://api.github.com/users/bumingchun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bumingchun/subscriptions","organizations_url":"https://api.github.com/users/bumingchun/orgs","repos_url":"https://api.github.com/users/bumingchun/repos","events_url":"https://api.github.com/users/bumingchun/events{/privacy}","received_events_url":"https://api.github.com/users/bumingchun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-04T09:54:21Z","updated_at":"2022-06-04T09:54:21Z","author_association":"CONTRIBUTOR","body":"> > > > 新代码计算expected_time的方式为(start_time + n * interval)，其中start_time是发第一个请求的时间，n是请求个数，并不是依赖上一次的访问时延，程序启动的时间就决定了每个请求发送的expected_time，这种实现方式中expected_time不受抖动影响。旧的实现方式中抖动是会累计的，本次抖动会影响一个窗口过后请求的发送时间，并一直传递，所以我才有“随程序运行时间变长，抖动出现的次数越来越多，发送地请求会越来越不均匀”的结论。\r\n> > > \r\n> > > \r\n> > > 新方法中一旦某段时间发送特别慢（如线程不被调度了），恢复后实际时间就会远大于预期时间，之后会不做任何sleep以最大速率连续发送，直到预期时间追上？这个其实timeq针对的问题，只受之前一段请求的影响。\r\n> > \r\n> > \r\n> > 有个改进的方法，每隔n个请求，重置expected_time = end_time + interval 或者限制expected_time不能落后当前时间太多(X)\r\n> > ```c++\r\n> > if (expected_time < end_time - X) {\r\n> >     expected_time = end_time - X;\r\n> > }\r\n> > ```\r\n> \r\n> 这个思路可以，相当于是我的实现方式和jmeter实现方式的折中。即可以尽量保证qps等于预设值，也可以避免大量请求以最高速率发送。\r\n\r\n我参照 @wwbmmm 的建议，对之前的实现进行了改进，避免end_time和expected_time相差很大时，导致连续发送的问题。当end_time - expected_time > max_tolerant_delay时，设置expected_time为end_time。大家帮忙看一下，目前的实现是否可行。 @wwbmmm   @guodongxiaren  @jamesge ","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146580394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146602315","html_url":"https://github.com/apache/brpc/issues/1775#issuecomment-1146602315","issue_url":"https://api.github.com/repos/apache/brpc/issues/1775","id":1146602315,"node_id":"IC_kwDOBhmkcs5EV8NL","user":{"login":"zengkui","id":1586033,"node_id":"MDQ6VXNlcjE1ODYwMzM=","avatar_url":"https://avatars.githubusercontent.com/u/1586033?v=4","gravatar_id":"","url":"https://api.github.com/users/zengkui","html_url":"https://github.com/zengkui","followers_url":"https://api.github.com/users/zengkui/followers","following_url":"https://api.github.com/users/zengkui/following{/other_user}","gists_url":"https://api.github.com/users/zengkui/gists{/gist_id}","starred_url":"https://api.github.com/users/zengkui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zengkui/subscriptions","organizations_url":"https://api.github.com/users/zengkui/orgs","repos_url":"https://api.github.com/users/zengkui/repos","events_url":"https://api.github.com/users/zengkui/events{/privacy}","received_events_url":"https://api.github.com/users/zengkui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-04T12:45:31Z","updated_at":"2022-06-04T12:45:31Z","author_association":"NONE","body":"> \r\n\r\n\r\n\r\n> 试试这个接口，这是专门用来读chunked response的： https://github.com/apache/incubator-brpc/blob/master/src/brpc/progressive_reader.h\r\n> \r\n> 但此接口比较底层，获取events后需要append至一个IOBuf内然后按格式边界自行切割、使用\r\n\r\n感谢回复。 我尝试用utest里的写了一个demo，可以正常运行了，效果和curl 的一致。 但是这个自行切割边界 确实是一个比较麻烦的事情。 需要切割的原因是event的频率很高的话 会有多个event的response  append到一起送给一次OnReadOnePart调用的参数里么？","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146602315/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146602662","html_url":"https://github.com/apache/brpc/issues/1775#issuecomment-1146602662","issue_url":"https://api.github.com/repos/apache/brpc/issues/1775","id":1146602662,"node_id":"IC_kwDOBhmkcs5EV8Sm","user":{"login":"jamesge","id":6566535,"node_id":"MDQ6VXNlcjY1NjY1MzU=","avatar_url":"https://avatars.githubusercontent.com/u/6566535?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesge","html_url":"https://github.com/jamesge","followers_url":"https://api.github.com/users/jamesge/followers","following_url":"https://api.github.com/users/jamesge/following{/other_user}","gists_url":"https://api.github.com/users/jamesge/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesge/subscriptions","organizations_url":"https://api.github.com/users/jamesge/orgs","repos_url":"https://api.github.com/users/jamesge/repos","events_url":"https://api.github.com/users/jamesge/events{/privacy}","received_events_url":"https://api.github.com/users/jamesge/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-04T12:47:57Z","updated_at":"2022-06-04T12:47:57Z","author_association":"CONTRIBUTOR","body":"能描述一下大致的格式，或是贴一段典型的数据么？IOBuf中可能有相对便利一些的方法。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146602662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146603690","html_url":"https://github.com/apache/brpc/issues/1775#issuecomment-1146603690","issue_url":"https://api.github.com/repos/apache/brpc/issues/1775","id":1146603690,"node_id":"IC_kwDOBhmkcs5EV8iq","user":{"login":"zengkui","id":1586033,"node_id":"MDQ6VXNlcjE1ODYwMzM=","avatar_url":"https://avatars.githubusercontent.com/u/1586033?v=4","gravatar_id":"","url":"https://api.github.com/users/zengkui","html_url":"https://github.com/zengkui","followers_url":"https://api.github.com/users/zengkui/followers","following_url":"https://api.github.com/users/zengkui/following{/other_user}","gists_url":"https://api.github.com/users/zengkui/gists{/gist_id}","starred_url":"https://api.github.com/users/zengkui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zengkui/subscriptions","organizations_url":"https://api.github.com/users/zengkui/orgs","repos_url":"https://api.github.com/users/zengkui/repos","events_url":"https://api.github.com/users/zengkui/events{/privacy}","received_events_url":"https://api.github.com/users/zengkui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-04T12:53:01Z","updated_at":"2022-06-05T08:06:52Z","author_association":"NONE","body":"> \r\n\r\n\r\n\r\n> 能描述一下大致的格式，或是贴一段典型的数据么？IOBuf中可能有相对便利一些的方法。\r\n\r\n以下是三个json string是三次事件的response，第一个create watch的response，后面两个是监听到了2次修改。 \r\n我现在直接把这个字符串直接做json load是没有边界问题的. 我看了下文档，只有消息体非常大的时候才有边界问题？\r\n```json\r\n{\"result\":{\"header\":{\"cluster_id\":\"14841639068965178418\",\"member_id\":\"10276657743932975437\",\"revision\":\"40\",\"raft_term\":\"10\"},\"created\":true}}\r\n\r\n{\"result\":{\"header\":{\"cluster_id\":\"14841639068965178418\",\"member_id\":\"10276657743932975437\",\"revision\":\"41\",\"raft_term\":\"10\"},\"events\":[{\"kv\":{\"key\":\"Zm9v\",\"create_revision\":\"4\",\"mod_revision\":\"41\",\"version\":\"38\",\"value\":\"Mw==\"}}]}}\r\n\r\n{\"result\":{\"header\":{\"cluster_id\":\"14841639068965178418\",\"member_id\":\"10276657743932975437\",\"revision\":\"42\",\"raft_term\":\"10\"},\"events\":[{\"kv\":{\"key\":\"Zm9v\",\"create_revision\":\"4\",\"mod_revision\":\"42\",\"version\":\"39\",\"value\":\"NA==\"}}]}}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146603690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146740914","html_url":"https://github.com/apache/brpc/issues/1385#issuecomment-1146740914","issue_url":"https://api.github.com/repos/apache/brpc/issues/1385","id":1146740914,"node_id":"IC_kwDOBhmkcs5EWeCy","user":{"login":"loongs-zhang","id":38336731,"node_id":"MDQ6VXNlcjM4MzM2NzMx","avatar_url":"https://avatars.githubusercontent.com/u/38336731?v=4","gravatar_id":"","url":"https://api.github.com/users/loongs-zhang","html_url":"https://github.com/loongs-zhang","followers_url":"https://api.github.com/users/loongs-zhang/followers","following_url":"https://api.github.com/users/loongs-zhang/following{/other_user}","gists_url":"https://api.github.com/users/loongs-zhang/gists{/gist_id}","starred_url":"https://api.github.com/users/loongs-zhang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loongs-zhang/subscriptions","organizations_url":"https://api.github.com/users/loongs-zhang/orgs","repos_url":"https://api.github.com/users/loongs-zhang/repos","events_url":"https://api.github.com/users/loongs-zhang/events{/privacy}","received_events_url":"https://api.github.com/users/loongs-zhang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-05T04:45:50Z","updated_at":"2022-06-05T04:45:50Z","author_association":"MEMBER","body":"同问","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146740914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146777734","html_url":"https://github.com/apache/brpc/issues/1775#issuecomment-1146777734","issue_url":"https://api.github.com/repos/apache/brpc/issues/1775","id":1146777734,"node_id":"IC_kwDOBhmkcs5EWnCG","user":{"login":"jamesge","id":6566535,"node_id":"MDQ6VXNlcjY1NjY1MzU=","avatar_url":"https://avatars.githubusercontent.com/u/6566535?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesge","html_url":"https://github.com/jamesge","followers_url":"https://api.github.com/users/jamesge/followers","following_url":"https://api.github.com/users/jamesge/following{/other_user}","gists_url":"https://api.github.com/users/jamesge/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesge/subscriptions","organizations_url":"https://api.github.com/users/jamesge/orgs","repos_url":"https://api.github.com/users/jamesge/repos","events_url":"https://api.github.com/users/jamesge/events{/privacy}","received_events_url":"https://api.github.com/users/jamesge/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-05T10:11:02Z","updated_at":"2022-06-05T10:11:02Z","author_association":"CONTRIBUTOR","body":"> 我现在直接把这个字符串直接做json load是没有边界问题的. 我看了下文档，只有消息体非常大的时候才有边界问题？\r\n\r\n这个就属于理论上是错的，但并不是每时每刻都会发生。如果是线上服务，还是建议做正确了比较好，否则追查偶现的bug会耗费更多的时间。\r\n\r\nbrpc中带一个json2pb，支持用pb message来解析json，之前要求输入只包含一个json，现在我更新了下，可以支持多个json了（需要把Json2PbOptions.allow_remaining_bytes_after_parsing设为true后，默认false），例子可以参考https://github.com/apache/incubator-brpc/blob/master/test/brpc_protobuf_json_unittest.cpp#L1563\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146777734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146780181","html_url":"https://github.com/apache/brpc/issues/1775#issuecomment-1146780181","issue_url":"https://api.github.com/repos/apache/brpc/issues/1775","id":1146780181,"node_id":"IC_kwDOBhmkcs5EWnoV","user":{"login":"zengkui","id":1586033,"node_id":"MDQ6VXNlcjE1ODYwMzM=","avatar_url":"https://avatars.githubusercontent.com/u/1586033?v=4","gravatar_id":"","url":"https://api.github.com/users/zengkui","html_url":"https://github.com/zengkui","followers_url":"https://api.github.com/users/zengkui/followers","following_url":"https://api.github.com/users/zengkui/following{/other_user}","gists_url":"https://api.github.com/users/zengkui/gists{/gist_id}","starred_url":"https://api.github.com/users/zengkui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zengkui/subscriptions","organizations_url":"https://api.github.com/users/zengkui/orgs","repos_url":"https://api.github.com/users/zengkui/repos","events_url":"https://api.github.com/users/zengkui/events{/privacy}","received_events_url":"https://api.github.com/users/zengkui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-05T10:29:38Z","updated_at":"2022-06-05T10:29:38Z","author_association":"NONE","body":"\r\n> brpc中带一个json2pb，支持用pb message来解析json，之前要求输入只包含一个json，现在我更新了下，可以支持多个json了（需要把Json2PbOptions.allow_remaining_bytes_after_parsing设为true后，默认false），例子可以参考https://github.com/apache/incubator-brpc/blob/master/test/brpc_protobuf_json_unittest.cpp#L1563\r\n\r\n这个理论错误只会出现多个完整的json string在一个response里，不会出现残缺部分数据的情况吧？ ","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146780181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146788148","html_url":"https://github.com/apache/brpc/issues/1775#issuecomment-1146788148","issue_url":"https://api.github.com/repos/apache/brpc/issues/1775","id":1146788148,"node_id":"IC_kwDOBhmkcs5EWpk0","user":{"login":"jamesge","id":6566535,"node_id":"MDQ6VXNlcjY1NjY1MzU=","avatar_url":"https://avatars.githubusercontent.com/u/6566535?v=4","gravatar_id":"","url":"https://api.github.com/users/jamesge","html_url":"https://github.com/jamesge","followers_url":"https://api.github.com/users/jamesge/followers","following_url":"https://api.github.com/users/jamesge/following{/other_user}","gists_url":"https://api.github.com/users/jamesge/gists{/gist_id}","starred_url":"https://api.github.com/users/jamesge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamesge/subscriptions","organizations_url":"https://api.github.com/users/jamesge/orgs","repos_url":"https://api.github.com/users/jamesge/repos","events_url":"https://api.github.com/users/jamesge/events{/privacy}","received_events_url":"https://api.github.com/users/jamesge/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-05T11:33:57Z","updated_at":"2022-06-05T11:34:08Z","author_association":"CONTRIBUTOR","body":"> 这个理论错误只会出现多个完整的json string在一个response里，不会出现残缺部分数据的情况吧？\r\n\r\n不是，这里的数据就读自对应http链接的socket中，任何一种情况都可能出现，这是没有保证的，特别是出现中断(signal)和网络抖动时。只是在很多时候，数据已经在那了，且正好是一份。但如果是一个7*24运行的线上系统，出问题的概率应该就比较高了。\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146788148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146814274","html_url":"https://github.com/apache/brpc/issues/1286#issuecomment-1146814274","issue_url":"https://api.github.com/repos/apache/brpc/issues/1286","id":1146814274,"node_id":"IC_kwDOBhmkcs5EWv9C","user":{"login":"Huixxi","id":21335093,"node_id":"MDQ6VXNlcjIxMzM1MDkz","avatar_url":"https://avatars.githubusercontent.com/u/21335093?v=4","gravatar_id":"","url":"https://api.github.com/users/Huixxi","html_url":"https://github.com/Huixxi","followers_url":"https://api.github.com/users/Huixxi/followers","following_url":"https://api.github.com/users/Huixxi/following{/other_user}","gists_url":"https://api.github.com/users/Huixxi/gists{/gist_id}","starred_url":"https://api.github.com/users/Huixxi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Huixxi/subscriptions","organizations_url":"https://api.github.com/users/Huixxi/orgs","repos_url":"https://api.github.com/users/Huixxi/repos","events_url":"https://api.github.com/users/Huixxi/events{/privacy}","received_events_url":"https://api.github.com/users/Huixxi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-05T14:24:46Z","updated_at":"2022-06-05T14:24:46Z","author_association":"CONTRIBUTOR","body":"> > https://blog.csdn.net/xiang_shao344/article/details/116017228\r\n> > 是getopt的问题，在Mac上的用法和linux不一样\r\n> \r\n> export PATH=\"/usr/local/opt/gnu-getopt/bin:$PATH\" 替换一下就好了\r\n\r\n为啥我export之后没用啊，还是提示。。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146814274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146814881","html_url":"https://github.com/apache/brpc/issues/1775#issuecomment-1146814881","issue_url":"https://api.github.com/repos/apache/brpc/issues/1775","id":1146814881,"node_id":"IC_kwDOBhmkcs5EWwGh","user":{"login":"zengkui","id":1586033,"node_id":"MDQ6VXNlcjE1ODYwMzM=","avatar_url":"https://avatars.githubusercontent.com/u/1586033?v=4","gravatar_id":"","url":"https://api.github.com/users/zengkui","html_url":"https://github.com/zengkui","followers_url":"https://api.github.com/users/zengkui/followers","following_url":"https://api.github.com/users/zengkui/following{/other_user}","gists_url":"https://api.github.com/users/zengkui/gists{/gist_id}","starred_url":"https://api.github.com/users/zengkui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zengkui/subscriptions","organizations_url":"https://api.github.com/users/zengkui/orgs","repos_url":"https://api.github.com/users/zengkui/repos","events_url":"https://api.github.com/users/zengkui/events{/privacy}","received_events_url":"https://api.github.com/users/zengkui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-05T14:28:49Z","updated_at":"2022-06-05T14:28:49Z","author_association":"NONE","body":"> > 这个理论错误只会出现多个完整的json string在一个response里，不会出现残缺部分数据的情况吧？\r\n> \r\n> 不是，这里的数据就读自对应http链接的socket中，任何一种情况都可能出现，这是没有保证的，特别是出现中断(signal)和网络抖动时。只是在很多时候，数据已经在那了，且正好是一份。但如果是一个7*24运行的线上系统，出问题的概率应该就比较高了。\r\n\r\n谢谢，etcd的这个监听时间的功能基本没啥问题了。但是实际上watch的服务定义如下，不知道这个cancel 操作怎么才能通过BRPC发送到server端？ 我的理解这是一个类似stream rpc的功能，用brpc的http client似乎做不到，只能在需要cancel的时候通过另外一个连接来发送？ 类似的keep alive的操作似乎也只能采用一个专用线程来间隔发送心跳信息了。 \r\n```protobuf\r\n  // Watch watches for events happening or that have happened. Both input and output\r\n  // are streams; the input stream is for creating and canceling watchers and the output\r\n  // stream sends events. One watch RPC can watch on multiple key ranges, streaming events\r\n  // for several watches at once. The entire event history can be watched starting from the\r\n  // last compaction revision.\r\n  rpc Watch(stream WatchRequest) returns (stream WatchResponse) {\r\n      option (google.api.http) = {\r\n        post: \"/v3/watch\"\r\n        body: \"*\"\r\n    };\r\n  }\r\n}\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146814881/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146819226","html_url":"https://github.com/apache/brpc/issues/1286#issuecomment-1146819226","issue_url":"https://api.github.com/repos/apache/brpc/issues/1286","id":1146819226,"node_id":"IC_kwDOBhmkcs5EWxKa","user":{"login":"Huixxi","id":21335093,"node_id":"MDQ6VXNlcjIxMzM1MDkz","avatar_url":"https://avatars.githubusercontent.com/u/21335093?v=4","gravatar_id":"","url":"https://api.github.com/users/Huixxi","html_url":"https://github.com/Huixxi","followers_url":"https://api.github.com/users/Huixxi/followers","following_url":"https://api.github.com/users/Huixxi/following{/other_user}","gists_url":"https://api.github.com/users/Huixxi/gists{/gist_id}","starred_url":"https://api.github.com/users/Huixxi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Huixxi/subscriptions","organizations_url":"https://api.github.com/users/Huixxi/orgs","repos_url":"https://api.github.com/users/Huixxi/repos","events_url":"https://api.github.com/users/Huixxi/events{/privacy}","received_events_url":"https://api.github.com/users/Huixxi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-05T14:55:33Z","updated_at":"2022-06-05T14:55:33Z","author_association":"CONTRIBUTOR","body":"> 编译的时候 发现 `gnu-getopt must be installed and used` 但是gnu-getopt 已经装了 ...\r\n\r\n重启电脑可以解决getopt获取不到版本的问题","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146819226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146820388","html_url":"https://github.com/apache/brpc/issues/1675#issuecomment-1146820388","issue_url":"https://api.github.com/repos/apache/brpc/issues/1675","id":1146820388,"node_id":"IC_kwDOBhmkcs5EWxck","user":{"login":"Overcautious","id":48123018,"node_id":"MDQ6VXNlcjQ4MTIzMDE4","avatar_url":"https://avatars.githubusercontent.com/u/48123018?v=4","gravatar_id":"","url":"https://api.github.com/users/Overcautious","html_url":"https://github.com/Overcautious","followers_url":"https://api.github.com/users/Overcautious/followers","following_url":"https://api.github.com/users/Overcautious/following{/other_user}","gists_url":"https://api.github.com/users/Overcautious/gists{/gist_id}","starred_url":"https://api.github.com/users/Overcautious/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Overcautious/subscriptions","organizations_url":"https://api.github.com/users/Overcautious/orgs","repos_url":"https://api.github.com/users/Overcautious/repos","events_url":"https://api.github.com/users/Overcautious/events{/privacy}","received_events_url":"https://api.github.com/users/Overcautious/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-05T15:02:42Z","updated_at":"2022-06-05T15:02:42Z","author_association":"NONE","body":"请问解决了吗","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146820388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146983612","html_url":"https://github.com/apache/brpc/issues/1773#issuecomment-1146983612","issue_url":"https://api.github.com/repos/apache/brpc/issues/1773","id":1146983612,"node_id":"IC_kwDOBhmkcs5EXZS8","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T03:00:37Z","updated_at":"2022-06-06T03:00:37Z","author_association":"CONTRIBUTOR","body":"太赞了，能够定位出这个问题，非常不容易","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146983612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146994768","html_url":"https://github.com/apache/brpc/issues/1775#issuecomment-1146994768","issue_url":"https://api.github.com/repos/apache/brpc/issues/1775","id":1146994768,"node_id":"IC_kwDOBhmkcs5EXcBQ","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T03:24:04Z","updated_at":"2022-06-06T03:24:04Z","author_association":"CONTRIBUTOR","body":"Related: #1589","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146994768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146997264","html_url":"https://github.com/apache/brpc/pull/1763#issuecomment-1146997264","issue_url":"https://api.github.com/repos/apache/brpc/issues/1763","id":1146997264,"node_id":"IC_kwDOBhmkcs5EXcoQ","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T03:29:29Z","updated_at":"2022-06-06T03:29:29Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1146997264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147002302","html_url":"https://github.com/apache/brpc/pull/1774#issuecomment-1147002302","issue_url":"https://api.github.com/repos/apache/brpc/issues/1774","id":1147002302,"node_id":"IC_kwDOBhmkcs5EXd2-","user":{"login":"zhaodongzhi","id":6293650,"node_id":"MDQ6VXNlcjYyOTM2NTA=","avatar_url":"https://avatars.githubusercontent.com/u/6293650?v=4","gravatar_id":"","url":"https://api.github.com/users/zhaodongzhi","html_url":"https://github.com/zhaodongzhi","followers_url":"https://api.github.com/users/zhaodongzhi/followers","following_url":"https://api.github.com/users/zhaodongzhi/following{/other_user}","gists_url":"https://api.github.com/users/zhaodongzhi/gists{/gist_id}","starred_url":"https://api.github.com/users/zhaodongzhi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhaodongzhi/subscriptions","organizations_url":"https://api.github.com/users/zhaodongzhi/orgs","repos_url":"https://api.github.com/users/zhaodongzhi/repos","events_url":"https://api.github.com/users/zhaodongzhi/events{/privacy}","received_events_url":"https://api.github.com/users/zhaodongzhi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T03:40:43Z","updated_at":"2022-06-06T03:40:43Z","author_association":"NONE","body":"解决方案这里采用增加mutex的方式其实和brpc整体很多无锁的设计有点不太搭。。。。最初也考虑过一个无锁的方式但是发现比较麻烦\r\n本质上来说_recycle_flag为true的时候socket不应该被获取到\r\n最初的想法是将Socket::Address和Socket::AddressFailedAsWell中\r\nif (ver1 == VersionOfSocketId(id)) 返回有效socket ptr\r\n改为\r\nif (ver1 == VersionOfSocketId(id) && !m->_recycle_flag) 才返回有效socket ptr【AddressFailedAsWell中再加一个对if (ver1 == VersionOfSocketId(id) + 1)的处理】\r\n使得上述场景下1，2之间其他request无法通过address获取到socket，也就不会再进入SetFailed产生这个少释放一次ref count的问题了\r\n但是这种做法带来的问题是，部分恢复逻辑依赖通过Socket::AddressFailedAsWell获取socket ptr，如果_recycle_flag为true的时候也让Socket::AddressFailedAsWell获取不到有效的ptr同样会导致socket无法恢复，但如果允许Socket::AddressFailedAsWell忽略_recycle_flag，部分代码中有存在类似\r\nSocketUniquePtr ptr;\r\nconst int rc = Socket::AddressFailedAsWell(handle, &ptr);\r\nptr->ReleaseAdditionalReference();\r\n的逻辑（例如ChannelBalancer::RemoveAndDestroyChannel），还是会有引发这个问题的风险\r\n\r\n可以看下是否还有更优雅的不使用mutex的解决方案？","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147002302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147009406","html_url":"https://github.com/apache/brpc/pull/1774#issuecomment-1147009406","issue_url":"https://api.github.com/repos/apache/brpc/issues/1774","id":1147009406,"node_id":"IC_kwDOBhmkcs5EXfl-","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T03:59:14Z","updated_at":"2022-06-06T03:59:14Z","author_association":"CONTRIBUTOR","body":"> if (ver1 == VersionOfSocketId(id)) 返回有效socket ptr\r\n> 改为\r\n> if (ver1 == VersionOfSocketId(id) && !m->_recycle_flag) 才返回有效socket ptr\r\n\r\nAddress是hot path，加了影响性能。而ReleaseAddtionalReference和Revive相对没有那么hot （除非是短连接），加锁影响小一些。\r\n\r\n还有一种解决方案是让recycle_flag有3个值：正常、Revive中、已释放。如果ReleaseAddtionalReference发现状态是“Revive中”就sched_yield一下，直到遇到其它两个状态再继续。因为这种情况发生概率很小，这么改对性能几乎不会有影响。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147009406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147038977","html_url":"https://github.com/apache/brpc/pull/1774#issuecomment-1147038977","issue_url":"https://api.github.com/repos/apache/brpc/issues/1774","id":1147038977,"node_id":"IC_kwDOBhmkcs5EXm0B","user":{"login":"zhaodongzhi","id":6293650,"node_id":"MDQ6VXNlcjYyOTM2NTA=","avatar_url":"https://avatars.githubusercontent.com/u/6293650?v=4","gravatar_id":"","url":"https://api.github.com/users/zhaodongzhi","html_url":"https://github.com/zhaodongzhi","followers_url":"https://api.github.com/users/zhaodongzhi/followers","following_url":"https://api.github.com/users/zhaodongzhi/following{/other_user}","gists_url":"https://api.github.com/users/zhaodongzhi/gists{/gist_id}","starred_url":"https://api.github.com/users/zhaodongzhi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhaodongzhi/subscriptions","organizations_url":"https://api.github.com/users/zhaodongzhi/orgs","repos_url":"https://api.github.com/users/zhaodongzhi/repos","events_url":"https://api.github.com/users/zhaodongzhi/events{/privacy}","received_events_url":"https://api.github.com/users/zhaodongzhi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T04:44:57Z","updated_at":"2022-06-06T04:44:57Z","author_association":"NONE","body":"> > if (ver1 == VersionOfSocketId(id)) 返回有效socket ptr\r\n> > 改为\r\n> > if (ver1 == VersionOfSocketId(id) && !m->_recycle_flag) 才返回有效socket ptr\r\n> \r\n> Address是hot path，加了影响性能。而ReleaseAddtionalReference和Revive相对没有那么hot （除非是短连接），加锁影响小一些。\r\n> \r\n> 还有一种解决方案是让recycle_flag有3个值：正常、Revive中、已释放。如果ReleaseAddtionalReference发现状态是“Revive中”就sched_yield一下，直到遇到其它两个状态再继续。因为这种情况发生概率很小，这么改对性能几乎不会有影响。\r\n\r\n嗯嗯，我也是考虑到这两个函数调用频率比较低，所以最后还是选择了加锁的解决方式，相对来说会比较直观简单些","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147038977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147083742","html_url":"https://github.com/apache/brpc/issues/1382#issuecomment-1147083742","issue_url":"https://api.github.com/repos/apache/brpc/issues/1382","id":1147083742,"node_id":"IC_kwDOBhmkcs5EXxve","user":{"login":"githubzilla","id":10080336,"node_id":"MDQ6VXNlcjEwMDgwMzM2","avatar_url":"https://avatars.githubusercontent.com/u/10080336?v=4","gravatar_id":"","url":"https://api.github.com/users/githubzilla","html_url":"https://github.com/githubzilla","followers_url":"https://api.github.com/users/githubzilla/followers","following_url":"https://api.github.com/users/githubzilla/following{/other_user}","gists_url":"https://api.github.com/users/githubzilla/gists{/gist_id}","starred_url":"https://api.github.com/users/githubzilla/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/githubzilla/subscriptions","organizations_url":"https://api.github.com/users/githubzilla/orgs","repos_url":"https://api.github.com/users/githubzilla/repos","events_url":"https://api.github.com/users/githubzilla/events{/privacy}","received_events_url":"https://api.github.com/users/githubzilla/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T06:10:32Z","updated_at":"2022-06-06T06:10:32Z","author_association":"NONE","body":"同问，brpc作为我们的依赖，不支持M1的话，开发环境需要换成Windows机器了，或者换掉brpc，太难了。","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147083742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147107736","html_url":"https://github.com/apache/brpc/pull/1777#issuecomment-1147107736","issue_url":"https://api.github.com/repos/apache/brpc/issues/1777","id":1147107736,"node_id":"IC_kwDOBhmkcs5EX3mY","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T06:48:40Z","updated_at":"2022-06-06T06:48:40Z","author_association":"CONTRIBUTOR","body":"Thanks for reporting the issue and submitting this PR!\r\nI think it's better to add some comments to explain the code, or add some test cases, to prevent future modification from breaking this case.","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147107736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147108895","html_url":"https://github.com/apache/brpc/issues/1771#issuecomment-1147108895","issue_url":"https://api.github.com/repos/apache/brpc/issues/1771","id":1147108895,"node_id":"IC_kwDOBhmkcs5EX34f","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T06:50:32Z","updated_at":"2022-06-06T06:50:32Z","author_association":"CONTRIBUTOR","body":"同 #1689","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147108895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147109063","html_url":"https://github.com/apache/brpc/issues/1771#issuecomment-1147109063","issue_url":"https://api.github.com/repos/apache/brpc/issues/1771","id":1147109063,"node_id":"IC_kwDOBhmkcs5EX37H","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T06:50:48Z","updated_at":"2022-06-06T06:50:48Z","author_association":"CONTRIBUTOR","body":"可以试试这个PR：https://github.com/apache/incubator-brpc/pull/1657","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147109063/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147157667","html_url":"https://github.com/apache/brpc/issues/1382#issuecomment-1147157667","issue_url":"https://api.github.com/repos/apache/brpc/issues/1382","id":1147157667,"node_id":"IC_kwDOBhmkcs5EYDyj","user":{"login":"Huixxi","id":21335093,"node_id":"MDQ6VXNlcjIxMzM1MDkz","avatar_url":"https://avatars.githubusercontent.com/u/21335093?v=4","gravatar_id":"","url":"https://api.github.com/users/Huixxi","html_url":"https://github.com/Huixxi","followers_url":"https://api.github.com/users/Huixxi/followers","following_url":"https://api.github.com/users/Huixxi/following{/other_user}","gists_url":"https://api.github.com/users/Huixxi/gists{/gist_id}","starred_url":"https://api.github.com/users/Huixxi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Huixxi/subscriptions","organizations_url":"https://api.github.com/users/Huixxi/orgs","repos_url":"https://api.github.com/users/Huixxi/repos","events_url":"https://api.github.com/users/Huixxi/events{/privacy}","received_events_url":"https://api.github.com/users/Huixxi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T07:56:02Z","updated_at":"2022-06-06T07:56:02Z","author_association":"CONTRIBUTOR","body":"会争取近期修复这个问题","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147157667/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147178770","html_url":"https://github.com/apache/brpc/pull/1768#issuecomment-1147178770","issue_url":"https://api.github.com/repos/apache/brpc/issues/1768","id":1147178770,"node_id":"IC_kwDOBhmkcs5EYI8S","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T08:18:22Z","updated_at":"2022-06-06T08:18:22Z","author_association":"CONTRIBUTOR","body":"1. 这个PR把with_auth强行从bool改成int，看起来太难受了。要么改个名字（比如auth_count），要么加个flag（比如with_selectdb）。\r\n2. 改了3个ppt文件，是改了什么内容呢？","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147178770/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147229840","html_url":"https://github.com/apache/brpc/issues/1771#issuecomment-1147229840","issue_url":"https://api.github.com/repos/apache/brpc/issues/1771","id":1147229840,"node_id":"IC_kwDOBhmkcs5EYVaQ","user":{"login":"372046933","id":1251167,"node_id":"MDQ6VXNlcjEyNTExNjc=","avatar_url":"https://avatars.githubusercontent.com/u/1251167?v=4","gravatar_id":"","url":"https://api.github.com/users/372046933","html_url":"https://github.com/372046933","followers_url":"https://api.github.com/users/372046933/followers","following_url":"https://api.github.com/users/372046933/following{/other_user}","gists_url":"https://api.github.com/users/372046933/gists{/gist_id}","starred_url":"https://api.github.com/users/372046933/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/372046933/subscriptions","organizations_url":"https://api.github.com/users/372046933/orgs","repos_url":"https://api.github.com/users/372046933/repos","events_url":"https://api.github.com/users/372046933/events{/privacy}","received_events_url":"https://api.github.com/users/372046933/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T09:07:58Z","updated_at":"2022-06-06T09:07:58Z","author_association":"CONTRIBUTOR","body":"希望https://github.com/apache/incubator-brpc/pull/1657 早点合并吧","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147229840/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147317762","html_url":"https://github.com/apache/brpc/issues/1772#issuecomment-1147317762","issue_url":"https://api.github.com/repos/apache/brpc/issues/1772","id":1147317762,"node_id":"IC_kwDOBhmkcs5EYq4C","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T10:52:24Z","updated_at":"2022-06-06T10:52:24Z","author_association":"CONTRIBUTOR","body":"Acceptor::StartAccept中对_map_mutex的锁粒度太大了，如果在Socket::Create的期间释放锁，应该就不会死锁了","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147317762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147381819","html_url":"https://github.com/apache/brpc/issues/1693#issuecomment-1147381819","issue_url":"https://api.github.com/repos/apache/brpc/issues/1693","id":1147381819,"node_id":"IC_kwDOBhmkcs5EY6g7","user":{"login":"baiwfg2","id":5157680,"node_id":"MDQ6VXNlcjUxNTc2ODA=","avatar_url":"https://avatars.githubusercontent.com/u/5157680?v=4","gravatar_id":"","url":"https://api.github.com/users/baiwfg2","html_url":"https://github.com/baiwfg2","followers_url":"https://api.github.com/users/baiwfg2/followers","following_url":"https://api.github.com/users/baiwfg2/following{/other_user}","gists_url":"https://api.github.com/users/baiwfg2/gists{/gist_id}","starred_url":"https://api.github.com/users/baiwfg2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baiwfg2/subscriptions","organizations_url":"https://api.github.com/users/baiwfg2/orgs","repos_url":"https://api.github.com/users/baiwfg2/repos","events_url":"https://api.github.com/users/baiwfg2/events{/privacy}","received_events_url":"https://api.github.com/users/baiwfg2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T12:13:18Z","updated_at":"2022-06-06T12:13:18Z","author_association":"NONE","body":"> 有一个trick的方法，可以把`-D__const__=` 改成 `-D__const__=__unused__` 找了半天似乎就这个unused的attribute影响最小： <img alt=\"60f18635e94211fdb3f3c1ef3e1a7b43\" width=\"1132\" src=\"https://user-images.githubusercontent.com/3894631/162140725-d0cea1d6-3e71-4f75-8423-da50195c6e76.png\">\r\n\r\n按照这个做法后，出现\r\n```\r\nIn file included from /data/incubator-brpc/bld/incubator-brpc-1.1.0/src/bthread/errno.h:26,                                                                                          \r\n                 from /data/incubator-brpc/bld/incubator-brpc-1.1.0/src/brpc/log.h:22,                                                                                               \r\n                 from /data/incubator-brpc/bld/incubator-brpc-1.1.0/src/brpc/ts.cpp:37:                                                                                              \r\n/data/incubator-brpc/bld/incubator-brpc-1.1.0/src/butil/errno.h:25: warning: \"__const__\" redefined\r\n```\r\n应该没关系吧","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147381819/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147595393","html_url":"https://github.com/apache/brpc/pull/1768#issuecomment-1147595393","issue_url":"https://api.github.com/repos/apache/brpc/issues/1768","id":1147595393,"node_id":"IC_kwDOBhmkcs5EZuqB","user":{"login":"zwkno1","id":6861609,"node_id":"MDQ6VXNlcjY4NjE2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/6861609?v=4","gravatar_id":"","url":"https://api.github.com/users/zwkno1","html_url":"https://github.com/zwkno1","followers_url":"https://api.github.com/users/zwkno1/followers","following_url":"https://api.github.com/users/zwkno1/following{/other_user}","gists_url":"https://api.github.com/users/zwkno1/gists{/gist_id}","starred_url":"https://api.github.com/users/zwkno1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zwkno1/subscriptions","organizations_url":"https://api.github.com/users/zwkno1/orgs","repos_url":"https://api.github.com/users/zwkno1/repos","events_url":"https://api.github.com/users/zwkno1/events{/privacy}","received_events_url":"https://api.github.com/users/zwkno1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T15:42:52Z","updated_at":"2022-06-06T15:42:52Z","author_association":"CONTRIBUTOR","body":"> 1. 这个PR把with_auth强行从bool改成int，看起来太难受了。要么改个名字（比如auth_count），要么加个flag（比如with_selectdb）。\r\n> 2. 改了3个ppt文件，是改了什么内容呢？\r\n\r\n\r\n改了个名 auth_flags, doc下ppt的都恢复了\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147595393/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147812179","html_url":"https://github.com/apache/brpc/issues/1778#issuecomment-1147812179","issue_url":"https://api.github.com/repos/apache/brpc/issues/1778","id":1147812179,"node_id":"IC_kwDOBhmkcs5EajlT","user":{"login":"zyearn","id":4475779,"node_id":"MDQ6VXNlcjQ0NzU3Nzk=","avatar_url":"https://avatars.githubusercontent.com/u/4475779?v=4","gravatar_id":"","url":"https://api.github.com/users/zyearn","html_url":"https://github.com/zyearn","followers_url":"https://api.github.com/users/zyearn/followers","following_url":"https://api.github.com/users/zyearn/following{/other_user}","gists_url":"https://api.github.com/users/zyearn/gists{/gist_id}","starred_url":"https://api.github.com/users/zyearn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zyearn/subscriptions","organizations_url":"https://api.github.com/users/zyearn/orgs","repos_url":"https://api.github.com/users/zyearn/repos","events_url":"https://api.github.com/users/zyearn/events{/privacy}","received_events_url":"https://api.github.com/users/zyearn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T19:20:58Z","updated_at":"2022-06-06T19:20:58Z","author_association":"MEMBER","body":"这个死锁的解决办法是让RemoveStream只做函数名表明的意思，而不继续调用DeferWindowUpdate。感谢反馈，修复在https://github.com/apache/incubator-brpc/pull/1781","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1147812179/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1148250929","html_url":"https://github.com/apache/brpc/issues/1782#issuecomment-1148250929","issue_url":"https://api.github.com/repos/apache/brpc/issues/1782","id":1148250929,"node_id":"IC_kwDOBhmkcs5EcOsx","user":{"login":"LeetcodeCourageK","id":11909799,"node_id":"MDQ6VXNlcjExOTA5Nzk5","avatar_url":"https://avatars.githubusercontent.com/u/11909799?v=4","gravatar_id":"","url":"https://api.github.com/users/LeetcodeCourageK","html_url":"https://github.com/LeetcodeCourageK","followers_url":"https://api.github.com/users/LeetcodeCourageK/followers","following_url":"https://api.github.com/users/LeetcodeCourageK/following{/other_user}","gists_url":"https://api.github.com/users/LeetcodeCourageK/gists{/gist_id}","starred_url":"https://api.github.com/users/LeetcodeCourageK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LeetcodeCourageK/subscriptions","organizations_url":"https://api.github.com/users/LeetcodeCourageK/orgs","repos_url":"https://api.github.com/users/LeetcodeCourageK/repos","events_url":"https://api.github.com/users/LeetcodeCourageK/events{/privacy}","received_events_url":"https://api.github.com/users/LeetcodeCourageK/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-07T06:31:42Z","updated_at":"2022-06-07T06:31:42Z","author_association":"NONE","body":"        if (!sampling_range) {\r\n            make_contention_site_invalid(&entry.csite);\r\n            return sys_pthread_mutex_lock(mutex);  // 在这一行出现报错\r\n        }","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1148250929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1148272928","html_url":"https://github.com/apache/brpc/issues/1693#issuecomment-1148272928","issue_url":"https://api.github.com/repos/apache/brpc/issues/1693","id":1148272928,"node_id":"IC_kwDOBhmkcs5EcUEg","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-07T07:00:50Z","updated_at":"2022-06-07T07:00:50Z","author_association":"CONTRIBUTOR","body":"> > 有一个trick的方法，可以把`-D__const__=` 改成 `-D__const__=__unused__` 找了半天似乎就这个unused的attribute影响最小： <img alt=\"60f18635e94211fdb3f3c1ef3e1a7b43\" width=\"1132\" src=\"https://user-images.githubusercontent.com/3894631/162140725-d0cea1d6-3e71-4f75-8423-da50195c6e76.png\">\r\n> \r\n> 按照这个做法后，出现\r\n> \r\n> ```\r\n> In file included from /data/incubator-brpc/bld/incubator-brpc-1.1.0/src/bthread/errno.h:26,                                                                                          \r\n>                  from /data/incubator-brpc/bld/incubator-brpc-1.1.0/src/brpc/log.h:22,                                                                                               \r\n>                  from /data/incubator-brpc/bld/incubator-brpc-1.1.0/src/brpc/ts.cpp:37:                                                                                              \r\n> /data/incubator-brpc/bld/incubator-brpc-1.1.0/src/butil/errno.h:25: warning: \"__const__\" redefined\r\n> ```\r\n> \r\n> 应该没关系吧\r\n\r\n@baiwfg2 试试 #1783 , 已修复warning","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1148272928/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1148273220","html_url":"https://github.com/apache/brpc/issues/1779#issuecomment-1148273220","issue_url":"https://api.github.com/repos/apache/brpc/issues/1779","id":1148273220,"node_id":"IC_kwDOBhmkcs5EcUJE","user":{"login":"wwbmmm","id":3894631,"node_id":"MDQ6VXNlcjM4OTQ2MzE=","avatar_url":"https://avatars.githubusercontent.com/u/3894631?v=4","gravatar_id":"","url":"https://api.github.com/users/wwbmmm","html_url":"https://github.com/wwbmmm","followers_url":"https://api.github.com/users/wwbmmm/followers","following_url":"https://api.github.com/users/wwbmmm/following{/other_user}","gists_url":"https://api.github.com/users/wwbmmm/gists{/gist_id}","starred_url":"https://api.github.com/users/wwbmmm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wwbmmm/subscriptions","organizations_url":"https://api.github.com/users/wwbmmm/orgs","repos_url":"https://api.github.com/users/wwbmmm/repos","events_url":"https://api.github.com/users/wwbmmm/events{/privacy}","received_events_url":"https://api.github.com/users/wwbmmm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-07T07:01:13Z","updated_at":"2022-06-07T07:01:13Z","author_association":"CONTRIBUTOR","body":"@baiwfg2 试试 https://github.com/apache/incubator-brpc/pull/1784","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1148273220/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1148302067","html_url":"https://github.com/apache/brpc/issues/1779#issuecomment-1148302067","issue_url":"https://api.github.com/repos/apache/brpc/issues/1779","id":1148302067,"node_id":"IC_kwDOBhmkcs5EcbLz","user":{"login":"baiwfg2","id":5157680,"node_id":"MDQ6VXNlcjUxNTc2ODA=","avatar_url":"https://avatars.githubusercontent.com/u/5157680?v=4","gravatar_id":"","url":"https://api.github.com/users/baiwfg2","html_url":"https://github.com/baiwfg2","followers_url":"https://api.github.com/users/baiwfg2/followers","following_url":"https://api.github.com/users/baiwfg2/following{/other_user}","gists_url":"https://api.github.com/users/baiwfg2/gists{/gist_id}","starred_url":"https://api.github.com/users/baiwfg2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baiwfg2/subscriptions","organizations_url":"https://api.github.com/users/baiwfg2/orgs","repos_url":"https://api.github.com/users/baiwfg2/repos","events_url":"https://api.github.com/users/baiwfg2/events{/privacy}","received_events_url":"https://api.github.com/users/baiwfg2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-07T07:31:38Z","updated_at":"2022-06-07T07:31:38Z","author_association":"NONE","body":"管用","reactions":{"url":"https://api.github.com/repos/apache/brpc/issues/comments/1148302067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]