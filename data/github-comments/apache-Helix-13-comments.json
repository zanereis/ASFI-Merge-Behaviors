[{"url":"https://api.github.com/repos/apache/helix/issues/comments/646915788","html_url":"https://github.com/apache/helix/issues/767#issuecomment-646915788","issue_url":"https://api.github.com/repos/apache/helix/issues/767","id":646915788,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NjkxNTc4OA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-20T01:28:23Z","updated_at":"2020-06-20T01:28:23Z","author_association":"CONTRIBUTOR","body":"There is another concurrent modification issue found.\r\n\r\n1. Regular GC task fails due to concurrent list modification and the stale versions are not removed at all.\r\n2. If, by coincident, there is newer version in the list other then the current version, then because of the modification of the list inside the loop, the final element (the newer version) won't be filtered but being left in the to-be-removed list. Then the GC task removes the most recent version. For example,\r\n  a) Input, current version \"2\"\r\n  b) Children = [1, 2, 3]\r\n  c) The task avoids checking \"2\", so the list for loop is: [1, 3]\r\n  d) When check \"1\", it is removed from the list. So the list becomes [3]. Then the loop ends, because the first item has already been looped from the for iteration perspective.\r\n  e) The version to be removed is \"3\"!","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/646915788/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/646917678","html_url":"https://github.com/apache/helix/pull/1043#issuecomment-646917678","issue_url":"https://api.github.com/repos/apache/helix/issues/1043","id":646917678,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NjkxNzY3OA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-20T01:40:26Z","updated_at":"2020-06-20T01:40:26Z","author_association":"CONTRIBUTOR","body":"Just noticed one more issue. Please check.\r\n\r\nMoreover, please specify your final commit description. We will squash and merge all commits into one and use that description.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/646917678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/646919874","html_url":"https://github.com/apache/helix/pull/1043#issuecomment-646919874","issue_url":"https://api.github.com/repos/apache/helix/issues/1043","id":646919874,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NjkxOTg3NA==","user":{"login":"xyuanlu","id":6392021,"node_id":"MDQ6VXNlcjYzOTIwMjE=","avatar_url":"https://avatars.githubusercontent.com/u/6392021?v=4","gravatar_id":"","url":"https://api.github.com/users/xyuanlu","html_url":"https://github.com/xyuanlu","followers_url":"https://api.github.com/users/xyuanlu/followers","following_url":"https://api.github.com/users/xyuanlu/following{/other_user}","gists_url":"https://api.github.com/users/xyuanlu/gists{/gist_id}","starred_url":"https://api.github.com/users/xyuanlu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xyuanlu/subscriptions","organizations_url":"https://api.github.com/users/xyuanlu/orgs","repos_url":"https://api.github.com/users/xyuanlu/repos","events_url":"https://api.github.com/users/xyuanlu/events{/privacy}","received_events_url":"https://api.github.com/users/xyuanlu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-20T01:56:36Z","updated_at":"2020-06-20T01:56:36Z","author_association":"CONTRIBUTOR","body":"TFTR. Updated. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/646919874/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/647040153","html_url":"https://github.com/apache/helix/pull/1043#issuecomment-647040153","issue_url":"https://api.github.com/repos/apache/helix/issues/1043","id":647040153,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NzA0MDE1Mw==","user":{"login":"xyuanlu","id":6392021,"node_id":"MDQ6VXNlcjYzOTIwMjE=","avatar_url":"https://avatars.githubusercontent.com/u/6392021?v=4","gravatar_id":"","url":"https://api.github.com/users/xyuanlu","html_url":"https://github.com/xyuanlu","followers_url":"https://api.github.com/users/xyuanlu/followers","following_url":"https://api.github.com/users/xyuanlu/following{/other_user}","gists_url":"https://api.github.com/users/xyuanlu/gists{/gist_id}","starred_url":"https://api.github.com/users/xyuanlu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xyuanlu/subscriptions","organizations_url":"https://api.github.com/users/xyuanlu/orgs","repos_url":"https://api.github.com/users/xyuanlu/repos","events_url":"https://api.github.com/users/xyuanlu/events{/privacy}","received_events_url":"https://api.github.com/users/xyuanlu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-20T20:07:25Z","updated_at":"2020-06-20T20:07:25Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang \r\n\r\nCode clean up -- Topology.java\r\nThis change did come code refactor work for Topology.java. It extracts the sanity check logic in multiple functions into one single function so it can be used else where as well.\r\n\r\nAlso, mvn test result is updated as well. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/647040153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/647672684","html_url":"https://github.com/apache/helix/pull/1109#issuecomment-647672684","issue_url":"https://api.github.com/repos/apache/helix/issues/1109","id":647672684,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NzY3MjY4NA==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-22T17:34:08Z","updated_at":"2020-06-22T17:34:08Z","author_association":"CONTRIBUTOR","body":"> Suggest change \"TODO: remove this check once we have a better way to exit infinite retry \" to \"TODO: remove this check once the new Zookeeper client containing children pagination (link to the ZK issue) is released\".\r\n\r\n@lei-xia Thanks for the suggestion. My thought is ZK might not have to add the feature for children pagination. But it may have other ways such as:\r\n- Not allowing creating a child if it is created, packet length will exceed jute.maxbuffer when listing children\r\n- Throw a different exception to indicate the error so zkclient could exit retry\r\n\r\nSo I don't want to add a specific solution which is not yet determined in this comment. Anyway we will keep it in mind and on our TODO list. What do you think?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/647672684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/647675698","html_url":"https://github.com/apache/helix/pull/1109#issuecomment-647675698","issue_url":"https://api.github.com/repos/apache/helix/issues/1109","id":647675698,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NzY3NTY5OA==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-22T17:40:21Z","updated_at":"2020-06-22T17:40:21Z","author_association":"CONTRIBUTOR","body":"> why not just merge this with line 79? private static final int NUM_CHILDREN_LIMIT = xxx;\r\n\r\nPurpose is for unit test. I explain it in comment: Set it here for unit test to use reflection to change value because compilers optimize constants by replacing them inline. If we don't do it like this, we would not be able to unit test getChildren() unless we create > 100K children.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/647675698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/647817336","html_url":"https://github.com/apache/helix/pull/1112#issuecomment-647817336","issue_url":"https://api.github.com/repos/apache/helix/issues/1112","id":647817336,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NzgxNzMzNg==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-22T23:22:07Z","updated_at":"2020-06-22T23:22:07Z","author_association":"CONTRIBUTOR","body":"This does not look right. Have you rebased to the master in your branch before creating this PR? Hint, you might need to resolve some conflict and clean up the branch so it is a clean merge PR.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/647817336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/647827237","html_url":"https://github.com/apache/helix/pull/1078#issuecomment-647827237","issue_url":"https://api.github.com/repos/apache/helix/issues/1078","id":647827237,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NzgyNzIzNw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-22T23:57:26Z","updated_at":"2020-06-22T23:57:26Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @dasahcc ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/647827237/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/647828800","html_url":"https://github.com/apache/helix/pull/1107#issuecomment-647828800","issue_url":"https://api.github.com/repos/apache/helix/issues/1107","id":647828800,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NzgyODgwMA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-23T00:03:23Z","updated_at":"2020-06-23T00:03:23Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/647828800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/647887465","html_url":"https://github.com/apache/helix/pull/1108#issuecomment-647887465","issue_url":"https://api.github.com/repos/apache/helix/issues/1108","id":647887465,"node_id":"MDEyOklzc3VlQ29tbWVudDY0Nzg4NzQ2NQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-23T03:34:44Z","updated_at":"2020-06-23T03:34:44Z","author_association":"CONTRIBUTOR","body":"Base64 is fine, but the other support for different compression algorithms won't be scalable.\r\nI think we should stop at base64 support in the Helix rest level. And then add a Java API based on the rest API to provide a way that application client can pass their original customized ZkSerializer and get the correct data back.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/647887465/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/647922587","html_url":"https://github.com/apache/helix/pull/1112#issuecomment-647922587","issue_url":"https://api.github.com/repos/apache/helix/issues/1112","id":647922587,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NzkyMjU4Nw==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-23T05:46:10Z","updated_at":"2020-06-23T05:46:10Z","author_association":"CONTRIBUTOR","body":"I thought you would do the merge to master from apache/watcher branch. If I rebase apache/watcher to apache/master, we need to review it quickly or master may move again.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/647922587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/647932529","html_url":"https://github.com/apache/helix/pull/1112#issuecomment-647932529","issue_url":"https://api.github.com/repos/apache/helix/issues/1112","id":647932529,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NzkzMjUyOQ==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-23T06:15:27Z","updated_at":"2020-06-23T06:15:27Z","author_association":"CONTRIBUTOR","body":"Created pull request https://github.com/apache/helix/pull/1115 as I can't change the comparison branches here. Closing this one. Can you have a look at 1115?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/647932529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/647933112","html_url":"https://github.com/apache/helix/pull/1115#issuecomment-647933112","issue_url":"https://api.github.com/repos/apache/helix/issues/1115","id":647933112,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NzkzMzExMg==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-23T06:17:08Z","updated_at":"2020-06-23T06:17:08Z","author_association":"CONTRIBUTOR","body":"Pull in the upstream latest master, rebase watcher branch to upstream/master, resolve conflict (actually no conflict). ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/647933112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/648315194","html_url":"https://github.com/apache/helix/pull/1101#issuecomment-648315194","issue_url":"https://api.github.com/repos/apache/helix/issues/1101","id":648315194,"node_id":"MDEyOklzc3VlQ29tbWVudDY0ODMxNTE5NA==","user":{"login":"xyuanlu","id":6392021,"node_id":"MDQ6VXNlcjYzOTIwMjE=","avatar_url":"https://avatars.githubusercontent.com/u/6392021?v=4","gravatar_id":"","url":"https://api.github.com/users/xyuanlu","html_url":"https://github.com/xyuanlu","followers_url":"https://api.github.com/users/xyuanlu/followers","following_url":"https://api.github.com/users/xyuanlu/following{/other_user}","gists_url":"https://api.github.com/users/xyuanlu/gists{/gist_id}","starred_url":"https://api.github.com/users/xyuanlu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xyuanlu/subscriptions","organizations_url":"https://api.github.com/users/xyuanlu/orgs","repos_url":"https://api.github.com/users/xyuanlu/repos","events_url":"https://api.github.com/users/xyuanlu/events{/privacy}","received_events_url":"https://api.github.com/users/xyuanlu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-23T17:44:53Z","updated_at":"2020-06-23T17:44:53Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang \r\n\r\nAdd metrics for expired session count\r\nThis change adds a \"ExpiredSessionCounter\" metrics in ZkClientMonitor.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/648315194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/648518387","html_url":"https://github.com/apache/helix/pull/1119#issuecomment-648518387","issue_url":"https://api.github.com/repos/apache/helix/issues/1119","id":648518387,"node_id":"MDEyOklzc3VlQ29tbWVudDY0ODUxODM4Nw==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-24T00:51:55Z","updated_at":"2020-06-24T00:51:55Z","author_association":"CONTRIBUTOR","body":"This is the core logic here, interface change would be added next.\r\n\r\n1/ We don't call sync in Zookeeper client event thread.\r\n2/ We don't use handle connectionLossKeeperException. In fact, sync() does not throw this exception. Maybe it should throw this exception.\r\n3/ Sync() has only async version. We don't wait till it return successfully before proceeding. This is intentional.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/648518387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/648934522","html_url":"https://github.com/apache/helix/pull/1119#issuecomment-648934522","issue_url":"https://api.github.com/repos/apache/helix/issues/1119","id":648934522,"node_id":"MDEyOklzc3VlQ29tbWVudDY0ODkzNDUyMg==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-24T16:43:20Z","updated_at":"2020-06-24T22:44:29Z","author_association":"CONTRIBUTOR","body":"> You mentioned the sync is not in the event thread, but it is in your code. Or I missed anything?\r\n> \r\n> sync() can be waited by using the callback. Do we want to do it? Or if it fails, how we ensure the following read is valid?\r\n\r\nI mean we don't call it in **Zookeeper client event thread** or where process() is called. (Note Zookeeper client has send thread). It is invoked in zkclient event thread as usual.\r\n\r\nsync() call is actually async. The question is that should we wait for the async sync() finishing before proceeding. So there are two possibilities.\r\n\r\n1/ sync() call arrived server, but response back to client is lost.\r\n2/ sync() call did not arrive at server.\r\n\r\nIf it arrives at server, even response is lost, it is ok. We achieved what we want. This the reason why they only provide an async version of sync() I guess. They don't see the need for it block further processing, such as in Zkclient event thread we use here. \r\n\r\nIf it did not arrive at server, it would be ideal if there is an exception thrown. But they don't. \r\n\r\nOverall, we can wait for the sync() till it returned successful, retry connectionloss KeeperException only. (Not need to retry session expiration). This would block the Zkclient event thread further and mostly likely unnecessary. (Or why Zookeeper don't provide a sync version of sync()?) \r\n\r\n\r\nSo for the choice of either wait for sync() or not, I just choose not wait for it. The con of this choice is that there is a small chance it may not arrive at server (due to connection loss) and later zk read did succeed after connection recover without session expiration.\r\n\r\n@jiajunwang, @pkuwm, let me know what is your take here. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/648934522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/649449240","html_url":"https://github.com/apache/helix/issues/1118#issuecomment-649449240","issue_url":"https://api.github.com/repos/apache/helix/issues/1118","id":649449240,"node_id":"MDEyOklzc3VlQ29tbWVudDY0OTQ0OTI0MA==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-25T10:17:30Z","updated_at":"2020-06-25T10:17:30Z","author_association":"CONTRIBUTOR","body":"Could you add more details/clarification for the issue? @kaisun2000 Eg, what data needs to be synced and what stage? Thanks ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/649449240/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/649865225","html_url":"https://github.com/apache/helix/pull/1114#issuecomment-649865225","issue_url":"https://api.github.com/repos/apache/helix/issues/1114","id":649865225,"node_id":"MDEyOklzc3VlQ29tbWVudDY0OTg2NTIyNQ==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-25T23:21:51Z","updated_at":"2020-06-25T23:21:51Z","author_association":"NONE","body":"This PR is ready to be merged, approved by @narendly \r\n\r\nFinal commit message:\r\nChange the queue state to IN_PROGRESS after being resumed\r\n\r\nThis commit fixes the scenario where the workflow context state\r\n does not change to IN_PROGRESS after being resumed.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/649865225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/649875911","html_url":"https://github.com/apache/helix/pull/1111#issuecomment-649875911","issue_url":"https://api.github.com/repos/apache/helix/issues/1111","id":649875911,"node_id":"MDEyOklzc3VlQ29tbWVudDY0OTg3NTkxMQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-26T00:03:19Z","updated_at":"2020-06-26T00:03:19Z","author_association":"CONTRIBUTOR","body":"@lei-xia \r\n\r\nCould we make sure this PR follows our PR guidelines?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/649875911/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/649876919","html_url":"https://github.com/apache/helix/pull/1110#issuecomment-649876919","issue_url":"https://api.github.com/repos/apache/helix/issues/1110","id":649876919,"node_id":"MDEyOklzc3VlQ29tbWVudDY0OTg3NjkxOQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-26T00:06:52Z","updated_at":"2020-06-26T00:06:52Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @dasahcc \r\n\r\nUse dedicated ZkClient in getHelixManagerProperty\r\n\r\nIt's been observed that sometimes using a shared Zk connection could cause issues when we write in-memory tests that shut down ZK server and restart it. This is because with a shared Zkconnection, we may see the client's zxid be higher than that of the server, which is an invalid state in ZooKeeper. Since HelixManager is a single-realm dedicated concept, it is okay to use a dedicated zk connection to pull CloudConfig in getHelixManagerProperty() method. This will solve issues caused by zxid mismatches.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/649876919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/650339573","html_url":"https://github.com/apache/helix/pull/1119#issuecomment-650339573","issue_url":"https://api.github.com/repos/apache/helix/issues/1119","id":650339573,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MDMzOTU3Mw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-26T18:50:12Z","updated_at":"2020-06-26T18:50:12Z","author_association":"CONTRIBUTOR","body":"> > You mentioned the sync is not in the event thread, but it is in your code. Or I missed anything?\r\n> > sync() can be waited by using the callback. Do we want to do it? Or if it fails, how we ensure the following read is valid?\r\n> \r\n> I mean we don't call it in **Zookeeper client event thread** or where process() is called. (Note Zookeeper client has send thread). It is invoked in zkclient event thread as usual.\r\n> \r\n> sync() call is actually async. The question is that should we wait for the async sync() finishing before proceeding. So there are two possibilities.\r\n> \r\n> 1/ sync() call arrived server, but response back to client is lost.\r\n> 2/ sync() call did not arrive at server.\r\n> \r\n> If it arrives at server, even response is lost, it is ok. We achieved what we want. This the reason why they only provide an async version of sync() I guess. They don't see the need for it block further processing, such as in Zkclient event thread we use here.\r\n> \r\n> If it did not arrive at server, it would be ideal if there is an exception thrown. But they don't.\r\n> \r\n> Overall, we can wait for the sync() till it returned successful, retry connectionloss KeeperException only. (Not need to retry session expiration). This would block the Zkclient event thread further and mostly likely unnecessary. (Or why Zookeeper don't provide a sync version of sync()?)\r\n> \r\n> So for the choice of either wait for sync() or not, I just choose not wait for it. The con of this choice is that there is a small chance it may not arrive at server (due to connection loss) and later zk read did succeed after connection recover without session expiration.\r\n> \r\n> @jiajunwang, @pkuwm, let me know what is your take here.\r\n\r\nI prefer to wait for the callback. When handling new session, taking more time is ok. The thing is that this is to prevent a corner case if we are not 100% sure, then this fix is compromised I think.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/650339573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/650353519","html_url":"https://github.com/apache/helix/pull/1119#issuecomment-650353519","issue_url":"https://api.github.com/repos/apache/helix/issues/1119","id":650353519,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MDM1MzUxOQ==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-26T19:20:08Z","updated_at":"2020-06-26T19:20:08Z","author_association":"CONTRIBUTOR","body":"@pkuwm, let me know if you think otherwise. I will draft a version waiting till async version of sync() finish successfully. \r\n\r\nSo in this case, I just resolve all the previous not-applied conversation then.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/650353519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/650362227","html_url":"https://github.com/apache/helix/pull/1119#issuecomment-650362227","issue_url":"https://api.github.com/repos/apache/helix/issues/1119","id":650362227,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MDM2MjIyNw==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-26T19:39:20Z","updated_at":"2020-06-26T19:39:20Z","author_association":"CONTRIBUTOR","body":"> > > You mentioned the sync is not in the event thread, but it is in your code. Or I missed anything?\r\n> > > sync() can be waited by using the callback. Do we want to do it? Or if it fails, how we ensure the following read is valid?\r\n> > \r\n> > \r\n> > I mean we don't call it in **Zookeeper client event thread** or where process() is called. (Note Zookeeper client has send thread). It is invoked in zkclient event thread as usual.\r\n> > sync() call is actually async. The question is that should we wait for the async sync() finishing before proceeding. So there are two possibilities.\r\n> > 1/ sync() call arrived server, but response back to client is lost.\r\n> > 2/ sync() call did not arrive at server.\r\n> > If it arrives at server, even response is lost, it is ok. We achieved what we want. This the reason why they only provide an async version of sync() I guess. They don't see the need for it block further processing, such as in Zkclient event thread we use here.\r\n> > If it did not arrive at server, it would be ideal if there is an exception thrown. But they don't.\r\n> > Overall, we can wait for the sync() till it returned successful, retry connectionloss KeeperException only. (Not need to retry session expiration). This would block the Zkclient event thread further and mostly likely unnecessary. (Or why Zookeeper don't provide a sync version of sync()?)\r\n> > So for the choice of either wait for sync() or not, I just choose not wait for it. The con of this choice is that there is a small chance it may not arrive at server (due to connection loss) and later zk read did succeed after connection recover without session expiration.\r\n> > @jiajunwang, @pkuwm, let me know what is your take here.\r\n> \r\n> I prefer to wait for the callback. When handling new session, taking more time is ok. The thing is that this is to prevent a corner case if we are not 100% sure, then this fix is compromised I think.\r\n\r\n@kaisun2000 \r\nI prefer to make sure sync is successful, because it could fail. If it fails, we still continue handling new session, it does not achieve our expectation that the data we read is actually synced/new. \r\n\r\nAnd @jiajunwang mentioned that taking more time to handle new session is fine. Then I don't see no reason to check the success of sync.\r\n\r\nThen my question is, if sync fails, shall we continue? I understand we could retry, but what if it still fails?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/650362227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/650387322","html_url":"https://github.com/apache/helix/pull/1119#issuecomment-650387322","issue_url":"https://api.github.com/repos/apache/helix/issues/1119","id":650387322,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MDM4NzMyMg==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-26T20:33:35Z","updated_at":"2020-06-26T20:33:35Z","author_association":"CONTRIBUTOR","body":"Sync() failed, the rc code would tell you the reason. Similar like KeeperException. \r\nFor this case, I think we can do it,\r\n\r\nOk: proceed\r\nretryable: connectionloss, we retry\r\n\r\nOthers, including session expiration, just eat it, log it and stop here. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/650387322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/650425080","html_url":"https://github.com/apache/helix/pull/1119#issuecomment-650425080","issue_url":"https://api.github.com/repos/apache/helix/issues/1119","id":650425080,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MDQyNTA4MA==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-26T22:08:25Z","updated_at":"2020-06-26T22:08:25Z","author_association":"CONTRIBUTOR","body":"@jiajunwang, @pkuwm , see the blocking version of sync() call. Let me know what do you think? ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/650425080/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/651280376","html_url":"https://github.com/apache/helix/issues/1126#issuecomment-651280376","issue_url":"https://api.github.com/repos/apache/helix/issues/1126","id":651280376,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTI4MDM3Ng==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-29T18:15:46Z","updated_at":"2020-06-29T18:15:46Z","author_association":"CONTRIBUTOR","body":"Yeah, it should be done.\r\nEspecially with more information added to the connection config, there might be more connections created and hold in the pool.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/651280376/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/651281249","html_url":"https://github.com/apache/helix/issues/1126#issuecomment-651281249","issue_url":"https://api.github.com/repos/apache/helix/issues/1126","id":651281249,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTI4MTI0OQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-29T18:17:43Z","updated_at":"2020-06-29T18:17:43Z","author_association":"CONTRIBUTOR","body":"When shared zk client gets created, it adds itself as the watcher, so it will never fully close if skipIfWatched is set to true. Is that intended?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/651281249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/651287319","html_url":"https://github.com/apache/helix/issues/1126#issuecomment-651287319","issue_url":"https://api.github.com/repos/apache/helix/issues/1126","id":651287319,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTI4NzMxOQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-29T18:30:40Z","updated_at":"2020-06-29T18:30:40Z","author_association":"CONTRIBUTOR","body":"> When shared zk client gets created, it adds itself as the watcher, so it will never fully close if skipIfWatched is set to true. Is that intended?\r\n\r\nThis shared zk client should be closed by the user's code (from the ZkClient module perspective) as well. Then the reference count will be zero. And the real connection will be closed.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/651287319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/651287914","html_url":"https://github.com/apache/helix/pull/1066#issuecomment-651287914","issue_url":"https://api.github.com/repos/apache/helix/issues/1066","id":651287914,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTI4NzkxNA==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-29T18:31:50Z","updated_at":"2020-06-29T18:31:50Z","author_association":"CONTRIBUTOR","body":"The current pull request has one important assumption if I understand correctly. \r\n\r\nController assignment to clusters in super cluster change changes  when controller has a session expiration and establishing a new session. \r\n\r\nThe thing is that is there any other event can cause controller assignment to cluster change without controller going through session expiration. For example, new cluster are added? Or any others?\r\n@jiajunwang, @pkuwm?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/651287914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/651994756","html_url":"https://github.com/apache/helix/pull/1123#issuecomment-651994756","issue_url":"https://api.github.com/repos/apache/helix/issues/1123","id":651994756,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTk5NDc1Ng==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T19:23:44Z","updated_at":"2020-06-30T19:23:44Z","author_association":"CONTRIBUTOR","body":"One high level question. `public synchronized boolean persistBaseline` or bestPossible, the synchronized is to make sure that with in a process, the persisting to ZK is guarded. Is there a case that in a single controller java process, there will be more than one waged pipeline running? My understanding is that for CRUSH full auto, we have per cluster controller pipeline. But for waged, they is only one for all clusters? Am I wrong here?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/651994756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/651996650","html_url":"https://github.com/apache/helix/pull/1123#issuecomment-651996650","issue_url":"https://api.github.com/repos/apache/helix/issues/1123","id":651996650,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTk5NjY1MA==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T19:27:45Z","updated_at":"2020-06-30T19:29:41Z","author_association":"CONTRIBUTOR","body":"My follow-up question is actually that there seems still some potential inconsistency issue here not addressed, namely across controllers over different machine. \r\n\r\nThe pattern is similar to this https://github.com/apache/helix/pull/1066. \r\n\r\nIf one controller session expired, and super controller assign another controller to take care the cluster. When first controller come up, his controller pipeline may still run and persists his baseline and best possible again. How do we guard this across java process race condition?\r\n\r\nThis is a pattern of similar problems. We should think a little bit more generic and address them all long term. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/651996650/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652003864","html_url":"https://github.com/apache/helix/pull/1123#issuecomment-652003864","issue_url":"https://api.github.com/repos/apache/helix/issues/1123","id":652003864,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjAwMzg2NA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T19:42:51Z","updated_at":"2020-06-30T19:42:51Z","author_association":"CONTRIBUTOR","body":"> One high level question. `public synchronized boolean persistBaseline` or bestPossible, the synchronized is to make sure that with in a process, the persisting to ZK is guarded. Is there a case that in a single controller java process, there will be more than one waged pipeline running? My understanding is that for CRUSH full auto, we have per cluster controller pipeline. But for waged, they is only one for all clusters? Am I wrong here?\r\n\r\nYou are wrong.\r\n1. Both WAGED and the traditional rebalancers are for each cluster.\r\n2. synchronized is not a must if we make the assumption that it will only be used in the WAGED rebalancer. And we are not going to change the WAGED rebalancer.\r\n3. Having this to protect is a nice-to-have thing. So do you suggest we remove it? I think it won't hurt.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652003864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652006415","html_url":"https://github.com/apache/helix/pull/1123#issuecomment-652006415","issue_url":"https://api.github.com/repos/apache/helix/issues/1123","id":652006415,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjAwNjQxNQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T19:48:01Z","updated_at":"2020-06-30T19:48:01Z","author_association":"CONTRIBUTOR","body":"> My follow-up question is actually that there seems still some potential inconsistency issue here not addressed, namely across controllers over different machine.\r\n> \r\n> The pattern is similar to this #1066.\r\n> \r\n> If one controller session expired, and super controller assign another controller to take care the cluster. When first controller come up, his controller pipeline may still run and persists his baseline and best possible again. How do we guard this across java process race condition?\r\n> \r\n> This is a pattern of similar problems. We should think a little bit more generic and address them all long term.\r\n\r\nPlease note that we have an MVCC implemented in the bucket accessor to ensure cross node consistency.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652006415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652006981","html_url":"https://github.com/apache/helix/pull/1123#issuecomment-652006981","issue_url":"https://api.github.com/repos/apache/helix/issues/1123","id":652006981,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjAwNjk4MQ==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T19:49:17Z","updated_at":"2020-06-30T19:49:17Z","author_association":"CONTRIBUTOR","body":"> You are wrong.\r\n> \r\n> 1. Both WAGED and the traditional rebalancers are for each cluster.\r\n> 2. synchronized is not a must if we make the assumption that it will only be used in the WAGED rebalancer. And we are not going to change the WAGED rebalancer.\r\n> 3. Having this to protect is a nice-to-have thing. So do you suggest we remove it? I think it won't hurt.\r\n\r\nSo the invariant is that each cluster has its own copy of persisted baseline and best-possible. If this is clear, removing sync seems to be safe. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652006981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652008416","html_url":"https://github.com/apache/helix/pull/1123#issuecomment-652008416","issue_url":"https://api.github.com/repos/apache/helix/issues/1123","id":652008416,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjAwODQxNg==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T19:52:21Z","updated_at":"2020-06-30T19:52:21Z","author_association":"CONTRIBUTOR","body":"> > You are wrong.\r\n> > \r\n> > 1. Both WAGED and the traditional rebalancers are for each cluster.\r\n> > 2. synchronized is not a must if we make the assumption that it will only be used in the WAGED rebalancer. And we are not going to change the WAGED rebalancer.\r\n> > 3. Having this to protect is a nice-to-have thing. So do you suggest we remove it? I think it won't hurt.\r\n> \r\n> So the invariant is that each cluster has its own copy of persisted baseline and best-possible. If this is clear, removing sync seems to be safe.\r\n\r\nBut it won't hurt. And IMO, the assumption that we won't change WAGED logic in the future is weak. I prefer to keep it.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652008416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652013368","html_url":"https://github.com/apache/helix/pull/1123#issuecomment-652013368","issue_url":"https://api.github.com/repos/apache/helix/issues/1123","id":652013368,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjAxMzM2OA==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T20:02:46Z","updated_at":"2020-06-30T20:02:46Z","author_association":"CONTRIBUTOR","body":"> But it won't hurt. And IMO, the assumption that we won't change WAGED logic in the future is weak. I prefer to keep it.\r\n\r\nAs an aside, I recall waged has an advantage as allocating over all clusters to instance. So this is not in this version?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652013368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652014255","html_url":"https://github.com/apache/helix/pull/1123#issuecomment-652014255","issue_url":"https://api.github.com/repos/apache/helix/issues/1123","id":652014255,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjAxNDI1NQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T20:04:30Z","updated_at":"2020-06-30T20:04:30Z","author_association":"CONTRIBUTOR","body":"\"allocating over all clusters to instance\" what does that mean? Could you please give me an example?\n\n\nCheers,\n-Jiajun\n\n________________________________\nFrom: kaisun2000 <notifications@github.com>\nSent: Tuesday, June 30, 2020 1:03 PM\nTo: apache/helix <helix@noreply.github.com>\nCc: Jiajun Wang <jjwang@linkedin.com>; Author <author@noreply.github.com>\nSubject: Re: [apache/helix] Cleanup the persisted assignment state if no resource is on WAGED rebalancer. (#1123)\n\n\nBut it won't hurt. And IMO, the assumption that we won't change WAGED logic in the future is weak. I prefer to keep it.\n\nAs an aside, I recall waged has an advantage as allocating over all clusters to instance. So this is not in this version?\n\n—\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fapache%2Fhelix%2Fpull%2F1123%23issuecomment-652013368&data=02%7C01%7Cjjwang%40linkedin.com%7C6fa9c2a69d514be3a58808d81d3098ee%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637291441844424637&sdata=RooDr9nfa03%2F03oQ97fIe6BJtB3f55prujYogms2P74%3D&reserved=0>, or unsubscribe<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAANYM2BXD7WJPVWJSPTHDE3RZJAHJANCNFSM4OI7NZIA&data=02%7C01%7Cjjwang%40linkedin.com%7C6fa9c2a69d514be3a58808d81d3098ee%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637291441844434630&sdata=9hlYzyVGId9mdz%2BKtuP9cLptJBUDOjJE9KXLedDFBd0%3D&reserved=0>.\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652014255/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652015520","html_url":"https://github.com/apache/helix/pull/1123#issuecomment-652015520","issue_url":"https://api.github.com/repos/apache/helix/issues/1123","id":652015520,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjAxNTUyMA==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T20:07:01Z","updated_at":"2020-06-30T20:07:01Z","author_association":"CONTRIBUTOR","body":"> Please note that we have an MVCC implemented in the bucket accessor to ensure cross node consistency.\r\n\r\nI will try to examine the bucket accessor a little bit more carefully. Here is the question:\r\n\r\nSay controller A is for resource R allocation. Then controller A session expires, controller B take care of resource B. Later when A is back, for a while A and B would run at the same time. When serializing say baseline for resource R,  A wins over B, is it going to be a problem for this resource as B would later be controller for R.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652015520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652017384","html_url":"https://github.com/apache/helix/pull/1123#issuecomment-652017384","issue_url":"https://api.github.com/repos/apache/helix/issues/1123","id":652017384,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjAxNzM4NA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T20:11:12Z","updated_at":"2020-06-30T20:11:12Z","author_association":"CONTRIBUTOR","body":"Whichever wins is fine. Since the next pipeline running will take the cached result and keep calculating based on there.\n\n  *   If A wins, then A keeps calculating based on its local state.\n  *   If B wins, then because A cache the result after write, it will still calculate based on its local state. And the next pipeline will overwrite B's output. And we are good.\nIn this case, we don't really need B's result.\n\n\nCheers,\n-Jiajun\n\n________________________________\nFrom: kaisun2000 <notifications@github.com>\nSent: Tuesday, June 30, 2020 1:07 PM\nTo: apache/helix <helix@noreply.github.com>\nCc: Jiajun Wang <jjwang@linkedin.com>; Author <author@noreply.github.com>\nSubject: Re: [apache/helix] Cleanup the persisted assignment state if no resource is on WAGED rebalancer. (#1123)\n\n\nPlease note that we have an MVCC implemented in the bucket accessor to ensure cross node consistency.\n\nI will try to examine the bucket accessor a little bit more carefully. Here is the question:\n\nSay controller A is for resource R allocation. Then controller A session expires, controller B take care of resource B. Later when A is back, for a while A and B would run at the same time. When serializing say baseline for resource R, A wins over B, is it going to be a problem for this resource as B would later be controller for R.\n\n—\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fapache%2Fhelix%2Fpull%2F1123%23issuecomment-652015520&data=02%7C01%7Cjjwang%40linkedin.com%7C61ccb448e537425425a008d81d313072%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637291444385780233&sdata=VIdFasrPljxVkFFnODjJGoxHpYl%2FBmYSxQF5xNHHmzA%3D&reserved=0>, or unsubscribe<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAANYM2AOROJKY37OFQ3OTXTRZJAXHANCNFSM4OI7NZIA&data=02%7C01%7Cjjwang%40linkedin.com%7C61ccb448e537425425a008d81d313072%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637291444385780233&sdata=p2xLzQ1lM%2FPQ2xxMpmqxeMS3cHop%2BzaFqgxPOdOXnc4%3D&reserved=0>.\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652017384/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652028558","html_url":"https://github.com/apache/helix/pull/1123#issuecomment-652028558","issue_url":"https://api.github.com/repos/apache/helix/issues/1123","id":652028558,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjAyODU1OA==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T20:35:23Z","updated_at":"2020-06-30T20:35:23Z","author_association":"CONTRIBUTOR","body":"I see. Thx for the explanation. \r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652028558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652029624","html_url":"https://github.com/apache/helix/pull/1123#issuecomment-652029624","issue_url":"https://api.github.com/repos/apache/helix/issues/1123","id":652029624,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjAyOTYyNA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T20:37:33Z","updated_at":"2020-06-30T20:37:33Z","author_association":"CONTRIBUTOR","body":"Thanks for the review : )\n\n\nCheers,\n-Jiajun\n\n________________________________\nFrom: kaisun2000 <notifications@github.com>\nSent: Tuesday, June 30, 2020 1:35 PM\nTo: apache/helix <helix@noreply.github.com>\nCc: Jiajun Wang <jjwang@linkedin.com>; Author <author@noreply.github.com>\nSubject: Re: [apache/helix] Cleanup the persisted assignment state if no resource is on WAGED rebalancer. (#1123)\n\n\nI see. Thx for the explanation.\n\n—\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fapache%2Fhelix%2Fpull%2F1123%23issuecomment-652028558&data=02%7C01%7Cjjwang%40linkedin.com%7Cdbb1c17cd78b464a1bcb08d81d352672%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637291461399600513&sdata=Z93RzjQpYlnkcVslXtAP6vv%2Fyu7V6fCD6n8c%2FCb4JqU%3D&reserved=0>, or unsubscribe<https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAANYM2BK6BORYRYFMGH3RJ3RZJEBRANCNFSM4OI7NZIA&data=02%7C01%7Cjjwang%40linkedin.com%7Cdbb1c17cd78b464a1bcb08d81d352672%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637291461399600513&sdata=dIiU2fAO5ihW2C1QH11MLsXyYtJzQn43UOzvqcnE2C4%3D&reserved=0>.\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652029624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652083218","html_url":"https://github.com/apache/helix/pull/1123#issuecomment-652083218","issue_url":"https://api.github.com/repos/apache/helix/issues/1123","id":652083218,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjA4MzIxOA==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T22:39:51Z","updated_at":"2020-06-30T22:39:51Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @pkuwm ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652083218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652083942","html_url":"https://github.com/apache/helix/pull/1132#issuecomment-652083942","issue_url":"https://api.github.com/repos/apache/helix/issues/1132","id":652083942,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjA4Mzk0Mg==","user":{"login":"mgao0","id":31704180,"node_id":"MDQ6VXNlcjMxNzA0MTgw","avatar_url":"https://avatars.githubusercontent.com/u/31704180?v=4","gravatar_id":"","url":"https://api.github.com/users/mgao0","html_url":"https://github.com/mgao0","followers_url":"https://api.github.com/users/mgao0/followers","following_url":"https://api.github.com/users/mgao0/following{/other_user}","gists_url":"https://api.github.com/users/mgao0/gists{/gist_id}","starred_url":"https://api.github.com/users/mgao0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgao0/subscriptions","organizations_url":"https://api.github.com/users/mgao0/orgs","repos_url":"https://api.github.com/users/mgao0/repos","events_url":"https://api.github.com/users/mgao0/events{/privacy}","received_events_url":"https://api.github.com/users/mgao0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T22:41:52Z","updated_at":"2020-06-30T22:41:52Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @zhangmeng916.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652083942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652092627","html_url":"https://github.com/apache/helix/pull/1076#issuecomment-652092627","issue_url":"https://api.github.com/repos/apache/helix/issues/1076","id":652092627,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjA5MjYyNw==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T23:08:28Z","updated_at":"2020-06-30T23:08:53Z","author_association":"NONE","body":"Overall looks good to me. Just to make sure, can you please rebase with master branch, build the project and run the tests again and report the result?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652092627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652137799","html_url":"https://github.com/apache/helix/pull/1056#issuecomment-652137799","issue_url":"https://api.github.com/repos/apache/helix/issues/1056","id":652137799,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjEzNzc5OQ==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-01T01:44:59Z","updated_at":"2020-07-01T01:44:59Z","author_association":"CONTRIBUTOR","body":"After discussion, this work item will not be done. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652137799/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652552284","html_url":"https://github.com/apache/helix/pull/1131#issuecomment-652552284","issue_url":"https://api.github.com/repos/apache/helix/issues/1131","id":652552284,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjU1MjI4NA==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-01T17:30:25Z","updated_at":"2020-07-01T17:30:25Z","author_association":"NONE","body":"This PR is ready to be merged, approved by @dasahcc \r\n\r\nFinal commit message:\r\nUse Znode version to initialize RuntimeJobDag \r\n\r\nIn this commit, the znode version has been used to create the\r\nRuntimeJobDag in order to avoid race condition between purge\r\nlogic and cache refresh.\r\nThis PR specifically stabilized TestJobQueueCleanUp.\r\nAlso this PR allows the job to continue running even if its IdealState has been removed.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652552284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/652630377","html_url":"https://github.com/apache/helix/pull/1076#issuecomment-652630377","issue_url":"https://api.github.com/repos/apache/helix/issues/1076","id":652630377,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MjYzMDM3Nw==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-01T20:28:44Z","updated_at":"2020-07-01T20:28:44Z","author_association":"CONTRIBUTOR","body":"@alirezazamani Done so and the results have been updated. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/652630377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/653735955","html_url":"https://github.com/apache/helix/pull/1138#issuecomment-653735955","issue_url":"https://api.github.com/repos/apache/helix/issues/1138","id":653735955,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MzczNTk1NQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-04T07:58:48Z","updated_at":"2020-07-04T07:58:48Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/653735955/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/655032005","html_url":"https://github.com/apache/helix/pull/1140#issuecomment-655032005","issue_url":"https://api.github.com/repos/apache/helix/issues/1140","id":655032005,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NTAzMjAwNQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-07T18:05:35Z","updated_at":"2020-07-07T18:05:35Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/655032005/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/657637100","html_url":"https://github.com/apache/helix/pull/1111#issuecomment-657637100","issue_url":"https://api.github.com/repos/apache/helix/issues/1111","id":657637100,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzYzNzEwMA==","user":{"login":"lei-xia","id":9325494,"node_id":"MDQ6VXNlcjkzMjU0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/9325494?v=4","gravatar_id":"","url":"https://api.github.com/users/lei-xia","html_url":"https://github.com/lei-xia","followers_url":"https://api.github.com/users/lei-xia/followers","following_url":"https://api.github.com/users/lei-xia/following{/other_user}","gists_url":"https://api.github.com/users/lei-xia/gists{/gist_id}","starred_url":"https://api.github.com/users/lei-xia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lei-xia/subscriptions","organizations_url":"https://api.github.com/users/lei-xia/orgs","repos_url":"https://api.github.com/users/lei-xia/repos","events_url":"https://api.github.com/users/lei-xia/events{/privacy}","received_events_url":"https://api.github.com/users/lei-xia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T15:45:05Z","updated_at":"2020-07-13T15:45:05Z","author_association":"MEMBER","body":"Accidentally closed the PR, trying to re-open it.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/657637100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/657637624","html_url":"https://github.com/apache/helix/pull/1111#issuecomment-657637624","issue_url":"https://api.github.com/repos/apache/helix/issues/1111","id":657637624,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzYzNzYyNA==","user":{"login":"lei-xia","id":9325494,"node_id":"MDQ6VXNlcjkzMjU0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/9325494?v=4","gravatar_id":"","url":"https://api.github.com/users/lei-xia","html_url":"https://github.com/lei-xia","followers_url":"https://api.github.com/users/lei-xia/followers","following_url":"https://api.github.com/users/lei-xia/following{/other_user}","gists_url":"https://api.github.com/users/lei-xia/gists{/gist_id}","starred_url":"https://api.github.com/users/lei-xia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lei-xia/subscriptions","organizations_url":"https://api.github.com/users/lei-xia/orgs","repos_url":"https://api.github.com/users/lei-xia/repos","events_url":"https://api.github.com/users/lei-xia/events{/privacy}","received_events_url":"https://api.github.com/users/lei-xia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T15:46:01Z","updated_at":"2020-07-13T15:46:01Z","author_association":"MEMBER","body":"Rebase to current head:master","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/657637624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/657739671","html_url":"https://github.com/apache/helix/issues/1139#issuecomment-657739671","issue_url":"https://api.github.com/repos/apache/helix/issues/1139","id":657739671,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzczOTY3MQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T19:10:45Z","updated_at":"2020-07-13T19:10:45Z","author_association":"CONTRIBUTOR","body":"This work is also related to #1137.\r\n\r\nWe will just record the result here. The test can pass on macbook laptop now, due to less thread usage.\r\n\r\nBefore the fix:\r\n![Screen Shot 2020-07-13 at 12 06 28 PM](https://user-images.githubusercontent.com/1803880/87343286-76faab80-c501-11ea-8b0f-330721a540f3.png)\r\n\r\nAfter the fix:\r\n![Screen Shot 2020-07-13 at 12 08 13 PM](https://user-images.githubusercontent.com/1803880/87343338-8e399900-c501-11ea-80c2-b81947ba4108.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/657739671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/657764446","html_url":"https://github.com/apache/helix/issues/1139#issuecomment-657764446","issue_url":"https://api.github.com/repos/apache/helix/issues/1139","id":657764446,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Nzc2NDQ0Ng==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T20:06:44Z","updated_at":"2020-07-13T20:06:44Z","author_association":"CONTRIBUTOR","body":"@jiajunwang Very cool! Number of threads from 7.5k -> 2.3k.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/657764446/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/657791412","html_url":"https://github.com/apache/helix/pull/1138#issuecomment-657791412","issue_url":"https://api.github.com/repos/apache/helix/issues/1138","id":657791412,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Nzc5MTQxMg==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T21:00:57Z","updated_at":"2020-07-13T21:00:57Z","author_association":"CONTRIBUTOR","body":"Twe question/comments:\r\n\r\n1/ Is this inclusive for closing all these objects to prevent leaking zookeeper client?\r\n\r\n2/ relying on finalized means that the objects are only closed when GC happens. This is not ideal. I understand we want a quick fix for now. Will enhance it later.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/657791412/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/657793829","html_url":"https://github.com/apache/helix/pull/1138#issuecomment-657793829","issue_url":"https://api.github.com/repos/apache/helix/issues/1138","id":657793829,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Nzc5MzgyOQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T21:06:34Z","updated_at":"2020-07-13T21:06:34Z","author_association":"CONTRIBUTOR","body":"> Twe question/comments:\r\n> \r\n> 1/ Is this inclusive for closing all these objects to prevent leaking zookeeper client?\r\n> \r\n> 2/ relying on finalized means that the objects are only closed when GC happens. This is not ideal. I understand we want a quick fix for now. Will enhance it later.\r\n\r\n1. this is not inclusive. Just a quick fix. Even during the test, I notice there are lots of more leakage.\r\n2. You are right.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/657793829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/657826700","html_url":"https://github.com/apache/helix/pull/1136#issuecomment-657826700","issue_url":"https://api.github.com/repos/apache/helix/issues/1136","id":657826700,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzgyNjcwMA==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T22:34:02Z","updated_at":"2020-07-13T22:34:02Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang   \r\nFinal commit message:\r\n## Allow getIdealAssignmentForWagedFullAuto return preference list based results, add result filtering ##\r\nWe add an option to allow getIdealAssignmentForWagedFullAuto to return an assignment result that's based on the preference lists, which are closer to be the \"calculation result\" done by Waged. We also filter the result such that only the provided resources (from IdealStates) will have scheduling results returned. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/657826700/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/657958916","html_url":"https://github.com/apache/helix/pull/1147#issuecomment-657958916","issue_url":"https://api.github.com/repos/apache/helix/issues/1147","id":657958916,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Nzk1ODkxNg==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T04:27:20Z","updated_at":"2020-07-14T17:57:20Z","author_association":"CONTRIBUTOR","body":"@pkuwm It seems that you submitted a change to DynamicMBeanProvider.java recently. Could you give this a quick look and make sure your change wasn't overriden?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/657958916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/658443380","html_url":"https://github.com/apache/helix/pull/1119#issuecomment-658443380","issue_url":"https://api.github.com/repos/apache/helix/issues/1119","id":658443380,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODQ0MzM4MA==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T22:24:38Z","updated_at":"2020-07-14T22:24:38Z","author_association":"CONTRIBUTOR","body":"@jiajunwang, now it use the AsyncCallbacks pattern. Have a look, if this looks general right, I will add test cases next.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/658443380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/658452345","html_url":"https://github.com/apache/helix/pull/1119#issuecomment-658452345","issue_url":"https://api.github.com/repos/apache/helix/issues/1119","id":658452345,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODQ1MjM0NQ==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T22:55:18Z","updated_at":"2020-07-14T22:55:18Z","author_association":"CONTRIBUTOR","body":"@kaisun2000 Could you please rebase the code to resolve the conflict so we can review the refreshed version.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/658452345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/658455027","html_url":"https://github.com/apache/helix/pull/1119#issuecomment-658455027","issue_url":"https://api.github.com/repos/apache/helix/issues/1119","id":658455027,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODQ1NTAyNw==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T23:04:17Z","updated_at":"2020-07-14T23:04:17Z","author_association":"CONTRIBUTOR","body":"\r\n> @kaisun2000 Could you please rebase the code to resolve the conflict so we can review the refreshed version.\r\n\r\nrebased to current master, no more conflict.\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/658455027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/658457652","html_url":"https://github.com/apache/helix/pull/1153#issuecomment-658457652","issue_url":"https://api.github.com/repos/apache/helix/issues/1153","id":658457652,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODQ1NzY1Mg==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T23:13:29Z","updated_at":"2020-07-14T23:13:29Z","author_association":"CONTRIBUTOR","body":"Thanks @jiajunwang for the approval!\r\n\r\nThis PR is ready to be merged, approved by @jiajunwang \r\n\r\n```\r\nIn helix style for IntelliJ, there are 2 blank lines after package and imports. We would like to reduce them to only 1 line.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/658457652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/658475318","html_url":"https://github.com/apache/helix/pull/1135#issuecomment-658475318","issue_url":"https://api.github.com/repos/apache/helix/issues/1135","id":658475318,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODQ3NTMxOA==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-15T00:18:47Z","updated_at":"2020-07-15T00:18:47Z","author_association":"NONE","body":"This PR is ready to be merged, approved by @jiajunwang.\r\n\r\nFinal commit message:\r\nStabilize TestUpdateWorkflow\r\n\r\nIn this commit, Thread.sleep usages have been removed\r\nfrom TestUpdateWorkflow and replaced with TestHelper.verify.\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/658475318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/658927619","html_url":"https://github.com/apache/helix/pull/1151#issuecomment-658927619","issue_url":"https://api.github.com/repos/apache/helix/issues/1151","id":658927619,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODkyNzYxOQ==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-15T18:24:19Z","updated_at":"2020-07-15T18:24:19Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang   \r\nFinal commit message:\r\n## Fix enableWagedRebalance by respecting resource names argument ##\r\nenableWagedRebalance() is not currently respecting the resource names that are passed to it - it's enabling waged for all resources, which isn't correct. The fix is to only enable waged for the provided resource names.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/658927619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/658976049","html_url":"https://github.com/apache/helix/pull/1076#issuecomment-658976049","issue_url":"https://api.github.com/repos/apache/helix/issues/1076","id":658976049,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODk3NjA0OQ==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-15T19:56:24Z","updated_at":"2020-07-15T19:56:24Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @alirezazamani    \r\nFinal commit message:\r\n## Recover Workflow Garbage Collection Logic ##\r\nAdded back workflow garbage collection logic; changed garbage collection stage to calculate jobs/workflows to purge in main thread, and do garbage collection in the async thread. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/658976049/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/659666077","html_url":"https://github.com/apache/helix/pull/1149#issuecomment-659666077","issue_url":"https://api.github.com/repos/apache/helix/issues/1149","id":659666077,"node_id":"MDEyOklzc3VlQ29tbWVudDY1OTY2NjA3Nw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-16T20:52:26Z","updated_at":"2020-07-16T20:52:26Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @dasahcc ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/659666077/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/660765154","html_url":"https://github.com/apache/helix/pull/1157#issuecomment-660765154","issue_url":"https://api.github.com/repos/apache/helix/issues/1157","id":660765154,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDc2NTE1NA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T02:28:39Z","updated_at":"2020-07-20T02:28:39Z","author_association":"CONTRIBUTOR","body":"Could you do \"fixes #N\" in Issues section? That way, the issue gets closed when PR gets merged into master automatically :)","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/660765154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/660834272","html_url":"https://github.com/apache/helix/pull/1108#issuecomment-660834272","issue_url":"https://api.github.com/repos/apache/helix/issues/1108","id":660834272,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDgzNDI3Mg==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T06:37:46Z","updated_at":"2020-07-20T06:37:46Z","author_association":"CONTRIBUTOR","body":"> Base64 is fine, but the other support for different compression algorithms won't be scalable.\r\n> I think we should stop at base64 support in the Helix rest level. And then add a Java API based on the rest API to provide a way that application client can pass their original customized ZkSerializer and get the correct data back.\r\n\r\nHad an offline sync with @jiajunwang . Will clean up the compression algorithm and keep only base64 support.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/660834272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/661253597","html_url":"https://github.com/apache/helix/pull/1142#issuecomment-661253597","issue_url":"https://api.github.com/repos/apache/helix/issues/1142","id":661253597,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTI1MzU5Nw==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T18:18:00Z","updated_at":"2020-07-20T18:18:32Z","author_association":"NONE","body":"> Please address the comments. Approving because the pending issues are minor, style-related issues. Also, please rebase from master and run the tests before marking it as ready for being merged. Great work!\r\n\r\n@narendly Thank you for reviewing. I addressed your final comments as well. Let me do final checks and run several rounds of tests. After that, I will put final message for merging. Thanks ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/661253597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/661276855","html_url":"https://github.com/apache/helix/pull/1157#issuecomment-661276855","issue_url":"https://api.github.com/repos/apache/helix/issues/1157","id":661276855,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTI3Njg1NQ==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T19:04:21Z","updated_at":"2020-07-20T19:04:21Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly \r\nFinal commit message:\r\nFix TestRebalancePipeline using correct session id and cache initialization.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/661276855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/661278267","html_url":"https://github.com/apache/helix/pull/1157#issuecomment-661278267","issue_url":"https://api.github.com/repos/apache/helix/issues/1157","id":661278267,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTI3ODI2Nw==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T19:07:17Z","updated_at":"2020-07-20T19:07:17Z","author_association":"CONTRIBUTOR","body":"In the test testDuplicateMsg from TestRebalancePipeline, currently an invalid session id is used.\r\nThe wrong session id makes the following test and assertion meaningless. This PR uses the correct session id liveInstances.get(0).getEphemeralOwner() instead. \r\n\r\nAlso, we found a NPE thrown during the pipeline, causing the pipeline to stop, due to the missing thread pool in setAsyncTasksThreadPool. This PR works around the issue by giving it a thread pool and adds an issue reference in the comment block.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/661278267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/661314378","html_url":"https://github.com/apache/helix/pull/1159#issuecomment-661314378","issue_url":"https://api.github.com/repos/apache/helix/issues/1159","id":661314378,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTMxNDM3OA==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T20:24:51Z","updated_at":"2020-07-20T20:24:51Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @dasahcc \r\nFinal commit message:\r\nAdd tutorial for customized view.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/661314378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/661452522","html_url":"https://github.com/apache/helix/pull/1161#issuecomment-661452522","issue_url":"https://api.github.com/repos/apache/helix/issues/1161","id":661452522,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTQ1MjUyMg==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T23:47:12Z","updated_at":"2020-07-20T23:47:12Z","author_association":"CONTRIBUTOR","body":"This PR is ready to merge, approved by @dasahcc \r\nfinal commit message:\r\nAdd customized view tutorial to main page","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/661452522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/661971760","html_url":"https://github.com/apache/helix/pull/1142#issuecomment-661971760","issue_url":"https://api.github.com/repos/apache/helix/issues/1142","id":661971760,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTk3MTc2MA==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-21T16:40:04Z","updated_at":"2020-07-21T16:40:04Z","author_association":"NONE","body":"This PR is ready to be merged, approved by @narendly \r\n\r\nFinal commit message:\r\nRespect maximum number of attempts for the tasks\r\n\r\nIn this commit, several scheduling parts have been changed in order to\r\nenforce the scheduler to respect maximum number of attempts for\r\nthe tasks.\r\n\r\nAlso, it has been observed that when a task being dropped and\r\nscheduled again, max number of attempts is not being respected.\r\nin this commit, further checks is added to avoid schedule the\r\ntasks again once we reach its maximum number of attempts.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/661971760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/661992655","html_url":"https://github.com/apache/helix/pull/1157#issuecomment-661992655","issue_url":"https://api.github.com/repos/apache/helix/issues/1157","id":661992655,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTk5MjY1NQ==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-21T17:16:52Z","updated_at":"2020-07-21T17:16:52Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @narendly\r\nFinal commit message:\r\nFix TestRebalancePipeline using correct session id and cache initialization.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/661992655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/662618491","html_url":"https://github.com/apache/helix/pull/1124#issuecomment-662618491","issue_url":"https://api.github.com/repos/apache/helix/issues/1124","id":662618491,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjYxODQ5MQ==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-22T18:37:37Z","updated_at":"2020-07-22T18:37:37Z","author_association":"CONTRIBUTOR","body":"This PR is ready to merge. Approved by @jiajunwang \r\n\r\nFinal commit message:\r\nAdd stale message cache to keep processed but not deleted messages. Controller will not need to wait for these messages tp be gone before sending more messages to participants.\r\nThis change will improve the rate of P2P messages and help reduce mastership handoff latency. \r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/662618491/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/662793749","html_url":"https://github.com/apache/helix/pull/1109#issuecomment-662793749","issue_url":"https://api.github.com/repos/apache/helix/issues/1109","id":662793749,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mjc5Mzc0OQ==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T02:49:09Z","updated_at":"2020-07-23T02:49:09Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang \r\n```\r\nFor ZkClient's getChildren() operation, if there are a large number of children and the response packet size exceeds jute.maxbuffer default value 4MB on zk client side, ZkClient will get a ConnectionLossException and keep retrying connecting to ZK. The consequence is, the infinite retry may cause heavy GC on ZK server and kill ZK server.\r\n\r\nThis commit implements a workaround to exit retry loop for getChildren() if a large number of children cause connection loss. \r\n```","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/662793749/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/662847620","html_url":"https://github.com/apache/helix/pull/1045#issuecomment-662847620","issue_url":"https://api.github.com/repos/apache/helix/issues/1045","id":662847620,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mjg0NzYyMA==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T06:53:33Z","updated_at":"2020-07-23T06:53:33Z","author_association":"CONTRIBUTOR","body":"Verified. Result is in the description pic.\r\n\r\nThis PR is ready to be merged, approved by @jiajunwang \r\n\r\nHelix jars built based on ivy dependencies don't have the same dependencies as open source helix jars built with pom files.\r\nThis issue could cause inconsistent behaviors between internal helix lib release and open source lib release. So release certification doesn't catch the dependency issue. This commit updates ivy files to make dependencies same as pom.\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/662847620/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/663107710","html_url":"https://github.com/apache/helix/pull/1167#issuecomment-663107710","issue_url":"https://api.github.com/repos/apache/helix/issues/1167","id":663107710,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzEwNzcxMA==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T16:34:10Z","updated_at":"2020-07-23T16:34:10Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang   \r\nFinal commit message:\r\n## Change getBaselineAasignment/getBestPossibleAssignment to account for partial-WAGED clusters ##\r\nThe logics are now changed to a per resource level. If a resource has baseline/best possible, the baseline/best possible will be used; else, the current state will be used. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/663107710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/663243224","html_url":"https://github.com/apache/helix/pull/1119#issuecomment-663243224","issue_url":"https://api.github.com/repos/apache/helix/issues/1119","id":663243224,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzI0MzIyNA==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T21:32:39Z","updated_at":"2020-07-23T21:32:39Z","author_association":"CONTRIBUTOR","body":"This pull request is good to merge into master. \r\n\r\ndescription\r\n\r\n> \r\n    Helix may see stale data when session expires and get reconnected to\r\n    a slower ZKServer. This would cause various correctness problem.\r\n    We would call sync() to ZKserver first. This ensures Helix would\r\n    not see data that saw before.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/663243224/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/663348401","html_url":"https://github.com/apache/helix/pull/1165#issuecomment-663348401","issue_url":"https://api.github.com/repos/apache/helix/issues/1165","id":663348401,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzM0ODQwMQ==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T05:06:16Z","updated_at":"2020-07-24T05:27:29Z","author_association":"NONE","body":"This PR is ready to be merged, approved by @dasahcc \r\n\r\nFinal commit message:\r\nCalculate quota based on CurrentState\r\n\r\nIn this commit, the new methods have been added to AssignableInstanceManager\r\nwhich allow controller to calculate quota based on CurrentState and pending \r\nmessages.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/663348401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/663679182","html_url":"https://github.com/apache/helix/pull/1169#issuecomment-663679182","issue_url":"https://api.github.com/repos/apache/helix/issues/1169","id":663679182,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzY3OTE4Mg==","user":{"login":"mgao0","id":31704180,"node_id":"MDQ6VXNlcjMxNzA0MTgw","avatar_url":"https://avatars.githubusercontent.com/u/31704180?v=4","gravatar_id":"","url":"https://api.github.com/users/mgao0","html_url":"https://github.com/mgao0","followers_url":"https://api.github.com/users/mgao0/followers","following_url":"https://api.github.com/users/mgao0/following{/other_user}","gists_url":"https://api.github.com/users/mgao0/gists{/gist_id}","starred_url":"https://api.github.com/users/mgao0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgao0/subscriptions","organizations_url":"https://api.github.com/users/mgao0/orgs","repos_url":"https://api.github.com/users/mgao0/repos","events_url":"https://api.github.com/users/mgao0/events{/privacy}","received_events_url":"https://api.github.com/users/mgao0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T18:42:14Z","updated_at":"2020-07-24T18:42:14Z","author_association":"CONTRIBUTOR","body":"Great job Ramin! Thank you for your hard work. \r\nI think your change shouldn't affect our tests, but 6 tests failed is a bit concerning. @kaisun2000 @jiajunwang here to see if it's expected.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/663679182/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/663919463","html_url":"https://github.com/apache/helix/pull/1174#issuecomment-663919463","issue_url":"https://api.github.com/repos/apache/helix/issues/1174","id":663919463,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzkxOTQ2Mw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-26T00:16:15Z","updated_at":"2020-07-26T00:16:15Z","author_association":"CONTRIBUTOR","body":"I think / is not necessary?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/663919463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/663919897","html_url":"https://github.com/apache/helix/pull/1174#issuecomment-663919897","issue_url":"https://api.github.com/repos/apache/helix/issues/1174","id":663919897,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzkxOTg5Nw==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-26T00:21:19Z","updated_at":"2020-07-26T00:21:19Z","author_association":"CONTRIBUTOR","body":"> I think / is not necessary?\r\n\r\n@jiajunwang It is. Single line of dependency tag needs `/`.  `<dependency />` vs `<dependency xxx></dependency>` ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/663919897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/663920137","html_url":"https://github.com/apache/helix/pull/1174#issuecomment-663920137","issue_url":"https://api.github.com/repos/apache/helix/issues/1174","id":663920137,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzkyMDEzNw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-26T00:24:30Z","updated_at":"2020-07-26T00:24:56Z","author_association":"CONTRIBUTOR","body":"> > I think / is not necessary?\r\n> \r\n> @jiajunwang It is. Single line of dependency tag needs `/`. `<dependency />` vs `<dependency xxx></dependency>`\r\n\r\nYeah, I thought the next line is \"`</dependency>`\", it is `</dependencies>`.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/663920137/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/663920485","html_url":"https://github.com/apache/helix/pull/1174#issuecomment-663920485","issue_url":"https://api.github.com/repos/apache/helix/issues/1174","id":663920485,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzkyMDQ4NQ==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-26T00:28:35Z","updated_at":"2020-07-26T00:28:35Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @jiajunwang \r\n\r\nFix double quotes missing in metrics-common ivy dependency file.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/663920485/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/663944776","html_url":"https://github.com/apache/helix/pull/1172#issuecomment-663944776","issue_url":"https://api.github.com/repos/apache/helix/issues/1172","id":663944776,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mzk0NDc3Ng==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-26T06:49:20Z","updated_at":"2020-07-26T06:49:20Z","author_association":"CONTRIBUTOR","body":"@zhangmeng916 Good doc! I would suggest using google docs or office to do spell check if not yet. It may help polish the doc. ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/663944776/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/664004262","html_url":"https://github.com/apache/helix/pull/1172#issuecomment-664004262","issue_url":"https://api.github.com/repos/apache/helix/issues/1172","id":664004262,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDAwNDI2Mg==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-26T15:47:07Z","updated_at":"2020-07-26T15:47:07Z","author_association":"CONTRIBUTOR","body":"This PR is read to be merged. Approved by @pkuwm \r\nFinal commit message:\r\nAdd tutorial for how to use cloud support in Helix for participant auto registration.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/664004262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/664527721","html_url":"https://github.com/apache/helix/pull/1169#issuecomment-664527721","issue_url":"https://api.github.com/repos/apache/helix/issues/1169","id":664527721,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDUyNzcyMQ==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-27T17:19:05Z","updated_at":"2020-07-27T17:19:05Z","author_association":"CONTRIBUTOR","body":"There's no need to embed the ticket number in the commit title. Let's remove it -> remove [HELIX-1168].","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/664527721/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/664553421","html_url":"https://github.com/apache/helix/pull/1172#issuecomment-664553421","issue_url":"https://api.github.com/repos/apache/helix/issues/1172","id":664553421,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDU1MzQyMQ==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-27T18:07:41Z","updated_at":"2020-07-27T18:07:41Z","author_association":"CONTRIBUTOR","body":"A question, for .md, what command do you use to validate the format of it? \"man\"","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/664553421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/664554281","html_url":"https://github.com/apache/helix/pull/1172#issuecomment-664554281","issue_url":"https://api.github.com/repos/apache/helix/issues/1172","id":664554281,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDU1NDI4MQ==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-27T18:09:33Z","updated_at":"2020-07-27T18:09:33Z","author_association":"CONTRIBUTOR","body":"> A question, for .md, what command do you use to validate the format of it? \"man\"\r\n\r\n@kaisun2000 you can mvn site:site, then it'll give you the link to see the webpage generated by your md file.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/664554281/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/665415659","html_url":"https://github.com/apache/helix/pull/1186#issuecomment-665415659","issue_url":"https://api.github.com/repos/apache/helix/issues/1186","id":665415659,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTQxNTY1OQ==","user":{"login":"kaisun2000","id":52840222,"node_id":"MDQ6VXNlcjUyODQwMjIy","avatar_url":"https://avatars.githubusercontent.com/u/52840222?v=4","gravatar_id":"","url":"https://api.github.com/users/kaisun2000","html_url":"https://github.com/kaisun2000","followers_url":"https://api.github.com/users/kaisun2000/followers","following_url":"https://api.github.com/users/kaisun2000/following{/other_user}","gists_url":"https://api.github.com/users/kaisun2000/gists{/gist_id}","starred_url":"https://api.github.com/users/kaisun2000/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaisun2000/subscriptions","organizations_url":"https://api.github.com/users/kaisun2000/orgs","repos_url":"https://api.github.com/users/kaisun2000/repos","events_url":"https://api.github.com/users/kaisun2000/events{/privacy}","received_events_url":"https://api.github.com/users/kaisun2000/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-29T03:54:53Z","updated_at":"2020-07-29T03:54:53Z","author_association":"CONTRIBUTOR","body":"This diff is ready to merge.\r\n\r\n`    Fix TestRawZkClient callbackcnt related metrics in ZkMonitor. In\r\n    sum, sync() call is used asynchronously as the first request to\r\n    ZooKeeper server. We just need to account metrics for this call.`","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/665415659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/665772090","html_url":"https://github.com/apache/helix/pull/1180#issuecomment-665772090","issue_url":"https://api.github.com/repos/apache/helix/issues/1180","id":665772090,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTc3MjA5MA==","user":{"login":"alirezazamani","id":9290963,"node_id":"MDQ6VXNlcjkyOTA5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9290963?v=4","gravatar_id":"","url":"https://api.github.com/users/alirezazamani","html_url":"https://github.com/alirezazamani","followers_url":"https://api.github.com/users/alirezazamani/followers","following_url":"https://api.github.com/users/alirezazamani/following{/other_user}","gists_url":"https://api.github.com/users/alirezazamani/gists{/gist_id}","starred_url":"https://api.github.com/users/alirezazamani/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alirezazamani/subscriptions","organizations_url":"https://api.github.com/users/alirezazamani/orgs","repos_url":"https://api.github.com/users/alirezazamani/repos","events_url":"https://api.github.com/users/alirezazamani/events{/privacy}","received_events_url":"https://api.github.com/users/alirezazamani/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-29T16:37:21Z","updated_at":"2020-07-29T16:37:21Z","author_association":"NONE","body":"This PR is ready to be merged, approved by @dasahcc \r\n\r\nFinal commit message:\r\nRemove race condition in TestTaskSchedulingTwoCurrentStates\r\n\r\nIn this commit, TestTaskSchedulingTwoCurrentStates has been stabilized\r\nby creating SEMI-AUTO resource and update the preferenceList to avoid\r\nrace condition that happens when test and controller update the\r\npreferenceList at the same time.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/665772090/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/665778233","html_url":"https://github.com/apache/helix/pull/1181#issuecomment-665778233","issue_url":"https://api.github.com/repos/apache/helix/issues/1181","id":665778233,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NTc3ODIzMw==","user":{"login":"NealSun96","id":18000949,"node_id":"MDQ6VXNlcjE4MDAwOTQ5","avatar_url":"https://avatars.githubusercontent.com/u/18000949?v=4","gravatar_id":"","url":"https://api.github.com/users/NealSun96","html_url":"https://github.com/NealSun96","followers_url":"https://api.github.com/users/NealSun96/followers","following_url":"https://api.github.com/users/NealSun96/following{/other_user}","gists_url":"https://api.github.com/users/NealSun96/gists{/gist_id}","starred_url":"https://api.github.com/users/NealSun96/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NealSun96/subscriptions","organizations_url":"https://api.github.com/users/NealSun96/orgs","repos_url":"https://api.github.com/users/NealSun96/repos","events_url":"https://api.github.com/users/NealSun96/events{/privacy}","received_events_url":"https://api.github.com/users/NealSun96/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-29T16:49:11Z","updated_at":"2020-07-29T16:49:11Z","author_association":"CONTRIBUTOR","body":"This PR is ready to be merged, approved by @alirezazamani  \r\nFinal commit message:\r\n## Recover Workflow Garbage Collection Logic ##\r\nRecover Workflow Garbage Collection Logic","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/665778233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/666745955","html_url":"https://github.com/apache/helix/pull/1192#issuecomment-666745955","issue_url":"https://api.github.com/repos/apache/helix/issues/1192","id":666745955,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Njc0NTk1NQ==","user":{"login":"zhangmeng916","id":56051770,"node_id":"MDQ6VXNlcjU2MDUxNzcw","avatar_url":"https://avatars.githubusercontent.com/u/56051770?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangmeng916","html_url":"https://github.com/zhangmeng916","followers_url":"https://api.github.com/users/zhangmeng916/followers","following_url":"https://api.github.com/users/zhangmeng916/following{/other_user}","gists_url":"https://api.github.com/users/zhangmeng916/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangmeng916/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangmeng916/subscriptions","organizations_url":"https://api.github.com/users/zhangmeng916/orgs","repos_url":"https://api.github.com/users/zhangmeng916/repos","events_url":"https://api.github.com/users/zhangmeng916/events{/privacy}","received_events_url":"https://api.github.com/users/zhangmeng916/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-30T22:30:40Z","updated_at":"2020-07-30T22:30:40Z","author_association":"CONTRIBUTOR","body":"This PR is read to be merged. Approved by @dasahcc \r\nFinal commit message \r\nAdd cloud support tutorial to main page","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/666745955/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/666811379","html_url":"https://github.com/apache/helix/pull/1190#issuecomment-666811379","issue_url":"https://api.github.com/repos/apache/helix/issues/1190","id":666811379,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NjgxMTM3OQ==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T00:17:55Z","updated_at":"2020-07-31T00:17:55Z","author_association":"CONTRIBUTOR","body":"@jiajunwang By \"zombie\" participant, you meant the ephemeral node doesn't have any active zk connection/session, but it is not deleted by ZK?","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/666811379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/666838643","html_url":"https://github.com/apache/helix/pull/1190#issuecomment-666838643","issue_url":"https://api.github.com/repos/apache/helix/issues/1190","id":666838643,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NjgzODY0Mw==","user":{"login":"jiajunwang","id":1803880,"node_id":"MDQ6VXNlcjE4MDM4ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1803880?v=4","gravatar_id":"","url":"https://api.github.com/users/jiajunwang","html_url":"https://github.com/jiajunwang","followers_url":"https://api.github.com/users/jiajunwang/followers","following_url":"https://api.github.com/users/jiajunwang/following{/other_user}","gists_url":"https://api.github.com/users/jiajunwang/gists{/gist_id}","starred_url":"https://api.github.com/users/jiajunwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiajunwang/subscriptions","organizations_url":"https://api.github.com/users/jiajunwang/orgs","repos_url":"https://api.github.com/users/jiajunwang/repos","events_url":"https://api.github.com/users/jiajunwang/events{/privacy}","received_events_url":"https://api.github.com/users/jiajunwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T00:40:37Z","updated_at":"2020-07-31T00:40:37Z","author_association":"CONTRIBUTOR","body":"> @jiajunwang By \"zombie\" participant, you meant the ephemeral node doesn't have any active zk connection/session, but it is not deleted by ZK?\r\n\r\nPlease read the description of PR, \"the instance has an active zk connection, but refuse to do any work\"","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/666838643/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/666862179","html_url":"https://github.com/apache/helix/pull/1190#issuecomment-666862179","issue_url":"https://api.github.com/repos/apache/helix/issues/1190","id":666862179,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Njg2MjE3OQ==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-31T01:35:15Z","updated_at":"2020-07-31T01:35:15Z","author_association":"CONTRIBUTOR","body":"> > @jiajunwang By \"zombie\" participant, you meant the ephemeral node doesn't have any active zk connection/session, but it is not deleted by ZK?\r\n> \r\n> Please read the description of PR, \"the instance has an active zk connection, but refuse to do any work\"\r\n\r\nOh I read \"**an active** zkconnection\" as **inactive** zkconnection...","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/666862179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/667440493","html_url":"https://github.com/apache/helix/pull/1199#issuecomment-667440493","issue_url":"https://api.github.com/repos/apache/helix/issues/1199","id":667440493,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzQ0MDQ5Mw==","user":{"login":"huizhilu","id":5187721,"node_id":"MDQ6VXNlcjUxODc3MjE=","avatar_url":"https://avatars.githubusercontent.com/u/5187721?v=4","gravatar_id":"","url":"https://api.github.com/users/huizhilu","html_url":"https://github.com/huizhilu","followers_url":"https://api.github.com/users/huizhilu/followers","following_url":"https://api.github.com/users/huizhilu/following{/other_user}","gists_url":"https://api.github.com/users/huizhilu/gists{/gist_id}","starred_url":"https://api.github.com/users/huizhilu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huizhilu/subscriptions","organizations_url":"https://api.github.com/users/huizhilu/orgs","repos_url":"https://api.github.com/users/huizhilu/repos","events_url":"https://api.github.com/users/huizhilu/events{/privacy}","received_events_url":"https://api.github.com/users/huizhilu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-01T00:46:25Z","updated_at":"2020-08-01T00:46:25Z","author_association":"CONTRIBUTOR","body":"> The movement of the classes is logically not what we intended to do. We do want them in the common package. Let's think about better way to do it. But glad to know there are not many classes impacted.\r\n\r\n@jiajunwang \r\nFor current structure, helix-common is actually redundant as only helix-core depends on helix-common. And helix-common has the same package paths with helix-core. That being said, it is totally fine to just merge helix-common to helix-core. With current structure, I don't see a value that we have helix-common but only adds redundancy.\r\n\r\nThe only movement of classes is in metrics-common. The purpose is to clearly give a dedicated package path for metrics-common and cleanly avoid exporting classes of metrics-common to helix-core.jar.\r\n\r\nI 100% agree that we should bring up a good plan to clean up the structure. This is what I would like to push forward to make helix code structure clear. And I believe you do, as well, and you possibly have an idea to restructure code base. :) ","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/667440493/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/667557388","html_url":"https://github.com/apache/helix/pull/1199#issuecomment-667557388","issue_url":"https://api.github.com/repos/apache/helix/issues/1199","id":667557388,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzU1NzM4OA==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-01T16:40:29Z","updated_at":"2020-08-01T16:40:29Z","author_association":"CONTRIBUTOR","body":"> > The movement of the classes is logically not what we intended to do. We do want them in the common package. Let's think about better way to do it. But glad to know there are not many classes impacted.\r\n> \r\n> @jiajunwang\r\n> For current structure, helix-common is actually redundant as only helix-core depends on helix-common. And helix-common has the same package paths with helix-core. That being said, it is totally fine to just merge helix-common to helix-core. With current structure, I don't see a value that we have helix-common but only adds redundancy.\r\n> \r\n\r\n\r\nIt was an explicit design choice when we separated helix-common from helix-core. We shouldn't consider merging it back into helix-core as that would further complicate the module structure.","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/667557388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/helix/issues/comments/667558303","html_url":"https://github.com/apache/helix/issues/1198#issuecomment-667558303","issue_url":"https://api.github.com/repos/apache/helix/issues/1198","id":667558303,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NzU1ODMwMw==","user":{"login":"narendly","id":10107095,"node_id":"MDQ6VXNlcjEwMTA3MDk1","avatar_url":"https://avatars.githubusercontent.com/u/10107095?v=4","gravatar_id":"","url":"https://api.github.com/users/narendly","html_url":"https://github.com/narendly","followers_url":"https://api.github.com/users/narendly/followers","following_url":"https://api.github.com/users/narendly/following{/other_user}","gists_url":"https://api.github.com/users/narendly/gists{/gist_id}","starred_url":"https://api.github.com/users/narendly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/narendly/subscriptions","organizations_url":"https://api.github.com/users/narendly/orgs","repos_url":"https://api.github.com/users/narendly/repos","events_url":"https://api.github.com/users/narendly/events{/privacy}","received_events_url":"https://api.github.com/users/narendly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-08-01T16:47:46Z","updated_at":"2020-08-01T16:47:46Z","author_association":"CONTRIBUTOR","body":"> There are duplicate classes at runtime since 1.0+, because of multiple modules packaging. Two different JARs contain the same package but with different contents. Eg, both helix-core.jar and metrics-common.jar contains `SensorNameProvider.class`. And at tests runtime, we have a check to detect duplicate classes and this causes tests failure.\r\n> \r\n> The problem is, when we package the helix jars, the dependent subproject's classes are packaged into helix-core.jar: all classes in module helix-core and its dependencies match `org.apache.helix.*` are packaged to helix-core.jar. Then there are duplicate classes from metrics-common.jar/zookeeper-api.jar/helix-core.jar\r\n> \r\n> Though helix doesn't have duplicate classes in the same package, it is still not a good practice to package the same class into two different jars that have dependency relation.\r\n> \r\n\r\nI'm not understanding what kind of test failures we are seeing. Could you post what failures we are seeing here?\r\n","reactions":{"url":"https://api.github.com/repos/apache/helix/issues/comments/667558303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]