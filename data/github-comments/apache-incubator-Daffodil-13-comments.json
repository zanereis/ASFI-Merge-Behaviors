[{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1403712956","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1403712956","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1403712956,"node_id":"IC_kwDOBhBG1s5TqvW8","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-25T14:31:32Z","updated_at":"2023-01-25T14:31:32Z","author_association":"MEMBER","body":"`scripts/lint-split-packages.scala` should be working now. It should issue a bunch of errors when executed before the refactor and only a single warning after the refactor. I'm not sure what the best way is to incorporate this into the sbt build chain or in the CI if we wish to do that.  ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1403712956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1403734818","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1403734818","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1403734818,"node_id":"IC_kwDOBhBG1s5Tq0si","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-25T14:47:07Z","updated_at":"2023-01-25T14:47:07Z","author_association":"MEMBER","body":"> I'm not sure what the best way is to incorporate this into the sbt build chain or in the CI if we wish to do that.\r\n\r\nOne approach would be to create a new sbt task (e.g. sbt osgiCheck) and move the split package logic into the body of that task. I believe you could define the task an all logic in something like `project/OsgiCheck.scala` so it shouldn't require to much of a change. Another benefit of this approach is you can use other sbt tasks like `sources.value` to get a list of all scala and java source files--things like that might simplify the script a bit.\r\n\r\nAnother option, there might even be an existing sbt plugin that already does a similar check, seems like it would be useful to a number of projects to make sure they are OSGI compliant.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1403734818/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1404045338","html_url":"https://github.com/apache/daffodil/pull/933#issuecomment-1404045338","issue_url":"https://api.github.com/repos/apache/daffodil/issues/933","id":1404045338,"node_id":"IC_kwDOBhBG1s5TsAga","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-25T18:25:13Z","updated_at":"2023-01-25T18:25:13Z","author_association":"MEMBER","body":"@mike-mcgann, please squash and this is good to merge :+1: ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1404045338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1404401346","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1404401346","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1404401346,"node_id":"IC_kwDOBhBG1s5TtXbC","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-26T00:29:24Z","updated_at":"2023-01-26T00:29:24Z","author_association":"CONTRIBUTOR","body":"P.S. I think it would be a good idea to run scalafmt after this refactoring with a very limited .scalafmt.conf which only sorts the import lines into the correct order.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1404401346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1404445163","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1404445163","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1404445163,"node_id":"IC_kwDOBhBG1s5TtiHr","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-26T01:19:30Z","updated_at":"2023-01-26T01:19:30Z","author_association":"MEMBER","body":"> I think it would be a good idea to run scalafmt after this refactoring with a very limited .scalafmt.conf which only sorts the import lines into the correct order.\r\n\r\nYeah. After this the rename is merged would be a good time to configure and run everything through scalafmt and get all the churn done at once.\r\n\r\nAnother thing we may want to do is add any rename and scalafmt commits to `.git-blame-ignore-revs` file. GitHub will use his in the blame view and local clones can be configured to use it with the blame.ignoreRevsFile. We would have to do it in a separate PR since merging PR's changes the hash, but we can do it once all the churn is done.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1404445163/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1406689243","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1406689243","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1406689243,"node_id":"IC_kwDOBhBG1s5T2F_b","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-27T15:54:20Z","updated_at":"2023-01-27T15:54:20Z","author_association":"MEMBER","body":"> However, there were some misses that may need to be corrected.\r\n\r\nI didn't include the TDML packages in the refactoring effort because I didn't think they would be loaded into an OSGI container but I went ahead and refactored these too and this is included in the recent updates. \r\n\r\nThe macros seem to be a special case. They are in a separate package, span multiple packages, and get copied into the packages that use them. I'm not sure what we should be doing here with those. When I was talking to Mike B. he was interested in having these scripts do most of the heavy lifting and additional work to finalize could be done after. If you are okay with it, I think we should address the macros in a separate PR as that might require some research and additional discussion.     \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1406689243/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1406730060","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1406730060","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1406730060,"node_id":"IC_kwDOBhBG1s5T2P9M","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-27T16:22:08Z","updated_at":"2023-01-27T16:22:08Z","author_association":"CONTRIBUTOR","body":"> I think we should address the macros in a separate PR as that might require some research and additional discussion.\r\n\r\nThat's all right with me, and so is running scalafmt in separate PR(s) to re-sort the imports and/or reformat everything (the smaller the changes each PR makes at a time, the easier they will be to review).","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1406730060/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1406851994","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1406851994","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1406851994,"node_id":"IC_kwDOBhBG1s5T2tua","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-01-27T17:41:35Z","updated_at":"2023-01-27T17:41:35Z","author_association":"MEMBER","body":"> One approach would be to create a new sbt task (e.g. sbt osgiCheck) and move the split package logic into the body of that task. I believe you could define the task an all logic in something like `project/OsgiCheck.scala` so it shouldn't require to much of a change. Another benefit of this approach is you can use other sbt tasks like `sources.value` to get a list of all scala and java source files--things like that might simplify the script a bit.\r\n\r\nI moved the contents of the script into `project/OsgiCheck.scala` and added that as an sbt task too. I kept the filesystem traversal instead of using `sources.value` because it works already and that can always be updated when necessary. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1406851994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1412047556","html_url":"https://github.com/apache/daffodil/pull/821#issuecomment-1412047556","issue_url":"https://api.github.com/repos/apache/daffodil/issues/821","id":1412047556,"node_id":"IC_kwDOBhBG1s5UKiLE","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-01T13:19:26Z","updated_at":"2023-02-01T13:19:26Z","author_association":"MEMBER","body":"I've updated this PR and I believe all issues are resolved, including the latest of only escaping with CDATA if special chars or whitespace exist. Please take one last look at this to make sure it's ready to merge.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1412047556/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1413993924","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1413993924","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1413993924,"node_id":"IC_kwDOBhBG1s5UR9XE","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-02T16:10:40Z","updated_at":"2023-02-02T16:10:40Z","author_association":"MEMBER","body":"Outstanding issues:\r\n\r\n- Some of the refactored package names, while not ideal, can be used for now and renamed in a subsequent PR. Those changes are small enough to let the IDE do the work\r\n- Code formatting issues will be addressed in [DAFFODIL-2133](https://issues.apache.org/jira/browse/DAFFODIL-2133)\r\n\r\nAt this time, I don't think there are any remaining blockers for the refactoring. Please leave a comment if I have missed something. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1413993924/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414001903","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1414001903","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1414001903,"node_id":"IC_kwDOBhBG1s5UR_Tv","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-02T16:15:49Z","updated_at":"2023-02-02T16:15:49Z","author_association":"MEMBER","body":"Is ths plan for these scripts to be committed to the repo, or is this PR just for review and will be closed and new PR opened with the actual changes? Seems like they are really just one-off's to get our repo in shape for OSGI and we should never need them again, and may not even need to be committed. Is this correct?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414001903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414067177","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1414067177","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1414067177,"node_id":"IC_kwDOBhBG1s5USPPp","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-02T16:59:41Z","updated_at":"2023-02-02T17:01:30Z","author_association":"CONTRIBUTOR","body":"> Is ths plan for these scripts to be committed to the repo, or is this PR just for review and will be closed and new PR opened with the actual changes? \r\n\r\nWell, I would not assume that a refactoring of this scope is needed only once.  If we ever need to do another refactoring which is better done via scripts for reproducibility and review, these refactoring scripts written in both bash and scala have enough value and potential reuse that it's worth committing them to the repo and then removing them in the PR with the actual changes.  That way, the scripts will be preserved in at least one commit within git history for possible future reuse.\r\n\r\nAnd also, this PR moves FieldFinder/TestFieldFinder to markdown and nicely renders them as Scala code blocks.\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414067177/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414130418","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1414130418","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1414130418,"node_id":"IC_kwDOBhBG1s5USery","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-02T17:45:34Z","updated_at":"2023-02-02T17:45:34Z","author_association":"MEMBER","body":"> That way, the scripts will be preserved in at least one commit within git history for possible future reuse.\r\n\r\nThe scripts will always be preserved in this PR, though I understand that might be less obvious to find.\r\n\r\nSo seems reasonable to me. What are thoughts on doing the PR that makes the actual OSGI changes now, and once that review has the +1's we can then merge and revert this PR. That keeps the scripts in commit history, but allows us to make any changes if the actual OSGI changes reveals any issues that needs changes to the scripts?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414130418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414178947","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1414178947","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1414178947,"node_id":"IC_kwDOBhBG1s5USqiD","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-02T18:25:19Z","updated_at":"2023-02-02T18:25:19Z","author_association":"CONTRIBUTOR","body":"> What are thoughts on doing the PR that makes the actual OSGI changes now, and once that review has the +1's we can then merge and revert this PR. That keeps the scripts in commit history, but allows us to make any changes if the actual OSGI changes reveals any issues that needs changes to the scripts?\r\n\r\nActually, this PR performs more changes than just adding the refactor scripts.  This PR also adds the osgiCheck command to build.sbt (with project/OsgiCheck.scala), changes FieldFinder/TestFieldFinder to markdown, and adds some new ignored files to Rat.scala.  We could simply delete the scripts directory in the still-to-come refactoring PR, otherwise all these additional changes need to be done either automatically by either the scripts or manually in the other PR instead of this PR.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414178947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414215939","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1414215939","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1414215939,"node_id":"IC_kwDOBhBG1s5USzkD","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-02T18:57:20Z","updated_at":"2023-02-02T18:57:20Z","author_association":"MEMBER","body":"I would suggest that those changes (rat, osgiCheck, fieldfinder) be part of the OSGI pull request. That way we have a single commit for all the OSGI compliant changes and a single commit for the scripts. That way if anyone ever wants to look back at these scripts then they don't have to sift through a number of semi-related manual OSGI compliant changes.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414215939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414292495","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1414292495","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1414292495,"node_id":"IC_kwDOBhBG1s5UTGQP","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-02T19:59:27Z","updated_at":"2023-02-02T19:59:27Z","author_association":"MEMBER","body":"It might be useful to commit the actual scalafmt changes and we can see what we do and don't like. That would allow inline conversations if there's anything we aren't sure about or if we have different opinions.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414292495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414298363","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1414298363","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1414298363,"node_id":"IC_kwDOBhBG1s5UTHr7","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-02T20:02:41Z","updated_at":"2023-02-02T20:02:41Z","author_association":"MEMBER","body":"Formatting is now in the PR","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414298363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414472069","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1414472069","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1414472069,"node_id":"IC_kwDOBhBG1s5UTyGF","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-02T22:41:57Z","updated_at":"2023-02-02T22:41:57Z","author_association":"CONTRIBUTOR","body":"> > Is ths plan for these scripts to be committed to the repo, or is this PR just for review and will be closed and new PR opened with the actual changes?\r\n> \r\n> Well, I would not assume that a refactoring of this scope is needed only once. If we ever need to do another refactoring which is better done via scripts for reproducibility and review, these refactoring scripts written in both bash and scala have enough value and potential reuse that it's worth committing them to the repo and then removing them in the PR with the actual changes. That way, the scripts will be preserved in at least one commit within git history for possible future reuse.\r\n\r\nI'd rather keep these scripts in the code tree someplace, and not delete them and have to search the git history to find them. Absent a tag, if they're only in the history they're gone AFAIC.  There are many more reasons why we may want to write scripts like this. I'd like to have a starting point of something that worked in the past without having to hunt for it. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414472069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414527871","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1414527871","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1414527871,"node_id":"IC_kwDOBhBG1s5UT_t_","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T00:00:39Z","updated_at":"2023-02-03T00:00:39Z","author_association":"CONTRIBUTOR","body":"I have tried to find a canonical \"standard Scala code style\" scalafmt configuration without any success.  It looks like various projects have put together their own differing scalafmt configurations, often overriding many tens of parameters.  I don't even know how well scalafmt's default configuration matches \"standard Scala code style\", that is, I don't know how many scalafmt parameters we will need to override to actually match modern standard Scala code style.  Oh well....\r\n\r\n[Configuration | Scalafmt](https://scalameta.org/scalafmt/docs/configuration.html) documents the parameters (not very well, in my opinion) and shows their default values at the end of the page.\r\n\r\n[Installation | Scalafmt](https://scalameta.org/scalafmt/docs/installation.html) says that Intellij IDEA will detect a .scalafmt.conf file at the root of the project, prompt you, and if you agree, will use scalafmt instead of Intellij's own formatter when formatting files.\r\n\r\n[Gotchas | Scalafmt](https://scalameta.org/scalafmt/docs/gotchas.html) shows two situations where you can use newlines to avoid long lines without scalafmt overriding you even if maxColumn would force a longer line.\r\n\r\n[Declarations | Style Guide](https://docs.scala-lang.org/style/declarations.html) shows what I think is the most important change  scalafmt should make to match the standard Scala code style (put constructors all on one line unless too long, then put each arg on its own line with trailing commas).  I want to see trailing commas used everywhere args are put on their own lines since trailing commas on args makes formatting look consistent and makes changes to the args much easier.\r\n\r\n[DataBricks Scala Guide](https://github.com/databricks/scala-style-guide) has some different opinions than the standard Scala guide so I wouldn't follow everything it says, but some of what it says is worth reading.\r\n\r\n[[incubator-pekko-grpc] 01/09: Update scalafmt](https://www.mail-archive.com/commits@pekko.apache.org/msg00325.html) shows the first message of a 9-part pull request formatting a Scala project.  It can serve as an example of how another project has done it.\r\n\r\nI agree with Mike that alignment shouldn't be turned on.  I would like to see pragmatic changes to Daffodil code, that is, changes should be configured to be minimal except for one-line args; if scalafmt can change the last one-line arg to have a trailing comma, I'd prefer that to be done everywhere.  Thoughts?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1414527871/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1415796758","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1415796758","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1415796758,"node_id":"IC_kwDOBhBG1s5UY1gW","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T12:18:38Z","updated_at":"2023-02-03T12:18:38Z","author_association":"MEMBER","body":"> I'd rather keep these scripts in the code tree someplace, and not delete them and have to search the git history to find them.\r\n\r\nFair enough. In that case, can we rename the scripts directory to `scripts/osgi-refactor` to make it clear what the purpose is and differentiate if we ever need to build some other kind of refactoring scripts?\r\n\r\nAlso, should we include the actual OSGI changes in this PR so there's single commit related to osgi refactoring?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1415796758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1415803244","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1415803244","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1415803244,"node_id":"IC_kwDOBhBG1s5UY3Fs","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T12:25:01Z","updated_at":"2023-02-03T12:25:01Z","author_association":"MEMBER","body":"I'm also fine if we want to keep OSGI refactor scripts and OSGI compliance changes in separate commits in one PR, but I think they should be reviewed at the same time since they are really one in the same.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1415803244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1415870536","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1415870536","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1415870536,"node_id":"IC_kwDOBhBG1s5UZHhI","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T13:27:31Z","updated_at":"2023-02-03T13:27:31Z","author_association":"MEMBER","body":"> It looks like various projects have put together their own differing scalafmt configurations, often overriding many tens of parameters. \r\n\r\nIf there is a Scala project out there where we like the formatting, we can borrow that configuration. \r\n\r\n>  would like to see pragmatic changes to Daffodil code, that is, changes should be configured to be minimal except for one-line args\r\n\r\nI've also enabled import rewriting to sort and expand imports to multiple lines. If these current changes are still too much, I can look into making it much more conservative. \r\n\r\n> if scalafmt can change the last one-line arg to have a trailing comma, I'd prefer that to be done everywhere. Thoughts?\r\n\r\nI've enabled `rewrite.trailingCommas.style = always`. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1415870536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1415872039","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1415872039","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1415872039,"node_id":"IC_kwDOBhBG1s5UZH4n","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T13:29:03Z","updated_at":"2023-02-03T13:29:03Z","author_association":"MEMBER","body":"Code has been reformatted with the suggestions so far. Please take a look again and review. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1415872039/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1415891244","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1415891244","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1415891244,"node_id":"IC_kwDOBhBG1s5UZMks","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T13:46:37Z","updated_at":"2023-02-03T13:49:00Z","author_association":"MEMBER","body":"> In that case, can we rename the scripts directory to scripts/osgi-refactor\r\n\r\nDone\r\n\r\n> I'm also fine if we want to keep OSGI refactor scripts and OSGI compliance changes in separate commits in one PR, but I think they should be reviewed at the same time since they are really one in the same\r\n\r\nIf we are going to keep the scripts around, I think the easiest would be to bundle the scripts and the actual refactoring into a single PR. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1415891244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1415981613","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1415981613","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1415981613,"node_id":"IC_kwDOBhBG1s5UZiot","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T14:51:23Z","updated_at":"2023-02-03T14:51:23Z","author_association":"MEMBER","body":"Yeah, I was suggesting a single PR containing two commits, one commit for the scripts and one commit for the actual changes to make things OSGI compliant (made either manually or via scripts). Makes the commit history more clear about what is what. Also, if we use [.git-blame-ignore-revs](https://github.blog/changelog/2022-03-24-ignore-commits-in-the-blame-view-beta/) (which we probably should), then we only ignore all the move/rename stuff and not adding actual new files.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1415981613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416035909","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1416035909","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1416035909,"node_id":"IC_kwDOBhBG1s5UZv5F","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T15:35:03Z","updated_at":"2023-02-03T15:35:03Z","author_association":"CONTRIBUTOR","body":"Splitting the PR into two commits with all the move/rename changes in their own separate commit and [ignoring that commit in the blame view](https://docs.github.com/en/repositories/working-with-files/using-files/viewing-a-file#ignore-commits-in-the-blame-view) sounds good to me.   For the purpose of the git blame view, I think it makes sense to include the FieldFinder, TestFieldFinder, and Rat.scala changes in the move/rename commit and put the build.sbt & OsgiCheck.scala changes in the scripts commit.\r\n\r\nHowever, we need to do the move/rename changes in the first commit because we need to put the move/rename commit's hash in the .git-blame-ignore-revs file.  @mike-mcgann, can you run the necessary git fetch/git rebase -i/git push --force-with-lease commands to rearrange your PR into that order (first commit doing the move/rename changes, second commit saving the scripts and putting the first commit's hash in .git-blame-ignore-revs)?  Then we can review the PR for final approval before merging it.  ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416035909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416038809","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1416038809","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1416038809,"node_id":"IC_kwDOBhBG1s5UZwmZ","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T15:37:16Z","updated_at":"2023-02-03T15:37:16Z","author_association":"MEMBER","body":"If it makes things simpler, we could always do the  .git-blame-ignore-revs in a separate PR. We'll likely want to also add the scalafmt commit hash to that file, so we could wait until that's also merged.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416038809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416063771","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1416063771","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1416063771,"node_id":"IC_kwDOBhBG1s5UZ2sb","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T15:57:17Z","updated_at":"2023-02-03T15:57:17Z","author_association":"MEMBER","body":"> first commit doing the move/rename changes, second commit saving the scripts\r\n\r\nI would prefer the opposite order if that is okay--first commit is the scripts, second commit is the refactoring. If we decide to make further changes at this point, I can then discard HEAD, update HEAD~1, commit, run, commit. And easier for now too. I can rebase, verify, commit, run, commit. Otherwise I have to ignore the scripts, commit, add the scripts, run, commit. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416063771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416079565","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1416079565","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1416079565,"node_id":"IC_kwDOBhBG1s5UZ6jN","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T16:07:38Z","updated_at":"2023-02-03T16:07:38Z","author_association":"CONTRIBUTOR","body":"> I've also enabled import rewriting to sort and expand imports to multiple lines. If these current changes are still too much, I can look into making it much more conservative.\r\n\r\nI like consistency, so I don't consider sorting imports too much.  In fact, the current scalafmt configuration seems to have left 45% of Daffodil's Scala files unchanged and I see only whitespace changes to a few imports in the first 50% of the diffs (GitHub hides the remaining 50% of the diffs from view).  If scalafmt is really sorting the imports (can you check?), it must be matching the order already being used, so that's a promising start.\r\n\r\nHowever, I'll find one of these whitespace changes and comment on them there since I think Mike will want to preserve these whitespace characters inside { } imports (he put explicit instructions in an IDE setup page to ensure these whitespace characters would be inserted).","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416079565/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416129110","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1416129110","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1416129110,"node_id":"IC_kwDOBhBG1s5UaGpW","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T16:47:57Z","updated_at":"2023-02-03T16:47:57Z","author_association":"CONTRIBUTOR","body":"> I would prefer the opposite order if that is okay--first commit is the scripts, second commit is the refactoring. \r\n\r\nYes, your reasons make sense.  Like Steve said, we can punt .git-blame-ignore-revs to a future PR anyway.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416129110/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416240869","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1416240869","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1416240869,"node_id":"IC_kwDOBhBG1s5Uah7l","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T18:24:04Z","updated_at":"2023-02-03T18:24:04Z","author_association":"MEMBER","body":"I rebased, commited the scripts, ran the refactor, committed that and fixed a conflict. Ready for final review. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416240869/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416425333","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1416425333","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1416425333,"node_id":"IC_kwDOBhBG1s5UbO91","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T21:33:39Z","updated_at":"2023-02-03T21:33:39Z","author_association":"CONTRIBUTOR","body":"I took a quick look.  I ran these commands in my terminal:\r\n\r\n```shell\r\ninterran@GH3WPL13E:~$ cd apache/daffodil-mcgann/\r\ninterran@GH3WPL13E:~/apache/daffodil-mcgann$ git pull\r\nFetching origin\r\nremote: Enumerating objects: 1901, done.\r\nremote: Counting objects: 100% (1860/1860), done.\r\nremote: Compressing objects: 100% (1101/1101), done.\r\nremote: Total 1901 (delta 474), reused 1750 (delta 440), pack-reused 41\r\nReceiving objects: 100% (1901/1901), 2.38 MiB | 3.92 MiB/s, done.\r\nResolving deltas: 100% (474/474), completed with 166 local objects.\r\nFrom github.com:mike-mcgann/daffodil\r\n + 10e5daf65...9937fe68a daffodil-2683-unsplit-packages   -> origin/daffodil-2683-unsplit-packages  (forced update)\r\n * [new branch]          daffodil-2133-scalafmt           -> origin/daffodil-2133-scalafmt\r\n * [new branch]          daffodil-2676.leading_whitespace -> origin/daffodil-2676.leading_whitespace\r\n   2b8e52b82..10c520aef  main                             -> origin/main\r\nfatal: Not possible to fast-forward, aborting.\r\ninterran@GH3WPL13E:~/apache/daffodil-mcgann$ git switch daffodil-2683-unsplit-packages\r\nAlready on 'daffodil-2683-unsplit-packages'\r\nYour branch and 'origin/daffodil-2683-unsplit-packages' have diverged,\r\nand have 28 and 25 different commits each, respectively.\r\n  (use \"git pull\" to merge the remote branch into yours)\r\ninterran@GH3WPL13E:~/apache/daffodil-mcgann$ git reset --hard origin/daffodil-2683-unsplit-packages\r\nHEAD is now at 9937fe68a Refactor for OSGI compliance\r\ninterran@GH3WPL13E:~/apache/daffodil-mcgann$ git log\r\ncommit 9937fe68a44b4ba731e9cdfd58e1c1e93532acc7 (HEAD -> daffodil-2683-unsplit-packages, origin/daffodil-2683-unsplit-packages)\r\nAuthor: Mike McGann <mmcgann@owlcyberdefense.com>\r\nDate:   Fri Feb 3 13:10:25 2023 -0500\r\n\r\n    Refactor for OSGI compliance\r\n\r\n    Daffodil shares package namespaces across different libraries such that\r\n    library A can have a class named foo.bar.One and library B can have a\r\n    class named foo.bar.Two. This can cause issues with class loaders that\r\n    prohibit different jars from owning the same package (i.e., in an\r\n    OSGI container). This factoring ensures that each package is owned by\r\n    a single jar.\r\n\r\n    DAFFODIL-2683\r\n\r\ncommit 5f778d7084de722a5fcedfae5bfddfa40cdc572f\r\nAuthor: Mike McGann <mmcgann@owlcyberdefense.com>\r\nDate:   Tue Jan 10 15:37:27 2023 -0500\r\n\r\n    Add refactor scripts for OSGI compliance\r\n\r\n    Daffodil shares package namespaces across different libraries such that\r\n    library A can have a class named foo.bar.One and library B can have a\r\n    class named foo.bar.Two. This can cause issues with class loaders that\r\n    prohibit different jars from owning the same package (i.e., in an\r\n    OSGI container). These scripts refactor the code to ensure that each\r\n    package is only owned by a single jar. An sbt task, osgiCheck, has\r\n    been added to enforce compilance in the future.\r\n\r\n    DAFFODIL-2683\r\n\r\ncommit d62be6482c8594e8940832005401408b64c169dd\r\nAuthor: Steve Lawrence <slawrence@apache.org>\r\nDate:   Thu Feb 2 12:27:52 2023 -0500\r\n\r\n    Reduce the maximum length of xs:hexBinary to Int.MaxValue / 2\r\n...\r\ninterran@GH3WPL13E:~/apache/daffodil-mcgann$ git diff HEAD~2..HEAD~\r\n...\r\n```\r\n\r\nThe first commit's diff looks good except for one thing.  Rat.scala is changed in both this commit and the next commit.  It probably should be changed only in the second commit, but if no one else objects, it's not a big deal.\r\n\r\n```shell\r\ninterran@GH3WPL13E:~/apache/daffodil-mcgann$ git diff HEAD~2..HEAD~ project/Rat.scala\r\n...\r\ninterran@GH3WPL13E:~/apache/daffodil-mcgann$ git diff HEAD~..HEAD project/Rat.scala\r\n...\r\n```\r\n\r\nYou also may need to configure your IDE so that it always appends a newline as the final character in files.  My git diff complained about there being no newline at the end of the following files:\r\n\r\n```\r\ndaffodil-runtime1/src/main/scala/org/apache/daffodil/reflection/FieldFinder.scala.md\r\ndaffodil-runtime1/src/test/scala/org/apache/daffodil/reflection/TestFieldFinder.scala.md\r\nproject/OsgiCheck.scala\r\nscripts/osgi-refactor/.gitignore\r\nscripts/osgi-refactor/fix-imports.scala\r\n```\r\n\r\nIf Mike asks you to rework something in the first commit, please add newlines to these files.\r\n\r\nThe second commit's diffs look like what I saw before, although I noticed this time that some methods had a local `import NodeInfo._` statement in their bodies which was turned into an `import org.apache.daffodil.runtime1.dpath.NodeInfo._` even though there was already an `import org.apache.daffodil.runtime1.dpath.NodeInfo` at the beginning of these files.  These methods could have kept their original `import NodeInfo._` local statements without needing to qualify the import.  I also saw one `import InfosetEventKind._` get turned into `import org.apache.daffodil.runtime1.infoset.InfosetEventKind._`.\r\n\r\nFinally, the second commit also changes one line in one of the refactoring scripts, see `git diff HEAD~..HEAD scripts/osgi-refactor/refactor.sh`.  That change should've been in the first commit.  Note that I make it a habit to look at my own branch's git diff output and write a long commit message describing why I changed *each* file, which helps me catch unintended changes or rethink some changes to make them better.\r\n\r\nOK, it's Mike's turn now :).","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416425333/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416485721","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1416485721","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1416485721,"node_id":"IC_kwDOBhBG1s5UbdtZ","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-03T22:30:26Z","updated_at":"2023-02-03T22:30:26Z","author_association":"CONTRIBUTOR","body":"I disagree about rewrite.trailingCommas.style.\r\n\r\nThis should be never in my book.  \r\n\r\nA comma followed by a closing parethesis... to my eye that's a syntax error and I'm immediately thinking what got cut out by accident and where did it go.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416485721/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416558558","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1416558558","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1416558558,"node_id":"IC_kwDOBhBG1s5Ubvfe","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-04T00:34:18Z","updated_at":"2023-02-04T00:34:18Z","author_association":"CONTRIBUTOR","body":"> I disagree about rewrite.trailingCommas.style.\r\n\r\nWell, I agree with the current Scala [guide](https://docs.scala-lang.org/style/declarations.html) where it advises using trailing commas in declarations.  [SIP-27 Trailing Commas](https://docs.scala-lang.org/sips/trailing-commas.html) shipped in Scala 2.12.2, so it may have been a more recent Scala change than when Steve and you wrote most of Daffodil.  I think the reasons cited in that SIP are pretty compelling, don't you?\r\n\r\nJavaScript also [allows](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas) trailing commands in array literals, object literals, parameter definitions, function calls, named imports, named exports, and array and object destructuring.  In all these cases, the trailing comma is entirely optional and doesn't change the program's semantics in any way.  The trailing comma is particular useful when adding, removing, or reordering items in a list that spans multiple lines, because it reduces the number of lines that need to be changed, which helps with both editing and reviewing the diff.  C# also [allows](https://www.jetbrains.com/help/rider/Trailing_Commas_Style.html) you to have the trailing comma after the last item.\r\n\r\nI also found another place in the standard Scala documentation recommending using trailing commas after [compiler options](https://docs.scala-lang.org/overviews/compiler-options/#use-compiler-options-with-sbt) in build.sbt.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416558558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416561749","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1416561749","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1416561749,"node_id":"IC_kwDOBhBG1s5UbwRV","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-04T00:40:20Z","updated_at":"2023-02-04T00:40:20Z","author_association":"CONTRIBUTOR","body":"> A comma followed by a closing parenthesis... to my eye that's a syntax error and I'm immediately thinking what got cut out by accident and where did it go.\r\n\r\nHowever, that's also a good point.  The Scala guide itself says never to use trailing commas followed by a closing parenthesis on the same line for that same reason.  Scalafmt must always place the closing parenthesis on the next line indented closer to the left than the list items so that we can visually see that the list is closed and finished.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416561749/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416791117","html_url":"https://github.com/apache/daffodil/pull/948#issuecomment-1416791117","issue_url":"https://api.github.com/repos/apache/daffodil/issues/948","id":1416791117,"node_id":"IC_kwDOBhBG1s5UcoRN","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-04T16:11:54Z","updated_at":"2023-02-04T16:11:54Z","author_association":"CONTRIBUTOR","body":"On second thought, I'm now passing languageName as the second constructor parameter.  Then new language options won't need to override languageName at all.\r\n\r\n```scala\r\nobject rust extends LanguageConf(\"rust\", \"Rust\")\r\nobject cpp extends LanguageConf(\"cpp\", \"C++\")\r\nobject csharp extends LanguageConf(\"csharp\", \"C#\")\r\n```\r\n\r\nMike, a +1 please.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1416791117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1418271105","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1418271105","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1418271105,"node_id":"IC_kwDOBhBG1s5UiRmB","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-05T21:35:30Z","updated_at":"2023-02-05T21:35:30Z","author_association":"CONTRIBUTOR","body":"> > A comma followed by a closing parenthesis... to my eye that's a syntax error and I'm immediately thinking what got cut out by accident and where did it go.\r\n> \r\n> However, that's also a good point. The Scala guide itself says never to use trailing commas followed by a closing parenthesis on the same line for that same reason. Scalafmt must always place the closing parenthesis on the next line indented closer to the left than the list items so that we can visually see that the list is closed and finished.\r\n\r\nI withdraw my objection to this based on the added comma being only in multi-line forms, and never immediately preceding a parenthesis on the same line. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1418271105/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1419320520","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1419320520","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1419320520,"node_id":"IC_kwDOBhBG1s5UmRzI","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-06T15:59:39Z","updated_at":"2023-02-06T15:59:39Z","author_association":"MEMBER","body":"> The first commit's diff looks good except for one thing. Rat.scala is changed in both this commit and the next commit. \r\n\r\nI went back and fixed that so that the script adds them. \r\n\r\n> You also may need to configure your IDE so that it always appends a newline as the final character in files. My git diff complained about there being no newline at the end of the following files:\r\n\r\nI fixed the settings in both editors. Hopefully scalafmt will take care of that in the future. \r\n\r\n> The second commit's diffs look like what I saw before, although I noticed this time that some methods had a local `import NodeInfo._` statement in their bodies which was turned into an `import org.apache.daffodil.runtime1.dpath.NodeInfo._` even though there was already an `import org.apache.daffodil.runtime1.dpath.NodeInfo` at the beginning of these files. These methods could have kept their original `import NodeInfo._` local statements without needing to qualify the import. I also saw one `import InfosetEventKind._` get turned into `import org.apache.daffodil.runtime1.infoset.InfosetEventKind._`.\r\n\r\nI removed those from the script. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1419320520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1419354169","html_url":"https://github.com/apache/daffodil/pull/919#issuecomment-1419354169","issue_url":"https://api.github.com/repos/apache/daffodil/issues/919","id":1419354169,"node_id":"IC_kwDOBhBG1s5UmaA5","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-06T16:19:50Z","updated_at":"2023-02-06T16:19:50Z","author_association":"MEMBER","body":"The first commit also includes the FieldFinder changes and the OSGI check pluging. Should either/both of those be in the second commit? I could see arguments either way so don't feel that strongly about it either way but thought it was worth consideration.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1419354169/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1419770132","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1419770132","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1419770132,"node_id":"IC_kwDOBhBG1s5Un_kU","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-06T21:19:23Z","updated_at":"2023-02-06T21:19:23Z","author_association":"MEMBER","body":"This needs to be rebased to fix the conflicts now that OSGI is merged.\r\n\r\nAlso, we need to figure out how to handle the windows failures. Git on windows enables autocrlf so all the files end in CRLF instead of LF and scalafmt complains. We could just add a condition so the check only runs on linux. Or maybe a better options is to split it off into another job? We really don't need to run scalafmt on multiple OSes--running once on ubuntu should be fine. We may want to also make the OSGI check and Rat check also be separate jobs, or maybe combine those three checks into some generic job that does checks that aren't os/environment specific?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1419770132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1420759142","html_url":"https://github.com/apache/daffodil/pull/949#issuecomment-1420759142","issue_url":"https://api.github.com/repos/apache/daffodil/issues/949","id":1420759142,"node_id":"IC_kwDOBhBG1s5UrxBm","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-07T13:16:04Z","updated_at":"2023-02-07T13:16:04Z","author_association":"MEMBER","body":"> Might such a test be worth the extra time\r\n\r\nTest added. Also rebased on main to fix conflicts.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1420759142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1420823188","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1420823188","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1420823188,"node_id":"IC_kwDOBhBG1s5UsAqU","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-07T14:01:22Z","updated_at":"2023-02-07T14:01:22Z","author_association":"MEMBER","body":"> This needs to be rebased to fix the conflicts now that OSGI is merged.\r\n\r\nUpdated\r\n\r\n> Also, we need to figure out how to handle the windows failures. Git on windows enables autocrlf so all the files end in CRLF instead of LF and scalafmt complains. We could just add a condition so the check only runs on linux. Or maybe a better options is to split it off into another job?\r\n\r\nI changed it to only run on linux. I think another job for checks seems a little heavy. It will probably take longer to install and prepare the environment than to run the tests. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1420823188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1425913785","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1425913785","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1425913785,"node_id":"IC_kwDOBhBG1s5U_be5","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-10T14:50:50Z","updated_at":"2023-02-10T14:50:50Z","author_association":"MEMBER","body":">he additional parameters we might want to try are `indent.caseSite = 2`, `rewrite.rules = [ <add more rules one at a time> ]`, and maybe `rewrite.scala3.convertToNewSyntax = true`.\r\n\r\nAll the parameters have been added a single commit at a time except for `rewrite.scala3` as that requires the dialect to be set to scala3. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1425913785/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1426103735","html_url":"https://github.com/apache/daffodil/pull/956#issuecomment-1426103735","issue_url":"https://api.github.com/repos/apache/daffodil/issues/956","id":1426103735,"node_id":"IC_kwDOBhBG1s5VAJ23","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-10T17:12:44Z","updated_at":"2023-02-10T17:12:44Z","author_association":"MEMBER","body":"Confirmed scala-logging fixed the bug, so I've removed the workaround.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1426103735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1426107479","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1426107479","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1426107479,"node_id":"IC_kwDOBhBG1s5VAKxX","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-10T17:16:03Z","updated_at":"2023-02-10T17:16:03Z","author_association":"CONTRIBUTOR","body":"In conclusion, I like Imports and AvoidInfix, but we can remove `indent.caseSite = 2` and the rest of the rewrite rules.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1426107479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1426138722","html_url":"https://github.com/apache/daffodil/pull/956#issuecomment-1426138722","issue_url":"https://api.github.com/repos/apache/daffodil/issues/956","id":1426138722,"node_id":"IC_kwDOBhBG1s5VASZi","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-10T17:46:22Z","updated_at":"2023-02-10T17:46:36Z","author_association":"MEMBER","body":"Looks like UDF integration tests still trigger the throwable bug. I'll undo that change and open a ticket with scala-logging.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1426138722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1428404116","html_url":"https://github.com/apache/daffodil/pull/959#issuecomment-1428404116","issue_url":"https://api.github.com/repos/apache/daffodil/issues/959","id":1428404116,"node_id":"IC_kwDOBhBG1s5VI7eU","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-13T17:57:09Z","updated_at":"2023-02-13T17:57:09Z","author_association":"MEMBER","body":">  I can't promise that my hypothesis might be true but do you want to try it.\r\n\r\nSure thing, I'll make the change and trigger a handful of CI runs and see if it comes back.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1428404116/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1428527696","html_url":"https://github.com/apache/daffodil/pull/959#issuecomment-1428527696","issue_url":"https://api.github.com/repos/apache/daffodil/issues/959","id":1428527696,"node_id":"IC_kwDOBhBG1s5VJZpQ","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-13T19:24:55Z","updated_at":"2023-02-13T19:24:55Z","author_association":"MEMBER","body":"I was able to trigger the failure with the new code:\r\n\r\nhttps://github.com/apache/daffodil/actions/runs/4166436854/jobs/7211548107#step:15:233\r\n\r\nSo your suggested change with a different synchronization block didn't fix it.\r\n\r\nWithout an idea of what the the cause is, I suggest we switch to the original approach that avoids `newFileSystem`. It's probably not too hard to extract the modification time from each JarEntry and apply it to the file after writing it if that's preferred.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1428527696/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1428549552","html_url":"https://github.com/apache/daffodil/pull/959#issuecomment-1428549552","issue_url":"https://api.github.com/repos/apache/daffodil/issues/959","id":1428549552,"node_id":"IC_kwDOBhBG1s5VJe-w","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-13T19:39:19Z","updated_at":"2023-02-13T19:39:19Z","author_association":"CONTRIBUTOR","body":"> I was able to trigger the failure with the new code:\r\n\r\nOK, let's switch back to your solution.  The date/time is only a nice to have; you don't have to bother implementing it.  That's the kind of thing more easily done by calling a library method, assuming someone has already written a library method to copy a folder from a jar file to a folder on disk.  I looked quickly at Apache FileUtils but didn't see one.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1428549552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1428559520","html_url":"https://github.com/apache/daffodil/pull/959#issuecomment-1428559520","issue_url":"https://api.github.com/repos/apache/daffodil/issues/959","id":1428559520,"node_id":"IC_kwDOBhBG1s5VJhag","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-13T19:48:30Z","updated_at":"2023-02-13T19:48:30Z","author_association":"MEMBER","body":"I've removed the new commit, reverting back to the original PR","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1428559520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1429748216","html_url":"https://github.com/apache/daffodil/pull/959#issuecomment-1429748216","issue_url":"https://api.github.com/repos/apache/daffodil/issues/959","id":1429748216,"node_id":"IC_kwDOBhBG1s5VODn4","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-14T13:27:15Z","updated_at":"2023-02-14T13:27:15Z","author_association":"MEMBER","body":"Closing, this change has been pulled into #961","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1429748216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1429779735","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1429779735","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1429779735,"node_id":"IC_kwDOBhBG1s5VOLUX","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-14T13:51:56Z","updated_at":"2023-02-14T13:51:56Z","author_association":"MEMBER","body":"> In conclusion, I like Imports and AvoidInfix, but we can remove `indent.caseSite = 2` and the rest of the rewrite rules.\r\n\r\nUpdated with these latest changes","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1429779735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1429894170","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1429894170","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1429894170,"node_id":"IC_kwDOBhBG1s5VOnQa","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-14T15:05:55Z","updated_at":"2023-02-14T15:05:55Z","author_association":"MEMBER","body":"> When I try to use the .scalafmt.conf settings here in Intellij IDEA, I get an error unable to parse conf\r\n\r\nIn that screenshot, it says \"Scalafmt version 1.5.1 (Default)\" but it should be \"3.7.1\". Make sure `.scalafmt.conf` has:\r\n\r\n```\r\nversion = 3.7.1\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1429894170/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1430019381","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1430019381","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1430019381,"node_id":"IC_kwDOBhBG1s5VPF01","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-14T16:21:50Z","updated_at":"2023-02-14T16:21:50Z","author_association":"CONTRIBUTOR","body":"Adding the version = 3.7.1 to the scalafmt.conf file fixes the IntelliJ IDEA settings problem. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1430019381/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1430171140","html_url":"https://github.com/apache/daffodil/pull/947#issuecomment-1430171140","issue_url":"https://api.github.com/repos/apache/daffodil/issues/947","id":1430171140,"node_id":"IC_kwDOBhBG1s5VPq4E","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-14T18:12:07Z","updated_at":"2023-02-14T18:12:07Z","author_association":"CONTRIBUTOR","body":"Code coverage decreased by -0.41% only because some uncovered lines became more numerous after splitting across maxColumns.  I looked at the other pull requests and no one else seems to have an approved up-to-date pull request waiting to be merged, so let's merge this PR now before conflicts happen again.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1430171140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1431497712","html_url":"https://github.com/apache/daffodil/pull/965#issuecomment-1431497712","issue_url":"https://api.github.com/repos/apache/daffodil/issues/965","id":1431497712,"node_id":"IC_kwDOBhBG1s5VUuvw","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-15T14:55:03Z","updated_at":"2023-02-15T14:55:03Z","author_association":"CONTRIBUTOR","body":"> Feels like a number of these change hurt readability due to slightly long lines being preferred, but I'm not sure there's much we can do about it.\r\n\r\nWe are not that helpless; the long lines due to long test file paths are under our control.  I will wait for @mbeckerle's opinion whether we should make further changes like that or live with the formatting changes.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1431497712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1431776051","html_url":"https://github.com/apache/daffodil/pull/962#issuecomment-1431776051","issue_url":"https://api.github.com/repos/apache/daffodil/issues/962","id":1431776051,"node_id":"IC_kwDOBhBG1s5VVysz","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-15T17:54:03Z","updated_at":"2023-02-15T17:54:03Z","author_association":"MEMBER","body":"> I see that the new comment failed the CI's scalafmt check. Why did the check fail; did scalafmt want to rewrap the comment or what?\r\n\r\nIt was a blank line that it wanted to remove. So I just found out that with IntelliJ, if it automatically saves the file for you, it won't do the formatting. It only applies it if you manually save the file with Control-S. I'm going to see if I can disable the auto-saving as that is confusing me as I switch between IntelliJ and VS Code. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1431776051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1437233606","html_url":"https://github.com/apache/daffodil/pull/966#issuecomment-1437233606","issue_url":"https://api.github.com/repos/apache/daffodil/issues/966","id":1437233606,"node_id":"IC_kwDOBhBG1s5VqnHG","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-20T15:56:19Z","updated_at":"2023-02-20T15:56:19Z","author_association":"CONTRIBUTOR","body":"> So I think the path expression \".\" (A PathExpression containing one step: Self) is going to need special treatment.\r\n\r\n@mbeckerle Are you saying that this pull request needs an additional change?  Can you help @mike-mcgann by being more specific where the additional change may be needed?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1437233606/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1437404440","html_url":"https://github.com/apache/daffodil/pull/966#issuecomment-1437404440","issue_url":"https://api.github.com/repos/apache/daffodil/issues/966","id":1437404440,"node_id":"IC_kwDOBhBG1s5VrQ0Y","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-20T18:21:35Z","updated_at":"2023-02-20T18:21:35Z","author_association":"CONTRIBUTOR","body":"> > So I think the path expression \".\" (A PathExpression containing one step: Self) is going to need special treatment.\r\n> \r\n> @mbeckerle Are you saying that this pull request needs an additional change? Can you help @mike-mcgann by being more specific where the additional change may be needed?\r\n\r\nYes, another change is needed.  To be more specific. hexBinary is not what needs an exception in this code. We just have a test for hexBinary which calls `dfdl:valueLength(., \"bytes\")`. \r\n\r\nThe exception is not needed for hexBinary type, but for \".\" as the first argument to valueLength. For an array of *any* type, even a complex type, this expression `dfdl:valueLength(. , \"bytes\")`  (or contentLength, and for any units: bits, bytes, or characters) needs to treat \".\" specially, because \".\" doesn't refer to an array, ever, regardless of how the corresponding element declaration is declared. \".\" always refers to exactly one infoset DIElement node. \r\n\r\nI think the change is simple though. Add `def isSelf: Boolean` to PathExpression, and it is true if the path is just the Self step alone. Then use that to test for the exception, not the type. \r\n\r\nThe hexBinary test should then still work, but we should also add a test with a small simple complex type to show this working for that case also. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1437404440/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1438630902","html_url":"https://github.com/apache/daffodil/pull/966#issuecomment-1438630902","issue_url":"https://api.github.com/repos/apache/daffodil/issues/966","id":1438630902,"node_id":"IC_kwDOBhBG1s5Vv8P2","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-21T14:59:24Z","updated_at":"2023-02-21T14:59:24Z","author_association":"MEMBER","body":"> I think the change is simple though. Add `def isSelf: Boolean` to PathExpression, and it is true if the path is just the Self step alone. Then use that to test for the exception, not the type.\r\n\r\nUpdated. \r\n \r\n> The hexBinary test should then still work, but we should also add a test with a small simple complex type to show this working for that case also.\r\n\r\nIt looks like test [valueLength11](https://github.com/apache/daffodil/blob/main/daffodil-test/src/test/resources/org/apache/daffodil/section23/dfdl_functions/Functions.tdml#L418-L435) covers that condition. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1438630902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1438959376","html_url":"https://github.com/apache/daffodil/pull/964#issuecomment-1438959376","issue_url":"https://api.github.com/repos/apache/daffodil/issues/964","id":1438959376,"node_id":"IC_kwDOBhBG1s5VxMcQ","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-21T19:01:21Z","updated_at":"2023-02-21T19:01:21Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1438959376/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1439055196","html_url":"https://github.com/apache/daffodil/pull/966#issuecomment-1439055196","issue_url":"https://api.github.com/repos/apache/daffodil/issues/966","id":1439055196,"node_id":"IC_kwDOBhBG1s5Vxj1c","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-21T20:31:47Z","updated_at":"2023-02-21T20:31:47Z","author_association":"MEMBER","body":"> > The hexBinary test should then still work, but we should also add a test with a small simple complex type to show this working for that case also.\r\n> \r\n> It looks like test [valueLength11](https://github.com/apache/daffodil/blob/main/daffodil-test/src/test/resources/org/apache/daffodil/section23/dfdl_functions/Functions.tdml#L418-L435) covers that condition.\r\n\r\nThat test doesn't use a self expression. vaLen also isn't an array using self. I think Mike was suggesting a similar test as the hexBinary one hat failed, but using a complex type instead of a simple hexbinary type?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1439055196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1440151306","html_url":"https://github.com/apache/daffodil/pull/966#issuecomment-1440151306","issue_url":"https://api.github.com/repos/apache/daffodil/issues/966","id":1440151306,"node_id":"IC_kwDOBhBG1s5V1vcK","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-22T14:40:01Z","updated_at":"2023-02-22T14:40:01Z","author_association":"MEMBER","body":"> That test doesn't use a self expression. vaLen also isn't an array using self. I think Mike was suggesting a similar test as the hexBinary one hat failed, but using a complex type instead of a simple hexbinary type?\r\n\r\nI understand now. I've added those as contentLength_6 and valueLength_16","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1440151306/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1442630913","html_url":"https://github.com/apache/daffodil/pull/971#issuecomment-1442630913","issue_url":"https://api.github.com/repos/apache/daffodil/issues/971","id":1442630913,"node_id":"IC_kwDOBhBG1s5V_M0B","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-24T00:45:00Z","updated_at":"2023-02-24T00:45:00Z","author_association":"CONTRIBUTOR","body":"Note that Scala Stewart formatted the refactoring scripts too.  It's probably not worth explicitly excluding the scripts since reformatting them doesn't change their functionality anyway.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1442630913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1448439341","html_url":"https://github.com/apache/daffodil/pull/972#issuecomment-1448439341","issue_url":"https://api.github.com/repos/apache/daffodil/issues/972","id":1448439341,"node_id":"IC_kwDOBhBG1s5WVW4t","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-28T16:02:01Z","updated_at":"2023-02-28T16:02:01Z","author_association":"CONTRIBUTOR","body":"I wonder if it would be worth moving checks that aren't specific to OS and JDK versions into their own \"lint\" job inside main.yml?  It must be discouraging to make a change to a PR and see 3 out of 6 matrix jobs fail across the board.  The Rat, OSGi, scalafmt, and sonarcloud checks seem like they could run in their own job just fine.  If we run these checks asynchronously in their own job, I suspect we want to allow the matrix jobs to complete even if the lint job fails since we still want to know whether the unit and integration tests pass (the more information the better), yes?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1448439341/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1448525699","html_url":"https://github.com/apache/daffodil/pull/972#issuecomment-1448525699","issue_url":"https://api.github.com/repos/apache/daffodil/issues/972","id":1448525699,"node_id":"IC_kwDOBhBG1s5WVr-D","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-28T16:57:52Z","updated_at":"2023-02-28T16:57:52Z","author_association":"MEMBER","body":"> I wonder if it would be worth moving checks that aren't specific to OS and JDK versions into their own \"lint\" job inside main.yml? It must be discouraging to make a change to a PR and see 3 out of 6 matrix jobs fail across the board. \r\n\r\nYeah, I think that is a better long-term solution. At that time it would also be nice to see if we can have the tests run in a docker container with all the dependencies and configurations installed and ready-to-go. A bonus to that is having a image you can use locally that is the same one used in the CI build.\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1448525699/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1448550336","html_url":"https://github.com/apache/daffodil/pull/972#issuecomment-1448550336","issue_url":"https://api.github.com/repos/apache/daffodil/issues/972","id":1448550336,"node_id":"IC_kwDOBhBG1s5WVx_A","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-28T17:10:57Z","updated_at":"2023-02-28T17:10:57Z","author_association":"MEMBER","body":"> I wonder if it would be worth moving checks that aren't specific to OS and JDK versions into their own \"lint\" job inside main.yml?\r\n\r\nAgreed. It would also make the OS/JDK jobs finish 1-2 minutes quicker. Not a huge difference, but the quicker tests finish the better. The new job could also be configured to always run all checks even if one fails.\r\n\r\n> At that time it would also be nice to see if we can have the tests run in a docker container with all the dependencies and configurations installed and ready-to-go.\r\n\r\nI wouldn't want to have to maintain multiple docker images for CI tests. We already have 7 different OS/JDK combinations we have. Though I agree that a dev container could be useful. Though, most of the dependency work is handled by sbt which is straightforward to install. I think the only deps it doesn't handle is gcc and MiniXML dep, which I think most distros already provide.\r\n\r\nWhatever is decided can all be done as a separate PR though.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1448550336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1448692000","html_url":"https://github.com/apache/daffodil/pull/972#issuecomment-1448692000","issue_url":"https://api.github.com/repos/apache/daffodil/issues/972","id":1448692000,"node_id":"IC_kwDOBhBG1s5WWUkg","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-28T18:51:04Z","updated_at":"2023-02-28T18:51:04Z","author_association":"MEMBER","body":"> I wouldn't want to have to maintain multiple docker images for CI tests. We already have 7 different OS/JDK combinations we have.\r\n\r\nWe only need one for linux and latest and greatest JDK. It could be used for that build and for the lint check. The other combos could be done as it is now. It might be faster for CI to download the image than to install the dependencies and there is a chance that the CI could cache the image. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1448692000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1448714647","html_url":"https://github.com/apache/daffodil/pull/972#issuecomment-1448714647","issue_url":"https://api.github.com/repos/apache/daffodil/issues/972","id":1448714647,"node_id":"IC_kwDOBhBG1s5WWaGX","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-02-28T19:08:39Z","updated_at":"2023-02-28T19:08:39Z","author_association":"MEMBER","body":"Looking at the CI actions, installing the libxml dependency and setting up Java takes 8 seconds combined. And that's all there is as far as dependency set up. SBT and other build dependencies are already included in the ubuntu image we use. I can't tell how long it takes GitHub actions to actually download and load the ubuntu image, but it's a default hosted runner from GitHub so it's probably heavily cached.\r\n\r\nI'm not against a dev container, but saving a few seconds in CI probably isn't worth the maintenance burden of having to periodically update the image when dependencies/java version updates--it's much easier to just bump a number in a text file and let GitHub handle the rest.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1448714647/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1452492332","html_url":"https://github.com/apache/daffodil/pull/976#issuecomment-1452492332","issue_url":"https://api.github.com/repos/apache/daffodil/issues/976","id":1452492332,"node_id":"IC_kwDOBhBG1s5Wk0Ys","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-02T20:18:23Z","updated_at":"2023-03-02T20:18:23Z","author_association":"MEMBER","body":"To be done at a later time. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1452492332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1452641676","html_url":"https://github.com/apache/daffodil/pull/975#issuecomment-1452641676","issue_url":"https://api.github.com/repos/apache/daffodil/issues/975","id":1452641676,"node_id":"IC_kwDOBhBG1s5WlY2M","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-02T22:26:36Z","updated_at":"2023-03-02T22:26:36Z","author_association":"CONTRIBUTOR","body":"+1. This is cleaner than what I was suggesting. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1452641676/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1453503699","html_url":"https://github.com/apache/daffodil/pull/978#issuecomment-1453503699","issue_url":"https://api.github.com/repos/apache/daffodil/issues/978","id":1453503699,"node_id":"IC_kwDOBhBG1s5WorTT","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T13:04:17Z","updated_at":"2023-03-03T13:04:17Z","author_association":"CONTRIBUTOR","body":"We should add this command to some setup instructions.\n\nI plan to use this on all my github/gitlab based projects that use the\nfork+review discipline\n\n\n\nOn Fri, Mar 3, 2023 at 8:00 AM Steve Lawrence ***@***.***>\nwrote:\n\n> ***@***.**** approved this pull request.\n>\n> +1, I'm not sure why there's all the extra runs in the github actions.\n> Maybe it's because you accidentally pushed to the apache/daffodil repo\n> instead of your fork? FYI, I came acrossd a bit of a hack that prevents\n> this: Assuming \"asf\" is your apache/daffodil remote, you can do:\n>\n> git remote set-url --push asf \"push to apache/daffodil disabled\"\n>\n> This is a hack because it changes the push url for the asf remote to a\n> string that doesn't resolve to an actual repo. So git will complain if you\n> ever try to push to asf.\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/daffodil/pull/978#pullrequestreview-1323761313>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AALUDAZIKGS2ZHEHW2F2NDTW2HTPHANCNFSM6AAAAAAVORQC54>\n> .\n> You are receiving this because you are subscribed to this thread.Message\n> ID: ***@***.***>\n>\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1453503699/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1453509246","html_url":"https://github.com/apache/daffodil/pull/978#issuecomment-1453509246","issue_url":"https://api.github.com/repos/apache/daffodil/issues/978","id":1453509246,"node_id":"IC_kwDOBhBG1s5Wosp-","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T13:08:20Z","updated_at":"2023-03-03T13:08:20Z","author_association":"CONTRIBUTOR","body":"Ah, I think I realized what happened.  On my one machine I have my \"origin\" set to my daffodil fork, but the other machine 'origin' points to the main branch.  My mistake there.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1453509246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1453516016","html_url":"https://github.com/apache/daffodil/pull/978#issuecomment-1453516016","issue_url":"https://api.github.com/repos/apache/daffodil/issues/978","id":1453516016,"node_id":"IC_kwDOBhBG1s5WouTw","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T13:13:21Z","updated_at":"2023-03-03T13:13:21Z","author_association":"MEMBER","body":"> We should add this command to some setup instructions.\r\n\r\nGood call. I've added it to step 6 of the [Code Contributor Workflow](https://cwiki.apache.org/confluence/display/DAFFODIL/Code+Contributor+Workflow) ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1453516016/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1453519979","html_url":"https://github.com/apache/daffodil/pull/978#issuecomment-1453519979","issue_url":"https://api.github.com/repos/apache/daffodil/issues/978","id":1453519979,"node_id":"IC_kwDOBhBG1s5WovRr","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T13:16:28Z","updated_at":"2023-03-03T13:16:28Z","author_association":"CONTRIBUTOR","body":"Honestly, the only way I stay sane with git is no remote is named \"origin\". I name them all based on who owns them. My fork is named mbeckerle. If for review I pull down someone else' fork to look at more closely than a github review, the name of that remote is that person's username. The central daffodil repo is named \"asf\", at my job the central repos for other projects are named \"owl\", or if they are for clients it's the client/project's name. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1453519979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1453854429","html_url":"https://github.com/apache/daffodil/pull/977#issuecomment-1453854429","issue_url":"https://api.github.com/repos/apache/daffodil/issues/977","id":1453854429,"node_id":"IC_kwDOBhBG1s5WqA7d","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T17:20:54Z","updated_at":"2023-03-03T17:20:54Z","author_association":"CONTRIBUTOR","body":"Can I get a second committer to agree about 1) removing all SDW macros/methods that don't take a WarnID, and 2) renaming the schemaDefinitionWarningWhen/Unless methods to SDWwhen/SDWunless to make it easier to find all SDW calls with a single grep for \"SDW\"?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1453854429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1453878934","html_url":"https://github.com/apache/daffodil/pull/977#issuecomment-1453878934","issue_url":"https://api.github.com/repos/apache/daffodil/issues/977","id":1453878934,"node_id":"IC_kwDOBhBG1s5WqG6W","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T17:43:27Z","updated_at":"2023-03-03T17:43:27Z","author_association":"MEMBER","body":"> Can I get a second committer to agree about 1) removing all SDW macros/methods that don't take a WarnID, and 2) renaming the schemaDefinitionWarningWhen/Unless methods to SDWwhen/SDWunless to make it easier to find all SDW calls with a single grep for \"SDW\"?\r\n\r\nBoth changes seem like good improvements to me. We might also want to shorten `schemaDefinitionUnless` and `schemaDefintionWhen` and make everything consistent. I also kindof like an alternative capitalization of `sdwWhen` vs `SDWwhen`, but don't feel strongly about it. Though we might want to do all the renaming of stuff in a separate PR though, as it's creeping outside the scope just including warnID in messages.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1453878934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1454133401","html_url":"https://github.com/apache/daffodil/pull/977#issuecomment-1454133401","issue_url":"https://api.github.com/repos/apache/daffodil/issues/977","id":1454133401,"node_id":"IC_kwDOBhBG1s5WrFCZ","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T21:10:03Z","updated_at":"2023-03-03T21:10:03Z","author_association":"MEMBER","body":"> Can I get a second committer to agree about 1) removing all SDW macros/methods that don't take a WarnID, and 2) renaming the schemaDefinitionWarningWhen/Unless methods to SDWwhen/SDWunless to make it easier to find all SDW calls with a single grep for \"SDW\"?\r\n\r\nI agree about #1 and started implementing that. I ran into some issues with updating the RuntimeSDWs for some reason. When I run the test suite some UDF tests fail and I'm trying to track that down. It isn't specific. It just errors out saying that the UDF is not found. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1454133401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1456477768","html_url":"https://github.com/apache/daffodil/pull/977#issuecomment-1456477768","issue_url":"https://api.github.com/repos/apache/daffodil/issues/977","id":1456477768,"node_id":"IC_kwDOBhBG1s5W0BZI","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-06T16:36:29Z","updated_at":"2023-03-06T16:36:29Z","author_association":"MEMBER","body":"WarnID is now required and that was easy enough to change. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1456477768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1456479542","html_url":"https://github.com/apache/daffodil/pull/977#issuecomment-1456479542","issue_url":"https://api.github.com/repos/apache/daffodil/issues/977","id":1456479542,"node_id":"IC_kwDOBhBG1s5W0B02","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-06T16:37:16Z","updated_at":"2023-03-06T16:37:16Z","author_association":"MEMBER","body":"> Though we might want to do all the renaming of stuff in a separate PR though, as it's creeping outside the scope just including warnID in messages.\r\n\r\nI'll leave out the renaming changes for now","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1456479542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1460749045","html_url":"https://github.com/apache/daffodil/pull/981#issuecomment-1460749045","issue_url":"https://api.github.com/repos/apache/daffodil/issues/981","id":1460749045,"node_id":"IC_kwDOBhBG1s5XEUL1","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T19:39:14Z","updated_at":"2023-03-08T19:39:14Z","author_association":"MEMBER","body":"> I'm not sure how we currently implement things though, or maybe those other policies are broken too?\r\n\r\nI started with the original ticket, placed that test case in (in the form that I thought it wanted), verified that the error was the one described in the ticket, and worked from there trying to get the test to pass. I didn't find an obvious place in the code where these other cases were being handled so I focused on getting the 'none' case to work first. Once that was working, I then suspected that the other cases may not be handled since I didn't run across them. I added those additional cases as tests and some of them didn't work. I then made some additional changes to get those to pass. \r\n\r\nI just pulled the latest from main and copied over the new tests there to see what the results would be. Only the 'both' test passed--the 'initiator', 'terminator', and 'none' tests failed. So I don't think the emptyValueDelimiterPolicy got put in or in a way that was exercised by the tests. \r\n\r\nAlso, I don't have a grasp on the details of the parsing at the moment so I'm making most of my changes through trial and error and seeing what that fixes and what that breaks. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1460749045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1460762916","html_url":"https://github.com/apache/daffodil/pull/981#issuecomment-1460762916","issue_url":"https://api.github.com/repos/apache/daffodil/issues/981","id":1460762916,"node_id":"IC_kwDOBhBG1s5XEXkk","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T19:51:15Z","updated_at":"2023-03-08T19:51:15Z","author_association":"MEMBER","body":"Sounds like maybe `emptyValueDelimiterPolicy` is just completely broken/not implemented then? We might want to consider how to best implement each of these instead of doing one at a time, there might be a very clean solution.\r\n\r\nMy first insinct is that maybe we need a new combinator? So a new parser that accepts three sub parsers (initiator, content, and terminator). It parses each of these allowing some to fail depending on the `emptyValueDelimiterPolicy` and the whether the parsed content was empty.\r\n\r\nAnd the Unparse combinator would look at the value of content, and if empty then it unparses the initiator/terminator based on the policy.\r\n\r\nThis way delimiters don't need to know if they should be optional or not, and they don't have to worry about the content being empty or not. They just do what they do, and if they fail, the combinator that controls them handles it accordingly.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1460762916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1460814566","html_url":"https://github.com/apache/daffodil/pull/981#issuecomment-1460814566","issue_url":"https://api.github.com/repos/apache/daffodil/issues/981","id":1460814566,"node_id":"IC_kwDOBhBG1s5XEkLm","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T20:20:58Z","updated_at":"2023-03-08T20:20:58Z","author_association":"MEMBER","body":"> My first insinct is that maybe we need a new combinator? So a new parser that accepts three sub parsers (initiator, content, and terminator). It parses each of these allowing some to fail depending on the `emptyValueDelimiterPolicy` and the whether the parsed content was empty.\r\n\r\nThis makes more sense because it was getting a bit confusing trying to figure out how to make these changes with the current structure. I'll take a look and implementing it this way but I may have a few questions on how to do this properly. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1460814566/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1460893711","html_url":"https://github.com/apache/daffodil/pull/981#issuecomment-1460893711","issue_url":"https://api.github.com/repos/apache/daffodil/issues/981","id":1460893711,"node_id":"IC_kwDOBhBG1s5XE3gP","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T21:22:18Z","updated_at":"2023-03-08T21:22:18Z","author_association":"MEMBER","body":"I wonder if we should just say that `emptyValueDelimiterPolicy` must be `both` (I think our current behavior) and plan to implement it in a future release? Implementing this propery could be considered implementing a new DFDL feature, and the focus for 3.5.0 is bug fixes. We also don't have any formats that needing this property.\r\n\r\nWe may want to change DAFFODIL-2205 so that it isn't so much about fixing value with \"none\", but to just implement `emptyValueDelimiterPolicy` values other than \"both\"?\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1460893711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1462058276","html_url":"https://github.com/apache/daffodil/pull/981#issuecomment-1462058276","issue_url":"https://api.github.com/repos/apache/daffodil/issues/981","id":1462058276,"node_id":"IC_kwDOBhBG1s5XJT0k","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-09T13:20:08Z","updated_at":"2023-03-09T13:20:08Z","author_association":"MEMBER","body":"Ok, I'm closing this PR for now and updating the ticket with this information. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1462058276/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1464058594","html_url":"https://github.com/apache/daffodil/pull/986#issuecomment-1464058594","issue_url":"https://api.github.com/repos/apache/daffodil/issues/986","id":1464058594,"node_id":"IC_kwDOBhBG1s5XQ8Li","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T16:29:04Z","updated_at":"2023-03-10T16:29:04Z","author_association":"CONTRIBUTOR","body":"For whoever is troubleshooting, this error is reproducible when the branch is locally checked out, but it puzzles me why one jline class cannot find a method of another jline class at runtime.  A new method was added to a jline class and another jline class called it.  The new method should be callable since both classes are packaged in the same jar, yet the call is failing for some reason I haven't been able to find:\r\n\r\n```\r\njava.lang.NoSuchMethodError: 'org.jline.utils.AttributedString org.jline.utils.AttributedString.fromAnsi(java.lang.String, java.util.List, java.lang.String, java.lang.String)'\r\n\tat org.jline.reader.impl.LineReaderImpl.fromAnsi(LineReaderImpl.java:4188)\r\n```\r\n\r\nIf you check the diffs for terminal/src/main/java/org/jline/utils/AttributedString.java in <https://github.com/jline/jline3/compare/jline-parent-3.22.0...jline-parent-3.23.0>, you will see that method was added to that class and the other class was modified to call that new method as well.  I have downloaded the jline-3.23.0 jar, confirmed that both classes are in the jar, and verified that the new method is present in the jline class's public methods:\r\n\r\n```shell\r\ninterran@GH3WPL13E:~/jline$ javap -public org/jline/utils/AttributedString.class\r\nCompiled from \"AttributedString.java\"\r\npublic class org.jline.utils.AttributedString extends org.jline.utils.AttributedCharSequence {\r\n  ...\r\n  public static org.jline.utils.AttributedString fromAnsi(java.lang.String, java.util.List<java.lang.Integer>, java.lang.String, java.lang.String);\r\n  ...\r\n}\r\n```\r\n\r\nGood luck.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1464058594/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1464089452","html_url":"https://github.com/apache/daffodil/pull/986#issuecomment-1464089452","issue_url":"https://api.github.com/repos/apache/daffodil/issues/986","id":1464089452,"node_id":"IC_kwDOBhBG1s5XRDts","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T16:52:30Z","updated_at":"2023-03-10T16:52:30Z","author_association":"MEMBER","body":"I was looking at this and was equally stumped. But I found that manually running the CLI debugger worked, which makes me wonder if this is an SBT classloader issue? SBT ships and uses an older version of jline. The stack trace shows that we are stepping into the new jline code that you've pointed out, but maybe when it looks up the AttributedString class its somehow finding the older one that SBT is using?\r\n\r\nOr maybe Jline is doing something funky with classloaders? Like its caching something that that it found with SBT, and then reusing the old cached when when called from Daffodil? \r\n\r\nI'm not sure what the right solution would be to fix this though. We could probably change or CLI debuger tests to fork which should avoid the SBT classpath entirely, but I think that will increase our build times quite a bit....","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1464089452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1464126600","html_url":"https://github.com/apache/daffodil/pull/986#issuecomment-1464126600","issue_url":"https://api.github.com/repos/apache/daffodil/issues/986","id":1464126600,"node_id":"IC_kwDOBhBG1s5XRMyI","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T17:22:49Z","updated_at":"2023-03-10T17:22:49Z","author_association":"MEMBER","body":"Confirmed the above is what's happening. I added this to the `CLIDebuggerRunner` before it calls `reader.get.readLine`:\r\n```scala\r\n          val class1 = classOf[org.jline.utils.AttributedString]\r\n          val jar1 = this.getClass.getResource('/' + class1.getName.replace('.', '/') + \".class\")\r\n          System.err.println(s\"$jar1\")\r\n\r\n          val class2 = classOf[org.jline.reader.impl.LineReaderImpl]\r\n          val jar2 = this.getClass.getResource('/' + class2.getName.replace('.', '/') + \".class\")\r\n          System.err.println(s\"$jar2\")\r\n```\r\nAnd the output is:\r\n```\r\njar:file:<removed>/.sbt/boot/scala-2.12.17/org.scala-sbt/sbt/1.8.2/jline-terminal-3.19.0.jar!/org/jline/utils/AttributedString.class\r\njar:file:<removed>/daffodil.git/lib_managed/jars/org.jline/jline/jline-3.23.0.jar!/org/jline/reader/impl/LineReaderImpl.class\r\n```\r\n\r\nSo for some reason the `AttributedString` class we find is from what sbt uses, and the `LineReaderImpl` we find is what we actually depend on. I still don't know of a good fix, but this proably confrims that it's not a jline thing since we are probably using the sbt classloader at this point. This is likely a long time bug that we just haven't noticed because the classes we incorrectly get from sbt are close enough to what our jline version uses.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1464126600/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1464186685","html_url":"https://github.com/apache/daffodil/pull/986#issuecomment-1464186685","issue_url":"https://api.github.com/repos/apache/daffodil/issues/986","id":1464186685,"node_id":"IC_kwDOBhBG1s5XRbc9","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T18:09:21Z","updated_at":"2023-03-10T18:11:23Z","author_association":"CONTRIBUTOR","body":"If sbt's own jars can interfere with Daffodil's classpath while running unit tests, I am concerned because I have found several places where we could have more problems as well.\r\n\r\nI compared each jar in sbt's boot classpath with each jar in Daffodil's lib classpath and I found:\r\n\r\n- 4 jars with identical versions right now, but which could change later\r\n\r\n1. <daffodil.>/com.typesafe.config-1.4.2.jar\r\n   <sbt-1.8.2>/config-1.4.2.jar\r\n\r\n2. <daffodil.>/org.scala-lang.modules.scala-xml_2.12-2.1.0.jar\r\n   <sbt-1.8.2>/scala-xml_2.12-2.1.0.jar\r\n\r\n3. <daffodil.>/org.scala-lang.scala-library-2.12.17.jar\r\n   <sbt-1.8.2>/scala-library-2.12.17.jar\r\n\r\n4. <daffodil.>/org.scala-lang.scala-reflect-2.12.17.jar\r\n   <sbt-1.8.2>/scala-reflect-2.12.17.jar\r\n\r\n- 4 jars with different versions right now, which could be causing more problems\r\n\r\n1. <daffodil.>/org.fusesource.jansi.jansi-2.4.0.jar\r\n   <sbt-1.8.2>/jansi-2.1.0.jar\r\n\r\n2. <daffodil.>/org.jline.jline-3.22.0.jar\r\n   <sbt-1.8.2>/jline-builtins-3.19.0.jar\r\n   <sbt-1.8.2>/jline-reader-3.19.0.jar\r\n   <sbt-1.8.2>/jline-style-3.19.0.jar\r\n   <sbt-1.8.2>/jline-terminal-3.19.0.jar\r\n   <sbt-1.8.2>/jline-terminal-jansi-3.19.0.jar\r\n   <sbt-1.8.2>/jline-terminal-jna-3.19.0.jar\r\n\r\nNote that our jline jar combines classes from ALL jline jars in one place -\r\n  drwxr-xr-x         0  17-Jan-2023  16:55:04  META-INF/maven/org.jline/jline-builtins/\r\n  drwxr-xr-x         0  17-Jan-2023  16:55:04  META-INF/maven/org.jline/jline-reader/\r\n  drwxr-xr-x         0  17-Jan-2023  16:55:04  META-INF/maven/org.jline/jline-remote-ssh/\r\n  drwxr-xr-x         0  17-Jan-2023  16:55:04  META-INF/maven/org.jline/jline-remote-telnet/\r\n  drwxr-xr-x         0  17-Jan-2023  16:55:04  META-INF/maven/org.jline/jline-style/\r\n  drwxr-xr-x         0  17-Jan-2023  16:55:04  META-INF/maven/org.jline/jline-terminal/\r\n  drwxr-xr-x         0  17-Jan-2023  16:55:04  META-INF/maven/org.jline/jline-terminal-jansi/\r\n  drwxr-xr-x         0  17-Jan-2023  16:55:04  META-INF/maven/org.jline/jline-terminal-jna/\r\n\r\n3. <daffodil.>/org.scala-lang.modules.scala-parser-combinators_2.12-2.2.0.jar\r\n   <sbt-1.8.2>/scala-parser-combinators_2.12-1.1.2.jar\r\n\r\n4. <daffodil.>/org.slf4j.slf4j-api-2.0.6.jar\r\n   <sbt-1.8.2>/slf4j-api-1.7.36.jar\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1464186685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1464198258","html_url":"https://github.com/apache/daffodil/pull/986#issuecomment-1464198258","issue_url":"https://api.github.com/repos/apache/daffodil/issues/986","id":1464198258,"node_id":"IC_kwDOBhBG1s5XReRy","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T18:20:14Z","updated_at":"2023-03-10T18:20:14Z","author_association":"MEMBER","body":"Yeah, this could be bad...\r\n\r\nSome more information, if I output `class1.getClassLoader` and `class2.getClassLoader` we get this for `AttributedString`\r\n```scala\r\nJLineLoader(\r\n  file:<removed>/.sbt/boot/scala-2.12.17/org.scala-sbt/sbt/1.8.2/jna-5.12.0.jar,\r\n  file:<removed>/.sbt/boot/scala-2.12.17/org.scala-sbt/sbt/1.8.2/jline-2.14.7-sbt-a1b0ffbb8f64bb820f4f84a0c07a0c0964507493.jar,\r\n  file:<removed>/.sbt/boot/scala-2.12.17/org.scala-sbt/sbt/1.8.2/jline-terminal-jna-3.19.0.jar,\r\n  file:<removed>/.sbt/boot/scala-2.12.17/org.scala-sbt/sbt/1.8.2/jline-terminal-3.19.0.jar,\r\n  file:<removed>/.sbt/boot/scala-2.12.17/org.scala-sbt/sbt/1.8.2/jansi-2.1.0.jar,\r\n  file:<removed>/.sbt/boot/scala-2.12.17/org.scala-sbt/sbt/1.8.2/jna-platform-5.12.0.jar,\r\n  file:<removed>/.sbt/boot/scala-2.12.17/org.scala-sbt/sbt/1.8.2/jline-terminal-jansi-3.19.0.jar\r\n)\r\n\r\n``` \r\nAnd this for `LineReaderImpl`\r\n```scala\r\nsbt.internal.LayeredClassLoader@6933e5a6\r\n```\r\nJLineLoader is some sbt thing. Fortunately it doesn't have all those other jars you mentioned, so this is potentially only an issue with these specific jars (not confirmed though). Still not great, but maybe limited to just jline related things. Not sure if it's possible to disable the JLineLoader though.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1464198258/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1464320158","html_url":"https://github.com/apache/daffodil/pull/986#issuecomment-1464320158","issue_url":"https://api.github.com/repos/apache/daffodil/issues/986","id":1464320158,"node_id":"IC_kwDOBhBG1s5XR8Ce","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T19:40:43Z","updated_at":"2023-03-10T19:40:43Z","author_association":"CONTRIBUTOR","body":"I checked sbt's options (`sbt --help`) in case an option might disable the JLineLoader.  I tried both `sbt --batch daffodil-cli/test` and  `sbt --batch --no-colors daffodil-cli/test` but I still got the same exceptions.  I noticed that sbt also has a `--sbt-boot <path>` option so I copied ~/.sbt/boot to ~/sbtboot and replaced the jansi and jline jars with Daffodil's jansi and jline jars from its lib_managed directories.  Replacing the individual jline jars with the all-in-one jline jar crashed sbt's JLineLoader class:\r\n\r\n```shell\r\ninterran@GH3WPL13E:~/apache/daffodil-tuxji$ sbt --sbt-boot ~/sbtboot daffodil-cli/test\r\n        ... \r\nCaused by: java.lang.NullPointerException\r\n        at java.base/java.util.ArrayDeque.addLast(ArrayDeque.java:304)\r\n        at java.base/java.util.ArrayDeque.add(ArrayDeque.java:495)\r\n        at java.base/jdk.internal.loader.URLClassPath.<init>(URLClassPath.java:155)\r\n        at java.base/jdk.internal.loader.URLClassPath.<init>(URLClassPath.java:172)\r\n        at java.base/java.net.URLClassLoader.<init>(URLClassLoader.java:120)\r\n        at sbt.internal.JLineLoader.<init>(JLineLoader.java:15)\r\n        ... \r\n```\r\n\r\nAdding the individual jline 2.23.0 jars gets us past JLineLoader, but still crashes sbt later when it tries to call a now-missing jline class:\r\n\r\n```shell\r\ninterran@GH3WPL13E:~/apache/daffodil-tuxji$ sbt --sbt-boot ~/sbtboot daffodil-cli/test\r\njava.lang.NoClassDefFoundError: org/jline/terminal/impl/jansi/JansiSupportImpl\r\n        at sbt.internal.util.JLine3$.<init>(JLine3.scala:52)\r\n        ... \r\n```\r\n\r\nSo sbt would need source changes before the newer jline jars could be dropped into its boot path.  The whole idea was just to see if changing the boot path would even work, not use it as a workaround anyway.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1464320158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1466818490","html_url":"https://github.com/apache/daffodil/pull/987#issuecomment-1466818490","issue_url":"https://api.github.com/repos/apache/daffodil/issues/987","id":1466818490,"node_id":"IC_kwDOBhBG1s5Xbd-6","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-13T19:25:02Z","updated_at":"2023-03-13T19:25:43Z","author_association":"CONTRIBUTOR","body":"This is primarily WIP as it needs more test coverage and I have been informed that I need to hold off on working on this for a little while.\r\n\r\nIt is fully functional, just needs more tests for edge cases surrounding  evaluating expressions after the content of sequences, groups, and choices.\r\n\r\nAlso need to add tests for the setVariable change.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1466818490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1467990148","html_url":"https://github.com/apache/daffodil/pull/977#issuecomment-1467990148","issue_url":"https://api.github.com/repos/apache/daffodil/issues/977","id":1467990148,"node_id":"IC_kwDOBhBG1s5Xf8CE","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-14T12:12:18Z","updated_at":"2023-03-14T12:12:18Z","author_association":"MEMBER","body":"Is there any additional work we would like on this ticket or is it ready to go? ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1467990148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1468363169","html_url":"https://github.com/apache/daffodil/pull/986#issuecomment-1468363169","issue_url":"https://api.github.com/repos/apache/daffodil/issues/986","id":1468363169,"node_id":"IC_kwDOBhBG1s5XhXGh","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-14T15:50:59Z","updated_at":"2023-03-14T15:50:59Z","author_association":"MEMBER","body":"Yeah, seems like a real bug in sbt. I've opened a ticket here [sbt/sbt#7177](https://togithub.com/sbt/sbt/issues/7177), hoping they will have a solution...","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1468363169/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1472339615","html_url":"https://github.com/apache/daffodil/pull/988#issuecomment-1472339615","issue_url":"https://api.github.com/repos/apache/daffodil/issues/988","id":1472339615,"node_id":"IC_kwDOBhBG1s5Xwh6f","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-16T16:50:02Z","updated_at":"2023-03-16T16:50:02Z","author_association":"CONTRIBUTOR","body":"> I renamed bytesAvailable to knownBytesAvailable to help indicate that this is not necessarily a known value and should not be relied on in parsing situations. The remainingBits/remainingLimitBits have been refactored out and that logic is now in the error reporting function.\r\n\r\n+1\r\n\r\nI've reviewed the pull request again and I like the most recent changes.  Much better now.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1472339615/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1474291981","html_url":"https://github.com/apache/daffodil/pull/985#issuecomment-1474291981","issue_url":"https://api.github.com/repos/apache/daffodil/issues/985","id":1474291981,"node_id":"IC_kwDOBhBG1s5X3-kN","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-17T19:11:47Z","updated_at":"2023-03-17T19:11:47Z","author_association":"MEMBER","body":"Taking a second look at things and at the PR you created for scala-xml to fix the underlying issue, it doesn't look like the infinite loop issue is specific to having `<` characters in an attribute like your `msg` check looks for. Could other illegal characters cause this issue? I wonder if we need to check for a more generic error message not specific to `<`?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1474291981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1474301186","html_url":"https://github.com/apache/daffodil/pull/985#issuecomment-1474301186","issue_url":"https://api.github.com/repos/apache/daffodil/issues/985","id":1474301186,"node_id":"IC_kwDOBhBG1s5X4A0C","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-17T19:21:06Z","updated_at":"2023-03-17T19:21:06Z","author_association":"MEMBER","body":"> Taking a second look at things and at the PR you created for scala-xml to fix the underlying issue, it doesn't look like the infinite loop issue is specific to having `<` characters in an attribute like your `msg` check looks for. Could other illegal characters cause this issue? I wonder if we need to check for a more generic error message not specific to `<`?\r\n\r\nThat PR isn't for this exact issue. I decided to put in a PR for a similar issue that had an existing bug report. If that goes well, then I'll file another bug report for this issue and a PR along with it. I wanted to test the waters first. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1474301186/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1474301979","html_url":"https://github.com/apache/daffodil/pull/985#issuecomment-1474301979","issue_url":"https://api.github.com/repos/apache/daffodil/issues/985","id":1474301979,"node_id":"IC_kwDOBhBG1s5X4BAb","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-17T19:21:50Z","updated_at":"2023-03-17T19:21:50Z","author_association":"MEMBER","body":"I also accidentally pushed to the wrong branch and just did a force push to revert that. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1474301979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1476141962","html_url":"https://github.com/apache/daffodil/pull/988#issuecomment-1476141962","issue_url":"https://api.github.com/repos/apache/daffodil/issues/988","id":1476141962,"node_id":"IC_kwDOBhBG1s5X_COK","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-20T12:31:06Z","updated_at":"2023-03-20T12:31:06Z","author_association":"MEMBER","body":"Closing for revisions.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1476141962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1478012079","html_url":"https://github.com/apache/daffodil/pull/992#issuecomment-1478012079","issue_url":"https://api.github.com/repos/apache/daffodil/issues/992","id":1478012079,"node_id":"IC_kwDOBhBG1s5YGKyv","user":{"login":"mike-mcgann","id":3263862,"node_id":"MDQ6VXNlcjMyNjM4NjI=","avatar_url":"https://avatars.githubusercontent.com/u/3263862?v=4","gravatar_id":"","url":"https://api.github.com/users/mike-mcgann","html_url":"https://github.com/mike-mcgann","followers_url":"https://api.github.com/users/mike-mcgann/followers","following_url":"https://api.github.com/users/mike-mcgann/following{/other_user}","gists_url":"https://api.github.com/users/mike-mcgann/gists{/gist_id}","starred_url":"https://api.github.com/users/mike-mcgann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mike-mcgann/subscriptions","organizations_url":"https://api.github.com/users/mike-mcgann/orgs","repos_url":"https://api.github.com/users/mike-mcgann/repos","events_url":"https://api.github.com/users/mike-mcgann/events{/privacy}","received_events_url":"https://api.github.com/users/mike-mcgann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-21T15:09:53Z","updated_at":"2023-03-21T15:09:53Z","author_association":"MEMBER","body":"I found a case in the test suite where a warning is being converted into an error and I'm not sure if this is desired behavior and how this is happening. Here the test case is looking for an error:\r\n\r\nhttps://github.com/apache/daffodil/blob/main/daffodil-test/src/test/resources/org/apache/daffodil/section23/dfdl_expressions/expressions.tdml#L7254-L7258\r\n\r\nBut it is actually a warning here:\r\n\r\nhttps://github.com/apache/daffodil/blob/main/daffodil-runtime1/src/main/scala/org/apache/daffodil/runtime1/dsom/CompiledExpression1.scala#L595-L600\r\n\r\nI'm not sure how it is getting converted from a warning to an error. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1478012079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]