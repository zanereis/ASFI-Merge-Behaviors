[{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572457662","html_url":"https://github.com/apache/couchdb/issues/2386#issuecomment-572457662","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2386","id":572457662,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjQ1NzY2Mg==","user":{"login":"nicknaychov","id":1932847,"node_id":"MDQ6VXNlcjE5MzI4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/1932847?v=4","gravatar_id":"","url":"https://api.github.com/users/nicknaychov","html_url":"https://github.com/nicknaychov","followers_url":"https://api.github.com/users/nicknaychov/followers","following_url":"https://api.github.com/users/nicknaychov/following{/other_user}","gists_url":"https://api.github.com/users/nicknaychov/gists{/gist_id}","starred_url":"https://api.github.com/users/nicknaychov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicknaychov/subscriptions","organizations_url":"https://api.github.com/users/nicknaychov/orgs","repos_url":"https://api.github.com/users/nicknaychov/repos","events_url":"https://api.github.com/users/nicknaychov/events{/privacy}","received_events_url":"https://api.github.com/users/nicknaychov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T08:54:48Z","updated_at":"2020-01-09T08:54:48Z","author_association":"NONE","body":"thank you for answer @kocolosk .\r\n\r\nThat makes things little bit clearer. Just to add, I do not use placement but just z=2. I rely on \"automatic\" placement, since I need second cluster to be used as backup in case main site is down. I use couchdb prior to introducing the placement option, so I am not sure if I should use it and how exactly will fit in my case. \r\n\r\nWould you actually recommend using of placement param in favor of z parameter?\r\n\r\nIs there any link describing when we should use placement vs the z param? Maybe one of them should be deprecated in future releases if they overlap functionality in order to avoid confusion.\r\n\r\nIn my case with 4 nodes, 2 zones(z=2) and n=3 without using DB placement, if request comes to zone 1 then R/W will be done only to the 2 nodes from that zone and there will be no WAN crossing, correct?\r\nMy purpose is to avoid WAN crossing and thus slowing down the cluster.\r\n\r\nBTW Shard map looks ok:\r\n`\"shards\": {\r\n        \"00000000-55555554\": [\r\n            \"couchdb@pbx1-z1.domain.ca\",\r\n            \"couchdb@pbx1-z2.domain.ca\",\r\n            \"couchdb@pbx2-z2.domain.ca\"\r\n        ],\r\n        \"55555555-aaaaaaa9\": [\r\n            \"couchdb@pbx1-z1.domain.ca\",\r\n            \"couchdb@pbx1-z2.domain.ca\",\r\n            \"couchdb@pbx2-z1.domain.ca\"\r\n        ],\r\n        \"aaaaaaaa-ffffffff\": [\r\n            \"couchdb@pbx1-z2.domain.ca\",\r\n            \"couchdb@pbx2-z1.domain.ca\",\r\n            \"couchdb@pbx2-z2.domain.ca\"\r\n        ]\r\n    }`\r\n\r\nMany thanks to anybody who can shed some light on this.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572457662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572473264","html_url":"https://github.com/apache/couchdb/pull/2393#issuecomment-572473264","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2393","id":572473264,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjQ3MzI2NA==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T09:33:21Z","updated_at":"2020-01-09T09:33:21Z","author_association":"MEMBER","body":"nice","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572473264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572616170","html_url":"https://github.com/apache/couchdb/issues/2424#issuecomment-572616170","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2424","id":572616170,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjYxNjE3MA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T15:37:21Z","updated_at":"2020-01-09T15:37:21Z","author_association":"MEMBER","body":"Found it. All of the other places we do this we set the config value to the already hashed value. chttpd_purge_tests does not which means we're racing the auto-hasher. Fix is incoing.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572616170/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572620493","html_url":"https://github.com/apache/couchdb/issues/2386#issuecomment-572620493","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2386","id":572620493,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjYyMDQ5Mw==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T15:47:21Z","updated_at":"2020-01-09T15:47:21Z","author_association":"MEMBER","body":"Ah, I'd forgotten about that option. I'm ... not sure that was ever supported in a released version of CouchDB (as opposed to the BigCouch fork). We removed it in d5f5ff2ccdb44df5dbc0df61169163d90aced978. So yes, I would recommend you use the placement config setting instead.\r\n\r\nNeither `z` nor `placement` will have much of an effect on the WAN traffic. There's a small effect, but CouchDB will definitely still send a fair amount of traffic across zones. See my comment on #2329 for more detail.\r\n\r\nIf you want a second deployment as a backup our current recommendation is to run a separate cluster and configure replications from the primary to the backup.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572620493/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572629283","html_url":"https://github.com/apache/couchdb/pull/2432#issuecomment-572629283","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2432","id":572629283,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjYyOTI4Mw==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T16:06:24Z","updated_at":"2020-01-09T16:06:24Z","author_association":"MEMBER","body":"I killed the build since I just merged to master. I pinged @jiangphcn to update.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572629283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572641393","html_url":"https://github.com/apache/couchdb/pull/2432#issuecomment-572641393","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2432","id":572641393,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjY0MTM5Mw==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T16:32:27Z","updated_at":"2020-01-09T16:32:27Z","author_association":"CONTRIBUTOR","body":"rebased and waiting for CI happy to merge :-)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572641393/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572687087","html_url":"https://github.com/apache/couchdb/issues/2386#issuecomment-572687087","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2386","id":572687087,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjY4NzA4Nw==","user":{"login":"nicknaychov","id":1932847,"node_id":"MDQ6VXNlcjE5MzI4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/1932847?v=4","gravatar_id":"","url":"https://api.github.com/users/nicknaychov","html_url":"https://github.com/nicknaychov","followers_url":"https://api.github.com/users/nicknaychov/followers","following_url":"https://api.github.com/users/nicknaychov/following{/other_user}","gists_url":"https://api.github.com/users/nicknaychov/gists{/gist_id}","starred_url":"https://api.github.com/users/nicknaychov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicknaychov/subscriptions","organizations_url":"https://api.github.com/users/nicknaychov/orgs","repos_url":"https://api.github.com/users/nicknaychov/repos","events_url":"https://api.github.com/users/nicknaychov/events{/privacy}","received_events_url":"https://api.github.com/users/nicknaychov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T18:18:20Z","updated_at":"2020-01-09T18:22:12Z","author_association":"NONE","body":"@kocolosk wow this is big. You just saved me a lot of time and I believe to many other people as well! \r\n\r\nI think that should be put somewhere in important place of the documentation:\r\n\r\n**r,w and z parameters are not supported anymore.** \r\n(Even better if couchdb display error if sees them, would be awesome. )\r\n\r\n**n parameter will be overridden by \"placement\" if present** - I saw this already in the docs. \r\n\r\nI think CouchDB is great project but there is a lot of pitfalls and lack of good docs, which makes a lot of people to give up and move on with other solutions. \r\n\r\nI think replication, n (replicas) and placement are maybe overlapping and confusing concepts for some, thus clarification when and what should be used will help many people I am sure.\r\n\r\nExample, in my case I have a lot of DBs which get added and removed on the fly by the upper layer logic, so I think I need special script for detecting that and start/stop DB replications. \r\nSo replication is not suitable in my case. \r\n\r\nIf I use the approach with n=3 replicas, 2 nodes on local site and one on remote site, that means unnecessary WAN load and delayed performance. \r\n\r\nThus I think optimal solution would be using DB placement with two replicas hosted on 2 nodes in the local site and 1 on remote site node. This way I think will achieve that R/W will occur only on the local site(if both nodes are up) and avoid unnecessary WAN delays, while in case of emergency I will have backup.\r\n\r\nIf @kocolosk or somebody else can confirm my statements will be much appreciated.\r\nI think that would be good example and candidate for the best practices section - deployments.\r\nThank you.\r\n  ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572687087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572732823","html_url":"https://github.com/apache/couchdb/issues/2386#issuecomment-572732823","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2386","id":572732823,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjczMjgyMw==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T20:07:02Z","updated_at":"2020-01-09T20:07:02Z","author_association":"MEMBER","body":"@nicknaychov No, this is not correct:\r\n\r\n> Thus I think optimal solution would be using DB placement with two replicas hosted on 2 nodes in the local site and 1 on remote site node. This way I think will achieve that R/W will occur only on the local site(if both nodes are up) and avoid unnecessary WAN delays, while in case of emergency I will have backup.\r\n\r\nEvery attempt to read or write will always attempt to access all replicas of a given database shard. Even if 2 of those 3 responses arrive locally and result in a faster response to the client, you still have all traffic for every request transitting your WAN.\r\n\r\nAs @kocolosk said, your best approach is to use a standard main 3-node cluster (1 zone), then use standard CouchDB replication to keep your offsite backup current. You can run these replications on that backup cluster (i.e. \"pull\" replication) to keep load on the main cluster light.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572732823/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572779623","html_url":"https://github.com/apache/couchdb/issues/2428#issuecomment-572779623","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2428","id":572779623,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mjc3OTYyMw==","user":{"login":"nicknaychov","id":1932847,"node_id":"MDQ6VXNlcjE5MzI4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/1932847?v=4","gravatar_id":"","url":"https://api.github.com/users/nicknaychov","html_url":"https://github.com/nicknaychov","followers_url":"https://api.github.com/users/nicknaychov/followers","following_url":"https://api.github.com/users/nicknaychov/following{/other_user}","gists_url":"https://api.github.com/users/nicknaychov/gists{/gist_id}","starred_url":"https://api.github.com/users/nicknaychov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicknaychov/subscriptions","organizations_url":"https://api.github.com/users/nicknaychov/orgs","repos_url":"https://api.github.com/users/nicknaychov/repos","events_url":"https://api.github.com/users/nicknaychov/events{/privacy}","received_events_url":"https://api.github.com/users/nicknaychov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-09T22:10:11Z","updated_at":"2020-01-09T22:10:11Z","author_association":"NONE","body":"As just noted on #2386 z param is not anymore supported in Couch. I am closing this an will try to replicate using placement param","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572779623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572815041","html_url":"https://github.com/apache/couchdb/issues/2221#issuecomment-572815041","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2221","id":572815041,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjgxNTA0MQ==","user":{"login":"AdrianoFerrari","id":323678,"node_id":"MDQ6VXNlcjMyMzY3OA==","avatar_url":"https://avatars.githubusercontent.com/u/323678?v=4","gravatar_id":"","url":"https://api.github.com/users/AdrianoFerrari","html_url":"https://github.com/AdrianoFerrari","followers_url":"https://api.github.com/users/AdrianoFerrari/followers","following_url":"https://api.github.com/users/AdrianoFerrari/following{/other_user}","gists_url":"https://api.github.com/users/AdrianoFerrari/gists{/gist_id}","starred_url":"https://api.github.com/users/AdrianoFerrari/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AdrianoFerrari/subscriptions","organizations_url":"https://api.github.com/users/AdrianoFerrari/orgs","repos_url":"https://api.github.com/users/AdrianoFerrari/repos","events_url":"https://api.github.com/users/AdrianoFerrari/events{/privacy}","received_events_url":"https://api.github.com/users/AdrianoFerrari/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T00:12:48Z","updated_at":"2020-01-10T00:12:48Z","author_association":"NONE","body":"I'm also confused and concerned by this. If I'm reading this correctly, won't this **break authentication for CouchDB** in February for (at least) some users?\r\n\r\nSeems to me that, while devs might be able to fix this on their end (as per stackoverflow link), it should be dealt with properly on CouchDB side.\r\n\r\nLet me know if I've misunderstood.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572815041/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572925874","html_url":"https://github.com/apache/couchdb/issues/2221#issuecomment-572925874","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2221","id":572925874,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MjkyNTg3NA==","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T08:24:26Z","updated_at":"2020-01-10T08:25:13Z","author_association":"MEMBER","body":"I think the implication is that it will break CORS support, as cookies must specify `SameSite=None; Secure` to continue working in Chrome. The default behaviour shouldn't break most CouchDB use cases but we could do better by setting `SameSite=Strict`. \r\n\r\nWe may also need a way to handle legacy clients, which is a bit [messy](https://web.dev/samesite-cookie-recipes/#handling-incompatible-clients). @rnewson it looks like you added the `SameSite` support to MochiWeb. Do you have more considered thoughts on this?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572925874/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572965171","html_url":"https://github.com/apache/couchdb/issues/2382#issuecomment-572965171","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2382","id":572965171,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mjk2NTE3MQ==","user":{"login":"nicknaychov","id":1932847,"node_id":"MDQ6VXNlcjE5MzI4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/1932847?v=4","gravatar_id":"","url":"https://api.github.com/users/nicknaychov","html_url":"https://github.com/nicknaychov","followers_url":"https://api.github.com/users/nicknaychov/followers","following_url":"https://api.github.com/users/nicknaychov/following{/other_user}","gists_url":"https://api.github.com/users/nicknaychov/gists{/gist_id}","starred_url":"https://api.github.com/users/nicknaychov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicknaychov/subscriptions","organizations_url":"https://api.github.com/users/nicknaychov/orgs","repos_url":"https://api.github.com/users/nicknaychov/repos","events_url":"https://api.github.com/users/nicknaychov/events{/privacy}","received_events_url":"https://api.github.com/users/nicknaychov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T10:07:00Z","updated_at":"2020-01-10T10:08:02Z","author_association":"NONE","body":"I will try to combine my findings so far, hopefully would be useful to somebody else.\r\n\r\nZ parameter is no longer supported, but even if you use it CouchDB will not complain so you will end up with *fake* zoning see #2386 . Thus the link https://web.archive.org/web/20160429122538/https://cloudant.com/blog/choosing-zone-configurations-for-bigcouch is not much relevant and do not try to apply it.\r\n\r\nUse placement instead, which seems smarter and more user-friendly.\r\n\r\nCouchDB does not have R/W optimizations when you use placement (zoning), which I think should be improved, thus performance. \r\n\r\nIt seems that the *placement* implementation does not benefit of site *zoning* at all, i.e. if you have two sites and if quorum can be satisfied only by the nodes in site A, R/W will still be sent over WAN to site B, which I think is a pure waste of resources.\r\nExample 2 nodes in site A and 1 node in site B,  placement = <zone-name-1>:2,<zone-name-2>:1\r\n\r\nAm I right, or I misunderstood something?\r\n\r\nThanks","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/572965171/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573091722","html_url":"https://github.com/apache/couchdb/issues/2423#issuecomment-573091722","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2423","id":573091722,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzA5MTcyMg==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T15:52:42Z","updated_at":"2020-01-10T15:52:42Z","author_association":"MEMBER","body":"I've updated the title to be more reflective of what we're seeing (the JNLP issue is being worked separately).\r\n\r\nFor reference, we're seeing this issue in:\r\n* Pull Request Jenkins builds\r\n* Full Platform Jenkins builds, but only on Debian Buster\r\n* [This build](https://ci-couchdb.apache.org/blue/organizations/jenkins/jenkins-cm1%2FFullPlatformMatrix/detail/jenkins-add-arm/8/pipeline) which is a PR to add arm64v8 support to the Full Platform Jenkins builds (Debian Buster)\r\n\r\nThat very last one shows an error code of -11, and some very interesting output:\r\n\r\n```\r\n[2020-01-10T04:57:43.943Z] test/javascript/tests/changes.js                               fail: -11\r\n[2020-01-10T04:57:43.943Z] WHUT? ''\r\n[2020-01-10T04:57:43.943Z] WHUT? ''\r\n[2020-01-10T04:57:43.943Z] WHUT? ''\r\n[2020-01-10T04:57:43.943Z] WHUT? ''\r\n[2020-01-10T04:57:43.943Z] WHUT? ''\r\n[2020-01-10T04:57:43.943Z] WHUT? ''\r\n[2020-01-10T04:57:43.943Z] WHUT? ''\r\n[2020-01-10T04:57:43.943Z] WHUT? ''\r\n[2020-01-10T04:57:43.943Z] WHUT? ''\r\n[2020-01-10T04:57:43.943Z] WHUT? ''\r\n[2020-01-10T04:57:43.943Z] WHUT? ''\r\n[2020-01-10T04:57:43.943Z] WHUT? ''\r\n```\r\n\r\nTaken together it's clear we have a segmentation violation error (-11) in `couchjs`, but so far *only* when we build with SpiderMonkey 60.\r\n\r\n/cc @davisp @jiangphcn who are both actively researching this","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573091722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573098465","html_url":"https://github.com/apache/couchdb/issues/2437#issuecomment-573098465","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2437","id":573098465,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzA5ODQ2NQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T16:09:36Z","updated_at":"2020-01-10T16:09:36Z","author_association":"MEMBER","body":"One note, the FreeBSD variant of this that was seen was during an eunit test of `couchjs`, though the error was:\r\n\r\n```\r\ncouch_js_tests: couch_js_test_...out of memory\r\n```\r\n\r\nOutput of `top` on the affected FreeBSD node:\r\n\r\n```\r\n  PID USERNAME    THR PRI NICE   SIZE    RES STATE    C   TIME    WCPU COMMAND\r\n 1895 jenkins      24  52    0  1185M    71M select   1 663:13  99.73% beam.smp\r\n27828 jenkins      24  52    0  1173M    63M select   3 521:32  99.57% beam.smp\r\n31174 jenkins      24  52    0  1156M    68M select   1 503:54  98.30% beam.smp\r\n```\r\n\r\nSo, not from the run that ran out of memory itself. [Looking back farther for builds on this node](https://ci-couchdb.apache.org/blue/organizations/jenkins/jenkins-cm1%2FFullPlatformMatrix/detail/master/16/pipeline/50), I see we're going out to lunch during eunit pretty badly (pay close attention to the timestamp)\r\n\r\n```\r\n[2020-01-09T16:20:45.493Z] [os_mon] cpu supervisor port (cpu_sup): Erlang has closed\r\n[2020-01-09T16:20:45.493Z]     [done in 0.200 s]\r\n[2020-01-09T16:20:45.493Z]   Check index files cleanup\r\n[2020-01-09T16:20:45.493Z]     clustered\r\n[2020-01-09T16:20:45.848Z]       couchdb_mrview_tests:155: should_cleanup_index_files...[0.084 s] ok\r\n[2020-01-09T16:20:45.848Z]       [done in 0.102 s]\r\n[2020-01-09T17:38:30.777Z] Sending interrupt signal to process\r\n[2020-01-09T17:38:50.777Z] After 20s process did not stop\r\n```\r\n\r\n[Another run that failed similarly](https://ci-couchdb.apache.org/blue/organizations/jenkins/jenkins-cm1%2FFullPlatformMatrix/detail/master/18/pipeline/50):\r\n\r\n```\r\n[2020-01-09T18:38:50.214Z] module 'couch_mrview_purge_docs_tests'\r\n[2020-01-09T18:38:50.214Z]   Map views\r\n[2020-01-09T20:00:12.530Z] Sending interrupt signal to process\r\n[2020-01-09T20:00:32.530Z] After 20s process did not stop\r\n```\r\n\r\nVersion of Erlang on that node:\r\n```\r\nErlang/OTP 21 [erts-10.3.5.7] [source] [64-bit] [smp:4:4] [ds:4:4:10] [async-threads:1] [dtrace]\r\n```\r\n\r\nOur FreeBSD workers still have SpiderMonkey 1.8.5, though [SM60 is now available](https://svnweb.freebsd.org/ports/head/lang/spidermonkey60/).\r\n\r\n@davisp @jiangphcn I'm worried that all of these failures seem to be mrview related. With the `couchjs` SM60 changes recently, could the bug be in both the 1.8.5 and 60 versions, or how we handle the view process?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573098465/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573110839","html_url":"https://github.com/apache/couchdb/issues/2423#issuecomment-573110839","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2423","id":573110839,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzExMDgzOQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T16:40:52Z","updated_at":"2020-01-10T16:40:52Z","author_association":"MEMBER","body":"The above failure is now 100% reproducible on arm64v8 via `make javascript suites=\"changes\"`:\r\n\r\n```\r\njenkins@443828ef67a2:~/couchdb$ make javascript suites=\"changes\"\r\ntest/javascript/tests/changes.js   fail: -11\r\nWHUT? ''\r\n=======================================================\r\nJavaScript tests complete.\r\n  Failed: 1.  Skipped or passed: 0.\r\nmake: *** [Makefile:270: javascript] Error 1\r\n```\r\n\r\nRunning against SM 1.8.5, the test passes entirely, BUT we still get the weird output:\r\n\r\n```\r\n$ make javascript suites=\"changes\"\r\ntest/javascript/tests/changes.js   pass\r\nWHUT? ''\r\n=======================================================\r\nJavaScript tests complete.\r\n  Failed: 0.  Skipped or passed: 1.\r\n```\r\n\r\nPoke me if you need a login to the box to experiment. Once you do login, enter the Docker environment (that has the build env setup) using `docker run --rm -it couchdbdev/debian-buster-erlang-20.3.8.24-1`, then `cd` to set your working directory to something sane (`/home/jenkins`).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573110839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573118266","html_url":"https://github.com/apache/couchdb/issues/2423#issuecomment-573118266","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2423","id":573118266,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzExODI2Ng==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T16:59:30Z","updated_at":"2020-01-10T16:59:30Z","author_association":"MEMBER","body":"The weird output is me forgetting to remove debug logging when I changed the JUnit generation bit. Am opening a PR to remove that bit right now.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573118266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573124112","html_url":"https://github.com/apache/couchdb/issues/2423#issuecomment-573124112","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2423","id":573124112,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzEyNDExMg==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T17:14:19Z","updated_at":"2020-01-10T18:28:56Z","author_association":"MEMBER","body":"coredump acquired, backtrace info:\r\n\r\n```gdb\r\nReading symbols from bin/couchjs...done.\r\n[New LWP 25199]\r\n[New LWP 25201]\r\n[New LWP 25203]\r\n[New LWP 25204]\r\n[New LWP 25207]\r\n[New LWP 25208]\r\n[New LWP 25206]\r\n[New LWP 25205]\r\n[New LWP 25202]\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/aarch64-linux-gnu/libthread_db.so.1\".\r\nCore was generated by `src/couch/priv/couchjs --eval -H -T -u test/javascript/couchdb.uri test/javascr'.\r\nProgram terminated with signal SIGSEGV, Segmentation fault.\r\n#0  GetPropertyOperation (vp=..., lval=..., pc=<optimized out>, script=..., fp=<optimized out>, cx=<optimized out>)\r\n    at ./js/src/vm/JSContext.h:161\r\n161     ./js/src/vm/JSContext.h: No such file or directory.\r\n[Current thread is 1 (Thread 0xffffaa602d80 (LWP 25199))]\r\n\r\n(gdb) t a a bt\r\n\r\nThread 9 (Thread 0xffffa9dfdf70 (LWP 25202)):\r\n#0  futex_wait_cancelable (private=0, expected=0, futex_word=0xaaaaeeaf82d4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0xaaaaeeaf8248, cond=0xaaaaeeaf82a8) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0xaaaaeeaf82a8, mutex=0xaaaaeeaf8248) at pthread_cond_wait.c:655\r\n#3  0x0000ffffadda528c in mozilla::detail::ConditionVariableImpl::wait (this=0xaaaaeeaf82a8, lock=...)\r\n    at ./mozglue/misc/ConditionVariable_posix.cpp:118\r\n#4  0x0000ffffadda54b4 in mozilla::detail::ConditionVariableImpl::wait_for (this=<optimized out>, lock=..., a_rel_time=...)\r\n    at ./mozglue/misc/ConditionVariable_posix.cpp:127\r\n#5  0x0000ffffadb66184 in js::ConditionVariable::wait_for (lock=..., rel_time=..., this=<optimized out>)\r\n    at ./js/src/threading/ConditionVariable.h:101\r\n#6  js::GlobalHelperThreadState::wait (timeout=..., which=js::GlobalHelperThreadState::PRODUCER, locked=..., this=<optimized out>)\r\n    at ./js/src/vm/HelperThreads.cpp:994\r\n#7  js::HelperThread::threadLoop (this=0xaaaaeeafdf60) at ./js/src/vm/HelperThreads.cpp:2238\r\n#8  0x0000ffffadb63990 in js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::callMain<0ul> (this=0xaaaaeeacf350)\r\n    at ./js/src/threading/Thread.h:241\r\n#9  js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::Start (aPack=0xaaaaeeacf350) at ./js/src/threading/Thread.h:235\r\n#10 0x0000ffffad2bb7e4 in start_thread (arg=0xfffff63f1a8f) at pthread_create.c:486\r\n#11 0x0000ffffad3b2adc in thread_start () at ../sysdeps/unix/sysv/linux/aarch64/clone.S:78\r\n\r\nThread 8 (Thread 0xffffa97faf70 (LWP 25205)):\r\n#0  futex_wait_cancelable (private=0, expected=0, futex_word=0xaaaaeeaf82d0) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0xaaaaeeaf8248, cond=0xaaaaeeaf82a8) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0xaaaaeeaf82a8, mutex=0xaaaaeeaf8248) at pthread_cond_wait.c:655\r\n#3  0x0000ffffadda528c in mozilla::detail::ConditionVariableImpl::wait (this=0xaaaaeeaf82a8, lock=...)\r\n    at ./mozglue/misc/ConditionVariable_posix.cpp:118\r\n#4  0x0000ffffadda54b4 in mozilla::detail::ConditionVariableImpl::wait_for (this=<optimized out>, lock=..., a_rel_time=...)\r\n    at ./mozglue/misc/ConditionVariable_posix.cpp:127\r\n#5  0x0000ffffadb66184 in js::ConditionVariable::wait_for (lock=..., rel_time=..., this=<optimized out>)\r\n    at ./js/src/threading/ConditionVariable.h:101\r\n#6  js::GlobalHelperThreadState::wait (timeout=..., which=js::GlobalHelperThreadState::PRODUCER, locked=..., this=<optimized out>)\r\n    at ./js/src/vm/HelperThreads.cpp:994\r\n#7  js::HelperThread::threadLoop (this=0xaaaaeeafe0b0) at ./js/src/vm/HelperThreads.cpp:2238\r\n#8  0x0000ffffadb63990 in js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::callMain<0ul> (this=0xaaaaeeae1e90)\r\n    at ./js/src/threading/Thread.h:241\r\n#9  js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::Start (aPack=0xaaaaeeae1e90) at ./js/src/threading/Thread.h:235\r\n#10 0x0000ffffad2bb7e4 in start_thread (arg=0xfffff63f1a8f) at pthread_create.c:486\r\n#11 0x0000ffffad3b2adc in thread_start () at ../sysdeps/unix/sysv/linux/aarch64/clone.S:78\r\n\r\nThread 7 (Thread 0xffffa95f9f70 (LWP 25206)):\r\n#0  futex_wait_cancelable (private=0, expected=0, futex_word=0xaaaaeeaf82d0) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0xaaaaeeaf8248, cond=0xaaaaeeaf82a8) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0xaaaaeeaf82a8, mutex=0xaaaaeeaf8248) at pthread_cond_wait.c:655\r\n#3  0x0000ffffadda528c in mozilla::detail::ConditionVariableImpl::wait (this=0xaaaaeeaf82a8, lock=...)\r\n    at ./mozglue/misc/ConditionVariable_posix.cpp:118\r\n#4  0x0000ffffadda54b4 in mozilla::detail::ConditionVariableImpl::wait_for (this=<optimized out>, lock=..., a_rel_time=...)\r\n    at ./mozglue/misc/ConditionVariable_posix.cpp:127\r\n#5  0x0000ffffadb66184 in js::ConditionVariable::wait_for (lock=..., rel_time=..., this=<optimized out>)\r\n    at ./js/src/threading/ConditionVariable.h:101\r\n#6  js::GlobalHelperThreadState::wait (timeout=..., which=js::GlobalHelperThreadState::PRODUCER, locked=..., this=<optimized out>)\r\n    at ./js/src/vm/HelperThreads.cpp:994\r\n#7  js::HelperThread::threadLoop (this=0xaaaaeeafe120) at ./js/src/vm/HelperThreads.cpp:2238\r\n#8  0x0000ffffadb63990 in js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::callMain<0ul> (this=0xaaaaeeacb450)\r\n    at ./js/src/threading/Thread.h:241\r\n#9  js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::Start (aPack=0xaaaaeeacb450) at ./js/src/threading/Thread.h:235\r\n#10 0x0000ffffad2bb7e4 in start_thread (arg=0xfffff63f1a8f) at pthread_create.c:486\r\n#11 0x0000ffffad3b2adc in thread_start () at ../sysdeps/unix/sysv/linux/aarch64/clone.S:78\r\n\r\nThread 6 (Thread 0xffffa91f7f70 (LWP 25208)):\r\n#0  futex_wait_cancelable (private=0, expected=0, futex_word=0xaaaaeeaf82d4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0xaaaaeeaf8248, cond=0xaaaaeeaf82a8) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0xaaaaeeaf82a8, mutex=0xaaaaeeaf8248) at pthread_cond_wait.c:655\r\n#3  0x0000ffffadda528c in mozilla::detail::ConditionVariableImpl::wait (this=0xaaaaeeaf82a8, lock=...)\r\n    at ./mozglue/misc/ConditionVariable_posix.cpp:118\r\n#4  0x0000ffffadda54b4 in mozilla::detail::ConditionVariableImpl::wait_for (this=<optimized out>, lock=..., a_rel_time=...)\r\n    at ./mozglue/misc/ConditionVariable_posix.cpp:127\r\n#5  0x0000ffffadb66184 in js::ConditionVariable::wait_for (lock=..., rel_time=..., this=<optimized out>)\r\n    at ./js/src/threading/ConditionVariable.h:101\r\n#6  js::GlobalHelperThreadState::wait (timeout=..., which=js::GlobalHelperThreadState::PRODUCER, locked=..., this=<optimized out>)\r\n    at ./js/src/vm/HelperThreads.cpp:994\r\n#7  js::HelperThread::threadLoop (this=0xaaaaeeafe200) at ./js/src/vm/HelperThreads.cpp:2238\r\n#8  0x0000ffffadb63990 in js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::callMain<0ul> (this=0xaaaaeeae2250)\r\n    at ./js/src/threading/Thread.h:241\r\n#9  js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::Start (aPack=0xaaaaeeae2250) at ./js/src/threading/Thread.h:235\r\n#10 0x0000ffffad2bb7e4 in start_thread (arg=0xfffff63f1a8f) at pthread_create.c:486\r\n#11 0x0000ffffad3b2adc in thread_start () at ../sysdeps/unix/sysv/linux/aarch64/clone.S:78\r\n\r\nThread 5 (Thread 0xffffa93f8f70 (LWP 25207)):\r\n#0  futex_wait_cancelable (private=0, expected=0, futex_word=0xaaaaeeaf82d4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0xaaaaeeaf8248, cond=0xaaaaeeaf82a8) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0xaaaaeeaf82a8, mutex=0xaaaaeeaf8248) at pthread_cond_wait.c:655\r\n#3  0x0000ffffadda528c in mozilla::detail::ConditionVariableImpl::wait (this=0xaaaaeeaf82a8, lock=...)\r\n    at ./mozglue/misc/ConditionVariable_posix.cpp:118\r\n#4  0x0000ffffadda54b4 in mozilla::detail::ConditionVariableImpl::wait_for (this=<optimized out>, lock=..., a_rel_time=...)\r\n    at ./mozglue/misc/ConditionVariable_posix.cpp:127\r\n#5  0x0000ffffadb66184 in js::ConditionVariable::wait_for (lock=..., rel_time=..., this=<optimized out>)\r\n    at ./js/src/threading/ConditionVariable.h:101\r\n#6  js::GlobalHelperThreadState::wait (timeout=..., which=js::GlobalHelperThreadState::PRODUCER, locked=..., this=<optimized out>)\r\n    at ./js/src/vm/HelperThreads.cpp:994\r\n#7  js::HelperThread::threadLoop (this=0xaaaaeeafe190) at ./js/src/vm/HelperThreads.cpp:2238\r\n#8  0x0000ffffadb63990 in js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::callMain<0ul> (this=0xaaaaeeae2310)\r\n    at ./js/src/threading/Thread.h:241\r\n#9  js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::Start (aPack=0xaaaaeeae2310) at ./js/src/threading/Thread.h:235\r\n#10 0x0000ffffad2bb7e4 in start_thread (arg=0xfffff63f1a8f) at pthread_create.c:486\r\n#11 0x0000ffffad3b2adc in thread_start () at ../sysdeps/unix/sysv/linux/aarch64/clone.S:78\r\n\r\nThread 4 (Thread 0xffffa99fbf70 (LWP 25204)):\r\n#0  futex_wait_cancelable (private=0, expected=0, futex_word=0xaaaaeeaf82d4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0xaaaaeeaf8248, cond=0xaaaaeeaf82a8) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0xaaaaeeaf82a8, mutex=0xaaaaeeaf8248) at pthread_cond_wait.c:655\r\n--Type <RET> for more, q to quit, c to continue without paging--c\r\n#3  0x0000ffffadda528c in mozilla::detail::ConditionVariableImpl::wait (this=0xaaaaeeaf82a8, lock=...) at ./mozglue/misc/ConditionVariable_posix.cpp:118\r\n#4  0x0000ffffadda54b4 in mozilla::detail::ConditionVariableImpl::wait_for (this=<optimized out>, lock=..., a_rel_time=...) at ./mozglue/misc/ConditionVariable_posix.cpp:127\r\n#5  0x0000ffffadb66184 in js::ConditionVariable::wait_for (lock=..., rel_time=..., this=<optimized out>) at ./js/src/threading/ConditionVariable.h:101\r\n#6  js::GlobalHelperThreadState::wait (timeout=..., which=js::GlobalHelperThreadState::PRODUCER, locked=..., this=<optimized out>) at ./js/src/vm/HelperThreads.cpp:994\r\n#7  js::HelperThread::threadLoop (this=0xaaaaeeafe040) at ./js/src/vm/HelperThreads.cpp:2238\r\n#8  0x0000ffffadb63990 in js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::callMain<0ul> (this=0xaaaaeeacf1d0) at ./js/src/threading/Thread.h:241\r\n#9  js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::Start (aPack=0xaaaaeeacf1d0) at ./js/src/threading/Thread.h:235\r\n#10 0x0000ffffad2bb7e4 in start_thread (arg=0xfffff63f1a8f) at pthread_create.c:486\r\n#11 0x0000ffffad3b2adc in thread_start () at ../sysdeps/unix/sysv/linux/aarch64/clone.S:78\r\n\r\nThread 3 (Thread 0xffffa9bfcf70 (LWP 25203)):\r\n#0  futex_wait_cancelable (private=0, expected=0, futex_word=0xaaaaeeaf82d4) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0xaaaaeeaf8248, cond=0xaaaaeeaf82a8) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0xaaaaeeaf82a8, mutex=0xaaaaeeaf8248) at pthread_cond_wait.c:655\r\n#3  0x0000ffffadda528c in mozilla::detail::ConditionVariableImpl::wait (this=0xaaaaeeaf82a8, lock=...) at ./mozglue/misc/ConditionVariable_posix.cpp:118\r\n#4  0x0000ffffadda54b4 in mozilla::detail::ConditionVariableImpl::wait_for (this=<optimized out>, lock=..., a_rel_time=...) at ./mozglue/misc/ConditionVariable_posix.cpp:127\r\n#5  0x0000ffffadb66184 in js::ConditionVariable::wait_for (lock=..., rel_time=..., this=<optimized out>) at ./js/src/threading/ConditionVariable.h:101\r\n#6  js::GlobalHelperThreadState::wait (timeout=..., which=js::GlobalHelperThreadState::PRODUCER, locked=..., this=<optimized out>) at ./js/src/vm/HelperThreads.cpp:994\r\n#7  js::HelperThread::threadLoop (this=0xaaaaeeafdfd0) at ./js/src/vm/HelperThreads.cpp:2238\r\n#8  0x0000ffffadb63990 in js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::callMain<0ul> (this=0xaaaaeeacf290) at ./js/src/threading/Thread.h:241\r\n#9  js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::Start (aPack=0xaaaaeeacf290) at ./js/src/threading/Thread.h:235\r\n#10 0x0000ffffad2bb7e4 in start_thread (arg=0xfffff63f1a8f) at pthread_create.c:486\r\n#11 0x0000ffffad3b2adc in thread_start () at ../sysdeps/unix/sysv/linux/aarch64/clone.S:78\r\n\r\nThread 2 (Thread 0xffffaa5fef70 (LWP 25201)):\r\n#0  futex_wait_cancelable (private=0, expected=0, futex_word=0xaaaaeeaf82d0) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n#1  __pthread_cond_wait_common (abstime=0x0, mutex=0xaaaaeeaf8248, cond=0xaaaaeeaf82a8) at pthread_cond_wait.c:502\r\n#2  __pthread_cond_wait (cond=0xaaaaeeaf82a8, mutex=0xaaaaeeaf8248) at pthread_cond_wait.c:655\r\n#3  0x0000ffffadda528c in mozilla::detail::ConditionVariableImpl::wait (this=0xaaaaeeaf82a8, lock=...) at ./mozglue/misc/ConditionVariable_posix.cpp:118\r\n#4  0x0000ffffadda54b4 in mozilla::detail::ConditionVariableImpl::wait_for (this=<optimized out>, lock=..., a_rel_time=...) at ./mozglue/misc/ConditionVariable_posix.cpp:127\r\n#5  0x0000ffffadb66184 in js::ConditionVariable::wait_for (lock=..., rel_time=..., this=<optimized out>) at ./js/src/threading/ConditionVariable.h:101\r\n#6  js::GlobalHelperThreadState::wait (timeout=..., which=js::GlobalHelperThreadState::PRODUCER, locked=..., this=<optimized out>) at ./js/src/vm/HelperThreads.cpp:994\r\n#7  js::HelperThread::threadLoop (this=0xaaaaeeafdef0) at ./js/src/vm/HelperThreads.cpp:2238\r\n#8  0x0000ffffadb63990 in js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::callMain<0ul> (this=0xaaaaeeacf410) at ./js/src/threading/Thread.h:241\r\n#9  js::detail::ThreadTrampoline<void (&)(void*), js::HelperThread*>::Start (aPack=0xaaaaeeacf410) at ./js/src/threading/Thread.h:235\r\n#10 0x0000ffffad2bb7e4 in start_thread (arg=0xfffff63f1a8f) at pthread_create.c:486\r\n#11 0x0000ffffad3b2adc in thread_start () at ../sysdeps/unix/sysv/linux/aarch64/clone.S:78\r\n\r\nThread 1 (Thread 0xffffaa602d80 (LWP 25199)):\r\n#0  GetPropertyOperation (vp=..., lval=..., pc=<optimized out>, script=..., fp=<optimized out>, cx=<optimized out>) at ./js/src/vm/JSContext.h:161\r\n#1  Interpret (cx=0xfffff63f0230, state=...) at ./js/src/vm/Interpreter.cpp:2834\r\n#2  0x0000ffffad858b48 in js::RunScript (cx=cx@entry=0xaaaaeeaf8530, state=...) at ./js/src/vm/Interpreter.cpp:418\r\n#3  0x0000ffffad85909c in js::InternalCallOrConstruct (cx=cx@entry=0xaaaaeeaf8530, args=..., construct=construct@entry=js::NO_CONSTRUCT) at ./js/src/vm/Interpreter.cpp:490\r\n#4  0x0000ffffad8592ec in InternalCall (cx=cx@entry=0xaaaaeeaf8530, args=...) at ./js/src/vm/Interpreter.cpp:517\r\n#5  0x0000ffffad85932c in js::CallFromStack (cx=cx@entry=0xaaaaeeaf8530, args=...) at ./js/src/vm/Interpreter.cpp:523\r\n#6  0x0000ffffad927f14 in js::jit::DoCallFallback (cx=0xaaaaeeaf8530, frame=0xfffff63f13a8, stub_=0xaaaaeeb5b780, argc=0, vp=0xfffff63f1348, res=...) at ./js/src/jit/BaselineIC.cpp:2380\r\n#7  0x00001a13cbce3a64 in ?? ()\r\n#8  0x0000ffffad858794 in Interpret (cx=0xfffff63f12f0, state=...) at ./js/src/vm/Stack.h:1594\r\n#9  0x0000ffffad858794 in Interpret (cx=0xaaaaeeaf8530, state=...) at ./js/src/vm/Stack.h:1594\r\n#10 0x0000fffff63f18c8 in ?? ()\r\nBacktrace stopped: previous frame inner to this frame (corrupt stack?)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573124112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573156492","html_url":"https://github.com/apache/couchdb/issues/2423#issuecomment-573156492","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2423","id":573156492,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzE1NjQ5Mg==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T18:40:47Z","updated_at":"2020-01-10T18:40:47Z","author_association":"MEMBER","body":"```gdb\r\n(gdb) print *cx\r\n$3 = {<JS::RootingContext> = {stackRoots_ = {static kSize = 14, mArray = {mArr = {0x7000007c4c0, 0xaaaaeedce9c0, 0x3, 0xaaaaeebf2970,\r\n          0xfffff63f0c10, 0xffffadbcd99c\r\n     <js::ObjectGroup::newPlainObject(JSContext*, js::IdValuePair*, unsigned long, js::NewObjectKind)+1548>,\r\n          0xffffadf29000 <vtable for JS::ubi::Concrete<JSString>+48>, 0xaaaaeeaf8530, 0xfffff63f0c88,\r\n          0xffffadbcd978 <js::ObjectGroup::newPlainObject(JSContext*, js::IdValuePair*, unsigned long, js::NewObjectKind)+1512>,\r\n          0xffffadf29000 <vtable for JS::ubi::Concrete<JSString>+48>, 0x0, 0xaaaaeeb2cf10, 0x637ae96ce7e7ac00}}},\r\n    autoGCRooters_ = 0xfffff63f03a0, geckoProfiler_ = {pseudoStack_ = 0xffffadb93e48\r\n     <js::JSONParserBase::finishObject(JS::MutableHandle<JS::Value>, mozilla::Vector<js::IdValuePair, 10ul, js::TempAllocPolicy>&)+48>},\r\n    compartment_ = 0xfffff63f0648, zone_ = 0xffffadf29000 <vtable for JS::ubi::Concrete<JSString>+48>, nativeStackLimit = {187651128617328,\r\n      187651128190640, 281474813068368}}, <js::MallocProvider<JSContext>> = {<No data fields>},\r\n  runtime_ = {<js::ProtectedData<js::CheckUnprotected, JSRuntime*>> = {value = 0xfff9000000000001}, <No data fields>}, kind_ = {\r\n    value = (unknown: 20)}, threadNative_ = {value = 187651128617328},\r\n  helperThread_ = {<js::ProtectedData<js::CheckThreadLocal, js::HelperThread*>> = {value = 0xfffff63f0c88}, <No data fields>},\r\n  nurserySuppressions_ = {<js::ProtectedData<js::CheckThreadLocal, unsigned long>> = {value = 281474813067824}, <No data fields>},\r\n  options_ = {<js::ProtectedData<js::CheckThreadLocal, JS::ContextOptions>> = {value = {baseline_ = true, ion_ = false, asmJS_ = false,\r\n        wasm_ = true, wasmBaseline_ = false, wasmIon_ = false, testWasmAwaitTier2_ = false, throwOnAsmJSValidationFailure_ = false,\r\n        nativeRegExp_ = false, asyncStack_ = false, throwOnDebuggeeWouldRun_ = false, dumpStackOnDebuggeeWouldRun_ = false, werror_ = false,\r\n        strictMode_ = false, extraWarnings_ = false, streams_ = false, expressionClosures_ = false,\r\n        arrayProtoValues_ = false}}, <No data fields>}, arenas_ = {<js::ProtectedData<js::CheckThreadLocal, js::gc::ArenaLists*>> = {\r\n      value = 0x0}, <No data fields>}, enterCompartmentDepth_ = {<js::ProtectedData<js::CheckThreadLocal, unsigned int>> = {\r\n      value = 4131324992}, <No data fields>}, static reportedError = {dummy = 0}, static reportedOOM = {<JS::Error> = {\r\n      dummy = 0}, <No data fields>}, yieldCallback_ = {<js::ProtectedData<js::CheckThreadLocal, void (*)(JSContext*)>> = {\r\n      value = 0x2}, <No data fields>}, jitActivation = {<js::ProtectedData<js::CheckThreadLocal, js::jit::JitActivation*>> = {\r\n      value = 0xfffff63f0348}, <No data fields>}, regexpStack = {<js::ProtectedData<js::CheckThreadLocal, js::irregexp::RegExpStack>> = {\r\n      value = {static kStackLimitSlack = 32, static kMemoryTop = 18446744073709551615, static kMinimumStackSize = 512,\r\n        static kMaximumStackSize = 67108864, base_ = 0xffffadddbf50 <JSID_VOID>, size = 187651125642544,\r\n        limit_ = 0xaaaaeedce990}}, <No data fields>}, activation_ = {<js::ProtectedData<js::CheckThreadLocal, js::Activation*>> = {\r\n      value = 0xaaaa00000003}, <No data fields>}, profilingActivation_ = 0xaaaaeeaf8558,\r\n  interpreterStack_ = {<js::ProtectedData<js::CheckThreadLocal, js::InterpreterStack>> = {value = {static DEFAULT_CHUNK_SIZE = 4096,\r\n        allocator_ = {chunks_ = {head_ = {\r\n              mTuple = {<mozilla::detail::PairHelper<js::detail::BumpChunk*, JS::DeletePolicy<js::detail::BumpChunk>, (mozilla::detail::StorageType)1, (mozilla::detail::StorageType)0>> = {<JS::DeletePolicy<js::detail::BumpChunk>> = {<No data fields>}, mFirstA = 0x0}, <No data fields>}},\r\n            last_ = 0x7000007c4c0}, unused_ = {head_ = {\r\n              mTuple = {<mozilla::detail::PairHelper<js::detail::BumpChunk*, JS::DeletePolicy<js::detail::BumpChunk>, (mozilla::detail::StorageType)1, (mozilla::detail::StorageType)0>> = {<JS::DeletePolicy<js::detail::BumpChunk>> = {<No data fields>},\r\n                  mFirstA = 0xaaaaeeaf8568}, <No data fields>}}, last_ = 0xfffff63f0bc8}, markCount = 7696581989928,\r\n          defaultChunkSize_ = 187651125642576, curSize_ = 281474813069536, peakSize_ = 7696595273344, static HUGE_ALLOCATION = 52428800},\r\n        static MAX_FRAMES = 50000, static MAX_FRAMES_TRUSTED = 51000, frameCount_ = 281474813068256}}, <No data fields>},\r\n  nativeStackBase = 7168298410870025216, nativeStackQuota = {{<js::ProtectedData<js::CheckThreadLocal, unsigned long>> = {\r\n        value = 281474813068336}, <No data fields>}, {<js::ProtectedData<js::CheckThreadLocal, unsigned long>> = {\r\n        value = 281473596265724}, <No data fields>}, {<js::ProtectedData<js::CheckThreadLocal, unsigned long>> = {\r\n        value = 281474813068872}, <No data fields>}}, entryMonitor = {<js::ProtectedData<js::CheckThreadLocal, JS::dbg::AutoEntryMonitor*>> = {\r\n      value = 0x3}, <No data fields>}, noExecuteDebuggerTop = {<js::ProtectedData<js::CheckThreadLocal, js::EnterDebuggeeNoExecute*>> = {\r\n      value = 0xaaaaeedce970}, <No data fields>}, activityCallback = {<js::ProtectedData<js::CheckThreadLocal, void (*)(void*, bool)>> = {\r\n      value = 0xfffff63f0630}, <No data fields>}, activityCallbackArg = {<js::ProtectedData<js::CheckThreadLocal, void*>> = {\r\n      value = 0xfffff63f0648}, <No data fields>}, requestDepth = {<js::ProtectedData<js::CheckThreadLocal, unsigned int>> = {\r\n      value = 4007028400}, <No data fields>}, autoFlushICache_ = {<js::ProtectedData<js::CheckThreadLocal, js::jit::AutoFlushICache*>> = {\r\n      value = 0xfffff63f0460}, <No data fields>}, dtoaState = {<js::ProtectedData<js::CheckThreadLocal, DtoaState*>> = {value = 0xffffad870108\r\n     <js::ParseJSONWithReviver<unsigned char>(JSContext*, mozilla::Range<unsigned char const>, JS::Handle<JS::Value>, JS::MutableHandle<JS::Value>)+224>}, <No data fields>}, heapState = {<js::ProtectedData<js::CheckThreadLocal, JS::HeapState>> = {value = -290486992}, <No data fields>},\r\n  suppressGC = {<js::ProtectedData<js::CheckThreadLocal, int>> = {value = 43690}, <No data fields>},\r\n  enableAccessValidation = {<js::ProtectedData<js::CheckThreadLocal, unsigned int>> = {value = 4131325104}, <No data fields>},\r\n  inUnsafeRegion = {<js::ProtectedData<js::CheckThreadLocal, int>> = {value = 65535}, <No data fields>},\r\n  generationalDisabled = {<js::ProtectedData<js::CheckThreadLocal, unsigned int>> = {value = 4131324976}, <No data fields>},\r\n  compactingDisabledCount = {<js::ProtectedData<js::CheckThreadLocal, unsigned int>> = {value = 65535}, <No data fields>},\r\n  keepAtoms = {<js::ProtectedData<js::CheckThreadLocal, unsigned int>> = {value = 2914522364}, <No data fields>},\r\n  frontendCollectionPool_ = {<js::ProtectedData<js::CheckThreadLocal, js::frontend::NameCollectionPool>> = {value = {\r\n        mapPool_ = {<js::frontend::CollectionPool<js::InlineMap<JSAtom*, js::frontend::RecyclableAtomMapValueWrapper<unsigned int>, 24, js::DefaultHasher<JSAtom*>, js::SystemAllocPolicy>, js::frontend::InlineTablePool<js::InlineMap<JSAtom*, js::frontend::RecyclableAtomMapValueWrapper<unsigned int>, 24, js::DefaultHasher<JSAtom*>, js::SystemAllocPolicy> > >> = {all_ = {<js::SystemAllocPolicy> = {<No data fields>},\r\n              static kElemIsPod = true, static kMaxInlineBytes = 999, static kInlineCapacity = 32, mBegin = 0xfffff63f0648,\r\n              mLength = 187651128190640, mTail = {<mozilla::Vector<void*, 32, js::SystemAllocPolicy>::CapacityAndReserved> = {\r\n                  mCapacity = 281473598844648},\r\n                mBytes = \"\\000\\254\\347\\347l\\351zc`\\004?\\366\\377\\377\\000\\000 \\001\\207\\255\\377\\377\\000\\000\\060\\205\\257\\356\\252\\252\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\000\\220\\362\\255\\377\\377\\000\\000\\000\\254\\347\\347l\\351zc\\320\\a?\\366\\377\\377\\000\\000H\\004\\207\\255\\377\\377\\000\\000\\000\\220\\362\\255\\377\\377\\000\\000\\060\\205\\257\\356\\252\\252\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\260f\\326\\356\\252\\252\\000\\000\\020\\b?\\366\\377\\377\", '\\000' <repeats 23 times>, \"\\200\\371\\377\\060\\205\\257\\356\\252\\252\\000\\000\\000\\000\\000\\000\\252\\252\\000\\000\\060\\205\\257\\356\\252\\252\\000\\000\\350\\004?\\366\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\n\\000\\000\\000\\000\\000\\000\\000\\264\\271\\274\\255\\377\\377\\000\\000\"...},\r\n              static sMaxInlineStorage = <optimized out>}, recyclable_ = {<js::SystemAllocPolicy> = {<No data fields>},\r\n              static kElemIsPod = true, static kMaxInlineBytes = 999, static kInlineCapacity = 32, mBegin = 0xaaaaeeaf8530,\r\n              mLength = 281474813070400, mTail = {<mozilla::Vector<void*, 32, js::SystemAllocPolicy>::CapacityAndReserved> = {\r\n                  mCapacity = 281474813070464},\r\n                mBytes = \" \\a?\\366\\377\\377\\000\\000\\270f\\326\\356\\252\\252\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000`\\360\\a\\000\\000\\a\\000\\000P\\205\\257\\356\\252\\252\\000\\000`\\022\\004\\000\\000\\a\\000\\000\\270f\\326\\356\\252\\252\\000\\000\\230\\f?\\366\\377\\377\\000\\000\\000\\220\\362\\255\\377\\377\\000\\000\\060\\205\\257\\356\\252\\252\\000\\000\\250\\005?\\366\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\005\\000\\000\\000\\000\\000\\000\\000\\324\\026\\273\\255\\377\\377\\000\\000\\060\\205\\257\\356\\252\\252\\000\\000\\200\\f?\\366\\377\\377\\000\\000\\000\\220\\362\\255\\377\\377\\000\\000\\060\\205\\257\\356\\252\\252\\000\\000\\060\\205\\257\\356\\252\\252\\000\\000\\360\\005?\\366\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\005\\000\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\230\\205\\257\\356\\252\\252\\000\\000\\210\\006?\\366\\377\\377\\000\\000\"...}, static sMaxInlineStorage = <optimized out>}}, <No data fields>},\r\n        vectorPool_ = {<js::frontend::CollectionPool<mozilla::Vector<JSAtom*, 24, js::SystemAllocPolicy>, js::frontend::VectorPool<mozilla::Vector<JSAtom*, 24, js::SystemAllocPolicy> > >> = {all_ = {<js::SystemAllocPolicy> = {<No data fields>}, static kElemIsPod = true,\r\n              static kMaxInlineBytes = 999, static kInlineCapacity = 32,\r\n              mBegin = 0xffffad867058 <JS::StructGCPolicy<js::JSONParser<unsigned char> >::trace(JSTracer*, js::JSONParser<unsigned char>*, char const*)>, mLength = 18444633011384221696, mTail = {<mozilla::Vector<void*, 32, js::SystemAllocPolicy>::CapacityAndReserved> = {\r\n                  mCapacity = 187651125642544},\r\n                mBytes = \"\\000\\000\\000\\000l\\351zc0\\205\\257\\356\\252\\252\\000\\000\\200\\006?\\366\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\n\\000\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000p\\351\\334\\356\\252\\252\\000\\000\\000\\000\\000\\000\\377\\377\\000\\000\\360\\353\\270\\356\\252\\252\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000p\\315\\277\\356\\252\\252\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\360\\363\\270\\356\\252\\252\\000\\000\\001\\000\\000\\000\\000\\a\\376\\377\\000\\330\\263\\356\\252\\252\\000\\000\\200\\a?\\366\\377\\377\\000\\000\\240N\\273\\255\\377\\377\\000\\000\\360\\a?\\366\\377\\377\\000\\000\\000\\220\\362\\255\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\230\\f?\\366\\377\\377\\000\\000\\060\\205\\257\\356\\252\\252\\000\\000\\200\\f?\\366\\377\\377\\000\\000\\270f\\326\\356\\252\\252\\000\\000@\\f?\\366\\377\\377\\000\\000\"...}, static sMaxInlineStorage = <optimized out>},\r\n            recyclable_ = {<js::SystemAllocPolicy> = {<No data fields>}, static kElemIsPod = true, static kMaxInlineBytes = 999,\r\n              static kInlineCapacity = 32, mBegin = 0xffff00000000, mLength = 0,\r\n              mTail = {<mozilla::Vector<void*, 32, js::SystemAllocPolicy>::CapacityAndReserved> = {mCapacity = 187651125642544},\r\n                mBytes = \"\\210\\a?\\366\\377\\377\\000\\000\\003\\000\\000\\000\\000\\000\\000\\000\\005\\000\\000\\000\\000\\000\\000\\000\\000\\330\\263\\356\\252\\252\\000\\000p\\315\\277\\356\\252\\252\\000\\000p\\351\\334\\356\\252\\252\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000h\\n?\\366\\377\\377\\000\\000\\241M\\302\\356\\252\\252\\000\\000@K\\302\\356\\252\\252\\000\\000\\241M\\302\\356\\252\\252\\000\\000\\000\\254\\347\\347l\\351zc\\200\\b?\\366\\377\\377\\000\\000\\204\\217\\205\\255\\377\\377\\000\\000\\370\\b?\\366\\377\\377\\000\\000\\000\\220\\362\\255\\377\\377\\000\\000\\060\\205\\257\\356\\252\\252\\000\\000h\\n?\\366\\377\\377\\000\\000\\330\\002\\207\\255\\377\\377\\000\\000\\220\\205\\257\\356\\252\\252\\000\\000p\\205\\257\\356\\252\\252\\000\\000\\230\\v?\\366\\377\\377\\000\\000p\\254\\323\\000\\000\\a\\000\\000@K\\302\\356\\252\\252\\000\\000`Q\\b\\000\\000\\a\\000\\000\"...}, static sMaxInlineStorage = <optimized out>}}, <No data fields>}, activeCompilations_ = 4007317000}}, <No data fields>},\r\n  suppressProfilerSampling = {<mozilla::detail::AtomicBase<unsigned int, (mozilla::MemoryOrdering)2>> = {\r\n--Type <RET> for more, q to quit, c to continue without paging--c\r\n      mValue = {<std::__atomic_base<unsigned int>> = {static _S_alignment = 4, _M_i = 3890719744}, <No data fields>}}, <No data fields>}, static TEMP_LIFO_ALLOC_PRIMARY_CHUNK_SIZE = 4096, tempLifoAlloc_ = {<js::ProtectedData<js::CheckThreadLocal, js::LifoAlloc>> = {value = {chunks_ = {head_ = {mTuple = {<mozilla::detail::PairHelper<js::detail::BumpChunk*, JS::DeletePolicy<js::detail::BumpChunk>, (mozilla::detail::StorageType)1, (mozilla::detail::StorageType)0>> = {<JS::DeletePolicy<js::detail::BumpChunk>> = {<No data fields>}, mFirstA = 0xfffff63f0930}, <No data fields>}}, last_ = 0xffffad84f264 <Interpret(JSContext*, js::RunState&)+6804>}, unused_ = {head_ = {mTuple = {<mozilla::detail::PairHelper<js::detail::BumpChunk*, JS::DeletePolicy<js::detail::BumpChunk>, (mozilla::detail::StorageType)1, (mozilla::detail::StorageType)0>> = {<JS::DeletePolicy<js::detail::BumpChunk>> = {<No data fields>}, mFirstA = 0xffffadefd000 <array_methods+1216>}, <No data fields>}}, last_ = 0xfffff63f0d00}, markCount = 281473600098304, defaultChunkSize_ = 187651125642576, curSize_ = 281474813071016, peakSize_ = 187651125642640, static HUGE_ALLOCATION = 52428800}}, <No data fields>}, debuggerMutations = {<js::ProtectedData<js::CheckThreadLocal, unsigned int>> = {value = 4131327032}, <No data fields>}, ionPcScriptCache = {<js::ProtectedData<js::CheckThreadLocal, js::jit::PcScriptCache*>> = {value = 0xfffff63f0cc0}, <No data fields>}, throwing = {<js::ProtectedData<js::CheckThreadLocal, bool>> = {value = 136}, <No data fields>}, unwrappedException_ = {<js::ProtectedData<js::CheckThreadLocal, JS::PersistentRooted<JS::Value> >> = {value = {<js::RootedBase<JS::Value, JS::PersistentRooted<JS::Value> >> = {<js::MutableWrappedPtrOperations<JS::Value, JS::PersistentRooted<JS::Value> >> = {<js::WrappedPtrOperations<JS::Value, JS::PersistentRooted<JS::Value> >> = {<No data fields>}, <No data fields>}, <No data fields>}, <mozilla::LinkedListElement<JS::PersistentRooted<JS::Value> >> = {mNext = 0xfffff63f0230, mPrev = 0x13, mIsSentinel = 80}, ptr = {data = {asBits = 281474813071016, debugView = {payload47 = 140737324715688, tag = 1}, s = {payload = {i32 = -163639640, u32 = 4131327656, why = 4131327656}}, asDouble = 1.3906703530797566e-309, asPtr = 0xfffff63f0ea8, asWord = 281474813071016, asUIntPtr = 281474813071016}}}}, <No data fields>}, overRecursed_ = {<js::ProtectedData<js::CheckThreadLocal, bool>> = {value = 128}, <No data fields>}, propagatingForcedReturn_ = {<js::ProtectedData<js::CheckThreadLocal, bool>> = {value = 201}, <No data fields>}, liveVolatileJitFrameIter_ = {<js::ProtectedData<js::CheckThreadLocal, js::jit::DebugModeOSRVolatileJitFrameIter*>> = {value = 0xfffff63f0920}, <No data fields>}, reportGranularity = {<js::ProtectedData<js::CheckThreadLocal, int>> = {value = -163640128}, <No data fields>}, resolvingList = {<js::ProtectedData<js::CheckThreadLocal, js::AutoResolving*>> = {value = 0xfffff63f0cc0}, <No data fields>}, generatingError = {<js::ProtectedData<js::CheckThreadLocal, bool>> = {value = 136}, <No data fields>}, cycleDetectorVector_ = {<js::ProtectedData<js::CheckThreadLocal, JS::GCVector<JSObject*, 8, js::TempAllocPolicy> >> = {value = {vector = {<js::TempAllocPolicy> = {cx_ = 0xfffff63f0930}, static kElemIsPod = true, static kMaxInlineBytes = 992, static kInlineCapacity = 8, mBegin = 0xffffad853bd8 <Interpret(JSContext*, js::RunState&)+25608>, mLength = 281474813070768, mTail = {<mozilla::Vector<JSObject*, 8, js::TempAllocPolicy>::CapacityAndReserved> = {mCapacity = 281473592953672}, mBytes = \"0\\205\\257\\356\\252\\252\\000\\000\\000\\220\\362\\255\\377\\377\\000\\000\\250\\016?\\366\\377\\377\\000\\000\\270\\017?\\366\\377\\377\\000\\000\\300d]\\003\\000\\a\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\060\\205\\257\\356\\252\\252\\000\\000\\000\\000\\000\\000\\000\\000\\000\"}, static sMaxInlineStorage = <optimized out>}}}, <No data fields>}, data = {<js::ProtectedData<js::CheckUnprotected, void*>> = {value = 0xfffff63f1108}, <No data fields>}, outstandingRequests = {<js::ProtectedData<js::CheckThreadLocal, unsigned int>> = {value = 4004886400}, <No data fields>}, jitIsBroken = {<js::ProtectedData<js::CheckThreadLocal, bool>> = {value = 170}, <No data fields>}, asyncStackForNewActivations_ = {<js::ProtectedData<js::CheckThreadLocal, JS::PersistentRooted<js::SavedFrame*> >> = {value = {<js::RootedBase<js::SavedFrame*, JS::PersistentRooted<js::SavedFrame*> >> = {<js::MutableWrappedPtrOperations<js::SavedFrame*, JS::PersistentRooted<js::SavedFrame*> >> = {<js::WrappedPtrOperations<js::SavedFrame*, JS::PersistentRooted<js::SavedFrame*> >> = {<No data fields>}, <No data fields>}, <No data fields>}, <mozilla::LinkedListElement<JS::PersistentRooted<js::SavedFrame*> >> = {mNext = 0x0, mPrev = 0x1222000011ab, mIsSentinel = 19}, ptr = 0xaaaaeeaf8560}}, <No data fields>}, asyncCauseForNewActivations = {<js::ProtectedData<js::CheckThreadLocal, char const*>> = {value = 0xfffff63f0cd0 \"@\\221\\323\"}, <No data fields>}, asyncCallIsExplicit = {<js::ProtectedData<js::CheckThreadLocal, bool>> = {value = 168}, <No data fields>}, interruptCallbacks_ = {<js::ProtectedData<js::CheckThreadLocal, mozilla::Vector<bool (*)(JSContext*), 2, js::SystemAllocPolicy> >> = {value = {<js::SystemAllocPolicy> = {<No data fields>}, static kElemIsPod = true, static kMaxInlineBytes = 999, static kInlineCapacity = 2, mBegin = 0xaaaaeeaf8598, mLength = 281474813070112, mTail = {<mozilla::Vector<bool (*)(JSContext*), 2, js::SystemAllocPolicy>::CapacityAndReserved> = {mCapacity = 281474813070488}, mBytes = \"p\\f?\\366\\377\\377\\000\\000\\300\\n?\\366\\377\\377\\000\"}, static sMaxInlineStorage = <optimized out>}}, <No data fields>}, interruptCallbackDisabled = {<js::ProtectedData<js::CheckThreadLocal, bool>> = {value = 32}, <No data fields>}, interrupt_ = {<mozilla::detail::AtomicBaseIncDec<unsigned int, (mozilla::MemoryOrdering)0>> = {<mozilla::detail::AtomicBase<unsigned int, (mozilla::MemoryOrdering)0>> = {mValue = {<std::__atomic_base<unsigned int>> = {static _S_alignment = 4, _M_i = 65535}, <No data fields>}}, <No data fields>}, <No data fields>}, interruptRegExpJit_ = {<mozilla::detail::AtomicBaseIncDec<unsigned int, (mozilla::MemoryOrdering)0>> = {<mozilla::detail::AtomicBase<unsigned int, (mozilla::MemoryOrdering)0>> = {mValue = {<std::__atomic_base<unsigned int>> = {static _S_alignment = 4, _M_i = 4131326776}, <No data fields>}}, <No data fields>}, <No data fields>}, handlingJitInterrupt_ = {<mozilla::detail::AtomicBase<unsigned int, (mozilla::MemoryOrdering)2>> = {mValue = {<std::__atomic_base<unsigned int>> = {static _S_alignment = 4, _M_i = 65535}, <No data fields>}}, <No data fields>}, fx = {cond_ = 0xaaaaeeaf8588, state_ = 4004480368, static lock_ = {<mozilla::detail::AtomicBaseIncDec<js::Mutex*, (mozilla::MemoryOrdering)2>> = {<mozilla::detail::AtomicBase<js::Mutex*, (mozilla::MemoryOrdering)2>> = {mValue = {_M_b = {_M_p = 0xaaaaeeaf82e0}}}, <No data fields>}, <No data fields>}, canWait_ = {<js::ProtectedData<js::CheckThreadLocal, bool>> = {value = 170}, <No data fields>}}, osrTempData_ = {<js::ProtectedData<js::CheckThreadLocal, unsigned char*>> = {value = 0xfffff63f0ad8 \"\\220\\205\\257\\356\\252\\252\"}, <No data fields>}, ionReturnOverride_ = {<js::ProtectedData<js::CheckThreadLocal, JS::Value>> = {value = {data = {asBits = 281474813070232, debugView = {payload47 = 140737324714904, tag = 1}, s = {payload = {i32 = -163640424, u32 = 4131326872, why = 4131326872}}, asDouble = 1.3906703530758832e-309, asPtr = 0xfffff63f0b98, asWord = 281474813070232, asUIntPtr = 281474813070232}}}, <No data fields>}, jitStackLimit = {<mozilla::detail::AtomicBaseIncDec<unsigned long, (mozilla::MemoryOrdering)0>> = {<mozilla::detail::AtomicBase<unsigned long, (mozilla::MemoryOrdering)0>> = {mValue = {<std::__atomic_base<unsigned long>> = {static _S_alignment = 8, _M_i = 281474813070256}, <No data fields>}}, <No data fields>}, <No data fields>}, jitStackLimitNoInterrupt = {<js::ProtectedData<js::CheckThreadLocal, unsigned long>> = {value = 281474813070208}, <No data fields>}, getIncumbentGlobalCallback = {<js::ProtectedData<js::CheckThreadLocal, JSObject* (*)(JSContext*)>> = {value = 0xfffff63f0bf8}, <No data fields>}, enqueuePromiseJobCallback = {<js::ProtectedData<js::CheckThreadLocal, bool (*)(JSContext*, JS::Handle<JSObject*>, JS::Handle<JSObject*>, JS::Handle<JSObject*>, void*)>> = {value = 0xaaaaeeaf8568}, <No data fields>}, enqueuePromiseJobCallbackData = {<js::ProtectedData<js::CheckThreadLocal, void*>> = {value = 0xfffff63f0be0}, <No data fields>}, jobQueue = {<js::ProtectedData<js::CheckThreadLocal, JS::PersistentRooted<JS::GCVector<JSObject*, 0, js::SystemAllocPolicy> >*>> = {value = 0xaaaaeed666d0}, <No data fields>}, drainingJobQueue = {<js::ProtectedData<js::CheckThreadLocal, bool>> = {value = 200}, <No data fields>}, stopDrainingJobQueue = {<js::ProtectedData<js::CheckThreadLocal, bool>> = {value = 102}, <No data fields>}, promiseRejectionTrackerCallback = {<js::ProtectedData<js::CheckThreadLocal, void (*)(JSContext*, JS::Handle<JSObject*>, JS::PromiseRejectionHandlingState, void*)>> = {value = 0x3}, <No data fields>}, promiseRejectionTrackerCallbackData = {<js::ProtectedData<js::CheckThreadLocal, void*>> = {value = 0xaaaaeeaf8530}, <No data fields>}}\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573156492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573160593","html_url":"https://github.com/apache/couchdb/issues/2440#issuecomment-573160593","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2440","id":573160593,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzE2MDU5Mw==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T18:51:59Z","updated_at":"2020-01-10T18:51:59Z","author_association":"MEMBER","body":"This is a known and documented CouchDB 2.x issue. The workaround is to always specify the full URL to a DB for replication.\r\n\r\nThe ability to do \"local\" replication has already been removed for CouchDB 3.0, see https://github.com/apache/couchdb/pull/2089","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573160593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573161909","html_url":"https://github.com/apache/couchdb/issues/2423#issuecomment-573161909","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2423","id":573161909,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzE2MTkwOQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T18:55:40Z","updated_at":"2020-01-10T19:00:38Z","author_association":"MEMBER","body":"Consistent reproduction of this issue with the following JS tests in the `arm64v8` environment:\r\n\r\nchanges.js\r\nerlang_views.js\r\nlist_views.js\r\nrecreate_doc.js\r\nreduce_builtin.js\r\nrewrite.js\r\nrewrite_js.js\r\nusers_db_security.js\r\nview_include_docs.js\r\nview_multi_key_all_docs.js\r\nview_multi_key_design.js\r\nview_multi_key_temp.js\r\nview_offsets.js\r\nview_pagination.js\r\nview_update_seq.js\r\n\r\nTest results from a `make javascript` with the `-a` flag manually added to ignore failures below.\r\n\r\n```\r\ntest/javascript/tests/all_docs.js                              ported to elixir\r\ntest/javascript/tests/attachment_names.js                      ported to elixir\r\ntest/javascript/tests/attachment_paths.js                      ported to elixir\r\ntest/javascript/tests/attachment_ranges.js                     ported to elixir\r\ntest/javascript/tests/attachment_views.js                      ported to elixir\r\ntest/javascript/tests/attachments.js                           ported to elixir\r\ntest/javascript/tests/attachments_multipart.js                 ported to elixir\r\ntest/javascript/tests/auth_cache.js                            ported to elixir\r\ntest/javascript/tests/basics.js                                ported to elixir\r\ntest/javascript/tests/batch_save.js                            ported to elixir\r\ntest/javascript/tests/bulk_docs.js                             ported to elixir\r\ntest/javascript/tests/changes.js                               fail: -11\r\ntest/javascript/tests/coffee.js                                ported to elixir\r\ntest/javascript/tests/compact.js                               ported to elixir\r\ntest/javascript/tests/config.js                                ported to elixir\r\ntest/javascript/tests/conflicts.js                             ported to elixir\r\ntest/javascript/tests/cookie_auth.js                           ported to elixir\r\ntest/javascript/tests/copy_doc.js                              ported to elixir\r\ntest/javascript/tests/design_docs.js                           pass\r\ntest/javascript/tests/design_docs_query.js                     pass\r\ntest/javascript/tests/design_options.js                        pass\r\ntest/javascript/tests/design_paths.js                          pass\r\ntest/javascript/tests/erlang_views.js                          fail: -11\r\ntest/javascript/tests/etags_head.js                            pass\r\ntest/javascript/tests/etags_views.js                           skipped\r\ntest/javascript/tests/form_submit.js                           pass\r\ntest/javascript/tests/http.js                                  pass\r\ntest/javascript/tests/invalid_docids.js                        ported to elixir\r\ntest/javascript/tests/jsonp.js                                 pass\r\ntest/javascript/tests/large_docs.js                            ported to elixir\r\ntest/javascript/tests/list_views.js                            fail: -11\r\ntest/javascript/tests/lots_of_docs.js                          ported to elixir\r\ntest/javascript/tests/method_override.js                       pass\r\ntest/javascript/tests/multiple_rows.js                         ported to elixir\r\ntest/javascript/tests/proxyauth.js                             pass\r\ntest/javascript/tests/purge.js                                 pass\r\ntest/javascript/tests/reader_acl.js                            pass\r\ntest/javascript/tests/recreate_doc.js                          fail: -11\r\ntest/javascript/tests/reduce.js                                ported to elixir\r\ntest/javascript/tests/reduce_builtin.js                        fail: -11\r\ntest/javascript/tests/reduce_false.js                          pass\r\ntest/javascript/tests/reduce_false_temp.js                     pass\r\ntest/javascript/tests/replicator_db_bad_rep_id.js              pass\r\ntest/javascript/tests/replicator_db_by_doc_id.js               pass\r\ntest/javascript/tests/replicator_db_compact_rep_db.js          skipped\r\ntest/javascript/tests/replicator_db_continuous.js              skipped\r\ntest/javascript/tests/replicator_db_credential_delegation.js   skipped\r\ntest/javascript/tests/replicator_db_field_validation.js        skipped\r\ntest/javascript/tests/replicator_db_filtered.js                skipped\r\ntest/javascript/tests/replicator_db_identical.js               skipped\r\ntest/javascript/tests/replicator_db_identical_continuous.js    skipped\r\ntest/javascript/tests/replicator_db_invalid_filter.js          skipped\r\ntest/javascript/tests/replicator_db_security.js                skipped\r\ntest/javascript/tests/replicator_db_simple.js                  skipped\r\ntest/javascript/tests/replicator_db_successive.js              skipped\r\ntest/javascript/tests/replicator_db_survives.js                skipped\r\ntest/javascript/tests/replicator_db_swap_rep_db.js             skipped\r\ntest/javascript/tests/replicator_db_update_security.js         skipped\r\ntest/javascript/tests/replicator_db_user_ctx.js                skipped\r\ntest/javascript/tests/replicator_db_write_auth.js              skipped\r\ntest/javascript/tests/rev_stemming.js                          pass\r\ntest/javascript/tests/rewrite.js                               fail: -11\r\ntest/javascript/tests/rewrite_js.js                            fail: -11\r\ntest/javascript/tests/security_validation.js                   pass\r\ntest/javascript/tests/show_documents.js                        pass\r\ntest/javascript/tests/stats.js                                 skipped\r\ntest/javascript/tests/update_documents.js                      pass\r\ntest/javascript/tests/users_db.js                              ported to elixir\r\ntest/javascript/tests/users_db_security.js                     fail: -11\r\ntest/javascript/tests/utf8.js                                  ported to elixir\r\ntest/javascript/tests/uuids.js                                 ported to elixir\r\ntest/javascript/tests/view_collation.js                        ported to elixir\r\ntest/javascript/tests/view_collation_raw.js        pass\r\ntest/javascript/tests/view_compaction.js           pass\r\ntest/javascript/tests/view_conflicts.js            pass\r\ntest/javascript/tests/view_errors.js               pass\r\ntest/javascript/tests/view_include_docs.js         fail: -11\r\ntest/javascript/tests/view_multi_key_all_docs.js   fail: -11\r\ntest/javascript/tests/view_multi_key_design.js     fail: -11\r\ntest/javascript/tests/view_multi_key_temp.js       fail: -11\r\ntest/javascript/tests/view_offsets.js              fail: -11\r\ntest/javascript/tests/view_pagination.js           fail: -11\r\ntest/javascript/tests/view_sandboxing.js           pass\r\ntest/javascript/tests/view_update_seq.js           fail: -11\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573161909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573164079","html_url":"https://github.com/apache/couchdb/issues/2440#issuecomment-573164079","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2440","id":573164079,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzE2NDA3OQ==","user":{"login":"natcohen","id":7813574,"node_id":"MDQ6VXNlcjc4MTM1NzQ=","avatar_url":"https://avatars.githubusercontent.com/u/7813574?v=4","gravatar_id":"","url":"https://api.github.com/users/natcohen","html_url":"https://github.com/natcohen","followers_url":"https://api.github.com/users/natcohen/followers","following_url":"https://api.github.com/users/natcohen/following{/other_user}","gists_url":"https://api.github.com/users/natcohen/gists{/gist_id}","starred_url":"https://api.github.com/users/natcohen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/natcohen/subscriptions","organizations_url":"https://api.github.com/users/natcohen/orgs","repos_url":"https://api.github.com/users/natcohen/repos","events_url":"https://api.github.com/users/natcohen/events{/privacy}","received_events_url":"https://api.github.com/users/natcohen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T19:01:40Z","updated_at":"2020-01-10T19:01:40Z","author_association":"NONE","body":"@wohali Thanks for the info!\r\n\r\nBy the way, would it be possible to have an estimate time for the 3.0 release? Is it days, weeks, months, quarters? That would be extremely helpful!","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573164079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573166139","html_url":"https://github.com/apache/couchdb/issues/2440#issuecomment-573166139","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2440","id":573166139,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzE2NjEzOQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T19:07:41Z","updated_at":"2020-01-10T19:07:41Z","author_association":"MEMBER","body":"@natcohen You can watch the progress on the 3.0 release here: https://github.com/apache/couchdb/issues?q=is%3Aopen+is%3Aissue+milestone%3A3.0.0\r\n\r\nIf I had to guess, late January or early February, but there's no guarantee. It's ready when it's ready. 😉 ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573166139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573166696","html_url":"https://github.com/apache/couchdb/issues/2440#issuecomment-573166696","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2440","id":573166696,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzE2NjY5Ng==","user":{"login":"natcohen","id":7813574,"node_id":"MDQ6VXNlcjc4MTM1NzQ=","avatar_url":"https://avatars.githubusercontent.com/u/7813574?v=4","gravatar_id":"","url":"https://api.github.com/users/natcohen","html_url":"https://github.com/natcohen","followers_url":"https://api.github.com/users/natcohen/followers","following_url":"https://api.github.com/users/natcohen/following{/other_user}","gists_url":"https://api.github.com/users/natcohen/gists{/gist_id}","starred_url":"https://api.github.com/users/natcohen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/natcohen/subscriptions","organizations_url":"https://api.github.com/users/natcohen/orgs","repos_url":"https://api.github.com/users/natcohen/repos","events_url":"https://api.github.com/users/natcohen/events{/privacy}","received_events_url":"https://api.github.com/users/natcohen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T19:09:16Z","updated_at":"2020-01-10T19:09:16Z","author_association":"NONE","body":"@wohali That's exactly what I needed! Thanks","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573166696/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573176755","html_url":"https://github.com/apache/couchdb/issues/2423#issuecomment-573176755","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2423","id":573176755,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzE3Njc1NQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T19:38:51Z","updated_at":"2020-01-10T19:48:24Z","author_association":"MEMBER","body":"Recompiling SM60 with Ion disabled (`--disable-ion`) fixed all the above errors on `arm64v8`. Hrm.\r\n\r\nThis isn't a good long-term solution, because Debian ships with this enabled - unless we go back to shipping our own compiled version and linking against that instead.\r\n\r\nOptions include:\r\n* build and ship SM60 for platforms, with Ion disabled (lots of heavy lifting)\r\n* fall back to SM 1.8.5 on all binary builds for 3.0 release and declare SM60 support beta quality (disappointing for end users who install our binaries)\r\n* work harder to find out what's really going on in the JIT code. There's a lot of tips at [1] and [2] on this.\r\n\r\nI'm out of time for the week, here's hoping someone else can pick this up.\r\n\r\n[1]: https://wiki.mozilla.org/IonMonkey \r\n[2]: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Hacking_Tips ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573176755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573191153","html_url":"https://github.com/apache/couchdb/issues/2221#issuecomment-573191153","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2221","id":573191153,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzE5MTE1Mw==","user":{"login":"ErikVerheul","id":532341,"node_id":"MDQ6VXNlcjUzMjM0MQ==","avatar_url":"https://avatars.githubusercontent.com/u/532341?v=4","gravatar_id":"","url":"https://api.github.com/users/ErikVerheul","html_url":"https://github.com/ErikVerheul","followers_url":"https://api.github.com/users/ErikVerheul/followers","following_url":"https://api.github.com/users/ErikVerheul/following{/other_user}","gists_url":"https://api.github.com/users/ErikVerheul/gists{/gist_id}","starred_url":"https://api.github.com/users/ErikVerheul/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ErikVerheul/subscriptions","organizations_url":"https://api.github.com/users/ErikVerheul/orgs","repos_url":"https://api.github.com/users/ErikVerheul/repos","events_url":"https://api.github.com/users/ErikVerheul/events{/privacy}","received_events_url":"https://api.github.com/users/ErikVerheul/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T20:22:23Z","updated_at":"2020-01-10T20:22:23Z","author_association":"NONE","body":"Question: Will there be a CouchDB release 2.3.2 or 2.3.1.1 with the SameSite change?\r\nI have a CouchDB instance in the cloud and while developing I have my client software local on my PC on a different domain. I use cookie authentication. Executing that software triggers the Chrome warning.  ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573191153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573193270","html_url":"https://github.com/apache/couchdb/issues/2221#issuecomment-573193270","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2221","id":573193270,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzE5MzI3MA==","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T20:28:54Z","updated_at":"2020-01-10T20:28:54Z","author_association":"MEMBER","body":"@ErikVerheul it's not my decision but the dev team are very focused on getting a 3.0 release done so I wouldn't expect any fix to be backported before that. FWIW I expect 2.x -> 3.x to be a far less disruptive upgrade than the 1.x -> 2.x upgrade for most users.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573193270/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573208445","html_url":"https://github.com/apache/couchdb/issues/2369#issuecomment-573208445","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2369","id":573208445,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzIwODQ0NQ==","user":{"login":"seigel","id":15181,"node_id":"MDQ6VXNlcjE1MTgx","avatar_url":"https://avatars.githubusercontent.com/u/15181?v=4","gravatar_id":"","url":"https://api.github.com/users/seigel","html_url":"https://github.com/seigel","followers_url":"https://api.github.com/users/seigel/followers","following_url":"https://api.github.com/users/seigel/following{/other_user}","gists_url":"https://api.github.com/users/seigel/gists{/gist_id}","starred_url":"https://api.github.com/users/seigel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/seigel/subscriptions","organizations_url":"https://api.github.com/users/seigel/orgs","repos_url":"https://api.github.com/users/seigel/repos","events_url":"https://api.github.com/users/seigel/events{/privacy}","received_events_url":"https://api.github.com/users/seigel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T21:15:50Z","updated_at":"2020-01-10T21:15:50Z","author_association":"NONE","body":"Working from memory, bear with me.  Is there a security cookie defined some where in configs somewhere?  If so, and you edited it, does it have any spaces in it?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573208445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573225992","html_url":"https://github.com/apache/couchdb/issues/2369#issuecomment-573225992","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2369","id":573225992,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzIyNTk5Mg==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T22:13:00Z","updated_at":"2020-01-10T22:13:00Z","author_association":"MEMBER","body":"Hi @m90 , thanks for this nicely detailed issue. As of #1462 (which landed in 2.2.0) the replicator will actually try to establish a session using cookie authentication. We made this change so that admins could crank up the work factor on authentication to protect against brute force attacks. So that explains why we're even talking about cookie-related code paths. The replicator will fall back to regular basic auth if it can't establish a session, so it makes sense that you're still seeing progress.\r\n\r\nAs far as why the CouchDB 2.3.1 replicator thinks the cookie it's receiving from the target instance is invalid ... that I'm not so sure about. Is the single node target instance also running 2.3.1?\r\n\r\nIf the log spam is getting to you and you just want the replicator to use basic auth you can change the `[replicator] auth_plugins` config setting on the cluster nodes:\r\n\r\n```\r\n[replicator]\r\nauth_plugins = couch_replicator_auth_noop\r\n```\r\n\r\nSee http://docs.couchdb.org/en/stable/config/replicator.html#replicator/auth_plugins for the config documentation.\r\n\r\n/cc @nickva ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573225992/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573249534","html_url":"https://github.com/apache/couchdb/issues/2329#issuecomment-573249534","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2329","id":573249534,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzI0OTUzNA==","user":{"login":"nickimho","id":42656990,"node_id":"MDQ6VXNlcjQyNjU2OTkw","avatar_url":"https://avatars.githubusercontent.com/u/42656990?v=4","gravatar_id":"","url":"https://api.github.com/users/nickimho","html_url":"https://github.com/nickimho","followers_url":"https://api.github.com/users/nickimho/followers","following_url":"https://api.github.com/users/nickimho/following{/other_user}","gists_url":"https://api.github.com/users/nickimho/gists{/gist_id}","starred_url":"https://api.github.com/users/nickimho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickimho/subscriptions","organizations_url":"https://api.github.com/users/nickimho/orgs","repos_url":"https://api.github.com/users/nickimho/repos","events_url":"https://api.github.com/users/nickimho/events{/privacy}","received_events_url":"https://api.github.com/users/nickimho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T23:49:00Z","updated_at":"2020-01-14T21:30:11Z","author_association":"NONE","body":"We tested some behavior with 3 zone cluster (each zone with 5 nodes, n=3, q=1, and placement is one in each zone{a,b,c}). For us, we use network impairment tools so that there is 60ms RTD between each zone. We used CouchDB2.3.1\r\n\r\n\t1. Terms/Definition\r\n                a. Client – This is the host that initiates the query to couchdb's port 5984\r\n                b. Couchdb_QUERY_NODE – This is the couchdb node in cluster that receives the database query from Client on port 5984. This node may or may NOT be the node that holds shard for the database. \r\n                c. Couchdb_METALOOKUP_NODE – This is the couchdb node that Couchdb_QUERY_NODE queries for some meta info (not sure what it is). Couchdb_METALOOKUP_NODE is a node in Couchdb_DATA_NODES. The selection of this Couchdb_METALOOKUP_NODE\r\n\t\t\t\t    i The selection of Couchdb_METALOOKUP_NODE is based on \"by_range\" key in the couchdb:5986/dbs/mydb. The first one in the array ia picked.\r\n                d. Couchdb_DATA_NODES – This is the set of couchdb nodes that actually hold a copy of the database asked by the query.\r\n\t2.  General data flow we observed:\r\n                a.  General data flow for doc query:\r\n\t\t\t\t\ti.  Client -> Couchdb_QUERY_NODE:5984\r\n\t\t\t\t\tii. If Couchdb_QUERY_NODE NOT is NOT Couchdb_DATA_NODES,  Couchdb_QUERY_NODE -> Couchdb_METALOOKUP_NODE:11500  \r\n\t\t\t\t\t\t1. This selection is determinitic based on 1.c.i. Suppose Couchdb_DATA_NODES in zonea for mydb is first in \"by_range\" key, it will always be queried for this phase. This makes queries into mydb from zonec and zonb having an additional 60ms RTD network delay compared to zonea.  \r\n\t\t\t\t\tiii. Couchdb_QUERY_NODE -> “three Couchdb_DATA_NODES”:11500\r\n\t\t\t\t\t\t1. Once enough Couchdb_DATA_NODE’s (default read quorum is 2 when n=3) returns data, this phase stops\r\n\t\t\t\t\tiv.  Couchdb_QUERY_NODE->Client with query result\r\n                b. View query largely follows the same as doc. Except for the following:\r\n\t\t\t\t\ti. Couchdb_QUERY_NODE seems to cache the View definition/metadata\r\n\t\t\t\t\t\t1. During the first query to /mydb/_view/myview, it will retrieve the the view doc following 2.a process\r\n\t\t\t\t\t\t\ta. subsequent query to /mydb/_view/myview would bypass this. \r\n\t\t\t\t\t2. When Couchdb_QUERY_NODE actually retrieve the myview result, it seems to ONLY query the Couchdb_DATA_NODES in the SAME zone as itself. This is good as it saves bandwidth for large returns between zones.\r\n\r\nWe haven't tested attachment retrieve yet, but it seems to me that it should follow the same view query logic in 2.b.2 if not already. We will try to test this some time next week. \r\n\r\nAlso, not sure if this needs to be a different ticket, but we would really like to see 2.a.ii.1 to be optimized so that it would query its local zone Couchdb_METALOOKUP_NODE first. Currently, we plan to workaround this by change the \"by_range\" order in 5986/dbs/mydb to favorite the primary zone for our service. \r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573249534/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573251433","html_url":"https://github.com/apache/couchdb/issues/2386#issuecomment-573251433","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2386","id":573251433,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzI1MTQzMw==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-10T23:59:10Z","updated_at":"2020-01-10T23:59:10Z","author_association":"MEMBER","body":"The way I see it, you're both correct 😸\r\n\r\nConfiguring the placement topology as @nicknaychov described with 2 copies in the \"primary\" zone and one copy in the \"backup\" zone will generally yield local latencies for read and write operations in the primary zone in a healthy cluster. I've seen large clusters operate this way using a backup zone ~35ms away. I also acknowledge that configuring an HTTP replication per database for a large number of databases is an onerous task and the placement configuration looks like a nice way to sidestep that burden.\r\n\r\n@wohali is correct that the multi-zone placement configuration will use a lot of WAN bandwidth, more than using HTTP replication if the read load is high.\r\n\r\nThe problem with the WAN multi-zone configuration is that we haven't really optimized the RPC and networking mechanisms inside the cluster for dealing with that kind of inter-node latency. I've seen outages in the *primary* zone caused by the backup zone going offline, as the primary zone starts buffering a lot of messages to send over the failed link. We've addressed many of those issues, but the fact remains that it's not as well-tested as a configuration where all the zones are in the same metro area.\r\n\r\nIf you do go that route, I'd encourage you to simulate a failed link between the zones with some realistic workload on the cluster and make sure it responds appropriately. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573251433/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573254663","html_url":"https://github.com/apache/couchdb/issues/2329#issuecomment-573254663","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2329","id":573254663,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzI1NDY2Mw==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-11T00:15:13Z","updated_at":"2020-01-11T00:15:13Z","author_association":"MEMBER","body":"Heya @nickimho, great to see those empirical results 👍 \r\n\r\nRegarding `2.b.2`, I believe the behavior depends on the query parameters. If you supply `stale=ok` or `stable=true` on your request, the view data will always be retrieved from the closest possible DATA_NODE. If you do not, CouchDB will ask every DATA_NODE for the data and stream the results from the first one to respond (which is likely to be the closest copy but not required). It's possible in the second situation for a temporarily slow in-zone DATA_NODE to lose the race to a remote one and the remote DATA_NODE will stream the view results to the QUERY_NODE as a result.\r\n\r\nRegarding `2.a.ii.1` ... that's a surprising result. I thought we already were preferring the closest possible METALOOKUP_NODE using this code in `fabric_util:get_db/2`:\r\n\r\nhttps://github.com/apache/couchdb/blob/dd1b2817bbf7a0efce858414310a0c822ce89468/src/fabric/src/fabric_util.erl#L93-L105\r\n\r\nCan you say how you tracked down that the traffic was flowing to the first node in the `by_range` array? Perhaps we've overlooked some code path in that zonal prioritization; if so, that should be a quick fix.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573254663/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573256102","html_url":"https://github.com/apache/couchdb/issues/2329#issuecomment-573256102","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2329","id":573256102,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzI1NjEwMg==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-11T00:23:13Z","updated_at":"2020-01-11T00:23:13Z","author_association":"MEMBER","body":"Oh, and regarding attachments ... unfortunately they share less in common with view streaming than you might imagine. I had to go back and re-read the code, but it looks like we select one of the DATA_NODES that contributed to the quorum from `1.iii.1` essentially at random and have it stream the attachment data back to the QUERY_NODE. There's no zonal affinity logic being applied.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573256102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573264155","html_url":"https://github.com/apache/couchdb/issues/2423#issuecomment-573264155","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2423","id":573264155,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzI2NDE1NQ==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-11T01:18:29Z","updated_at":"2020-01-11T01:18:29Z","author_association":"CONTRIBUTOR","body":"thanks @wohali for above.\r\n\r\n> build and ship SM60 for platforms, with Ion disabled (lots of heavy lifting)\r\n\r\ndoes it mean that we need more build time to generate SM library for shipment? Is it once-for-all? Or other efforts to take?\r\n\r\n> fall back to SM 1.8.5 on all binary builds for 3.0 release and declare SM60 support beta quality (disappointing for end users who install our binaries)\r\n\r\n\" all binary builds\" means that it can't be installed using `apt-get -y install libmozjs-60-dev` or something like this?\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573264155/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573269636","html_url":"https://github.com/apache/couchdb/issues/2423#issuecomment-573269636","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2423","id":573269636,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzI2OTYzNg==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-11T02:09:37Z","updated_at":"2020-01-11T02:09:37Z","author_association":"MEMBER","body":"\r\n\r\n> > build and ship SM60 for platforms, with Ion disabled (lots of heavy lifting)\r\n> does it mean that we need more build time to generate SM library for shipment? Is it once-for-all? Or other efforts to take?\r\n\r\nIt is effort for each OS and platform combination (i.e. debian-buster-ppc64le, centos-8-x86_64, etc.) and since SM60 is still changing we'll need to rebuild and repackage it as it receives new patches. It's a lot of work.\r\n\r\n> > fall back to SM 1.8.5 on all binary builds for 3.0 release and declare SM60 support beta quality (disappointing for end users who install our binaries)\r\n> \" all binary builds\" means that it can't be installed using apt-get -y install libmozjs-60-dev or something like this?\r\n\r\nNo, because\r\n* you have to pick SM 60 *or* SM 1.8.5 at compile time, so we can't ship a binary that supports both easily. if we're falling back to SM 1.8.5, the binaries we ship will be configured for SM 1.8.5 at compile time, not SM 60.\r\n* even if we work out a way to support both at compile time (shipping 2x couchjs for instance), the upstream package is currently the problem, since it has Ion enabled and that's the source of the crashes in couchjs right now.\r\n\r\nideally we fix the problem with Ion, either in our code or SpiderMonkey. Barring that we have the above choice to make, and neither selection is ideal.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573269636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573271004","html_url":"https://github.com/apache/couchdb/issues/2329#issuecomment-573271004","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2329","id":573271004,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzI3MTAwNA==","user":{"login":"nickimho","id":42656990,"node_id":"MDQ6VXNlcjQyNjU2OTkw","avatar_url":"https://avatars.githubusercontent.com/u/42656990?v=4","gravatar_id":"","url":"https://api.github.com/users/nickimho","html_url":"https://github.com/nickimho","followers_url":"https://api.github.com/users/nickimho/followers","following_url":"https://api.github.com/users/nickimho/following{/other_user}","gists_url":"https://api.github.com/users/nickimho/gists{/gist_id}","starred_url":"https://api.github.com/users/nickimho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickimho/subscriptions","organizations_url":"https://api.github.com/users/nickimho/orgs","repos_url":"https://api.github.com/users/nickimho/repos","events_url":"https://api.github.com/users/nickimho/events{/privacy}","received_events_url":"https://api.github.com/users/nickimho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-11T02:25:41Z","updated_at":"2020-01-11T02:25:41Z","author_association":"NONE","body":"Thanks @kocolosk, for the detailed info!\r\n\r\nI just want say that I am not a coder, and we have been looking at this from a black box point of view so far. So, please forgive if I am not very precise in some of the discussion or not using the right terms =)  . \r\n\r\nAt a high level, here is how we setup the environment:\r\n1. 15 CouchDB nodes, 5 in each zone (couchdb{1,2,3,4,5}-zone{a,b,c})\r\n1.a. q=1, n=3, \r\n2. Each zone has it own IP subnet\r\n3, We Netropy (impairment tool) as the default gateway for those subnets, and impair between them with 60ms RTD. \r\n4. In Each subnet, we setup a client host (client-zone{a,b,c}) to generate the query using CURL command\r\n5. For each test, we basically run tcpdump on all CouchDB nodes (especially QUERY_NODE to analysis where delays are coming from). In general, we are focusing on the potential network delays. \r\n5.a We saw some i/o delays too if mydb is cold in Couchdb_DATA_NODES (I am suspecting due to mydb is not in file descriptor as well could cause this); this is not a concern for us as it is expected the mydb's our service care about would get hit often. \r\n\r\nFor data points I provided above:\r\n1. We basically start tcpdump on all CouchDB nodes.\r\n2. Run the CURL command test case (e.g. \"time curl CouchDB2-zonea:5984/mydb/mydoc\"\r\n3. Stop tcpdump's\r\n4. We start looking at Couchdb_QUERY_NODE's pcap using wireshark and the rest is just following the packets to understand the network interactions between all the nodes. \r\n\r\nFor 2.b.2, we ran the view tests without any parameters specified. We noticed for a given mydb, one zone always performs better (almost about 60ms). This become more clear if we use \"time curl Couchdb_QUERY_NODE:5984/mydb/mydoc?r=1 #from Client of the same zone\" (r=1 eliminated the delay from 2.a.iii before returning result). The preferred node (the first entry in \"by_range\" if i remember correctly), will always get pick for Couchdb_METALOOKUP_NODE, resulting in almost no network delay for the query. Where as the other two zones will always have the added 60ms. We then tweak the :5986/dbs/mydb doc to re-arrange the  \"by_range\" array and saw that the Couchdb_METALOOKUP_NODE follows the first one in the array. \r\n\r\nActually, I should check the notes later on this; there might be an except to this:\r\n1. If Couchdb_QUERY_NODE is one of the Couchdb_DATA_NODES, 2.b.2, I think there is some difference in how the process work. I will provide you with this info later after I find the notes. \r\n\r\nAnd thanks for the insight on attachment! This is good to know. For what we do now, we should be OK (as long as this behavior also exists in BigCouch which is where we are upgrading from). I will have my team run the analysis against BigCouch and CouchDB next week and will provide the result here later. In general, we see attachments as bigger data retrieval and the higher layer application should have logic to handle more delay and caching; also, we are moving attachment to external storage in general and just use doc as a pointer to those external resource. We do want doc and view query be as optimized as possible (or at least consistent in all zones) for better user experience. \r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573271004/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573271980","html_url":"https://github.com/apache/couchdb/issues/2329#issuecomment-573271980","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2329","id":573271980,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzI3MTk4MA==","user":{"login":"nickimho","id":42656990,"node_id":"MDQ6VXNlcjQyNjU2OTkw","avatar_url":"https://avatars.githubusercontent.com/u/42656990?v=4","gravatar_id":"","url":"https://api.github.com/users/nickimho","html_url":"https://github.com/nickimho","followers_url":"https://api.github.com/users/nickimho/followers","following_url":"https://api.github.com/users/nickimho/following{/other_user}","gists_url":"https://api.github.com/users/nickimho/gists{/gist_id}","starred_url":"https://api.github.com/users/nickimho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickimho/subscriptions","organizations_url":"https://api.github.com/users/nickimho/orgs","repos_url":"https://api.github.com/users/nickimho/repos","events_url":"https://api.github.com/users/nickimho/events{/privacy}","received_events_url":"https://api.github.com/users/nickimho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-11T02:37:25Z","updated_at":"2020-01-11T04:30:22Z","author_association":"NONE","body":"@kocolosk \r\n\r\nActually, the commit you provided (https://github.com/apache/couchdb/blob/dd1b2817bbf7a0efce858414310a0c822ce89468/src/fabric/src/fabric_util.erl#L93-L105 ) is on 2019-04-03. The build we are using, CouchDB2.3.1, was released on Feb right? So, maybe we just need a newer build =)\r\n\r\nI just looked it up, and this was the build we used:\r\n\r\nrpm -qi couchdb\r\nName        : couchdb\r\nVersion     : 2.3.1\r\nRelease     : 1.el7\r\nArchitecture: x86_64\r\nInstall Date: Mon 25 Mar 2019 05:57:48 PM GMT\r\nGroup       : Applications/Databases\r\nSize        : 43583049\r\nLicense     : Apache License v2.0\r\nSignature   : (none)\r\nSource RPM  : couchdb-2.3.1-1.el7.src.rpm\r\nBuild Date  : Mon 11 Mar 2019 10:33:54 PM GMT\r\nBuild Host  : d6c906bce27a\r\nRelocations : /opt/couchdb\r\nPackager    : CouchDB Developers <dev@couchdb.apache.org>\r\nVendor      : The Apache Software Foundation\r\nURL         : https://couchdb.apache.org/\r\nSummary     : RESTful document oriented database\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573271980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573292483","html_url":"https://github.com/apache/couchdb/issues/2369#issuecomment-573292483","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2369","id":573292483,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzI5MjQ4Mw==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-11T07:47:45Z","updated_at":"2020-01-11T07:47:45Z","author_association":"CONTRIBUTOR","body":"@m90 \r\n\r\nIf the error is `cookie_format_invalid` it seems like we got a cookie but it doesn't have the 'AuthSession=...` value in it.\r\n\r\nhttps://github.com/apache/couchdb/blob/1347806d2feebce53325070b475f9e211d240ddf/src/couch_replicator/src/couch_replicator_auth_session.erl#L462-L464\r\n\r\nPerhaps the proxy is adding another cookie and we end up parsing that one first. Or it's modifying CouchDB's cookie and we don't parse it correctly.\r\n\r\nWould you be able to capture the headers and see what it looks like. Otherwise, to help reproduce the issue maybe paste your nginx.conf and I'll try it on my laptop.\r\n\r\nIn the meantime, good advice from @kocolosk regarding disabling the plugin, see if that helps while we figure out the issue.\r\n\r\n@seigel, I do recall an issue related to that, good call","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573292483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573295902","html_url":"https://github.com/apache/couchdb/issues/2382#issuecomment-573295902","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2382","id":573295902,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzI5NTkwMg==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-11T08:35:09Z","updated_at":"2020-01-15T05:38:31Z","author_association":"CONTRIBUTOR","body":"@nicknaychov \r\n\r\nThank you for sharing your experience and the discussion.  Sounds like your setup might work as you described it above in https://github.com/apache/couchdb/issues/2382#issuecomment-569491393. Just make sure you keep the same node names if possible when/if you move your shards, it will make things easier and keep an eye on the network latency and connectivity.\r\n\r\nRegarding security on the WAN you could try a VPN,  or use TLS (see https://www.erlang-solutions.com/blog/erlang-distribution-over-tls.html). TLS will usually work better with later versions of Erlang, if you go that route.\r\n\r\nSince there is discussion in #2386, which answers well your questions about placement and R/W optimization let's close this ticket.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573295902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573322449","html_url":"https://github.com/apache/couchdb/issues/2329#issuecomment-573322449","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2329","id":573322449,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzMyMjQ0OQ==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-11T14:39:48Z","updated_at":"2020-01-11T14:39:48Z","author_association":"MEMBER","body":"No I just grabbed the permalink to the head of the master branch. If you do the `git blame` you'll see that functionality was introduced as part of the 2.0.0 release in https://github.com/apache/couchdb/commit/39c0b24c2ee07c2798375fe40b87868eefe11511","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573322449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573329244","html_url":"https://github.com/apache/couchdb/issues/2386#issuecomment-573329244","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2386","id":573329244,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzMyOTI0NA==","user":{"login":"nicknaychov","id":1932847,"node_id":"MDQ6VXNlcjE5MzI4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/1932847?v=4","gravatar_id":"","url":"https://api.github.com/users/nicknaychov","html_url":"https://github.com/nicknaychov","followers_url":"https://api.github.com/users/nicknaychov/followers","following_url":"https://api.github.com/users/nicknaychov/following{/other_user}","gists_url":"https://api.github.com/users/nicknaychov/gists{/gist_id}","starred_url":"https://api.github.com/users/nicknaychov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicknaychov/subscriptions","organizations_url":"https://api.github.com/users/nicknaychov/orgs","repos_url":"https://api.github.com/users/nicknaychov/repos","events_url":"https://api.github.com/users/nicknaychov/events{/privacy}","received_events_url":"https://api.github.com/users/nicknaychov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-11T16:01:26Z","updated_at":"2020-01-11T16:01:55Z","author_association":"NONE","body":"Thank you for your super useful comments as usual, @kocolosk and @wohali.\r\n\r\nThe buffering @kocolosk mentioned, which can cause outage in primary zone in case back zone goes offline, however is pretty scary to me. \r\n\r\nI guess same is valid vice versa. In case primary goes offline, then backup site DB could crash due to the buffering issue you mentioned. \r\n\r\nAny advises how to avoid issues on primary zone if backup goes offline. \r\n\r\nIf instead *placement* I use the classical approach with *n=3* will that make any difference? I guess not.\r\n\r\nMaybe there is setting to increase the buffering?\r\n\r\nAside from that, It seems that the placement implementation does not benefit of site zoning at all, i.e. if you have two sites and if quorum can be satisfied only by the nodes at site A (as in my case), nevertheless R/W will still be sent over WAN to site B, which I think is a pure waste of resources. If that can be optimized, then this could possibly solve the buffering issue you mentioned?\r\nI am sure you know that, but I guess there is some serious considerations against improvements in that field.\r\n\r\nThank you,\r\nyou are the best!\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573329244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573337808","html_url":"https://github.com/apache/couchdb/issues/2386#issuecomment-573337808","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2386","id":573337808,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzMzNzgwOA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-11T17:42:11Z","updated_at":"2020-01-11T17:42:11Z","author_association":"MEMBER","body":"Hi again,\r\n\r\n@kocolosk I remember a situation where outages in the primary zone were caused by the backup zone going offline, where the backup zone was halfway across the US, with you many years ago. That was no fun, and often was uncontrollable (when the WAN link was extra slow, for instance, so the \"remote\" nodes weren't _completely_ offline.)\r\n\r\n@nicknaychov The key is that with _n=3_ and the third shard being across that WAN link, when a node or disk was out at the _primary_ site, now you must wait for the remote site to respond for any task to complete. The extra wait places pressure onto the buffering queues, and slowed the database from an end user/application perspective, so queues farther back up the line start filling up, too. Eventually, this can lead to a cascading failure.\r\n\r\nIncidentally, I don't think that it's true that sending the traffic to site B is a \"pure waste of resources,\" especially for write traffic where one of the shards per database is stored at that site. (That remote shard needs to be updated somehow!) And if that remote shard falls farther behind, because of buffered queues, the situation where a node at the primary site goes offline becomes worse. Now you only have 2 copies online (assuming _n=3_) that disagree with each other, so the cluster cannot achieve quorum for your database. As the remaining node at the primary site becomes overloaded, you *will* start getting responses from the remote site being sent to clients, meaning outdated data. Your only indication for this is a 202 response, and many HTTP/CouchDB client libraries do not distinguish between 201 and 202. (Yours may, I wouldn't know...)\r\n\r\nIf your intent is to have disaster recovery or \"hot standby\" at a remote site, to have that standby node/cluster as primarily a consumer of data from the main cluster, and have live switchover to it possible, the absolute best way to do this is to treat the two sites as separate clusters (or a cluster and a single backup node) and use multiple standard HTTP replications. You'll be in good company with this approach, it's tested and recommended, and more stable and reliable than relying on Erlang distribution RPC traffic over a WAN link.\r\n\r\nSince it's not mentioned yet, I'll bring up that CouchDB 4.0 completely replaces the clustering and networking layer with a new implementation, based on FoundationDB. You can read more about it on our mailing lists and at [this article](https://www.ibm.com/cloud/blog/new-builders/database-deep-dives-couchdb).\r\n\r\nBecause of this, the reality is that we're not going to be making any significant changes to the clustering code at this time. More than that, the zone/placement code is a very rarely used feature of CouchDB - outside of people coming from BigCouch, which is primarily limited to SIP server/kazoo-influenced users like yourself, where BigCouch found some traction.\r\n\r\nIt _may_ be possible to integrate improvements to the clustering code for this situation, but optimizing the RPC for dealing with increased intra-cluster latency isn't high on the core development team's list. We'd certainly entertain a pull request for the 3.x series working on this code, but it's not a trivial matter to sort out.\r\n\r\nDoes this help?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573337808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573338154","html_url":"https://github.com/apache/couchdb/pull/2436#issuecomment-573338154","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2436","id":573338154,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzMzODE1NA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-11T17:46:24Z","updated_at":"2020-01-11T17:46:24Z","author_association":"MEMBER","body":"@kocolosk Thanks Adam, we're currently blocked by #2423 before merging this.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573338154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573596124","html_url":"https://github.com/apache/couchdb/issues/2369#issuecomment-573596124","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2369","id":573596124,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzU5NjEyNA==","user":{"login":"m90","id":1662740,"node_id":"MDQ6VXNlcjE2NjI3NDA=","avatar_url":"https://avatars.githubusercontent.com/u/1662740?v=4","gravatar_id":"","url":"https://api.github.com/users/m90","html_url":"https://github.com/m90","followers_url":"https://api.github.com/users/m90/followers","following_url":"https://api.github.com/users/m90/following{/other_user}","gists_url":"https://api.github.com/users/m90/gists{/gist_id}","starred_url":"https://api.github.com/users/m90/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/m90/subscriptions","organizations_url":"https://api.github.com/users/m90/orgs","repos_url":"https://api.github.com/users/m90/repos","events_url":"https://api.github.com/users/m90/events{/privacy}","received_events_url":"https://api.github.com/users/m90/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T10:27:15Z","updated_at":"2020-01-13T11:05:27Z","author_association":"NONE","body":"Thanks for the detailed reponse @nickva @kocolosk \r\n\r\nThis is what I could find out using your info:\r\n\r\n- When I disable the session auth plugin and use `couch_replicator_auth_noop` the log messages go away, replication continues working\r\n- When I have nginx log the cookies included in the request(s), I can see that a non-empty `AuthSession` is being included in requests coming from the CouchDB Replicator. Its value also does not contain whitespace or anything unexpected.\r\n\r\nBoth environments are running the same version of CouchDB, which is 2.3.1 - revision c298091a4\r\n\r\n---\r\n\r\nFor me to debug further, it would be interesting to know how I can further map these error messages to a request.\r\n\r\nIf I look at the log messages I can see some identifiers like:\r\n\r\n```\r\n[notice] 2020-01-13T09:35:41.390874Z couchdb@couchdb6.local <0.6072.1500> ce9077a0e1 some.hostname.example.com ...\r\n```\r\n\r\nor\r\n\r\n```\r\n[error] 2020-01-13T09:24:07.152363Z couchdb@couchdb7.local <0.8946.1807> -------- couch_replicator_auth_session : Could not parse cookie from response headers cookie_format_invalid\r\n```\r\n\r\nbut I'm not entirely sure what the `0.6072.1500` (or similar) and `ce9077a0e1` are all about?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573596124/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573683658","html_url":"https://github.com/apache/couchdb/issues/2364#issuecomment-573683658","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2364","id":573683658,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzY4MzY1OA==","user":{"login":"backendit","id":6822728,"node_id":"MDQ6VXNlcjY4MjI3Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/6822728?v=4","gravatar_id":"","url":"https://api.github.com/users/backendit","html_url":"https://github.com/backendit","followers_url":"https://api.github.com/users/backendit/followers","following_url":"https://api.github.com/users/backendit/following{/other_user}","gists_url":"https://api.github.com/users/backendit/gists{/gist_id}","starred_url":"https://api.github.com/users/backendit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/backendit/subscriptions","organizations_url":"https://api.github.com/users/backendit/orgs","repos_url":"https://api.github.com/users/backendit/repos","events_url":"https://api.github.com/users/backendit/events{/privacy}","received_events_url":"https://api.github.com/users/backendit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T14:17:11Z","updated_at":"2020-01-13T14:17:11Z","author_association":"NONE","body":"I have solved the problem:\r\n```\r\n[root@redhat-server bin]# ldd couchjs\r\n./couchjs: /usr/lib64/libstdc++.so.6: version `CXXABI_1.3.9' not found (required by /usr/lib/libmozjs185.so.1.0)\r\n./couchjs: /lib64/libc.so.6: version `GLIBC_2.14' not found (required by /usr/lib/libmozjs185.so.1.0)\r\n\tlinux-vdso.so.1 =>  (0x00007fff3e720000)\r\n```\r\nLike below:\r\n```\r\n[root@redhat-server bin]# ldd couchjs\r\n[root@redhat-server ~]# cd /usr/couchdb/bin/\r\n[root@redhat-server bin]# ldd couchjs\r\n\tlinux-vdso.so.1 =>  (0x00007ffc237b6000)\r\n\tlibmozjs185.so.1.0 => /usr/lib/libmozjs185.so.1.0 (0x00007f69bcf71000)\r\n\tlibm.so.6 => /lib64/libm.so.6 (0x0000003be8c00000)\r\n\tlibc.so.6 => /lib64/libc.so.6 (0x00007f69bcbe4000)\r\n\tlibpthread.so.0 => /lib64/libpthread.so.0 (0x0000003be8400000)\r\n\tlibffi.so.6 => not found\r\n\tlibnspr4.so => /lib64/libnspr4.so (0x0000003beb800000)\r\n\tlibstdc++.so.6 => /usr/lib64/libstdc++.so.6 (0x00007f69bc8a9000)\r\n\t/lib64/ld-linux-x86-64.so.2 (0x0000555b8a5a5000)\r\n\tlibdl.so.2 => /lib64/libdl.so.2 (0x0000003be7c00000)\r\n\tlibrt.so.1 => /lib64/librt.so.1 (0x0000003be8800000)\r\n\tlibgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x0000003be9c00000)\r\n[root@redhat-server bin]#\r\n```\r\nbut still can not create a new view.the error is still： \r\n{\"error\":\"unknown_error\",\"reson\":\"undefined\"}\r\n\r\nEmphasize that couchdb is installed offline.Can anyone help solve this？\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573683658/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573724929","html_url":"https://github.com/apache/couchdb/issues/2369#issuecomment-573724929","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2369","id":573724929,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzcyNDkyOQ==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T15:40:04Z","updated_at":"2020-01-13T15:40:04Z","author_association":"MEMBER","body":"The `0.6072.1500` is an Erlang process identifier. It won't be helpful for mapping log messages to requests, but Is occasionally helpful for understanding that several messages were emitted from the same internal process.\r\n\r\nThe `ce9077a0e1` is a unique identifier for the HTTP request and is included as the value of the `x-couch-request-id` header in the response generated by CouchDB. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573724929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573729360","html_url":"https://github.com/apache/couchdb/issues/2369#issuecomment-573729360","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2369","id":573729360,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzcyOTM2MA==","user":{"login":"m90","id":1662740,"node_id":"MDQ6VXNlcjE2NjI3NDA=","avatar_url":"https://avatars.githubusercontent.com/u/1662740?v=4","gravatar_id":"","url":"https://api.github.com/users/m90","html_url":"https://github.com/m90","followers_url":"https://api.github.com/users/m90/followers","following_url":"https://api.github.com/users/m90/following{/other_user}","gists_url":"https://api.github.com/users/m90/gists{/gist_id}","starred_url":"https://api.github.com/users/m90/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/m90/subscriptions","organizations_url":"https://api.github.com/users/m90/orgs","repos_url":"https://api.github.com/users/m90/repos","events_url":"https://api.github.com/users/m90/events{/privacy}","received_events_url":"https://api.github.com/users/m90/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T15:48:23Z","updated_at":"2020-01-13T15:48:23Z","author_association":"NONE","body":"> The ce9077a0e1 is a unique identifier for the HTTP request and is included as the value of the x-couch-request-id header in the response generated by CouchDB.\r\n\r\nAs the error messages print `--------` for this value, I assume I cannot really tell which request caused the error, right?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573729360/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573731380","html_url":"https://github.com/apache/couchdb/issues/2369#issuecomment-573731380","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2369","id":573731380,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzczMTM4MA==","user":{"login":"kocolosk","id":16679,"node_id":"MDQ6VXNlcjE2Njc5","avatar_url":"https://avatars.githubusercontent.com/u/16679?v=4","gravatar_id":"","url":"https://api.github.com/users/kocolosk","html_url":"https://github.com/kocolosk","followers_url":"https://api.github.com/users/kocolosk/followers","following_url":"https://api.github.com/users/kocolosk/following{/other_user}","gists_url":"https://api.github.com/users/kocolosk/gists{/gist_id}","starred_url":"https://api.github.com/users/kocolosk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kocolosk/subscriptions","organizations_url":"https://api.github.com/users/kocolosk/orgs","repos_url":"https://api.github.com/users/kocolosk/repos","events_url":"https://api.github.com/users/kocolosk/events{/privacy}","received_events_url":"https://api.github.com/users/kocolosk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T15:52:26Z","updated_at":"2020-01-13T15:52:26Z","author_association":"MEMBER","body":"Correct.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573731380/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573739488","html_url":"https://github.com/apache/couchdb/issues/2221#issuecomment-573739488","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2221","id":573739488,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzczOTQ4OA==","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T16:08:17Z","updated_at":"2020-01-13T16:08:17Z","author_association":"MEMBER","body":"A potentially minimal change would be to allow the `SameSite` value to be configured via the CouchDB config. If not set, do not include the attribute in the session cookie.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573739488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573793792","html_url":"https://github.com/apache/couchdb/pull/2445#issuecomment-573793792","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2445","id":573793792,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mzc5Mzc5Mg==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T18:06:56Z","updated_at":"2020-01-13T18:06:56Z","author_association":"MEMBER","body":"The deprecations may be better fixed by going to `erlang:monotonic_time(TimeUnit)` or `erlang:unique_integer([monotonic])`, not sure.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573793792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573824245","html_url":"https://github.com/apache/couchdb/pull/2443#issuecomment-573824245","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2443","id":573824245,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzgyNDI0NQ==","user":{"login":"kxepal","id":785983,"node_id":"MDQ6VXNlcjc4NTk4Mw==","avatar_url":"https://avatars.githubusercontent.com/u/785983?v=4","gravatar_id":"","url":"https://api.github.com/users/kxepal","html_url":"https://github.com/kxepal","followers_url":"https://api.github.com/users/kxepal/followers","following_url":"https://api.github.com/users/kxepal/following{/other_user}","gists_url":"https://api.github.com/users/kxepal/gists{/gist_id}","starred_url":"https://api.github.com/users/kxepal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kxepal/subscriptions","organizations_url":"https://api.github.com/users/kxepal/orgs","repos_url":"https://api.github.com/users/kxepal/repos","events_url":"https://api.github.com/users/kxepal/events{/privacy}","received_events_url":"https://api.github.com/users/kxepal/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T19:15:43Z","updated_at":"2020-01-13T19:15:43Z","author_association":"MEMBER","body":"Happy New Year! :tada: :christmas_tree: :santa: :fireworks: ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573824245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573827525","html_url":"https://github.com/apache/couchdb/pull/2445#issuecomment-573827525","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2445","id":573827525,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzgyNzUyNQ==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T19:23:17Z","updated_at":"2020-01-13T19:23:17Z","author_association":"CONTRIBUTOR","body":"@wohali \r\n\r\n(Re: monotonic)\r\n\r\nGood idea to call it out! Yeah in general `erlang:timestamp/0` isn't a 1-to-1 replacement , as `now/0` returns strictly monotonic timestamps. In this case however we are operating at minute level intervals and even if previous timestamp is greater than the current one, `timer:now_diff/2` will just return a negative value and eventually should catch up, instead of say crashing","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573827525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573838817","html_url":"https://github.com/apache/couchdb/issues/2369#issuecomment-573838817","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2369","id":573838817,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzgzODgxNw==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T19:48:50Z","updated_at":"2020-01-13T19:49:04Z","author_association":"CONTRIBUTOR","body":"@m90 \r\n\r\n1) Could you capture the responses from the client to the proxy, then from the proxy to CouchDB see anything is adding cookie. Also notice if there are any differences at all between \"Set-Cookie\" headers before and after the proxy.\r\n\r\n2) Just to debug the scenario, can you eliminate the nginx proxy from the connection chain altogether, by say having a local cluster or use an SSH tunnel. Then see if errors persist or not.\r\n\r\nBased on the logic in the code https://github.com/apache/couchdb/blob/1347806d2feebce53325070b475f9e211d240ddf/src/couch_replicator/src/couch_replicator_auth_session.erl#L462-L464 it looks like there was a cookie found _but_ it doesn't have an \"AuthSession\" part. That looks like a bug as CouchDB should ignore that cookie altogether and only pay attention to the ones having an \"AuthSession\" instead of failing nosily. However before making that change, let's see if we can confirm that theory.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573838817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573904007","html_url":"https://github.com/apache/couchdb/pull/2445#issuecomment-573904007","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2445","id":573904007,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzkwNDAwNw==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T22:31:15Z","updated_at":"2020-01-13T22:31:15Z","author_association":"MEMBER","body":"Went ahead and merged when Jenkins came back green so that 2446 doesn't land and force another rebuild.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573904007/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573906319","html_url":"https://github.com/apache/couchdb/issues/2423#issuecomment-573906319","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2423","id":573906319,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzkwNjMxOQ==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-13T22:37:41Z","updated_at":"2020-01-13T22:37:41Z","author_association":"MEMBER","body":"I managed to duplicate a segfault on x86_64 and it also appears to be related to the JIT compiler based on the garbage frames on the stack:\r\n\r\n```\r\n#0  0x00007f4bac91057c in JSRope::flatten (this=0x7f4ba0001fe8, maybecx=maybecx@entry=0x559cf0e444c0)\r\n    at ./debian/build/dist/include/js/HeapAPI.h:169\r\n#1  0x00007f4bac6d21eb in JSString::ensureLinear (cx=0x559cf0e444c0, this=<optimized out>)\r\n    at ./js/src/vm/StringType.h:420\r\n#2  js::str_split_string (cx=0x559cf0e444c0, group=..., str=..., sep=..., limit=2147483647)\r\n    at ./js/src/builtin/String.cpp:3211\r\n#3  0x0000366f6c2fab99 in ?? ()\r\n#4  0x0000000000000002 in ?? ()\r\n#5  0x00007ffd54cea4e8 in ?? ()\r\n#6  0x0000000000000040 in ?? ()\r\n#7  0x00007f4bacc5b8e0 in ?? () from /usr/lib/x86_64-linux-gnu/libmozjs-60.so.0\r\n#8  0x0000366f6c31babc in ?? ()\r\n#9  0x000000000000c020 in ?? ()\r\n#10 0x00007f4ba8097370 in ?? ()\r\n#11 0x00007f4ba0001fe8 in ?? ()\r\n#12 0x00007f4ba8000780 in ?? ()\r\n#13 0x000000007fffffff in ?? ()\r\n#14 0x0000000000000000 in ?? ()\r\n```\r\n\r\nI discovered that there are options to disable the JIT compiler. Doing so seems to prevent the segfault from triggering. PR #2446 includes this diff and I'll merge it if/when it comes back green.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573906319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573936296","html_url":"https://github.com/apache/couchdb/issues/2423#issuecomment-573936296","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2423","id":573936296,"node_id":"MDEyOklzc3VlQ29tbWVudDU3MzkzNjI5Ng==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T00:13:25Z","updated_at":"2020-01-14T00:13:25Z","author_association":"CONTRIBUTOR","body":"Great finding, @davisp  and just found some logic in SpiderMonkey for these two options.\r\n```\r\n    case JSJITCOMPILER_ION_ENABLE:\r\n        if (value == 1) {\r\n            JS::ContextOptionsRef(cx).setIon(true);\r\n            JitSpew(js::jit::JitSpew_IonScripts, \"Enable ion\");\r\n        } else if (value == 0) {\r\n            JS::ContextOptionsRef(cx).setIon(false);\r\n            JitSpew(js::jit::JitSpew_IonScripts, \"Disable ion\");\r\n        }\r\n        break;\r\n      case JSJITCOMPILER_BASELINE_ENABLE:\r\n        if (value == 1) {\r\n            JS::ContextOptionsRef(cx).setBaseline(true);\r\n            ReleaseAllJITCode(rt->defaultFreeOp());\r\n            JitSpew(js::jit::JitSpew_BaselineScripts, \"Enable baseline\");\r\n        } else if (value == 0) {\r\n            JS::ContextOptionsRef(cx).setBaseline(false);\r\n            ReleaseAllJITCode(rt->defaultFreeOp());\r\n            JitSpew(js::jit::JitSpew_BaselineScripts, \"Disable baseline\");\r\n        }\r\n```\r\n\r\nAlso, found others related to ION in case we need in the future.\r\n```\r\nJSJITCOMPILER_ION_WARMUP_TRIGGER\r\nJSJITCOMPILER_ION_GVN_ENABLE\r\nJSJITCOMPILER_ION_FORCE_IC\r\nJSJITCOMPILER_ION_CHECK_RANGE_ANALYSIS\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573936296/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573965282","html_url":"https://github.com/apache/couchdb/issues/2364#issuecomment-573965282","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2364","id":573965282,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mzk2NTI4Mg==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T02:11:04Z","updated_at":"2020-01-14T02:11:04Z","author_association":"CONTRIBUTOR","body":"Would you please first verify whether `couchjs` can work correctly?\r\n1. run ` ./src/couch/priv/couchjs`, you should see below\r\n```\r\nUsage: couchjs [FILE]\r\n\r\nThe couchjs command runs the Apache CouchDB JavaScript interpreter.\r\n\r\nThe exit status is 0 for success or 1 for failure.\r\n\r\nOptions:\r\n\r\n  -h          display a short help message and exit\r\n  -V          display version information and exit\r\n  -H          enable couchjs cURL bindings (only avaiable\r\n              if package was built with cURL available)\r\n  -T          enable test suite specific functions (these\r\n              should not be enabled for production systems)\r\n  -S SIZE     specify that the runtime should allow at\r\n              most SIZE bytes of memory to be allocated\r\n              default is 64 MiB\r\n  -u FILE     path to a .uri file containing the address\r\n              (or addresses) of one or more servers\r\n  --eval      Enable runtime code evaluation (dangerous!)\r\n\r\nReport bugs at <https://issues.apache.org/jira/browse/COUCHDB>.\r\n```\r\n\r\n2. create test.js with\r\n```\r\n[\"reset\"]\r\n[\"add_fun\", \"function(doc) {return;}\"]\r\n```\r\nand then run `cat test.js | ./src/couch/priv/couchjs share/server/main.js`, you need to see below result.\r\n```\r\ntrue\r\ntrue\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573965282/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573966232","html_url":"https://github.com/apache/couchdb/pull/2436#issuecomment-573966232","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2436","id":573966232,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Mzk2NjIzMg==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T02:14:32Z","updated_at":"2020-01-14T02:14:32Z","author_association":"CONTRIBUTOR","body":"I just rebased from master, and trigger build again. https://ci-couchdb.apache.org/blue/organizations/jenkins/jenkins-cm1%2FPullRequests/detail/PR-2436/5/ looks to be fine.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/573966232/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574028139","html_url":"https://github.com/apache/couchdb/issues/2437#issuecomment-574028139","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2437","id":574028139,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDAyODEzOQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T06:43:07Z","updated_at":"2020-01-14T06:43:07Z","author_association":"MEMBER","body":"This is 100% repeatable now on FreeBSD when a build is aborted. The Jenkins termination process leaves beam.smp jobs lying around.\r\n\r\nThis may be related to how Jenkins kills jobs on FreeBSD, or it could be something else.\r\n\r\nI can try and force a core or something on the hung `beam.smp` if someone can help diagnose this.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574028139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574031398","html_url":"https://github.com/apache/couchdb/issues/2423#issuecomment-574031398","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2423","id":574031398,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDAzMTM5OA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T06:55:02Z","updated_at":"2020-01-14T06:55:02Z","author_association":"MEMBER","body":"We think this is closed by #2446 . Will reopen if necessary.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574031398/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574052959","html_url":"https://github.com/apache/couchdb/pull/2447#issuecomment-574052959","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2447","id":574052959,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDA1Mjk1OQ==","user":{"login":"jaydoane","id":51209,"node_id":"MDQ6VXNlcjUxMjA5","avatar_url":"https://avatars.githubusercontent.com/u/51209?v=4","gravatar_id":"","url":"https://api.github.com/users/jaydoane","html_url":"https://github.com/jaydoane","followers_url":"https://api.github.com/users/jaydoane/followers","following_url":"https://api.github.com/users/jaydoane/following{/other_user}","gists_url":"https://api.github.com/users/jaydoane/gists{/gist_id}","starred_url":"https://api.github.com/users/jaydoane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaydoane/subscriptions","organizations_url":"https://api.github.com/users/jaydoane/orgs","repos_url":"https://api.github.com/users/jaydoane/repos","events_url":"https://api.github.com/users/jaydoane/events{/privacy}","received_events_url":"https://api.github.com/users/jaydoane/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T08:04:12Z","updated_at":"2020-01-14T08:04:12Z","author_association":"CONTRIBUTOR","body":"The code looks great, but I had some comments on the commit text. Sadly, there's apparently no way in github to comment on it directly :\\\r\n\r\n> Not preserving that statistic meant users could perceive a data loss.\r\n\r\nDo you mean users might not notice if a data loss occurred because they wouldn't notice that docs didn't replicate? Or that the incorrect stat was itself might be perceived as data loss?\r\n\r\n> These statistics were already log in the checkpoint history\r\n\r\nShould be _logged_?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574052959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574144712","html_url":"https://github.com/apache/couchdb/pull/2450#issuecomment-574144712","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2450","id":574144712,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDE0NDcxMg==","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T12:09:53Z","updated_at":"2020-01-14T12:09:53Z","author_association":"MEMBER","body":"I'd prefer something that isn't Cloudant-specific here. Could we set an environment variable like HASTINGS_HOME and test for that instead of the relative path probing?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574144712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574173493","html_url":"https://github.com/apache/couchdb/pull/2450#issuecomment-574173493","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2450","id":574173493,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDE3MzQ5Mw==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T13:28:28Z","updated_at":"2020-01-14T13:28:28Z","author_association":"CONTRIBUTOR","body":"thanks for your suggestion,  @rnewson.  Could you please check a247d7a which uses an environment variable like HASTINGS_HOME, as you suggested?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574173493/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574241520","html_url":"https://github.com/apache/couchdb/issues/2386#issuecomment-574241520","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2386","id":574241520,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDI0MTUyMA==","user":{"login":"nicknaychov","id":1932847,"node_id":"MDQ6VXNlcjE5MzI4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/1932847?v=4","gravatar_id":"","url":"https://api.github.com/users/nicknaychov","html_url":"https://github.com/nicknaychov","followers_url":"https://api.github.com/users/nicknaychov/followers","following_url":"https://api.github.com/users/nicknaychov/following{/other_user}","gists_url":"https://api.github.com/users/nicknaychov/gists{/gist_id}","starred_url":"https://api.github.com/users/nicknaychov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicknaychov/subscriptions","organizations_url":"https://api.github.com/users/nicknaychov/orgs","repos_url":"https://api.github.com/users/nicknaychov/repos","events_url":"https://api.github.com/users/nicknaychov/events{/privacy}","received_events_url":"https://api.github.com/users/nicknaychov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T15:53:12Z","updated_at":"2020-01-14T15:53:12Z","author_association":"NONE","body":"Yes it helps, thanks @wohali .\r\n\r\nMy point was, in order to keep in sync the third node rather than sending R/W, ( quorum can be satisfied by the local 2 nodes), thus maybe binary replication protocol could be used or something more efficient. Just an idea, I am sure it is not easy and might need drastic changes on the backend.\r\n\r\nCouchDB 4.0 That would be awesome! Thanks for the link.\r\n\r\nWhat would be you recommendations then for people which have mirrored deployments on two DCs, both running live traffic and need to share same consistent data across both DCs. Each need to be aware of each other data with minimal delay.\r\nWould you still recommend master-master replication?  I heard for issues there as well - with increased latency and decreased throughput due to the serialization of data into the JSON format.\r\n\r\nDoes this approach scale well if you have let's say 3 DCs?\r\n\r\nThanks","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574241520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574271771","html_url":"https://github.com/apache/couchdb/pull/2452#issuecomment-574271771","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2452","id":574271771,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDI3MTc3MQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T16:56:46Z","updated_at":"2020-01-14T16:56:46Z","author_association":"MEMBER","body":"@willholley Thank you for this! I'm adding this to 3.0.0 for tracking purposes.\r\n\r\nDo you think it would be wise (or unwise) to change the default to be `samesite = strict`?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574271771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574272742","html_url":"https://github.com/apache/couchdb/issues/2369#issuecomment-574272742","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2369","id":574272742,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDI3Mjc0Mg==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T16:58:46Z","updated_at":"2020-01-14T16:58:46Z","author_association":"CONTRIBUTOR","body":"@m90 \r\n\r\nI couldn't reproduce the issue on Ubuntu 18.04 with distro default nginx version and a with this config:\r\n\r\n```\r\n# Default server configuration\r\n#\r\nserver {\r\nlisten 80 default_server;\r\nlisten [::]:80 default_server;\r\n\r\nroot /var/www/html;\r\nindex index.html index.htm index.nginx-debian.html;\r\n\r\nserver_name _;\r\n        location / {\r\n            proxy_pass http://localhost:15984;\r\n            proxy_redirect off;\r\n            #proxy_buffering off;\r\n            proxy_set_header Host $host;\r\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n     }\r\n}\r\n```\r\n\r\nI had noticed in the code we would emit that error if we somehow got some other, non-CouchDB emitted cookie. So made PR to ignore those:\r\n\r\nhttps://github.com/apache/couchdb/pull/2454\r\n\r\nAlso noticed the issue @seigel mentioned that we did not parse some of the cookie bits like expiration time properly. That field is not used, as we use max-age, but does indicate that if nginx somehow re-writes the cookie in a certain way the same parsing error might trigger in a different way and the cookie would not be found anymore. The parsing issue should be fixed in https://github.com/apache/couchdb/pull/2452 with the new web server component update.\r\n\r\nThought I am still curios, if you get a chance to capture the traffic between client and proxy and proxy and CouchDB as to what was causing the issue in your case. Another way to do it is to re-build from source and add a few debug lines to this module:\r\n\r\n```\r\n-spec parse_cookie(list()) -> {ok, age(), string()} | {error, term()}.\r\n  parse_cookie(Headers0) ->\r\n+    couch_log:error(\"***** Headers0:~p\", [Headers0]),\r\n      Headers = mochiweb_headers:make(Headers0),\r\n      case mochiweb_headers:get_value(\"Set-Cookie\", Headers) of\r\n          undefined ->\r\n              {error, cookie_not_found};\r\n          CookieHeader ->\r\n              CookieKVs = mochiweb_cookies:parse_cookie(CookieHeader),\r\n+            couch_log:error(\"****CookieKVs:~p\", [CookieKVs]),\r\n              CaseInsKVs = mochiweb_headers:make(CookieKVs),\r\n+            couch_log:error(\"-----> AuthSession:~p\", [\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574272742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574273304","html_url":"https://github.com/apache/couchdb/pull/2453#issuecomment-574273304","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2453","id":574273304,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDI3MzMwNA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T17:00:00Z","updated_at":"2020-01-14T17:00:00Z","author_association":"MEMBER","body":"Ah, you should have named this branch `jenkins-add-power-full-builds` so we'd get a test build of `Jenkinsfile.full`.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574273304/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574280414","html_url":"https://github.com/apache/couchdb/pull/2453#issuecomment-574280414","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2453","id":574280414,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDI4MDQxNA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T17:16:38Z","updated_at":"2020-01-14T17:16:38Z","author_association":"MEMBER","body":"Doh! Will close and reopen.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574280414/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574281092","html_url":"https://github.com/apache/couchdb/pull/2455#issuecomment-574281092","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2455","id":574281092,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDI4MTA5Mg==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T17:18:13Z","updated_at":"2020-01-14T17:18:13Z","author_association":"MEMBER","body":"Huh. It even reused the old build cause I didn't change the commit sha. Neat!","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574281092/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574294162","html_url":"https://github.com/apache/couchdb/pull/2452#issuecomment-574294162","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2452","id":574294162,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDI5NDE2Mg==","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T17:49:27Z","updated_at":"2020-01-14T17:49:27Z","author_association":"MEMBER","body":"thanks both - unrelated whitespace / vscode changes now removed","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574294162/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574295526","html_url":"https://github.com/apache/couchdb/pull/2452#issuecomment-574295526","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2452","id":574295526,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDI5NTUyNg==","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T17:52:36Z","updated_at":"2020-01-14T17:52:36Z","author_association":"MEMBER","body":"> Do you think it would be wise (or unwise) to change the default to be `samesite = strict`?\r\n\r\n@wohali I'm wary of this in case it breaks clients that can't handle the `SameSite` attribute. I think for the majority of users, `strict` would be the better default from a security POV, but we probably want to at least test replication against older CouchDB, PouchDB etc before making it the default. Excluding `SameSite` should be fine - it's only users using CORS that will need to set it to `None` to keep things working.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574295526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574296120","html_url":"https://github.com/apache/couchdb/pull/2452#issuecomment-574296120","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2452","id":574296120,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDI5NjEyMA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T17:54:03Z","updated_at":"2020-01-14T17:54:03Z","author_association":"MEMBER","body":"Cool, I poked Bob who is going to re-read the cookie spec at the very least.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574296120/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574300980","html_url":"https://github.com/apache/couchdb/issues/2386#issuecomment-574300980","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2386","id":574300980,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDMwMDk4MA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T18:06:40Z","updated_at":"2020-01-14T18:06:40Z","author_association":"MEMBER","body":"It scales differently than using CouchDB cluster traffic for the same approach, because of the limitations mentioned. [There are always tradeoffs in distributed computing.](https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574300980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574328422","html_url":"https://github.com/apache/couchdb/issues/2437#issuecomment-574328422","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2437","id":574328422,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDMyODQyMg==","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T19:15:35Z","updated_at":"2020-01-14T19:15:35Z","author_association":"MEMBER","body":"https://ci-couchdb.apache.org/blue/organizations/jenkins/jenkins-cm1%2FPullRequests/detail/PR-2452/6/pipeline appears to have stalled - I'll restart it in the UK morning in case there's anything useful to be gleaned from it today.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574328422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574332938","html_url":"https://github.com/apache/couchdb/issues/2437#issuecomment-574332938","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2437","id":574332938,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDMzMjkzOA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T19:26:34Z","updated_at":"2020-01-14T19:26:34Z","author_association":"MEMBER","body":"```irc\r\n14:20 <vatamane> i had managed to lock beam on a mac when it was running eunit tests and I\r\n                 was compiling fdb from scratch, so all cpus were busy and memory usage\r\n                 was high\r\n14:20 <+Wohali> what version of beam\r\n14:20 <+Wohali> fbsd is currently on 21.something, i have to check\r\n14:21 <vatamane> backtraces showed only one scheduler (#1) spinning and most other waiting\r\n                 on a condition variable\r\n14:21 <vatamane> 21.3.8.4\r\n14:21 <+Wohali> looks like fbsd is 21.3.8.11,4 so that lines up\r\n14:22 <+Wohali> could this be another scheduler collapse?\r\n14:23 <vatamane> since I saw the child_setup_failed which deals with forking ports\r\n                 (processes) like couchjs and cleaning them up and so on\r\n14:24 <+Wohali> i guess we'll have to go spelunk into recent erlang changes in all that\r\n14:25 <+davisp> Wohali: Probably that yeah. Specifically I'd go look at the commit history\r\n                to that child_setup helper\r\n14:26 <+davisp> https://github.com/erlang/otp/commits/master/erts/emulator/sys/unix/erl_ch\r\nild_setup.c\r\n14:26 <+Wohali> ok, at least there's a direction. i'll paste this convo into the bug\r\n14:26 <+Wohali> ty for the pointer\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574332938/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574339581","html_url":"https://github.com/apache/couchdb/issues/2437#issuecomment-574339581","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2437","id":574339581,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDMzOTU4MQ==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T19:42:20Z","updated_at":"2020-01-14T19:42:20Z","author_association":"CONTRIBUTOR","body":"I have a backtrace I had saved\r\n\r\n[vm_stuck_bt.txt](https://github.com/apache/couchdb/files/4061151/vm_stuck_bt.txt)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574339581/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574383847","html_url":"https://github.com/apache/couchdb/issues/2329#issuecomment-574383847","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2329","id":574383847,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDM4Mzg0Nw==","user":{"login":"nickimho","id":42656990,"node_id":"MDQ6VXNlcjQyNjU2OTkw","avatar_url":"https://avatars.githubusercontent.com/u/42656990?v=4","gravatar_id":"","url":"https://api.github.com/users/nickimho","html_url":"https://github.com/nickimho","followers_url":"https://api.github.com/users/nickimho/followers","following_url":"https://api.github.com/users/nickimho/following{/other_user}","gists_url":"https://api.github.com/users/nickimho/gists{/gist_id}","starred_url":"https://api.github.com/users/nickimho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickimho/subscriptions","organizations_url":"https://api.github.com/users/nickimho/orgs","repos_url":"https://api.github.com/users/nickimho/repos","events_url":"https://api.github.com/users/nickimho/events{/privacy}","received_events_url":"https://api.github.com/users/nickimho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T21:32:30Z","updated_at":"2020-01-14T21:33:15Z","author_association":"NONE","body":"@kocolosk \r\n\r\nWe brought up test environment and recheck the behavior, I updated 2.a.ii in https://github.com/apache/couchdb/issues/2329#issuecomment-573249534 .  The Couchdb_METALOOKUP_NODE lookup is skipped if Couchdb_QUERY_NODE holds the shard. \r\n\r\nWe also reconfirmed that the Couchdb_METALOOKUP_NODE lookup is based on \"by_range\"","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574383847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574402623","html_url":"https://github.com/apache/couchdb/issues/2449#issuecomment-574402623","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2449","id":574402623,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDQwMjYyMw==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T22:23:26Z","updated_at":"2020-01-14T22:23:26Z","author_association":"MEMBER","body":"@davisp has been working on a reproducer, which he has...resulting in this backtrace:\r\n\r\nhttps://gist.github.com/davisp/560bff8bc98e2f08ae6984b202427633","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574402623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574425787","html_url":"https://github.com/apache/couchdb/issues/2449#issuecomment-574425787","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2449","id":574425787,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDQyNTc4Nw==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-14T23:39:25Z","updated_at":"2020-01-14T23:39:25Z","author_association":"MEMBER","body":"That backtrace was from the users_db_security test. I managed to \"fix\" that particular error by disabling native regexp's. Looking into a few of the many other failures I'm seeing a number of different backtraces that all just seem to indicate inexplicable memory corruption.\r\n\r\nI will note that 1.8.5 passes the tests without issue. At this point I'm leaning towards reverting back to that for arm64 builds rather than continuing to spend time trying to chase memory issues in over 600k lines of C++.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574425787/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574446052","html_url":"https://github.com/apache/couchdb/issues/2449#issuecomment-574446052","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2449","id":574446052,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDQ0NjA1Mg==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T00:57:37Z","updated_at":"2020-01-15T00:57:37Z","author_association":"MEMBER","body":"OK, that'll be a packaging call, and we might want to special case a warning in `./configure` for that platform. We'll also have to ensure the binary packages are built correctly, so that the Docker containers for ARM don't throw people back into this situation.\r\n\r\nCan we run a soak test on x86 and ppc64le?\r\n\r\nFinally, it'd be good if we can open _some_ sort of issue upstream with Mozilla so they're aware of our problems.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574446052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574457618","html_url":"https://github.com/apache/couchdb/issues/2449#issuecomment-574457618","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2449","id":574457618,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDQ1NzYxOA==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T01:48:51Z","updated_at":"2020-01-15T01:48:51Z","author_association":"CONTRIBUTOR","body":"> Can we run a soak test on x86 and ppc64le?\r\n\r\n@wohali I can start a soak test on ppc64le. One docker image i got is https://hub.docker.com/r/ibmcom/couchdb-ppc64le/","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574457618/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574469395","html_url":"https://github.com/apache/couchdb/issues/2449#issuecomment-574469395","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2449","id":574469395,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDQ2OTM5NQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T02:41:43Z","updated_at":"2020-01-15T02:41:43Z","author_association":"MEMBER","body":"@jiangphcn if you want to match the environment that we're deploying CouchDB in, you should use the Jenkins image: \r\n\r\nhttps://github.com/apache/couchdb/pull/2455/files#diff-2072f013ebee77df655bb31251a2f0abR517\r\n\r\nPlease run this on real POWER hardware, qemu is not good enough.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574469395/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574473995","html_url":"https://github.com/apache/couchdb/issues/2449#issuecomment-574473995","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2449","id":574473995,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDQ3Mzk5NQ==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T03:03:41Z","updated_at":"2020-01-15T03:03:41Z","author_association":"CONTRIBUTOR","body":"thanks for your tip, @wohali. Let me try whether I can find one real POWER hardware. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574473995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574480197","html_url":"https://github.com/apache/couchdb/issues/2449#issuecomment-574480197","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2449","id":574480197,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDQ4MDE5Nw==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T03:33:14Z","updated_at":"2020-01-15T03:33:14Z","author_association":"CONTRIBUTOR","body":"I contacted IT department, and they are able to provision one VM based on POWER hardware. In order to enable VM to access outside, it might take several days. I request them to provision one with debian-buster.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574480197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574571904","html_url":"https://github.com/apache/couchdb/issues/2369#issuecomment-574571904","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2369","id":574571904,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDU3MTkwNA==","user":{"login":"m90","id":1662740,"node_id":"MDQ6VXNlcjE2NjI3NDA=","avatar_url":"https://avatars.githubusercontent.com/u/1662740?v=4","gravatar_id":"","url":"https://api.github.com/users/m90","html_url":"https://github.com/m90","followers_url":"https://api.github.com/users/m90/followers","following_url":"https://api.github.com/users/m90/following{/other_user}","gists_url":"https://api.github.com/users/m90/gists{/gist_id}","starred_url":"https://api.github.com/users/m90/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/m90/subscriptions","organizations_url":"https://api.github.com/users/m90/orgs","repos_url":"https://api.github.com/users/m90/repos","events_url":"https://api.github.com/users/m90/events{/privacy}","received_events_url":"https://api.github.com/users/m90/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T09:27:01Z","updated_at":"2020-01-15T09:27:01Z","author_association":"NONE","body":"I digged into the issue further in our setup ad it's starting to get very mysterious:\r\n\r\n- removing the nginx proxy from our setup didn't make any difference\r\n- cookie headers are not mangled in any way, everything looks as expected\r\n\r\n---\r\n\r\nNow to the weird part: I removed all of the replications (we replicate around 10 databases to their backups, authentication is done using BasicAuth) we have and then re-enabled them one by one. Doing this I found out the error occurs on a single database only. Let's call it the dubious database for now. Important to know is that __replication to the remote target works just fine for this database__.\r\n\r\nIf I replicate this dubious database to a different, still empty remote database, the error message will show up again. If I replicate the dubious database to a new local database and then replicate this copy to the remote, the error message does not show up. This makes me think the cause of this is bound to the database itself, but then again, it doesn't make much sense considering how that error might show up. \r\n\r\nSome more things I found out about the dubious database:\r\n- The database's `_security` doc looks ok.\r\n- It has a very high number of deleted docs compared to the other databases\r\n- when I GET /dbs I can see that the database's revision number is unusually high compared to the other databases\r\n\r\nI'm sorry if this does not make any sense at all (at least to me), but maybe one of you can make sense of this. Let me know if I can supply some additional info about the dubious database.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574571904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574770825","html_url":"https://github.com/apache/couchdb/pull/2012#issuecomment-574770825","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2012","id":574770825,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDc3MDgyNQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T17:37:39Z","updated_at":"2020-01-15T17:38:36Z","author_association":"MEMBER","body":"@nickva you need to document and add these to `default.ini`, I'll open a ticket for you (must be fixed before 3.0.0). Thanks","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574770825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574773221","html_url":"https://github.com/apache/couchdb/issues/2457#issuecomment-574773221","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2457","id":574773221,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDc3MzIyMQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T17:43:50Z","updated_at":"2020-01-15T17:43:50Z","author_association":"MEMBER","body":"Adding more for you, Nick, with the rexi kill all","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574773221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574790974","html_url":"https://github.com/apache/couchdb/issues/2329#issuecomment-574790974","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2329","id":574790974,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDc5MDk3NA==","user":{"login":"nickimho","id":42656990,"node_id":"MDQ6VXNlcjQyNjU2OTkw","avatar_url":"https://avatars.githubusercontent.com/u/42656990?v=4","gravatar_id":"","url":"https://api.github.com/users/nickimho","html_url":"https://github.com/nickimho","followers_url":"https://api.github.com/users/nickimho/followers","following_url":"https://api.github.com/users/nickimho/following{/other_user}","gists_url":"https://api.github.com/users/nickimho/gists{/gist_id}","starred_url":"https://api.github.com/users/nickimho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickimho/subscriptions","organizations_url":"https://api.github.com/users/nickimho/orgs","repos_url":"https://api.github.com/users/nickimho/repos","events_url":"https://api.github.com/users/nickimho/events{/privacy}","received_events_url":"https://api.github.com/users/nickimho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T18:29:10Z","updated_at":"2020-01-15T18:29:10Z","author_association":"NONE","body":"@kocolosk Regarding the 39c0b24 fix you mentioned, I did a quick search in src folders and only \"get_revs_limit\", \"get_purge_infos_limit\", and \"get_security\" seem to use it. \r\n\r\nHere is an example of the data sent for the 2.a.ii step for  Couchdb_QUERY_NODE -> Couchdb_METALOOKUP_NODE:11500 . It seems to have more to do with shard lookup or confirming revision is up to date (i am just guessing here).  The capture below is extracted using \"Show Packet Bytes\" from Wireshark.\r\n\"\r\n   ..D ..' .w Y. ...+.H.Z.h.a.gR   -.   ..R.R.h.R.h.R.h.gR   -.   ..r .R . ... . .    k \r\nb333ac5a7ah.R.R.l   .m   Nshards/00000000-ffffffff/account/00/08/6546027c9afebd7cf04448bb0f8c.1570251572l   .h.R.adh.R.R h.R\r\nh.R\r\nR.l   .m   ._adminjm   .defaultjj\r\n\"\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574790974/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574828397","html_url":"https://github.com/apache/couchdb/pull/2251#issuecomment-574828397","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2251","id":574828397,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDgyODM5Nw==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T19:51:30Z","updated_at":"2020-01-15T19:51:30Z","author_association":"MEMBER","body":"@nickva Wondering if we should have a process in 3.0 that finds these and destroys them so that upgraded nodes/clusters can avoid doing unnecessary work. Or do we already ignore those with these code deletions?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574828397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574830523","html_url":"https://github.com/apache/couchdb/pull/2282#issuecomment-574830523","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2282","id":574830523,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDgzMDUyMw==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T19:56:55Z","updated_at":"2020-01-15T19:56:55Z","author_association":"MEMBER","body":"This needs documentation, opening a new ticket.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574830523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574844793","html_url":"https://github.com/apache/couchdb/issues/2369#issuecomment-574844793","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2369","id":574844793,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDg0NDc5Mw==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T20:35:34Z","updated_at":"2020-01-15T20:35:34Z","author_association":"MEMBER","body":"Does that particular database have any VDUs (`validate_doc_update` functions) that might be affecting replication?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574844793/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574901709","html_url":"https://github.com/apache/couchdb/pull/2282#issuecomment-574901709","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2282","id":574901709,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDkwMTcwOQ==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T23:16:11Z","updated_at":"2020-01-15T23:16:11Z","author_association":"CONTRIBUTOR","body":"@wohali good news! \r\n\r\nAlready done https://github.com/apache/couchdb-documentation/commit/40b2ac5e288d712999df273f09c4b98aef4a8f62","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574901709/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574907744","html_url":"https://github.com/apache/couchdb/issues/2457#issuecomment-574907744","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2457","id":574907744,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDkwNzc0NA==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-15T23:36:19Z","updated_at":"2020-01-15T23:36:19Z","author_association":"CONTRIBUTOR","body":"@wohali will do, thank you for pointing those out!","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574907744/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574929757","html_url":"https://github.com/apache/couchdb/issues/2369#issuecomment-574929757","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2369","id":574929757,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDkyOTc1Nw==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-16T01:00:09Z","updated_at":"2020-01-16T01:00:09Z","author_association":"CONTRIBUTOR","body":"@m90 \r\n\r\nOoh, very interesting. If it wasn't for just that one database, I would have guessed it's a case of the broken cookie parser https://github.com/apache/couchdb-mochiweb/commit/458eedf810b7417180a870077dbf957463adf08d. The fix is now on the master branch. But I think that would be triggered by any random database not just one specific one. Don't know if you could compile from the master branch and see if the problem shows up there.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574929757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574936543","html_url":"https://github.com/apache/couchdb/issues/2364#issuecomment-574936543","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2364","id":574936543,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDkzNjU0Mw==","user":{"login":"backendit","id":6822728,"node_id":"MDQ6VXNlcjY4MjI3Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/6822728?v=4","gravatar_id":"","url":"https://api.github.com/users/backendit","html_url":"https://github.com/backendit","followers_url":"https://api.github.com/users/backendit/followers","following_url":"https://api.github.com/users/backendit/following{/other_user}","gists_url":"https://api.github.com/users/backendit/gists{/gist_id}","starred_url":"https://api.github.com/users/backendit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/backendit/subscriptions","organizations_url":"https://api.github.com/users/backendit/orgs","repos_url":"https://api.github.com/users/backendit/repos","events_url":"https://api.github.com/users/backendit/events{/privacy}","received_events_url":"https://api.github.com/users/backendit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-16T01:23:45Z","updated_at":"2020-01-16T01:23:45Z","author_association":"NONE","body":"@jiangphcn when I run `./couchjs` in the dictionary `/usr/couchdb/bin`, The result is shown below:\r\n```\r\n[root@redhat-server bin]# ./couchjs\r\n./couchjs: error while loading shared libraries: libffi.so.6: cannot open shared object file: No such file or directory\r\n```\r\n\r\nOffline installation requires too many dependencies, I have given up, thank you.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574936543/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574969173","html_url":"https://github.com/apache/couchdb/pull/1783#issuecomment-574969173","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1783","id":574969173,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDk2OTE3Mw==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-16T03:48:15Z","updated_at":"2020-01-16T03:48:15Z","author_association":"CONTRIBUTOR","body":"I would like to continue, and found that `export MANGO_TEXT_INDEXES=1` is helpful after some investigation. Will add new commit.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574969173/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574998066","html_url":"https://github.com/apache/couchdb/issues/2457#issuecomment-574998066","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2457","id":574998066,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NDk5ODA2Ng==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-16T06:03:36Z","updated_at":"2020-01-16T06:03:36Z","author_association":"CONTRIBUTOR","body":"PR issued https://github.com/apache/couchdb/pull/2459\r\n\r\nAlso had noticed there were a few more reshard params missing so added those too","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/574998066/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/575035893","html_url":"https://github.com/apache/couchdb/pull/2456#issuecomment-575035893","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2456","id":575035893,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTAzNTg5Mw==","user":{"login":"garrensmith","id":179458,"node_id":"MDQ6VXNlcjE3OTQ1OA==","avatar_url":"https://avatars.githubusercontent.com/u/179458?v=4","gravatar_id":"","url":"https://api.github.com/users/garrensmith","html_url":"https://github.com/garrensmith","followers_url":"https://api.github.com/users/garrensmith/followers","following_url":"https://api.github.com/users/garrensmith/following{/other_user}","gists_url":"https://api.github.com/users/garrensmith/gists{/gist_id}","starred_url":"https://api.github.com/users/garrensmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/garrensmith/subscriptions","organizations_url":"https://api.github.com/users/garrensmith/orgs","repos_url":"https://api.github.com/users/garrensmith/repos","events_url":"https://api.github.com/users/garrensmith/events{/privacy}","received_events_url":"https://api.github.com/users/garrensmith/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-16T08:16:38Z","updated_at":"2020-01-16T08:16:38Z","author_association":"MEMBER","body":"@chewbranca thanks for the review. I've made the fixes you suggested. Where I would really value your feedback is the actual skip list algorithm. `couch_views_skiplist.erl`. I need another set of eyes to check if it looks correct and if you can see any improvements. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/575035893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/575093353","html_url":"https://github.com/apache/couchdb/issues/2441#issuecomment-575093353","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2441","id":575093353,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTA5MzM1Mw==","user":{"login":"toumbask","id":6897589,"node_id":"MDQ6VXNlcjY4OTc1ODk=","avatar_url":"https://avatars.githubusercontent.com/u/6897589?v=4","gravatar_id":"","url":"https://api.github.com/users/toumbask","html_url":"https://github.com/toumbask","followers_url":"https://api.github.com/users/toumbask/followers","following_url":"https://api.github.com/users/toumbask/following{/other_user}","gists_url":"https://api.github.com/users/toumbask/gists{/gist_id}","starred_url":"https://api.github.com/users/toumbask/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/toumbask/subscriptions","organizations_url":"https://api.github.com/users/toumbask/orgs","repos_url":"https://api.github.com/users/toumbask/repos","events_url":"https://api.github.com/users/toumbask/events{/privacy}","received_events_url":"https://api.github.com/users/toumbask/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-16T10:45:14Z","updated_at":"2020-01-16T10:45:14Z","author_association":"NONE","body":"Also facing the same issue, on Single Node installation , though the increase span is much faster (within 2-4 days, RAM usage jumps to over 8GB and eventually the server crashes. DB usage is minimal, with only 2 DBs and minimal data (<10MB overall). Using latest docker built with version 2.3.1.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/575093353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/575197664","html_url":"https://github.com/apache/couchdb/pull/2461#issuecomment-575197664","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2461","id":575197664,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTE5NzY2NA==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-16T15:14:29Z","updated_at":"2020-01-16T15:14:29Z","author_association":"CONTRIBUTOR","body":"What about doing both? `disallow SM 60 on arm` and `document it`","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/575197664/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/575248871","html_url":"https://github.com/apache/couchdb/pull/2461#issuecomment-575248871","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2461","id":575248871,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NTI0ODg3MQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-16T17:04:06Z","updated_at":"2020-01-16T17:04:06Z","author_association":"MEMBER","body":"And Jenkins passed, so I'm merging this.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/575248871/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]