[{"url":"https://api.github.com/repos/apache/druid/issues/comments/354135162","html_url":"https://github.com/apache/druid/pull/5197#issuecomment-354135162","issue_url":"https://api.github.com/repos/apache/druid/issues/5197","id":354135162,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDEzNTE2Mg==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-27T16:06:03Z","updated_at":"2017-12-27T16:06:03Z","author_association":"MEMBER","body":"@fuji-151a Please fill out the CLA at http://druid.io/community/cla.html if you have not done so yet.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354135162/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354141637","html_url":"https://github.com/apache/druid/issues/5009#issuecomment-354141637","issue_url":"https://api.github.com/repos/apache/druid/issues/5009","id":354141637,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDE0MTYzNw==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-27T16:50:16Z","updated_at":"2017-12-27T16:50:16Z","author_association":"MEMBER","body":"Fixed by https://github.com/druid-io/druid/pull/5139","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354141637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354393235","html_url":"https://github.com/apache/druid/issues/2693#issuecomment-354393235","issue_url":"https://api.github.com/repos/apache/druid/issues/2693","id":354393235,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDM5MzIzNQ==","user":{"login":"erikdubbelboer","id":522870,"node_id":"MDQ6VXNlcjUyMjg3MA==","avatar_url":"https://avatars.githubusercontent.com/u/522870?v=4","gravatar_id":"","url":"https://api.github.com/users/erikdubbelboer","html_url":"https://github.com/erikdubbelboer","followers_url":"https://api.github.com/users/erikdubbelboer/followers","following_url":"https://api.github.com/users/erikdubbelboer/following{/other_user}","gists_url":"https://api.github.com/users/erikdubbelboer/gists{/gist_id}","starred_url":"https://api.github.com/users/erikdubbelboer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikdubbelboer/subscriptions","organizations_url":"https://api.github.com/users/erikdubbelboer/orgs","repos_url":"https://api.github.com/users/erikdubbelboer/repos","events_url":"https://api.github.com/users/erikdubbelboer/events{/privacy}","received_events_url":"https://api.github.com/users/erikdubbelboer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-29T03:33:33Z","updated_at":"2017-12-29T03:33:33Z","author_association":"CONTRIBUTOR","body":"Since #3030 is closed I'm closing this as well for now.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354393235/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354393259","html_url":"https://github.com/apache/druid/issues/5127#issuecomment-354393259","issue_url":"https://api.github.com/repos/apache/druid/issues/5127","id":354393259,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDM5MzI1OQ==","user":{"login":"erikdubbelboer","id":522870,"node_id":"MDQ6VXNlcjUyMjg3MA==","avatar_url":"https://avatars.githubusercontent.com/u/522870?v=4","gravatar_id":"","url":"https://api.github.com/users/erikdubbelboer","html_url":"https://github.com/erikdubbelboer","followers_url":"https://api.github.com/users/erikdubbelboer/followers","following_url":"https://api.github.com/users/erikdubbelboer/following{/other_user}","gists_url":"https://api.github.com/users/erikdubbelboer/gists{/gist_id}","starred_url":"https://api.github.com/users/erikdubbelboer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikdubbelboer/subscriptions","organizations_url":"https://api.github.com/users/erikdubbelboer/orgs","repos_url":"https://api.github.com/users/erikdubbelboer/repos","events_url":"https://api.github.com/users/erikdubbelboer/events{/privacy}","received_events_url":"https://api.github.com/users/erikdubbelboer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-29T03:33:59Z","updated_at":"2017-12-29T03:33:59Z","author_association":"CONTRIBUTOR","body":"We have updated everything to `0.11.0`. This issue is happening less than before but still happens at least once a week.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354393259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354419816","html_url":"https://github.com/apache/druid/issues/5196#issuecomment-354419816","issue_url":"https://api.github.com/repos/apache/druid/issues/5196","id":354419816,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDQxOTgxNg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-29T09:14:27Z","updated_at":"2017-12-29T09:14:27Z","author_association":"MEMBER","body":"This issue belongs to this repo: https://github.com/alibaba/druid, please create one there.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354419816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354446694","html_url":"https://github.com/apache/druid/issues/5159#issuecomment-354446694","issue_url":"https://api.github.com/repos/apache/druid/issues/5159","id":354446694,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDQ0NjY5NA==","user":{"login":"yuppie-flu","id":6185911,"node_id":"MDQ6VXNlcjYxODU5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6185911?v=4","gravatar_id":"","url":"https://api.github.com/users/yuppie-flu","html_url":"https://github.com/yuppie-flu","followers_url":"https://api.github.com/users/yuppie-flu/followers","following_url":"https://api.github.com/users/yuppie-flu/following{/other_user}","gists_url":"https://api.github.com/users/yuppie-flu/gists{/gist_id}","starred_url":"https://api.github.com/users/yuppie-flu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yuppie-flu/subscriptions","organizations_url":"https://api.github.com/users/yuppie-flu/orgs","repos_url":"https://api.github.com/users/yuppie-flu/repos","events_url":"https://api.github.com/users/yuppie-flu/events{/privacy}","received_events_url":"https://api.github.com/users/yuppie-flu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-29T13:35:45Z","updated_at":"2017-12-29T13:40:24Z","author_association":"CONTRIBUTOR","body":"After deeper investigation I found that current Kafka integration tests setup (`ITKafkaTest` and `ITKafkaIndexingServiceTest`) does not allow to use plain docker without `docker-machine` or separate remote host for running docker containers with druid cluster under tests. It's because these tests assume that druid services inside docker containers and the test Kafka producer can access Kafka broker node via ip of docker-machine's vm.\r\nSee `integration-tests/docker/Dockerfile`:\r\n```\r\n# unless advertised.host.name is set to docker host ip, publishing data fails\r\n# run this last to avoid rebuilding the image every time the ip changes\r\nADD docker_ip docker_ip\r\nRUN perl -pi -e \"s/#advertised.listeners=.*/advertised.listeners=PLAINTEXT:\\/\\/$(cat docker_ip):9092/\" /usr/local/kafka/config/server.properties\r\n```\r\nIn case of plain docker it does not work. You should use something like `$(resolveip -s $HOSTNAME)` instead.\r\n\r\nOn the other side, `docker-machine` also does not work for me due to this bug:\r\nhttps://github.com/docker/machine/issues/4349","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354446694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354662438","html_url":"https://github.com/apache/druid/issues/5200#issuecomment-354662438","issue_url":"https://api.github.com/repos/apache/druid/issues/5200","id":354662438,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDY2MjQzOA==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-01T16:33:53Z","updated_at":"2018-01-01T16:33:53Z","author_association":"MEMBER","body":"As per link - http://joda-time.sourceforge.net/faq.html#illegalinstant\r\nThe error \"Illegal instant due to time zone offset transition\" refers to the gap in time caused due to DST. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354662438/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354664115","html_url":"https://github.com/apache/druid/issues/5200#issuecomment-354664115","issue_url":"https://api.github.com/repos/apache/druid/issues/5200","id":354664115,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDY2NDExNQ==","user":{"login":"erankor","id":4777488,"node_id":"MDQ6VXNlcjQ3Nzc0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/4777488?v=4","gravatar_id":"","url":"https://api.github.com/users/erankor","html_url":"https://github.com/erankor","followers_url":"https://api.github.com/users/erankor/followers","following_url":"https://api.github.com/users/erankor/following{/other_user}","gists_url":"https://api.github.com/users/erankor/gists{/gist_id}","starred_url":"https://api.github.com/users/erankor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erankor/subscriptions","organizations_url":"https://api.github.com/users/erankor/orgs","repos_url":"https://api.github.com/users/erankor/repos","events_url":"https://api.github.com/users/erankor/events{/privacy}","received_events_url":"https://api.github.com/users/erankor/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-01T17:08:02Z","updated_at":"2018-01-01T17:08:02Z","author_association":"NONE","body":"Thanks @nishantmonu51, I figured that part... however, since the timezone in the exception (2017-10-15T00:00:00.000) is not a timestamp I send, I can't really solve it on my side... it's contained within the interval I send (2017-10-10T00:00:00-03:00/2017-11-09T23:59:59-03:00) but it's not one of them.\r\nI believe it's a bug in the Druid code that breaks the query into sub-queries for sending to the historical nodes.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354664115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354669917","html_url":"https://github.com/apache/druid/pull/5201#issuecomment-354669917","issue_url":"https://api.github.com/repos/apache/druid/issues/5201","id":354669917,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDY2OTkxNw==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-01T19:04:01Z","updated_at":"2018-01-01T19:04:01Z","author_association":"MEMBER","body":"Just noticed this breaks ParametrizedUriEmitterConfig. \r\nClosing for now. will reopen with proper fix. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354669917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354682499","html_url":"https://github.com/apache/druid/issues/5159#issuecomment-354682499","issue_url":"https://api.github.com/repos/apache/druid/issues/5159","id":354682499,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDY4MjQ5OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-01T22:48:09Z","updated_at":"2018-01-01T22:48:09Z","author_association":"CONTRIBUTOR","body":"@yuppie-flu thank you for the investigation! Would you please submit a patch to fix this issue?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354682499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354703053","html_url":"https://github.com/apache/druid/issues/5202#issuecomment-354703053","issue_url":"https://api.github.com/repos/apache/druid/issues/5202","id":354703053,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDcwMzA1Mw==","user":{"login":"ighack","id":6670377,"node_id":"MDQ6VXNlcjY2NzAzNzc=","avatar_url":"https://avatars.githubusercontent.com/u/6670377?v=4","gravatar_id":"","url":"https://api.github.com/users/ighack","html_url":"https://github.com/ighack","followers_url":"https://api.github.com/users/ighack/followers","following_url":"https://api.github.com/users/ighack/following{/other_user}","gists_url":"https://api.github.com/users/ighack/gists{/gist_id}","starred_url":"https://api.github.com/users/ighack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ighack/subscriptions","organizations_url":"https://api.github.com/users/ighack/orgs","repos_url":"https://api.github.com/users/ighack/repos","events_url":"https://api.github.com/users/ighack/events{/privacy}","received_events_url":"https://api.github.com/users/ighack/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-02T04:48:46Z","updated_at":"2018-01-02T04:48:46Z","author_association":"NONE","body":"you need restart druid","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354703053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354714260","html_url":"https://github.com/apache/druid/issues/5203#issuecomment-354714260","issue_url":"https://api.github.com/repos/apache/druid/issues/5203","id":354714260,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDcxNDI2MA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-02T07:33:20Z","updated_at":"2018-01-02T07:33:20Z","author_association":"CONTRIBUTOR","body":"Hi @ericgogh, the log is saying that the record size is about 1 MB (1048744). The record size is computed based on the metrics specified in your query. Would you post your query if possible?\r\n\r\nBTW, ```IntGrouper``` isn't supposed to be used if ```aggregation key cardinality * record size``` exceeds the buffer capacity. Maybe this is a bug. Would you try hash aggregation by setting ```forceHashAggregation``` to ```true``` in the queryContext?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354714260/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354738956","html_url":"https://github.com/apache/druid/issues/5159#issuecomment-354738956","issue_url":"https://api.github.com/repos/apache/druid/issues/5159","id":354738956,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDczODk1Ng==","user":{"login":"yuppie-flu","id":6185911,"node_id":"MDQ6VXNlcjYxODU5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6185911?v=4","gravatar_id":"","url":"https://api.github.com/users/yuppie-flu","html_url":"https://github.com/yuppie-flu","followers_url":"https://api.github.com/users/yuppie-flu/followers","following_url":"https://api.github.com/users/yuppie-flu/following{/other_user}","gists_url":"https://api.github.com/users/yuppie-flu/gists{/gist_id}","starred_url":"https://api.github.com/users/yuppie-flu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yuppie-flu/subscriptions","organizations_url":"https://api.github.com/users/yuppie-flu/orgs","repos_url":"https://api.github.com/users/yuppie-flu/repos","events_url":"https://api.github.com/users/yuppie-flu/events{/privacy}","received_events_url":"https://api.github.com/users/yuppie-flu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-02T10:35:47Z","updated_at":"2018-01-02T10:35:47Z","author_association":"CONTRIBUTOR","body":"@jihoonson I'm working on it, but it will take some time...","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354738956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354753006","html_url":"https://github.com/apache/druid/issues/5159#issuecomment-354753006","issue_url":"https://api.github.com/repos/apache/druid/issues/5159","id":354753006,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDc1MzAwNg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-02T12:03:01Z","updated_at":"2018-01-02T12:03:01Z","author_association":"CONTRIBUTOR","body":"@yuppie-flu great! Please take your time.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354753006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354891525","html_url":"https://github.com/apache/druid/pull/5204#issuecomment-354891525","issue_url":"https://api.github.com/repos/apache/druid/issues/5204","id":354891525,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDg5MTUyNQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-02T22:24:53Z","updated_at":"2018-01-02T22:24:53Z","author_association":"CONTRIBUTOR","body":":+1:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354891525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354927022","html_url":"https://github.com/apache/druid/issues/5203#issuecomment-354927022","issue_url":"https://api.github.com/repos/apache/druid/issues/5203","id":354927022,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDkyNzAyMg==","user":{"login":"ericgogh","id":1916873,"node_id":"MDQ6VXNlcjE5MTY4NzM=","avatar_url":"https://avatars.githubusercontent.com/u/1916873?v=4","gravatar_id":"","url":"https://api.github.com/users/ericgogh","html_url":"https://github.com/ericgogh","followers_url":"https://api.github.com/users/ericgogh/followers","following_url":"https://api.github.com/users/ericgogh/following{/other_user}","gists_url":"https://api.github.com/users/ericgogh/gists{/gist_id}","starred_url":"https://api.github.com/users/ericgogh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ericgogh/subscriptions","organizations_url":"https://api.github.com/users/ericgogh/orgs","repos_url":"https://api.github.com/users/ericgogh/repos","events_url":"https://api.github.com/users/ericgogh/events{/privacy}","received_events_url":"https://api.github.com/users/ericgogh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T02:42:17Z","updated_at":"2018-01-03T02:43:13Z","author_association":"NONE","body":"@jihoonson hi, I try forceHashAggregation but not work.\r\nhere is my query json\r\n```\r\n{\r\n    \"aggregations\": [\r\n        {\r\n            \"fieldName\": \"pv\",\r\n            \"name\": \"pv\",\r\n            \"type\": \"longSum\"\r\n        },\r\n        {\r\n            \"fieldName\": \"uv\",\r\n            \"name\": \"uv\",\r\n            \"type\": \"thetaSketch\"\r\n        },\r\n        {\r\n            \"fieldName\": \"click_wpa_count\",\r\n            \"name\": \"click_wpa_count\",\r\n            \"type\": \"longSum\"\r\n        },\r\n        {\r\n            \"fieldName\": \"click_wpa_user_count\",\r\n            \"name\": \"click_wpa_user_count\",\r\n            \"type\": \"thetaSketch\"\r\n        },\r\n        {\r\n            \"fieldName\": \"valid_recep_user_count\",\r\n            \"name\": \"recep_user_count\",\r\n            \"type\": \"thetaSketch\"\r\n        },\r\n        {\r\n            \"fieldName\": \"valid_conv_user_count\",\r\n            \"name\": \"real_valid_recep_user_count\",\r\n            \"type\": \"thetaSketch\"\r\n        },\r\n        {\r\n            \"fieldName\": \"page_viewtime\",\r\n            \"name\": \"page_viewtime\",\r\n            \"type\": \"longSum\"\r\n        },\r\n        {\r\n            \"fieldName\": \"exit_url_count\",\r\n            \"name\": \"exit_url_count\",\r\n            \"type\": \"longSum\"\r\n        },\r\n        {\r\n            \"aggregator\": {\r\n                \"fieldName\": \"pv\",\r\n                \"name\": \"new_user_pv\",\r\n                \"type\": \"longSum\"\r\n            },\r\n            \"filter\": {\r\n                \"dimension\": \"is_new\",\r\n                \"type\": \"selector\",\r\n                \"value\": \"1\"\r\n            },\r\n            \"type\": \"filtered\"\r\n        }\r\n    ],\r\n    \"dataSource\": \"recep_stat_re_v2\",\r\n    \"dimensions\": [\r\n        \"url_title\"\r\n    ],\r\n    \"filter\": {\r\n        \"fields\": [\r\n            {\r\n                \"dimension\": \"id\",\r\n                \"type\": \"selector\",\r\n                \"value\": 2852058704\r\n            }\r\n        ],\r\n        \"type\": \"and\"\r\n    },\r\n    \"granularity\": \"all\",\r\n    \"having\": {\r\n        \"aggregation\": \"pv\",\r\n        \"type\": \"greaterThan\",\r\n        \"value\": 0\r\n    },\r\n    \"intervals\": [\r\n        \"2017-12-21T00:00:00+08:00/2017-12-27T23:59:59+08:00\"\r\n    ],\r\n    \"limitSpec\": {\r\n        \"columns\": [\r\n            {\r\n                \"dimension\": \"pv\",\r\n                \"direction\": \"descending\"\r\n            }\r\n        ],\r\n        \"limit\": 1000,\r\n        \"type\": \"default\"\r\n    },\r\n    \"postAggregations\": [\r\n        {\r\n            \"fields\": [\r\n                {\r\n                    \"field\": {\r\n                        \"fieldName\": \"click_wpa_user_count\",\r\n                        \"type\": \"fieldAccess\"\r\n                    },\r\n                    \"name\": \"click_wpa_user_count\",\r\n                    \"type\": \"thetaSketchEstimate\"\r\n                },\r\n                {\r\n                    \"field\": {\r\n                        \"fieldName\": \"uv\",\r\n                        \"type\": \"fieldAccess\"\r\n                    },\r\n                    \"name\": \"uv\",\r\n                    \"type\": \"thetaSketchEstimate\"\r\n                }\r\n            ],\r\n            \"fn\": \"/\",\r\n            \"name\": \"click_rate\",\r\n            \"type\": \"arithmetic\"\r\n        },\r\n        {\r\n            \"fields\": [\r\n                {\r\n                    \"field\": {\r\n                        \"fieldName\": \"recep_user_count\",\r\n                        \"type\": \"fieldAccess\"\r\n                    },\r\n                    \"name\": \"recep_user_count\",\r\n                    \"type\": \"thetaSketchEstimate\"\r\n                },\r\n                {\r\n                    \"field\": {\r\n                        \"fieldName\": \"click_wpa_user_count\",\r\n                        \"type\": \"fieldAccess\"\r\n                    },\r\n                    \"name\": \"click_wpa_user_count\",\r\n                    \"type\": \"thetaSketchEstimate\"\r\n                }\r\n            ],\r\n            \"fn\": \"/\",\r\n            \"name\": \"recep_rate\",\r\n            \"type\": \"arithmetic\"\r\n        },\r\n        {\r\n            \"fields\": [\r\n                {\r\n                    \"fieldName\": \"page_viewtime\",\r\n                    \"name\": \"page_viewtime\",\r\n                    \"type\": \"fieldAccess\"\r\n                },\r\n                {\r\n                    \"fieldName\": \"pv\",\r\n                    \"name\": \"pv\",\r\n                    \"type\": \"fieldAccess\"\r\n                }\r\n            ],\r\n            \"fn\": \"/\",\r\n            \"name\": \"avg_cost_time\",\r\n            \"type\": \"arithmetic\"\r\n        },\r\n        {\r\n            \"fields\": [\r\n                {\r\n                    \"fieldName\": \"exit_url_count\",\r\n                    \"name\": \"exit_url_count\",\r\n                    \"type\": \"fieldAccess\"\r\n                },\r\n                {\r\n                    \"fieldName\": \"pv\",\r\n                    \"name\": \"pv\",\r\n                    \"type\": \"fieldAccess\"\r\n                }\r\n            ],\r\n            \"fn\": \"/\",\r\n            \"name\": \"lost_rate\",\r\n            \"type\": \"arithmetic\"\r\n        },\r\n        {\r\n            \"fields\": [\r\n                {\r\n                    \"fieldName\": \"new_user_pv\",\r\n                    \"name\": \"new_user_pv\",\r\n                    \"type\": \"fieldAccess\"\r\n                },\r\n                {\r\n                    \"fieldName\": \"pv\",\r\n                    \"name\": \"pv\",\r\n                    \"type\": \"fieldAccess\"\r\n                }\r\n            ],\r\n            \"fn\": \"/\",\r\n            \"name\": \"new_user_rate\",\r\n            \"type\": \"arithmetic\"\r\n        }\r\n    ],\r\n    \"queryType\": \"groupBy\",\r\n    \"context\" : {\"groupByStrategy\": \"v2\", \"forceHashAggregation\" : \"true\"}\r\n}\r\n```\r\n  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354927022/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354929646","html_url":"https://github.com/apache/druid/issues/5198#issuecomment-354929646","issue_url":"https://api.github.com/repos/apache/druid/issues/5198","id":354929646,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDkyOTY0Ng==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T03:12:28Z","updated_at":"2018-01-03T03:12:28Z","author_association":"CONTRIBUTOR","body":"I did a bit of investigation, all of the configuration properties are null when trying to instantiate KafkaEmitterConfig. I haven't figured out a resolution, but I believe the problem is related to the following:\r\n\r\n- KafkaEmitterConfig's property names have the form \"a.b\"\r\n- #4722 changed how such properties are handled in JsonConfigurator, such that \"bootstrap.servers\" would be interpreted as `{\"druid.kafka.emitter\": {\"bootstrap\": {\"servers\":<propertyValue>}}}` instead of `{\"druid.kafka.emitter\": {\"bootstrap.servers\": <propertyValue>}}`","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354929646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354929962","html_url":"https://github.com/apache/druid/issues/5198#issuecomment-354929962","issue_url":"https://api.github.com/repos/apache/druid/issues/5198","id":354929962,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDkyOTk2Mg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T03:16:00Z","updated_at":"2018-01-03T03:16:00Z","author_association":"CONTRIBUTOR","body":"Just saw that a PR was opened for this but closed since it broke other things: https://github.com/druid-io/druid/pull/5201","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354929962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354934857","html_url":"https://github.com/apache/druid/issues/5198#issuecomment-354934857","issue_url":"https://api.github.com/repos/apache/druid/issues/5198","id":354934857,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDkzNDg1Nw==","user":{"login":"quenlang","id":11764573,"node_id":"MDQ6VXNlcjExNzY0NTcz","avatar_url":"https://avatars.githubusercontent.com/u/11764573?v=4","gravatar_id":"","url":"https://api.github.com/users/quenlang","html_url":"https://github.com/quenlang","followers_url":"https://api.github.com/users/quenlang/followers","following_url":"https://api.github.com/users/quenlang/following{/other_user}","gists_url":"https://api.github.com/users/quenlang/gists{/gist_id}","starred_url":"https://api.github.com/users/quenlang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quenlang/subscriptions","organizations_url":"https://api.github.com/users/quenlang/orgs","repos_url":"https://api.github.com/users/quenlang/repos","events_url":"https://api.github.com/users/quenlang/events{/privacy}","received_events_url":"https://api.github.com/users/quenlang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T04:18:35Z","updated_at":"2018-01-03T04:18:35Z","author_association":"NONE","body":"@jon-wei Does it will merge into Druid 0.12.0 ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354934857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354935180","html_url":"https://github.com/apache/druid/pull/5201#issuecomment-354935180","issue_url":"https://api.github.com/repos/apache/druid/issues/5201","id":354935180,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDkzNTE4MA==","user":{"login":"quenlang","id":11764573,"node_id":"MDQ6VXNlcjExNzY0NTcz","avatar_url":"https://avatars.githubusercontent.com/u/11764573?v=4","gravatar_id":"","url":"https://api.github.com/users/quenlang","html_url":"https://github.com/quenlang","followers_url":"https://api.github.com/users/quenlang/followers","following_url":"https://api.github.com/users/quenlang/following{/other_user}","gists_url":"https://api.github.com/users/quenlang/gists{/gist_id}","starred_url":"https://api.github.com/users/quenlang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quenlang/subscriptions","organizations_url":"https://api.github.com/users/quenlang/orgs","repos_url":"https://api.github.com/users/quenlang/repos","events_url":"https://api.github.com/users/quenlang/events{/privacy}","received_events_url":"https://api.github.com/users/quenlang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T04:22:48Z","updated_at":"2018-01-03T04:22:48Z","author_association":"NONE","body":"@nishantmonu51 Does it will merge into Druid 0.12.0？","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354935180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354940699","html_url":"https://github.com/apache/druid/issues/5203#issuecomment-354940699","issue_url":"https://api.github.com/repos/apache/druid/issues/5203","id":354940699,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDk0MDY5OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T05:40:04Z","updated_at":"2018-01-03T05:40:04Z","author_association":"CONTRIBUTOR","body":"@ericgogh which error did you get when forceHashAggregation is set? Would you post the stack trace for that error?\r\nYour query looks fine. If you have more memory, you can try increasing the buffer size (```druid.processing.buffer.sizeBytes```). 512 MB of buffer looks quite small to aggregate 1 MB records.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354940699/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354946652","html_url":"https://github.com/apache/druid/issues/5205#issuecomment-354946652","issue_url":"https://api.github.com/repos/apache/druid/issues/5205","id":354946652,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDk0NjY1Mg==","user":{"login":"leanken-zz","id":17242071,"node_id":"MDQ6VXNlcjE3MjQyMDcx","avatar_url":"https://avatars.githubusercontent.com/u/17242071?v=4","gravatar_id":"","url":"https://api.github.com/users/leanken-zz","html_url":"https://github.com/leanken-zz","followers_url":"https://api.github.com/users/leanken-zz/followers","following_url":"https://api.github.com/users/leanken-zz/following{/other_user}","gists_url":"https://api.github.com/users/leanken-zz/gists{/gist_id}","starred_url":"https://api.github.com/users/leanken-zz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leanken-zz/subscriptions","organizations_url":"https://api.github.com/users/leanken-zz/orgs","repos_url":"https://api.github.com/users/leanken-zz/repos","events_url":"https://api.github.com/users/leanken-zz/events{/privacy}","received_events_url":"https://api.github.com/users/leanken-zz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T06:50:36Z","updated_at":"2018-01-03T06:50:36Z","author_association":"NONE","body":"if agreed, i can do a pull request to fix it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354946652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354986389","html_url":"https://github.com/apache/druid/issues/5198#issuecomment-354986389","issue_url":"https://api.github.com/repos/apache/druid/issues/5198","id":354986389,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDk4NjM4OQ==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T11:03:24Z","updated_at":"2018-01-03T15:50:15Z","author_association":"MEMBER","body":"@jon-wei have fixed the failing test and reopened the PR. please review. \r\n  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354986389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/354986515","html_url":"https://github.com/apache/druid/issues/5198#issuecomment-354986515","issue_url":"https://api.github.com/repos/apache/druid/issues/5198","id":354986515,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDk4NjUxNQ==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T11:04:03Z","updated_at":"2018-01-03T11:04:03Z","author_association":"MEMBER","body":"@quenlang moved to milestone 0.12.0 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/354986515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355045457","html_url":"https://github.com/apache/druid/pull/5201#issuecomment-355045457","issue_url":"https://api.github.com/repos/apache/druid/issues/5201","id":355045457,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTA0NTQ1Nw==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T15:48:43Z","updated_at":"2018-01-03T15:48:43Z","author_association":"MEMBER","body":"fixed test failures. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355045457/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355055713","html_url":"https://github.com/apache/druid/pull/5204#issuecomment-355055713","issue_url":"https://api.github.com/repos/apache/druid/issues/5204","id":355055713,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTA1NTcxMw==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T16:25:34Z","updated_at":"2018-01-03T16:25:34Z","author_association":"CONTRIBUTOR","body":"Is there a test for this?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355055713/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355057569","html_url":"https://github.com/apache/druid/pull/5157#issuecomment-355057569","issue_url":"https://api.github.com/repos/apache/druid/issues/5157","id":355057569,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTA1NzU2OQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T16:32:00Z","updated_at":"2018-01-03T16:32:00Z","author_association":"CONTRIBUTOR","body":"All queries are time bucketed.\r\n\r\n`descending` is already a property in `BaseQuery`\r\n\r\nWould it make sense for `BaseQuery` to be modified to accept granularity as a constructor, instead of making another class layer that every query will want to use anyways?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355057569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355057711","html_url":"https://github.com/apache/druid/pull/5122#issuecomment-355057711","issue_url":"https://api.github.com/repos/apache/druid/issues/5122","id":355057711,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTA1NzcxMQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T16:32:31Z","updated_at":"2018-01-03T16:32:31Z","author_association":"CONTRIBUTOR","body":"@a2l007 can this be finished up?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355057711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355099795","html_url":"https://github.com/apache/druid/pull/5122#issuecomment-355099795","issue_url":"https://api.github.com/repos/apache/druid/issues/5122","id":355099795,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTA5OTc5NQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T19:13:27Z","updated_at":"2018-01-03T19:13:27Z","author_association":"CONTRIBUTOR","body":"@drcrallen : @a2l007 is on vacation this week. this will be wrapped up next week. thanks for reviewing.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355099795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355113511","html_url":"https://github.com/apache/druid/pull/5201#issuecomment-355113511","issue_url":"https://api.github.com/repos/apache/druid/issues/5201","id":355113511,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTExMzUxMQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T20:08:56Z","updated_at":"2018-01-03T20:08:56Z","author_association":"CONTRIBUTOR","body":"@nishantmonu51 cool, can you backport this?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355113511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355135119","html_url":"https://github.com/apache/druid/pull/5204#issuecomment-355135119","issue_url":"https://api.github.com/repos/apache/druid/issues/5204","id":355135119,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTEzNTExOQ==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T21:40:25Z","updated_at":"2018-01-03T21:40:25Z","author_association":"MEMBER","body":"@drcrallen adding test looks tricky. I can try if you really want.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355135119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355138649","html_url":"https://github.com/apache/druid/issues/4635#issuecomment-355138649","issue_url":"https://api.github.com/repos/apache/druid/issues/4635","id":355138649,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTEzODY0OQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T21:55:34Z","updated_at":"2018-01-03T21:55:34Z","author_association":"CONTRIBUTOR","body":"@gianm I tried upgrading to Calcite 1.15.0, `testFilteredAggregationWithNotIn()` in CalciteQueryTest now passes, but there's a regression where the query in `testCountStarWithTimeFilterOnLongColumnUsingExtractEpoch()` is now unplannable:\r\n\r\n```\r\norg.apache.calcite.plan.RelOptPlanner$CannotPlanException: Node [rel#5260:Subset#3.DRUID.[]] could not be implemented; planner state:\r\n\r\nRoot: rel#5260:Subset#3.DRUID.[]\r\nOriginal rel:\r\nLogicalAggregate(subset=[rel#5260:Subset#3.DRUID.[]], group=[{}], EXPR$0=[COUNT()]): rowcount = 2.5, cumulative cost = {2.8125 rows, 0.0 cpu, 0.0 io}, id = 5258\r\n  LogicalFilter(subset=[rel#5257:Subset#2.NONE.[]], condition=[AND(>=($0, *(EXTRACT(FLAG(EPOCH), 1970-01-01 00:00:00), 1000)), <($0, *(EXTRACT(FLAG(EPOCH), 1970-01-02 00:00:00), 1000)))]): rowcount = 25.0, cumulative cost = {25.0 rows, 100.0 cpu, 0.0 io}, id = 5256\r\n    LogicalProject(subset=[rel#5255:Subset#1.NONE.[]], cnt=[$1]): rowcount = 100.0, cumulative cost = {100.0 rows, 100.0 cpu, 0.0 io}, id = 5254\r\n      LogicalTableScan(subset=[rel#5253:Subset#0.NONE.[]], table=[[druid, foo]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 5239\r\n\r\nSets:\r\nSet#0, type: RecordType(TIMESTAMP(0) __time, BIGINT cnt, VARCHAR dim1, VARCHAR dim2, FLOAT m1, DOUBLE m2, OTHER unique_dim1)\r\n\trel#5253:Subset#0.NONE.[], best=null, importance=0.6561\r\n\t\trel#5239:LogicalTableScan.NONE.[](table=[druid, foo]), rowcount=100.0, cumulative cost={inf}\r\n\t\trel#5271:DruidQueryRel.NONE.[](query={\"queryType\":\"scan\",\"dataSource\":{\"type\":\"table\",\"name\":\"foo\"},\"intervals\":{\"type\":\"intervals\",\"intervals\":[\"-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z\"]},\"virtualColumns\":[],\"resultFormat\":\"compactedList\",\"batchSize\":20480,\"limit\":9223372036854775807,\"filter\":null,\"columns\":[\"__time\",\"cnt\",\"dim1\",\"dim2\",\"m1\",\"m2\",\"unique_dim1\"],\"legacy\":false,\"context\":{\"defaultTimeout\":300000,\"maxScatterGatherBytes\":9223372036854775807,\"sqlCurrentTimestamp\":\"2000-01-01T00:00:00Z\"},\"descending\":false},signature={__time:LONG, cnt:LONG, dim1:STRING, dim2:STRING, m1:FLOAT, m2:DOUBLE, unique_dim1:COMPLEX}), rowcount=1.0, cumulative cost={inf}\r\n\trel#5274:Subset#0.DRUID.[], best=rel#5273, importance=0.32805\r\n\t\trel#5273:DruidQueryRel.DRUID.[](query={\"queryType\":\"scan\",\"dataSource\":{\"type\":\"table\",\"name\":\"foo\"},\"intervals\":{\"type\":\"intervals\",\"intervals\":[\"-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z\"]},\"virtualColumns\":[],\"resultFormat\":\"compactedList\",\"batchSize\":20480,\"limit\":9223372036854775807,\"filter\":null,\"columns\":[\"__time\",\"cnt\",\"dim1\",\"dim2\",\"m1\",\"m2\",\"unique_dim1\"],\"legacy\":false,\"context\":{\"defaultTimeout\":300000,\"maxScatterGatherBytes\":9223372036854775807,\"sqlCurrentTimestamp\":\"2000-01-01T00:00:00Z\"},\"descending\":false},signature={__time:LONG, cnt:LONG, dim1:STRING, dim2:STRING, m1:FLOAT, m2:DOUBLE, unique_dim1:COMPLEX}), rowcount=1.0, cumulative cost={1.0 rows, 0.0 cpu, 0.0 io}\r\nSet#1, type: RecordType(BIGINT cnt)\r\n\trel#5255:Subset#1.NONE.[], best=null, importance=0.7290000000000001\r\n\t\trel#5254:LogicalProject.NONE.[](input=rel#5253:Subset#0.NONE.[],cnt=$1), rowcount=100.0, cumulative cost={inf}\r\n\t\trel#5275:DruidQueryRel.NONE.[](query={\"queryType\":\"scan\",\"dataSource\":{\"type\":\"table\",\"name\":\"foo\"},\"intervals\":{\"type\":\"intervals\",\"intervals\":[\"-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z\"]},\"virtualColumns\":[],\"resultFormat\":\"compactedList\",\"batchSize\":20480,\"limit\":9223372036854775807,\"filter\":null,\"columns\":[\"cnt\"],\"legacy\":false,\"context\":{\"defaultTimeout\":300000,\"maxScatterGatherBytes\":9223372036854775807,\"sqlCurrentTimestamp\":\"2000-01-01T00:00:00Z\"},\"descending\":false},signature={cnt:LONG}), rowcount=1.0, cumulative cost={inf}\r\n\trel#5277:Subset#1.DRUID.[], best=rel#5276, importance=0.36450000000000005\r\n\t\trel#5276:DruidQueryRel.DRUID.[](query={\"queryType\":\"scan\",\"dataSource\":{\"type\":\"table\",\"name\":\"foo\"},\"intervals\":{\"type\":\"intervals\",\"intervals\":[\"-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z\"]},\"virtualColumns\":[],\"resultFormat\":\"compactedList\",\"batchSize\":20480,\"limit\":9223372036854775807,\"filter\":null,\"columns\":[\"cnt\"],\"legacy\":false,\"context\":{\"defaultTimeout\":300000,\"maxScatterGatherBytes\":9223372036854775807,\"sqlCurrentTimestamp\":\"2000-01-01T00:00:00Z\"},\"descending\":false},signature={cnt:LONG}), rowcount=1.0, cumulative cost={1.001 rows, 0.0 cpu, 0.0 io}\r\nSet#2, type: RecordType(BIGINT cnt)\r\n\trel#5257:Subset#2.NONE.[], best=null, importance=0.81\r\n\t\trel#5256:LogicalFilter.NONE.[](input=rel#5255:Subset#1.NONE.[],condition=AND(>=($0, *(EXTRACT(FLAG(EPOCH), 1970-01-01 00:00:00), 1000)), <($0, *(EXTRACT(FLAG(EPOCH), 1970-01-02 00:00:00), 1000)))), rowcount=25.0, cumulative cost={inf}\r\n\t\trel#5265:LogicalProject.NONE.[](input=rel#5264:Subset#4.NONE.[],cnt=$1), rowcount=25.0, cumulative cost={inf}\r\nSet#3, type: RecordType(BIGINT EXPR$0)\r\n\trel#5259:Subset#3.NONE.[], best=null, importance=0.9\r\n\t\trel#5258:LogicalAggregate.NONE.[](input=rel#5257:Subset#2.NONE.[],group={},EXPR$0=COUNT()), rowcount=2.5, cumulative cost={inf}\r\n\t\trel#5266:LogicalAggregate.NONE.[](input=rel#5264:Subset#4.NONE.[],group={},EXPR$0=COUNT()), rowcount=2.5, cumulative cost={inf}\r\n\trel#5260:Subset#3.DRUID.[], best=null, importance=1.0\r\n\t\trel#5261:AbstractConverter.DRUID.[](input=rel#5259:Subset#3.NONE.[],convention=DRUID,sort=[]), rowcount=2.5, cumulative cost={inf}\r\nSet#4, type: RecordType(TIMESTAMP(0) __time, BIGINT cnt, VARCHAR dim1, VARCHAR dim2, FLOAT m1, DOUBLE m2, OTHER unique_dim1)\r\n\trel#5264:Subset#4.NONE.[], best=null, importance=0.7290000000000001\r\n\t\trel#5262:LogicalFilter.NONE.[](input=rel#5253:Subset#0.NONE.[],condition=AND(>=($1, *(EXTRACT(FLAG(EPOCH), 1970-01-01 00:00:00), 1000)), <($1, *(EXTRACT(FLAG(EPOCH), 1970-01-02 00:00:00), 1000)))), rowcount=25.0, cumulative cost={inf}\r\n\r\n\r\n\r\n\tat org.apache.calcite.plan.volcano.RelSubset$CheapestPlanReplacer.visit(RelSubset.java:441)\r\n\tat org.apache.calcite.plan.volcano.RelSubset.buildCheapestPlan(RelSubset.java:291)\r\n\tat org.apache.calcite.plan.volcano.VolcanoPlanner.findBestExp(VolcanoPlanner.java:666)\r\n\tat org.apache.calcite.tools.Programs$RuleSetProgram.run(Programs.java:368)\r\n\tat org.apache.calcite.tools.Programs$SequenceProgram.run(Programs.java:387)\r\n\tat org.apache.calcite.prepare.PlannerImpl.transform(PlannerImpl.java:336)\r\n\tat io.druid.sql.calcite.planner.DruidPlanner.planWithDruidConvention(DruidPlanner.java:144)\r\n\tat io.druid.sql.calcite.planner.DruidPlanner.plan(DruidPlanner.java:112)\r\n\tat io.druid.sql.calcite.CalciteQueryTest.getResults(CalciteQueryTest.java:6392)\r\n\tat io.druid.sql.calcite.CalciteQueryTest.testQuery(CalciteQueryTest.java:6350)\r\n\tat io.druid.sql.calcite.CalciteQueryTest.testQuery(CalciteQueryTest.java:6318)\r\n\tat io.druid.sql.calcite.CalciteQueryTest.testCountStarWithTimeFilterOnLongColumnUsingExtractEpoch(CalciteQueryTest.java:3187)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)\r\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n\tat io.druid.sql.calcite.util.QueryLogHook$1.evaluate(QueryLogHook.java:101)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)\r\n\tSuppressed: org.apache.calcite.plan.RelOptPlanner$CannotPlanException: Node [rel#5295:Subset#8.BINDABLE.[]] could not be implemented; planner state:\r\n\r\nRoot: rel#5295:Subset#8.BINDABLE.[]\r\nOriginal rel:\r\nLogicalAggregate(subset=[rel#5295:Subset#8.BINDABLE.[]], group=[{}], EXPR$0=[COUNT()]): rowcount = 2.5, cumulative cost = {2.8125 rows, 0.0 cpu, 0.0 io}, id = 5293\r\n  LogicalFilter(subset=[rel#5292:Subset#7.NONE.[]], condition=[AND(>=($0, *(EXTRACT(FLAG(EPOCH), 1970-01-01 00:00:00), 1000)), <($0, *(EXTRACT(FLAG(EPOCH), 1970-01-02 00:00:00), 1000)))]): rowcount = 25.0, cumulative cost = {25.0 rows, 100.0 cpu, 0.0 io}, id = 5291\r\n    LogicalProject(subset=[rel#5290:Subset#6.NONE.[]], cnt=[$1]): rowcount = 100.0, cumulative cost = {100.0 rows, 100.0 cpu, 0.0 io}, id = 5289\r\n      LogicalTableScan(subset=[rel#5288:Subset#5.NONE.[]], table=[[druid, foo]]): rowcount = 100.0, cumulative cost = {100.0 rows, 101.0 cpu, 0.0 io}, id = 5239\r\n\r\nSets:\r\nSet#5, type: RecordType(TIMESTAMP(0) __time, BIGINT cnt, VARCHAR dim1, VARCHAR dim2, FLOAT m1, DOUBLE m2, OTHER unique_dim1)\r\n\trel#5288:Subset#5.NONE.[], best=null, importance=0.6561\r\n\t\trel#5239:LogicalTableScan.NONE.[](table=[druid, foo]), rowcount=100.0, cumulative cost={inf}\r\n\t\trel#5336:DruidQueryRel.NONE.[](query={\"queryType\":\"scan\",\"dataSource\":{\"type\":\"table\",\"name\":\"foo\"},\"intervals\":{\"type\":\"intervals\",\"intervals\":[\"-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z\"]},\"virtualColumns\":[],\"resultFormat\":\"compactedList\",\"batchSize\":20480,\"limit\":9223372036854775807,\"filter\":null,\"columns\":[\"__time\",\"cnt\",\"dim1\",\"dim2\",\"m1\",\"m2\",\"unique_dim1\"],\"legacy\":false,\"context\":{\"defaultTimeout\":300000,\"maxScatterGatherBytes\":9223372036854775807,\"sqlCurrentTimestamp\":\"2000-01-01T00:00:00Z\"},\"descending\":false},signature={__time:LONG, cnt:LONG, dim1:STRING, dim2:STRING, m1:FLOAT, m2:DOUBLE, unique_dim1:COMPLEX}), rowcount=1.0, cumulative cost={inf}\r\n\trel#5324:Subset#5.BINDABLE.[], best=null, importance=0.7290000000000001\r\n\t\trel#5323:InterpretableConverter.BINDABLE.[](input=rel#5288:Subset#5.NONE.[]), rowcount=100.0, cumulative cost={inf}\r\nSet#6, type: RecordType(BIGINT cnt)\r\n\trel#5290:Subset#6.NONE.[], best=null, importance=0.7290000000000001\r\n\t\trel#5289:LogicalProject.NONE.[](input=rel#5288:Subset#5.NONE.[],cnt=$1), rowcount=100.0, cumulative cost={inf}\r\n\t\trel#5337:DruidQueryRel.NONE.[](query={\"queryType\":\"scan\",\"dataSource\":{\"type\":\"table\",\"name\":\"foo\"},\"intervals\":{\"type\":\"intervals\",\"intervals\":[\"-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z\"]},\"virtualColumns\":[],\"resultFormat\":\"compactedList\",\"batchSize\":20480,\"limit\":9223372036854775807,\"filter\":null,\"columns\":[\"cnt\"],\"legacy\":false,\"context\":{\"defaultTimeout\":300000,\"maxScatterGatherBytes\":9223372036854775807,\"sqlCurrentTimestamp\":\"2000-01-01T00:00:00Z\"},\"descending\":false},signature={cnt:LONG}), rowcount=1.0, cumulative cost={inf}\r\n\trel#5321:Subset#6.BINDABLE.[], best=null, importance=0.81\r\n\t\trel#5320:InterpretableConverter.BINDABLE.[](input=rel#5290:Subset#6.NONE.[]), rowcount=100.0, cumulative cost={inf}\r\n\t\trel#5334:BindableProject.BINDABLE.[](input=rel#5324:Subset#5.BINDABLE.[],cnt=$1), rowcount=100.0, cumulative cost={inf}\r\nSet#7, type: RecordType(BIGINT cnt)\r\n\trel#5292:Subset#7.NONE.[], best=null, importance=0.81\r\n\t\trel#5291:LogicalFilter.NONE.[](input=rel#5290:Subset#6.NONE.[],condition=AND(>=($0, *(EXTRACT(FLAG(EPOCH), 1970-01-01 00:00:00), 1000)), <($0, *(EXTRACT(FLAG(EPOCH), 1970-01-02 00:00:00), 1000)))), rowcount=25.0, cumulative cost={inf}\r\n\t\trel#5305:LogicalProject.NONE.[](input=rel#5304:Subset#9.NONE.[],cnt=$1), rowcount=25.0, cumulative cost={inf}\r\n\trel#5300:Subset#7.BINDABLE.[], best=null, importance=0.9\r\n\t\trel#5315:InterpretableConverter.BINDABLE.[](input=rel#5292:Subset#7.NONE.[]), rowcount=25.0, cumulative cost={inf}\r\n\t\trel#5325:BindableProject.BINDABLE.[](input=rel#5312:Subset#9.BINDABLE.[],cnt=$1), rowcount=25.0, cumulative cost={inf}\r\n\t\trel#5327:BindableFilter.BINDABLE.[[]](input=rel#5321:Subset#6.BINDABLE.[],condition=AND(>=($0, *(EXTRACT(FLAG(EPOCH), 1970-01-01 00:00:00), 1000)), <($0, *(EXTRACT(FLAG(EPOCH), 1970-01-02 00:00:00), 1000)))), rowcount=25.0, cumulative cost={inf}\r\nSet#8, type: RecordType(BIGINT EXPR$0)\r\n\trel#5294:Subset#8.NONE.[], best=null, importance=0.9\r\n\t\trel#5293:LogicalAggregate.NONE.[](input=rel#5292:Subset#7.NONE.[],group={},EXPR$0=COUNT()), rowcount=2.5, cumulative cost={inf}\r\n\t\trel#5309:LogicalAggregate.NONE.[](input=rel#5304:Subset#9.NONE.[],group={},EXPR$0=COUNT()), rowcount=2.5, cumulative cost={inf}\r\n\trel#5295:Subset#8.BINDABLE.[], best=null, importance=1.0\r\n\t\trel#5296:AbstractConverter.BINDABLE.[](input=rel#5294:Subset#8.NONE.[],convention=BINDABLE,sort=[]), rowcount=2.5, cumulative cost={inf}\r\n\t\trel#5297:InterpretableConverter.BINDABLE.[](input=rel#5294:Subset#8.NONE.[]), rowcount=2.5, cumulative cost={inf}\r\n\t\trel#5301:BindableAggregate.BINDABLE.[](input=rel#5300:Subset#7.BINDABLE.[],group={},EXPR$0=COUNT()), rowcount=2.5, cumulative cost={inf}\r\n\t\trel#5313:BindableAggregate.BINDABLE.[](input=rel#5312:Subset#9.BINDABLE.[],group={},EXPR$0=COUNT()), rowcount=2.5, cumulative cost={inf}\r\nSet#9, type: RecordType(TIMESTAMP(0) __time, BIGINT cnt, VARCHAR dim1, VARCHAR dim2, FLOAT m1, DOUBLE m2, OTHER unique_dim1)\r\n\trel#5304:Subset#9.NONE.[], best=null, importance=0.7290000000000001\r\n\t\trel#5302:LogicalFilter.NONE.[](input=rel#5288:Subset#5.NONE.[],condition=AND(>=($1, *(EXTRACT(FLAG(EPOCH), 1970-01-01 00:00:00), 1000)), <($1, *(EXTRACT(FLAG(EPOCH), 1970-01-02 00:00:00), 1000)))), rowcount=25.0, cumulative cost={inf}\r\n\trel#5312:Subset#9.BINDABLE.[], best=null, importance=0.81\r\n\t\trel#5322:InterpretableConverter.BINDABLE.[](input=rel#5304:Subset#9.NONE.[]), rowcount=25.0, cumulative cost={inf}\r\n\t\trel#5335:BindableFilter.BINDABLE.[[]](input=rel#5324:Subset#5.BINDABLE.[],condition=AND(>=($1, *(EXTRACT(FLAG(EPOCH), 1970-01-01 00:00:00), 1000)), <($1, *(EXTRACT(FLAG(EPOCH), 1970-01-02 00:00:00), 1000)))), rowcount=25.0, cumulative cost={inf}\r\n\r\n\r\n\t\tat org.apache.calcite.plan.volcano.RelSubset$CheapestPlanReplacer.visit(RelSubset.java:441)\r\n\t\tat org.apache.calcite.plan.volcano.RelSubset.buildCheapestPlan(RelSubset.java:291)\r\n\t\tat org.apache.calcite.plan.volcano.VolcanoPlanner.findBestExp(VolcanoPlanner.java:666)\r\n\t\tat org.apache.calcite.tools.Programs$RuleSetProgram.run(Programs.java:368)\r\n\t\tat org.apache.calcite.tools.Programs$SequenceProgram.run(Programs.java:387)\r\n\t\tat org.apache.calcite.prepare.PlannerImpl.transform(PlannerImpl.java:336)\r\n\t\tat io.druid.sql.calcite.planner.DruidPlanner.planWithBindableConvention(DruidPlanner.java:265)\r\n\t\tat io.druid.sql.calcite.planner.DruidPlanner.plan(DruidPlanner.java:117)\r\n\t\t... 36 more\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355138649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355139125","html_url":"https://github.com/apache/druid/issues/4635#issuecomment-355139125","issue_url":"https://api.github.com/repos/apache/druid/issues/4635","id":355139125,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTEzOTEyNQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T21:57:38Z","updated_at":"2018-01-03T21:57:38Z","author_association":"CONTRIBUTOR","body":"upgrade patch for druid here: https://github.com/jon-wei/druid/tree/calcite15","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355139125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355148023","html_url":"https://github.com/apache/druid/issues/5198#issuecomment-355148023","issue_url":"https://api.github.com/repos/apache/druid/issues/5198","id":355148023,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTE0ODAyMw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T22:39:26Z","updated_at":"2018-01-03T22:39:26Z","author_association":"CONTRIBUTOR","body":"Fixed by #5201 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355148023/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355150278","html_url":"https://github.com/apache/druid/issues/4945#issuecomment-355150278","issue_url":"https://api.github.com/repos/apache/druid/issues/4945","id":355150278,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTE1MDI3OA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T22:50:57Z","updated_at":"2018-01-03T22:50:57Z","author_association":"CONTRIBUTOR","body":"Just checked this against Calcite 1.15.0, this filter simplifies correctly. (There's a new regression with Calcite 1.15.0 though, see #4635)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355150278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355152893","html_url":"https://github.com/apache/druid/pull/5201#issuecomment-355152893","issue_url":"https://api.github.com/repos/apache/druid/issues/5201","id":355152893,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTE1Mjg5Mw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T23:03:58Z","updated_at":"2018-01-03T23:03:58Z","author_association":"CONTRIBUTOR","body":"@nishantmonu51 I went ahead and made a backport for this","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355152893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355163404","html_url":"https://github.com/apache/druid/pull/5162#issuecomment-355163404","issue_url":"https://api.github.com/repos/apache/druid/issues/5162","id":355163404,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTE2MzQwNA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T00:08:37Z","updated_at":"2018-01-04T00:08:37Z","author_association":"CONTRIBUTOR","body":"Finished testing. This PR is ready for review.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355163404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355167281","html_url":"https://github.com/apache/druid/pull/5102#issuecomment-355167281","issue_url":"https://api.github.com/repos/apache/druid/issues/5102","id":355167281,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTE2NzI4MQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T00:33:26Z","updated_at":"2018-01-04T00:33:26Z","author_association":"CONTRIBUTOR","body":"@jon-wei thanks for the review. @himanshug do you have more comments?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355167281/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355170985","html_url":"https://github.com/apache/druid/pull/5209#issuecomment-355170985","issue_url":"https://api.github.com/repos/apache/druid/issues/5209","id":355170985,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTE3MDk4NQ==","user":{"login":"dclim","id":11050882,"node_id":"MDQ6VXNlcjExMDUwODgy","avatar_url":"https://avatars.githubusercontent.com/u/11050882?v=4","gravatar_id":"","url":"https://api.github.com/users/dclim","html_url":"https://github.com/dclim","followers_url":"https://api.github.com/users/dclim/followers","following_url":"https://api.github.com/users/dclim/following{/other_user}","gists_url":"https://api.github.com/users/dclim/gists{/gist_id}","starred_url":"https://api.github.com/users/dclim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dclim/subscriptions","organizations_url":"https://api.github.com/users/dclim/orgs","repos_url":"https://api.github.com/users/dclim/repos","events_url":"https://api.github.com/users/dclim/events{/privacy}","received_events_url":"https://api.github.com/users/dclim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T00:58:16Z","updated_at":"2018-01-04T00:58:16Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355170985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355180943","html_url":"https://github.com/apache/druid/issues/5203#issuecomment-355180943","issue_url":"https://api.github.com/repos/apache/druid/issues/5203","id":355180943,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTE4MDk0Mw==","user":{"login":"ericgogh","id":1916873,"node_id":"MDQ6VXNlcjE5MTY4NzM=","avatar_url":"https://avatars.githubusercontent.com/u/1916873?v=4","gravatar_id":"","url":"https://api.github.com/users/ericgogh","html_url":"https://github.com/ericgogh","followers_url":"https://api.github.com/users/ericgogh/followers","following_url":"https://api.github.com/users/ericgogh/following{/other_user}","gists_url":"https://api.github.com/users/ericgogh/gists{/gist_id}","starred_url":"https://api.github.com/users/ericgogh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ericgogh/subscriptions","organizations_url":"https://api.github.com/users/ericgogh/orgs","repos_url":"https://api.github.com/users/ericgogh/repos","events_url":"https://api.github.com/users/ericgogh/events{/privacy}","received_events_url":"https://api.github.com/users/ericgogh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T02:09:57Z","updated_at":"2018-01-04T02:09:57Z","author_association":"NONE","body":"I try increasing the buffer size  to 1GB is still not work.\r\nI think the best way is fix the bug.\r\n> IntGrouper isn't supposed to be used if aggregation key cardinality * record size exceeds the buffer capacity.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355180943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355187364","html_url":"https://github.com/apache/druid/pull/5184#issuecomment-355187364","issue_url":"https://api.github.com/repos/apache/druid/issues/5184","id":355187364,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTE4NzM2NA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T02:59:14Z","updated_at":"2018-01-04T02:59:14Z","author_association":"MEMBER","body":"Looks like there are enough approvals and no 👎 , merging","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355187364/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355187463","html_url":"https://github.com/apache/druid/pull/5172#issuecomment-355187463","issue_url":"https://api.github.com/repos/apache/druid/issues/5172","id":355187463,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTE4NzQ2Mw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T03:00:07Z","updated_at":"2018-01-04T03:00:07Z","author_association":"MEMBER","body":"@gianm could you please review this?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355187463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355194975","html_url":"https://github.com/apache/druid/issues/5203#issuecomment-355194975","issue_url":"https://api.github.com/repos/apache/druid/issues/5203","id":355194975,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTE5NDk3NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T04:12:42Z","updated_at":"2018-01-04T04:12:42Z","author_association":"CONTRIBUTOR","body":"Right. If this is a bug, it should be fixed. I'm looking into it and suspecting the cardinality might be wrong, but not sure. It might take some time. I'll let you know when it's ready.\r\n\r\nBTW, the weird thing is you should be able to run by setting ```forceHashAggregation``` to ```true``` or increasing the buffer size.\r\n\r\n> io.druid.java.util.common.ISE: A record of size [1048744] cannot be written to the array buffer at offset[2025319760] because it exceeds the buffer capacity[536808629]. Try increasing druid.processing.buffer.sizeBytes\r\n\r\nThis error message means, Druid is trying to write something at the offset 2025319760. You need to increase the buffer size to at least 2 GB.\r\n\r\nIf possible, please post the stack trace of the error you met when ```forceHashAggregation``` is ```true```. Hash aggregation is supposed to be run for any query. It would be much helpful for us to figure out what the problem was.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355194975/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355195117","html_url":"https://github.com/apache/druid/pull/5176#issuecomment-355195117","issue_url":"https://api.github.com/repos/apache/druid/issues/5176","id":355195117,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTE5NTExNw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T04:14:31Z","updated_at":"2018-01-04T04:14:31Z","author_association":"CONTRIBUTOR","body":"I'm reviewing this.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355195117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355196630","html_url":"https://github.com/apache/druid/pull/5172#issuecomment-355196630","issue_url":"https://api.github.com/repos/apache/druid/issues/5172","id":355196630,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTE5NjYzMA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T04:30:25Z","updated_at":"2018-01-04T04:30:25Z","author_association":"CONTRIBUTOR","body":"I'll also review this PR.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355196630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355198816","html_url":"https://github.com/apache/druid/pull/5172#issuecomment-355198816","issue_url":"https://api.github.com/repos/apache/druid/issues/5172","id":355198816,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTE5ODgxNg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T04:54:08Z","updated_at":"2018-01-04T04:54:08Z","author_association":"MEMBER","body":"@jihoonson thanks","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355198816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355210278","html_url":"https://github.com/apache/druid/issues/5203#issuecomment-355210278","issue_url":"https://api.github.com/repos/apache/druid/issues/5203","id":355210278,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTIxMDI3OA==","user":{"login":"ericgogh","id":1916873,"node_id":"MDQ6VXNlcjE5MTY4NzM=","avatar_url":"https://avatars.githubusercontent.com/u/1916873?v=4","gravatar_id":"","url":"https://api.github.com/users/ericgogh","html_url":"https://github.com/ericgogh","followers_url":"https://api.github.com/users/ericgogh/followers","following_url":"https://api.github.com/users/ericgogh/following{/other_user}","gists_url":"https://api.github.com/users/ericgogh/gists{/gist_id}","starred_url":"https://api.github.com/users/ericgogh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ericgogh/subscriptions","organizations_url":"https://api.github.com/users/ericgogh/orgs","repos_url":"https://api.github.com/users/ericgogh/repos","events_url":"https://api.github.com/users/ericgogh/events{/privacy}","received_events_url":"https://api.github.com/users/ericgogh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T06:44:22Z","updated_at":"2018-01-04T06:44:22Z","author_association":"NONE","body":"I set \r\n> druid.processing.buffer.sizeBytes=2000000000\r\n\r\n1. query json set forceHashAggregation is true\r\nreturn error\r\n```\r\n  \"error\" : \"Unknown exception\",\r\n  \"errorMessage\" : \"A record of size [1048744] cannot be written to the array buffer at offset[2025319760] because it exceeds the buffer capacity[1999937717]. Try increasing druid.processing.buffer.sizeBytes\",\r\n  \"errorClass\" : \"io.druid.java.util.common.ISE\",\r\n```\r\n\r\n2. historical error stack\r\n```\r\n2018-01-04T14:43:13,090 ERROR [processing-4] io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2 - Exception with one of the sequences!\r\nio.druid.java.util.common.ISE: A record of size [1048744] cannot be written to the array buffer at offset[2025319760] because it exceeds the buffer capacity[1999937717]. Try increasing druid.processing.buffer.sizeBytes\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.aggregate(BufferArrayGrouper.java:156) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.IntGrouper.aggregate(IntGrouper.java:33) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:621) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:601) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.initNewDelegate(GroupByQueryEngineV2.java:304) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.hasNext(GroupByQueryEngineV2.java:351) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:88) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.toYielder(BaseSequence.java:68) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.makeYielder(ConcatSequence.java:95) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.toYielder(ConcatSequence.java:75) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.toYielder(LazySequence.java:46) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.MappedSequence.toYielder(MappedSequence.java:49) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.Sequences$3.toYielder(Sequences.java:135) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.accumulate(LazySequence.java:40) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$2.accumulate(SpecificSegmentQueryRunner.java:86) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.doNamed(SpecificSegmentQueryRunner.java:172) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.access$200(SpecificSegmentQueryRunner.java:45) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$3.wrap(SpecificSegmentQueryRunner.java:152) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.CPUTimeMetricQueryRunner$1.wrap(CPUTimeMetricQueryRunner.java:74) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:241) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:232) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_102]\r\n\tat io.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:271) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]\r\n2018-01-04T14:43:13,090 ERROR [processing-3] io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2 - Exception with one of the sequences!\r\njava.lang.IndexOutOfBoundsException\r\n\tat java.nio.Buffer.checkIndex(Buffer.java:546) ~[?:1.8.0_102]\r\n\tat java.nio.DirectByteBuffer.putLong(DirectByteBuffer.java:806) ~[?:1.8.0_102]\r\n\tat io.druid.query.aggregation.LongSumBufferAggregator.init(LongSumBufferAggregator.java:39) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.initializeSlot(BufferArrayGrouper.java:179) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.aggregate(BufferArrayGrouper.java:161) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.IntGrouper.aggregate(IntGrouper.java:33) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:621) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:601) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.initNewDelegate(GroupByQueryEngineV2.java:304) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.hasNext(GroupByQueryEngineV2.java:351) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:88) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.toYielder(BaseSequence.java:68) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.makeYielder(ConcatSequence.java:95) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.toYielder(ConcatSequence.java:75) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.toYielder(LazySequence.java:46) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.MappedSequence.toYielder(MappedSequence.java:49) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.Sequences$3.toYielder(Sequences.java:135) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.accumulate(LazySequence.java:40) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$2.accumulate(SpecificSegmentQueryRunner.java:86) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.doNamed(SpecificSegmentQueryRunner.java:172) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.access$200(SpecificSegmentQueryRunner.java:45) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$3.wrap(SpecificSegmentQueryRunner.java:152) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.CPUTimeMetricQueryRunner$1.wrap(CPUTimeMetricQueryRunner.java:74) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:241) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:232) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_102]\r\n\tat io.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:271) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]\r\n2018-01-04T14:43:13,090 ERROR [processing-1] io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2 - Exception with one of the sequences!\r\njava.lang.IndexOutOfBoundsException\r\n\tat java.nio.Buffer.checkIndex(Buffer.java:546) ~[?:1.8.0_102]\r\n\tat java.nio.DirectByteBuffer.putLong(DirectByteBuffer.java:806) ~[?:1.8.0_102]\r\n\tat io.druid.query.aggregation.LongSumBufferAggregator.init(LongSumBufferAggregator.java:39) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.initializeSlot(BufferArrayGrouper.java:179) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.aggregate(BufferArrayGrouper.java:161) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.IntGrouper.aggregate(IntGrouper.java:33) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:621) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:601) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.initNewDelegate(GroupByQueryEngineV2.java:304) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.hasNext(GroupByQueryEngineV2.java:351) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:88) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.toYielder(BaseSequence.java:68) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.makeYielder(ConcatSequence.java:95) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.toYielder(ConcatSequence.java:75) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.toYielder(LazySequence.java:46) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.MappedSequence.toYielder(MappedSequence.java:49) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.Sequences$3.toYielder(Sequences.java:135) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.accumulate(LazySequence.java:40) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$2.accumulate(SpecificSegmentQueryRunner.java:86) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.doNamed(SpecificSegmentQueryRunner.java:172) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.access$200(SpecificSegmentQueryRunner.java:45) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$3.wrap(SpecificSegmentQueryRunner.java:152) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.CPUTimeMetricQueryRunner$1.wrap(CPUTimeMetricQueryRunner.java:74) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:241) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:232) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_102]\r\n\tat io.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:271) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]\r\n2018-01-04T14:43:13,091 ERROR [processing-3] com.google.common.util.concurrent.Futures$CombinedFuture - input future failed.\r\njava.lang.IndexOutOfBoundsException\r\n\tat java.nio.Buffer.checkIndex(Buffer.java:546) ~[?:1.8.0_102]\r\n\tat java.nio.DirectByteBuffer.putLong(DirectByteBuffer.java:806) ~[?:1.8.0_102]\r\n\tat io.druid.query.aggregation.LongSumBufferAggregator.init(LongSumBufferAggregator.java:39) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.initializeSlot(BufferArrayGrouper.java:179) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.aggregate(BufferArrayGrouper.java:161) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.IntGrouper.aggregate(IntGrouper.java:33) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:621) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:601) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.initNewDelegate(GroupByQueryEngineV2.java:304) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.hasNext(GroupByQueryEngineV2.java:351) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:88) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.toYielder(BaseSequence.java:68) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.makeYielder(ConcatSequence.java:95) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.toYielder(ConcatSequence.java:75) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.toYielder(LazySequence.java:46) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.MappedSequence.toYielder(MappedSequence.java:49) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.Sequences$3.toYielder(Sequences.java:135) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.accumulate(LazySequence.java:40) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$2.accumulate(SpecificSegmentQueryRunner.java:86) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.doNamed(SpecificSegmentQueryRunner.java:172) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.access$200(SpecificSegmentQueryRunner.java:45) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$3.wrap(SpecificSegmentQueryRunner.java:152) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.CPUTimeMetricQueryRunner$1.wrap(CPUTimeMetricQueryRunner.java:74) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:241) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:232) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_102]\r\n\tat io.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:271) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]\r\n2018-01-04T14:43:13,091 ERROR [processing-1] com.google.common.util.concurrent.Futures$CombinedFuture - input future failed.\r\njava.lang.IndexOutOfBoundsException\r\n\tat java.nio.Buffer.checkIndex(Buffer.java:546) ~[?:1.8.0_102]\r\n\tat java.nio.DirectByteBuffer.putLong(DirectByteBuffer.java:806) ~[?:1.8.0_102]\r\n\tat io.druid.query.aggregation.LongSumBufferAggregator.init(LongSumBufferAggregator.java:39) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.initializeSlot(BufferArrayGrouper.java:179) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.aggregate(BufferArrayGrouper.java:161) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.IntGrouper.aggregate(IntGrouper.java:33) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:621) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:601) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.initNewDelegate(GroupByQueryEngineV2.java:304) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.hasNext(GroupByQueryEngineV2.java:351) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:88) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.toYielder(BaseSequence.java:68) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.makeYielder(ConcatSequence.java:95) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.toYielder(ConcatSequence.java:75) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.toYielder(LazySequence.java:46) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.MappedSequence.toYielder(MappedSequence.java:49) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.Sequences$3.toYielder(Sequences.java:135) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.accumulate(LazySequence.java:40) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$2.accumulate(SpecificSegmentQueryRunner.java:86) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.doNamed(SpecificSegmentQueryRunner.java:172) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.access$200(SpecificSegmentQueryRunner.java:45) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$3.wrap(SpecificSegmentQueryRunner.java:152) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.CPUTimeMetricQueryRunner$1.wrap(CPUTimeMetricQueryRunner.java:74) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:241) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:232) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_102]\r\n\tat io.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:271) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]\r\n2018-01-04T14:43:13,091 ERROR [qtp1610593938-110[groupBy_[recep_stat_re_v2]_ce7f0c12-d6b8-4a3f-8155-823569cea296]] io.druid.server.QueryResource - Exception handling request: {class=io.druid.server.QueryResource, exceptionType=class io.druid.java.util.common.ISE, exceptionMessage=A record of size [1048744] cannot be written to the array buffer at offset[2025319760] because it exceeds the buffer capacity[1999937717]. Try increasing druid.processing.buffer.sizeBytes, exception=io.druid.java.util.common.ISE: A record of size [1048744] cannot be written to the array buffer at offset[2025319760] because it exceeds the buffer capacity[1999937717]. Try increasing druid.processing.buffer.sizeBytes, query=GroupByQuery{dataSource='recep_stat_re_v2', querySegmentSpec=LegacySegmentSpec{intervals=[2017-12-20T16:00:00.000Z/2017-12-27T15:59:59.000Z]}, virtualColumns=[], limitSpec=DefaultLimitSpec{columns='[OrderByColumnSpec{dimension='pv', direction='descending', dimensionComparator='lexicographic'}]', limit=1000}, dimFilter=(corpuin = 2852058704), granularity=AllGranularity, dimensions=[DefaultDimensionSpec{dimension='url_title', outputName='url_title', outputType='STRING'}], aggregatorSpecs=[LongSumAggregatorFactory{fieldName='pv', expression='null', name='pv'}, SketchMergeAggregatorFactory{fieldName=uv, name=uv, size=16384, shouldFinalize=true, isInputThetaSketch=false, errorBoundsStdDev=null}, LongSumAggregatorFactory{fieldName='click_wpa_count', expression='null', name='click_wpa_count'}, SketchMergeAggregatorFactory{fieldName=click_wpa_user_count, name=click_wpa_user_count, size=16384, shouldFinalize=true, isInputThetaSketch=false, errorBoundsStdDev=null}, SketchMergeAggregatorFactory{fieldName=valid_recep_user_count, name=recep_user_count, size=16384, shouldFinalize=true, isInputThetaSketch=false, errorBoundsStdDev=null}, SketchMergeAggregatorFactory{fieldName=valid_conv_user_count, name=real_valid_recep_user_count, size=16384, shouldFinalize=true, isInputThetaSketch=false, errorBoundsStdDev=null}, LongSumAggregatorFactory{fieldName='page_viewtime', expression='null', name='page_viewtime'}, LongSumAggregatorFactory{fieldName='exit_url_count', expression='null', name='exit_url_count'}, FilteredAggregatorFactory{delegate=LongSumAggregatorFactory{fieldName='pv', expression='null', name='new_user_pv'}, filter=is_new = 1}], postAggregatorSpecs=[ArithmeticPostAggregator{name='click_rate', fnName='/', fields=[SketchEstimatePostAggregator{name='click_wpa_user_count', field=FieldAccessPostAggregator{name='null', fieldName='click_wpa_user_count'}, errorBoundsStdDev=null}, SketchEstimatePostAggregator{name='uv', field=FieldAccessPostAggregator{name='null', fieldName='uv'}, errorBoundsStdDev=null}], op=DIV}, ArithmeticPostAggregator{name='recep_rate', fnName='/', fields=[SketchEstimatePostAggregator{name='recep_user_count', field=FieldAccessPostAggregator{name='null', fieldName='recep_user_count'}, errorBoundsStdDev=null}, SketchEstimatePostAggregator{name='click_wpa_user_count', field=FieldAccessPostAggregator{name='null', fieldName='click_wpa_user_count'}, errorBoundsStdDev=null}], op=DIV}, ArithmeticPostAggregator{name='avg_cost_time', fnName='/', fields=[FieldAccessPostAggregator{name='page_viewtime', fieldName='page_viewtime'}, FieldAccessPostAggregator{name='pv', fieldName='pv'}], op=DIV}, ArithmeticPostAggregator{name='lost_rate', fnName='/', fields=[FieldAccessPostAggregator{name='exit_url_count', fieldName='exit_url_count'}, FieldAccessPostAggregator{name='pv', fieldName='pv'}], op=DIV}, ArithmeticPostAggregator{name='new_user_rate', fnName='/', fields=[FieldAccessPostAggregator{name='new_user_pv', fieldName='new_user_pv'}, FieldAccessPostAggregator{name='pv', fieldName='pv'}], op=DIV}], havingSpec=GreaterThanHavingSpec{aggregationName='pv', value=0}}, peer=10.241.133.15}\r\nio.druid.java.util.common.ISE: A record of size [1048744] cannot be written to the array buffer at offset[2025319760] because it exceeds the buffer capacity[1999937717]. Try increasing druid.processing.buffer.sizeBytes\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.aggregate(BufferArrayGrouper.java:156) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.IntGrouper.aggregate(IntGrouper.java:33) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:621) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:601) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.initNewDelegate(GroupByQueryEngineV2.java:304) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.hasNext(GroupByQueryEngineV2.java:351) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:88) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.toYielder(BaseSequence.java:68) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.makeYielder(ConcatSequence.java:95) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.toYielder(ConcatSequence.java:75) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.toYielder(LazySequence.java:46) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.MappedSequence.toYielder(MappedSequence.java:49) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.Sequences$3.toYielder(Sequences.java:135) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.accumulate(LazySequence.java:40) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$2.accumulate(SpecificSegmentQueryRunner.java:86) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.doNamed(SpecificSegmentQueryRunner.java:172) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.access$200(SpecificSegmentQueryRunner.java:45) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$3.wrap(SpecificSegmentQueryRunner.java:152) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.CPUTimeMetricQueryRunner$1.wrap(CPUTimeMetricQueryRunner.java:74) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:241) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:232) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_102]\r\n\tat io.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:271) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]\r\n2018-01-04T14:43:13,090 ERROR [processing-3] io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2 - Exception with one of the sequences!\r\njava.lang.IndexOutOfBoundsException\r\n\tat java.nio.Buffer.checkIndex(Buffer.java:546) ~[?:1.8.0_102]\r\n\tat java.nio.DirectByteBuffer.putLong(DirectByteBuffer.java:806) ~[?:1.8.0_102]\r\n\tat io.druid.query.aggregation.LongSumBufferAggregator.init(LongSumBufferAggregator.java:39) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.initializeSlot(BufferArrayGrouper.java:179) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.aggregate(BufferArrayGrouper.java:161) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.IntGrouper.aggregate(IntGrouper.java:33) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:621) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:601) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.initNewDelegate(GroupByQueryEngineV2.java:304) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.hasNext(GroupByQueryEngineV2.java:351) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:88) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.toYielder(BaseSequence.java:68) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.makeYielder(ConcatSequence.java:95) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.toYielder(ConcatSequence.java:75) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.toYielder(LazySequence.java:46) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.MappedSequence.toYielder(MappedSequence.java:49) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.Sequences$3.toYielder(Sequences.java:135) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.accumulate(LazySequence.java:40) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$2.accumulate(SpecificSegmentQueryRunner.java:86) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.doNamed(SpecificSegmentQueryRunner.java:172) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.access$200(SpecificSegmentQueryRunner.java:45) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$3.wrap(SpecificSegmentQueryRunner.java:152) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.CPUTimeMetricQueryRunner$1.wrap(CPUTimeMetricQueryRunner.java:74) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:241) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:232) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_102]\r\n\tat io.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:271) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]\r\n2018-01-04T14:43:13,090 ERROR [processing-1] io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2 - Exception with one of the sequences!\r\njava.lang.IndexOutOfBoundsException\r\n\tat java.nio.Buffer.checkIndex(Buffer.java:546) ~[?:1.8.0_102]\r\n\tat java.nio.DirectByteBuffer.putLong(DirectByteBuffer.java:806) ~[?:1.8.0_102]\r\n\tat io.druid.query.aggregation.LongSumBufferAggregator.init(LongSumBufferAggregator.java:39) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.initializeSlot(BufferArrayGrouper.java:179) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.aggregate(BufferArrayGrouper.java:161) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.IntGrouper.aggregate(IntGrouper.java:33) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:621) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:601) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.initNewDelegate(GroupByQueryEngineV2.java:304) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.hasNext(GroupByQueryEngineV2.java:351) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:88) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.toYielder(BaseSequence.java:68) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.makeYielder(ConcatSequence.java:95) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.toYielder(ConcatSequence.java:75) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.toYielder(LazySequence.java:46) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.MappedSequence.toYielder(MappedSequence.java:49) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.Sequences$3.toYielder(Sequences.java:135) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.accumulate(LazySequence.java:40) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$2.accumulate(SpecificSegmentQueryRunner.java:86) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.doNamed(SpecificSegmentQueryRunner.java:172) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.access$200(SpecificSegmentQueryRunner.java:45) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$3.wrap(SpecificSegmentQueryRunner.java:152) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.CPUTimeMetricQueryRunner$1.wrap(CPUTimeMetricQueryRunner.java:74) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:241) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:232) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_102]\r\n\tat io.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:271) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]\r\n2018-01-04T14:43:13,091 ERROR [processing-3] com.google.common.util.concurrent.Futures$CombinedFuture - input future failed.\r\njava.lang.IndexOutOfBoundsException\r\n\tat java.nio.Buffer.checkIndex(Buffer.java:546) ~[?:1.8.0_102]\r\n\tat java.nio.DirectByteBuffer.putLong(DirectByteBuffer.java:806) ~[?:1.8.0_102]\r\n\tat io.druid.query.aggregation.LongSumBufferAggregator.init(LongSumBufferAggregator.java:39) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.initializeSlot(BufferArrayGrouper.java:179) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.aggregate(BufferArrayGrouper.java:161) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.IntGrouper.aggregate(IntGrouper.java:33) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:621) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:601) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.initNewDelegate(GroupByQueryEngineV2.java:304) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.hasNext(GroupByQueryEngineV2.java:351) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:88) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.toYielder(BaseSequence.java:68) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.makeYielder(ConcatSequence.java:95) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.toYielder(ConcatSequence.java:75) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.toYielder(LazySequence.java:46) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.MappedSequence.toYielder(MappedSequence.java:49) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.Sequences$3.toYielder(Sequences.java:135) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.accumulate(LazySequence.java:40) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$2.accumulate(SpecificSegmentQueryRunner.java:86) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.doNamed(SpecificSegmentQueryRunner.java:172) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.access$200(SpecificSegmentQueryRunner.java:45) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$3.wrap(SpecificSegmentQueryRunner.java:152) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.CPUTimeMetricQueryRunner$1.wrap(CPUTimeMetricQueryRunner.java:74) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:241) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:232) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_102]\r\n\tat io.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:271) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]\r\n2018-01-04T14:43:13,091 ERROR [processing-1] com.google.common.util.concurrent.Futures$CombinedFuture - input future failed.\r\njava.lang.IndexOutOfBoundsException\r\n\tat java.nio.Buffer.checkIndex(Buffer.java:546) ~[?:1.8.0_102]\r\n\tat java.nio.DirectByteBuffer.putLong(DirectByteBuffer.java:806) ~[?:1.8.0_102]\r\n\tat io.druid.query.aggregation.LongSumBufferAggregator.init(LongSumBufferAggregator.java:39) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.initializeSlot(BufferArrayGrouper.java:179) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.aggregate(BufferArrayGrouper.java:161) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.IntGrouper.aggregate(IntGrouper.java:33) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:621) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:601) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.initNewDelegate(GroupByQueryEngineV2.java:304) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.hasNext(GroupByQueryEngineV2.java:351) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:88) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.toYielder(BaseSequence.java:68) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.makeYielder(ConcatSequence.java:95) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.toYielder(ConcatSequence.java:75) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.toYielder(LazySequence.java:46) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.MappedSequence.toYielder(MappedSequence.java:49) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.Sequences$3.toYielder(Sequences.java:135) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.accumulate(LazySequence.java:40) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$2.accumulate(SpecificSegmentQueryRunner.java:86) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.doNamed(SpecificSegmentQueryRunner.java:172) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.access$200(SpecificSegmentQueryRunner.java:45) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$3.wrap(SpecificSegmentQueryRunner.java:152) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.CPUTimeMetricQueryRunner$1.wrap(CPUTimeMetricQueryRunner.java:74) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:241) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:232) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_102]\r\n\tat io.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:271) [druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]\r\n2018-01-04T14:43:13,091 ERROR [qtp1610593938-110[groupBy_[recep_stat_re_v2]_ce7f0c12-d6b8-4a3f-8155-823569cea296]] io.druid.server.QueryResource - Exception handling request: {class=io.druid.server.QueryResource, exceptionType=class io.druid.java.util.common.ISE, exceptionMessage=A record of size [1048744] cannot be written to the array buffer at offset[2025319760] because it exceeds the buffer capacity[1999937717]. Try increasing druid.processing.buffer.sizeBytes, exception=io.druid.java.util.common.ISE: A record of size [1048744] cannot be written to the array buffer at offset[2025319760] because it exceeds the buffer capacity[1999937717]. Try increasing druid.processing.buffer.sizeBytes, query=GroupByQuery{dataSource='recep_stat_re_v2', querySegmentSpec=LegacySegmentSpec{intervals=[2017-12-20T16:00:00.000Z/2017-12-27T15:59:59.000Z]}, virtualColumns=[], limitSpec=DefaultLimitSpec{columns='[OrderByColumnSpec{dimension='pv', direction='descending', dimensionComparator='lexicographic'}]', limit=1000}, dimFilter=(corpuin = 2852058704), granularity=AllGranularity, dimensions=[DefaultDimensionSpec{dimension='url_title', outputName='url_title', outputType='STRING'}], aggregatorSpecs=[LongSumAggregatorFactory{fieldName='pv', expression='null', name='pv'}, SketchMergeAggregatorFactory{fieldName=uv, name=uv, size=16384, shouldFinalize=true, isInputThetaSketch=false, errorBoundsStdDev=null}, LongSumAggregatorFactory{fieldName='click_wpa_count', expression='null', name='click_wpa_count'}, SketchMergeAggregatorFactory{fieldName=click_wpa_user_count, name=click_wpa_user_count, size=16384, shouldFinalize=true, isInputThetaSketch=false, errorBoundsStdDev=null}, SketchMergeAggregatorFactory{fieldName=valid_recep_user_count, name=recep_user_count, size=16384, shouldFinalize=true, isInputThetaSketch=false, errorBoundsStdDev=null}, SketchMergeAggregatorFactory{fieldName=valid_conv_user_count, name=real_valid_recep_user_count, size=16384, shouldFinalize=true, isInputThetaSketch=false, errorBoundsStdDev=null}, LongSumAggregatorFactory{fieldName='page_viewtime', expression='null', name='page_viewtime'}, LongSumAggregatorFactory{fieldName='exit_url_count', expression='null', name='exit_url_count'}, FilteredAggregatorFactory{delegate=LongSumAggregatorFactory{fieldName='pv', expression='null', name='new_user_pv'}, filter=is_new = 1}], postAggregatorSpecs=[ArithmeticPostAggregator{name='click_rate', fnName='/', fields=[SketchEstimatePostAggregator{name='click_wpa_user_count', field=FieldAccessPostAggregator{name='null', fieldName='click_wpa_user_count'}, errorBoundsStdDev=null}, SketchEstimatePostAggregator{name='uv', field=FieldAccessPostAggregator{name='null', fieldName='uv'}, errorBoundsStdDev=null}], op=DIV}, ArithmeticPostAggregator{name='recep_rate', fnName='/', fields=[SketchEstimatePostAggregator{name='recep_user_count', field=FieldAccessPostAggregator{name='null', fieldName='recep_user_count'}, errorBoundsStdDev=null}, SketchEstimatePostAggregator{name='click_wpa_user_count', field=FieldAccessPostAggregator{name='null', fieldName='click_wpa_user_count'}, errorBoundsStdDev=null}], op=DIV}, ArithmeticPostAggregator{name='avg_cost_time', fnName='/', fields=[FieldAccessPostAggregator{name='page_viewtime', fieldName='page_viewtime'}, FieldAccessPostAggregator{name='pv', fieldName='pv'}], op=DIV}, ArithmeticPostAggregator{name='lost_rate', fnName='/', fields=[FieldAccessPostAggregator{name='exit_url_count', fieldName='exit_url_count'}, FieldAccessPostAggregator{name='pv', fieldName='pv'}], op=DIV}, ArithmeticPostAggregator{name='new_user_rate', fnName='/', fields=[FieldAccessPostAggregator{name='new_user_pv', fieldName='new_user_pv'}, FieldAccessPostAggregator{name='pv', fieldName='pv'}], op=DIV}], havingSpec=GreaterThanHavingSpec{aggregationName='pv', value=0}}, peer=10.241.133.15}\r\nio.druid.java.util.common.ISE: A record of size [1048744] cannot be written to the array buffer at offset[2025319760] because it exceeds the buffer capacity[1999937717]. Try increasing druid.processing.buffer.sizeBytes\r\n\tat io.druid.query.groupby.epinephelinae.BufferArrayGrouper.aggregate(BufferArrayGrouper.java:156) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.IntGrouper.aggregate(IntGrouper.java:33) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:621) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.aggregateSingleValueDims(GroupByQueryEngineV2.java:601) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.initNewDelegate(GroupByQueryEngineV2.java:304) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.hasNext(GroupByQueryEngineV2.java:351) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:88) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.BaseSequence.toYielder(BaseSequence.java:68) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.makeYielder(ConcatSequence.java:95) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.ConcatSequence.toYielder(ConcatSequence.java:75) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.toYielder(LazySequence.java:46) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:87) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$2.get(WrappingSequence.java:83) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.toYielder(WrappingSequence.java:82) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.MappedSequence.toYielder(MappedSequence.java:49) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.Sequences$3.toYielder(Sequences.java:135) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.LazySequence.accumulate(LazySequence.java:40) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$2.accumulate(SpecificSegmentQueryRunner.java:86) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.doNamed(SpecificSegmentQueryRunner.java:172) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner.access$200(SpecificSegmentQueryRunner.java:45) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.spec.SpecificSegmentQueryRunner$3.wrap(SpecificSegmentQueryRunner.java:152) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.CPUTimeMetricQueryRunner$1.wrap(CPUTimeMetricQueryRunner.java:74) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[java-util-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:241) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat io.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:232) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_102]\r\n\tat io.druid.query.PrioritizedListenableFutureTask.run(PrioritizedExecutorService.java:271) ~[druid-processing-0.11.0-iap1.jar:0.11.0-iap1]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355210278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355214298","html_url":"https://github.com/apache/druid/pull/4754#issuecomment-355214298","issue_url":"https://api.github.com/repos/apache/druid/issues/4754","id":355214298,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTIxNDI5OA==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T07:16:32Z","updated_at":"2018-01-04T07:16:32Z","author_association":"MEMBER","body":"@leventov: have you finished reviewing the changes ? \r\nLet me know once if are done so that i can handle all review comments and test the changes at once.  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355214298/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355229837","html_url":"https://github.com/apache/druid/issues/4734#issuecomment-355229837","issue_url":"https://api.github.com/repos/apache/druid/issues/4734","id":355229837,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTIyOTgzNw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T08:56:06Z","updated_at":"2018-01-04T08:56:06Z","author_association":"MEMBER","body":"@wysstartgo would you be able to provide a patch that fixes this bug?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355229837/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355230400","html_url":"https://github.com/apache/druid/pull/4754#issuecomment-355230400","issue_url":"https://api.github.com/repos/apache/druid/issues/4754","id":355230400,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTIzMDQwMA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T08:59:08Z","updated_at":"2018-01-04T08:59:08Z","author_association":"MEMBER","body":"@nishantmonu51 I won't review until the next Tuesday. Could you please fix conflicts and failing IntelliJ CI in the meantime","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355230400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355238826","html_url":"https://github.com/apache/druid/pull/5213#issuecomment-355238826","issue_url":"https://api.github.com/repos/apache/druid/issues/5213","id":355238826,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTIzODgyNg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T09:41:16Z","updated_at":"2018-01-04T09:41:16Z","author_association":"MEMBER","body":"Thanks for the contribution, please sign CLA: http://druid.io/community/cla.html","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355238826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355242835","html_url":"https://github.com/apache/druid/pull/5213#issuecomment-355242835","issue_url":"https://api.github.com/repos/apache/druid/issues/5213","id":355242835,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTI0MjgzNQ==","user":{"login":"dragonls","id":2565118,"node_id":"MDQ6VXNlcjI1NjUxMTg=","avatar_url":"https://avatars.githubusercontent.com/u/2565118?v=4","gravatar_id":"","url":"https://api.github.com/users/dragonls","html_url":"https://github.com/dragonls","followers_url":"https://api.github.com/users/dragonls/followers","following_url":"https://api.github.com/users/dragonls/following{/other_user}","gists_url":"https://api.github.com/users/dragonls/gists{/gist_id}","starred_url":"https://api.github.com/users/dragonls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragonls/subscriptions","organizations_url":"https://api.github.com/users/dragonls/orgs","repos_url":"https://api.github.com/users/dragonls/repos","events_url":"https://api.github.com/users/dragonls/events{/privacy}","received_events_url":"https://api.github.com/users/dragonls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T10:00:37Z","updated_at":"2018-01-04T10:02:11Z","author_association":"CONTRIBUTOR","body":"@leventov It's done.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355242835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355327578","html_url":"https://github.com/apache/druid/pull/5102#issuecomment-355327578","issue_url":"https://api.github.com/repos/apache/druid/issues/5102","id":355327578,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTMyNzU3OA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T16:25:08Z","updated_at":"2018-01-04T16:25:08Z","author_association":"CONTRIBUTOR","body":"@jihoonson will review it again today. thanks.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355327578/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355369156","html_url":"https://github.com/apache/druid/pull/4764#issuecomment-355369156","issue_url":"https://api.github.com/repos/apache/druid/issues/4764","id":355369156,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTM2OTE1Ng==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T19:03:30Z","updated_at":"2018-01-04T19:05:32Z","author_association":"CONTRIBUTOR","body":"while investigating something else, I came across following workaround to make broker give priority to segments stored on historicals. The idea is to give MiddleManagers different priority (via \"druid.priority\" config) and then configure `druid.broker.select.tier` appropriately at broker to give middle managers least priority while selecting servers to find segment.\r\n\r\nOne example setup could be...\r\n\r\nOn MiddleManager config, set\r\n```\r\ndruid.priority=999999\r\n```\r\n\r\non Broker config, set\r\n```\r\ndruid.broker.select.tier=lowestPriority\r\n```\r\n\r\nHistoricals by default would have `druid.priority=0` and hence would get selected first by the broker.\r\n\r\n\r\n\r\nhowever, this PR is still nice to have because we want this behavior to be there by default.\r\n  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355369156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355369811","html_url":"https://github.com/apache/druid/issues/5127#issuecomment-355369811","issue_url":"https://api.github.com/repos/apache/druid/issues/5127","id":355369811,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTM2OTgxMQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T19:05:51Z","updated_at":"2018-01-04T19:05:51Z","author_association":"CONTRIBUTOR","body":"@erikdubbelboer I came across a workaround to give historical segments priority . it is described in https://github.com/druid-io/druid/pull/4764#issuecomment-355369156 . hopefully that would help you solve this issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355369811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355385858","html_url":"https://github.com/apache/druid/pull/5213#issuecomment-355385858","issue_url":"https://api.github.com/repos/apache/druid/issues/5213","id":355385858,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTM4NTg1OA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T20:09:39Z","updated_at":"2018-01-04T20:09:39Z","author_association":"CONTRIBUTOR","body":"going to merge this without CI finishing since it's just a doc change","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355385858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355404083","html_url":"https://github.com/apache/druid/pull/5157#issuecomment-355404083","issue_url":"https://api.github.com/repos/apache/druid/issues/5157","id":355404083,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTQwNDA4Mw==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T21:29:57Z","updated_at":"2018-01-04T21:29:57Z","author_association":"MEMBER","body":"@drcrallen The reason I added `TimeBucketedQuery` is because `DataSourceMetadataQuery`, `SegmentMetadataQuery`, `ScanQuery`, and `TimeBoundaryQuery` all extend `BaseQuery` but did not have a granularity. If you think it is preferable to make `BaseQuery` always have a granularity, I can merge `TimeBucketedQuery` into it and change these other query types to have an implicit 'All' or 'None', I just wasn't sure if conceptually that made sense (or would have any other unintended side effects).\r\n\r\nThanks for the review!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355404083/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355405756","html_url":"https://github.com/apache/druid/pull/5157#issuecomment-355405756","issue_url":"https://api.github.com/repos/apache/druid/issues/5157","id":355405756,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTQwNTc1Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T21:37:07Z","updated_at":"2018-01-04T21:37:07Z","author_association":"CONTRIBUTOR","body":"> All queries are time bucketed.\r\n\r\nThey don't all take a granularity parameter, but if you count \"hardcoded 'all' granularity\" as \"time bucketed\" then, okay, sure :)\r\n\r\n> If you think it is preferable to make BaseQuery always have a granularity, I can merge TimeBucketedQuery into it and change these other query types to have an implicit 'All' or 'None', I just wasn't sure if conceptually that made sense (or would have any other unintended side effects).\r\n\r\nIf this is the way you go, it should be 'all', since 'none' really means 'millis'.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355405756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355406114","html_url":"https://github.com/apache/druid/pull/5204#issuecomment-355406114","issue_url":"https://api.github.com/repos/apache/druid/issues/5204","id":355406114,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTQwNjExNA==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-04T21:38:41Z","updated_at":"2018-01-04T21:38:41Z","author_association":"MEMBER","body":"@drcrallen added test","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355406114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355440940","html_url":"https://github.com/apache/druid/pull/4894#issuecomment-355440940","issue_url":"https://api.github.com/repos/apache/druid/issues/4894","id":355440940,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTQ0MDk0MA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T00:38:14Z","updated_at":"2018-01-05T00:38:14Z","author_association":"CONTRIBUTOR","body":"PR was not backported to 0.11.0, will be included in 0.12.0","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355440940/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355448271","html_url":"https://github.com/apache/druid/pull/5115#issuecomment-355448271","issue_url":"https://api.github.com/repos/apache/druid/issues/5115","id":355448271,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTQ0ODI3MQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T01:27:48Z","updated_at":"2018-01-05T01:27:48Z","author_association":"CONTRIBUTOR","body":"@Igosuki  @gianm  This was only merged into 0.11.0, is this relevant for master/0.12.0?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355448271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355452321","html_url":"https://github.com/apache/druid/pull/5115#issuecomment-355452321","issue_url":"https://api.github.com/repos/apache/druid/issues/5115","id":355452321,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTQ1MjMyMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T01:55:42Z","updated_at":"2018-01-05T01:55:42Z","author_association":"CONTRIBUTOR","body":"That's a good question, I'm sorry to report that I didn't even notice it was not a PR for master.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355452321/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355457406","html_url":"https://github.com/apache/druid/pull/4540#issuecomment-355457406","issue_url":"https://api.github.com/repos/apache/druid/issues/4540","id":355457406,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTQ1NzQwNg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T02:33:21Z","updated_at":"2018-01-05T02:33:34Z","author_association":"CONTRIBUTOR","body":"@himanshug I'm putting together the 0.12.0 release notes now, can you update those with some info for this PR? https://github.com/druid-io/druid/issues/5211\r\n  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355457406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355463143","html_url":"https://github.com/apache/druid/pull/5104#issuecomment-355463143","issue_url":"https://api.github.com/repos/apache/druid/issues/5104","id":355463143,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTQ2MzE0Mw==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T03:19:32Z","updated_at":"2018-01-05T03:19:32Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355463143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355487313","html_url":"https://github.com/apache/druid/pull/5102#issuecomment-355487313","issue_url":"https://api.github.com/repos/apache/druid/issues/5102","id":355487313,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTQ4NzMxMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T07:07:25Z","updated_at":"2018-01-05T07:07:25Z","author_association":"CONTRIBUTOR","body":"@himanshug thanks.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355487313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355505556","html_url":"https://github.com/apache/druid/issues/2977#issuecomment-355505556","issue_url":"https://api.github.com/repos/apache/druid/issues/2977","id":355505556,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTUwNTU1Ng==","user":{"login":"Crystark","id":259699,"node_id":"MDQ6VXNlcjI1OTY5OQ==","avatar_url":"https://avatars.githubusercontent.com/u/259699?v=4","gravatar_id":"","url":"https://api.github.com/users/Crystark","html_url":"https://github.com/Crystark","followers_url":"https://api.github.com/users/Crystark/followers","following_url":"https://api.github.com/users/Crystark/following{/other_user}","gists_url":"https://api.github.com/users/Crystark/gists{/gist_id}","starred_url":"https://api.github.com/users/Crystark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Crystark/subscriptions","organizations_url":"https://api.github.com/users/Crystark/orgs","repos_url":"https://api.github.com/users/Crystark/repos","events_url":"https://api.github.com/users/Crystark/events{/privacy}","received_events_url":"https://api.github.com/users/Crystark/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T09:05:42Z","updated_at":"2018-01-05T09:07:32Z","author_association":"CONTRIBUTOR","body":"That would be really great! I wanted to use the following but realized it was only possible at query time.\r\n\r\n```\r\n{\r\n  \"type\" : \"extraction\",\r\n  \"dimension\" : \"uuid\",\r\n  \"outputName\" :  \"has_uuid\",\r\n  \"extractionFn\" : { \"type\" : \"stringFormat\", \"format\" : \"Y\" }\r\n}\r\n```\r\n  \r\nAs uuids have a high cardinality I would just like to know if it is present or not without having to create an other field in my input topic (I need to have the clear uuid for some other process).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355505556/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355523336","html_url":"https://github.com/apache/druid/pull/4425#issuecomment-355523336","issue_url":"https://api.github.com/repos/apache/druid/issues/4425","id":355523336,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTUyMzMzNg==","user":{"login":"Llinjing","id":20414903,"node_id":"MDQ6VXNlcjIwNDE0OTAz","avatar_url":"https://avatars.githubusercontent.com/u/20414903?v=4","gravatar_id":"","url":"https://api.github.com/users/Llinjing","html_url":"https://github.com/Llinjing","followers_url":"https://api.github.com/users/Llinjing/followers","following_url":"https://api.github.com/users/Llinjing/following{/other_user}","gists_url":"https://api.github.com/users/Llinjing/gists{/gist_id}","starred_url":"https://api.github.com/users/Llinjing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Llinjing/subscriptions","organizations_url":"https://api.github.com/users/Llinjing/orgs","repos_url":"https://api.github.com/users/Llinjing/repos","events_url":"https://api.github.com/users/Llinjing/events{/privacy}","received_events_url":"https://api.github.com/users/Llinjing/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T10:33:35Z","updated_at":"2018-01-05T10:33:35Z","author_association":"NONE","body":"@winval @leventov @kaijianding @jihoonson When can this **multiValueDelimiter** be merged？？Now I need to use this function urgently ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355523336/reactions","total_count":3,"+1":1,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355526550","html_url":"https://github.com/apache/druid/pull/4425#issuecomment-355526550","issue_url":"https://api.github.com/repos/apache/druid/issues/4425","id":355526550,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTUyNjU1MA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T10:50:07Z","updated_at":"2018-01-05T10:50:07Z","author_association":"CONTRIBUTOR","body":"@winval sorry for the late response.. I missed it. I'll finish my review once you fix the conflicts.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355526550/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355531906","html_url":"https://github.com/apache/druid/issues/5220#issuecomment-355531906","issue_url":"https://api.github.com/repos/apache/druid/issues/5220","id":355531906,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTUzMTkwNg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T11:18:14Z","updated_at":"2018-01-05T11:18:14Z","author_association":"CONTRIBUTOR","body":"Hi @amoussoubaruch, the realtime node is not supposed to be used for production.\r\nIf you're using Kakfa, the Kafka indexing service is the best way for streaming ingestion. Otherwise, you should try with Tranquility.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355531906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355532679","html_url":"https://github.com/apache/druid/issues/5220#issuecomment-355532679","issue_url":"https://api.github.com/repos/apache/druid/issues/5220","id":355532679,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTUzMjY3OQ==","user":{"login":"amoussoubaruch","id":13684386,"node_id":"MDQ6VXNlcjEzNjg0Mzg2","avatar_url":"https://avatars.githubusercontent.com/u/13684386?v=4","gravatar_id":"","url":"https://api.github.com/users/amoussoubaruch","html_url":"https://github.com/amoussoubaruch","followers_url":"https://api.github.com/users/amoussoubaruch/followers","following_url":"https://api.github.com/users/amoussoubaruch/following{/other_user}","gists_url":"https://api.github.com/users/amoussoubaruch/gists{/gist_id}","starred_url":"https://api.github.com/users/amoussoubaruch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amoussoubaruch/subscriptions","organizations_url":"https://api.github.com/users/amoussoubaruch/orgs","repos_url":"https://api.github.com/users/amoussoubaruch/repos","events_url":"https://api.github.com/users/amoussoubaruch/events{/privacy}","received_events_url":"https://api.github.com/users/amoussoubaruch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T11:22:31Z","updated_at":"2018-01-05T11:22:31Z","author_association":"NONE","body":"hi @jihoonson \r\nIt's Ok .\r\nMany thanks\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355532679/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355613611","html_url":"https://github.com/apache/druid/pull/5210#issuecomment-355613611","issue_url":"https://api.github.com/repos/apache/druid/issues/5210","id":355613611,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTYxMzYxMQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T17:25:25Z","updated_at":"2018-01-05T17:26:00Z","author_association":"CONTRIBUTOR","body":"@jon-wei it appears that calcite-core is now bringing memory-0.9.0.jar which is conflicting with memory-0.10.3.jar brought by datasketches module.\r\ncan we make them both use same version?\r\n  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355613611/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355617945","html_url":"https://github.com/apache/druid/pull/4540#issuecomment-355617945","issue_url":"https://api.github.com/repos/apache/druid/issues/4540","id":355617945,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTYxNzk0NQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T17:43:20Z","updated_at":"2018-01-05T17:43:20Z","author_association":"CONTRIBUTOR","body":"@jon-wei sure, will update","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355617945/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355675647","html_url":"https://github.com/apache/druid/pull/5210#issuecomment-355675647","issue_url":"https://api.github.com/repos/apache/druid/issues/5210","id":355675647,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTY3NTY0Nw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T21:54:13Z","updated_at":"2018-01-05T21:54:13Z","author_association":"CONTRIBUTOR","body":"@himanshug I opened a PR that excludes sketches-core from calcite here: https://github.com/druid-io/druid/pull/5223","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355675647/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355681362","html_url":"https://github.com/apache/druid/pull/5002#issuecomment-355681362","issue_url":"https://api.github.com/repos/apache/druid/issues/5002","id":355681362,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTY4MTM2Mg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T22:20:39Z","updated_at":"2018-01-05T22:20:39Z","author_association":"CONTRIBUTOR","body":"@AlexanderSaydakov Can you provide a doc update for this patch? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355681362/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355682510","html_url":"https://github.com/apache/druid/pull/5102#issuecomment-355682510","issue_url":"https://api.github.com/repos/apache/druid/issues/5102","id":355682510,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTY4MjUxMA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T22:26:45Z","updated_at":"2018-01-05T22:26:45Z","author_association":"CONTRIBUTOR","body":"looked till `CompactionSegmentIterator` class... will continue later","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355682510/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355684154","html_url":"https://github.com/apache/druid/pull/4540#issuecomment-355684154","issue_url":"https://api.github.com/repos/apache/druid/issues/4540","id":355684154,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTY4NDE1NA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T22:35:10Z","updated_at":"2018-01-05T22:35:10Z","author_association":"CONTRIBUTOR","body":"updated 0.12.0 release notes #5211","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355684154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355684574","html_url":"https://github.com/apache/druid/pull/4540#issuecomment-355684574","issue_url":"https://api.github.com/repos/apache/druid/issues/4540","id":355684574,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTY4NDU3NA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T22:37:32Z","updated_at":"2018-01-05T22:37:32Z","author_association":"CONTRIBUTOR","body":"@himanshug I'm not seeing the update, I hope I didn't clobber your changes D: (I was updating some of the highlights)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355684574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355686748","html_url":"https://github.com/apache/druid/pull/4540#issuecomment-355686748","issue_url":"https://api.github.com/repos/apache/druid/issues/4540","id":355686748,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTY4Njc0OA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T22:49:14Z","updated_at":"2018-01-05T22:49:14Z","author_association":"CONTRIBUTOR","body":"@jon-wei np, updated again. save a local copy this time  :)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355686748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355687259","html_url":"https://github.com/apache/druid/pull/4540#issuecomment-355687259","issue_url":"https://api.github.com/repos/apache/druid/issues/4540","id":355687259,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTY4NzI1OQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-05T22:52:15Z","updated_at":"2018-01-05T22:52:15Z","author_association":"CONTRIBUTOR","body":"@himanshug great, thanks!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355687259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355804390","html_url":"https://github.com/apache/druid/issues/4734#issuecomment-355804390","issue_url":"https://api.github.com/repos/apache/druid/issues/4734","id":355804390,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTgwNDM5MA==","user":{"login":"QubitPi","id":16126939,"node_id":"MDQ6VXNlcjE2MTI2OTM5","avatar_url":"https://avatars.githubusercontent.com/u/16126939?v=4","gravatar_id":"","url":"https://api.github.com/users/QubitPi","html_url":"https://github.com/QubitPi","followers_url":"https://api.github.com/users/QubitPi/followers","following_url":"https://api.github.com/users/QubitPi/following{/other_user}","gists_url":"https://api.github.com/users/QubitPi/gists{/gist_id}","starred_url":"https://api.github.com/users/QubitPi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QubitPi/subscriptions","organizations_url":"https://api.github.com/users/QubitPi/orgs","repos_url":"https://api.github.com/users/QubitPi/repos","events_url":"https://api.github.com/users/QubitPi/events{/privacy}","received_events_url":"https://api.github.com/users/QubitPi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-07T07:07:17Z","updated_at":"2018-01-07T07:07:17Z","author_association":"CONTRIBUTOR","body":"@leventov I have some experiences on developing custom Druid aggregator and I am a core contributor of a [Druid-based project](https://github.com/yahoo/fili). Could I try and submit a patch for this issue? Looks like @wysstartgo didn't have much time for it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355804390/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355804701","html_url":"https://github.com/apache/druid/issues/4734#issuecomment-355804701","issue_url":"https://api.github.com/repos/apache/druid/issues/4734","id":355804701,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTgwNDcwMQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-07T07:15:55Z","updated_at":"2018-01-07T07:15:55Z","author_association":"MEMBER","body":"@QubitPi of cause, you are welcome","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355804701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355804765","html_url":"https://github.com/apache/druid/issues/5229#issuecomment-355804765","issue_url":"https://api.github.com/repos/apache/druid/issues/5229","id":355804765,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTgwNDc2NQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-07T07:17:37Z","updated_at":"2018-01-07T07:17:37Z","author_association":"MEMBER","body":"Duplicate of #4312","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355804765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355809416","html_url":"https://github.com/apache/druid/issues/5228#issuecomment-355809416","issue_url":"https://api.github.com/repos/apache/druid/issues/5228","id":355809416,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTgwOTQxNg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-07T09:12:37Z","updated_at":"2018-01-07T09:12:37Z","author_association":"MEMBER","body":"Yes, see #4886. Closing this issue, please continue discussion in #4886","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355809416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355828032","html_url":"https://github.com/apache/druid/pull/4425#issuecomment-355828032","issue_url":"https://api.github.com/repos/apache/druid/issues/4425","id":355828032,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTgyODAzMg==","user":{"login":"winval","id":15226789,"node_id":"MDQ6VXNlcjE1MjI2Nzg5","avatar_url":"https://avatars.githubusercontent.com/u/15226789?v=4","gravatar_id":"","url":"https://api.github.com/users/winval","html_url":"https://github.com/winval","followers_url":"https://api.github.com/users/winval/followers","following_url":"https://api.github.com/users/winval/following{/other_user}","gists_url":"https://api.github.com/users/winval/gists{/gist_id}","starred_url":"https://api.github.com/users/winval/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/winval/subscriptions","organizations_url":"https://api.github.com/users/winval/orgs","repos_url":"https://api.github.com/users/winval/repos","events_url":"https://api.github.com/users/winval/events{/privacy}","received_events_url":"https://api.github.com/users/winval/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-07T14:54:15Z","updated_at":"2018-01-07T14:54:15Z","author_association":"NONE","body":"@jihoonson I have resolved the conflicts, please help review the code","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355828032/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355833019","html_url":"https://github.com/apache/druid/issues/5211#issuecomment-355833019","issue_url":"https://api.github.com/repos/apache/druid/issues/5211","id":355833019,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTgzMzAxOQ==","user":{"login":"QubitPi","id":16126939,"node_id":"MDQ6VXNlcjE2MTI2OTM5","avatar_url":"https://avatars.githubusercontent.com/u/16126939?v=4","gravatar_id":"","url":"https://api.github.com/users/QubitPi","html_url":"https://github.com/QubitPi","followers_url":"https://api.github.com/users/QubitPi/followers","following_url":"https://api.github.com/users/QubitPi/following{/other_user}","gists_url":"https://api.github.com/users/QubitPi/gists{/gist_id}","starred_url":"https://api.github.com/users/QubitPi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QubitPi/subscriptions","organizations_url":"https://api.github.com/users/QubitPi/orgs","repos_url":"https://api.github.com/users/QubitPi/repos","events_url":"https://api.github.com/users/QubitPi/events{/privacy}","received_events_url":"https://api.github.com/users/QubitPi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-07T16:07:48Z","updated_at":"2018-01-07T16:07:48Z","author_association":"CONTRIBUTOR","body":"@jon-wei Do we have an ETA for version 12?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355833019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355926399","html_url":"https://github.com/apache/druid/issues/5195#issuecomment-355926399","issue_url":"https://api.github.com/repos/apache/druid/issues/5195","id":355926399,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTkyNjM5OQ==","user":{"login":"kaytrance","id":6768891,"node_id":"MDQ6VXNlcjY3Njg4OTE=","avatar_url":"https://avatars.githubusercontent.com/u/6768891?v=4","gravatar_id":"","url":"https://api.github.com/users/kaytrance","html_url":"https://github.com/kaytrance","followers_url":"https://api.github.com/users/kaytrance/followers","following_url":"https://api.github.com/users/kaytrance/following{/other_user}","gists_url":"https://api.github.com/users/kaytrance/gists{/gist_id}","starred_url":"https://api.github.com/users/kaytrance/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaytrance/subscriptions","organizations_url":"https://api.github.com/users/kaytrance/orgs","repos_url":"https://api.github.com/users/kaytrance/repos","events_url":"https://api.github.com/users/kaytrance/events{/privacy}","received_events_url":"https://api.github.com/users/kaytrance/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-08T10:11:07Z","updated_at":"2018-01-08T10:11:07Z","author_association":"NONE","body":"then its probably not druid that is needed. One of the pillars about druid is that to roll-up incoming data to some bigger and normalized granularity.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355926399/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/355931624","html_url":"https://github.com/apache/druid/issues/5211#issuecomment-355931624","issue_url":"https://api.github.com/repos/apache/druid/issues/5211","id":355931624,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTkzMTYyNA==","user":{"login":"Fokko","id":1134248,"node_id":"MDQ6VXNlcjExMzQyNDg=","avatar_url":"https://avatars.githubusercontent.com/u/1134248?v=4","gravatar_id":"","url":"https://api.github.com/users/Fokko","html_url":"https://github.com/Fokko","followers_url":"https://api.github.com/users/Fokko/followers","following_url":"https://api.github.com/users/Fokko/following{/other_user}","gists_url":"https://api.github.com/users/Fokko/gists{/gist_id}","starred_url":"https://api.github.com/users/Fokko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Fokko/subscriptions","organizations_url":"https://api.github.com/users/Fokko/orgs","repos_url":"https://api.github.com/users/Fokko/repos","events_url":"https://api.github.com/users/Fokko/events{/privacy}","received_events_url":"https://api.github.com/users/Fokko/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-08T10:35:36Z","updated_at":"2018-01-08T10:35:36Z","author_association":"CONTRIBUTOR","body":"I see a lot of performance improvements, are there benchmarks available?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/355931624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/356074006","html_url":"https://github.com/apache/druid/pull/5204#issuecomment-356074006","issue_url":"https://api.github.com/repos/apache/druid/issues/5204","id":356074006,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjA3NDAwNg==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-08T19:42:15Z","updated_at":"2018-01-08T19:42:15Z","author_association":"MEMBER","body":"@drcrallen can you have a look again ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/356074006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/356122284","html_url":"https://github.com/apache/druid/pull/5157#issuecomment-356122284","issue_url":"https://api.github.com/repos/apache/druid/issues/5157","id":356122284,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjEyMjI4NA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-08T22:52:02Z","updated_at":"2018-01-08T22:52:02Z","author_association":"MEMBER","body":"@clintropolis there is a true error at least with intellij inspections, closing/reopening a pr won't help","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/356122284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/356124558","html_url":"https://github.com/apache/druid/pull/5157#issuecomment-356124558","issue_url":"https://api.github.com/repos/apache/druid/issues/5157","id":356124558,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjEyNDU1OA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-08T23:02:44Z","updated_at":"2018-01-08T23:16:08Z","author_association":"MEMBER","body":"Oops indeed. But the tests should pass, I think.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/356124558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/356127722","html_url":"https://github.com/apache/druid/issues/5229#issuecomment-356127722","issue_url":"https://api.github.com/repos/apache/druid/issues/5229","id":356127722,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjEyNzcyMg==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-08T23:18:09Z","updated_at":"2018-01-08T23:18:09Z","author_association":"CONTRIBUTOR","body":"Closing in favor of #4312","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/356127722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/356127775","html_url":"https://github.com/apache/druid/pull/5157#issuecomment-356127775","issue_url":"https://api.github.com/repos/apache/druid/issues/5157","id":356127775,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjEyNzc3NQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-08T23:18:23Z","updated_at":"2018-01-08T23:18:23Z","author_association":"MEMBER","body":"The inspection indicates that of the `getGranularity` and `getTimezone` methods I added to `BaseQuery`, only `getTimezone` should be on the `Query` interface, which I'm not sure makes a lot of sense without the granularity since it supplies the timezone. Should I rework to either remove both from `Query` interface, or does it make sense for them to be there and ignore the inspection somehow?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/356127775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/356127914","html_url":"https://github.com/apache/druid/issues/4312#issuecomment-356127914","issue_url":"https://api.github.com/repos/apache/druid/issues/4312","id":356127914,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjEyNzkxNA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-08T23:19:00Z","updated_at":"2018-01-08T23:19:00Z","author_association":"CONTRIBUTOR","body":"Copied description from #5229 ...\r\n\r\nThere have been multiple discussions about Druid source having too many sub-projects which really doesn't provide much value and often leads to complications e.g. `server/src/main/java/io/druid/client/indexing/ClientXXXQuery.java` classes are equivalent to `XXXTask.java` classes in `indexing-service/` and needs to stay in sync .. more such classes are created in #5102 .\r\nsimilar desire has been mentioned in https://github.com/metamx/java-util/pull/74#issuecomment-353473234 and https://github.com/druid-io/druid/pull/5102#discussion_r158430657 .\r\n\r\nSo, here is my initial idea....\r\n\r\n1. merge `druid-api, druid-commons, java-utils, druid-processing` into `druid-core`\r\n2. merge `druid-server, druid-indexing-service` into `druid-server`\r\n\r\nwe can merge things further if necessary.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/356127914/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/356131659","html_url":"https://github.com/apache/druid/issues/5230#issuecomment-356131659","issue_url":"https://api.github.com/repos/apache/druid/issues/5230","id":356131659,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjEzMTY1OQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-08T23:39:10Z","updated_at":"2018-01-08T23:39:10Z","author_association":"CONTRIBUTOR","body":"scenario, you described, is indeed possible. but if you're hitting it too often then something else is likely going on. I have had two instances of above problem with following causes (just-in-case if you're having one of those)\r\n\r\n- `druid.port` at MM being same as `druid.indexer.runner.startPort`\r\n- another software deployed which dynamically used port in same port range. (you've probably already checked for this one though)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/356131659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/356132280","html_url":"https://github.com/apache/druid/issues/5227#issuecomment-356132280","issue_url":"https://api.github.com/repos/apache/druid/issues/5227","id":356132280,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjEzMjI4MA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-08T23:42:37Z","updated_at":"2018-01-08T23:42:37Z","author_association":"CONTRIBUTOR","body":"it is possible to define per-tier load/drop rules... so you can configure two different `druid.tier` setting on  different historicals..then you can configure two different rules for those two tiers.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/356132280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/356156332","html_url":"https://github.com/apache/druid/pull/5204#issuecomment-356156332","issue_url":"https://api.github.com/repos/apache/druid/issues/5204","id":356156332,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjE1NjMzMg==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-09T02:01:32Z","updated_at":"2018-01-09T02:01:32Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/356156332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/356159690","html_url":"https://github.com/apache/druid/issues/5218#issuecomment-356159690","issue_url":"https://api.github.com/repos/apache/druid/issues/5218","id":356159690,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjE1OTY5MA==","user":{"login":"zhangxinyu1","id":12528894,"node_id":"MDQ6VXNlcjEyNTI4ODk0","avatar_url":"https://avatars.githubusercontent.com/u/12528894?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangxinyu1","html_url":"https://github.com/zhangxinyu1","followers_url":"https://api.github.com/users/zhangxinyu1/followers","following_url":"https://api.github.com/users/zhangxinyu1/following{/other_user}","gists_url":"https://api.github.com/users/zhangxinyu1/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangxinyu1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangxinyu1/subscriptions","organizations_url":"https://api.github.com/users/zhangxinyu1/orgs","repos_url":"https://api.github.com/users/zhangxinyu1/repos","events_url":"https://api.github.com/users/zhangxinyu1/events{/privacy}","received_events_url":"https://api.github.com/users/zhangxinyu1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-09T02:22:53Z","updated_at":"2018-01-09T02:22:53Z","author_association":"CONTRIBUTOR","body":"@gianm @leventov \r\nWhat do you think about this proposal?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/356159690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/356197244","html_url":"https://github.com/apache/druid/issues/5227#issuecomment-356197244","issue_url":"https://api.github.com/repos/apache/druid/issues/5227","id":356197244,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjE5NzI0NA==","user":{"login":"kaytrance","id":6768891,"node_id":"MDQ6VXNlcjY3Njg4OTE=","avatar_url":"https://avatars.githubusercontent.com/u/6768891?v=4","gravatar_id":"","url":"https://api.github.com/users/kaytrance","html_url":"https://github.com/kaytrance","followers_url":"https://api.github.com/users/kaytrance/followers","following_url":"https://api.github.com/users/kaytrance/following{/other_user}","gists_url":"https://api.github.com/users/kaytrance/gists{/gist_id}","starred_url":"https://api.github.com/users/kaytrance/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaytrance/subscriptions","organizations_url":"https://api.github.com/users/kaytrance/orgs","repos_url":"https://api.github.com/users/kaytrance/repos","events_url":"https://api.github.com/users/kaytrance/events{/privacy}","received_events_url":"https://api.github.com/users/kaytrance/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-09T06:59:47Z","updated_at":"2018-01-09T06:59:47Z","author_association":"NONE","body":"yes, that is clear, but my question was more related on what do I have to write exactly to achieve this.\r\n\r\nPeriod definition uses ISO 8601 standart, right? So if I want to define a rule that states \"retain last month data\" I can set it to `period: \"P1M\"`, right? So when it comes to another tier what I have to write to say that on that tier I want to have \"last 6 month data without last month data\"?\r\n\r\nThe idea is to put P1M tier on very high specs machines while \"P6M without P1M\" should have much lower specs.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/356197244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/356207970","html_url":"https://github.com/apache/druid/issues/4312#issuecomment-356207970","issue_url":"https://api.github.com/repos/apache/druid/issues/4312","id":356207970,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjIwNzk3MA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-09T08:00:16Z","updated_at":"2018-01-09T08:00:16Z","author_association":"CONTRIBUTOR","body":"@himanshug +1. sounds nice. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/356207970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/356250807","html_url":"https://github.com/apache/druid/issues/5233#issuecomment-356250807","issue_url":"https://api.github.com/repos/apache/druid/issues/5233","id":356250807,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NjI1MDgwNw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-09T10:55:36Z","updated_at":"2018-01-09T10:55:36Z","author_association":"CONTRIBUTOR","body":"Hi @donpinkus, where did you see that TopN doesn't require aggregations and postAggregations? I can't find it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/356250807/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]