[{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1693702797","html_url":"https://github.com/apache/couchdb/issues/4741#issuecomment-1693702797","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4741","id":1693702797,"node_id":"IC_kwDOAAMmUc5k89qN","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-25T17:27:32Z","updated_at":"2023-08-25T17:27:32Z","author_association":"MEMBER","body":"https://docs.couchdb.org/en/stable/config/http.html#chttpd/port","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1693702797/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1694458294","html_url":"https://github.com/apache/couchdb/issues/4730#issuecomment-1694458294","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4730","id":1694458294,"node_id":"IC_kwDOAAMmUc5k_2G2","user":{"login":"big-r81","id":9985963,"node_id":"MDQ6VXNlcjk5ODU5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9985963?v=4","gravatar_id":"","url":"https://api.github.com/users/big-r81","html_url":"https://github.com/big-r81","followers_url":"https://api.github.com/users/big-r81/followers","following_url":"https://api.github.com/users/big-r81/following{/other_user}","gists_url":"https://api.github.com/users/big-r81/gists{/gist_id}","starred_url":"https://api.github.com/users/big-r81/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-r81/subscriptions","organizations_url":"https://api.github.com/users/big-r81/orgs","repos_url":"https://api.github.com/users/big-r81/repos","events_url":"https://api.github.com/users/big-r81/events{/privacy}","received_events_url":"https://api.github.com/users/big-r81/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-26T18:39:39Z","updated_at":"2023-08-26T18:39:39Z","author_association":"CONTRIBUTOR","body":"Closing for now. You can reopen the issue when we released a supported version for macOS Sonoma.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1694458294/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1695324070","html_url":"https://github.com/apache/couchdb/issues/4706#issuecomment-1695324070","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4706","id":1695324070,"node_id":"IC_kwDOAAMmUc5lDJem","user":{"login":"jjrodrig","id":1001724,"node_id":"MDQ6VXNlcjEwMDE3MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1001724?v=4","gravatar_id":"","url":"https://api.github.com/users/jjrodrig","html_url":"https://github.com/jjrodrig","followers_url":"https://api.github.com/users/jjrodrig/followers","following_url":"https://api.github.com/users/jjrodrig/following{/other_user}","gists_url":"https://api.github.com/users/jjrodrig/gists{/gist_id}","starred_url":"https://api.github.com/users/jjrodrig/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jjrodrig/subscriptions","organizations_url":"https://api.github.com/users/jjrodrig/orgs","repos_url":"https://api.github.com/users/jjrodrig/repos","events_url":"https://api.github.com/users/jjrodrig/events{/privacy}","received_events_url":"https://api.github.com/users/jjrodrig/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-28T09:08:45Z","updated_at":"2023-08-28T09:08:45Z","author_association":"CONTRIBUTOR","body":"Thanks @nickva \r\n\r\n I think we should have a complete cleanup target but until we solve the CI issue I'll separate the elixir clean from the main clean in a new PR. \r\n\r\n It looks like that we need to run `elixir-init` target during `dist` execution but I don't know how to test it.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1695324070/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1695955504","html_url":"https://github.com/apache/couchdb/issues/4706#issuecomment-1695955504","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4706","id":1695955504,"node_id":"IC_kwDOAAMmUc5lFjow","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-28T16:05:20Z","updated_at":"2023-08-28T16:05:20Z","author_association":"CONTRIBUTOR","body":"@jjrodrig one way to check dist behavior is to make a draft pr with a branch which starts with `jenkins-...` then we'd run the full CI which makes packages as the last step.\r\n\r\nIt can be done locally as well:\r\n\r\nAfter `./configure && make` if you run `make dist` it should create a .tar.gz tarball with all the sources. This tarball will then be used as a source from which we build the .deb package.\r\n\r\nTo build the deb package could clone our bullseye CI image:\r\n\r\n```\r\ndocker run -it apache/couchdbci-debian:bullseye-erlang-24.3.4.10\r\n``` \r\n\r\nCopy the dist tarball to it:\r\n```\r\ndocker cp ./apache-couchdb-3.3.2-d5701f4.tar.gz $docker-container-name:/tmp\r\n```\r\n\r\nIn the container then in tmp unpack the tgz into /tmp/couchdb directory:\r\n\r\n```\r\nmkdir -p couchdb\r\ntar -xf ./apache-couchdb-3.3.2-d5701f4.tar.gz -C ./couchdb\r\n```\r\n\r\nThen alongside it also in `/tmp` clone couchdb-pkg repo https://github.com/apache/couchdb-pkg\r\n\r\nSo tmp/ would have\r\n```\r\n/tmp/\r\n  couchdb\r\n  couchdb-pkg\r\n  ...\r\n```\r\n\r\nThen from `couchdb-pkg` run `make`:\r\n```\r\n   cd couchdb-pkg\r\n   make\r\n```\r\n\r\nIt should build deb then:\r\n```\r\njenkins@a52ac07fc336:/tmp/couchdb-pkg$ make\r\nmake `bin/detect-target.sh`\r\nmake[1]: Entering directory '/tmp/couchdb-pkg'\r\ncp debian/control.in debian/control\r\nsed -i 's/%SPIDERMONKEY%/libmozjs-78-0/g' debian/control\r\nsed -i 's/%SPIDERMONKEY_DEV%/libmozjs-78-dev/g' debian/control\r\necho 'SM_VER = 78' > debian/sm_ver.mk\r\nrm -rf /tmp/couchdb/apache-couchdb-3.3.2-d5701f4/debian\r\ncp -R debian /tmp/couchdb/apache-couchdb-3.3.2-d5701f4\r\ncd /tmp/couchdb/apache-couchdb-3.3.2-d5701f4 && dch -v 3.3.2-d5701f4~bullseye \"Automatically generated package from upstream.\"\r\ncd /tmp/couchdb/apache-couchdb-3.3.2-d5701f4 && dpkg-buildpackage -b -us -uc\r\ndpkg-buildpackage: info: source package couchdb\r\ndpkg-buildpackage: info: source version 3.3.2-d5701f4~bullseye\r\ndpkg-buildpackage: info: source distribution UNRELEASED\r\ndpkg-buildpackage: info: source changed by \"CouchDB Developers\" <\"dev@couchdb.apache.org\">\r\ndpkg-buildpackage: info: host architecture amd64\r\n dpkg-source --before-build .\r\n ...\r\n```\r\n\r\nIn the end we should end up in with a .deb package in the `pkgs` directory:\r\n\r\n```\r\n$ ls pkgs/couch/debian-bullseye/*.deb\r\n pkgs/couch/debian-bullseye/couchdb-dbgsym_3.3.2-d5701f4~bullseye_amd64.deb \r\n pkgs/couch/debian-bullseye/couchdb_3.3.2-d5701f4~bullseye_amd64.deb\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1695955504/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1696561722","html_url":"https://github.com/apache/couchdb/pull/4743#issuecomment-1696561722","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4743","id":1696561722,"node_id":"IC_kwDOAAMmUc5lH3o6","user":{"login":"kxepal","id":785983,"node_id":"MDQ6VXNlcjc4NTk4Mw==","avatar_url":"https://avatars.githubusercontent.com/u/785983?v=4","gravatar_id":"","url":"https://api.github.com/users/kxepal","html_url":"https://github.com/kxepal","followers_url":"https://api.github.com/users/kxepal/followers","following_url":"https://api.github.com/users/kxepal/following{/other_user}","gists_url":"https://api.github.com/users/kxepal/gists{/gist_id}","starred_url":"https://api.github.com/users/kxepal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kxepal/subscriptions","organizations_url":"https://api.github.com/users/kxepal/orgs","repos_url":"https://api.github.com/users/kxepal/repos","events_url":"https://api.github.com/users/kxepal/events{/privacy}","received_events_url":"https://api.github.com/users/kxepal/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-28T23:31:19Z","updated_at":"2023-08-28T23:31:19Z","author_association":"MEMBER","body":"Awesome title! Truly there are no monsters under my couch :joy: ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1696561722/reactions","total_count":2,"+1":0,"-1":0,"laugh":2,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1699210890","html_url":"https://github.com/apache/couchdb/issues/4706#issuecomment-1699210890","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4706","id":1699210890,"node_id":"IC_kwDOAAMmUc5lR-aK","user":{"login":"jjrodrig","id":1001724,"node_id":"MDQ6VXNlcjEwMDE3MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1001724?v=4","gravatar_id":"","url":"https://api.github.com/users/jjrodrig","html_url":"https://github.com/jjrodrig","followers_url":"https://api.github.com/users/jjrodrig/followers","following_url":"https://api.github.com/users/jjrodrig/following{/other_user}","gists_url":"https://api.github.com/users/jjrodrig/gists{/gist_id}","starred_url":"https://api.github.com/users/jjrodrig/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jjrodrig/subscriptions","organizations_url":"https://api.github.com/users/jjrodrig/orgs","repos_url":"https://api.github.com/users/jjrodrig/repos","events_url":"https://api.github.com/users/jjrodrig/events{/privacy}","received_events_url":"https://api.github.com/users/jjrodrig/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-08-30T13:42:21Z","updated_at":"2023-08-30T13:42:21Z","author_association":"CONTRIBUTOR","body":"Thanks @nickva for the detailed explanation! I managed to test it locally. \r\n\r\nIt seems that the `dpkg-buildpackage` starts running the clean target and then build couchdb. \r\nThe command `@mix clean --deps` fails as the mix environment is not initialized. \r\n\r\nWe can safely ignore the error in `mix clean` as elixir is not required to complete de package build. \r\n\r\nDo you think could be an option to run the mix cleanning ignoring the errors (`@-mix clean --deps`)?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1699210890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1701998993","html_url":"https://github.com/apache/couchdb/issues/4733#issuecomment-1701998993","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4733","id":1701998993,"node_id":"IC_kwDOAAMmUc5lcnGR","user":{"login":"fr2lancer","id":6251051,"node_id":"MDQ6VXNlcjYyNTEwNTE=","avatar_url":"https://avatars.githubusercontent.com/u/6251051?v=4","gravatar_id":"","url":"https://api.github.com/users/fr2lancer","html_url":"https://github.com/fr2lancer","followers_url":"https://api.github.com/users/fr2lancer/followers","following_url":"https://api.github.com/users/fr2lancer/following{/other_user}","gists_url":"https://api.github.com/users/fr2lancer/gists{/gist_id}","starred_url":"https://api.github.com/users/fr2lancer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fr2lancer/subscriptions","organizations_url":"https://api.github.com/users/fr2lancer/orgs","repos_url":"https://api.github.com/users/fr2lancer/repos","events_url":"https://api.github.com/users/fr2lancer/events{/privacy}","received_events_url":"https://api.github.com/users/fr2lancer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-01T01:48:02Z","updated_at":"2023-09-01T01:48:02Z","author_association":"NONE","body":"Thank you so much. I ended up copy whole files.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1701998993/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1702635483","html_url":"https://github.com/apache/couchdb/issues/2635#issuecomment-1702635483","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2635","id":1702635483,"node_id":"IC_kwDOAAMmUc5lfCfb","user":{"login":"streunerlein","id":895834,"node_id":"MDQ6VXNlcjg5NTgzNA==","avatar_url":"https://avatars.githubusercontent.com/u/895834?v=4","gravatar_id":"","url":"https://api.github.com/users/streunerlein","html_url":"https://github.com/streunerlein","followers_url":"https://api.github.com/users/streunerlein/followers","following_url":"https://api.github.com/users/streunerlein/following{/other_user}","gists_url":"https://api.github.com/users/streunerlein/gists{/gist_id}","starred_url":"https://api.github.com/users/streunerlein/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/streunerlein/subscriptions","organizations_url":"https://api.github.com/users/streunerlein/orgs","repos_url":"https://api.github.com/users/streunerlein/repos","events_url":"https://api.github.com/users/streunerlein/events{/privacy}","received_events_url":"https://api.github.com/users/streunerlein/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-01T11:59:56Z","updated_at":"2023-09-01T12:02:26Z","author_association":"NONE","body":"@natcohen I see your efforts here and appreciate them a lot. We are also eagerly looking out for an n-gram analyzer in Clouseau - but it seems to be very low priority. If you look for auto-complete we've had good experience with prefix searches using the wildcard at the end (*) - that works out of the box.\r\n\r\n**Prefix-Search** _(aka words starting with X)_\r\nOut-of-the-box, index the field normally and query with tailing wildcard (`value*`).\r\n\r\n**Suffix-Search** _(aka words ending with X)_\r\nThe other way around, suffix search (tokens ending certain things), that is trickier but we are working on a prototype that might just allow that:\r\n\r\n - Index string as you normally would (`index(\"field\", \"value\")`) to allow prefix search\r\n - Index the string again in a different field but reversed (`index(\"r_field\", \"eulav\")`) to allow suffix search\r\n\r\nWhen you perform searches search in both fields add the input twice, once with the query reversed on the reversed field:\r\n`field:value* r_field:eulav*`\r\n\r\nwhich will search for tokens starting with \"value\" or ending with \"value\". \r\n\r\nWhat is left is **infix search**, so words containing \"value\" for which I think ngram-analyzer are the only way to go.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1702635483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1703174645","html_url":"https://github.com/apache/couchdb/pull/4662#issuecomment-1703174645","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4662","id":1703174645,"node_id":"IC_kwDOAAMmUc5lhGH1","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-01T18:34:34Z","updated_at":"2023-09-01T18:40:15Z","author_association":"CONTRIBUTOR","body":"I noticed two failures in the full CI failure, both on ppc64le (Power) platform:\r\n\r\n```\r\n[2023-09-01T17:10:20.217Z] module 'mango_cursor'\r\n[2023-09-01T17:10:24.962Z]   mango_cursor:561: create_test_ (t_create_regular)...*timed out*\r\n[2023-09-01T17:10:24.962Z] in function proc_lib:sync_start/2 (proc_lib.erl, line 293)\r\n[2023-09-01T17:10:24.962Z] in call from meck_proc:set_expect/2 (src/meck_proc.erl, line 110)\r\n[2023-09-01T17:10:24.962Z] in call from meck:expect/4 (src/meck.erl, line 272)\r\n[2023-09-01T17:10:24.962Z] in call from mango_cursor:t_create_regular/1 (src/mango_cursor.erl, line 587)\r\n[2023-09-01T17:10:24.962Z] in call from eunit_test:run_testfun/1 (eunit_test.erl, line 71)\r\n[2023-09-01T17:10:24.962Z] in call from eunit_proc:run_test/1 (eunit_proc.erl, line 531)\r\n[2023-09-01T17:10:24.963Z] in call from eunit_proc:with_timeout/3 (eunit_proc.erl, line 356)\r\n[2023-09-01T17:10:24.963Z] in call from eunit_proc:handle_test/2 (eunit_proc.erl, line 514)\r\n[2023-09-01T17:10:24.963Z]   undefined\r\n[2023-09-01T17:10:34.455Z] mango_cursor:562: create_test_ (t_create_user_specified_index)...[4.819 s] ok\r\n[2023-09-01T17:10:43.255Z] mango_cursor:563: create_test_ (t_create_invalid_user_specified_index)...[4.833 s] ok\r\n```\r\n\r\nIt looks like the surrounding tests are close to 5 seconds and the Power runner is usually the slowest runner. So it maybe that we need a longer timeout for those tests.\r\n\r\nTried to increase the timeouts a bit: https://github.com/apache/couchdb/pull/4745","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1703174645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1703187767","html_url":"https://github.com/apache/couchdb/pull/4745#issuecomment-1703187767","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4745","id":1703187767,"node_id":"IC_kwDOAAMmUc5lhJU3","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-01T18:47:01Z","updated_at":"2023-09-01T18:47:01Z","author_association":"CONTRIBUTOR","body":"Thanks @nickva for fixing this.  I agree with the approach and I will approve it if it can fix the issue.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1703187767/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1703278088","html_url":"https://github.com/apache/couchdb/pull/4745#issuecomment-1703278088","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4745","id":1703278088,"node_id":"IC_kwDOAAMmUc5lhfYI","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-01T20:19:21Z","updated_at":"2023-09-01T20:20:03Z","author_association":"CONTRIBUTOR","body":"that seems to have fixed it: https://github.com/apache/couchdb/pull/4746\r\n\r\n<img width=\"504\" alt=\"Screenshot 2023-09-01 at 4 19 50 PM\" src=\"https://github.com/apache/couchdb/assets/211822/6cd7f84a-048b-4922-a3f7-d544b4c3eb04\">\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1703278088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1703279347","html_url":"https://github.com/apache/couchdb/pull/4746#issuecomment-1703279347","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4746","id":1703279347,"node_id":"IC_kwDOAAMmUc5lhfrz","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-01T20:20:42Z","updated_at":"2023-09-01T20:20:42Z","author_association":"CONTRIBUTOR","body":"full CI passes with the increased time-out, closing the draft PR\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1703279347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1703383207","html_url":"https://github.com/apache/couchdb/issues/2634#issuecomment-1703383207","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2634","id":1703383207,"node_id":"IC_kwDOAAMmUc5lh5Cn","user":{"login":"jiahuili430","id":54631519,"node_id":"MDQ6VXNlcjU0NjMxNTE5","avatar_url":"https://avatars.githubusercontent.com/u/54631519?v=4","gravatar_id":"","url":"https://api.github.com/users/jiahuili430","html_url":"https://github.com/jiahuili430","followers_url":"https://api.github.com/users/jiahuili430/followers","following_url":"https://api.github.com/users/jiahuili430/following{/other_user}","gists_url":"https://api.github.com/users/jiahuili430/gists{/gist_id}","starred_url":"https://api.github.com/users/jiahuili430/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiahuili430/subscriptions","organizations_url":"https://api.github.com/users/jiahuili430/orgs","repos_url":"https://api.github.com/users/jiahuili430/repos","events_url":"https://api.github.com/users/jiahuili430/events{/privacy}","received_events_url":"https://api.github.com/users/jiahuili430/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-01T22:20:15Z","updated_at":"2023-09-01T22:20:15Z","author_association":"CONTRIBUTOR","body":"Fixed in PR #4703, so close this issue.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1703383207/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1703383422","html_url":"https://github.com/apache/couchdb/issues/2634#issuecomment-1703383422","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2634","id":1703383422,"node_id":"IC_kwDOAAMmUc5lh5F-","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-01T22:20:39Z","updated_at":"2023-09-01T22:20:39Z","author_association":"CONTRIBUTOR","body":"Thank you, @jiahuili430!","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1703383422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1705590531","html_url":"https://github.com/apache/couchdb/issues/4747#issuecomment-1705590531","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4747","id":1705590531,"node_id":"IC_kwDOAAMmUc5lqT8D","user":{"login":"big-r81","id":9985963,"node_id":"MDQ6VXNlcjk5ODU5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9985963?v=4","gravatar_id":"","url":"https://api.github.com/users/big-r81","html_url":"https://github.com/big-r81","followers_url":"https://api.github.com/users/big-r81/followers","following_url":"https://api.github.com/users/big-r81/following{/other_user}","gists_url":"https://api.github.com/users/big-r81/gists{/gist_id}","starred_url":"https://api.github.com/users/big-r81/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-r81/subscriptions","organizations_url":"https://api.github.com/users/big-r81/orgs","repos_url":"https://api.github.com/users/big-r81/repos","events_url":"https://api.github.com/users/big-r81/events{/privacy}","received_events_url":"https://api.github.com/users/big-r81/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-04T18:07:58Z","updated_at":"2023-09-04T18:07:58Z","author_association":"CONTRIBUTOR","body":"Hi,\n\nyou can increase the log level to see whether the behavior is triggered through CouchDB. We have a great documentation at https://docs.couchdb.org. You can search for \"logging\" (as a small hint).\n\nRestart CouchDB after changing the ini file and observe your log files if there are any new infos.\n\nAt the moment, we can't give any advice to you, because you didn't proven that CouchDB is the problem.\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1705590531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1705600366","html_url":"https://github.com/apache/couchdb/issues/4748#issuecomment-1705600366","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4748","id":1705600366,"node_id":"IC_kwDOAAMmUc5lqWVu","user":{"login":"big-r81","id":9985963,"node_id":"MDQ6VXNlcjk5ODU5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9985963?v=4","gravatar_id":"","url":"https://api.github.com/users/big-r81","html_url":"https://github.com/big-r81","followers_url":"https://api.github.com/users/big-r81/followers","following_url":"https://api.github.com/users/big-r81/following{/other_user}","gists_url":"https://api.github.com/users/big-r81/gists{/gist_id}","starred_url":"https://api.github.com/users/big-r81/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-r81/subscriptions","organizations_url":"https://api.github.com/users/big-r81/orgs","repos_url":"https://api.github.com/users/big-r81/repos","events_url":"https://api.github.com/users/big-r81/events{/privacy}","received_events_url":"https://api.github.com/users/big-r81/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-04T18:22:55Z","updated_at":"2023-09-04T18:22:55Z","author_association":"CONTRIBUTOR","body":"You need to add the path to you couchdb config dir.\r\n```\r\n$ ./bin/weatherreport --help\r\nUsage: weatherreport  [-c <etc>] [-d <level>] [-e] [-h] [-l] [-a] [-t <timeout>] [check_name ...]\r\n\r\n  -c, --etc             Path to the CouchDB configuration directory\r\n  -d, --level           Minimum message severity level (default: notice)\r\n  -e, --expert          Perform more detailed diagnostics\r\n  -h, --help            Display help/usage\r\n  -l, --list            Describe available diagnostic tasks\r\n  -a, --all-nodes       Run weatherreport on all cluster nodes\r\n  -t, --timeout         Timeout value (in ms) for each diagnostic check\r\n  check_name            A specific check to run\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1705600366/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1706470504","html_url":"https://github.com/apache/couchdb/pull/4749#issuecomment-1706470504","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4749","id":1706470504,"node_id":"IC_kwDOAAMmUc5ltqxo","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-05T11:47:02Z","updated_at":"2023-09-05T11:47:02Z","author_association":"MEMBER","body":"Noting that these changes bring nouveau index build times in line with clouseau index build times; they come out the same.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1706470504/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1707183434","html_url":"https://github.com/apache/couchdb/issues/4448#issuecomment-1707183434","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4448","id":1707183434,"node_id":"IC_kwDOAAMmUc5lwY1K","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-05T19:16:15Z","updated_at":"2023-09-05T19:16:15Z","author_association":"CONTRIBUTOR","body":"To avoid managing a new data state directory (config option, checking for disk space, handling read-only or other errors), it would be a lot simpler to manage the checkpoints as simple _local docs in _dbs. There is precedent for using that exact mechanism for shard splitting job management.\r\n\r\nThe general idea is that there is a general mechanism to traverse databases and ddocs. Periodically it will update its checkpoint in `_dbs/_local/scanner_checkpoint` doc with the current db and ddoc (and some job id, start time, initial settings, and a few other bits if needed). \r\n\r\nThen, as the traversal happens, a call is made to each of the configured callback modules(`scanner_quickjs_compact_check`, 'scanner_size_stats`, ...) with the db and ddoc in turn. After all the callbacks are called the context for each individual module will be updated. It can be a simple map (json object). Then each module can do its own processing: write to some database, write to disk, log a report, etc.\r\n\r\nThe configuration could look something like:\r\n\r\n```ini\r\n[scanner]\r\nenable = true | false\r\nschedule_period = once | every_week | every_day | ...\r\n\r\n[scanner.$module] ...\r\nenable = true | false\r\n... $module specific settings ...\r\n```\r\n\r\nFor instance:\r\n\r\n```ini\r\n[scanner.quickjs_compat_check]\r\nenable = true | false\r\nsample_docs = 100\r\ncheck_reduce = true | false\r\nlog_report_level = warning\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1707183434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1707443669","html_url":"https://github.com/apache/couchdb/issues/4748#issuecomment-1707443669","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4748","id":1707443669,"node_id":"IC_kwDOAAMmUc5lxYXV","user":{"login":"fr2lancer","id":6251051,"node_id":"MDQ6VXNlcjYyNTEwNTE=","avatar_url":"https://avatars.githubusercontent.com/u/6251051?v=4","gravatar_id":"","url":"https://api.github.com/users/fr2lancer","html_url":"https://github.com/fr2lancer","followers_url":"https://api.github.com/users/fr2lancer/followers","following_url":"https://api.github.com/users/fr2lancer/following{/other_user}","gists_url":"https://api.github.com/users/fr2lancer/gists{/gist_id}","starred_url":"https://api.github.com/users/fr2lancer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fr2lancer/subscriptions","organizations_url":"https://api.github.com/users/fr2lancer/orgs","repos_url":"https://api.github.com/users/fr2lancer/repos","events_url":"https://api.github.com/users/fr2lancer/events{/privacy}","received_events_url":"https://api.github.com/users/fr2lancer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-05T23:37:19Z","updated_at":"2023-09-05T23:41:14Z","author_association":"NONE","body":"Hi @big-r81 Thanks for the commenting.\r\n\r\nJust a bit hard to get it,\r\n\r\nexport PATH=$PATH:/opt/couchdb/erts-12.3.2.10/bin/\r\n**export PATH=$PATH:/opt/couchdb/etc/ <- is that what you meant?**\r\n\r\n\r\n./bin/weatherreport\r\n{\"init terminating in do_boot\",{'cannot get bootfile','no_dot_erlang.boot'}}\r\ninit terminating in do_boot ({cannot get bootfile,no_dot_erlang.boot})\r\n\r\nCrash dump is being written to: erl_crash.dump...done\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1707443669/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1708080997","html_url":"https://github.com/apache/couchdb/issues/4748#issuecomment-1708080997","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4748","id":1708080997,"node_id":"IC_kwDOAAMmUc5lzz9l","user":{"login":"big-r81","id":9985963,"node_id":"MDQ6VXNlcjk5ODU5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9985963?v=4","gravatar_id":"","url":"https://api.github.com/users/big-r81","html_url":"https://github.com/big-r81","followers_url":"https://api.github.com/users/big-r81/followers","following_url":"https://api.github.com/users/big-r81/following{/other_user}","gists_url":"https://api.github.com/users/big-r81/gists{/gist_id}","starred_url":"https://api.github.com/users/big-r81/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-r81/subscriptions","organizations_url":"https://api.github.com/users/big-r81/orgs","repos_url":"https://api.github.com/users/big-r81/repos","events_url":"https://api.github.com/users/big-r81/events{/privacy}","received_events_url":"https://api.github.com/users/big-r81/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-06T10:28:59Z","updated_at":"2023-09-06T10:28:59Z","author_association":"CONTRIBUTOR","body":"> **export PATH=$PATH:/opt/couchdb/etc/ <- is that what you meant?**\r\n> \r\nNo.\r\n\r\nYou need to add the path to the CouchDB etc directory as an argument to `weatherreport` like\r\n```\r\n$ ./bin/weatherreport --etc /path/to/couchdb/etc\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1708080997/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1709893420","html_url":"https://github.com/apache/couchdb/pull/4673#issuecomment-1709893420","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4673","id":1709893420,"node_id":"IC_kwDOAAMmUc5l6ucs","user":{"login":"arturog","id":336811,"node_id":"MDQ6VXNlcjMzNjgxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/336811?v=4","gravatar_id":"","url":"https://api.github.com/users/arturog","html_url":"https://github.com/arturog","followers_url":"https://api.github.com/users/arturog/followers","following_url":"https://api.github.com/users/arturog/following{/other_user}","gists_url":"https://api.github.com/users/arturog/gists{/gist_id}","starred_url":"https://api.github.com/users/arturog/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arturog/subscriptions","organizations_url":"https://api.github.com/users/arturog/orgs","repos_url":"https://api.github.com/users/arturog/repos","events_url":"https://api.github.com/users/arturog/events{/privacy}","received_events_url":"https://api.github.com/users/arturog/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-07T10:18:54Z","updated_at":"2023-09-07T10:18:54Z","author_association":"NONE","body":"I am coming back to couchdb updating an old application that *has already* implemented the above (per-document access, with linux-like permissions like owner/read/write access, even per-field protection on the doc).  I personally don't like this feature and wouldn't like to see it merged:\r\n\r\n- This kind of security requirement is almost always specific to the application.  In my case, for example, this solution is not fit for purpose.\r\n- Most of the time a front-end application server is better suited to handle security requirements, which might be complex.\r\n- I believe CouchDB should stick to being a database.  We should refine the current codebase instead.\r\n- If we need to implement this kind of functionality (like in my case), we are better off providing a plugin/hook system where can enter the validate and read lifecycle of the document.  Devs are free to implement what they want and we could provide a working example. (This is what *I* did).  Providing a `_custom_<field>` on documents for devs to freely use would be great.\r\n- Are we going to filter the views?  Are we going to filter the document counts on views?  What about leaking information on views?  Some views need some info, some others not?  Will I sometimes use per-user view, sometimes the global views?  And what about searching with Lucene?  I feel we should not touch our indices.\r\n- Replicating documents *into* your database where the _access field changes, are we doing that?  Will devs want a \"master\" where the `_access` field is allowed to change, and slaves where you won't?  Is the ultimate purpose of this PR to segregate documents within your own DB?  Then why not create per-user DBs?\r\n\r\nI would be in favour of document lifecycle plugins/hooks, where we can implement this feature and many others.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1709893420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1710047327","html_url":"https://github.com/apache/couchdb/pull/4673#issuecomment-1710047327","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4673","id":1710047327,"node_id":"IC_kwDOAAMmUc5l7UBf","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-07T12:16:08Z","updated_at":"2023-09-07T12:16:08Z","author_association":"MEMBER","body":"@arturog\r\n\r\nI think secondary indexes would need to be updated to support this for it to have the desired effect (restricting a user's visibility of a database to a subset). I'm sure we've not done that work for dreyfus/clouseau (and I definitely haven't for nouveau). \r\n\r\nI share your concern that this implementation might not meet everyone's needs, but that's not necessarily a blocker. It just needs to meet a significant number of people's needs.\r\n\r\nI don't find \"I believe CouchDB should stick to being a database.\" compelling. Other databases have richer permissions and access controls that we currently do, they're not off-topic. \r\n\r\nThe PR changes a number of internal records which prevents a smooth upgrade of existing CouchDB clusters and is blocked from merging until that is fixed imo, so there's time to think.\r\n\r\nWe currently have `validate_doc_update` where you can implement any kind of write control logic, but no equivalent for reads (or view queries besides the deprecated _list option). If Javascript were evaluated more efficiently (c.f, the `quickjs` embedding idea) we might add that.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1710047327/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1710208649","html_url":"https://github.com/apache/couchdb/pull/4673#issuecomment-1710208649","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4673","id":1710208649,"node_id":"IC_kwDOAAMmUc5l77aJ","user":{"login":"arturog","id":336811,"node_id":"MDQ6VXNlcjMzNjgxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/336811?v=4","gravatar_id":"","url":"https://api.github.com/users/arturog","html_url":"https://github.com/arturog","followers_url":"https://api.github.com/users/arturog/followers","following_url":"https://api.github.com/users/arturog/following{/other_user}","gists_url":"https://api.github.com/users/arturog/gists{/gist_id}","starred_url":"https://api.github.com/users/arturog/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arturog/subscriptions","organizations_url":"https://api.github.com/users/arturog/orgs","repos_url":"https://api.github.com/users/arturog/repos","events_url":"https://api.github.com/users/arturog/events{/privacy}","received_events_url":"https://api.github.com/users/arturog/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-07T14:01:27Z","updated_at":"2023-09-07T14:01:27Z","author_association":"NONE","body":"> We currently have validate_doc_update where you can implement any kind of write control logic, but no equivalent for reads (or view queries besides the deprecated _list option). If Javascript were evaluated more efficiently (c.f, the quickjs embedding idea) we might add that.\r\n\r\nWe implemented a fork of CouchDB with exactly that (a `validate_doc_read`), with code written in Erlang.  We also added our own `validate_doc_write` in Erlang before the JS one kicks in.  If extended, I believe it can provide not only this feature, but much more.  Also, the issue of leaking out data in indices (specially to the lucene index) lead me to limit indexing to only public fields -- so the field-access was also born.  Indices in CouchDB were kept untouched, and though all views had the full set of `_id`s, on document access (or requesting the full document via views), you would get `<unauthorized>`.  Our implementation was not meant to present a \"subset\" of documents, but instead control access to the document.\r\n\r\nPerhaps the requirement to present a *subset* of the database needs to be revisited?  If this requirement were to be dropped, things might become easier.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1710208649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1711068840","html_url":"https://github.com/apache/couchdb/issues/4748#issuecomment-1711068840","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4748","id":1711068840,"node_id":"IC_kwDOAAMmUc5l_Nao","user":{"login":"baylisscg","id":189446,"node_id":"MDQ6VXNlcjE4OTQ0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/189446?v=4","gravatar_id":"","url":"https://api.github.com/users/baylisscg","html_url":"https://github.com/baylisscg","followers_url":"https://api.github.com/users/baylisscg/followers","following_url":"https://api.github.com/users/baylisscg/following{/other_user}","gists_url":"https://api.github.com/users/baylisscg/gists{/gist_id}","starred_url":"https://api.github.com/users/baylisscg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baylisscg/subscriptions","organizations_url":"https://api.github.com/users/baylisscg/orgs","repos_url":"https://api.github.com/users/baylisscg/repos","events_url":"https://api.github.com/users/baylisscg/events{/privacy}","received_events_url":"https://api.github.com/users/baylisscg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-08T04:48:04Z","updated_at":"2023-09-08T04:50:20Z","author_association":"NONE","body":"That doesn't work. It looks like weatherreport relies on the `no_dot_erlang.boot` binary that's part of Erlang but not included in the erts distribution Couch bundles. So out-of-the-box `weatherreport` won't run at least from the official packages.\r\n\r\nEdit: installing `erlang-base` on Ubuntu adds `no_dot_erlang.boot`. It still doesn't work but it's actually doing something now and returning `Could not connect to the local cluster node`","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1711068840/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1711085896","html_url":"https://github.com/apache/couchdb/issues/4748#issuecomment-1711085896","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4748","id":1711085896,"node_id":"IC_kwDOAAMmUc5l_RlI","user":{"login":"baylisscg","id":189446,"node_id":"MDQ6VXNlcjE4OTQ0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/189446?v=4","gravatar_id":"","url":"https://api.github.com/users/baylisscg","html_url":"https://github.com/baylisscg","followers_url":"https://api.github.com/users/baylisscg/followers","following_url":"https://api.github.com/users/baylisscg/following{/other_user}","gists_url":"https://api.github.com/users/baylisscg/gists{/gist_id}","starred_url":"https://api.github.com/users/baylisscg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/baylisscg/subscriptions","organizations_url":"https://api.github.com/users/baylisscg/orgs","repos_url":"https://api.github.com/users/baylisscg/repos","events_url":"https://api.github.com/users/baylisscg/events{/privacy}","received_events_url":"https://api.github.com/users/baylisscg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-08T05:14:14Z","updated_at":"2023-09-08T05:17:03Z","author_association":"NONE","body":"Looks like there needs to be a wrapper script like for remsh you can kick it off using what's in the package with \r\n\r\n```\r\n/opt/couchdb/erts-12.3.2.10/bin/erl +B -boot /opt/couchdb/releases/3.3.2/start_clean -noshell weatherreport/weatherreport/ebin -run escript start -extra /opt/couchdb/bin/weatherreport --etc /opt/couchdb/etc/ -d debug\r\n```\r\n\r\nBut, again, it throws `Could not connect to the local cluster node` and a bunch of `Bad rpc call executing` errors but that's a _different_ problem\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1711085896/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1711835765","html_url":"https://github.com/apache/couchdb/pull/4753#issuecomment-1711835765","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4753","id":1711835765,"node_id":"IC_kwDOAAMmUc5mCIp1","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-08T15:18:25Z","updated_at":"2023-09-08T15:18:25Z","author_association":"MEMBER","body":"(this was part of the squashed \"import nouveau\" pull request)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1711835765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1711846912","html_url":"https://github.com/apache/couchdb/pull/4753#issuecomment-1711846912","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4753","id":1711846912,"node_id":"IC_kwDOAAMmUc5mCLYA","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-08T15:26:31Z","updated_at":"2023-09-08T15:26:31Z","author_association":"CONTRIBUTOR","body":"One aspect is that the previously we handled the IPv6 address format `{O1, O2, O3, O4, O5, O6, O7, O8}` and we'd be losing that.\r\n\r\nAt some point in the future that might make a nice addition to upstream Mochiweb perhaps:\r\nhttps://github.com/mochi/mochiweb/blob/main/src/mochiweb_request.erl#L165-L207","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1711846912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1711861709","html_url":"https://github.com/apache/couchdb/pull/4753#issuecomment-1711861709","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4753","id":1711861709,"node_id":"IC_kwDOAAMmUc5mCO_N","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-08T15:37:55Z","updated_at":"2023-09-08T15:37:55Z","author_association":"MEMBER","body":"`{ok, {Addr, _Port}} -> inet_parse:ntoa(Addr);` handles the ipv6 path, though it obviously doesn't handle x-forwarded-for for that case.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1711861709/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1714283996","html_url":"https://github.com/apache/couchdb/pull/4755#issuecomment-1714283996","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4755","id":1714283996,"node_id":"IC_kwDOAAMmUc5mLeXc","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-11T17:15:57Z","updated_at":"2023-09-11T17:15:57Z","author_association":"MEMBER","body":"I like the coverage but I don't think it tests _couchdb_. It asserts the behaviour of a mochiweb function, but not whether we call it and use the result to populate `peer`\r\n\r\nThere are a few problems in general;\r\n\r\n1) we don't document that `peer` honors x-forwarded-for in the docs afaict, and obviously there's no test for it\r\n2) third party applications can't safely use the internal `httpd` record or assume what `peer` means in the absence of 1)\r\n\r\nI think this test needs to be on the elixir integration suite instead and assert that the client ip is logged, but also there should be a public function in couchdb that other apps can call that explicitly says how it calculates peer. \r\n\r\ncouchdb's current usage is fine, it asks mochiweb for the peer, using a public function, and logs it. Apps making assumptions about that, particularly about unpublished internals, are skating on thin ice. doing so without an integration test just invites disappointment.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1714283996/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1714287565","html_url":"https://github.com/apache/couchdb/pull/4755#issuecomment-1714287565","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4755","id":1714287565,"node_id":"IC_kwDOAAMmUc5mLfPN","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-11T17:18:39Z","updated_at":"2023-09-11T17:18:39Z","author_association":"MEMBER","body":"I should say, even if it does test couchdb (that is touch real chttpd and real mochiweb, not mocked versions), the problem we're addressing was not what couchdb logged anyway. it was other apps co-opting the `peer` value to log it in an entirely separate way. A PR for that specifically is in order.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1714287565/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1714289761","html_url":"https://github.com/apache/couchdb/pull/4755#issuecomment-1714289761","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4755","id":1714289761,"node_id":"IC_kwDOAAMmUc5mLfxh","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-11T17:20:20Z","updated_at":"2023-09-11T17:20:20Z","author_association":"CONTRIBUTOR","body":"Closing as this is not addressing the real problem.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1714289761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1714673445","html_url":"https://github.com/apache/couchdb/issues/4448#issuecomment-1714673445","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4448","id":1714673445,"node_id":"IC_kwDOAAMmUc5mM9cl","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-11T22:32:57Z","updated_at":"2023-09-11T22:33:13Z","author_association":"CONTRIBUTOR","body":"The callback API for each scanner module might look like:\r\n\r\n```erlang\r\n{ok, Ctx} = start_scan(#{session_id => Uuid, start_timestamp => UnixTs})\r\n{ok, Ctx1} = start_db(Ctx, DbName)\r\n{ok, Ctx1} = ddoc(Ctx, DbName, DDoc = #doc{})\r\n{ok, Ctx1} = shard(Ctx, Db)\r\n{ok, Ctx1} = end_db(Ctx, DbName)\r\nok = end_scan(Ctx)\r\n```\r\n\r\nThis flow would be initialized and kept for each module individually. The scanner server process would hold a context that looks like:\r\n\r\n ```erlang\r\n\r\n #state{modstates = #{Module1 => Ctx1, Module2 => Ctx2} ....}\r\n ```\r\n\r\nThe scan would be run on all the nodes. During scanning only the dbs with the first shard copy on that node would be scanned. The API doesn't call per-document callback. The idea would be that each plugin them may choose to sample only some docs or process all the docs or simply return `{ok, Ctx}` and move on.\r\n\r\nA few events might stop or pause scanning:\r\n  * cluster membership changes (or just nodelist changes?)\r\n  * configuration change (should .ini configuration changes stop and reset the scan?)\r\n  \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1714673445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1715549181","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1715549181","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1715549181,"node_id":"IC_kwDOAAMmUc5mQTP9","user":{"login":"ricellis","id":10698320,"node_id":"MDQ6VXNlcjEwNjk4MzIw","avatar_url":"https://avatars.githubusercontent.com/u/10698320?v=4","gravatar_id":"","url":"https://api.github.com/users/ricellis","html_url":"https://github.com/ricellis","followers_url":"https://api.github.com/users/ricellis/followers","following_url":"https://api.github.com/users/ricellis/following{/other_user}","gists_url":"https://api.github.com/users/ricellis/gists{/gist_id}","starred_url":"https://api.github.com/users/ricellis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ricellis/subscriptions","organizations_url":"https://api.github.com/users/ricellis/orgs","repos_url":"https://api.github.com/users/ricellis/repos","events_url":"https://api.github.com/users/ricellis/events{/privacy}","received_events_url":"https://api.github.com/users/ricellis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-12T11:30:22Z","updated_at":"2023-09-12T11:30:22Z","author_association":"NONE","body":"Apologies for the delay in commenting here, I missed it initially in vacation season.\r\n\r\n>Appreciating the difficulties with augmenting existing endpoints, I think\r\nit's worth considering adding \"selector\" and \"fields\" support to the\r\nexisting _all_docs, view and search endpoints.\r\n\r\nI can see the appeal of this suggestion as a neat way to direct mango-style queries to a specific index without the need to add additional endpoints. However, the problem I see is that the response structure for view-like things, searches and mango queries are all a bit different.\r\n\r\nI'd be completely opposed to different response structures being returned depending on the request properties. For example IMO a call to `_all_docs` with a `selector` should definitely not return an array of `\"docs\":[{…},…]` like `_find` does because it does not conform with the normally expected pattern for `_all_docs` repsonses of `\"rows\":[{…\"doc\":{…}},…]`.\r\nThat kind of response structure toggling makes using endpoints unwieldy and confusing for users and also makes them hard to describe accurately and correctly in tooling and documentation.\r\n\r\nTo go down that route I'd say the responses would need to be transformed (or maybe it is actually _not_ transformed) from the underlying index response to retain the existing structures used by the endpoints being augmented. That might in turn result in a loss of fidelity for some things and although additional response properties could be added relatively painlessly a proliferation of additional response properties that are only populated under certain request conditions is also not very user friendly (e.g. adding a `bookmark` that is only populated with a `selector` but not on a normal `_all_docs`, or `execution_stats` etc).\r\n\r\nFurther I think consideration of the impact on the request options is also needed, like how combinations could (or could _appear_ to) operate. For example:\r\nwhat would it mean to provide a `selector` to a view-like endpoint with `include_docs=false`?\r\nor request `fields=[\"foo\",\"bar\"]&include_docs=true` on a normal view-like request?\r\n\r\nThe more APIs are dual-purposed and additional options bolted onto existing endpoints the more potential combinations surface that seem to make sense to users, but are invalid in the implementation. Again this leads to APIs that are harder to document and use. It isn't great for usability to have to fathom a giant matrix of option combinations from the manual. Sure validation can be added, but even then potentially making multiple requests getting `400` responses before landing on a valid combination isn't a good experience.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1715549181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1715617479","html_url":"https://github.com/apache/couchdb/pull/4735#issuecomment-1715617479","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4735","id":1715617479,"node_id":"IC_kwDOAAMmUc5mQj7H","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-12T12:19:33Z","updated_at":"2023-09-12T13:48:34Z","author_association":"CONTRIBUTOR","body":"Thanks for the comments @rnewson!\r\n\r\nIf I understand correctly, the way how `fabric` and `rexi` are currently implemented and the way how `mango` uses it for `view` queries causes the problem.  The `stop` reply at the coordinator level makes `fabric` to stop all the workers immediately so there is no chance for the `complete` message to arrive.  This decision happens when there are no more rows needed and the coordinator already has all the required data at hand.  It would have to wait some more for the `complete` message to arrive and record the execution statistics properly.  But this is not something that `fabric` supports on receiving a `stop`.  The whole execution therefore becomes a race and if the worker is not quick enough to send the `complete` message before it is stopped, the statistics data will be lost.\r\n\r\nThe `complete` message is sent only if the `limit` for `fabric` reaches zero:\r\n\r\nhttps://github.com/apache/couchdb/blob/86df356a8a396a5c165107e6d57f405741257a99/src/fabric/src/fabric_view_map.erl#L178-L204\r\n\r\nBut `mango` implements its own `limit` atop views which is independent from that:\r\n\r\nhttps://github.com/apache/couchdb/blob/86df356a8a396a5c165107e6d57f405741257a99/src/mango/src/mango_cursor_view.erl#L526-L540\r\n\r\nThat is, in terms of `fabric`, `mango`'s occasional `stop` is unexpected technically.  In such cases, it is basically passed down to `rexi`:\r\n\r\nhttps://github.com/apache/couchdb/blob/86df356a8a396a5c165107e6d57f405741257a99/src/fabric/src/fabric_view_map.erl#L106-L122\r\n\r\nThere `stop` means that messages from the coordinator's mailbox will not be read further.\r\n\r\nhttps://github.com/apache/couchdb/blob/86df356a8a396a5c165107e6d57f405741257a99/src/rexi/src/rexi_utils.erl#L41-L64\r\n\r\nThen the main loop in `fabric` ends and the workers are cleaned up:\r\n\r\nhttps://github.com/apache/couchdb/blob/86df356a8a396a5c165107e6d57f405741257a99/src/fabric/src/fabric_view_map.erl#L63-L68\r\n\r\nThat is why I was unsure if the approach in the PR is the right one and it is not something that tackles the symptoms only and does not fix the underlying root cause.  But I am afraid that `fabric` cannot offer guarantees about `complete` in such cases because that is not how it was originally designed...?\r\n\r\nMy other concern was certainly the bandwidth usage itself.  By this approach, the number of messages sent per rows doubles which may have its own performance implications.  But I cannot judge how much it means in practice, if there is an optimization somewhere down in the stack that helps with that and can make the associated costs amortized.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1715617479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1715638846","html_url":"https://github.com/apache/couchdb/pull/4735#issuecomment-1715638846","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4735","id":1715638846,"node_id":"IC_kwDOAAMmUc5mQpI-","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-12T12:33:50Z","updated_at":"2023-09-12T12:33:50Z","author_association":"MEMBER","body":"That's very helpful background. You are right that it was t anticipated we'd need information back about a worker we know we no longer need to calculate the response. \n\nIt would be better to address that directly if we can. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1715638846/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1715713111","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1715713111","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1715713111,"node_id":"IC_kwDOAAMmUc5mQ7RX","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-12T13:19:48Z","updated_at":"2023-09-12T13:20:20Z","author_association":"MEMBER","body":"@ricellis this is excellent feedback. I agree with your point about the several dimensions of confusion that we could introduce here, and our existing querying and indexing system is already confused. I don't want to make it worse.\r\n\r\nIt is no secret that I think mango was a mistake in its entirety and this colours my response to any attempt to change it. I dislike it, I think, for objective reasons. It promises much and delivers little, and every user of it that accidentally ends up doing full database reads on every query because they, quite reasonably, believed they were using a query interface, is a user we have harmed.\r\n\r\nIt is in that spirit that I objected to the original idea of this PR, to add another request body option to mean \"I _really_ mean you must use this index\" because `use_index` is only advisory, despite its confident-sounding name.\r\n\r\nHowever, adding selector as an option to `_view` and `_search` has problems, as you've noted.\r\n\r\nSo, I think we need another way.\r\n\r\nI very much dislike the path of `_find` at the db level. The server side is insufficiently powerful today and, quite likely, will be forever, it is inappropriate to suggest that something clever happens on the server side. All that happens is the least-worst index for your selector is chosen and the rest is brute-forced. The diligence required by users to ensure they hit an index is high, and frequently not met. \r\n\r\nRather than an additional request body parameter to `/db/_find`, perhaps we could add the index to the url path, but still end in `_find`? The request and response body stay in 'find' format (barring any fields that might be obsolete by the fact the index is known already).\r\n\r\nWhen called as `/$dbname/_design/$ddoc/_find/$indexname` we would only execute the query if the selector matches the index's indexed fields. a `400 Bad Request` is returned for anything else. No `_all_docs` fallback. Quite what we would decide on middle cases where a result can be served from the chosen index with some post-query filtering I'm not sure. I'd prefer to not allow that either.\r\n\r\nIn this formulation I think 'execution stats' might not be emitted, since the number of rows returned would always match the number examined (as they've always done with `_view`).\r\n\r\nSmaller decisions like either prohibiting `use_index` in the request body or accepting it if it matches (but definitely 400 Bad Request if present and different) also need to be made.\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1715713111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1715743087","html_url":"https://github.com/apache/couchdb/pull/4735#issuecomment-1715743087","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4735","id":1715743087,"node_id":"IC_kwDOAAMmUc5mRClv","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-12T13:37:16Z","updated_at":"2023-09-12T13:37:32Z","author_association":"MEMBER","body":"To expand on that last comment, perhaps we alter how workers are killed? Today we do `exit(Pid, kill)` which is obviously untrappable. As an option to `fabric_util:cleanup/1` perhaps we could instead do `exit(Pid, finish)` (or some other word). I think the workers would get a `{rexi_EXIT, finish}` message. On receipt of that they'd \"complete\" whatever made sense for them (in our case, simply messaging out the execution stats up to that point, but not performing any new work). The fabric coordinator would have to wait for either that reply or notification that the worker processes terminated for some other reason, before finishing up.\r\n\r\nThis way ensures we send no more messages than today, at the small cost of making the coordinator wait for one message from each worker it would normally have unilaterally and asynchronously killed.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1715743087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1715940637","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1715940637","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1715940637,"node_id":"IC_kwDOAAMmUc5mRy0d","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-12T15:25:05Z","updated_at":"2023-09-12T15:25:05Z","author_association":"MEMBER","body":"> Rather than an additional request body parameter to /db/_find, perhaps we could add the index to the url path, but still end in _find? The request and response body stay in 'find' format (barring any fields that might be obsolete by the fact the index is known already).\r\n\r\nThis could work, though only for indexes created via the `_index` endpoint given we need the index definition in a format that allows `_find` to reason with the schema. For JS/other indexes we could return a `400` status code as we would for an invalid index.\r\n\r\n> In this formulation I think 'execution stats' might not be emitted, since the number of rows returned would always match the number examined (as they've always done with _view).\r\n\r\nI don't think this is true unless you're proposing to limit `_find` to start_key/end_key derivation only, which would represent a large step down in functionality from the database-level `_find`?\r\n\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1715940637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1716015772","html_url":"https://github.com/apache/couchdb/pull/4673#issuecomment-1716015772","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4673","id":1716015772,"node_id":"IC_kwDOAAMmUc5mSFKc","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-12T16:06:45Z","updated_at":"2023-09-15T08:03:12Z","author_association":"MEMBER","body":"@arturog thank you for your comments, practical experience with variants of the same idea here are invaluable.\r\n\r\n> This kind of security requirement is almost always specific to the application. In my case, for example, this solution is not fit for purpose.\r\n> Most of the time a front-end application server is better suited to handle security requirements, which might be complex.\r\n\r\nI’m 100% on board with you here. That’s why this is designed as an opt-in feature. If you have a system on top of CouchSB that works for you, that will just continue to work.\r\n\r\nTo avoid confusion, let me restate the design goal of this PR: **“make the db-per-user pattern obsolete”**. It is specifically not “support arbitrary ACLs inside a database”.\r\n\r\nWith that out of the way, the _scope_ of the potential work for a complete solution here is _very big_. In accordance with common wisdom: to built a complex system that works, one first has to build a simple system that works. The current PR reflects the _simplest_ system that I could think of to get the minimal functionality working that satisfies the design goal.\r\n\r\nTo this end, per-user design docs (and all associated indexes of any form, JS, Mango, Search/Nouveau) are _not_ supported. A future version of this PR however can use the new `by-access-seq` index to build per-user indexes, including reduces that are guaranteed to not leak any data. Global views are already supported but are limited to database admins.\r\n\r\n> Perhaps the requirement to present a subset of the database needs to be revisited? If this requirement were to be dropped, things might become easier.\r\n\r\nMaybe you want a different feature? You are stating the explicit design goal of this PR that should be dropped.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1716015772/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1716142282","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1716142282","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1716142282,"node_id":"IC_kwDOAAMmUc5mSkDK","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-12T17:26:52Z","updated_at":"2023-09-12T17:36:34Z","author_association":"MEMBER","body":"definitely `_find` will only work for indexes created with `_index` for the reasons you state.\r\n\r\nI think you're right that, in practice, the index-level `_find` will have to allow the 'middle' cases. e.g an mr-backed index on two fields where the selector is only on the first field, so a wider start/endkey (`[\"foo\"]` to `[\"foo\",{}]`) and then filter out the non-matches.\r\n\r\nThat's still a lot better than db-level `_find`s failure modes. We _wouldn't_ allow a startkey/endkey that covers the entire view (or the `*:*` equivalent for search, though that at least doesn't return all the hits).\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1716142282/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1716616735","html_url":"https://github.com/apache/couchdb/pull/4757#issuecomment-1716616735","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4757","id":1716616735,"node_id":"IC_kwDOAAMmUc5mUX4f","user":{"login":"gl-yziquel","id":142336927,"node_id":"U_kgDOCHvjnw","avatar_url":"https://avatars.githubusercontent.com/u/142336927?v=4","gravatar_id":"","url":"https://api.github.com/users/gl-yziquel","html_url":"https://github.com/gl-yziquel","followers_url":"https://api.github.com/users/gl-yziquel/followers","following_url":"https://api.github.com/users/gl-yziquel/following{/other_user}","gists_url":"https://api.github.com/users/gl-yziquel/gists{/gist_id}","starred_url":"https://api.github.com/users/gl-yziquel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gl-yziquel/subscriptions","organizations_url":"https://api.github.com/users/gl-yziquel/orgs","repos_url":"https://api.github.com/users/gl-yziquel/repos","events_url":"https://api.github.com/users/gl-yziquel/events{/privacy}","received_events_url":"https://api.github.com/users/gl-yziquel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-12T22:41:55Z","updated_at":"2023-09-12T22:41:55Z","author_association":"CONTRIBUTOR","body":"Small thing, really. Just improves developer experience.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1716616735/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1716622028","html_url":"https://github.com/apache/couchdb/pull/4757#issuecomment-1716622028","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4757","id":1716622028,"node_id":"IC_kwDOAAMmUc5mUZLM","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-12T22:49:21Z","updated_at":"2023-09-12T22:49:21Z","author_association":"CONTRIBUTOR","body":"@gl-yziquel any contribution helps! Thanks for noticing and making a PR","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1716622028/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1719827305","html_url":"https://github.com/apache/couchdb/issues/4760#issuecomment-1719827305","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4760","id":1719827305,"node_id":"IC_kwDOAAMmUc5mgntp","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-14T17:02:44Z","updated_at":"2023-09-14T17:02:44Z","author_association":"CONTRIBUTOR","body":"Example of how it fails:\r\n\r\n\r\n```\r\n5:51:14.961838 <0.7661.146> couch_replicator_utils:url_from_type({rep,undefined,undefined,undefined,\r\n     [{cancel,true},\r\n      {checkpoint_interval,30000},\r\n      {connection_timeout,30000},\r\n      {http_connections,20},\r\n      {ibrowse_options,[]},\r\n      {id,{\"4252c9ffc7584d919a6d3899088beb5a\",\"+continuous+create_target\"}},\r\n      {retries,5},\r\n      {socket_options,[{keepalive,true},{nodelay,false}]},\r\n      {use_bulk_get,false},\r\n      {use_checkpoints,true},\r\n      {worker_batch_size,10},\r\n      {worker_processes,4}],\r\n     {user_ctx,<<\"testy026-user1\">>,\r\n               [<<\"_admin\">>,<<\"_reader\">>,<<\"_writer\">>],\r\n               <<\"default\">>},\r\n     db,nil,undefined,null,\r\n     {1694,706674,961761},\r\n     []}, source)\r\n15:51:14.963080 <0.7661.146> couch_replicator_utils:url_from_type/2 error {badrecord,\r\n                                                                           httpdb}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1719827305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1721363383","html_url":"https://github.com/apache/couchdb/pull/4763#issuecomment-1721363383","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4763","id":1721363383,"node_id":"IC_kwDOAAMmUc5mmeu3","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-15T14:20:29Z","updated_at":"2023-09-15T14:20:29Z","author_association":"CONTRIBUTOR","body":"Thanks @nickva!","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1721363383/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1721508727","html_url":"https://github.com/apache/couchdb/pull/4764#issuecomment-1721508727","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4764","id":1721508727,"node_id":"IC_kwDOAAMmUc5mnCN3","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-15T15:56:41Z","updated_at":"2023-09-15T15:56:41Z","author_association":"CONTRIBUTOR","body":"Thanks @iilyak!","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1721508727/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1723820771","html_url":"https://github.com/apache/couchdb/pull/4769#issuecomment-1723820771","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4769","id":1723820771,"node_id":"IC_kwDOAAMmUc5mv2rj","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-18T16:09:44Z","updated_at":"2023-09-18T16:09:44Z","author_association":"CONTRIBUTOR","body":"There is a `kaboom!` mentioned in the docs for the replicator protocol. But that one seems to be a generic example of a worker crashing: https://docs.couchdb.org/en/stable/replication/protocol.html#server-error\r\n\r\n<img width=\"679\" alt=\"Screenshot 2023-09-18 at 12 09 27 PM\" src=\"https://github.com/apache/couchdb/assets/211822/5d1a1fb1-14b2-43e4-bc91-032f0bdd67da\">\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1723820771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1723898346","html_url":"https://github.com/apache/couchdb/pull/4766#issuecomment-1723898346","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4766","id":1723898346,"node_id":"IC_kwDOAAMmUc5mwJnq","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-18T16:29:22Z","updated_at":"2023-09-18T16:29:22Z","author_association":"CONTRIBUTOR","body":"I wonder if it's worth leaving room in the API for additional status which is not channel related? That is, move the channel status under a \"channels\" sub-field?:\r\n\r\n```\r\n{\"channels\": [{\"upgraded_views\": {...}, ]}\r\n```\r\n\r\nSmoosh has at least two other \"status\" pieces of information that may seem interesting to expose for debugging:\r\n  * The overall `paused` state indicating if jobs should be paused or pausing based on the configured time window and the  strict setting.\r\n  * If persistence is enabled, show the last time the state had been persisted, or if it was initialized from a persisted state, the timestamp of that state?\r\n\r\nNot saying we should add these right off the bat, but if we would them at any point in the future, make it possible to do so without completely changing the status response format.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1723898346/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1723997548","html_url":"https://github.com/apache/couchdb/issues/4768#issuecomment-1723997548","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4768","id":1723997548,"node_id":"IC_kwDOAAMmUc5mwh1s","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-18T17:01:05Z","updated_at":"2023-09-18T17:01:05Z","author_association":"MEMBER","body":"And how do you see the password being decrypted when the couchdb service starts?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1723997548/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1724155150","html_url":"https://github.com/apache/couchdb/pull/4766#issuecomment-1724155150","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4766","id":1724155150,"node_id":"IC_kwDOAAMmUc5mxIUO","user":{"login":"big-r81","id":9985963,"node_id":"MDQ6VXNlcjk5ODU5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9985963?v=4","gravatar_id":"","url":"https://api.github.com/users/big-r81","html_url":"https://github.com/big-r81","followers_url":"https://api.github.com/users/big-r81/followers","following_url":"https://api.github.com/users/big-r81/following{/other_user}","gists_url":"https://api.github.com/users/big-r81/gists{/gist_id}","starred_url":"https://api.github.com/users/big-r81/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-r81/subscriptions","organizations_url":"https://api.github.com/users/big-r81/orgs","repos_url":"https://api.github.com/users/big-r81/repos","events_url":"https://api.github.com/users/big-r81/events{/privacy}","received_events_url":"https://api.github.com/users/big-r81/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-18T18:29:08Z","updated_at":"2023-09-18T18:29:08Z","author_association":"CONTRIBUTOR","body":"That sounds like a very good idea to be ready for adding additional status informations.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1724155150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1724967852","html_url":"https://github.com/apache/couchdb/issues/4768#issuecomment-1724967852","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4768","id":1724967852,"node_id":"IC_kwDOAAMmUc5m0Ous","user":{"login":"estoT1","id":84388106,"node_id":"MDQ6VXNlcjg0Mzg4MTA2","avatar_url":"https://avatars.githubusercontent.com/u/84388106?v=4","gravatar_id":"","url":"https://api.github.com/users/estoT1","html_url":"https://github.com/estoT1","followers_url":"https://api.github.com/users/estoT1/followers","following_url":"https://api.github.com/users/estoT1/following{/other_user}","gists_url":"https://api.github.com/users/estoT1/gists{/gist_id}","starred_url":"https://api.github.com/users/estoT1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/estoT1/subscriptions","organizations_url":"https://api.github.com/users/estoT1/orgs","repos_url":"https://api.github.com/users/estoT1/repos","events_url":"https://api.github.com/users/estoT1/events{/privacy}","received_events_url":"https://api.github.com/users/estoT1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-19T07:26:00Z","updated_at":"2023-09-19T07:26:00Z","author_association":"NONE","body":"For example store with salt or pepper.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1724967852/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1725041926","html_url":"https://github.com/apache/couchdb/issues/4768#issuecomment-1725041926","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4768","id":1725041926,"node_id":"IC_kwDOAAMmUc5m0g0G","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-19T08:20:20Z","updated_at":"2023-09-19T08:20:20Z","author_association":"MEMBER","body":"Salt and pepper are only used when hashing a value through a one-way digest algorithm like SHA-2. CouchDB needs the actual password in order to decrypt the encrypted private key in your proposal.\r\n\r\nI don't understand what you are proposing, can you please describe in more detail how you would like CouchDB to encrypt the ssl password and how CouchDB would be able to decrypt it when it needs the actual password to decrypt the private key?\r\n\r\nThanks.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1725041926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1725347754","html_url":"https://github.com/apache/couchdb/issues/4768#issuecomment-1725347754","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4768","id":1725347754,"node_id":"IC_kwDOAAMmUc5m1req","user":{"login":"estoT1","id":84388106,"node_id":"MDQ6VXNlcjg0Mzg4MTA2","avatar_url":"https://avatars.githubusercontent.com/u/84388106?v=4","gravatar_id":"","url":"https://api.github.com/users/estoT1","html_url":"https://github.com/estoT1","followers_url":"https://api.github.com/users/estoT1/followers","following_url":"https://api.github.com/users/estoT1/following{/other_user}","gists_url":"https://api.github.com/users/estoT1/gists{/gist_id}","starred_url":"https://api.github.com/users/estoT1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/estoT1/subscriptions","organizations_url":"https://api.github.com/users/estoT1/orgs","repos_url":"https://api.github.com/users/estoT1/repos","events_url":"https://api.github.com/users/estoT1/events{/privacy}","received_events_url":"https://api.github.com/users/estoT1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-19T11:49:05Z","updated_at":"2023-09-19T11:49:05Z","author_association":"NONE","body":"Thank you for your feedback and time,\r\nThe actual implementation is in the scope of a programmer. The requested result is that the ini file does not have the password in clear text. \r\nPassword masking is solved by other projects also. Example ActiveMQ Artemis password masking: https://activemq.apache.org/components/artemis/documentation/latest/masking-passwords.html\r\nThank you in advance!","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1725347754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1725447621","html_url":"https://github.com/apache/couchdb/issues/4768#issuecomment-1725447621","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4768","id":1725447621,"node_id":"IC_kwDOAAMmUc5m2D3F","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-19T12:47:47Z","updated_at":"2023-09-19T12:47:47Z","author_association":"MEMBER","body":"Obfuscation or masking provides no real protection (I note that the link you mentioned says the masking feature is \"deprecated and exists only to maintain backward-compatibility\"), we would rather not pretend it has any value.\r\n\r\nThe file containing the ssl password should be restricted by normal OS-level access controls and the hosting server should be similarly protected against intrusion.\r\n\r\nWe're open to a proposal but the onus on designing something that represents a genuine security improvement is on you. It is not sufficient to say \"encrypt this\" without details. To guide you, CouchDB typically runs as a supervised service and thus will need access to the plaintext password to the private key every time it starts.\r\n\r\nYou can of course move your TLS layer elsewhere, to HAProxy or Nginx or similar. This is almost mandatory once you have a multi-node CouchDB cluster anyway.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1725447621/reactions","total_count":3,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1725949026","html_url":"https://github.com/apache/couchdb/pull/4766#issuecomment-1725949026","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4766","id":1725949026,"node_id":"IC_kwDOAAMmUc5m3-Ri","user":{"login":"big-r81","id":9985963,"node_id":"MDQ6VXNlcjk5ODU5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9985963?v=4","gravatar_id":"","url":"https://api.github.com/users/big-r81","html_url":"https://github.com/big-r81","followers_url":"https://api.github.com/users/big-r81/followers","following_url":"https://api.github.com/users/big-r81/following{/other_user}","gists_url":"https://api.github.com/users/big-r81/gists{/gist_id}","starred_url":"https://api.github.com/users/big-r81/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-r81/subscriptions","organizations_url":"https://api.github.com/users/big-r81/orgs","repos_url":"https://api.github.com/users/big-r81/repos","events_url":"https://api.github.com/users/big-r81/events{/privacy}","received_events_url":"https://api.github.com/users/big-r81/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-19T16:00:42Z","updated_at":"2023-09-19T16:00:42Z","author_association":"CONTRIBUTOR","body":"Hey, Gábor, oh yes an additional good idea to make it more visible to the reader. I will update the docs part.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1725949026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1726016505","html_url":"https://github.com/apache/couchdb/issues/4451#issuecomment-1726016505","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4451","id":1726016505,"node_id":"IC_kwDOAAMmUc5m4Ov5","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-19T16:14:17Z","updated_at":"2023-09-19T16:14:17Z","author_association":"CONTRIBUTOR","body":"The new histogram backend should not have this problem: https://github.com/apache/couchdb/pull/4672\r\n\r\nIt should record every single value.\r\n\r\nIt's not part of a the release and will likely be part of 3.4\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1726016505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1727147629","html_url":"https://github.com/apache/couchdb/issues/4768#issuecomment-1727147629","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4768","id":1727147629,"node_id":"IC_kwDOAAMmUc5m8i5t","user":{"login":"pavlov2000uk","id":8982726,"node_id":"MDQ6VXNlcjg5ODI3MjY=","avatar_url":"https://avatars.githubusercontent.com/u/8982726?v=4","gravatar_id":"","url":"https://api.github.com/users/pavlov2000uk","html_url":"https://github.com/pavlov2000uk","followers_url":"https://api.github.com/users/pavlov2000uk/followers","following_url":"https://api.github.com/users/pavlov2000uk/following{/other_user}","gists_url":"https://api.github.com/users/pavlov2000uk/gists{/gist_id}","starred_url":"https://api.github.com/users/pavlov2000uk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pavlov2000uk/subscriptions","organizations_url":"https://api.github.com/users/pavlov2000uk/orgs","repos_url":"https://api.github.com/users/pavlov2000uk/repos","events_url":"https://api.github.com/users/pavlov2000uk/events{/privacy}","received_events_url":"https://api.github.com/users/pavlov2000uk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-20T07:43:18Z","updated_at":"2023-09-20T07:43:18Z","author_association":"NONE","body":"Here is another example -> https://docs.confluent.io/platform/current/security/secrets-tutorial.html","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1727147629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1727221556","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1727221556","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1727221556,"node_id":"IC_kwDOAAMmUc5m8080","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-20T08:26:56Z","updated_at":"2023-09-20T08:26:56Z","author_association":"MEMBER","body":"adding a note that for the new endpoints an index should _not_ match a selector if it only has indexed fields where the selector does `$regex` or any other operator where neither startkey or endkey are changed from the defaults that cover the entire view.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1727221556/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1727307260","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1727307260","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1727307260,"node_id":"IC_kwDOAAMmUc5m9J38","user":{"login":"mikerhodes","id":453210,"node_id":"MDQ6VXNlcjQ1MzIxMA==","avatar_url":"https://avatars.githubusercontent.com/u/453210?v=4","gravatar_id":"","url":"https://api.github.com/users/mikerhodes","html_url":"https://github.com/mikerhodes","followers_url":"https://api.github.com/users/mikerhodes/followers","following_url":"https://api.github.com/users/mikerhodes/following{/other_user}","gists_url":"https://api.github.com/users/mikerhodes/gists{/gist_id}","starred_url":"https://api.github.com/users/mikerhodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikerhodes/subscriptions","organizations_url":"https://api.github.com/users/mikerhodes/orgs","repos_url":"https://api.github.com/users/mikerhodes/repos","events_url":"https://api.github.com/users/mikerhodes/events{/privacy}","received_events_url":"https://api.github.com/users/mikerhodes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-20T09:11:54Z","updated_at":"2023-09-20T09:15:09Z","author_association":"CONTRIBUTOR","body":"> adding a note that for the new endpoints an index should not match a selector if it only has indexed fields where the selector does $regex or any other operator where neither startkey or endkey are changed from the defaults that cover the entire view.\r\n\r\nI disagree that we should implement this restriction. The issue the user reported is \"`use_index` doesn't do what it says\". It wasn't \"I don't like that the database does inefficient queries\". Even if it was, I'd still disagree.\r\n\r\nI do agree that a good way to solve the original bug is to introduce the URL framing for selecting an index. But I think the only reason we'd return a 400 would be that the index in the URL would be disqualified using the standard Mango index selection logic for the given selector (eg, selector doesn't contain the fields in an \"indexable\" way).\r\n\r\nSpecifically, I don't think the user should be prevented from passing in a selector that passes the index selection logic, but passes values which mean the entire view is read.\r\n\r\nI think this because:\r\n\r\n1. I think this is confusing for a user --- both views and search allow this, so why have this restriction only for Mango?\r\n2. I don't think \"because the user can shoot themselves in the foot\" is a good reason either, because it's not what I'd want for CouchDB to do on my behalf. Databases provide many, many ways to shoot oneself in the foot. And they should do, that's why they are powerful.\r\n\r\nIn summary, I agree the URL method is a good solution to this problem, which is that `use_index` is bad because it doesn't do what it says. I feel that we should get `use_index` deprecated and a replacement into the codebase, and avoid trying to \"fix\" Mango in other ways at the same time.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1727307260/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1727514495","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1727514495","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1727514495,"node_id":"IC_kwDOAAMmUc5m98d_","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-20T11:11:24Z","updated_at":"2023-09-20T11:11:39Z","author_association":"MEMBER","body":"@mikerhodes I'm not sure we're disagreeing. The example I cite is when a field is indexed but is only in the selector as a $regex. $regex is brute-forced, it doesn't use any indexed field. aka, the field used for a $regex should not count, since whether it is indexed or not is irrelevant to evaluation.\r\n\r\nwhatever the formula currently is for `/db/_find` should remain untouched, sure, but we should take the opportunity to remove foot guns where we can.\r\n\r\n`_find` is _not_ powerful. It just pretends to be. \r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1727514495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1728617812","html_url":"https://github.com/apache/couchdb/issues/2106#issuecomment-1728617812","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2106","id":1728617812,"node_id":"IC_kwDOAAMmUc5nCJ1U","user":{"login":"viniciuscb","id":1259970,"node_id":"MDQ6VXNlcjEyNTk5NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1259970?v=4","gravatar_id":"","url":"https://api.github.com/users/viniciuscb","html_url":"https://github.com/viniciuscb","followers_url":"https://api.github.com/users/viniciuscb/followers","following_url":"https://api.github.com/users/viniciuscb/following{/other_user}","gists_url":"https://api.github.com/users/viniciuscb/gists{/gist_id}","starred_url":"https://api.github.com/users/viniciuscb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/viniciuscb/subscriptions","organizations_url":"https://api.github.com/users/viniciuscb/orgs","repos_url":"https://api.github.com/users/viniciuscb/repos","events_url":"https://api.github.com/users/viniciuscb/events{/privacy}","received_events_url":"https://api.github.com/users/viniciuscb/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-21T01:09:19Z","updated_at":"2023-09-21T01:09:19Z","author_association":"NONE","body":"This is very important\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1728617812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731236030","html_url":"https://github.com/apache/couchdb/issues/4768#issuecomment-1731236030","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4768","id":1731236030,"node_id":"IC_kwDOAAMmUc5nMJC-","user":{"login":"big-r81","id":9985963,"node_id":"MDQ6VXNlcjk5ODU5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9985963?v=4","gravatar_id":"","url":"https://api.github.com/users/big-r81","html_url":"https://github.com/big-r81","followers_url":"https://api.github.com/users/big-r81/followers","following_url":"https://api.github.com/users/big-r81/following{/other_user}","gists_url":"https://api.github.com/users/big-r81/gists{/gist_id}","starred_url":"https://api.github.com/users/big-r81/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-r81/subscriptions","organizations_url":"https://api.github.com/users/big-r81/orgs","repos_url":"https://api.github.com/users/big-r81/repos","events_url":"https://api.github.com/users/big-r81/events{/privacy}","received_events_url":"https://api.github.com/users/big-r81/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T11:08:10Z","updated_at":"2023-09-22T11:08:10Z","author_association":"CONTRIBUTOR","body":"> Here is another example -> https://docs.confluent.io/platform/current/security/secrets-tutorial.html\r\n\r\nBut in this example, what is the benefit? You would need to store the master key somewhere on the computer who want to access the properties file...","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731236030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731412471","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1731412471","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1731412471,"node_id":"IC_kwDOAAMmUc5nM0H3","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T13:23:44Z","updated_at":"2023-09-22T13:23:44Z","author_association":"MEMBER","body":"as for comparisons to calling `_view` and `_search` with no restrictions, I don't think that's true, and the details matter.\r\n\r\nQuerying a view without startkey/endkey can make sense and can be efficient as it's quite common for the view to be a subset of the database (any `if` clause on doc properties, say). And it could be a reduce=true or group=true and the view-wide reduce value might be valuable (and is efficiently calculated).\r\n\r\nQuerying a search index with `*:*` is also sometimes reasonable (as it might be a subset of the database as above) and will certainly be more efficient, Lucene _won't_ read the whole index to perform the query, it'll just return the first N results it finds (as a limit is not optional for Lucene as it is for views).\r\n\r\nYou can tell I am tired of dealing with users who have been let down by mango and its false promises.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731412471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731431936","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1731431936","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1731431936,"node_id":"IC_kwDOAAMmUc5nM44A","user":{"login":"ricellis","id":10698320,"node_id":"MDQ6VXNlcjEwNjk4MzIw","avatar_url":"https://avatars.githubusercontent.com/u/10698320?v=4","gravatar_id":"","url":"https://api.github.com/users/ricellis","html_url":"https://github.com/ricellis","followers_url":"https://api.github.com/users/ricellis/followers","following_url":"https://api.github.com/users/ricellis/following{/other_user}","gists_url":"https://api.github.com/users/ricellis/gists{/gist_id}","starred_url":"https://api.github.com/users/ricellis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ricellis/subscriptions","organizations_url":"https://api.github.com/users/ricellis/orgs","repos_url":"https://api.github.com/users/ricellis/repos","events_url":"https://api.github.com/users/ricellis/events{/privacy}","received_events_url":"https://api.github.com/users/ricellis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T13:35:13Z","updated_at":"2023-09-22T13:35:13Z","author_association":"NONE","body":"Controversial I'm sure, but can we go back to basics here?\r\nDoes anyone actually think `use_index` should be a hint?\r\n\r\nThe [documentation](https://docs.couchdb.org/en/stable/api/database/find.html) says:\r\n> Instruct a query to use a specific index.\r\n\r\nThat doesn't even seem that ambiguous, given computers follow instructions.\r\nHonestly it just seems like a long standing bug to me. Every user I've interacted with who has tried to use this option (including past me) does not think this instruction is optional for the server. I can't think of a good reason why it would ever be a \"hint\". If you want auto-selection, don't say `use_index` if you want it to use a specific index then specify `use_index`. 🤷 ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731431936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731457338","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1731457338","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1731457338,"node_id":"IC_kwDOAAMmUc5nM_E6","user":{"login":"big-r81","id":9985963,"node_id":"MDQ6VXNlcjk5ODU5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9985963?v=4","gravatar_id":"","url":"https://api.github.com/users/big-r81","html_url":"https://github.com/big-r81","followers_url":"https://api.github.com/users/big-r81/followers","following_url":"https://api.github.com/users/big-r81/following{/other_user}","gists_url":"https://api.github.com/users/big-r81/gists{/gist_id}","starred_url":"https://api.github.com/users/big-r81/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-r81/subscriptions","organizations_url":"https://api.github.com/users/big-r81/orgs","repos_url":"https://api.github.com/users/big-r81/repos","events_url":"https://api.github.com/users/big-r81/events{/privacy}","received_events_url":"https://api.github.com/users/big-r81/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T13:50:30Z","updated_at":"2023-09-22T13:50:30Z","author_association":"CONTRIBUTOR","body":"> You can tell I am tired of dealing with users who have been let down by mango and its false promises.\r\n\r\nThis is completely understandable and comprehensible and yes, you always answer the same questions and misunderstandings ;-). Maybe this is also one of the reasons that I have not used Mango much.\r\n\r\nI think we shouldn't mix different things here though, nor personal inclinations / dislikes to various functions. \r\n\r\nI think we can and should improve the current behavior as best as possible (in the sense of the user and operator) (and best of all, without introducing an additional configuration parameter). \r\n\r\nIf we want to preserve a backward-comatable behavior, can't we explicitly tell the user in the result if an index was used or not (more visible than just in _explain) and without interpreting the \"execution statistics\"?\r\n\r\nNow I would also have no problem with marking this as backwards incompatible in the changlog! If we follow the documentation, then we just correct the behavior (which was wrong until now).\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731457338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731464823","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1731464823","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1731464823,"node_id":"IC_kwDOAAMmUc5nNA53","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T13:54:51Z","updated_at":"2023-09-22T13:54:51Z","author_association":"MEMBER","body":"@ricellis I agree that `use_index` should mean what it says and we should fix that.\r\n\r\n@big-r81 how do you you propose to \"explicitly tell the user in the result if an index was used\"? We already send a warning in every `_find` response if it was executed inefficiently, and absolutely no one notices this. How could they? They get their results, though slower than if they had used a better index (and, for small datasets, not even that. The problem only appears when they add more data).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731464823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731470877","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1731470877","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1731470877,"node_id":"IC_kwDOAAMmUc5nNCYd","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T13:58:04Z","updated_at":"2023-09-22T13:58:04Z","author_association":"MEMBER","body":"@ricellis separately, what's your opinion on mango considering an index usable for a selector for $regex operator? I consider that a bug also. The index _isn't_ usable for that query, it's no better than `all_docs` unless it was a partial index.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731470877/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731483120","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1731483120","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1731483120,"node_id":"IC_kwDOAAMmUc5nNFXw","user":{"login":"big-r81","id":9985963,"node_id":"MDQ6VXNlcjk5ODU5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9985963?v=4","gravatar_id":"","url":"https://api.github.com/users/big-r81","html_url":"https://github.com/big-r81","followers_url":"https://api.github.com/users/big-r81/followers","following_url":"https://api.github.com/users/big-r81/following{/other_user}","gists_url":"https://api.github.com/users/big-r81/gists{/gist_id}","starred_url":"https://api.github.com/users/big-r81/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-r81/subscriptions","organizations_url":"https://api.github.com/users/big-r81/orgs","repos_url":"https://api.github.com/users/big-r81/repos","events_url":"https://api.github.com/users/big-r81/events{/privacy}","received_events_url":"https://api.github.com/users/big-r81/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T14:05:33Z","updated_at":"2023-09-22T14:05:33Z","author_association":"CONTRIBUTOR","body":"@rnewson Mhhh, then we should not output a result if a user specifies an index that does not exist or cannot be used. Then we should just issue a warning as a result and specify \"Use the correct index or do not use `use_index` at all\". Then the user can decide what to do. Of course, this would not be backward compatible behavior either.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731483120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731505119","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1731505119","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1731505119,"node_id":"IC_kwDOAAMmUc5nNKvf","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T14:18:53Z","updated_at":"2023-09-22T14:18:53Z","author_association":"CONTRIBUTOR","body":"Good point, @ricellis. This looks more like a bug fix than adding a new feature. Documentation agrees too.\r\n\r\nNot sure about `$regex` maybe that falls into a separate category of `returning efficient results`. The index itself could look silly and just index everything equivalently to an `_all_docs` anyway, even without a `$regex` involved.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731505119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731539141","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1731539141","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1731539141,"node_id":"IC_kwDOAAMmUc5nNTDF","user":{"login":"ricellis","id":10698320,"node_id":"MDQ6VXNlcjEwNjk4MzIw","avatar_url":"https://avatars.githubusercontent.com/u/10698320?v=4","gravatar_id":"","url":"https://api.github.com/users/ricellis","html_url":"https://github.com/ricellis","followers_url":"https://api.github.com/users/ricellis/followers","following_url":"https://api.github.com/users/ricellis/following{/other_user}","gists_url":"https://api.github.com/users/ricellis/gists{/gist_id}","starred_url":"https://api.github.com/users/ricellis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ricellis/subscriptions","organizations_url":"https://api.github.com/users/ricellis/orgs","repos_url":"https://api.github.com/users/ricellis/repos","events_url":"https://api.github.com/users/ricellis/events{/privacy}","received_events_url":"https://api.github.com/users/ricellis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T14:39:40Z","updated_at":"2023-09-22T14:39:40Z","author_association":"NONE","body":">what's your opinion on mango considering an index usable for a selector for $regex operator?\r\n\r\nThat problem extends beyond `$regex` doesn't it? My undersanding is that (at least for json/view indexes) no (non-partial) index is more useful than `_all_docs` unless the selector has at least one \"equality\" operator (`$eq`, `$gt`, `$gte`, `$lt`, `$lte`) that can be used to narrow the set of docments to subsequently scan for the rest of the constraints. Or am I missing something particularly extra about regex?\r\n\r\n>when a field is indexed but is only in the selector as a $regex. $regex is brute-forced, it doesn't use any indexed field\r\n\r\nDoes brute-forced in this context mean it uses the keys from the view or does it actually pull the docs?\r\nI think the \"covering\" work only applied to avoiding fetches where the projected `fields` were already in the key, but potentially a \"covering\" style improvement to regex where the keys from the index can used to evaluate the regex _before_ fetching docs could make an index on the requested field more useful than an alternative.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731539141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731554533","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1731554533","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1731554533,"node_id":"IC_kwDOAAMmUc5nNWzl","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T14:49:34Z","updated_at":"2023-09-22T14:49:34Z","author_association":"CONTRIBUTOR","body":"Thank you all for the comments, it is much appreciated.\r\n\r\nHow about the following:\r\n\r\n- Since changing the current semantics of `use_index` would break many existing integrations, even if it is indeed a bug, let us keep that for backwards compatibility and introduce `index_hint` for the current behavior (as an alias to `use_index`) and `force_index` for the desired behavior.\r\n\r\n- Create another PR for the `index_hint` + `force_index` work and we leave this thread as the generic Mango discussion although it might be better to find a designated place for that.\r\n\r\n- Spin off the parts about the suspected bug about `$regex` into the ticket and continue the related discussion there.   ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731554533/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731563627","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1731563627","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1731563627,"node_id":"IC_kwDOAAMmUc5nNZBr","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T14:55:39Z","updated_at":"2023-09-22T14:55:39Z","author_association":"MEMBER","body":"`$regex` gets converted into an `$exists: true` predicate for index selection, so an index can be used to optimize it in some cases, though it's still going to be a range scan on whatever index is selected. I don't think there's a bug there, though perhaps the performance could be improved as per @ricellis's suggestion.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731563627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731612261","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1731612261","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1731612261,"node_id":"IC_kwDOAAMmUc5nNk5l","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T15:26:54Z","updated_at":"2023-09-22T15:26:54Z","author_association":"MEMBER","body":"@pgj imo we either make `use_index` do what it says or we introduce the path-based `_find` endpoints that work like `_view` and `_search` in guaranteeing the request is served by that index (with the unique caveat that it's a `400` if the selector isn't covered by the index). I don't want to go the more confusing route of adding yet more parameters that mean 'really use the index'.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731612261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731669017","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1731669017","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1731669017,"node_id":"IC_kwDOAAMmUc5nNywZ","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T16:03:46Z","updated_at":"2023-09-22T16:03:46Z","author_association":"CONTRIBUTOR","body":"Curiously, `use_index` has always been considered a hint in the sources, see the comments in `mango_cursor` where the warnings are generated:\r\n\r\nhttps://github.com/apache/couchdb/blob/435db51a4f412a66f3cf3deffbc84b9da522a3d6/src/mango/src/mango_cursor.erl#L475-L509\r\n\r\nIs this a bug in the _documentation_ itself?\r\n\r\nhttps://github.com/apache/couchdb/blob/83e39b6d14c500e9a1978287de3058465db5c1ec/src/docs/src/api/database/find.rst?plain=1#L45-L47\r\n\r\nThe use of \"instruct\" there might be a poor choice which causes so much pain and misunderstanding.  Personally, I can see the intention behind the wording but I can also understand that it is misleading at the first sight.  (Being instructed does not necessarily warrant that one will obey.  But I am not either a native speaker or a linguist.)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731669017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731981572","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1731981572","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1731981572,"node_id":"IC_kwDOAAMmUc5nO_EE","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-22T20:10:27Z","updated_at":"2023-09-22T20:10:27Z","author_association":"MEMBER","body":"Instruct\r\n\r\n> to [order](https://dictionary.cambridge.org/dictionary/english/order) or [tell](https://dictionary.cambridge.org/dictionary/english/tell) someone to do something, [especially](https://dictionary.cambridge.org/dictionary/english/especially) in a [formal](https://dictionary.cambridge.org/dictionary/english/formal) way:","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1731981572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1732661208","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1732661208","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1732661208,"node_id":"IC_kwDOAAMmUc5nRk_Y","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-24T20:22:59Z","updated_at":"2023-09-24T20:22:59Z","author_association":"CONTRIBUTOR","body":"Submitted #4774 to fix the documentation.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1732661208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1733220584","html_url":"https://github.com/apache/couchdb/pull/4774#issuecomment-1733220584","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4774","id":1733220584,"node_id":"IC_kwDOAAMmUc5nTtjo","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-25T09:02:15Z","updated_at":"2023-09-25T09:02:15Z","author_association":"MEMBER","body":"The discussion in https://github.com/apache/couchdb/pull/4710 is ongoing with advocates for fixing `use_index` to work the way the documentation says.\r\n\r\nI think we'll need a vote on it to decide.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1733220584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1733259447","html_url":"https://github.com/apache/couchdb/issues/2758#issuecomment-1733259447","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2758","id":1733259447,"node_id":"IC_kwDOAAMmUc5nT3C3","user":{"login":"Andronikus","id":5047079,"node_id":"MDQ6VXNlcjUwNDcwNzk=","avatar_url":"https://avatars.githubusercontent.com/u/5047079?v=4","gravatar_id":"","url":"https://api.github.com/users/Andronikus","html_url":"https://github.com/Andronikus","followers_url":"https://api.github.com/users/Andronikus/followers","following_url":"https://api.github.com/users/Andronikus/following{/other_user}","gists_url":"https://api.github.com/users/Andronikus/gists{/gist_id}","starred_url":"https://api.github.com/users/Andronikus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Andronikus/subscriptions","organizations_url":"https://api.github.com/users/Andronikus/orgs","repos_url":"https://api.github.com/users/Andronikus/repos","events_url":"https://api.github.com/users/Andronikus/events{/privacy}","received_events_url":"https://api.github.com/users/Andronikus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-25T09:24:21Z","updated_at":"2023-09-25T09:24:21Z","author_association":"NONE","body":"Hi everyone,\r\n\r\nIt looks like this issue is open already long time ago... I have been experience a similar issue with Couch `3.2.2` too. \r\nDoes anyone have any idea how to avoid or overcome it?\r\n\r\n@nicknaychov \r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1733259447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1733406753","html_url":"https://github.com/apache/couchdb/issues/2758#issuecomment-1733406753","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2758","id":1733406753,"node_id":"IC_kwDOAAMmUc5nUbAh","user":{"login":"Caesar305","id":434507,"node_id":"MDQ6VXNlcjQzNDUwNw==","avatar_url":"https://avatars.githubusercontent.com/u/434507?v=4","gravatar_id":"","url":"https://api.github.com/users/Caesar305","html_url":"https://github.com/Caesar305","followers_url":"https://api.github.com/users/Caesar305/followers","following_url":"https://api.github.com/users/Caesar305/following{/other_user}","gists_url":"https://api.github.com/users/Caesar305/gists{/gist_id}","starred_url":"https://api.github.com/users/Caesar305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Caesar305/subscriptions","organizations_url":"https://api.github.com/users/Caesar305/orgs","repos_url":"https://api.github.com/users/Caesar305/repos","events_url":"https://api.github.com/users/Caesar305/events{/privacy}","received_events_url":"https://api.github.com/users/Caesar305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-25T10:38:05Z","updated_at":"2023-09-25T10:38:05Z","author_association":"NONE","body":"> Hi everyone,\r\n> \r\n> It looks like this issue is open already long time ago... I have been experience a similar issue with Couch `3.2.2` too. Does anyone have any idea how to avoid or overcome it?\r\n> \r\n> @nicknaychov\r\n\r\nI gave up. I couldn't rely on a cluster in production. Seems the issue is when you are running a cluster, single server config works fine.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1733406753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1733672686","html_url":"https://github.com/apache/couchdb/pull/4774#issuecomment-1733672686","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4774","id":1733672686,"node_id":"IC_kwDOAAMmUc5nVb7u","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-25T13:04:49Z","updated_at":"2023-09-25T13:05:25Z","author_association":"CONTRIBUTOR","body":"@rnewson please note that I have included references to the commit history to support that the way `use_index` currently works is not a bug but a feature, a mitigation to the valid problem.\r\n\r\nThe bug here is that the documentation has not been updated.  Also, it happened a while (7 years) ago and independently of this was a good design decision or not, it is now part of CouchDB and there may be integrations on that work under these assumptions.  Especially that after the expected change CouchDB would immediately start emitting HTTP 400s instead of HTTP 200s in those scenarios.  How would this work out in a multi-version cluster?\r\n\r\nIn #4710 I was proposing ways to change the behavior of `use_index` in backward-compatible ways (i.e. rename `use_index` to `index_hint` and introduce `force_index` to restore the old behavior, also the toggles) but it was rejected.  While I hear you and understand all your concerns and assume good intentions behind your comments, I do not think restoring `use_index` to the old, assumed good behavior right away is the good solution.  Or I might be misunderstanding something?\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1733672686/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1733901036","html_url":"https://github.com/apache/couchdb/pull/4774#issuecomment-1733901036","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4774","id":1733901036,"node_id":"IC_kwDOAAMmUc5nWTrs","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-25T15:02:03Z","updated_at":"2023-09-25T15:02:03Z","author_association":"MEMBER","body":"@pgj I think we're all confused. I appreciate you checking through historical comments. \r\n\r\nTo resolve this I think it needs to move to the dev@ mailing list. Is this something you are comfortable doing? I'm happy to do it in your stead otherwise. If you wish to proceed, I suggest a `[DISCUSS]` thread that references this ticket and any relevant history, a brief description of `use_index` and how it acts in practice (with the fallback), and list out the suggested paths to address this (roughly, 1) accept the current behaviour and adjust the documentation 2) change the behaviour to not allow the fallback and clarify this in docs and release notes as potentially a breaking change 3) a combination of 1 and introducing a new way to get the strict use_index)\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1733901036/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1733924009","html_url":"https://github.com/apache/couchdb/issues/2758#issuecomment-1733924009","issue_url":"https://api.github.com/repos/apache/couchdb/issues/2758","id":1733924009,"node_id":"IC_kwDOAAMmUc5nWZSp","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-25T15:13:22Z","updated_at":"2023-09-25T15:13:22Z","author_association":"MEMBER","body":"the `{couch_db,incref,[undefined]` error was fixed some time ago (https://github.com/apache/couchdb/pull/4199).\r\n\r\nFor folks struggling to run clusters, we recommend 1) a round-robin load balancer in front of the nodes to ensure each couchdb node is doing its fair share of the processing chores 2) a minimum of 3 nodes 3) n=3, no matter how many nodes in the cluster.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1733924009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1734031526","html_url":"https://github.com/apache/couchdb/pull/4774#issuecomment-1734031526","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4774","id":1734031526,"node_id":"IC_kwDOAAMmUc5nWzim","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-25T15:55:10Z","updated_at":"2023-09-25T15:55:10Z","author_association":"CONTRIBUTOR","body":"Yes, I am happy to discuss that on `dev@`.  Please give me a day or so to prepare the topic starter email.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1734031526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1734105026","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1734105026","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1734105026,"node_id":"IC_kwDOAAMmUc5nXFfC","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-25T16:38:18Z","updated_at":"2023-09-25T16:38:18Z","author_association":"CONTRIBUTOR","body":"Created #4775 for the problem with the `$regex` operator.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1734105026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1734405113","html_url":"https://github.com/apache/couchdb/issues/4775#issuecomment-1734405113","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4775","id":1734405113,"node_id":"IC_kwDOAAMmUc5nYOv5","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-25T20:19:08Z","updated_at":"2023-09-25T20:19:08Z","author_association":"MEMBER","body":"it would be nice (and I think fairly easy) to at least narrow the query with startkey/endkey if the regex does not start with a wildcard. Parsing the regex to determine that sounds like the tricky part.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1734405113/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735070059","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1735070059","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1735070059,"node_id":"IC_kwDOAAMmUc5naxFr","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-26T08:28:23Z","updated_at":"2023-09-26T08:28:49Z","author_association":"MEMBER","body":"another option occured to me. Similar to the initial proposal, we could introduce `allow_fallback: true|false` as a new option, defaulting to `true` to maintain current behaviour. We'd also update the documentation as in https://github.com/apache/couchdb/pull/4774 to clarify that `use_index` is a hint by default.\r\n\r\nWhen `allow_fallback` is false, the behaviour changes as follows;\r\n\r\n1) if `use_index` is set, and the index selected is not a match for the selector, we return a `400 Bad Request` instead of falling back to a different index or all_docs.\r\n2) if `use_index` is not set, and there is no index that can be used, we return a `400 Bad Request` instead of falling back to all_docs.\r\n\r\nIf this exists we can encourage users to always set `allow_fallback: false` in `_find` requests, whether they use `use_index` or not, so they can avoid the worst of the fallback behaviour.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735070059/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735117227","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1735117227","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1735117227,"node_id":"IC_kwDOAAMmUc5na8mr","user":{"login":"ricellis","id":10698320,"node_id":"MDQ6VXNlcjEwNjk4MzIw","avatar_url":"https://avatars.githubusercontent.com/u/10698320?v=4","gravatar_id":"","url":"https://api.github.com/users/ricellis","html_url":"https://github.com/ricellis","followers_url":"https://api.github.com/users/ricellis/followers","following_url":"https://api.github.com/users/ricellis/following{/other_user}","gists_url":"https://api.github.com/users/ricellis/gists{/gist_id}","starred_url":"https://api.github.com/users/ricellis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ricellis/subscriptions","organizations_url":"https://api.github.com/users/ricellis/orgs","repos_url":"https://api.github.com/users/ricellis/repos","events_url":"https://api.github.com/users/ricellis/events{/privacy}","received_events_url":"https://api.github.com/users/ricellis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-26T08:57:13Z","updated_at":"2023-09-26T08:57:45Z","author_association":"NONE","body":"I like this `allow_fallback` idea. I think it is a good compromise to allow  `use_index` to behave like everyone expects without breaking backwards compatibility. Having purpose as an option beyond `use_index` cases makes it more useful than adding a new toggle that only impacts `use_index`.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735117227/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735262149","html_url":"https://github.com/apache/couchdb/issues/3086#issuecomment-1735262149","issue_url":"https://api.github.com/repos/apache/couchdb/issues/3086","id":1735262149,"node_id":"IC_kwDOAAMmUc5nbf_F","user":{"login":"ricellis","id":10698320,"node_id":"MDQ6VXNlcjEwNjk4MzIw","avatar_url":"https://avatars.githubusercontent.com/u/10698320?v=4","gravatar_id":"","url":"https://api.github.com/users/ricellis","html_url":"https://github.com/ricellis","followers_url":"https://api.github.com/users/ricellis/followers","following_url":"https://api.github.com/users/ricellis/following{/other_user}","gists_url":"https://api.github.com/users/ricellis/gists{/gist_id}","starred_url":"https://api.github.com/users/ricellis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ricellis/subscriptions","organizations_url":"https://api.github.com/users/ricellis/orgs","repos_url":"https://api.github.com/users/ricellis/repos","events_url":"https://api.github.com/users/ricellis/events{/privacy}","received_events_url":"https://api.github.com/users/ricellis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-26T10:27:36Z","updated_at":"2023-09-26T10:27:36Z","author_association":"NONE","body":"This works for me in CouchDB 3.3.2 e.g. with a design doc:\r\n```json\r\n{\"filters\":\r\n  {\r\n    \"myfilter\": \"function(doc, req){ if (req.body.foo && doc._id.startsWith(req.body.foo)) { return true;} else { return false;}}\"\r\n  }\r\n}\r\n```\r\n\r\nand\r\n\r\n```sh\r\ncurl -H 'content-type: application/json' -d '{\"foo\": \"someprefix\"}' \"${COUCH_DB}_changes?filter=filterdoc/myfilter\"\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735262149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735273578","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1735273578","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1735273578,"node_id":"IC_kwDOAAMmUc5nbixq","user":{"login":"big-r81","id":9985963,"node_id":"MDQ6VXNlcjk5ODU5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/9985963?v=4","gravatar_id":"","url":"https://api.github.com/users/big-r81","html_url":"https://github.com/big-r81","followers_url":"https://api.github.com/users/big-r81/followers","following_url":"https://api.github.com/users/big-r81/following{/other_user}","gists_url":"https://api.github.com/users/big-r81/gists{/gist_id}","starred_url":"https://api.github.com/users/big-r81/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/big-r81/subscriptions","organizations_url":"https://api.github.com/users/big-r81/orgs","repos_url":"https://api.github.com/users/big-r81/repos","events_url":"https://api.github.com/users/big-r81/events{/privacy}","received_events_url":"https://api.github.com/users/big-r81/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-26T10:35:50Z","updated_at":"2023-09-26T10:35:50Z","author_association":"CONTRIBUTOR","body":"Do we really need backwards compatability here?\r\n\r\nLet me give you a practical example:\r\n\r\nThere is a road with allowed max. speed of 50 km/h and a digital display board which shows your current speed and a 😄 if you drive less than or equal to 50 km/h and 😞 if you drive too fast. You drive this way for years and you drive always to fast because there are obviously no dangers. One day I got a speeding ticket because I was going too fast (like always)...\r\n\r\n1. Should I declare to the fine office that I have always driven too fast up to now? (Who do you think will be proven right?) or\r\n2. Should I just pay the ticket and drive only 50 km/h on this route from now on?\r\n\r\nIn this case - I think - we should fix `use_index` to use that index or fail if the index is not available / usable. No additional config setting. If we would introduce an additional config option for every functional change, we would\r\n\r\n1. increase the complexity of the docs and\r\n2. the complexity of the software in general and\r\n3. (maybe) introduce additional dependencies between different settings and\r\n4. is there a day when we would remove all deprecated and additional bc compatible settings?\r\n\r\nSo, just my 2 cents...\r\n\r\nBut, if we go the BC route, than `allow_fallback` is an elegant solution.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735273578/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735276846","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1735276846","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1735276846,"node_id":"IC_kwDOAAMmUc5nbjku","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-26T10:38:15Z","updated_at":"2023-09-26T10:38:15Z","author_association":"MEMBER","body":"@big-r81 the difference between your scenario and this one is that you know you are exceeding a limit. The problem with the fallback behaviour of `_find` is that you don't know.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735276846/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735317072","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1735317072","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1735317072,"node_id":"IC_kwDOAAMmUc5nbtZQ","user":{"login":"ricellis","id":10698320,"node_id":"MDQ6VXNlcjEwNjk4MzIw","avatar_url":"https://avatars.githubusercontent.com/u/10698320?v=4","gravatar_id":"","url":"https://api.github.com/users/ricellis","html_url":"https://github.com/ricellis","followers_url":"https://api.github.com/users/ricellis/followers","following_url":"https://api.github.com/users/ricellis/following{/other_user}","gists_url":"https://api.github.com/users/ricellis/gists{/gist_id}","starred_url":"https://api.github.com/users/ricellis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ricellis/subscriptions","organizations_url":"https://api.github.com/users/ricellis/orgs","repos_url":"https://api.github.com/users/ricellis/repos","events_url":"https://api.github.com/users/ricellis/events{/privacy}","received_events_url":"https://api.github.com/users/ricellis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-26T11:07:08Z","updated_at":"2023-09-26T11:07:08Z","author_association":"NONE","body":"Perhaps some administrative config for both:\r\n* the default setting of `allow_fallback`\r\n* and whether to honor `allow_fallback` from requests\r\n\r\nwould provide enough control to allow admins to enforce no fallbacks when they have no compatibility concerns. That would also give a mechanism of flipping the default config value on the major version boundary.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735317072/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735356691","html_url":"https://github.com/apache/couchdb/pull/4776#issuecomment-1735356691","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4776","id":1735356691,"node_id":"IC_kwDOAAMmUc5nb3ET","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-26T11:35:34Z","updated_at":"2023-09-26T11:35:34Z","author_association":"MEMBER","body":"I've not done the `text` side yet, or any tests. just sounding out the idea.\r\n\r\nfor `text` I'd prefer to pass the regex through to Lucene (clouseau or nouveau) and document the variation in regex flavour (there's huge overlap). Omitting the optimizations Lucene makes for the sake of purity was a mistake in the original implementation imo.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735356691/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735376469","html_url":"https://github.com/apache/couchdb/pull/4776#issuecomment-1735376469","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4776","id":1735376469,"node_id":"IC_kwDOAAMmUc5nb75V","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-26T11:48:28Z","updated_at":"2023-09-26T11:48:38Z","author_association":"MEMBER","body":"I wonder whether a `$startsWith` operator would be cleaner, as we could then optimize it for text indexes specifically? The `$regex` operator originally did differ for text indexes iirc but we had users experience weirdness when they would add an index and suddenly get different results.\r\n\r\nA general principal in Mango over the last ~5 years is that adding an index shouldn't change the result of a query implicitly, so I'd be wary of reintroducing that behaviour. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735376469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735426001","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1735426001","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1735426001,"node_id":"IC_kwDOAAMmUc5ncH_R","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-26T12:14:43Z","updated_at":"2023-09-26T12:14:43Z","author_association":"CONTRIBUTOR","body":"@rnewson, @ricellis I like the proposed ideas and I am glad that we could utilize the original proposal but in a better way.  Thanks for helping us with getting to this solution!\r\n\r\n@big-r81 we need the backwards compatibility.  Personally, I see at least two reasons for that:\r\n\r\n- It is like that for about 7 years now, but there might be integrations that rely on this (good or bad, it does not matter) behavior.  CouchDB already offers support for multi-version cluster upgrades for changes like that, that is basically mandatory.\r\n\r\n- This is not a bug but a feature.  The `use_index` parameter was introduced in 1b0426aa to force the index selection to a specific index.  Unfortunately, this did not work out well in practice, so 743bd882 added a fallback mechanism to make it less brittle.\r\n\r\nI do not have plans to remove the fallback at the moment.  I do not see it an obvious bad thing but at the same time I understand that this has many disadvantages that may confuse or surprise the users.  Actually, more \"noise\" around this in the documentation and in the configuration toggles could help to raise the awareness.  I do not see that much associated extra work either (it is a small change if you check the current version), but I am willing to take on those, if needed.\r\n ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735426001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735431455","html_url":"https://github.com/apache/couchdb/pull/4774#issuecomment-1735431455","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4774","id":1735431455,"node_id":"IC_kwDOAAMmUc5ncJUf","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-26T12:18:31Z","updated_at":"2023-09-26T12:18:31Z","author_association":"CONTRIBUTOR","body":"@rnewson given that commenters are about to agree regarding #4710, do you still think that launching a discussion and potentially a vote on `dev@` would be necessary?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735431455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735435219","html_url":"https://github.com/apache/couchdb/pull/4774#issuecomment-1735435219","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4774","id":1735435219,"node_id":"IC_kwDOAAMmUc5ncKPT","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-26T12:21:01Z","updated_at":"2023-09-26T12:21:01Z","author_association":"MEMBER","body":"I think no longer needed. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735435219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735441834","html_url":"https://github.com/apache/couchdb/pull/4774#issuecomment-1735441834","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4774","id":1735441834,"node_id":"IC_kwDOAAMmUc5ncL2q","user":{"login":"pgj","id":277835,"node_id":"MDQ6VXNlcjI3NzgzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/277835?v=4","gravatar_id":"","url":"https://api.github.com/users/pgj","html_url":"https://github.com/pgj","followers_url":"https://api.github.com/users/pgj/followers","following_url":"https://api.github.com/users/pgj/following{/other_user}","gists_url":"https://api.github.com/users/pgj/gists{/gist_id}","starred_url":"https://api.github.com/users/pgj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pgj/subscriptions","organizations_url":"https://api.github.com/users/pgj/orgs","repos_url":"https://api.github.com/users/pgj/repos","events_url":"https://api.github.com/users/pgj/events{/privacy}","received_events_url":"https://api.github.com/users/pgj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-26T12:25:26Z","updated_at":"2023-09-26T12:25:26Z","author_association":"CONTRIBUTOR","body":"Excellent.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735441834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735454464","html_url":"https://github.com/apache/couchdb/pull/4776#issuecomment-1735454464","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4776","id":1735454464,"node_id":"IC_kwDOAAMmUc5ncO8A","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-26T12:33:29Z","updated_at":"2023-09-26T12:33:29Z","author_association":"MEMBER","body":"I like that. We could then convert the prefix of the regex to a startswith for views. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1735454464/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1737168382","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1737168382","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1737168382,"node_id":"IC_kwDOAAMmUc5nixX-","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-27T10:56:38Z","updated_at":"2023-09-27T10:56:38Z","author_association":"MEMBER","body":"I agree with changing the behavior of `use_index`, but I'm less keen on overloading it to removing the use of the `_all_docs` index. There are legitimate reasons to use `_all_docs` and it would be a breaking change for some clients (thinking particularly things like Loopback which fetch docs by `_id` using `_find`). Making that breaking change a cluster-wide toggle then makes portability between CouchDB deployments difficult / unpredictable.\r\n\r\nIt may also be useful context that Mango did originally prevent the `_all_docs` fallback unless the query contained a clause that would require it. What we saw, certainly in Cloudant, was that lots of users just blindly added a `{ _id: { \"$gt\": 0 } }` clause to their selectors to work around the restriction. I think if we want to limit the overhead of index / db scans (accidental or otherwise), there are better options available that would be less breaking (e.g. [check the magnitude of the scan before executing the query](https://github.com/apache/couchdb/blob/b6ea325ccb1e3de45f8541ca4fde225ac75f7d54/src/mango/src/mango_cursor_view.erl#L305-L307)).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1737168382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1737448106","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1737448106","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1737448106,"node_id":"IC_kwDOAAMmUc5nj1qq","user":{"login":"rnewson","id":47223,"node_id":"MDQ6VXNlcjQ3MjIz","avatar_url":"https://avatars.githubusercontent.com/u/47223?v=4","gravatar_id":"","url":"https://api.github.com/users/rnewson","html_url":"https://github.com/rnewson","followers_url":"https://api.github.com/users/rnewson/followers","following_url":"https://api.github.com/users/rnewson/following{/other_user}","gists_url":"https://api.github.com/users/rnewson/gists{/gist_id}","starred_url":"https://api.github.com/users/rnewson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rnewson/subscriptions","organizations_url":"https://api.github.com/users/rnewson/orgs","repos_url":"https://api.github.com/users/rnewson/repos","events_url":"https://api.github.com/users/rnewson/events{/privacy}","received_events_url":"https://api.github.com/users/rnewson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-27T13:53:14Z","updated_at":"2023-09-27T13:53:14Z","author_association":"MEMBER","body":"@willholley what cluster-wide toggle? I'm talking about `allow_fallback: true|false` in the `_find` request body. Opt-in. And we had (momentarily, it seems) reached consensus on _not_ changing the default behaviour of `use_index`.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1737448106/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1737462585","html_url":"https://github.com/apache/couchdb/pull/4710#issuecomment-1737462585","issue_url":"https://api.github.com/repos/apache/couchdb/issues/4710","id":1737462585,"node_id":"IC_kwDOAAMmUc5nj5M5","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-09-27T14:00:53Z","updated_at":"2023-09-27T14:00:53Z","author_association":"MEMBER","body":"@rnewson https://github.com/apache/couchdb/pull/4710#issuecomment-1735317072.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/1737462585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]