[{"url":"https://api.github.com/repos/apache/druid/issues/comments/462086552","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-462086552","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":462086552,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjA4NjU1Mg==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-09T22:50:01Z","updated_at":"2019-02-11T01:58:01Z","author_association":"CONTRIBUTOR","body":"@gianm \r\n\r\nLooking for guidance here...\r\n\r\nI have spent the past few days studying the Druid-HLL code and have uncovered at least a half-dozen serious bugs and haven't even started on the merge logic, which from a brief look also has very serious problems.  A number of these problems are interconnected, so you can't just fix one at a time.   \r\n\r\nThis code needs to be redesigned from scratch.  I'm not sure I want to undertake this, but if I were, I would insist on some major changes. The API will have some required changes:  The biggest one is removing the ability for users to specify the hash function.  Any users that are currently doing that, using a different hash function and have historical stored images may not be able to use their history.  \r\n\r\nI am considering 2 strategies:\r\n1. **Rewrite existing code**: Many current internal methods that are now public will become private or package-private: e.g., no public access to internals such as the overflow registers, getNumNonZeroRegisters, getHeaderBytes, getPayloadBytePosition, setVersion, etc.  I may also insist on a merge class rather than a merge method ( fold() ).  \r\n\r\nThe storage would be a little larger (from 1031 bytes to perhaps 1080 bytes).  And merge performance may be a bit slower.  It could still be backward compatible, but old images will still propagate errors into the new design and there is nothing that can be done about that.  Users that record their history with the new design will see much better error performance.  \r\n\r\n2. **API Wrapper to the DS-HLL sketch**.  This will require some changes to the DS-HLL code, but may be easier to do and would eliminate a lot of code duplication.  Basically I have to allow for the non-seeded hash function, adapt to the big-endian fields used by the Druid-HLL, create a merge function that can read the old Druid-HLL images, etc.  \r\n\r\nThe advantage of this is (hopefully) a single code-base for the sketch internals with two different wrappers, one for the old Druid-HLL users, and a new full-function API wrapper for the DS-HLL customers.\r\n\r\nWhatever, the new design would have to be extensively characterized and tested.\r\n\r\nThoughts?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462086552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462100221","html_url":"https://github.com/apache/druid/pull/7046#issuecomment-462100221","issue_url":"https://api.github.com/repos/apache/druid/issues/7046","id":462100221,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjEwMDIyMQ==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-10T03:26:00Z","updated_at":"2019-02-10T03:26:00Z","author_association":"CONTRIBUTOR","body":"For reference: I ended up running the integration test by running:\r\n\r\n```\r\nexport PATH=\"/usr/local/opt/openssl/bin:$PATH\"\r\nexport DOCKER_IP=127.0.0.1\r\nmvn install -ff -DskipTests -B -e\r\n(cd integration-tests && mvn verify -P integration-tests -Dit.test=ITParallelIndexTest)\r\n```\r\n\r\nThe PATH update put a Homebrew openssl on my path; the run_cluster.sh scripts didn't properly set up certs with the OSX default openssl. (They also don't use `set -e` enough so openssl failures didn't always cause the script to fail.) I only had to rerun mvn install when I changed actual server code, not integration test code. I had to increase the RAM given to my Mac Docker to 6GB (in the Docker GUI settings).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462100221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462101987","html_url":"https://github.com/apache/druid/pull/7046#issuecomment-462101987","issue_url":"https://api.github.com/repos/apache/druid/issues/7046","id":462101987,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjEwMTk4Nw==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-10T04:07:58Z","updated_at":"2019-02-10T04:07:58Z","author_association":"CONTRIBUTOR","body":"Ok, this is ready for review. There are a few FIXME comments where I have questions. This implements a suggestion from @jihoonson.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462101987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462139206","html_url":"https://github.com/apache/druid/issues/7039#issuecomment-462139206","issue_url":"https://api.github.com/repos/apache/druid/issues/7039","id":462139206,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjEzOTIwNg==","user":{"login":"prashant-shahi","id":11138844,"node_id":"MDQ6VXNlcjExMTM4ODQ0","avatar_url":"https://avatars.githubusercontent.com/u/11138844?v=4","gravatar_id":"","url":"https://api.github.com/users/prashant-shahi","html_url":"https://github.com/prashant-shahi","followers_url":"https://api.github.com/users/prashant-shahi/followers","following_url":"https://api.github.com/users/prashant-shahi/following{/other_user}","gists_url":"https://api.github.com/users/prashant-shahi/gists{/gist_id}","starred_url":"https://api.github.com/users/prashant-shahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prashant-shahi/subscriptions","organizations_url":"https://api.github.com/users/prashant-shahi/orgs","repos_url":"https://api.github.com/users/prashant-shahi/repos","events_url":"https://api.github.com/users/prashant-shahi/events{/privacy}","received_events_url":"https://api.github.com/users/prashant-shahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-10T14:54:26Z","updated_at":"2019-02-10T14:54:26Z","author_association":"NONE","body":"I am not able to obtain data from Kafka the usual way.\r\nAfter which, I assumed it wasn't able to handle the gzip compression.\r\nWhere can I see the actual logs of the event?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462139206/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462150389","html_url":"https://github.com/apache/druid/issues/6977#issuecomment-462150389","issue_url":"https://api.github.com/repos/apache/druid/issues/6977","id":462150389,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjE1MDM4OQ==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-10T16:50:27Z","updated_at":"2019-02-10T16:53:17Z","author_association":"NONE","body":"I would propose to model materialized views as a new type of datasource instead of requiring a json wrapper around existing query types as is the current solution. \r\nSo instead of \r\n\r\n```\r\n{ \r\n  \"queryType\": \"view\", \r\n  \"query\": { \r\n    \"queryType\": \"groupBy\", \r\n    \"dataSource\": \"wikiticker\", \r\n    \"granularity\": \"all\"\r\n    ...\r\n  }\r\n}\r\n```\r\n\r\nI would use the existing functionality of having different types of dataSource references to indicate that the query is to be executed on a view instead of a raw datasource like so:\r\n\r\n```\r\n{ \r\n    \"type\": \"groupBy\", \r\n    \"dataSource\": {\r\n        \"type\": \"view\",\r\n        \"name\": \"wikiticker\"\r\n    }, \r\n    \"granularity\": \"all\"\r\n    ...\r\n}\r\n```\r\n\r\nRef to druid documentation about different types of datasources: http://druid.io/docs/latest/querying/datasource.html\r\n\r\nBasically, with this approach, a materialized view would be structurally equivalent to a union query.\r\n\r\nWhen dataSource.type is set to \"view\", then the query would scan segments of the master table and any related cuboids and when setting the type to table, one could direct Druid to explicitly query only a particular materialized cuboid. \r\n\r\nAnother advantage would be that it would be more straightforward to add support for materialized views in client frameworks like plywood/pivot plyql/dsql because no json wrapper is needed anymore, just a new type of an existing syntactical building block","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462150389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462185006","html_url":"https://github.com/apache/druid/pull/7046#issuecomment-462185006","issue_url":"https://api.github.com/repos/apache/druid/issues/7046","id":462185006,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjE4NTAwNg==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-10T22:37:26Z","updated_at":"2019-02-10T22:37:26Z","author_association":"CONTRIBUTOR","body":"(Added/tweaked some docs while I was at it.)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462185006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462190447","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462190447","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462190447,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjE5MDQ0Nw==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-10T23:12:30Z","updated_at":"2019-02-10T23:12:30Z","author_association":"CONTRIBUTOR","body":"I recognize that this is a PR without a matching issue, so it's more of a \"proposal in the form of code\" than a ready-to-merge pull request, and I will not feel like my time writing the code has been wasted if this change is unwanted. The PR currently has no tests; if the design of this feature is accepted, I'll write some.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462190447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462191642","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462191642","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462191642,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjE5MTY0Mg==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-10T23:27:22Z","updated_at":"2019-02-11T07:15:58Z","author_association":"CONTRIBUTOR","body":"Note: there's a comment in the PR about how `Granularity.getIterable` can return intervals which extend beyond its input interval.  Here are the uses of that function in non-test code in Druid:\r\n\r\n- druid-indexing-hadoop, GranularityPathSpec: trims the output of that iterable\r\n- druid-processing, IntervalChunkingQueryRunner: does some processing which I believe is equivalent to trimming the output of that iterable\r\n- druid-processing, GroupByUniversalTimestamp: probably should be using granularity.bucketStart instead\r\n- druid-processing, QueryableIndexStorageAdapter.CursorSequenceBuilder: appears to trim the output of that iterable (inside the `apply` method)\r\n- druid-processing, IncrementalIndexStorageAdapter: most uses of the interval (in initializing timeStart and cursorIterable) trim it to the actualInterval, but the `time` field doesn't. Is that a bug?\r\n- druid-server, UniformGranularitySpec: does not trim the intervals.  Because batch ingestion uses this field to throw away data not in the given explicit intervals, this means that the interval used to throw away data may be less precise (larger) than the specified one, which might be surprising! On the other hand, these intervals are what are used (via bucketInterval) to allocate segments, so they probably ought to be segmentGranularity-aligned (in the common case where you are using an ArbitraryGranularitySpec nested inside a UniformGranularitySpec instead of just a standalone ArbitraryGranularitySpec, which is what this getIterable() call is about).\r\n\r\nThis suggests that it would be helpful to have a `Granularity.getTrimmedIterable()` method which would allow most of the current callers of `Granularity.getIterable()` to be simplified. There are two calls in my list that wouldn't be able to use getTrimmedIterable, and I don't know Druid well enough to say whether that is due to bugs or is intentional.  If we do conclude that these are both bugs, I don't know the Druid compatibility rules well enough to know if it would be OK to just change the semantics of `Granularity.getIterable()` rather than add a second variant.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462191642/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462235684","html_url":"https://github.com/apache/druid/issues/6422#issuecomment-462235684","issue_url":"https://api.github.com/repos/apache/druid/issues/6422","id":462235684,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjIzNTY4NA==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T07:15:19Z","updated_at":"2019-02-11T07:15:19Z","author_association":"CONTRIBUTOR","body":"I've seen this several times today in Travis.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462235684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462363519","html_url":"https://github.com/apache/druid/issues/7039#issuecomment-462363519","issue_url":"https://api.github.com/repos/apache/druid/issues/7039","id":462363519,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjM2MzUxOQ==","user":{"login":"prashant-shahi","id":11138844,"node_id":"MDQ6VXNlcjExMTM4ODQ0","avatar_url":"https://avatars.githubusercontent.com/u/11138844?v=4","gravatar_id":"","url":"https://api.github.com/users/prashant-shahi","html_url":"https://github.com/prashant-shahi","followers_url":"https://api.github.com/users/prashant-shahi/followers","following_url":"https://api.github.com/users/prashant-shahi/following{/other_user}","gists_url":"https://api.github.com/users/prashant-shahi/gists{/gist_id}","starred_url":"https://api.github.com/users/prashant-shahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prashant-shahi/subscriptions","organizations_url":"https://api.github.com/users/prashant-shahi/orgs","repos_url":"https://api.github.com/users/prashant-shahi/repos","events_url":"https://api.github.com/users/prashant-shahi/events{/privacy}","received_events_url":"https://api.github.com/users/prashant-shahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T15:13:41Z","updated_at":"2019-02-11T15:13:41Z","author_association":"NONE","body":"I am able to obtain data from other topics but the one with compression.\r\n\r\nI had encountered similar problems when using [kafka-go by segmentio](https://github.com/segmentio/kafka-go) for the same topic, which I resolved by adding a [gzip extension](https://github.com/segmentio/kafka-go/tree/master/gzip).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462363519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462387587","html_url":"https://github.com/apache/druid/pull/7031#issuecomment-462387587","issue_url":"https://api.github.com/repos/apache/druid/issues/7031","id":462387587,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjM4NzU4Nw==","user":{"login":"dylwylie","id":3107079,"node_id":"MDQ6VXNlcjMxMDcwNzk=","avatar_url":"https://avatars.githubusercontent.com/u/3107079?v=4","gravatar_id":"","url":"https://api.github.com/users/dylwylie","html_url":"https://github.com/dylwylie","followers_url":"https://api.github.com/users/dylwylie/followers","following_url":"https://api.github.com/users/dylwylie/following{/other_user}","gists_url":"https://api.github.com/users/dylwylie/gists{/gist_id}","starred_url":"https://api.github.com/users/dylwylie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dylwylie/subscriptions","organizations_url":"https://api.github.com/users/dylwylie/orgs","repos_url":"https://api.github.com/users/dylwylie/repos","events_url":"https://api.github.com/users/dylwylie/events{/privacy}","received_events_url":"https://api.github.com/users/dylwylie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T16:13:42Z","updated_at":"2019-02-11T16:13:42Z","author_association":"CONTRIBUTOR","body":"Thanks @jihoonson! Added the license header and will start a discussion on dev.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462387587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462438683","html_url":"https://github.com/apache/druid/issues/7039#issuecomment-462438683","issue_url":"https://api.github.com/repos/apache/druid/issues/7039","id":462438683,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjQzODY4Mw==","user":{"login":"peferron","id":7009852,"node_id":"MDQ6VXNlcjcwMDk4NTI=","avatar_url":"https://avatars.githubusercontent.com/u/7009852?v=4","gravatar_id":"","url":"https://api.github.com/users/peferron","html_url":"https://github.com/peferron","followers_url":"https://api.github.com/users/peferron/followers","following_url":"https://api.github.com/users/peferron/following{/other_user}","gists_url":"https://api.github.com/users/peferron/gists{/gist_id}","starred_url":"https://api.github.com/users/peferron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/peferron/subscriptions","organizations_url":"https://api.github.com/users/peferron/orgs","repos_url":"https://api.github.com/users/peferron/repos","events_url":"https://api.github.com/users/peferron/events{/privacy}","received_events_url":"https://api.github.com/users/peferron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T18:26:37Z","updated_at":"2019-02-11T18:27:17Z","author_association":"CONTRIBUTOR","body":"If you download the [Kafka binary package](https://kafka.apache.org/downloads) on the same machine that runs your Druid middle manager process, are you able to read from this compressed topic using `kafka-console-consumer`?\r\n\r\nAlso, after removing the `indexSpec` from your ingestion spec, are you able to get a successful HTTP response code when submitting this ingestion spec? If yes, then you can try to open the [overlord console](http://druid.io/docs/latest/design/overlord.html) and look for the logs of the tasks corresponding to the compressed topic. If there are no tasks then look at the overlord logs directly to try to find out why.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462438683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462445824","html_url":"https://github.com/apache/druid/pull/7002#issuecomment-462445824","issue_url":"https://api.github.com/repos/apache/druid/issues/7002","id":462445824,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjQ0NTgyNA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T18:46:15Z","updated_at":"2019-02-11T18:46:15Z","author_association":"CONTRIBUTOR","body":"The different usage mechanisms make this harder to track, but looking at `org.apache.druid.java.util.common.guava.Sequence#toList` (which is the underlying call in a bunch of places here) the only implementations are the eager accumulation into an array list. So this PR is probably safe as is.\r\n\r\nTo protect against future development, can you please add a java doc to `org.apache.druid.java.util.common.guava.Sequence#toList` indicating that various benchmarks rely on this method to eagerly accumulate?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462445824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462448706","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-462448706","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":462448706,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjQ0ODcwNg==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T18:54:14Z","updated_at":"2019-02-11T18:54:14Z","author_association":"CONTRIBUTOR","body":"@gianm You are correct, the prior impl made some assumptions for a dense buffer, but we had some cases where it came in sparse. So this PR checks for such a case and densifies as needed.\r\n\r\nIt also adds some test cases for some \"easy to accidentally hit\" scenarios which are in the realm of what @leerho is talking about as far as challenges with the default Druid HLL implementation.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462448706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462450202","html_url":"https://github.com/apache/druid/pull/7044#issuecomment-462450202","issue_url":"https://api.github.com/repos/apache/druid/issues/7044","id":462450202,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjQ1MDIwMg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T18:58:14Z","updated_at":"2019-02-11T18:58:14Z","author_association":"CONTRIBUTOR","body":"Thanks @Dylan1312 for the review. I added more links.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462450202/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462452387","html_url":"https://github.com/apache/druid/issues/7009#issuecomment-462452387","issue_url":"https://api.github.com/repos/apache/druid/issues/7009","id":462452387,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjQ1MjM4Nw==","user":{"login":"yurmix","id":1529282,"node_id":"MDQ6VXNlcjE1MjkyODI=","avatar_url":"https://avatars.githubusercontent.com/u/1529282?v=4","gravatar_id":"","url":"https://api.github.com/users/yurmix","html_url":"https://github.com/yurmix","followers_url":"https://api.github.com/users/yurmix/followers","following_url":"https://api.github.com/users/yurmix/following{/other_user}","gists_url":"https://api.github.com/users/yurmix/gists{/gist_id}","starred_url":"https://api.github.com/users/yurmix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yurmix/subscriptions","organizations_url":"https://api.github.com/users/yurmix/orgs","repos_url":"https://api.github.com/users/yurmix/repos","events_url":"https://api.github.com/users/yurmix/events{/privacy}","received_events_url":"https://api.github.com/users/yurmix/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T19:04:08Z","updated_at":"2019-02-11T19:05:40Z","author_association":"CONTRIBUTOR","body":"I have started POC implementation to check feasibility. I'm concerned about duplicating `LookupDimensionSpec`, as it is used by `LookupModule` so it probably requires to duplicate it as well.\r\nWith that, the rejected alternative might be easier.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462452387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462453317","html_url":"https://github.com/apache/druid/issues/7047#issuecomment-462453317","issue_url":"https://api.github.com/repos/apache/druid/issues/7047","id":462453317,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjQ1MzMxNw==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T19:06:47Z","updated_at":"2019-02-11T19:06:47Z","author_association":"CONTRIBUTOR","body":"Do I understand correctly that you are preparing data with sketches outside of Druid, this ingestion job expects sketches in some columns, and some of them can be nulls?\r\n\r\nThe comparator of quantiles sketches in version 0.12.3 does not handle nulls. This was fixed at some point. You may want to upgrade to 0.13.0\r\n\r\nAnother way to fix this would be avoid nulls. Create empty sketches instead.\r\n\r\nBy the way, I see that you are using approximate histogram as well. Please be aware that it has problems. I would suggest using quantiles sketch instead. See https://datasketches.github.io/docs/Quantiles/DruidApproxHistogramStudy.html\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462453317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462469090","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-462469090","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":462469090,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjQ2OTA5MA==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T19:50:29Z","updated_at":"2019-02-11T19:50:29Z","author_association":"CONTRIBUTOR","body":"@drcrallen , @gianm \r\n\r\nI have a number of concerns about this PR that I am still investigating.  Please don't merge this yet.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462469090/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462481096","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-462481096","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":462481096,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjQ4MTA5Ng==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T20:26:00Z","updated_at":"2019-02-11T20:26:00Z","author_association":"CONTRIBUTOR","body":"@leerho IMHO if data sketches are intended to be enterprise sketch support library, then I think the effort put into fixing the druid HLL sketch library should be minimal.\r\n\r\nI know we have effort internally to fix some of the accuracy issues in the existing HLL cardinality estimations. Beyond some high level fixes, if I had to choose between my team investing in fixing HLL fixes in the data format level, or finding a way to validate Data Sketches for enterprise sketching needs, I'd rather have time spent on Data Sketches validation and adoption since it has applications and impact outside of just Druid.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462481096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462484872","html_url":"https://github.com/apache/druid/issues/6977#issuecomment-462484872","issue_url":"https://api.github.com/repos/apache/druid/issues/6977","id":462484872,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjQ4NDg3Mg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T20:37:31Z","updated_at":"2019-02-11T20:37:31Z","author_association":"MEMBER","body":"@sascha-coenen sounds interesting, would you like to make this a proposal?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462484872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462485730","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-462485730","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":462485730,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjQ4NTczMA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T20:40:12Z","updated_at":"2019-02-11T20:40:12Z","author_association":"CONTRIBUTOR","body":"Also please keep in mind this PR is not trying to make things perfect, just \"better\"","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462485730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462486014","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-462486014","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":462486014,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjQ4NjAxNA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T20:41:13Z","updated_at":"2019-02-11T20:41:13Z","author_association":"CONTRIBUTOR","body":"I'm also worried https://github.com/apache/incubator-druid/pull/6865#issuecomment-462086552 won't reach enough audience here. @leerho if you don't have the info you need from this thread, posting such information and insights to the dev list would likely reach a more diverse audience.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462486014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462507932","html_url":"https://github.com/apache/druid/issues/6977#issuecomment-462507932","issue_url":"https://api.github.com/repos/apache/druid/issues/6977","id":462507932,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjUwNzkzMg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T21:47:55Z","updated_at":"2019-02-11T21:47:55Z","author_association":"CONTRIBUTOR","body":"@sascha-coenen sounds good to me too. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462507932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462509418","html_url":"https://github.com/apache/druid/issues/5543#issuecomment-462509418","issue_url":"https://api.github.com/repos/apache/druid/issues/5543","id":462509418,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjUwOTQxOA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T21:52:25Z","updated_at":"2019-02-11T21:52:25Z","author_association":"CONTRIBUTOR","body":"@csimplestring, I'm sorry, but I was wrong. IngestSegmentFirehose is not available for native parallel indexing and will be implemented in https://github.com/apache/incubator-druid/pull/7048.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462509418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462515423","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462515423","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462515423,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjUxNTQyMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T22:11:19Z","updated_at":"2019-02-11T22:11:19Z","author_association":"CONTRIBUTOR","body":"@glasser thanks for working on this! I have one comment.\r\n\r\nAs in other distributed systems like Hadoop or Spark, it's important to evenly distributed work in parallel indexing because the entire ingestion is completed when the longest task is finished. It means, each sub task is supposed to process almost same amount of data.\r\nIn this PR, it looks that input segments are split based on `taskGranularity`. But, in practice, it's possible that each time chunk has different amounts of data. What do you think about splitting based on the segment size, so that each task process a similar size of segments?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462515423/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462518125","html_url":"https://github.com/apache/druid/pull/7046#issuecomment-462518125","issue_url":"https://api.github.com/repos/apache/druid/issues/7046","id":462518125,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjUxODEyNQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T22:20:05Z","updated_at":"2019-02-11T22:20:05Z","author_association":"CONTRIBUTOR","body":"@glasser thanks! I'll check soon.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462518125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462518471","html_url":"https://github.com/apache/druid/pull/6683#issuecomment-462518471","issue_url":"https://api.github.com/repos/apache/druid/issues/6683","id":462518471,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjUxODQ3MQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T22:21:12Z","updated_at":"2019-02-11T22:21:12Z","author_association":"CONTRIBUTOR","body":"@kaijianding thanks. Would you please fix the conflicts and check @leventov's last comment?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462518471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462519783","html_url":"https://github.com/apache/druid/issues/6967#issuecomment-462519783","issue_url":"https://api.github.com/repos/apache/druid/issues/6967","id":462519783,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjUxOTc4Mw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T22:25:35Z","updated_at":"2019-02-11T22:25:35Z","author_association":"CONTRIBUTOR","body":"Fixed in https://github.com/apache/incubator-druid/pull/7015.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462519783/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462529816","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462529816","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462529816,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjUyOTgxNg==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T23:00:52Z","updated_at":"2019-02-11T23:00:52Z","author_association":"CONTRIBUTOR","body":"Good question. I was kind of imagining you would set taskGranularity equal to your output segmentGranularity so that each subtask would write one segment. You're right that things can get unbalanced though.\r\n\r\nAre you imagining that the split implementation would query the segments metadata to learn all the segment sizes and the user would specify bytes per split?  Would we try to not divide any input segments but just chunk them together?\r\n\r\nThis seems like a reasonable option to desire but I kind of feel like people might still want to get started with the simpler \"I know my peons can handle an hour of data, just split by hours\" anyway... so implementing one of these options doesn't necessarily stop from implementing the other later.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462529816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462551089","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462551089","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462551089,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjU1MTA4OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T00:18:56Z","updated_at":"2019-02-12T00:18:56Z","author_association":"CONTRIBUTOR","body":"> Are you imagining that the split implementation would query the segments metadata to learn all the segment sizes and the user would specify bytes per split? Would we try to not divide any input segments but just chunk them together?\r\n\r\nYes, this is exactly what I want. The task can ask the coordinator to get the segment metadata. Tasks use `CoordinatorClient` when they talk with the coordinator, so you may want to add a new method to it which calls `/druid/coordinator/v1/datasources/{dataSourceName}/intervals/{interval}?simple` (http://druid.io/docs/latest/operations/api-reference.html#datasources). Its result is like below:\r\n\r\n```json\r\n{\r\n  \"2019-02-11T23:00:00.000Z/2019-02-12T00:00:00.000Z\": {\r\n    \"size\": 21459255,\r\n    \"count\": 2\r\n  },\r\n  \"2019-02-11T22:00:00.000Z/2019-02-11T23:00:00.000Z\": {\r\n    \"size\": 24510542,\r\n    \"count\": 2\r\n  }\r\n}\r\n```\r\n\r\n> This seems like a reasonable option to desire but I kind of feel like people might still want to get started with the simpler \"I know my peons can handle an hour of data, just split by hours\" anyway... so implementing one of these options doesn't necessarily stop from implementing the other later.\r\n\r\nMy feeling is that `maxInputSegmentBytesPerTask` is simpler than `taskGranularity` because , with `taskGranularity`, people should think about how many segments are in each time chunk and each task can handle it. However, for `maxInputSegmentBytesPerTask`, they can set it to whatever a task can handle. I think we can provide a default, so that people even don't have to think about it in most cases.\r\n\r\nIf `taskGranularity` is better than `maxInputSegmentBytesPerTask` in some cases, I'm fine with adding it. But, I don't think of anything. Do you have something in your mind?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462551089/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462560161","html_url":"https://github.com/apache/druid/issues/7037#issuecomment-462560161","issue_url":"https://api.github.com/repos/apache/druid/issues/7037","id":462560161,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjU2MDE2MQ==","user":{"login":"justinborromeo","id":9417701,"node_id":"MDQ6VXNlcjk0MTc3MDE=","avatar_url":"https://avatars.githubusercontent.com/u/9417701?v=4","gravatar_id":"","url":"https://api.github.com/users/justinborromeo","html_url":"https://github.com/justinborromeo","followers_url":"https://api.github.com/users/justinborromeo/followers","following_url":"https://api.github.com/users/justinborromeo/following{/other_user}","gists_url":"https://api.github.com/users/justinborromeo/gists{/gist_id}","starred_url":"https://api.github.com/users/justinborromeo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinborromeo/subscriptions","organizations_url":"https://api.github.com/users/justinborromeo/orgs","repos_url":"https://api.github.com/users/justinborromeo/repos","events_url":"https://api.github.com/users/justinborromeo/events{/privacy}","received_events_url":"https://api.github.com/users/justinborromeo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T00:48:09Z","updated_at":"2019-02-12T00:48:09Z","author_association":"CONTRIBUTOR","body":"Opened #7052 to address the suggested changes above.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462560161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462576188","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462576188","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462576188,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjU3NjE4OA==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T01:37:10Z","updated_at":"2019-02-12T01:37:10Z","author_association":"CONTRIBUTOR","body":"I guess my logic is we run Kafka indexing service making one segment per task so handling one segment per task feels doable and simple :) But of course KIS can be configured with max bytes as well. I like the point that we can have a default max bytes here. \r\n\r\nWhat are you imagining this would do for single segments larger than the max bytes setting?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462576188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462577066","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462577066","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462577066,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjU3NzA2Ng==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T01:41:26Z","updated_at":"2019-02-12T01:41:26Z","author_association":"CONTRIBUTOR","body":"(er, single intervals, not single segments - I'm bad at terminology here.)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462577066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462586850","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462586850","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462586850,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjU4Njg1MA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T02:23:49Z","updated_at":"2019-02-12T02:23:49Z","author_association":"CONTRIBUTOR","body":"For an interval larger than the max bytes setting, I think each subTask should process a subset of segments, so that the large interval can be processed in parallel.\r\n\r\nFor a segment larger than the max bytes setting, probably it's fine to process with one subTask.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462586850/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462591616","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462591616","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462591616,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjU5MTYxNg==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T02:43:01Z","updated_at":"2019-02-12T02:43:01Z","author_association":"CONTRIBUTOR","body":"OK. And I guess it doesn't really matter how segments are assigned between tasks — all the locking and segment allocation works no matter how much overlap there is, right?\r\n\r\nSince this will require the subtasks to understand how to have specific segments named rather than just intervals, perhaps the task itself should be extended to allow you to specify a list of segments as an alternative to an interval in the first place?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462591616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462634766","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462634766","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462634766,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjYzNDc2Ng==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T06:33:55Z","updated_at":"2019-02-12T06:33:55Z","author_association":"CONTRIBUTOR","body":"> OK. And I guess it doesn't really matter how segments are assigned between tasks — all the locking and segment allocation works no matter how much overlap there is, right?\r\n\r\nWould you tell me more about what kind of overlap you're thinking? I think it's fine if each task processes a disjoint subset of input segments.\r\n\r\n> Since this will require the subtasks to understand how to have specific segments named rather than just intervals, perhaps the task itself should be extended to allow you to specify a list of segments as an alternative to an interval in the first place?\r\n\r\nI think we can extend `IngestSegmentFirehoseFactory` to accept a list of segments. In `IngestSegmentFirehoseFactory`, I think the `interval` should be empty if `segments` are specified. This `segments` should also be integrated with the `intervals` of `GranularitySpec`. If `intervals` are given, the task should read only the segments overlapping with the intervals.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462634766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462849604","html_url":"https://github.com/apache/druid/issues/6942#issuecomment-462849604","issue_url":"https://api.github.com/repos/apache/druid/issues/6942","id":462849604,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjg0OTYwNA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T17:17:43Z","updated_at":"2019-02-12T17:17:43Z","author_association":"CONTRIBUTOR","body":"I started with classloader reflection approaches, but people asked instead that the classes be copied over. (See the multiple declarations of support for copying the code in https://github.com/apache/incubator-druid/pull/6815 ).\r\n\r\nI couldn't find a strong enough argument to refute it, and having the code in the codebase that we critically rely on has proven pretty sustainable in the past.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462849604/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462854161","html_url":"https://github.com/apache/druid/pull/6815#issuecomment-462854161","issue_url":"https://api.github.com/repos/apache/druid/issues/6815","id":462854161,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjg1NDE2MQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T17:29:33Z","updated_at":"2019-02-12T17:29:33Z","author_association":"CONTRIBUTOR","body":"For future folks: https://github.com/apache/incubator-druid/pull/6948 adds more compat up to 27.0.1","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462854161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462861755","html_url":"https://github.com/apache/druid/pull/6990#issuecomment-462861755","issue_url":"https://api.github.com/repos/apache/druid/issues/6990","id":462861755,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjg2MTc1NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T17:47:58Z","updated_at":"2019-02-12T17:47:58Z","author_association":"CONTRIBUTOR","body":"Hi @QiuMM, would you elaborate more on this case? When and how can it happen that a kafka task is paused for the same endOffsets twice or more?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462861755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462869668","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462869668","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462869668,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjg2OTY2OA==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T18:07:25Z","updated_at":"2019-02-12T18:07:25Z","author_association":"CONTRIBUTOR","body":"> Would you tell me more about what kind of overlap you're thinking? I think it's fine if each task processes a disjoint subset of input segments.\r\n\r\nI was just stressing about what happens about combining the results of processing two segments from a given time chunk on different subtasks, but I think the answer is that everything just works fine.\r\n\r\nI have a few further questions about overlapping intervals.\r\n\r\n(a) It looks like the `/druid/coordinator/v1/datasources/{dataSourceName}/intervals/{interval}` API only shows us segments that are fully contained inside the given interval. I think that's not what we want — we also want to include partially covered intervals (filtering the rows we read from them of course). Do you know if this happens to be accessible somewhere in the API? Would it be reasonable to add an `includeOverlapping` query parameter to that API which uses `theInterval::overlaps` instead of `theInterval::contains `for its filter.\r\n\r\nAlternatively, it seems like we could just use the same `SegmentListUsedAction` that the `connect` method uses. Seems like this might be simpler and more clearly equivalent to the unsplit case.\r\n\r\nIn either case it looks like the client in question isn't immediately accessible. I think I would need to add an injection for CoordinatorClient directly into IngestSegmentFirehoseFactory, but it looks like several services use IndexingServiceFirehoseModule without binding CoordinatorClient. Would I want to add a binding for CoordinatorClient directly to IndexingServiceFirehoseModule?\r\n\r\nOr if using SegmentListUsedAction I would have to make sure to call setToolbox in the supervisor task like it is currently called in the sub task.  That seems simpler than using CoordinatorClient.\r\n\r\n(BTW I notice that when IndexTask calls setToolbox on its firehose factory, it knows how to recurse through CombiningFirehoseFactory, but the parallel sub task does not do that.  I think I could add a TaskToolboxConsumingFirehoseFactory interface implemented by IngestSegmentFirehoseFactory and CombiningFirehoseFactory to simplify this and make it more consistent.)\r\n\r\n(b) I don't really know what happens when we have two segments with overlapping intervals and distinct versions.  Eg v1 @ 1:00-3:00, v2 @ 2:00-4:00.  Is the data from 1:00-2:00 in the first interval supposed to be visible, or is the entire segment overshadowed?  If it's the former, then specifically, when IngestSegmentFirehoseFactory calls \r\n```\r\n      final List<TimelineObjectHolder<String, DataSegment>> timeLineSegments = VersionedIntervalTimeline\r\n          .forSegments(usedSegments)\r\n          .lookup(interval);\r\n```\r\n\r\nwill the overshadowing still work if we're in a subtask where we're only passing the first segment in `usedSegments`, or does this calculation have enough context to understand that part of the segment should be ignored even though the segment that overshadows it is not in `usedSegments` in this particular subtask?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462869668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462875878","html_url":"https://github.com/apache/druid/pull/6990#issuecomment-462875878","issue_url":"https://api.github.com/repos/apache/druid/issues/6990","id":462875878,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjg3NTg3OA==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T18:24:27Z","updated_at":"2019-02-12T18:31:56Z","author_association":"MEMBER","body":"@jihoonson I am not sure how it happen, I just observed one kafka index task pasuing forever and found log like this: `Ignoring duplicate request, end offsets already set for sequences`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462875878/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462878867","html_url":"https://github.com/apache/druid/pull/6990#issuecomment-462878867","issue_url":"https://api.github.com/repos/apache/druid/issues/6990","id":462878867,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjg3ODg2Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T18:32:38Z","updated_at":"2019-02-12T18:32:38Z","author_association":"CONTRIBUTOR","body":"@QiuMM thanks. I guess it might happen if no data has been ingested since the first endOffsets update when the second pause & update endOffsets are requested. I just wanted to check that my guess is correct. The latest change looks good to me.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462878867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462880533","html_url":"https://github.com/apache/druid/issues/6942#issuecomment-462880533","issue_url":"https://api.github.com/repos/apache/druid/issues/6942","id":462880533,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjg4MDUzMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T18:37:08Z","updated_at":"2019-02-12T18:37:08Z","author_association":"CONTRIBUTOR","body":"@drcrallen I'm still not sure what are the benefits of the reflection approach for this issue. Would you elaborate more?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462880533/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462896179","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462896179","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462896179,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjg5NjE3OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T19:18:42Z","updated_at":"2019-02-12T19:18:42Z","author_association":"CONTRIBUTOR","body":"@glasser good questions!\r\n\r\nFor (a), thank you for reminding me about `SegmentListUsedAction`. I think it's the best option and you can set taskToolBox and use it. For `TaskToolboxConsumingFirehoseFactory`, I guess you want to extract `IndexTask.setFirehoseFactoryToolbox()` to `IngestSegmentFirehoseFactory`. Please go for it if you think it's simpler.\r\n\r\nFor (b), the first segment should be partially overshadowed. The part of v1 @ 1:00-2:00 should be available for input. `VersionedIntervalTimeline.lookup()` is responsible for doing this. If `usedSegments` are the segments of v1 @ 1:00-3:00 and v2 @ 2:00-4:00, `lookup()` would return 2 `TimelineObjectHolder` of v1 @ 1:00-2:00 and v2 @ 2:00-4:00. However, if `usedSegments` is v1 @ 1:00-3:00, `lookup()` just returns a `TimelineObjectHolder` for the same segment.\r\n\r\nSo, you may want to adjust `intervals` of the granularitySpec for sub tasks as well to prune out the overshadowed parts. I'm not sure how this problem is currently being handled though.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462896179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462901715","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462901715","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462901715,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjkwMTcxNQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T19:32:54Z","updated_at":"2019-02-12T19:33:18Z","author_association":"CONTRIBUTOR","body":"Oh, I found it. In `IngestSegmentFirehoseFactory`, it creates `WindowedStorageAdapter` which filters out data outside of the interval of `TimelineObjectHolder`. So, you don't have to worry about it and adjustment for `intervals` won't be needed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462901715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462904598","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462904598","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462904598,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjkwNDU5OA==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T19:40:42Z","updated_at":"2019-02-12T19:40:42Z","author_association":"CONTRIBUTOR","body":"But doesn't that holder come from the timeline, so it only works if the timeline was constructed from the full set of segments?\r\n\r\nI think what this means is that `IngestSegmentFirehoseFactory.connect` needs to *always* call SegmentListAction/VersionedIntervalTimeline on the *full* original interval even in a subtask.  However it will only call fetchSegments on the selected segments, and it should skip elements of timelineSegments that aren't in the selected segments.\r\n\r\nThis implies that instead of `segments` being an alternate option for `interval`, `interval` always needs to be specified.\r\n\r\nAlternatively, the split operation needs to provide both the full list of segments and the split-specific segment list to each split firehose factory.  (Or at least include an extra list of overlapping segments.)\r\n\r\n\r\n(In other news, my TaskToolboxConsumingFirehoseFactory idea runs into trouble because CombiningFirehoseFactory is in druid-server which doesn't have access to druid-indexing-service's TaskToolbox type. I suppose the interface could declare `setTaskToolbox(Object)` and let IngestSegmentFirehoseFactory do a typecast?)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462904598/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462908621","html_url":"https://github.com/apache/druid/pull/6813#issuecomment-462908621","issue_url":"https://api.github.com/repos/apache/druid/issues/6813","id":462908621,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjkwODYyMQ==","user":{"login":"scrawfor","id":7061689,"node_id":"MDQ6VXNlcjcwNjE2ODk=","avatar_url":"https://avatars.githubusercontent.com/u/7061689?v=4","gravatar_id":"","url":"https://api.github.com/users/scrawfor","html_url":"https://github.com/scrawfor","followers_url":"https://api.github.com/users/scrawfor/followers","following_url":"https://api.github.com/users/scrawfor/following{/other_user}","gists_url":"https://api.github.com/users/scrawfor/gists{/gist_id}","starred_url":"https://api.github.com/users/scrawfor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scrawfor/subscriptions","organizations_url":"https://api.github.com/users/scrawfor/orgs","repos_url":"https://api.github.com/users/scrawfor/repos","events_url":"https://api.github.com/users/scrawfor/events{/privacy}","received_events_url":"https://api.github.com/users/scrawfor/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T19:51:25Z","updated_at":"2019-02-12T19:51:25Z","author_association":"CONTRIBUTOR","body":"Hey @clintropolis, it took a few commits since checkstyle wasn't throwing any issues locally for some reason (and I can't read the log apparently), but it should be fixed now.\r\n\r\nI have validated it, and am currently using it in my instance of druid.  I can add a test if you need it, but as you said I originally just followed the model from `MySQLFirehoseDatabaseConnector`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462908621/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462932803","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462932803","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462932803,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjkzMjgwMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T21:00:53Z","updated_at":"2019-02-12T21:00:53Z","author_association":"CONTRIBUTOR","body":"Is your concern that different sub tasks can process overlapping segments of different versions, so that both of them produce data of overlapping intervals which can cause the incorrect result? I think it's valid. \r\n\r\nTo avoid this, we can add another restriction in split generation: each split should contain all overlapping segments. For example, suppose we have 3 segments of v1 @ 1:00-3:00, v2 @ 2:00-4:00, and v2 @ 4:00-6:00. Then, we need 2 sub tasks each of which processes (v1 @ 1:00-3:00 and v2 @ 2:00-4:00) and (v2 @ 4:00-6:00), respectively. Each sub tasks should be able to generate the valid timeline from the given subset of sub tasks.\r\n\r\nI think this restriction is acceptable because this kind of overlapping won't be common. What do you think?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462932803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462952855","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-462952855","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":462952855,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjk1Mjg1NQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T21:58:05Z","updated_at":"2019-02-12T21:58:05Z","author_association":"CONTRIBUTOR","body":"@leventov did you have more comments on this","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462952855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462967728","html_url":"https://github.com/apache/druid/pull/6979#issuecomment-462967728","issue_url":"https://api.github.com/repos/apache/druid/issues/6979","id":462967728,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjk2NzcyOA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T22:42:03Z","updated_at":"2019-02-12T22:42:03Z","author_association":"MEMBER","body":"@hpandeycodeit would you fix the violations of this rule? There are 18 of them, according to CI: https://teamcity.jetbrains.com/viewLog.html?buildId=1937670&tab=Inspection&buildTypeId=OpenSourceProjects_Druid_InspectionsPullRequests","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462967728/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462971341","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-462971341","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":462971341,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjk3MTM0MQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T22:51:52Z","updated_at":"2019-02-12T22:51:52Z","author_association":"MEMBER","body":"I'm OK with this PR.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462971341/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462986898","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462986898","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462986898,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjk4Njg5OA==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T23:36:20Z","updated_at":"2019-02-12T23:36:20Z","author_association":"CONTRIBUTOR","body":"That sounds reasonable, with this caveat: you previously said:\r\n\r\n> For an interval larger than the max bytes setting, I think each subTask should process a subset of segments, so that the large interval can be processed in parallel.\r\n\r\nand I think what you meant by that is that if there are a bunch of segments with the same interval and version (different partition num) that it *would* be OK to split them up across sub tasks.\r\n\r\nSo I think the algorithm would be something like: list the segments for the whole interval as a timeline.  Select the first segment, and take the set of all segments that overlap it, transitively. If this set of segments has more than one interval, then all of those segments are constrained to go in the same subtask.  Otherwise, each of the segments in this set (all of which are for the same interval) may go in their own subtask.\r\n\r\nWe've now partitioned the full set of segments into subsets that have to go together.  We can then divide the whole list up into subtasks. This is the [https://en.wikipedia.org/wiki/Bin_packing_problem](https://en.wikipedia.org/wiki/Bin_packing_problem). Rather than try to optimally solve it or even use the first-fit problem, I would just use the greedy algorithm that goes down the list of subsets and greedily assigns them to subtasks, since this is more likely to get segments of the same interval onto the same subtask and thus lead to fewer output segments.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462986898/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462987202","html_url":"https://github.com/apache/druid/issues/7057#issuecomment-462987202","issue_url":"https://api.github.com/repos/apache/druid/issues/7057","id":462987202,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjk4NzIwMg==","user":{"login":"justinborromeo","id":9417701,"node_id":"MDQ6VXNlcjk0MTc3MDE=","avatar_url":"https://avatars.githubusercontent.com/u/9417701?v=4","gravatar_id":"","url":"https://api.github.com/users/justinborromeo","html_url":"https://github.com/justinborromeo","followers_url":"https://api.github.com/users/justinborromeo/followers","following_url":"https://api.github.com/users/justinborromeo/following{/other_user}","gists_url":"https://api.github.com/users/justinborromeo/gists{/gist_id}","starred_url":"https://api.github.com/users/justinborromeo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinborromeo/subscriptions","organizations_url":"https://api.github.com/users/justinborromeo/orgs","repos_url":"https://api.github.com/users/justinborromeo/repos","events_url":"https://api.github.com/users/justinborromeo/events{/privacy}","received_events_url":"https://api.github.com/users/justinborromeo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T23:37:16Z","updated_at":"2019-02-12T23:37:16Z","author_association":"CONTRIBUTOR","body":"Do you have any strong opinions on which policy would be the best to use across all the emitters?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462987202/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462989524","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-462989524","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":462989524,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjk4OTUyNA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T23:44:26Z","updated_at":"2019-02-12T23:44:26Z","author_association":"MEMBER","body":"#6814 might be the most appropriate place to continue discussion?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462989524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462990301","html_url":"https://github.com/apache/druid/issues/7057#issuecomment-462990301","issue_url":"https://api.github.com/repos/apache/druid/issues/7057","id":462990301,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjk5MDMwMQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-12T23:46:52Z","updated_at":"2019-02-12T23:46:52Z","author_association":"MEMBER","body":"In my opinion, dropping old events is better than dropping new ones (as `StatsDEmitter` and `KafkaEmitter` any maybe some other emitters currently do). Logging a warning or error alongside dropping events also makes sense.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462990301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462994714","html_url":"https://github.com/apache/druid/issues/6989#issuecomment-462994714","issue_url":"https://api.github.com/repos/apache/druid/issues/6989","id":462994714,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjk5NDcxNA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T00:00:30Z","updated_at":"2019-02-13T00:00:30Z","author_association":"CONTRIBUTOR","body":"@glasser sorry, just saw your last question. I left some comments in the PR.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462994714/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462996281","html_url":"https://github.com/apache/druid/issues/7057#issuecomment-462996281","issue_url":"https://api.github.com/repos/apache/druid/issues/7057","id":462996281,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjk5NjI4MQ==","user":{"login":"justinborromeo","id":9417701,"node_id":"MDQ6VXNlcjk0MTc3MDE=","avatar_url":"https://avatars.githubusercontent.com/u/9417701?v=4","gravatar_id":"","url":"https://api.github.com/users/justinborromeo","html_url":"https://github.com/justinborromeo","followers_url":"https://api.github.com/users/justinborromeo/followers","following_url":"https://api.github.com/users/justinborromeo/following{/other_user}","gists_url":"https://api.github.com/users/justinborromeo/gists{/gist_id}","starred_url":"https://api.github.com/users/justinborromeo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinborromeo/subscriptions","organizations_url":"https://api.github.com/users/justinborromeo/orgs","repos_url":"https://api.github.com/users/justinborromeo/repos","events_url":"https://api.github.com/users/justinborromeo/events{/privacy}","received_events_url":"https://api.github.com/users/justinborromeo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T00:06:21Z","updated_at":"2019-02-13T00:06:21Z","author_association":"CONTRIBUTOR","body":"Also, what do you mean by \"backpressure policy\"?  Does that just involve dropping the oldest events in queue?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462996281/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462997568","html_url":"https://github.com/apache/druid/issues/6949#issuecomment-462997568","issue_url":"https://api.github.com/repos/apache/druid/issues/6949","id":462997568,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjk5NzU2OA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T00:11:29Z","updated_at":"2019-02-13T00:11:29Z","author_association":"CONTRIBUTOR","body":"Proposal template PR: https://github.com/apache/incubator-druid/pull/7062","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462997568/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462997970","html_url":"https://github.com/apache/druid/issues/6320#issuecomment-462997970","issue_url":"https://api.github.com/repos/apache/druid/issues/6320","id":462997970,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjk5Nzk3MA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T00:13:08Z","updated_at":"2019-02-13T00:13:08Z","author_association":"CONTRIBUTOR","body":"@yurmix Sorry, I've been meaning to review this, but I have been pretty busy handling 0.14.0-incubating release items recently, I'll have more time after that settles down","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462997970/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462998932","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-462998932","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":462998932,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2Mjk5ODkzMg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T00:16:30Z","updated_at":"2019-02-13T00:16:30Z","author_association":"CONTRIBUTOR","body":"@glasser sounds nice! Are you planning to update your PR?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462998932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463002225","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-463002225","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":463002225,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzAwMjIyNQ==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T00:29:31Z","updated_at":"2019-02-13T00:29:31Z","author_association":"CONTRIBUTOR","body":"Yes, now that I think we have a concrete algorithm!\r\n\r\nI did just pull out the observation I had above about the special-case setToolbox code in IndexTask not existing in ParallelIndexSubTask into https://github.com/apache/incubator-druid/pull/7063","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463002225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463005250","html_url":"https://github.com/apache/druid/issues/6320#issuecomment-463005250","issue_url":"https://api.github.com/repos/apache/druid/issues/6320","id":463005250,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzAwNTI1MA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T00:42:32Z","updated_at":"2019-02-13T00:42:32Z","author_association":"CONTRIBUTOR","body":"@yurmix thanks for the proposal. Would you please explain what is the different between Averager and PostAggregator?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463005250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463006330","html_url":"https://github.com/apache/druid/pull/7048#issuecomment-463006330","issue_url":"https://api.github.com/repos/apache/druid/issues/7048","id":463006330,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzAwNjMzMA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T00:47:09Z","updated_at":"2019-02-13T00:47:09Z","author_association":"CONTRIBUTOR","body":"Thanks! I'll take a look it too.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463006330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463009873","html_url":"https://github.com/apache/druid/pull/7046#issuecomment-463009873","issue_url":"https://api.github.com/repos/apache/druid/issues/7046","id":463009873,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzAwOTg3Mw==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T01:01:03Z","updated_at":"2019-02-13T01:01:03Z","author_association":"CONTRIBUTOR","body":"I'm not quite sure how to write a test in ParallelIndexSupervisorTaskTest to fully exercise this. testWithoutInterval does exercise the new just-in-time locking code, but it doesn't explicitly validate that new versions of segments would be created.  Is that adequate, or should I figure out a way to have a test that ingests some data twice and see different versions the second time? I can't see how to get access to the metadata of published segments. Something in createTaskToolbox? There's a lot of nulls there :)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463009873/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463014180","html_url":"https://github.com/apache/druid/issues/6426#issuecomment-463014180","issue_url":"https://api.github.com/repos/apache/druid/issues/6426","id":463014180,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzAxNDE4MA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T01:19:26Z","updated_at":"2019-02-13T01:19:26Z","author_association":"CONTRIBUTOR","body":"It looks that we already have docs for this purpose. I raised https://github.com/apache/incubator-druid/pull/7064 to fix and improve them.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463014180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463016746","html_url":"https://github.com/apache/druid/pull/7046#issuecomment-463016746","issue_url":"https://api.github.com/repos/apache/druid/issues/7046","id":463016746,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzAxNjc0Ng==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T01:30:31Z","updated_at":"2019-02-13T01:30:31Z","author_association":"CONTRIBUTOR","body":"Yeah, nulls.. We need to tidy it up later. I think you can list published segments from the metadata store. You may need to expose `storageCoordinator` in `IngestionTestBase` to call `getUsedSegmentsForIntervals()`. \r\n\r\nSide note: `IngestionTestBase` currently has two metadata stores of `HeapMemoryTaskStorage` and `IndexerSQLMetadataStorageCoordinator` which are based on heap and derby, respectively. This is lame and we should fix it later too.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463016746/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463019935","html_url":"https://github.com/apache/druid/pull/7063#issuecomment-463019935","issue_url":"https://api.github.com/repos/apache/druid/issues/7063","id":463019935,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzAxOTkzNQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T01:44:38Z","updated_at":"2019-02-13T01:44:49Z","author_association":"CONTRIBUTOR","body":"Would you please check the build failure? Here's the error.\r\n\r\n```\r\n[ERROR] /home/travis/build/apache/incubator-druid/indexing-service/src/main/java/org/apache/druid/indexing/firehose/IngestSegmentFirehoseFactory.java:128: Line matches the illegal pattern 'Use \"string\".equals(javaVar) and STRING_CONSTANT.equals(javaVar) instead of javaVar.equals(\"string\") and javaVar.equals(STRING_CONSTANT)'. [Regexp]\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463019935/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463020191","html_url":"https://github.com/apache/druid/pull/7062#issuecomment-463020191","issue_url":"https://api.github.com/repos/apache/druid/issues/7062","id":463020191,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzAyMDE5MQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T01:45:46Z","updated_at":"2019-02-13T01:45:46Z","author_association":"CONTRIBUTOR","body":"@jon-wei would you please add a license?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463020191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463032085","html_url":"https://github.com/apache/druid/pull/7042#issuecomment-463032085","issue_url":"https://api.github.com/repos/apache/druid/issues/7042","id":463032085,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzAzMjA4NQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T02:39:11Z","updated_at":"2019-02-13T02:52:21Z","author_association":"MEMBER","body":"Now with more missing Overlord API documentation as well.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463032085/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463045041","html_url":"https://github.com/apache/druid/pull/5583#issuecomment-463045041","issue_url":"https://api.github.com/repos/apache/druid/issues/5583","id":463045041,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzA0NTA0MQ==","user":{"login":"hellobabygogo","id":8693129,"node_id":"MDQ6VXNlcjg2OTMxMjk=","avatar_url":"https://avatars.githubusercontent.com/u/8693129?v=4","gravatar_id":"","url":"https://api.github.com/users/hellobabygogo","html_url":"https://github.com/hellobabygogo","followers_url":"https://api.github.com/users/hellobabygogo/followers","following_url":"https://api.github.com/users/hellobabygogo/following{/other_user}","gists_url":"https://api.github.com/users/hellobabygogo/gists{/gist_id}","starred_url":"https://api.github.com/users/hellobabygogo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hellobabygogo/subscriptions","organizations_url":"https://api.github.com/users/hellobabygogo/orgs","repos_url":"https://api.github.com/users/hellobabygogo/repos","events_url":"https://api.github.com/users/hellobabygogo/events{/privacy}","received_events_url":"https://api.github.com/users/hellobabygogo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T03:41:40Z","updated_at":"2019-02-13T03:41:40Z","author_association":"NONE","body":"> * Runtime.maxMemory\r\n\r\nwhy it's 1/6 of  Runtime.maxMemory","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463045041/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463045147","html_url":"https://github.com/apache/druid/pull/5583#issuecomment-463045147","issue_url":"https://api.github.com/repos/apache/druid/issues/5583","id":463045147,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzA0NTE0Nw==","user":{"login":"hellobabygogo","id":8693129,"node_id":"MDQ6VXNlcjg2OTMxMjk=","avatar_url":"https://avatars.githubusercontent.com/u/8693129?v=4","gravatar_id":"","url":"https://api.github.com/users/hellobabygogo","html_url":"https://github.com/hellobabygogo","followers_url":"https://api.github.com/users/hellobabygogo/followers","following_url":"https://api.github.com/users/hellobabygogo/following{/other_user}","gists_url":"https://api.github.com/users/hellobabygogo/gists{/gist_id}","starred_url":"https://api.github.com/users/hellobabygogo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hellobabygogo/subscriptions","organizations_url":"https://api.github.com/users/hellobabygogo/orgs","repos_url":"https://api.github.com/users/hellobabygogo/repos","events_url":"https://api.github.com/users/hellobabygogo/events{/privacy}","received_events_url":"https://api.github.com/users/hellobabygogo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T03:42:18Z","updated_at":"2019-02-13T03:42:18Z","author_association":"NONE","body":"> > * Runtime.maxMemory\r\n> \r\n> why it's 1/6 of Runtime.maxMemory\r\n\r\n@jihoonson @gianm @surekhasaharan ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463045147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463054502","html_url":"https://github.com/apache/druid/pull/6979#issuecomment-463054502","issue_url":"https://api.github.com/repos/apache/druid/issues/6979","id":463054502,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzA1NDUwMg==","user":{"login":"hpandeycodeit","id":21266105,"node_id":"MDQ6VXNlcjIxMjY2MTA1","avatar_url":"https://avatars.githubusercontent.com/u/21266105?v=4","gravatar_id":"","url":"https://api.github.com/users/hpandeycodeit","html_url":"https://github.com/hpandeycodeit","followers_url":"https://api.github.com/users/hpandeycodeit/followers","following_url":"https://api.github.com/users/hpandeycodeit/following{/other_user}","gists_url":"https://api.github.com/users/hpandeycodeit/gists{/gist_id}","starred_url":"https://api.github.com/users/hpandeycodeit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hpandeycodeit/subscriptions","organizations_url":"https://api.github.com/users/hpandeycodeit/orgs","repos_url":"https://api.github.com/users/hpandeycodeit/repos","events_url":"https://api.github.com/users/hpandeycodeit/events{/privacy}","received_events_url":"https://api.github.com/users/hpandeycodeit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T04:36:01Z","updated_at":"2019-02-13T04:36:01Z","author_association":"MEMBER","body":"@leventov yes, working on it. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463054502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463069220","html_url":"https://github.com/apache/druid/issues/7047#issuecomment-463069220","issue_url":"https://api.github.com/repos/apache/druid/issues/7047","id":463069220,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzA2OTIyMA==","user":{"login":"quenlang","id":11764573,"node_id":"MDQ6VXNlcjExNzY0NTcz","avatar_url":"https://avatars.githubusercontent.com/u/11764573?v=4","gravatar_id":"","url":"https://api.github.com/users/quenlang","html_url":"https://github.com/quenlang","followers_url":"https://api.github.com/users/quenlang/followers","following_url":"https://api.github.com/users/quenlang/following{/other_user}","gists_url":"https://api.github.com/users/quenlang/gists{/gist_id}","starred_url":"https://api.github.com/users/quenlang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quenlang/subscriptions","organizations_url":"https://api.github.com/users/quenlang/orgs","repos_url":"https://api.github.com/users/quenlang/repos","events_url":"https://api.github.com/users/quenlang/events{/privacy}","received_events_url":"https://api.github.com/users/quenlang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T05:52:15Z","updated_at":"2019-02-13T05:52:15Z","author_association":"NONE","body":"@AlexanderSaydakov Thanks for quick reply!\r\nThe sketches were generated inside of druid from original column values which look like 758,921,1028 and so on at raw data ingesting and the original column values can not be nulls but can be zero. \r\nDo you need more information ?\r\n\r\nDruid 0.13.0 has a bug #6877,which leads segment commit failed. Can i upgrade to 0.13.0 directly?\r\n \r\nBy the way, we will remove approximate histogram from the ingestion task, it only exists in current transition period.\r\n\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463069220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463069510","html_url":"https://github.com/apache/druid/pull/5583#issuecomment-463069510","issue_url":"https://api.github.com/repos/apache/druid/issues/5583","id":463069510,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzA2OTUxMA==","user":{"login":"surekhasaharan","id":13008746,"node_id":"MDQ6VXNlcjEzMDA4NzQ2","avatar_url":"https://avatars.githubusercontent.com/u/13008746?v=4","gravatar_id":"","url":"https://api.github.com/users/surekhasaharan","html_url":"https://github.com/surekhasaharan","followers_url":"https://api.github.com/users/surekhasaharan/followers","following_url":"https://api.github.com/users/surekhasaharan/following{/other_user}","gists_url":"https://api.github.com/users/surekhasaharan/gists{/gist_id}","starred_url":"https://api.github.com/users/surekhasaharan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/surekhasaharan/subscriptions","organizations_url":"https://api.github.com/users/surekhasaharan/orgs","repos_url":"https://api.github.com/users/surekhasaharan/repos","events_url":"https://api.github.com/users/surekhasaharan/events{/privacy}","received_events_url":"https://api.github.com/users/surekhasaharan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T05:53:49Z","updated_at":"2019-02-13T05:53:49Z","author_association":"NONE","body":"@hellobabygogo there is a comment in the code about this [here](https://github.com/apache/incubator-druid/blob/master/server/src/main/java/org/apache/druid/segment/indexing/TuningConfig.java#L41). Some more details, while analyzing the heap dump on OOMEs, we found that two `OnheapIncrementalIndex` instances roughly took 2/3 of retained heap, with each instance roughly taking 1/3 of heap. So we realized that our original default which was 1/3(jvm mem) may be too aggressive, since rows or bytes in memory trackers track only the _active_ index, but not the one being _flushed to disk_. So the total used memory could be upto double of what is being tracked (as there's always one active index and potentially one being flushed to disk).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463069510/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463069998","html_url":"https://github.com/apache/druid/pull/6847#issuecomment-463069998","issue_url":"https://api.github.com/repos/apache/druid/issues/6847","id":463069998,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzA2OTk5OA==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T05:56:40Z","updated_at":"2019-02-13T05:56:40Z","author_association":"MEMBER","body":"@jihoonson have updated this PR, two things:\r\n   1. `CoordinatorServerView` await initialization when start up.\r\n   2. `CachingCostBalancerStrategyFactory` await initialization before creating \r\n   the `CachingCostBalancerStrategy`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463069998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463073556","html_url":"https://github.com/apache/druid/issues/7039#issuecomment-463073556","issue_url":"https://api.github.com/repos/apache/druid/issues/7039","id":463073556,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzA3MzU1Ng==","user":{"login":"prashant-shahi","id":11138844,"node_id":"MDQ6VXNlcjExMTM4ODQ0","avatar_url":"https://avatars.githubusercontent.com/u/11138844?v=4","gravatar_id":"","url":"https://api.github.com/users/prashant-shahi","html_url":"https://github.com/prashant-shahi","followers_url":"https://api.github.com/users/prashant-shahi/followers","following_url":"https://api.github.com/users/prashant-shahi/following{/other_user}","gists_url":"https://api.github.com/users/prashant-shahi/gists{/gist_id}","starred_url":"https://api.github.com/users/prashant-shahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prashant-shahi/subscriptions","organizations_url":"https://api.github.com/users/prashant-shahi/orgs","repos_url":"https://api.github.com/users/prashant-shahi/repos","events_url":"https://api.github.com/users/prashant-shahi/events{/privacy}","received_events_url":"https://api.github.com/users/prashant-shahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T06:14:37Z","updated_at":"2019-02-13T06:14:37Z","author_association":"NONE","body":"I was able to consume data from `kafka-console-consumer`.\r\nAfter removing `indexSpec` as well I was not able to ingest the topic or find anything suspicious in the logs.\r\nAlso, removing `useEarliestOffset` was the way to get it to work.\r\n```\r\n\"useEarliestOffset\": true\r\n```\r\n\r\nThanks a lot for your help @peferron..","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463073556/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463075783","html_url":"https://github.com/apache/druid/issues/7059#issuecomment-463075783","issue_url":"https://api.github.com/repos/apache/druid/issues/7059","id":463075783,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzA3NTc4Mw==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T06:25:29Z","updated_at":"2019-02-13T06:25:29Z","author_association":"MEMBER","body":"> There are a couple more annotations called `@GuardedBy`, including `javax.annotation.concurrent.GuardedBy` and`org.checkerframework.checker.lock.qual.GuardedBy`. The check recognizes those versions of the annotation, but we recommend using `com.google.errorprone.annotations.concurrent.GuardedBy`.\r\n\r\nHi, @leventov. I found the Error Prone's [doc](https://github.com/google/error-prone/blob/master/docs/bugpattern/GuardedBy.md#guardedby), from which we don't know why it's recommended to use `com.google.errorprone.annotations.concurrent.GuardedBy`, but Error Prone does recognize those versions of `GuardedBy`.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463075783/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463076842","html_url":"https://github.com/apache/druid/issues/7039#issuecomment-463076842","issue_url":"https://api.github.com/repos/apache/druid/issues/7039","id":463076842,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzA3Njg0Mg==","user":{"login":"prashant-shahi","id":11138844,"node_id":"MDQ6VXNlcjExMTM4ODQ0","avatar_url":"https://avatars.githubusercontent.com/u/11138844?v=4","gravatar_id":"","url":"https://api.github.com/users/prashant-shahi","html_url":"https://github.com/prashant-shahi","followers_url":"https://api.github.com/users/prashant-shahi/followers","following_url":"https://api.github.com/users/prashant-shahi/following{/other_user}","gists_url":"https://api.github.com/users/prashant-shahi/gists{/gist_id}","starred_url":"https://api.github.com/users/prashant-shahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/prashant-shahi/subscriptions","organizations_url":"https://api.github.com/users/prashant-shahi/orgs","repos_url":"https://api.github.com/users/prashant-shahi/repos","events_url":"https://api.github.com/users/prashant-shahi/events{/privacy}","received_events_url":"https://api.github.com/users/prashant-shahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T06:30:36Z","updated_at":"2019-02-13T06:35:46Z","author_association":"NONE","body":"I am not sure what was the actual issue, there is nothing suspicious that I can see in the logs.\r\nIngestion spec with `useEarliestOffset` worked fine on other topics.\r\n\r\nMaybe it could be because of the 10 partitions with a lot of random starting offsets while a high rate of incoming messages to the topic.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463076842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463188671","html_url":"https://github.com/apache/druid/issues/7039#issuecomment-463188671","issue_url":"https://api.github.com/repos/apache/druid/issues/7039","id":463188671,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzE4ODY3MQ==","user":{"login":"peferron","id":7009852,"node_id":"MDQ6VXNlcjcwMDk4NTI=","avatar_url":"https://avatars.githubusercontent.com/u/7009852?v=4","gravatar_id":"","url":"https://api.github.com/users/peferron","html_url":"https://github.com/peferron","followers_url":"https://api.github.com/users/peferron/followers","following_url":"https://api.github.com/users/peferron/following{/other_user}","gists_url":"https://api.github.com/users/peferron/gists{/gist_id}","starred_url":"https://api.github.com/users/peferron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/peferron/subscriptions","organizations_url":"https://api.github.com/users/peferron/orgs","repos_url":"https://api.github.com/users/peferron/repos","events_url":"https://api.github.com/users/peferron/events{/privacy}","received_events_url":"https://api.github.com/users/peferron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T12:54:37Z","updated_at":"2019-02-13T12:55:16Z","author_association":"CONTRIBUTOR","body":"Something that can happen quite easily also is if the previously committed offsets have been deleted in Kafka due to the `log.retention.ms` broker setting. In this case, the only way to unblock the Druid ingestion is to reset the supervisor, either via the overlord console or via API call. But in your case it looks like you didn't need to do that, so I'm not sure what the problem was.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463188671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463205987","html_url":"https://github.com/apache/druid/issues/5727#issuecomment-463205987","issue_url":"https://api.github.com/repos/apache/druid/issues/5727","id":463205987,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzIwNTk4Nw==","user":{"login":"scrawfor","id":7061689,"node_id":"MDQ6VXNlcjcwNjE2ODk=","avatar_url":"https://avatars.githubusercontent.com/u/7061689?v=4","gravatar_id":"","url":"https://api.github.com/users/scrawfor","html_url":"https://github.com/scrawfor","followers_url":"https://api.github.com/users/scrawfor/followers","following_url":"https://api.github.com/users/scrawfor/following{/other_user}","gists_url":"https://api.github.com/users/scrawfor/gists{/gist_id}","starred_url":"https://api.github.com/users/scrawfor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scrawfor/subscriptions","organizations_url":"https://api.github.com/users/scrawfor/orgs","repos_url":"https://api.github.com/users/scrawfor/repos","events_url":"https://api.github.com/users/scrawfor/events{/privacy}","received_events_url":"https://api.github.com/users/scrawfor/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T13:50:38Z","updated_at":"2019-02-13T13:50:38Z","author_association":"CONTRIBUTOR","body":"I'm taking a stab at this.  In my first attempt I added the `new LookupModule()` to the `CliOverlord.java` file as @2PacIsAlive suggested.  This got me further, but the middle manager wouldn't run any tasks and threw this error.\r\n\r\n```\r\ncom.fasterxml.jackson.databind.JsonMappingException: Instantiation of [simple type, class org.apache.druid.indexing.kafka.KafkaIndexTask] value failed: function 'lookup' is not defined.\r\n```\r\n\r\nSo I added `new LookupModule()` to `CliMiddleManager.java` as well.  This worked as the tasks get created and executed, and lookups are mapping data.\r\n\r\nHowever, it also attempts to load lookup values on the middle manager, which throws out of memory errors\r\n```\r\n2019-02-13T13:24:56,227 ERROR [NamespaceExtractionCacheManager-1] org.apache.druid.server.lookup.namespace.cache.CacheScheduler - Failed to update namespace [JdbcExtractionNamespace{connectorConfig=DbConnectorConfig{cr\r\neateTables=true, connectURI='Redacted', user='Redacted', passwordProvider=org.apache.druid.metadata.DefaultPasswordProvider}, table='Redacted', keyC\r\nolumn='Redacted', valueColumn='Redacted', tsColumn='null', filter='null', pollPeriod=P1D}] : org.apache.druid.server.lookup.namespace.cache.CacheScheduler$EntryImpl@6fc24ef7\r\norg.skife.jdbi.v2.exceptions.CallbackFailedException: org.skife.jdbi.v2.exceptions.UnableToExecuteStatementException: org.postgresql.util.PSQLException: Ran out of memory retrieving query results. [statement:\"Redacted\", located:\"Redacted\", rewritten:\"Redacted\", arguments:{ positional:{}, named:{}, finder:[]}]\r\n        at org.apache.druid.server.lookup.namespace.JdbcCacheGenerator.generateCache(JdbcCacheGenerator.java:77) ~[druid-lookups-cached-global-0.13.0-incubating.jar:0.13.0-incubating]\r\n        at org.apache.druid.server.lookup.namespace.JdbcCacheGenerator.generateCache(JdbcCacheGenerator.java:49) ~[druid-lookups-cached-global-0.13.0-incubating.jar:0.13.0-incubating]\r\n        at org.apache.druid.server.lookup.namespace.cache.CacheScheduler$EntryImpl.tryUpdateCache(CacheScheduler.java:228) [druid-lookups-cached-global-0.13.0-incubating.jar:0.13.0-incubating]\r\n        at org.apache.druid.server.lookup.namespace.cache.CacheScheduler$EntryImpl.updateCache(CacheScheduler.java:207) [druid-lookups-cached-global-0.13.0-incubating.jar:0.13.0-incubating]\r\n        at org.apache.druid.server.lookup.namespace.cache.CacheScheduler$EntryImpl.access$600(CacheScheduler.java:143) [druid-lookups-cached-global-0.13.0-incubating.jar:0.13.0-incubating]\r\n        at org.apache.druid.server.lookup.namespace.cache.CacheScheduler$EntryImpl$2.run(CacheScheduler.java:189) [druid-lookups-cached-global-0.13.0-incubating.jar:0.13.0-incubating]\r\nCaused by: org.skife.jdbi.v2.exceptions.UnableToExecuteStatementException: org.postgresql.util.PSQLException: Ran out of memory retrieving query results. [statement:\"Redacted\", located:\"Redacted\", rewritten:\"Redacted\", arguments:{ posi\r\ntional:{}, named:{}, finder:[]}]\r\n        at org.apache.druid.server.lookup.namespace.JdbcCacheGenerator$1.withHandle(JdbcCacheGenerator.java:99) ~[?:?]\r\n        at org.apache.druid.server.lookup.namespace.JdbcCacheGenerator$1.withHandle(JdbcCacheGenerator.java:79) ~[?:?]\r\n        at org.apache.druid.server.lookup.namespace.JdbcCacheGenerator$1.withHandle(JdbcCacheGenerator.java:99) ~[?:?]\r\n        at org.apache.druid.server.lookup.namespace.JdbcCacheGenerator$1.withHandle(JdbcCacheGenerator.java:79) ~[?:?]\r\n```\r\n\r\n\r\nDoes anyone with a better understanding of the architecture have any ideas on how we could get the MiddleManager to recognize the lookup syntax without attempting to load them?  We can't set `druid.lookup.enableLookupSyncOnStartup=false` because the middle manager will pass that property to the peon right?\r\n\r\n\r\nFor reference, my Indexing Task Spec:\r\n```\r\n{\r\n  \"type\": \"kafka\",\r\n   \"dataSchema\": {\r\n     \"dataSource\": \"REDACTED\",\r\n     \"parser\": {\r\n       \"type\": \"string\",\r\n       \"parseSpec\": {\r\n         \"format\": \"json\",\r\n         \"timestampSpec\": {\r\n           \"column\": \"timestamp\",\r\n           \"format\": \"iso\"\r\n         },    \r\n         \"dimensionsSpec\": {\r\n           \"dimensions\": [\r\n             \"user_type\",\r\n             \"client_id\",\r\n           ]\r\n         }\r\n       }\r\n     },\r\n     \"metricsSpec\": [\r\n       {\r\n         \"type\": \"hyperUnique\",\r\n         \"name\": \"unique_views\",\r\n         \"fieldName\": \"view_id\"\r\n       },\r\n     ],\r\n     \"transformSpec\": {\r\n       \"transforms\": [\r\n         {\r\n           \"type\": \"expression\",\r\n           \"name\": \"user_type\",\r\n           \"expression\": \"lookup(client_id, 'user_type_lookup')\"\r\n         },\r\n       ],\r\n       \"filter\": {\r\n         \"type\": \"and\",\r\n         \"fields\": [\r\n           {\r\n             \"type\": \"not\",\r\n             \"field\": {\r\n               \"type\": \"in\",\r\n               \"dimension\": \"profile\",\r\n               \"values\": [\"REDACTED\"]\r\n             }\r\n           }          \r\n         ]\r\n       }\r\n     },\r\n     \"granularitySpec\": {\r\n       \"type\": \"uniform\",\r\n       \"segmentGranularity\": \"DAY\",\r\n       \"queryGranularity\": \"NONE\",\r\n       \"rollup\": true\r\n     }\r\n   },\r\n  \"tuningConfig\": {\r\n    \"type\": \"kafka\",\r\n    \"maxRowsInMemory\": 5000,\r\n    \"maxRowsPerSegment\": 5000000,\r\n    \"intermediatePersistPeriod\": \"PT2M\",\r\n    \"resetOffsetAutomatically\": true\r\n  },\r\n  \"ioConfig\": {\r\n    \"topic\": \"REDACTED\",\r\n    \"consumerProperties\": {\r\n      \"bootstrap.servers\": \"REDACTED\"\r\n    },\r\n    \"useEarliestOffset\": false,\r\n    \"skipOffsetGaps\": true\r\n  }\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463205987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463278361","html_url":"https://github.com/apache/druid/pull/7063#issuecomment-463278361","issue_url":"https://api.github.com/repos/apache/druid/issues/7063","id":463278361,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzI3ODM2MQ==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T16:56:30Z","updated_at":"2019-02-13T16:56:30Z","author_association":"CONTRIBUTOR","body":"CI passed (at least the Travis one).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463278361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463279146","html_url":"https://github.com/apache/druid/pull/6683#issuecomment-463279146","issue_url":"https://api.github.com/repos/apache/druid/issues/6683","id":463279146,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzI3OTE0Ng==","user":{"login":"kaijianding","id":8663725,"node_id":"MDQ6VXNlcjg2NjM3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/8663725?v=4","gravatar_id":"","url":"https://api.github.com/users/kaijianding","html_url":"https://github.com/kaijianding","followers_url":"https://api.github.com/users/kaijianding/followers","following_url":"https://api.github.com/users/kaijianding/following{/other_user}","gists_url":"https://api.github.com/users/kaijianding/gists{/gist_id}","starred_url":"https://api.github.com/users/kaijianding/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaijianding/subscriptions","organizations_url":"https://api.github.com/users/kaijianding/orgs","repos_url":"https://api.github.com/users/kaijianding/repos","events_url":"https://api.github.com/users/kaijianding/events{/privacy}","received_events_url":"https://api.github.com/users/kaijianding/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T16:58:21Z","updated_at":"2019-02-13T16:58:21Z","author_association":"CONTRIBUTOR","body":"@jihoonson @leventov @gianm  conflicts are resolved and code comments are updated, do you have any more comment?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463279146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463286812","html_url":"https://github.com/apache/druid/issues/7047#issuecomment-463286812","issue_url":"https://api.github.com/repos/apache/druid/issues/7047","id":463286812,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzI4NjgxMg==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T17:18:51Z","updated_at":"2019-02-13T17:18:51Z","author_association":"CONTRIBUTOR","body":"Is this a new process you are trying to set up for the first time or an existing one that used to work before, but started failing in some cases?\r\nI do not understand your question about upgrading to 0.13.0 directly.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463286812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463301584","html_url":"https://github.com/apache/druid/pull/6698#issuecomment-463301584","issue_url":"https://api.github.com/repos/apache/druid/issues/6698","id":463301584,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzMwMTU4NA==","user":{"login":"kaijianding","id":8663725,"node_id":"MDQ6VXNlcjg2NjM3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/8663725?v=4","gravatar_id":"","url":"https://api.github.com/users/kaijianding","html_url":"https://github.com/kaijianding","followers_url":"https://api.github.com/users/kaijianding/followers","following_url":"https://api.github.com/users/kaijianding/following{/other_user}","gists_url":"https://api.github.com/users/kaijianding/gists{/gist_id}","starred_url":"https://api.github.com/users/kaijianding/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaijianding/subscriptions","organizations_url":"https://api.github.com/users/kaijianding/orgs","repos_url":"https://api.github.com/users/kaijianding/repos","events_url":"https://api.github.com/users/kaijianding/events{/privacy}","received_events_url":"https://api.github.com/users/kaijianding/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T17:59:21Z","updated_at":"2019-02-13T17:59:21Z","author_association":"CONTRIBUTOR","body":"@jihoonson I found it is too complicated to implement the new interface you suggested. It need to add a finalServerPredicate like finalPredicate(which is an 'or' by defaultFilter and segmentPredicates, it should add a new 'or' by defaultServerFilter and serverPredicates) in 3 sub classes and many related classes like BrokerServerView, and apply finalServerPredicate before applying finalPredicate when filtering segments . And the default implement for the new interface is an empty function because a zk InventoryView implement doesn't actually need this.\r\n\r\nMy opinion is that we just do it simple and easy to understand by just let predicate argument nullable.\r\n\r\nOn the other hand, I think `        if (input.rhs == null) {\r\n          return true;\r\n        }\r\n` is some kind of reasonable just from code perspective to make sure rhs is not null before `input.rhs.getDataSource()` is called","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463301584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463330769","html_url":"https://github.com/apache/druid/pull/7002#issuecomment-463330769","issue_url":"https://api.github.com/repos/apache/druid/issues/7002","id":463330769,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzMzMDc2OQ==","user":{"login":"justinborromeo","id":9417701,"node_id":"MDQ6VXNlcjk0MTc3MDE=","avatar_url":"https://avatars.githubusercontent.com/u/9417701?v=4","gravatar_id":"","url":"https://api.github.com/users/justinborromeo","html_url":"https://github.com/justinborromeo","followers_url":"https://api.github.com/users/justinborromeo/followers","following_url":"https://api.github.com/users/justinborromeo/following{/other_user}","gists_url":"https://api.github.com/users/justinborromeo/gists{/gist_id}","starred_url":"https://api.github.com/users/justinborromeo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinborromeo/subscriptions","organizations_url":"https://api.github.com/users/justinborromeo/orgs","repos_url":"https://api.github.com/users/justinborromeo/repos","events_url":"https://api.github.com/users/justinborromeo/events{/privacy}","received_events_url":"https://api.github.com/users/justinborromeo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T19:19:31Z","updated_at":"2019-02-13T22:57:52Z","author_association":"CONTRIBUTOR","body":"GroupByBenchmark results for `master` and this branch:\r\n\r\n![image](https://user-images.githubusercontent.com/9417701/52737076-4ca96500-2f80-11e9-84f5-bfcf129ed075.png)\r\n\r\nNote: % diff corresponds to the percent change between the mean run time of the benchmark on `master` and the benchmark on my branch.\r\n\r\nBased on the above stats, it would appear as if there was a slight decrease (~2.3%) in run time for the 10 tests randomly selected from the GroupBy benchmark.  Tests 1 and 73, with their -7.3% and -5.8% change, seem like outliers (maybe due to the fact that I was doing other stuff on the computer at the same time?).  @gianm is this enough to determine whether dead-code elimination is happening?  If not, I can calculate the % change on the other tests in the benchmark too or run the benchmarks on an EC2 instance.\r\n\r\nBenchmark info:\r\n- Run on: MacBook Pro\r\n- Heap Memory: 8 GB\r\n- GC: G1\r\n- Warmup Iterations: 15\r\n- Benchmark Iterations: 30\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463330769/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463331253","html_url":"https://github.com/apache/druid/pull/7064#issuecomment-463331253","issue_url":"https://api.github.com/repos/apache/druid/issues/7064","id":463331253,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzMzMTI1Mw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T19:20:47Z","updated_at":"2019-02-13T19:20:47Z","author_association":"CONTRIBUTOR","body":"@Dylan1312 thanks for the review! The CI failure isn't related to this PR because this contains only doc changes. I'm going to merge.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463331253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463345469","html_url":"https://github.com/apache/druid/pull/6698#issuecomment-463345469","issue_url":"https://api.github.com/repos/apache/druid/issues/6698","id":463345469,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzM0NTQ2OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T19:58:59Z","updated_at":"2019-02-13T19:58:59Z","author_association":"CONTRIBUTOR","body":"I don't think the current change is easy to understand because \r\n\r\n1) `DataSegment` for the pair is nullable only in `HttpServerInventoryView`. This is because zk-based inventoryView doesn't need it as you said.\r\n2) It's not defined when `DataSegment` is null.\r\n3) As it's supposed from its name, `segmentPredicate` is intended for filtering segments, but it's being used for filtering servers in this PR.\r\n\r\nIt's also not good for code maintenance because it's easy to be broken if someone adds a new segmentPredicate which doesn't check null segment.\r\n\r\n> On the other hand, I think ` if (input.rhs == null) { return true; }` is some kind of reasonable just from code perspective to make sure rhs is not null before `input.rhs.getDataSource()` is called\r\n\r\nI also don't think it's reasonable to return true when rhs is null. This is related to `2)`. What does null segment mean? \r\n\r\n> I found it is too complicated to implement the new interface you suggested. It need to add a finalServerPredicate like finalPredicate(which is an 'or' by defaultFilter and segmentPredicates, it should add a new 'or' by defaultServerFilter and serverPredicates) in 3 sub classes and many related classes like BrokerServerView, and apply finalServerPredicate before applying finalPredicate when filtering segments . And the default implement for the new interface is an empty function because a zk InventoryView implement doesn't actually need this.\r\n\r\nI'm not sure what're complicated. As you said, the default implementation would be empty and zk-based inventoryView doesn't have to implement it. Currently there's only one class adding these predicates which is BrokerServerView. Adding a new `finalServerPredicate` and using it look pretty straightforward to me.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463345469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463348907","html_url":"https://github.com/apache/druid/pull/7046#issuecomment-463348907","issue_url":"https://api.github.com/repos/apache/druid/issues/7046","id":463348907,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzM0ODkwNw==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T20:08:48Z","updated_at":"2019-02-13T20:08:48Z","author_association":"CONTRIBUTOR","body":"OK, I fixed the counter to start at 0 (and removed the old helper), and added a unit test which fails without the other changes.\r\n\r\n(I've been doing updates as separate commits but updating the PR description to match the full change, so the PR desc should work fine as a commit message for a squash of this PR. Let me know if you have a different preference for how to respond to code review.)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463348907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463368283","html_url":"https://github.com/apache/druid/issues/6982#issuecomment-463368283","issue_url":"https://api.github.com/repos/apache/druid/issues/6982","id":463368283,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzM2ODI4Mw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T21:00:09Z","updated_at":"2019-02-13T21:00:09Z","author_association":"CONTRIBUTOR","body":"I just built the current 0.14.0-incubating branch and tested this, but couldn't reproduce it. Is anyone still seeing this error?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463368283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463374038","html_url":"https://github.com/apache/druid/pull/6979#issuecomment-463374038","issue_url":"https://api.github.com/repos/apache/druid/issues/6979","id":463374038,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzM3NDAzOA==","user":{"login":"hpandeycodeit","id":21266105,"node_id":"MDQ6VXNlcjIxMjY2MTA1","avatar_url":"https://avatars.githubusercontent.com/u/21266105?v=4","gravatar_id":"","url":"https://api.github.com/users/hpandeycodeit","html_url":"https://github.com/hpandeycodeit","followers_url":"https://api.github.com/users/hpandeycodeit/followers","following_url":"https://api.github.com/users/hpandeycodeit/following{/other_user}","gists_url":"https://api.github.com/users/hpandeycodeit/gists{/gist_id}","starred_url":"https://api.github.com/users/hpandeycodeit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hpandeycodeit/subscriptions","organizations_url":"https://api.github.com/users/hpandeycodeit/orgs","repos_url":"https://api.github.com/users/hpandeycodeit/repos","events_url":"https://api.github.com/users/hpandeycodeit/events{/privacy}","received_events_url":"https://api.github.com/users/hpandeycodeit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T21:14:31Z","updated_at":"2019-02-13T21:14:31Z","author_association":"MEMBER","body":"@leventov I created a new PR for this issue as the current one is messed up. \r\nhttps://github.com/apache/incubator-druid/pull/7067 \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463374038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463383697","html_url":"https://github.com/apache/druid/issues/5727#issuecomment-463383697","issue_url":"https://api.github.com/repos/apache/druid/issues/5727","id":463383697,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzM4MzY5Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T21:38:32Z","updated_at":"2019-02-13T21:38:32Z","author_association":"CONTRIBUTOR","body":"How about setting `druid.lookup.enableLookupSyncOnStartup = false` for MMs but adding `-Ddruid.lookup.enableLookupSyncOnStartup=true` to `druid.indexer.runner.javaOpts` for tasks? Does it work?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463383697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463393824","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-463393824","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":463393824,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzM5MzgyNA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T22:03:50Z","updated_at":"2019-02-13T22:03:50Z","author_association":"CONTRIBUTOR","body":"@edgan8 thanks for the contrib!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463393824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463395385","html_url":"https://github.com/apache/druid/issues/7057#issuecomment-463395385","issue_url":"https://api.github.com/repos/apache/druid/issues/7057","id":463395385,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzM5NTM4NQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T22:08:21Z","updated_at":"2019-02-13T22:08:58Z","author_association":"MEMBER","body":"Yes, that was not very precise to call it \"backpressure\" policy, because we probably never want actual backpressure in metrics emitter, because metrics are relatively unimportant to slow down queries. Rephrased to \"event throttling\" policy. Simple policies might be \"drop oldest\" and \"drop newest\". Some more sophisticated policies may change the event \"level\" (like logging level) when the queue is full, like stop emitting some relatively less important kinds of events. (Probably trying to return to the default level after some backoff time or when the queue becomes sufficiently empty).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463395385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463396523","html_url":"https://github.com/apache/druid/issues/7059#issuecomment-463396523","issue_url":"https://api.github.com/repos/apache/druid/issues/7059","id":463396523,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzM5NjUyMw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T22:12:02Z","updated_at":"2019-02-13T22:12:02Z","author_association":"MEMBER","body":"@asdf2014 right. Then this is a low priority issue. However, it would still be nice to have uniformity in the codebase.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463396523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463397010","html_url":"https://github.com/apache/druid/pull/6683#issuecomment-463397010","issue_url":"https://api.github.com/repos/apache/druid/issues/6683","id":463397010,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzM5NzAxMA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T22:13:35Z","updated_at":"2019-02-13T22:13:35Z","author_association":"MEMBER","body":"@kaijianding this comment: https://github.com/apache/incubator-druid/pull/6683#issuecomment-453068505 is mostly not addressed.\r\n\r\nPlease don't force push: https://github.com/apache/incubator-druid/blob/master/CONTRIBUTING.md#if-your-pull-request-shows-conflicts-with-master","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463397010/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463399020","html_url":"https://github.com/apache/druid/issues/7071#issuecomment-463399020","issue_url":"https://api.github.com/repos/apache/druid/issues/7071","id":463399020,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzM5OTAyMA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T22:20:13Z","updated_at":"2019-02-13T22:20:13Z","author_association":"CONTRIBUTOR","body":"This should be resolved after https://github.com/apache/incubator-druid/pull/7048.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463399020/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463400458","html_url":"https://github.com/apache/druid/pull/6698#issuecomment-463400458","issue_url":"https://api.github.com/repos/apache/druid/issues/6698","id":463400458,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzQwMDQ1OA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T22:24:57Z","updated_at":"2019-02-13T22:24:57Z","author_association":"MEMBER","body":"I agree with @jihoonson's concerns. Also\r\n\r\n> I found it is too complicated to implement the new interface you suggested.\r\n\r\nis probably a sign that this part of the system is already too complicated or the original design doesn't meet the current needs, so we need to look how we could alter the design to make everything coherent and understandable again. See item 2 in the \"Complexity & Understandability\" section in the [checklist](https://docs.google.com/document/d/17EEKT6fih9Dd5NfXjBoECcKbVp1eOB2vb3jKqTF9pPc/edit?usp=sharing).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463400458/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463400959","html_url":"https://github.com/apache/druid/pull/7063#issuecomment-463400959","issue_url":"https://api.github.com/repos/apache/druid/issues/7063","id":463400959,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzQwMDk1OQ==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T22:26:33Z","updated_at":"2019-02-13T22:26:33Z","author_association":"CONTRIBUTOR","body":"Hmm, there are a few other delegating factories that should implement this too.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463400959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463402080","html_url":"https://github.com/apache/druid/pull/7070#issuecomment-463402080","issue_url":"https://api.github.com/repos/apache/druid/issues/7070","id":463402080,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzQwMjA4MA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T22:30:18Z","updated_at":"2019-02-13T22:30:18Z","author_association":"CONTRIBUTOR","body":"+1 after CI.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463402080/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/463404223","html_url":"https://github.com/apache/druid/pull/6690#issuecomment-463404223","issue_url":"https://api.github.com/repos/apache/druid/issues/6690","id":463404223,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MzQwNDIyMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-13T22:37:23Z","updated_at":"2019-02-13T22:37:23Z","author_association":"CONTRIBUTOR","body":"Hi @pzhdfy, were you able to check this issue again by any chance?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/463404223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]