[{"url":"https://api.github.com/repos/apache/fluo/issues/comments/347405606","html_url":"https://github.com/apache/fluo/pull/969#issuecomment-347405606","issue_url":"https://api.github.com/repos/apache/fluo/issues/969","id":347405606,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NzQwNTYwNg==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-11-28T03:50:08Z","updated_at":"2017-11-28T03:50:08Z","author_association":"CONTRIBUTOR","body":"I left a comment on #722 and will give it a go. On an unrelated note, I feel like all my commits fail on the continuous-integration Travis CI build. Is there a specific reason? I'm not really sure what I'm doing to cause this.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/347405606/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/347554053","html_url":"https://github.com/apache/fluo/issues/971#issuecomment-347554053","issue_url":"https://api.github.com/repos/apache/fluo/issues/971","id":347554053,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NzU1NDA1Mw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-11-28T15:12:34Z","updated_at":"2017-11-28T15:12:34Z","author_association":"CONTRIBUTOR","body":"@cjmctague can you try removing the timeout rule and see if it ever completes... or set it really high.\r\n\r\nAlso when its stuck, can you find the java process running the IT and run jstack on it?","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/347554053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/347557885","html_url":"https://github.com/apache/fluo/pull/969#issuecomment-347557885","issue_url":"https://api.github.com/repos/apache/fluo/issues/969","id":347557885,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NzU1Nzg4NQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-11-28T15:23:57Z","updated_at":"2017-11-28T15:23:57Z","author_association":"CONTRIBUTOR","body":"> On an unrelated note, I feel like all my commits fail on the continuous-integration Travis CI build. Is there a specific reason?\r\n\r\nThe builds on travis are not always predictable.  Sometimes this is an issue with Travis and sometimes its Fluo.  I have been trying to correct Fluo's flakiness as we run into it.  For your latest commit, the new IT is missing an import stmt for CompletableFuture.  Lets see what happens with Travis after that is fixed.\r\n\r\nhttps://travis-ci.org/apache/fluo/builds/307577351#L2882","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/347557885/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/347562463","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-347562463","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":347562463,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NzU2MjQ2Mw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-11-28T15:37:22Z","updated_at":"2017-11-28T15:37:22Z","author_association":"CONTRIBUTOR","body":"@jkosh44  this will be a very involved change.  I can assist as needed, let me know if you have any questions.   You already have a feel for CompletableFuture, I would recommend experimenting with Guava ListenableFutures in a stand alone program to get a feel for them.  \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/347562463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/347635816","html_url":"https://github.com/apache/fluo/issues/971#issuecomment-347635816","issue_url":"https://api.github.com/repos/apache/fluo/issues/971","id":347635816,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NzYzNTgxNg==","user":{"login":"cjmctague","id":20524292,"node_id":"MDQ6VXNlcjIwNTI0Mjky","avatar_url":"https://avatars.githubusercontent.com/u/20524292?v=4","gravatar_id":"","url":"https://api.github.com/users/cjmctague","html_url":"https://github.com/cjmctague","followers_url":"https://api.github.com/users/cjmctague/followers","following_url":"https://api.github.com/users/cjmctague/following{/other_user}","gists_url":"https://api.github.com/users/cjmctague/gists{/gist_id}","starred_url":"https://api.github.com/users/cjmctague/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjmctague/subscriptions","organizations_url":"https://api.github.com/users/cjmctague/orgs","repos_url":"https://api.github.com/users/cjmctague/repos","events_url":"https://api.github.com/users/cjmctague/events{/privacy}","received_events_url":"https://api.github.com/users/cjmctague/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-11-28T19:26:14Z","updated_at":"2017-11-28T19:26:14Z","author_association":"CONTRIBUTOR","body":"@keith-turner Removing the timeout rule just made the test never end. \r\n\r\nI just emailed you the jStack dump","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/347635816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/347672768","html_url":"https://github.com/apache/fluo/issues/971#issuecomment-347672768","issue_url":"https://api.github.com/repos/apache/fluo/issues/971","id":347672768,"node_id":"MDEyOklzc3VlQ29tbWVudDM0NzY3Mjc2OA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-11-28T21:41:11Z","updated_at":"2017-11-28T21:41:11Z","author_association":"CONTRIBUTOR","body":"I looked at the jstack you sent, it seems like the file contains 4 jstacks.  Are those for 4 different test runs?\r\n\r\nIt seems in two the of the jstacks the main test thread is stuck waiting to get a timestamp from the oracle.  In one of the jstacks, the main thread is stuck trying to connect to zookeeper.  In the other jstack I am not sure what it is doing.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/347672768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/348273977","html_url":"https://github.com/apache/fluo/issues/971#issuecomment-348273977","issue_url":"https://api.github.com/repos/apache/fluo/issues/971","id":348273977,"node_id":"MDEyOklzc3VlQ29tbWVudDM0ODI3Mzk3Nw==","user":{"login":"mikewalch","id":730698,"node_id":"MDQ6VXNlcjczMDY5OA==","avatar_url":"https://avatars.githubusercontent.com/u/730698?v=4","gravatar_id":"","url":"https://api.github.com/users/mikewalch","html_url":"https://github.com/mikewalch","followers_url":"https://api.github.com/users/mikewalch/followers","following_url":"https://api.github.com/users/mikewalch/following{/other_user}","gists_url":"https://api.github.com/users/mikewalch/gists{/gist_id}","starred_url":"https://api.github.com/users/mikewalch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikewalch/subscriptions","organizations_url":"https://api.github.com/users/mikewalch/orgs","repos_url":"https://api.github.com/users/mikewalch/repos","events_url":"https://api.github.com/users/mikewalch/events{/privacy}","received_events_url":"https://api.github.com/users/mikewalch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-11-30T18:15:06Z","updated_at":"2017-11-30T18:15:06Z","author_association":"MEMBER","body":"I am seeing the same problem with `OracleIT` on a Mac.  I will look into this.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/348273977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/348279132","html_url":"https://github.com/apache/fluo/issues/971#issuecomment-348279132","issue_url":"https://api.github.com/repos/apache/fluo/issues/971","id":348279132,"node_id":"MDEyOklzc3VlQ29tbWVudDM0ODI3OTEzMg==","user":{"login":"cjmctague","id":20524292,"node_id":"MDQ6VXNlcjIwNTI0Mjky","avatar_url":"https://avatars.githubusercontent.com/u/20524292?v=4","gravatar_id":"","url":"https://api.github.com/users/cjmctague","html_url":"https://github.com/cjmctague","followers_url":"https://api.github.com/users/cjmctague/followers","following_url":"https://api.github.com/users/cjmctague/following{/other_user}","gists_url":"https://api.github.com/users/cjmctague/gists{/gist_id}","starred_url":"https://api.github.com/users/cjmctague/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjmctague/subscriptions","organizations_url":"https://api.github.com/users/cjmctague/orgs","repos_url":"https://api.github.com/users/cjmctague/repos","events_url":"https://api.github.com/users/cjmctague/events{/privacy}","received_events_url":"https://api.github.com/users/cjmctague/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-11-30T18:33:32Z","updated_at":"2017-11-30T18:33:42Z","author_association":"CONTRIBUTOR","body":"@keith-turner Yea sorry those were four different test runs.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/348279132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/348667973","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-348667973","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":348667973,"node_id":"MDEyOklzc3VlQ29tbWVudDM0ODY2Nzk3Mw==","user":{"login":"jwonders","id":1666405,"node_id":"MDQ6VXNlcjE2NjY0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/1666405?v=4","gravatar_id":"","url":"https://api.github.com/users/jwonders","html_url":"https://github.com/jwonders","followers_url":"https://api.github.com/users/jwonders/followers","following_url":"https://api.github.com/users/jwonders/following{/other_user}","gists_url":"https://api.github.com/users/jwonders/gists{/gist_id}","starred_url":"https://api.github.com/users/jwonders/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwonders/subscriptions","organizations_url":"https://api.github.com/users/jwonders/orgs","repos_url":"https://api.github.com/users/jwonders/repos","events_url":"https://api.github.com/users/jwonders/events{/privacy}","received_events_url":"https://api.github.com/users/jwonders/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-02T04:43:07Z","updated_at":"2017-12-02T04:43:07Z","author_association":"NONE","body":"Hi folks,  I've been lurking around on the mailing lists for awhile as I haven't really had much time to start contributing.  I've been exploring async wrappers around Accumulo in a side project and it makes heavy use of CompletionStage/CompletableFuture.  I figured I'd post a link in case you want to take a look at another implementation for comparison.\r\n\r\nhttps://github.com/jwonders/ax-accumulo\r\n\r\nIn particular, the [AsyncConditionalWriterImpl][1] might be of interest.\r\n\r\nI'm sure this task goes well beyond an AsyncConditionalWriter or AsyncBatchWriter, but hopefully this is worthwhile to look at since there isn't a straight translation from ListenableFuture to CompletableFuture.\r\n\r\n[1]: https://github.com/jwonders/ax-accumulo/blob/master/src/main/java/com/jwsphere/accumulo/async/internal/AsyncConditionalWriterImpl.java","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/348667973/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349050151","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349050151","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349050151,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTA1MDE1MQ==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-04T18:05:30Z","updated_at":"2017-12-04T18:09:58Z","author_association":"CONTRIBUTOR","body":"Hey sorry I've had an extremely hectic week and haven't been able to look at this yet. I'm going to start on this tonight. Unless you're asking to work on this jwonders then feel free.\n\nIs the async commit methods completely implemented in TransactionImpl or are there other classes I should be looking at?","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349050151/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349057460","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349057460","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349057460,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTA1NzQ2MA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-04T18:28:44Z","updated_at":"2017-12-04T18:28:44Z","author_association":"CONTRIBUTOR","body":"@jwonders I am not sure if ax-accumulo would be relevant for this PR because I have not had enough time  to look at in depth.  I am really glad you shared because I am very happy to learn about the existence of ax-accumulo.  At some point I would like to add async APIs to Accumulo.  As time permits, I would like to learn from and possibly leverage ax-accumulo's APIs for Accumulo.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349057460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349138723","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349138723","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349138723,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTEzODcyMw==","user":{"login":"jwonders","id":1666405,"node_id":"MDQ6VXNlcjE2NjY0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/1666405?v=4","gravatar_id":"","url":"https://api.github.com/users/jwonders","html_url":"https://github.com/jwonders","followers_url":"https://api.github.com/users/jwonders/followers","following_url":"https://api.github.com/users/jwonders/following{/other_user}","gists_url":"https://api.github.com/users/jwonders/gists{/gist_id}","starred_url":"https://api.github.com/users/jwonders/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwonders/subscriptions","organizations_url":"https://api.github.com/users/jwonders/orgs","repos_url":"https://api.github.com/users/jwonders/repos","events_url":"https://api.github.com/users/jwonders/events{/privacy}","received_events_url":"https://api.github.com/users/jwonders/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-04T23:13:43Z","updated_at":"2017-12-04T23:13:43Z","author_association":"NONE","body":"@keith-turner I agree it might not be relevant and I'm not familar enough with fluo to know all of the touchpoints for this PR.  Just wanted to point it out as a possible reference if migrating the async writers to CompletableFuture.  I'm also interested in native async APIs in Accumulo because to get the most benefit the implementation needs to be async down to the RPC layer.  The ax-accumulo project is an attempt to explore what is possible right now and understand the points where it that are currently awkward for async interaction which can hopefully inform the development of async Accumulo APIs.  I still need to explore scanners in much more depth.\r\n\r\n@jkosh44 Please don't let me get in the way of your plans.  I would be interested in reviewing what you end up with and learning more about fluo's async transactions.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349138723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349184990","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349184990","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349184990,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTE4NDk5MA==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-05T03:35:02Z","updated_at":"2017-12-06T03:10:17Z","author_association":"CONTRIBUTOR","body":"Did some analysis of where ListenableFuture is used and here's what I found:\r\n\r\nClasses that use ListenableFuture:\r\n- ...core/impl/TransactionImpl\r\n- ... TransactionImpl.CommitCallback\r\n- ...core/async/AsyncConditionalWriter\r\n- ...core/oracle/OracleClient\r\n- ...OracleClient.TimeRequest\r\n- ...core/impl/SharedBatchWriter\r\n- ...SharedBatchWriter.MutationBatch\r\n               \r\n \r\nFunctions that use Listenable Futures within TransactionImpl:\r\n- private void beginCommitAsync(CommitData cd, AsyncCommitObserver commitCallback, RowColumn primary)\r\n-   private void lockOtherColumns(CommitData cd)\r\n-   private void postLockOther(final CommitData cd, Iterator<Result> results)\r\n-   private void rollbackOtherLocks(CommitData cd)\r\n-   private void rollbackPrimaryLock(CommitData cd)\r\n-   private void writeNotificationsAsync(CommitData cd, final long commitTs)\r\n-   private void commmitPrimary(CommitData cd, final long commitTs)\r\n-   private void deleteLocks(CommitData cd, final long commitTs)\r\n\r\n               \r\nSharedBatchWriter.MutationBatch Info:\r\n- constructor:  public MutationBatch(Collection<Mutation> mutations, ListenableFutureTask<Void> lf)\r\n- function that uses ListenableFuture: public void countDown()\r\n\r\n               \r\n \r\nFunctions that return Listenable Futures:\r\n  \r\n\r\n- AsynConditionalWriter.appply: public ListenableFuture<Iterator<Result>> apply(Collection<ConditionalMutation> input)\r\n  Note: This also uses ListeningExecutorService to submit new tasks\r\n-   OracleClient.getStampAsync: public ListenableFuture<Stamp> getStampAsync()\r\n  Note: This also uses ListenableFutureTask to create new tasks\r\n-   SharedBatchWriter.writeMutationsAsyncFuture: ListenableFuture<Void> writeMutationsAsyncFuture(Collection<Mutation> ml), ListenableFuture<Void> writeMutationsAsyncFuture(Mutation m)\r\n  Note: This also uses ListenableFutureTask to create new tasks","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349184990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349398314","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349398314","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349398314,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTM5ODMxNA==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-05T18:34:42Z","updated_at":"2017-12-05T18:36:35Z","author_association":"CONTRIBUTOR","body":"Ok so in general the functions of TransactionImpl that use ListenableFutures are of the following form\n...\n```\nListenableFuture<...> future = ...;\nFutures.addCallback(future, new CommitCallback<...>(cd){...}, env.getSharedResources().getAsyncCommitExecutor());\n```\n...\n\nAt a very high level I think the approach I'm going to take is convert it to something along the lines of \n...\n```\nCompletableFuture<...> future = ...;\nfuture.thenAcceptAsync(_, env.getSharedResources().getAsyncCommitExecutor())\n.exceptionally(_);\n```\n...\n\nWhere thenAccept would perform the same action as onSuccess of the callback. And exceptionally would perform the same action as onFail of the callback.\n\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349398314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349464860","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349464860","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349464860,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTQ2NDg2MA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-05T22:36:34Z","updated_at":"2017-12-05T22:37:05Z","author_association":"CONTRIBUTOR","body":"@jkosh44 I think you are on the right track.  Because I am not deeply familiar with completable future I had to try experimenting in order to evaluate your proposal.  Below are the results of my experiment.\r\n\r\nI added the following to AsyncConditionalWriter just to enable me to try writing some code.\r\n\r\n```java\r\n  public CompletableFuture<Iterator<Result>> write(Collection<ConditionalMutation> input) {\r\n    return null;\r\n  }\r\n```\r\n\r\nThen for [TransactionImpl line 972](https://github.com/apache/fluo/blob/185a1cbfa57ba53896afcc5b1d685aea453e9404/modules/core/src/main/java/org/apache/fluo/core/impl/TransactionImpl.java#L972) I changed it to the following.\r\n\r\n```java\r\n final ConditionalMutation pcm =\r\n        prewrite(cd.prow, cd.pcol, cd.pval, cd.prow, cd.pcol, isTriggerRow(cd.prow));\r\n\r\n    CompletableFuture<Iterator<Result>> cfuture = cd.acw.write(Collections.singletonList(pcm));\r\n    cfuture.thenAcceptAsync(result -> {\r\n      try {\r\n        // this method currently throws Exception, so must be caught...\r\n        postLockPrimary(cd, pcm, Iterators.getOnlyElement(result));\r\n      } catch (Exception e) {\r\n        cd.commitObserver.failed(e);\r\n      }\r\n    }, env.getSharedResources().getAsyncCommitExecutor()).exceptionally(exception -> {\r\n      //not sure this really needed... since code above catches exception\r\n      cd.commitObserver.failed(exception);\r\n      return null;\r\n    });\r\n```\r\n\r\nBased on this experiment I am left wondering how we could make the code above more concise. The class CommitCallback was created to avoid duplicate code for exception handling.   I feel like we may need something similar for completable future, but not sure.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349464860/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349487794","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349487794","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349487794,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTQ4Nzc5NA==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-06T00:26:07Z","updated_at":"2017-12-06T00:33:27Z","author_association":"CONTRIBUTOR","body":"What if we had an interface like this (name needs some serious improvement)\r\n```\r\nprivate static interface OnSuccessInterface<V> {\r\n  protected void onSuccess(CommitData cd, V result) throws Exception;\r\n}\r\n```\r\n\r\nThen we can also have the following method:\r\n```\r\nprivate void addCallback(CompletableFuture<V> cfuture, CommitData cd, OnSuccessInterface onSuccessInterface){\r\n  cfuture.thenAcceptAsync(result -> {\r\n      try {\r\n        // this method currently throws Exception, so must be caught...\r\n        onSuccessInterface.onSuccess(cd, result);\r\n      } catch (Exception e) {\r\n        cd.commitObserver.failed(e);\r\n      }\r\n    }, env.getSharedResources().getAsyncCommitExecutor()).exceptionally(exception -> {\r\n      //not sure this really needed... since code above catches exception\r\n      cd.commitObserver.failed(exception);\r\n      return null;\r\n    });\r\n}\r\n```\r\n\r\nThat way TransactionImpl line 972 can be changed to the following:\r\n```\r\n    final ConditionalMutation pcm =\r\n        prewrite(cd.prow, cd.pcol, cd.pval, cd.prow, cd.pcol, isTriggerRow(cd.prow));\r\n\r\n    CompletableFuture<Iterator<Result>> cfuture = cd.acw.write(Collections.singletonList(pcm));\r\n    addCallBack(cfuture, cd, new OnSuccessInterface<Iterator<Result>> {\r\n      @Override\r\n      protected void onSuccess(CommitData cd, Iterator<Result> result) throws Excption {\r\n        postLockPrimary(cd, pcm, Iterators.getOnlyElement(result));\r\n      }\r\n    });\r\n```","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349487794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349510196","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349510196","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349510196,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTUxMDE5Ng==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-06T02:25:39Z","updated_at":"2017-12-06T15:37:55Z","author_association":"CONTRIBUTOR","body":"**Edit:** I changed this around since I first posted this.\r\n\r\nOracleClient and SharedBatchWriter seem to only use and deal with ListenableFutureTask<V>. The only method they seem to call is `create(Runnable runnable, V result)`, `create(Callable<V> callable)` and `run()` (Which it inherits from FutureTask<V>). Since the ListenableFutureTask<V> class implements ListenableFuture<V> we're able to return ListenableFutureTask<V> when we're expecting a ListenableFuture<V>.\r\n\r\nI propose we create the following class and replace all occurrences of ListenableFutureTask<V> with it:\r\n```\r\npublic class CompletableFutureTask<V> extends CompletableFuture<V> {\r\n  private Callable<V> callable ;\r\n\r\n  private CompletableFutureTask(Callable<V> callable){\r\n    if(callable == null) {\r\n      throw new NullPointerException();\r\n    }\r\n    this.callable = callable;\r\n    super();\r\n  }\r\n\r\n  public static <V> CompletableFutureTask<V> create(Callable<V> callable) {\r\n    return new CompletableFutureTask(callable);\r\n  }\r\n\r\n  public static <V> CompletableFutureTask<V> create(Runnable runnable, V result){\r\n    return new CompletableFutureTask(Executors.callable(runnable, result));\r\n  }\r\n\r\n  public void run(){\r\n    //May be a better way to do this. Not sure if this is blocking\r\n    super.complete(callable.call());\r\n  }\r\n\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349510196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349518313","html_url":"https://github.com/apache/fluo/issues/885#issuecomment-349518313","issue_url":"https://api.github.com/repos/apache/fluo/issues/885","id":349518313,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTUxODMxMw==","user":{"login":"cjmctague","id":20524292,"node_id":"MDQ6VXNlcjIwNTI0Mjky","avatar_url":"https://avatars.githubusercontent.com/u/20524292?v=4","gravatar_id":"","url":"https://api.github.com/users/cjmctague","html_url":"https://github.com/cjmctague","followers_url":"https://api.github.com/users/cjmctague/followers","following_url":"https://api.github.com/users/cjmctague/following{/other_user}","gists_url":"https://api.github.com/users/cjmctague/gists{/gist_id}","starred_url":"https://api.github.com/users/cjmctague/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjmctague/subscriptions","organizations_url":"https://api.github.com/users/cjmctague/orgs","repos_url":"https://api.github.com/users/cjmctague/repos","events_url":"https://api.github.com/users/cjmctague/events{/privacy}","received_events_url":"https://api.github.com/users/cjmctague/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-06T03:12:13Z","updated_at":"2017-12-06T03:12:13Z","author_association":"CONTRIBUTOR","body":"[Thrift 0.11.0](https://lists.apache.org/thread.html/1c7da4292c8a89db3648cb14d8fb5342c316ac05e7dab644d6888815@%3Cdev.thrift.apache.org%3E) is up for the release voting. It includes the fix for this issue so we can get this handled in the next couple days, preferably before a 1.2.0 release","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349518313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349530965","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349530965","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349530965,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTUzMDk2NQ==","user":{"login":"jwonders","id":1666405,"node_id":"MDQ6VXNlcjE2NjY0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/1666405?v=4","gravatar_id":"","url":"https://api.github.com/users/jwonders","html_url":"https://github.com/jwonders","followers_url":"https://api.github.com/users/jwonders/followers","following_url":"https://api.github.com/users/jwonders/following{/other_user}","gists_url":"https://api.github.com/users/jwonders/gists{/gist_id}","starred_url":"https://api.github.com/users/jwonders/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwonders/subscriptions","organizations_url":"https://api.github.com/users/jwonders/orgs","repos_url":"https://api.github.com/users/jwonders/repos","events_url":"https://api.github.com/users/jwonders/events{/privacy}","received_events_url":"https://api.github.com/users/jwonders/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-06T04:37:18Z","updated_at":"2017-12-06T04:37:18Z","author_association":"NONE","body":"I think it might be worth considering using `thenComposeAsync(...)` for the `TransactionImpl` behavior.  It looks like that class chains many asynchronous operations together based on the result of the previous operation.  This is exactly what the `thenCompose(...)` methods are intended for.  The catch is that it would probably require some singificant refactoring as `thenCompose(...)` expects functions that return a `CompletionStage` rather than functions that invoke a callback.  In the long-run I think this would clean up the code and be more idomatic approach.  However, it looks like it would be quite an undertaking based on the complexity of the transaction implementation.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349530965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349671115","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349671115","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349671115,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTY3MTExNQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-06T15:20:17Z","updated_at":"2017-12-06T15:20:17Z","author_association":"CONTRIBUTOR","body":"@jkosh44 the addCallback method looks good.  I gave it a try locally with the example I had yesterday.  I added a type parameter to the method definition as follows.\r\n\r\n```java\r\nprivate <V> void addCallback(CompletableFuture<V> cfuture, CommitData cd, OnSuccessInterface<V> onSuccessInterface){\r\n```\r\nI was able to use a lambda witht the OnSuccessInterface as follows.  So its only two lines, which is nice.\r\n\r\n```java\r\n    CompletableFuture<Iterator<Result>> cfuture = cd.acw.write(Collections.singletonList(pcm));\r\n    addCallback(cfuture, cd, (cd2, result) -> postLockPrimary(cd2, pcm, Iterators.getOnlyElement(result)));\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349671115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349678899","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349678899","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349678899,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTY3ODg5OQ==","user":{"login":"jwonders","id":1666405,"node_id":"MDQ6VXNlcjE2NjY0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/1666405?v=4","gravatar_id":"","url":"https://api.github.com/users/jwonders","html_url":"https://github.com/jwonders","followers_url":"https://api.github.com/users/jwonders/followers","following_url":"https://api.github.com/users/jwonders/following{/other_user}","gists_url":"https://api.github.com/users/jwonders/gists{/gist_id}","starred_url":"https://api.github.com/users/jwonders/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwonders/subscriptions","organizations_url":"https://api.github.com/users/jwonders/orgs","repos_url":"https://api.github.com/users/jwonders/repos","events_url":"https://api.github.com/users/jwonders/events{/privacy}","received_events_url":"https://api.github.com/users/jwonders/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-06T15:44:11Z","updated_at":"2017-12-06T15:44:11Z","author_association":"NONE","body":"Assuming the creation of a data class, maybe called `AsyncCommitResult`, that can represent the various outcomes of the async commit, something like the following would be an alternative.\r\n\r\nIn the end, the chaining might look similar to what @jkosh44 is suggesting except there would not be a need for the `CompletableFutureTask` or the `addCallback` method because the `thenComposeAsync` method already implements the desired behavior.  There would be a bit less indirection as well.\r\n\r\n``` java\r\n private CompletionStage<AsyncCommitResult> deleteLocks(CommitData cd, final long commitTs) {\r\n    ArrayList<Mutation> mutations = new ArrayList<>(updates.size() + 1);\r\n    // snip ---\r\n    // start the finish commit task after the delete locks task completes successfully\r\n    // in this case the finish commit task does not make a decision based on the result\r\n    return env.getSharedResources().getBatchWriter()\r\n            .writeMutationsAsyncCF(mutations)\r\n            .thenComposeAsync(x -> finishCommit(cd, commitTs), executor());\r\n  }\r\n\r\n  private CompletionStage<AsyncCommitResult> finishCommit(CommitData cd, long commitTs) {\r\n    ArrayList<Mutation> afterFlushMutations = new ArrayList<>(2);\r\n    // snip ---\r\n    return env.getSharedResources().getBatchWriter()\r\n            .writeMutationsAsyncCF(afterFlushMutations)\r\n            .thenApply(x -> AsyncCommitResult.committed());\r\n  }\r\n```\r\n\r\nFor the _fail-fast_ cases, it is reasonable to return a completion stage that is immediately failed, and for the synchronous tasks, it is reasonable to just perform them synchronously and then return an already-completed future.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349678899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349683433","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349683433","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349683433,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTY4MzQzMw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-06T15:58:16Z","updated_at":"2017-12-06T15:58:16Z","author_association":"CONTRIBUTOR","body":"@jkosh44 re CompletableFutureTask I think it may not be needed.  I am not sure but I think that SharedBatchWriter did the goofy stuff it does because ListenableFuture did not have anything like the complete method.  \r\n\r\nI think SharedBatchWriter could do the following.\r\n\r\n * When `writeMutationsAsyncFuture()` is called, create a new CompeltableFuture<Void>.  Put this compfuture and the mutation on the queue for background processing.  Return the compfuture.\r\n * After the background thread successfully writes some mutations, it can call `complete(null)` on the compfuture that goes with the mutations.\r\n\r\nFor OracleClient it can do something similar.  Create `CompeltableFuture<Stamp>`, queue it and return it. The background thread can call `complete(stamp)` when it has acquired a stamp for the request.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349683433/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349688778","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349688778","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349688778,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTY4ODc3OA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-06T16:13:36Z","updated_at":"2017-12-06T16:13:36Z","author_association":"CONTRIBUTOR","body":"@jwonders I like your suggestions relating to `thenComposeAsync`.  When converting the commit process form sync to async one thing I was unhappy with was that the high level logic was spread far and wide.  For the sync code there was one method that drove the entire commit process.  So in essence the high level commit logic could be understood by looking at this method.  When translating to async I could not figure out how to keep this overall logic in one place using ListenableFutures.  So the high level logic was spread across multiple methods.  \r\n\r\nIt seems that `thenComposeAsync`  may provide a way to pull the commit logic together in the code and I am really in favor of doing that.  I think one way to approach this is to do those changes in a follow on PR after converting the current code to compfuture.  However it could be done in the same PR that converts to compfuture also. I would be happy to review a PR that did either.  ","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349688778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349693453","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349693453","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349693453,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTY5MzQ1Mw==","user":{"login":"jwonders","id":1666405,"node_id":"MDQ6VXNlcjE2NjY0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/1666405?v=4","gravatar_id":"","url":"https://api.github.com/users/jwonders","html_url":"https://github.com/jwonders","followers_url":"https://api.github.com/users/jwonders/followers","following_url":"https://api.github.com/users/jwonders/following{/other_user}","gists_url":"https://api.github.com/users/jwonders/gists{/gist_id}","starred_url":"https://api.github.com/users/jwonders/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwonders/subscriptions","organizations_url":"https://api.github.com/users/jwonders/orgs","repos_url":"https://api.github.com/users/jwonders/repos","events_url":"https://api.github.com/users/jwonders/events{/privacy}","received_events_url":"https://api.github.com/users/jwonders/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-06T16:27:20Z","updated_at":"2017-12-06T16:27:20Z","author_association":"NONE","body":"@keith-turner It could certainly be done as a follow-on PR.  I've found that it is usually pretty easy to start at the low-level (leafs of the graph of task) and bite off little pieces at a time when migrating to CF or migrating synchronous implementations to async.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349693453/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349708179","html_url":"https://github.com/apache/fluo/issues/885#issuecomment-349708179","issue_url":"https://api.github.com/repos/apache/fluo/issues/885","id":349708179,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTcwODE3OQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-06T17:10:05Z","updated_at":"2017-12-06T17:10:05Z","author_association":"CONTRIBUTOR","body":"We have to be very careful with thrift versions.  Thrift has an IDL which is automatically translated to java code.  The automatically generated code uses libthrift.  Normally the code generated by thrift compiler X will only work with libthrift version X.   \r\n\r\nThe Accumulo client has code generated by the thrift compiler.  Given the constraints above, we often have to use the version of libthrift that Accumulo uses.\r\n\r\nIdeally the thrift project would keep the libthrift API super stable such that code generated by thrift compiler version X would work with libthrift version Y if X<=Y.   However the project has made no attempt at this in the past.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349708179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349713692","html_url":"https://github.com/apache/fluo/issues/885#issuecomment-349713692","issue_url":"https://api.github.com/repos/apache/fluo/issues/885","id":349713692,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTcxMzY5Mg==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-06T17:27:42Z","updated_at":"2017-12-06T17:27:52Z","author_association":"CONTRIBUTOR","body":"For example Accumulo 1.7.X uses libthrift 0.9.1 and Accumulo 1.8.X uses libthrift 0.9.3.  If you try to use libthrift 0.9.1 with Accumulo 1.8.X it will break in strange ways.   \r\n\r\nLuckily Fluo uses very little thrift functionality and the thrift code we automatically generate works with 0.9.1 and 0.9.3 at the moment.\r\n\r\nIt would be interesting to try Fluo and Accumulo with libthrift 0.11 and see if it blows up.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349713692/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349787927","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349787927","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349787927,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTc4NzkyNw==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-06T21:56:38Z","updated_at":"2017-12-06T21:57:45Z","author_association":"CONTRIBUTOR","body":"@jwonders @keith-turner I think I'd prefer to first do a direct conversion to CompletableFutures, that way I can get a better understanding of everything that's going on. Then after try and optimize with thenCompose.\r\n\r\n@keith-turner  I see what you're saying about the ListenableFutureTasks. I think in general wherever `ListenableFutureTask.run()` was called we can replace that with a `complete(...)` call. \r\n\r\nI did some investigating of AsyncConditionalWriter as well. I think the `ListeningExecutorService les` can just be replaced with a normal `ExecutorService es`. In particular `FlouExecutors.newFixedThreadPool(numThreads, \"asyncCW\")`. The `les.submit(new IterTask(iter, input.size()));` call can be replaced with something like `CompletableFuture.supplyAsync(new IterTask(iter, input.size()).call(), es);`\r\n\r\nI'm going to actually play around with some code tonight to try all of this out.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349787927/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349791121","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349791121","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349791121,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTc5MTEyMQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-06T22:09:03Z","updated_at":"2017-12-06T22:09:03Z","author_association":"CONTRIBUTOR","body":"@jkosh44 replacing `ListeningExecutorService` with `CompletableFuture.supplyAsync()` and regular executor seems like the correct path.  I'm curious to see how it goes in practice.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349791121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349853418","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-349853418","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":349853418,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTg1MzQxOA==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-07T03:37:27Z","updated_at":"2017-12-07T15:16:35Z","author_association":"CONTRIBUTOR","body":"So I was able to change AsyncConditionalWriter and OracleClient to use CompletableFutures and changed the TransactionImpl calls accordingly. AsyncConditionalWriter no longer implements AsyncFunction which is part of the Guava package. I was able to run mvn package and mvn verify without any of the tests failing. Are there any tests for commitAsync()?\r\n\r\nWhen changing SharedBatchWriter I found that you can't complete a CompletableFuture with a value of null. After some research it seems to be a bug with the CompletableFuture class itself. Seeing how that was sort of a work around anyway I'm going to try and see what else we can do tomorrow. Possibly something with runAsync.\r\n\r\nI opened up a pull request here: [WIP - Issue 722](https://github.com/apache/fluo/pull/975 )","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349853418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349996560","html_url":"https://github.com/apache/fluo/pull/975#issuecomment-349996560","issue_url":"https://api.github.com/repos/apache/fluo/issues/975","id":349996560,"node_id":"MDEyOklzc3VlQ29tbWVudDM0OTk5NjU2MA==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-07T15:14:20Z","updated_at":"2017-12-07T15:14:20Z","author_association":"CONTRIBUTOR","body":"As a note I left old code commented out as a reference. Once everything is converted over to `CompletableFuture`s and working properly I'll remove all old code.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/349996560/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350056564","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-350056564","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":350056564,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDA1NjU2NA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-07T18:39:27Z","updated_at":"2017-12-07T18:39:27Z","author_association":"CONTRIBUTOR","body":"@jkosh44 I ran the following wihtout issue and it printed null\r\n```java\r\n    CompletableFuture<Void> cf = new CompletableFuture<>();\r\n    cf.complete(null);\r\n    System.out.println(cf.get());\r\n```","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350056564/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350170664","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-350170664","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":350170664,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDE3MDY2NA==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-08T04:40:55Z","updated_at":"2017-12-08T04:40:55Z","author_association":"CONTRIBUTOR","body":"@keith-turner I went back to try again and keep running into the same error.\r\n```\r\n[INFO] --- findbugs-maven-plugin:3.0.5:check (find-bugs) @ fluo-core ---\r\n[INFO] BugInstance size is 2\r\n[INFO] Error size is 0\r\n[INFO] Total bugs: 2\r\n[INFO] Null passed for non-null parameter of java.util.concurrent.CompletableFuture.completedFuture(Object) in org.apache.fluo.core.impl.SharedBatchWriter.writeMutationsAsyncFuture(Collection) [org.apache.fluo.core.impl.SharedBatchWriter] At SharedBatchWriter.java:[line 198] NP_NONNULL_PARAM_VIOLATION\r\n[INFO] Null passed for non-null parameter of java.util.concurrent.CompletableFuture.complete(Object) in org.apache.fluo.core.impl.SharedBatchWriter$MutationBatch.countDown() [org.apache.fluo.core.impl.SharedBatchWriter$MutationBatch] At SharedBatchWriter.java:[line 84] NP_NONNULL_PARAM_VIOLATION\r\n[INFO] \r\n```\r\n\r\nLine 84 of `SharedBatchWrited` is the `complete` statement below:\r\n```\r\npublic void countDown() {\r\n  if (cdl != null) {\r\n    cdl.countDown();\r\n  }\r\n\r\n  if (cf != null) {\r\n    cf.complete(null);\r\n  }\r\n}\r\n```\r\n\r\nLine 198 is the `completedFuture` line below:\r\n```\r\nCompletableFuture<Void> writeMutationsAsyncFuture(Collection<Mutation> ml) {\r\n  if (ml.size() == 0) {\r\n    return CompletableFuture.completedFuture(null);\r\n  }\r\n\r\n  CompletableFuture<Void> cf = new CompletableFuture<>();\r\n  try {\r\n    MutationBatch mb = new MutationBatch(ml, cf);\r\n    mutQueue.put(mb);\r\n    return cf;\r\n  } catch (Exception e) {\r\n    throw new RuntimeException(e);\r\n  }\r\n}\r\n```\r\n\r\nIf it makes a difference I only get this error when calling `mvn verify` and not when calling `mvn package`","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350170664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350174559","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-350174559","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":350174559,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDE3NDU1OQ==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-08T05:14:59Z","updated_at":"2017-12-08T05:14:59Z","author_association":"MEMBER","body":"@jkosh44 The error occurs during `mvn verify`, but not `mvn package`, because findbugs runs at the `integration-test` phase of the Maven build lifecycle, which occurs after the `package` phase. See https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html\r\n\r\nThe bug is a false positive. See findbugsproject/findbugs#79 which was fixed only in spotbugs in spotbugs/spotbugs#484, which we have not yet switched to. You can ignore for now, with `-Dfindbugs.skip` when you build. It can also be added to the findbugs exclude-filter file.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350174559/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350271957","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-350271957","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":350271957,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDI3MTk1Nw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-08T14:10:45Z","updated_at":"2017-12-08T14:10:45Z","author_association":"CONTRIBUTOR","body":"@jkosh44 you may be able to prevent findbugs from triggering with indirection.  Maybe something like the following will throw it off.\r\n\r\n```java\r\n  //added to avoid findbugs false positive\r\n  private static final Supplier<Void> NULLS = () -> null;\r\n  \r\nCompletableFuture<Void> writeMutationsAsyncFuture(Collection<Mutation> ml) {\r\n  if (ml.size() == 0) {\r\n    return CompletableFuture.completedFuture(NULLS.get());\r\n  }\r\n```","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350271957/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350272582","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-350272582","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":350272582,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDI3MjU4Mg==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-08T14:13:28Z","updated_at":"2017-12-08T14:13:28Z","author_association":"CONTRIBUTOR","body":"Gotcha, when I first came across those pages I misinterpreted them as saying there was a bug in CompletableFutures not Maven. I probably won't have access to my computer until Sunday, so I'll try both of these then.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350272582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350618251","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-350618251","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":350618251,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDYxODI1MQ==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-11T04:11:43Z","updated_at":"2017-12-11T04:11:43Z","author_association":"CONTRIBUTOR","body":"@keith-turner The indirection worked, just pushed the fix.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350618251/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350815001","html_url":"https://github.com/apache/fluo/pull/975#issuecomment-350815001","issue_url":"https://api.github.com/repos/apache/fluo/issues/975","id":350815001,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDgxNTAwMQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-11T18:33:39Z","updated_at":"2017-12-11T18:33:39Z","author_association":"CONTRIBUTOR","body":"Changes were merged by ca63aaf \r\n\r\nThanks @jkosh44.  This is a very nice change, it removed usage of a dreaded Guava @Beta class and the code is shorter and easier to read.  Guava has been known to drop @Beta classes which is very problematic for libraries like Fluo.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350815001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350842729","html_url":"https://github.com/apache/fluo/pull/975#issuecomment-350842729","issue_url":"https://api.github.com/repos/apache/fluo/issues/975","id":350842729,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDg0MjcyOQ==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-11T20:08:21Z","updated_at":"2017-12-11T20:08:21Z","author_association":"CONTRIBUTOR","body":"No problem, happy to help. I think my next step is going through the code and seeing how we can use thenCompose to make the code cleaner like jwonders suggested.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350842729/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350913080","html_url":"https://github.com/apache/fluo/pull/977#issuecomment-350913080","issue_url":"https://api.github.com/repos/apache/fluo/issues/977","id":350913080,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDkxMzA4MA==","user":{"login":"kennethmcfarland","id":29900332,"node_id":"MDQ6VXNlcjI5OTAwMzMy","avatar_url":"https://avatars.githubusercontent.com/u/29900332?v=4","gravatar_id":"","url":"https://api.github.com/users/kennethmcfarland","html_url":"https://github.com/kennethmcfarland","followers_url":"https://api.github.com/users/kennethmcfarland/followers","following_url":"https://api.github.com/users/kennethmcfarland/following{/other_user}","gists_url":"https://api.github.com/users/kennethmcfarland/gists{/gist_id}","starred_url":"https://api.github.com/users/kennethmcfarland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kennethmcfarland/subscriptions","organizations_url":"https://api.github.com/users/kennethmcfarland/orgs","repos_url":"https://api.github.com/users/kennethmcfarland/repos","events_url":"https://api.github.com/users/kennethmcfarland/events{/privacy}","received_events_url":"https://api.github.com/users/kennethmcfarland/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-12T01:17:06Z","updated_at":"2017-12-12T01:17:06Z","author_association":"CONTRIBUTOR","body":"Hope it's ok I merged this :)\n\nOn Dec 11, 2017 4:27 PM, \"Keith Turner\" <notifications@github.com> wrote:\n\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/apache/fluo/pull/977\n> Commit Summary\n>\n>    - fixes #976 fixed scan --raw\n>\n> File Changes\n>\n>    - *M* modules/command/src/main/java/org/apache/fluo/command/\n>    FluoScan.java <https://github.com/apache/fluo/pull/977/files#diff-0>\n>    (2)\n>\n> Patch Links:\n>\n>    - https://github.com/apache/fluo/pull/977.patch\n>    - https://github.com/apache/fluo/pull/977.diff\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/fluo/pull/977>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/Acg-LHxsXzjNWdZJvjJkC8328QV4aQKAks5s_chVgaJpZM4Q-PN6>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350913080/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350923961","html_url":"https://github.com/apache/fluo/pull/977#issuecomment-350923961","issue_url":"https://api.github.com/repos/apache/fluo/issues/977","id":350923961,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDkyMzk2MQ==","user":{"login":"cjmctague","id":20524292,"node_id":"MDQ6VXNlcjIwNTI0Mjky","avatar_url":"https://avatars.githubusercontent.com/u/20524292?v=4","gravatar_id":"","url":"https://api.github.com/users/cjmctague","html_url":"https://github.com/cjmctague","followers_url":"https://api.github.com/users/cjmctague/followers","following_url":"https://api.github.com/users/cjmctague/following{/other_user}","gists_url":"https://api.github.com/users/cjmctague/gists{/gist_id}","starred_url":"https://api.github.com/users/cjmctague/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjmctague/subscriptions","organizations_url":"https://api.github.com/users/cjmctague/orgs","repos_url":"https://api.github.com/users/cjmctague/repos","events_url":"https://api.github.com/users/cjmctague/events{/privacy}","received_events_url":"https://api.github.com/users/cjmctague/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-12T02:21:30Z","updated_at":"2017-12-12T02:21:30Z","author_association":"CONTRIBUTOR","body":"@kpm1985 Did you test the functionality of this pull request yourself?","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350923961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350927323","html_url":"https://github.com/apache/fluo/pull/977#issuecomment-350927323","issue_url":"https://api.github.com/repos/apache/fluo/issues/977","id":350927323,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDkyNzMyMw==","user":{"login":"kennethmcfarland","id":29900332,"node_id":"MDQ6VXNlcjI5OTAwMzMy","avatar_url":"https://avatars.githubusercontent.com/u/29900332?v=4","gravatar_id":"","url":"https://api.github.com/users/kennethmcfarland","html_url":"https://github.com/kennethmcfarland","followers_url":"https://api.github.com/users/kennethmcfarland/followers","following_url":"https://api.github.com/users/kennethmcfarland/following{/other_user}","gists_url":"https://api.github.com/users/kennethmcfarland/gists{/gist_id}","starred_url":"https://api.github.com/users/kennethmcfarland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kennethmcfarland/subscriptions","organizations_url":"https://api.github.com/users/kennethmcfarland/orgs","repos_url":"https://api.github.com/users/kennethmcfarland/repos","events_url":"https://api.github.com/users/kennethmcfarland/events{/privacy}","received_events_url":"https://api.github.com/users/kennethmcfarland/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-12T02:42:29Z","updated_at":"2017-12-12T02:42:29Z","author_association":"CONTRIBUTOR","body":"I tested the scan functionality with/without raw and with/without patch and\nwhat failed before succeeded with patch applied.\n\nThe other mvn tests ran good too.\n\nIn retrospect I think for a while I will just stick to being very very\nhumble and just approving and testing PR if that is ok.\n\nOn Dec 11, 2017 6:21 PM, \"Christopher McTague\" <notifications@github.com>\nwrote:\n\n> @kpm1985 <https://github.com/kpm1985> Did you test the functionality of\n> this pull request yourself?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/fluo/pull/977#issuecomment-350923961>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/Acg-LKdJ9C5DGa6Kd0Im7Iwa9isLARwVks5s_eMsgaJpZM4Q-PN6>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350927323/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350932296","html_url":"https://github.com/apache/fluo/pull/977#issuecomment-350932296","issue_url":"https://api.github.com/repos/apache/fluo/issues/977","id":350932296,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDkzMjI5Ng==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-12T03:13:13Z","updated_at":"2017-12-12T03:13:13Z","author_association":"CONTRIBUTOR","body":"> Hope it's ok I merged this :)\r\n\r\nYeah, its ok.  Each PR just needs approval by one committer who isnt the author.  \r\n\r\nPersonally I like to squash so there is only one commit, but not everyone shares that preference or cares.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350932296/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350933203","html_url":"https://github.com/apache/fluo/pull/977#issuecomment-350933203","issue_url":"https://api.github.com/repos/apache/fluo/issues/977","id":350933203,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDkzMzIwMw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-12T03:19:35Z","updated_at":"2017-12-12T03:19:35Z","author_association":"CONTRIBUTOR","body":"> In retrospect I think for a while I will just stick to being very very humble and just approving and testing PR if that is ok.\r\n\r\n@kpm1985 don't worry about making mistakes.  Everyone else is making them all the time.  We have history can can revert any commits if needed. ","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350933203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350933339","html_url":"https://github.com/apache/fluo/pull/977#issuecomment-350933339","issue_url":"https://api.github.com/repos/apache/fluo/issues/977","id":350933339,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDkzMzMzOQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-12T03:20:36Z","updated_at":"2017-12-12T03:20:36Z","author_association":"CONTRIBUTOR","body":"Also, sometime for an issue I like this I will just look at the code and ask the author what testing they did.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350933339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350936083","html_url":"https://github.com/apache/fluo/pull/977#issuecomment-350936083","issue_url":"https://api.github.com/repos/apache/fluo/issues/977","id":350936083,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDkzNjA4Mw==","user":{"login":"cjmctague","id":20524292,"node_id":"MDQ6VXNlcjIwNTI0Mjky","avatar_url":"https://avatars.githubusercontent.com/u/20524292?v=4","gravatar_id":"","url":"https://api.github.com/users/cjmctague","html_url":"https://github.com/cjmctague","followers_url":"https://api.github.com/users/cjmctague/followers","following_url":"https://api.github.com/users/cjmctague/following{/other_user}","gists_url":"https://api.github.com/users/cjmctague/gists{/gist_id}","starred_url":"https://api.github.com/users/cjmctague/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cjmctague/subscriptions","organizations_url":"https://api.github.com/users/cjmctague/orgs","repos_url":"https://api.github.com/users/cjmctague/repos","events_url":"https://api.github.com/users/cjmctague/events{/privacy}","received_events_url":"https://api.github.com/users/cjmctague/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-12T03:41:05Z","updated_at":"2017-12-12T03:41:05Z","author_association":"CONTRIBUTOR","body":"@kpm1985 All good then! I read the \"hopefully this was ok\" as not checking it before the merge. \r\nSorry my misunderstanding.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350936083/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350938161","html_url":"https://github.com/apache/fluo/pull/977#issuecomment-350938161","issue_url":"https://api.github.com/repos/apache/fluo/issues/977","id":350938161,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MDkzODE2MQ==","user":{"login":"kennethmcfarland","id":29900332,"node_id":"MDQ6VXNlcjI5OTAwMzMy","avatar_url":"https://avatars.githubusercontent.com/u/29900332?v=4","gravatar_id":"","url":"https://api.github.com/users/kennethmcfarland","html_url":"https://github.com/kennethmcfarland","followers_url":"https://api.github.com/users/kennethmcfarland/followers","following_url":"https://api.github.com/users/kennethmcfarland/following{/other_user}","gists_url":"https://api.github.com/users/kennethmcfarland/gists{/gist_id}","starred_url":"https://api.github.com/users/kennethmcfarland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kennethmcfarland/subscriptions","organizations_url":"https://api.github.com/users/kennethmcfarland/orgs","repos_url":"https://api.github.com/users/kennethmcfarland/repos","events_url":"https://api.github.com/users/kennethmcfarland/events{/privacy}","received_events_url":"https://api.github.com/users/kennethmcfarland/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-12T03:56:37Z","updated_at":"2017-12-12T03:56:37Z","author_association":"CONTRIBUTOR","body":"@cjmctague - No need to feel bad it was my poor communication.\r\n@keith-turner - To be a committer was a life goal for me, so I've been so happy, I originally missed the invitation too! I get a little nervous about screwing something up because to me this is such a huge privilege, thank you for making me feel calm and comfortable.  ","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/350938161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351151776","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-351151776","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":351151776,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MTE1MTc3Ng==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-12T18:52:08Z","updated_at":"2017-12-12T18:52:08Z","author_association":"CONTRIBUTOR","body":"@jwonders I've been looking at your suggestions and had a question. I'm still unclear as to what AsynCommitResult's purpose is. Can you expands on that for me?","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351151776/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351266088","html_url":"https://github.com/apache/fluo/issues/722#issuecomment-351266088","issue_url":"https://api.github.com/repos/apache/fluo/issues/722","id":351266088,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MTI2NjA4OA==","user":{"login":"jwonders","id":1666405,"node_id":"MDQ6VXNlcjE2NjY0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/1666405?v=4","gravatar_id":"","url":"https://api.github.com/users/jwonders","html_url":"https://github.com/jwonders","followers_url":"https://api.github.com/users/jwonders/followers","following_url":"https://api.github.com/users/jwonders/following{/other_user}","gists_url":"https://api.github.com/users/jwonders/gists{/gist_id}","starred_url":"https://api.github.com/users/jwonders/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwonders/subscriptions","organizations_url":"https://api.github.com/users/jwonders/orgs","repos_url":"https://api.github.com/users/jwonders/repos","events_url":"https://api.github.com/users/jwonders/events{/privacy}","received_events_url":"https://api.github.com/users/jwonders/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-13T02:52:22Z","updated_at":"2017-12-13T02:52:22Z","author_association":"NONE","body":"The purpose of `AsyncCommitResult` is to capture the result of the async operation.  Terminal steps would be able to create a concrete value of this result class because they are aware of successful completion or errors.  Intermediate steps would return a future based on additional composed async steps.\r\n\r\nIn the code I had posted, the `finishCommit` method is a terminal step that returns the `committed()` status upon successful completion.  The `deleteLocks` is an intermediate step that does its work then composes the result with the `finishCommit` step.  Some steps might return immediately upon exceptional conditions and perform composition on normal conditions.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351266088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351458277","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-351458277","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":351458277,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MTQ1ODI3Nw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-13T17:12:20Z","updated_at":"2017-12-13T17:14:59Z","author_association":"CONTRIBUTOR","body":"I created a [Gist](https://gist.github.com/keith-turner/387dc83332bc330fee673be146848994) containing some local experimentation I did.  I am not in anyway advocating for this design, I am just experimenting with the high level decomposition and sharing the result for discussion.  I am new to using thenCompose and was just trying it out.  ","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351458277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351460771","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-351460771","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":351460771,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MTQ2MDc3MQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-13T17:20:37Z","updated_at":"2017-12-13T17:20:37Z","author_association":"CONTRIBUTOR","body":"This is the commit code as it existed before being converted to an async process.\r\n\r\nhttps://github.com/apache/fluo/blob/0edd91d94fd059a5d5c5f099a78c6ed42dfc4722/modules/core/src/main/java/io/fluo/core/impl/TransactionImpl.java#L807","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351460771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351564607","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-351564607","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":351564607,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MTU2NDYwNw==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-14T00:00:45Z","updated_at":"2017-12-14T00:00:59Z","author_association":"CONTRIBUTOR","body":"Just wanted to also copy some relevant comments from #722 by @jwonders, to avoid having to flip back and forth.\r\n\r\n>Assuming the creation of a data class, maybe called `AsyncCommitResult`, that can represent the various outcomes of the async commit, something like the following would be an alternative.\r\n>\r\n>In the end, the chaining might look similar to what @jkosh44 is suggesting except there would not be a need for the `CompletableFutureTask` or the `addCallback` method because the `thenComposeAsync` method already implements the desired behavior. There would be a bit less indirection as well.\r\n>\r\n> \r\n>```\r\n>private CompletionStage<AsyncCommitResult> deleteLocks(CommitData cd, final long commitTs) {\r\n>    ArrayList<Mutation> mutations = new ArrayList<>(updates.size() + 1);\r\n>    // snip ---\r\n>    // start the finish commit task after the delete locks task completes successfully\r\n>    // in this case the finish commit task does not make a decision based on the result\r\n>    return env.getSharedResources().getBatchWriter()\r\n>            .writeMutationsAsyncCF(mutations)\r\n>            .thenComposeAsync(x -> finishCommit(cd, commitTs), executor());\r\n>}\r\n> \r\n>private CompletionStage<AsyncCommitResult> finishCommit(CommitData cd, long commitTs) {\r\n>    ArrayList<Mutation> afterFlushMutations = new ArrayList<>(2);\r\n>    // snip ---\r\n>    return env.getSharedResources().getBatchWriter()\r\n>            .writeMutationsAsyncCF(afterFlushMutations)\r\n>            .thenApply(x -> AsyncCommitResult.committed());\r\n>}\r\n> ```\r\n>For the _fail-fast_ cases, it is reasonable to return a completion stage that is immediately failed, and for the synchronous tasks, it is reasonable to just perform them synchronously and then return an already-completed future.\r\n\r\nAnd \r\n\r\n>The purpose of `AsyncCommitResult` is to capture the result of the async operation. Terminal steps would be able to create a concrete value of this result class because they are aware of successful completion or errors. Intermediate steps would return a future based on additional composed async steps.\r\n>\r\n>In the code I had posted, the `finishCommit` method is a terminal step that returns the `committed()` status upon successful completion. The `deleteLocks` is an intermediate step that does its work then composes the result with the `finishCommit` step. Some steps might return immediately upon exceptional conditions and perform composition on normal conditions.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351564607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351572833","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-351572833","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":351572833,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MTU3MjgzMw==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-14T00:47:03Z","updated_at":"2017-12-14T00:47:03Z","author_association":"CONTRIBUTOR","body":"@keith-turner I've been trying to think of a way to synthesize @jwonders idea of an AysncCommitResult and your idea of having one main commit method to handle all the logic. \r\n\r\nEssentially `AsyncCommitResult` would have any info that would be needed by any of the helper method parameters. Each helper method would return a `CompletableFuture<AsyncCommitResult>`. Then the main commit method would chain all of those helper methods together using `.thenCommitAsync()`. \r\n\r\nUltimately the last method, `finishCommit` could return a `CompletableFuture<void>` or even a `CompletableFuture<boolean>` since it doesn't need to pass any info onto the next method.\r\n\r\nSo using the two methods that @jwonders used above it would look something like this:\r\n```\r\n@Override\r\npublic synchronized void commitAsync(AsyncCommitObserver commitCallback) {\r\n  checkIfOpen();\r\n  status = TxStatus.COMMIT_STARTED;\r\n  commitAttempted = true;\r\n  CommitData cd = createCommitData();\r\n\r\n //The line below would be a CompletableFuture<boolean> if we decide on a boolean \r\n CompletableFuture<void> res = beginCommitAsync(cd, commitCallback, null)\r\n      .thenComposeAsync(....)\r\n      ...\r\n      .thenComposeAsync(acr -> deleteLocks(acr.getCommitData(), acr.getCommitTs())\r\n      .thenComposeAsync(acr -> finishCommit(acr.getCommitData(), acr.getCommitTs())\r\n      .exceptionally(e ->commitCallback.failed(e));\r\n}\r\n\r\n...\r\n\r\nprivate CompletionStage<AsyncCommitResult> deleteLocks(CommitData cd, final long commitTs) {\r\n   ArrayList<Mutation> mutations = new ArrayList<>(updates.size() + 1);\r\n   // snip ---\r\n   // start the finish commit task after the delete locks task completes successfully\r\n   // in this case the finish commit task does not make a decision based on the result\r\n   return env.getSharedResources().getBatchWriter()\r\n           .writeMutationsAsyncCF(mutations)\r\n           .thenComposeAsync(x -> {\r\n               AsyncCommitResult res = new AsyncCommitResult;\r\n               res.setCommitData(cd);\r\n               res.setCommitTs(commitTs);\r\n               return res;\r\n            });\r\n}\r\n\r\nprivate CompletionStage<void> finishCommit(CommitData cd, long commitTs) {\r\n   ArrayList<Mutation> afterFlushMutations = new ArrayList<>(2);\r\n   // snip ---\r\n  cd.commitObserver.committed();\r\n  //For the line below we'd have to use indirection again or if we go with a boolean just complete it with true\r\n  return CompletableFuture.completedFuture(null)\r\n}\r\n```\r\n\r\nMy two questions/issues are:\r\n1. Is the original `commitCallback` the same as any subsequent `cd.commitObserver`s. I.e. will that `exceptionally` call accurately log any failures along the way.\r\n2. I don't really like how each helper method creates it's own `AsyncCommitResult` I'd rather figure someway to just pass the same one between methods.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351572833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351573940","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-351573940","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":351573940,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MTU3Mzk0MA==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-14T00:53:47Z","updated_at":"2017-12-14T00:53:47Z","author_association":"CONTRIBUTOR","body":"`AsyncCommitResult` would look like\r\n```\r\npublic class AsyncCommitResult {\r\n  private CommitData cd;\r\n  private ConditionalMutation pcm;\r\n  private Result result;\r\n  private Status mutationStatus;\r\n  private Iterator<Result> results;\r\n  private Stamp stamp;\r\n  private long commitTs;\r\n  private ConditionalMutation delLockMutation;\r\n\r\n  //A lot of getters and setters\r\n}\r\n\r\nAfter typing it out though it doesn't look very clean, any thoughts?","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351573940/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351581495","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-351581495","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":351581495,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MTU4MTQ5NQ==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-14T01:37:54Z","updated_at":"2017-12-14T01:37:54Z","author_association":"CONTRIBUTOR","body":"I was going to try and see how this worked in actual code and I noticed that this would not cover the case where we commit and return early. We could add a `boolean committed` to `AsyncCommitResult` and at the start of each `thenCompose` call check `if(!acr.getCommitted)`. Whenever we commit early we just return a completed future with an acr setting `commit` to true.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351581495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351726809","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-351726809","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":351726809,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MTcyNjgwOQ==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-14T14:32:14Z","updated_at":"2017-12-14T15:08:33Z","author_association":"CONTRIBUTOR","body":"If anyone's interested I started to try and see how this would look/work in code. [TransactionImpl](https://github.com/jkosh44/fluo/blob/issue-978/modules/core/src/main/java/org/apache/fluo/core/impl/TransactionImpl.java#L899) and [AsyncCommitResult](https://github.com/jkosh44/fluo/blob/issue-978/modules/core/src/main/java/org/apache/fluo/core/impl/AsyncCommitResult.java). It's still pretty messy, but I've already been thinking of ways to clean it up. I didn't open a pull request because it doesn't compile, I have one error left that I need to take care of. So I still don't really know if it works but I just wanted to show an idea of what I was talking about. \r\n\r\nSome cleanup ideas:\r\n- Add an AsyncCommitResult as a param to the helper methods to avoid recreating one at every step \r\n- Move `if(!acr.isFinished())` logic into the helper methods themselves\r\n- Is it necessary for the acr to have a CommitData field, or is it the same cd object through every call?","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351726809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351738004","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-351738004","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":351738004,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MTczODAwNA==","user":{"login":"jwonders","id":1666405,"node_id":"MDQ6VXNlcjE2NjY0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/1666405?v=4","gravatar_id":"","url":"https://api.github.com/users/jwonders","html_url":"https://github.com/jwonders","followers_url":"https://api.github.com/users/jwonders/followers","following_url":"https://api.github.com/users/jwonders/following{/other_user}","gists_url":"https://api.github.com/users/jwonders/gists{/gist_id}","starred_url":"https://api.github.com/users/jwonders/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwonders/subscriptions","organizations_url":"https://api.github.com/users/jwonders/orgs","repos_url":"https://api.github.com/users/jwonders/repos","events_url":"https://api.github.com/users/jwonders/events{/privacy}","received_events_url":"https://api.github.com/users/jwonders/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-14T15:10:17Z","updated_at":"2017-12-14T15:10:17Z","author_association":"NONE","body":"@jkosh44 I'm interested in looking at it.  I probably can't get to it until this weekend rthough.\r\n\r\nHopefully the `AsyncCommitResult` doesn't need to pass much intermediate information between steps.  There is probably a balance between doing everything in-line with `thenCompose(...)` and keeping some of the current structure to make the short-circuiting cleaner and allow for capturing data in the surrounding scope.  The direction I would approach this from was starting with the same structure, introducing `thenCompose(...)` and then trying to refactor to achieve the understandability @keith-turner is looking for.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/351738004/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/352139834","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-352139834","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":352139834,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MjEzOTgzNA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-15T23:49:23Z","updated_at":"2017-12-15T23:49:23Z","author_association":"CONTRIBUTOR","body":"I have been looking at your changes, I am not sure the AsyncCommitResult path is improving the readability of the code.  I have been thinking about this and experimented with another high level design.  This design has [CommitSteps][1] can be [chained together][3] allowing someone to easily follow the overall commit logic.    An example of the commit step is the [LockPrimaryStep][2] which does a conditional update.\r\n\r\nThere are a few things I like about this pattern.\r\n\r\n * The code for a commit step is now all together in a commit step class.  Currently functions contain the code to finish one commit step and start another.  So currently a single function contains code for two different commit steps usually.\r\n * Common functionality is pushed up to super classes.  For example the code for conditional mutation operations are simple functions that are easier to understand with more complex async stuff in a super class.\r\n * The composition process creates futures as needed, not creating them unless that path is taken.\r\n\r\n[1]: https://github.com/keith-turner/fluo/blob/fluo-978-experiment/modules/core/src/main/java/org/apache/fluo/core/impl/TransactionImpl.java#L896\r\n[2]: https://github.com/keith-turner/fluo/blob/fluo-978-experiment/modules/core/src/main/java/org/apache/fluo/core/impl/TransactionImpl.java#L970\r\n[3]: https://github.com/keith-turner/fluo/blob/fluo-978-experiment/modules/core/src/main/java/org/apache/fluo/core/impl/TransactionImpl.java#L1277","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/352139834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/352326285","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-352326285","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":352326285,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MjMyNjI4NQ==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-18T04:58:44Z","updated_at":"2017-12-18T04:58:44Z","author_association":"CONTRIBUTOR","body":"@keith-turner I haven't had a chance to look at the code in depth but it seems to achieve everything you were looking for. \r\n\r\nIn terms of exception handling for CommitStep, I thin we can append `compose` with `.exceptionally(e -> getFailureOp(cd))` or use `handleAsync` like `addCallback` above it.\r\n\r\nFor all the TODOs saying something along the lines of \"do async\" what do you think about just surrounding them with CompletableFuture.runAsync()`?","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/352326285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/352465141","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-352465141","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":352465141,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MjQ2NTE0MQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-18T15:44:04Z","updated_at":"2017-12-18T15:44:04Z","author_association":"CONTRIBUTOR","body":"> In terms of exception handling for CommitStep, I thin we can append compose with .exceptionally(e -> getFailureOp(cd)) or use handleAsync like addCallback above it.\r\n\r\nI think either of those approaches would work. However I am still not very familiar with `.exceptionally()`, so its hard for me to make a call on it.  I need to experiment with it and get some hands on experience.\r\n\r\n> For all the TODOs saying something along the lines of \"do async\" what do you think about just surrounding them with CompletableFuture.runAsync()`?\r\n\r\nI think that would work in some cases.  \r\n\r\nIf you think the approach I proposed is good, feel free to copy it or branch it.  One thing I realized about this approach is that it makes the normal path easy to follow in the code.  However the error path is still spread out in the code. \r\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/352465141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/352613216","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-352613216","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":352613216,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MjYxMzIxNg==","user":{"login":"jwonders","id":1666405,"node_id":"MDQ6VXNlcjE2NjY0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/1666405?v=4","gravatar_id":"","url":"https://api.github.com/users/jwonders","html_url":"https://github.com/jwonders","followers_url":"https://api.github.com/users/jwonders/followers","following_url":"https://api.github.com/users/jwonders/following{/other_user}","gists_url":"https://api.github.com/users/jwonders/gists{/gist_id}","starred_url":"https://api.github.com/users/jwonders/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwonders/subscriptions","organizations_url":"https://api.github.com/users/jwonders/orgs","repos_url":"https://api.github.com/users/jwonders/repos","events_url":"https://api.github.com/users/jwonders/events{/privacy}","received_events_url":"https://api.github.com/users/jwonders/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-19T01:40:28Z","updated_at":"2017-12-19T01:40:28Z","author_association":"NONE","body":"It took me a little while to work my way through the transaction implementation.  I made this diagram to help keep things straight in my head.  I think it is pretty accurate although I didn't pay as close of attention to some of the error handling branches.\r\n\r\n![transaction_impl](https://user-images.githubusercontent.com/1666405/34136011-b0c2e93a-e418-11e7-90cb-582516e6d470.png)\r\n\r\nThe main thing to note is that some of the stages require a decision between more than two branches upon completion.  The `CompletableFuture` naturally provides two branches, the normal one and the exceptional one.  And, the methods like `thenDoSomething(...)` are most natural when there are two clearly separable paths to go down.  I think this is why adding the notion of a `CommitStep` is making the code clearer as it handles the pattern matching and delegation to multiple branches.  It is also why the normal path being easy to follow leads to the error path being hidden.  I like the idea of the normal path being very easy to follow as this is the essence of what needs to happen to perform a transaction.\r\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/352613216/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/352818006","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-352818006","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":352818006,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MjgxODAwNg==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-19T16:50:27Z","updated_at":"2017-12-19T16:50:50Z","author_association":"CONTRIBUTOR","body":"@jwonders the flow chart is really awesome!  What did you use to create it?  Would you be willing to contribute it?  I think we could use that diagram to create a blog post explaining the commit process.  The blog post could have short explanations of the steps and links to the code.\r\n\r\n>  I like the idea of the normal path being very easy to follow as this is the essence of what needs to happen to perform a transaction.\r\n\r\nI agree with this.  I can't think of a way to represent the error paths at the top level without making the code hard to follow at the top level.\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/352818006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/352944995","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-352944995","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":352944995,"node_id":"MDEyOklzc3VlQ29tbWVudDM1Mjk0NDk5NQ==","user":{"login":"jwonders","id":1666405,"node_id":"MDQ6VXNlcjE2NjY0MDU=","avatar_url":"https://avatars.githubusercontent.com/u/1666405?v=4","gravatar_id":"","url":"https://api.github.com/users/jwonders","html_url":"https://github.com/jwonders","followers_url":"https://api.github.com/users/jwonders/followers","following_url":"https://api.github.com/users/jwonders/following{/other_user}","gists_url":"https://api.github.com/users/jwonders/gists{/gist_id}","starred_url":"https://api.github.com/users/jwonders/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwonders/subscriptions","organizations_url":"https://api.github.com/users/jwonders/orgs","repos_url":"https://api.github.com/users/jwonders/repos","events_url":"https://api.github.com/users/jwonders/events{/privacy}","received_events_url":"https://api.github.com/users/jwonders/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-20T02:15:28Z","updated_at":"2017-12-20T02:15:28Z","author_association":"NONE","body":"I used gliffy.  Definitely willing to contribute it.  Here is a gist of the json.\r\n\r\nhttps://gist.github.com/jwonders/f71425e6495e08d610ad69ff49735742\r\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/352944995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353173648","html_url":"https://github.com/apache/fluo/issues/933#issuecomment-353173648","issue_url":"https://api.github.com/repos/apache/fluo/issues/933","id":353173648,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzE3MzY0OA==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-20T20:27:11Z","updated_at":"2017-12-20T20:27:11Z","author_association":"MEMBER","body":"Fixed with formatter-maven-plugin 2.7.0+","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353173648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353176631","html_url":"https://github.com/apache/fluo/pull/979#issuecomment-353176631","issue_url":"https://api.github.com/repos/apache/fluo/issues/979","id":353176631,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzE3NjYzMQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-20T20:40:38Z","updated_at":"2017-12-20T20:42:57Z","author_association":"CONTRIBUTOR","body":"Recently I ran into the problem this PR is fixing.  I was running the [stress test](https://github.com/astralway/stresso) with Fluo 1.2.0-SNAP and Accumulo 1.8.1.  Accumulo 1.8.1 is built against thrift 0.9.3.  The stress test builds a shaded jar containing Fluo and Accumulo for map reduce. Because Fluo depends on thrift 0.9.1 the shaded jar ended up with that version.  This caused problems for the Accumulo client code, it blew up with the following error. \r\n\r\n```\r\nException in thread \"main\" java.lang.NoSuchMethodError: org.apache.accumulo.core.tabletserver.thrift.TabletClientService$Client.sendBaseOneway(Ljava/lang/String;Lorg/apache/thrift/TBase;)V\r\n\tat org.apache.accumulo.core.tabletserver.thrift.TabletClientService$Client.send_closeScan(TabletClientService.java:303)\r\n\tat org.apache.accumulo.core.tabletserver.thrift.TabletClientService$Client.closeScan(TabletClientService.java:295)\r\n\tat org.apache.accumulo.core.client.impl.ThriftScanner.getBatchFromServer(ThriftScanner.java:117)\r\n\tat org.apache.accumulo.core.metadata.MetadataLocationObtainer.lookupTablet(MetadataLocationObtainer.java:101)\r\n\tat org.apache.accumulo.core.client.impl.TabletLocatorImpl.lookupTabletLocation(TabletLocatorImpl.java:483)\r\n\tat org.apache.accumulo.core.client.impl.TabletLocatorImpl.lookupTabletLocationAndCheckLock(TabletLocatorImpl.java:654)\r\n\tat org.apache.accumulo.core.client.impl.TabletLocatorImpl._locateTablet(TabletLocatorImpl.java:640)\r\n\tat org.apache.accumulo.core.client.impl.TabletLocatorImpl.locateTablet(TabletLocatorImpl.java:456)\r\n\tat org.apache.accumulo.core.client.impl.ThriftScanner.scan(ThriftScanner.java:247)\r\n\tat org.apache.accumulo.core.client.impl.ScannerIterator$Reader.run(ScannerIterator.java:79)\r\n\tat org.apache.accumulo.core.client.impl.ScannerIterator.hasNext(ScannerIterator.java:150)\r\n\tat org.apache.accumulo.core.metadata.TableMetadataServicer.getTabletLocations(TableMetadataServicer.java:78)\r\n\tat org.apache.accumulo.core.client.impl.TableOperationsImpl.listSplits(TableOperationsImpl.java:570)\r\n\tat stresso.trie.Init.writeSplits(Init.java:227)\r\n\tat stresso.trie.Init.buildTree(Init.java:205)\r\n\tat stresso.trie.Init.run(Init.java:151)\r\n\tat org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:70)\r\n\tat org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:84)\r\n\tat stresso.trie.Init.main(Init.java:239)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.hadoop.util.RunJar.run(RunJar.java:221)\r\n\tat org.apache.hadoop.util.RunJar.main(RunJar.java:136)\r\n```\r\n\r\nI will give these changes a try with the stress test and see if it fixes the problem.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353176631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353179754","html_url":"https://github.com/apache/fluo/pull/979#issuecomment-353179754","issue_url":"https://api.github.com/repos/apache/fluo/issues/979","id":353179754,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzE3OTc1NA==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-20T20:54:30Z","updated_at":"2017-12-20T20:57:24Z","author_association":"MEMBER","body":"Other possible fixes for the situation @keith-turner mentioned:\r\n\r\n1. Add an exclusion for libthrift inside the Fluo application's pom, when it declares its dependency on fluo-core (this is a good solution for any fluo applications depending on a version of Fluo prior to this change).\r\n2. fluo-core could declare the dependency `optional`; this achieves a very similar purpose as `provided` dependency scope for transitive dependency resolution, but via a slightly different mechanism. However, `optional` implies different semantics which I don't think is necessarily appropriate in this case.\r\n3. Shade in the libthrift used by fluo-core into that jar (or a sibling \"fluo-oracle\" jar), so it does not conflict with with the libthrift requirements for the Accumulo client code (this might be a good long-term solution).\r\n4. Stop using thrift for Fluo's Oracle (a possible long-term solution which requires further investigation for an appropriate RPC mechanism).\r\n5. Isolate the class path dependencies for the Fluo Oracle client side and the Accumulo client side (hard).","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353179754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353195958","html_url":"https://github.com/apache/fluo/pull/979#issuecomment-353195958","issue_url":"https://api.github.com/repos/apache/fluo/issues/979","id":353195958,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzE5NTk1OA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-20T22:04:45Z","updated_at":"2017-12-20T22:04:45Z","author_association":"CONTRIBUTOR","body":"I would be in favor of experimenting with shading libthrift.  Even if Fluo works with all currently released libthrift versions after 0.9.1 there is no guarantee this will continue to be the case.  If we can shade now, we can possibly avoid future headaches.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353195958/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353641055","html_url":"https://github.com/apache/fluo/issues/983#issuecomment-353641055","issue_url":"https://api.github.com/repos/apache/fluo/issues/983","id":353641055,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzY0MTA1NQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-22T17:21:44Z","updated_at":"2017-12-22T17:44:46Z","author_association":"CONTRIBUTOR","body":"From some problems I do not really want to see a stack trace.   For example currently some commands  detect when the oracle is not running and print a nice error message.  For this case I personally would not like to see a stack trace.   However if a command throws a NPE I would like to see that stack trace.   To deal with this I propose the following.\r\n\r\n * Create FluoCommandException that extends Runtime exception.\r\n * Common code is used to run all commands and it does the following :\r\n   * Catches FluoCommandException and logs just the message at error and the stack trace at debug. This would also need to call `System.exit(<non-zero>)`. \r\n   * Catches Exception and logs message and trace at error level and call `System.exit(<non-zero>)`.  Alternatively, could let other exceptions escape `main()`.\r\n * In command code throw FluoCommandException in places where it makes sense.\r\n\r\nThis approach still calls `System.exit()`, but its in one place at the top level and will not present a surprise to anyone calling code.  Low level code will use FluoCommandException instead of calling `System.exit()`.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353641055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353669587","html_url":"https://github.com/apache/fluo/pull/986#issuecomment-353669587","issue_url":"https://api.github.com/repos/apache/fluo/issues/986","id":353669587,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzY2OTU4Nw==","user":{"login":"kamaci","id":3921885,"node_id":"MDQ6VXNlcjM5MjE4ODU=","avatar_url":"https://avatars.githubusercontent.com/u/3921885?v=4","gravatar_id":"","url":"https://api.github.com/users/kamaci","html_url":"https://github.com/kamaci","followers_url":"https://api.github.com/users/kamaci/followers","following_url":"https://api.github.com/users/kamaci/following{/other_user}","gists_url":"https://api.github.com/users/kamaci/gists{/gist_id}","starred_url":"https://api.github.com/users/kamaci/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kamaci/subscriptions","organizations_url":"https://api.github.com/users/kamaci/orgs","repos_url":"https://api.github.com/users/kamaci/repos","events_url":"https://api.github.com/users/kamaci/events{/privacy}","received_events_url":"https://api.github.com/users/kamaci/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-22T20:27:21Z","updated_at":"2017-12-22T20:27:21Z","author_association":"MEMBER","body":"@keith-turner I've created a new PR.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353669587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353674111","html_url":"https://github.com/apache/fluo/pull/986#issuecomment-353674111","issue_url":"https://api.github.com/repos/apache/fluo/issues/986","id":353674111,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzY3NDExMQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-22T21:02:21Z","updated_at":"2017-12-22T21:02:21Z","author_association":"CONTRIBUTOR","body":"@kamaci thanks again for the contribution.  Would you like to be added to our [people page](http://fluo.apache.org/people/) as a contributor?  If so, submit a PR to the [website repo](https://github.com/apache/fluo-website/tree/gh-pages) or let me know what info you would like added.\r\n\r\nAlso, new contributors are usually mentioned on twitter by [@ApacheFluo](https://twitter.com/apachefluo).  Are you ok with this and if so do you have a twitter handle we can use in the tweet?","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353674111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353674935","html_url":"https://github.com/apache/fluo/issues/983#issuecomment-353674935","issue_url":"https://api.github.com/repos/apache/fluo/issues/983","id":353674935,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzY3NDkzNQ==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-22T21:09:25Z","updated_at":"2017-12-22T21:09:25Z","author_association":"MEMBER","body":"So, without fully understanding all the code which this could impact (so, I could be totally off base with these suggestions), I have a few thoughts.\r\n\r\nI think there are a few goals:\r\n\r\n1. Make the code friendly to execute by a container/wrapping UI without calling `System.exit()`\r\n2. Have a convenient way to catch exceptions (maybe just certain expected ones), print a standard error message and exit with a non-zero exit code.\r\n\r\nThe easiest way to do this is to have some sort of `exec() throws FluoCommandException` method which `main()` trivially wraps to handle exceptions. We could add a `--debug` option to control whether `main()` shows the stack trace or suppresses them. `main()` should consistently call `System.exit()` whether or not it is zero or non-zero.\r\n\r\nAs for logging, I'm not sure it makes sense to do any logging from a CLI. CLI which is intended to be run by users should use the console.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353674935/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353675448","html_url":"https://github.com/apache/fluo/pull/986#issuecomment-353675448","issue_url":"https://api.github.com/repos/apache/fluo/issues/986","id":353675448,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzY3NTQ0OA==","user":{"login":"kamaci","id":3921885,"node_id":"MDQ6VXNlcjM5MjE4ODU=","avatar_url":"https://avatars.githubusercontent.com/u/3921885?v=4","gravatar_id":"","url":"https://api.github.com/users/kamaci","html_url":"https://github.com/kamaci","followers_url":"https://api.github.com/users/kamaci/followers","following_url":"https://api.github.com/users/kamaci/following{/other_user}","gists_url":"https://api.github.com/users/kamaci/gists{/gist_id}","starred_url":"https://api.github.com/users/kamaci/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kamaci/subscriptions","organizations_url":"https://api.github.com/users/kamaci/orgs","repos_url":"https://api.github.com/users/kamaci/repos","events_url":"https://api.github.com/users/kamaci/events{/privacy}","received_events_url":"https://api.github.com/users/kamaci/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-22T21:13:23Z","updated_at":"2017-12-22T21:13:23Z","author_association":"MEMBER","body":"Sure! I would like to be added as contributor. I'll create a PR for it.\r\n\r\nI'm OK with that. Here is my twitter account name: @kamaci_furkan","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353675448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353683489","html_url":"https://github.com/apache/fluo/pull/987#issuecomment-353683489","issue_url":"https://api.github.com/repos/apache/fluo/issues/987","id":353683489,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzY4MzQ4OQ==","user":{"login":"kennethmcfarland","id":29900332,"node_id":"MDQ6VXNlcjI5OTAwMzMy","avatar_url":"https://avatars.githubusercontent.com/u/29900332?v=4","gravatar_id":"","url":"https://api.github.com/users/kennethmcfarland","html_url":"https://github.com/kennethmcfarland","followers_url":"https://api.github.com/users/kennethmcfarland/followers","following_url":"https://api.github.com/users/kennethmcfarland/following{/other_user}","gists_url":"https://api.github.com/users/kennethmcfarland/gists{/gist_id}","starred_url":"https://api.github.com/users/kennethmcfarland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kennethmcfarland/subscriptions","organizations_url":"https://api.github.com/users/kennethmcfarland/orgs","repos_url":"https://api.github.com/users/kennethmcfarland/repos","events_url":"https://api.github.com/users/kennethmcfarland/events{/privacy}","received_events_url":"https://api.github.com/users/kennethmcfarland/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-22T22:19:29Z","updated_at":"2017-12-22T22:19:29Z","author_association":"CONTRIBUTOR","body":"Humble point: If the intent is to guard against overflow, it should be cast\nto long before any arithmetic happens. If arithmetic happens on ints and\nthey overflow and THEN are cast to long it isn't helpful.\n\nOn Fri, Dec 22, 2017 at 2:12 PM, Furkan KAMACI <notifications@github.com>\nwrote:\n\n> *@kamaci* commented on this pull request.\n> ------------------------------\n>\n> In modules/core/src/main/java/org/apache/fluo/core/worker/\n> NotificationProcessor.java\n> <https://github.com/apache/fluo/pull/987#discussion_r158563969>:\n>\n> > @@ -77,8 +77,8 @@ public Integer getValue() {\n>\n>      private long size(RowColumn rowCol) {\n>        Column col = rowCol.getColumn();\n> -      return rowCol.getRow().length() + col.getFamily().length() + col.getQualifier().length()\n> -          + col.getVisibility().length();\n> +      return (long) rowCol.getRow().length() + col.getFamily().length()\n>\n> @keith-turner <https://github.com/keith-turner> Exactly! Expression is\n> evaluated as int and than converted to long which may conclude with an\n> undesired result.\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/fluo/pull/987#discussion_r158563969>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/Acg-LJgqbmnpxTCaEHwgprUsTqdICdOLks5tDCk3gaJpZM4RLbnO>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353683489/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353684263","html_url":"https://github.com/apache/fluo/pull/987#issuecomment-353684263","issue_url":"https://api.github.com/repos/apache/fluo/issues/987","id":353684263,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzY4NDI2Mw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-22T22:26:33Z","updated_at":"2017-12-22T22:27:18Z","author_association":"CONTRIBUTOR","body":"This is neat.  I learned something new today.  I had never really thought about this.  It seems obvious now, the cast for the return type happens last.  I created a little program to try this out.\r\n\r\n```java\r\n public static int f1() {return 1<<30;}\r\n\r\n public static long f2() {return f1()+f1()+f1()+f1();}\r\n\r\n public static long f3() {return (long)f1()+f1()+f1()+f1();}\r\n\r\n public static void main(String[] args) {\r\n  System.out.println(f2());\r\n  System.out.println(f3());\r\n}\r\n```\r\n\r\nwhich prints\r\n\r\n```\r\n0\r\n4294967296\r\n```\r\n\r\nThe build failed, but I think its unrelated to this change I restarted the build.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353684263/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353685817","html_url":"https://github.com/apache/fluo/issues/798#issuecomment-353685817","issue_url":"https://api.github.com/repos/apache/fluo/issues/798","id":353685817,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzY4NTgxNw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-22T22:41:46Z","updated_at":"2017-12-22T22:41:46Z","author_association":"CONTRIBUTOR","body":"Saw this error again when building #987.\r\n\r\n```\r\ntestTransactorAndCache(org.apache.fluo.integration.impl.TransactorIT)  Time elapsed: 4.763 sec  <<< FAILURE!\r\njava.lang.AssertionError\r\n\tat org.apache.fluo.integration.impl.TransactorIT.testTransactorAndCache(TransactorIT.java:67)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353685817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353877844","html_url":"https://github.com/apache/fluo/issues/786#issuecomment-353877844","issue_url":"https://api.github.com/repos/apache/fluo/issues/786","id":353877844,"node_id":"MDEyOklzc3VlQ29tbWVudDM1Mzg3Nzg0NA==","user":{"login":"kennethmcfarland","id":29900332,"node_id":"MDQ6VXNlcjI5OTAwMzMy","avatar_url":"https://avatars.githubusercontent.com/u/29900332?v=4","gravatar_id":"","url":"https://api.github.com/users/kennethmcfarland","html_url":"https://github.com/kennethmcfarland","followers_url":"https://api.github.com/users/kennethmcfarland/followers","following_url":"https://api.github.com/users/kennethmcfarland/following{/other_user}","gists_url":"https://api.github.com/users/kennethmcfarland/gists{/gist_id}","starred_url":"https://api.github.com/users/kennethmcfarland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kennethmcfarland/subscriptions","organizations_url":"https://api.github.com/users/kennethmcfarland/orgs","repos_url":"https://api.github.com/users/kennethmcfarland/repos","events_url":"https://api.github.com/users/kennethmcfarland/events{/privacy}","received_events_url":"https://api.github.com/users/kennethmcfarland/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-25T16:05:54Z","updated_at":"2017-12-25T16:08:28Z","author_association":"CONTRIBUTOR","body":"I'd like to jump on this one, if that is cool @keith-turner This is line 371 from Oracle Client:\r\n          log.warn(\"Waiting for timestamp from Oracle. Is it running? waitTotal={}s waitPeriod={}s\",\r\n\r\nFirst there is a check to see if the timeout is positive (do we want to accept a value of 1?)\r\n\r\n      int timeout = env.getConfiguration().getConnectionRetryTimeout();\r\n      if (timeout < 0) {\r\n\r\nIn this block, if there is no positive value for the timeout, the values are assigned and an exponential backoff of 2^x is used until we have waited 60 seconds and then we warn out again\r\n\r\n      if (timeout < 0) {\r\n        long waitPeriod = 1;\r\n        long waitTotal = 0;\r\n        while (!tr.cdl.await(waitPeriod, TimeUnit.SECONDS)) {\r\n          checkClosed();\r\n          waitTotal += waitPeriod;\r\n          if (waitPeriod < MAX_ORACLE_WAIT_PERIOD) {\r\n            waitPeriod *= 2;\r\n          }\r\n          log.warn(\"Waiting for timestamp from Oracle. Is it running? waitTotal={}s waitPeriod={}s\",\r\n              waitTotal, waitPeriod);\r\n\r\nNow if there was a good positive value from the Config then we bypass the exponential back off and go here, wait one time, and complete. All of these are using count down latch functions to wait (just to show understanding of code).\r\n\r\n      } else if (!tr.cdl.await(timeout, TimeUnit.MILLISECONDS)) {\r\n        throw new FluoException(\"Timed out (after \" + timeout\r\n            + \"ms) trying to retrieve timestamp from Oracle.  Is the Oracle running?\");\r\n      }\r\n\r\nIf that is correct, I can update the getStamp() documentation as a seperate issue if needed, and tackle this one. Thanks @keith-turner talk to you next week sometime!\r\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353877844/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353878258","html_url":"https://github.com/apache/fluo/issues/786#issuecomment-353878258","issue_url":"https://api.github.com/repos/apache/fluo/issues/786","id":353878258,"node_id":"MDEyOklzc3VlQ29tbWVudDM1Mzg3ODI1OA==","user":{"login":"kennethmcfarland","id":29900332,"node_id":"MDQ6VXNlcjI5OTAwMzMy","avatar_url":"https://avatars.githubusercontent.com/u/29900332?v=4","gravatar_id":"","url":"https://api.github.com/users/kennethmcfarland","html_url":"https://github.com/kennethmcfarland","followers_url":"https://api.github.com/users/kennethmcfarland/followers","following_url":"https://api.github.com/users/kennethmcfarland/following{/other_user}","gists_url":"https://api.github.com/users/kennethmcfarland/gists{/gist_id}","starred_url":"https://api.github.com/users/kennethmcfarland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kennethmcfarland/subscriptions","organizations_url":"https://api.github.com/users/kennethmcfarland/orgs","repos_url":"https://api.github.com/users/kennethmcfarland/repos","events_url":"https://api.github.com/users/kennethmcfarland/events{/privacy}","received_events_url":"https://api.github.com/users/kennethmcfarland/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-25T16:14:14Z","updated_at":"2017-12-25T16:14:14Z","author_association":"CONTRIBUTOR","body":"To answer the posters question and give a clear explanation of the log message is as follows:\r\n\r\n1) wait total corresponds to the total time waited for this stamp.\r\n2) wait period corresponds to the amount of time to wait before we check the state of the count down latch again.\r\n\r\nNote: the user is not made aware of the actual timeout value, just the total time they have waited and how long each wait interval is in between checking the latch","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353878258/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353903724","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-353903724","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":353903724,"node_id":"MDEyOklzc3VlQ29tbWVudDM1MzkwMzcyNA==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-26T02:01:08Z","updated_at":"2017-12-26T02:01:08Z","author_association":"CONTRIBUTOR","body":"Hey, I haven't really been able to work on this because of the holidays/holiday preparation. I hope to start up on it again soon though.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353903724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353971646","html_url":"https://github.com/apache/fluo/issues/786#issuecomment-353971646","issue_url":"https://api.github.com/repos/apache/fluo/issues/786","id":353971646,"node_id":"MDEyOklzc3VlQ29tbWVudDM1Mzk3MTY0Ng==","user":{"login":"mikewalch","id":730698,"node_id":"MDQ6VXNlcjczMDY5OA==","avatar_url":"https://avatars.githubusercontent.com/u/730698?v=4","gravatar_id":"","url":"https://api.github.com/users/mikewalch","html_url":"https://github.com/mikewalch","followers_url":"https://api.github.com/users/mikewalch/followers","following_url":"https://api.github.com/users/mikewalch/following{/other_user}","gists_url":"https://api.github.com/users/mikewalch/gists{/gist_id}","starred_url":"https://api.github.com/users/mikewalch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikewalch/subscriptions","organizations_url":"https://api.github.com/users/mikewalch/orgs","repos_url":"https://api.github.com/users/mikewalch/repos","events_url":"https://api.github.com/users/mikewalch/events{/privacy}","received_events_url":"https://api.github.com/users/mikewalch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-26T13:58:07Z","updated_at":"2017-12-26T13:58:35Z","author_association":"MEMBER","body":"@kpm1985, nice break down of the code. Any updates to the documentation would be great but I think the issue was the log message.  You could update the message to something like below:\r\n\r\n```\r\n2016-10-05 22:22:37,023 [oracle.OracleClient] WARN : Waiting for timestamp from Oracle. Is it running? Client has a waited a total of 1s and will retry again in 2s","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/353971646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354002897","html_url":"https://github.com/apache/fluo/pull/989#issuecomment-354002897","issue_url":"https://api.github.com/repos/apache/fluo/issues/989","id":354002897,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDAwMjg5Nw==","user":{"login":"kennethmcfarland","id":29900332,"node_id":"MDQ6VXNlcjI5OTAwMzMy","avatar_url":"https://avatars.githubusercontent.com/u/29900332?v=4","gravatar_id":"","url":"https://api.github.com/users/kennethmcfarland","html_url":"https://github.com/kennethmcfarland","followers_url":"https://api.github.com/users/kennethmcfarland/followers","following_url":"https://api.github.com/users/kennethmcfarland/following{/other_user}","gists_url":"https://api.github.com/users/kennethmcfarland/gists{/gist_id}","starred_url":"https://api.github.com/users/kennethmcfarland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kennethmcfarland/subscriptions","organizations_url":"https://api.github.com/users/kennethmcfarland/orgs","repos_url":"https://api.github.com/users/kennethmcfarland/repos","events_url":"https://api.github.com/users/kennethmcfarland/events{/privacy}","received_events_url":"https://api.github.com/users/kennethmcfarland/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-26T19:16:10Z","updated_at":"2017-12-26T19:16:10Z","author_association":"CONTRIBUTOR","body":"Thank you for the catch! Dyslexic mistake for sure. Just opened a corrected\nPR.\n\nOn Dec 26, 2017 10:35 AM, \"Mike Walch\" <notifications@github.com> wrote:\n\n> *@mikewalch* requested changes on this pull request.\n>\n> Code change looks good to me but the issue number should be #786\n> <https://github.com/apache/fluo/issues/786>\n>\n> This isn't required but I think it's a nice practice. If you use 'Closes\n> #786 <https://github.com/apache/fluo/issues/786>' or 'Fixes #786\n> <https://github.com/apache/fluo/issues/786>' in commit messages rather\n> than 'FLUO-786' the '#786 <https://github.com/apache/fluo/issues/786>'\n> becomes a link to the issue and the issue will be closed automatically by\n> GitHub when the commit gets into the master branch.\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/fluo/pull/989#pullrequestreview-85579615>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/Acg-LPkXU4ES8JjjT2I9siwI96PR3gPgks5tETyGgaJpZM4RM7PI>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354002897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354486174","html_url":"https://github.com/apache/fluo/issues/993#issuecomment-354486174","issue_url":"https://api.github.com/repos/apache/fluo/issues/993","id":354486174,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDQ4NjE3NA==","user":{"login":"blueshift-brasil","id":34691570,"node_id":"MDQ6VXNlcjM0NjkxNTcw","avatar_url":"https://avatars.githubusercontent.com/u/34691570?v=4","gravatar_id":"","url":"https://api.github.com/users/blueshift-brasil","html_url":"https://github.com/blueshift-brasil","followers_url":"https://api.github.com/users/blueshift-brasil/followers","following_url":"https://api.github.com/users/blueshift-brasil/following{/other_user}","gists_url":"https://api.github.com/users/blueshift-brasil/gists{/gist_id}","starred_url":"https://api.github.com/users/blueshift-brasil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blueshift-brasil/subscriptions","organizations_url":"https://api.github.com/users/blueshift-brasil/orgs","repos_url":"https://api.github.com/users/blueshift-brasil/repos","events_url":"https://api.github.com/users/blueshift-brasil/events{/privacy}","received_events_url":"https://api.github.com/users/blueshift-brasil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-29T18:56:21Z","updated_at":"2017-12-29T18:56:21Z","author_association":"CONTRIBUTOR","body":"In Apache Camel project they use an util class called URISupport to obfuscate sensitive data from URL's.\r\n```java\r\npublic static String sanitizeUri(String uri) {\r\n    // use xxxxx as replacement as that works well with JMX also\r\n    String sanitized = uri;\r\n    if (uri != null) {\r\n        sanitized = SECRETS.matcher(sanitized).replaceAll(\"$1=xxxxxx\");\r\n        sanitized = USERINFO_PASSWORD.matcher(sanitized).replaceFirst(\"$1xxxxxx$3\");\r\n    }\r\n    return sanitized;\r\n}\r\n\r\npublic void testSanitizeUriWithUserInfo() {\r\n    String uri = \"jt400://GEORGE:HARRISON@LIVERPOOL/QSYS.LIB/BEATLES.LIB/PENNYLANE.DTAQ\";\r\n    String expected = \"jt400://GEORGE:xxxxxx@LIVERPOOL/QSYS.LIB/BEATLES.LIB/PENNYLANE.DTAQ\";\r\n    assertEquals(expected, URISupport.sanitizeUri(uri));\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354486174/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354523513","html_url":"https://github.com/apache/fluo/issues/991#issuecomment-354523513","issue_url":"https://api.github.com/repos/apache/fluo/issues/991","id":354523513,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDUyMzUxMw==","user":{"login":"blueshift-brasil","id":34691570,"node_id":"MDQ6VXNlcjM0NjkxNTcw","avatar_url":"https://avatars.githubusercontent.com/u/34691570?v=4","gravatar_id":"","url":"https://api.github.com/users/blueshift-brasil","html_url":"https://github.com/blueshift-brasil","followers_url":"https://api.github.com/users/blueshift-brasil/followers","following_url":"https://api.github.com/users/blueshift-brasil/following{/other_user}","gists_url":"https://api.github.com/users/blueshift-brasil/gists{/gist_id}","starred_url":"https://api.github.com/users/blueshift-brasil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blueshift-brasil/subscriptions","organizations_url":"https://api.github.com/users/blueshift-brasil/orgs","repos_url":"https://api.github.com/users/blueshift-brasil/repos","events_url":"https://api.github.com/users/blueshift-brasil/events{/privacy}","received_events_url":"https://api.github.com/users/blueshift-brasil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-30T02:51:01Z","updated_at":"2017-12-30T02:51:20Z","author_association":"CONTRIBUTOR","body":"I started to implement this doing the same thing the _init -f_ does but without the init part. \r\nBut I was wondering what happen if I remove the tables and the zookeeper data without stop the oracle and the workers before. Maybe apply the same validation of the _init_ command:\r\n\r\n```java\r\nif (admin.applicationRunning()) {\r\n    System.err.println(\"Error - The Fluo '\" + config.getApplicationName() + \"' application\"\r\n        + \" is already running and must be stopped before running 'fluo init'. \"\r\n        + \" Aborted initialization.\");\r\n    System.exit(-1);\r\n}\r\n```\r\n\r\nOR we could store the PID of the workers and oracle in a file like .[APP_NAME]_**woker01**.pid, .[APP_NAME]_**worker02**.pid, APP_NAME]_**oracle01**.pid.... and when a remove command it is called if a **--force** flag we could find and kill this processes too.\r\n\r\nAnd... If we have the PID files we could implement commands like:\r\n```shell\r\nfluo worker -a myapp -k\r\nfluo oracle -a myapp -k\r\n```\r\nAND \r\n```shell\r\nfluo worker -a myapp --kill\r\nfluo oracle -a myapp --kill\r\n```","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354523513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354523750","html_url":"https://github.com/apache/fluo/issues/983#issuecomment-354523750","issue_url":"https://api.github.com/repos/apache/fluo/issues/983","id":354523750,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDUyMzc1MA==","user":{"login":"blueshift-brasil","id":34691570,"node_id":"MDQ6VXNlcjM0NjkxNTcw","avatar_url":"https://avatars.githubusercontent.com/u/34691570?v=4","gravatar_id":"","url":"https://api.github.com/users/blueshift-brasil","html_url":"https://github.com/blueshift-brasil","followers_url":"https://api.github.com/users/blueshift-brasil/followers","following_url":"https://api.github.com/users/blueshift-brasil/following{/other_user}","gists_url":"https://api.github.com/users/blueshift-brasil/gists{/gist_id}","starred_url":"https://api.github.com/users/blueshift-brasil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blueshift-brasil/subscriptions","organizations_url":"https://api.github.com/users/blueshift-brasil/orgs","repos_url":"https://api.github.com/users/blueshift-brasil/repos","events_url":"https://api.github.com/users/blueshift-brasil/events{/privacy}","received_events_url":"https://api.github.com/users/blueshift-brasil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-30T02:58:43Z","updated_at":"2017-12-30T02:58:43Z","author_association":"CONTRIBUTOR","body":"What if the command module were implemented like a command pattern (http://www.oodesign.com/command-pattern.html). We could reuse the commands in API's, UI and so on...","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354523750/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354524230","html_url":"https://github.com/apache/fluo/issues/991#issuecomment-354524230","issue_url":"https://api.github.com/repos/apache/fluo/issues/991","id":354524230,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDUyNDIzMA==","user":{"login":"mikewalch","id":730698,"node_id":"MDQ6VXNlcjczMDY5OA==","avatar_url":"https://avatars.githubusercontent.com/u/730698?v=4","gravatar_id":"","url":"https://api.github.com/users/mikewalch","html_url":"https://github.com/mikewalch","followers_url":"https://api.github.com/users/mikewalch/followers","following_url":"https://api.github.com/users/mikewalch/following{/other_user}","gists_url":"https://api.github.com/users/mikewalch/gists{/gist_id}","starred_url":"https://api.github.com/users/mikewalch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikewalch/subscriptions","organizations_url":"https://api.github.com/users/mikewalch/orgs","repos_url":"https://api.github.com/users/mikewalch/repos","events_url":"https://api.github.com/users/mikewalch/events{/privacy}","received_events_url":"https://api.github.com/users/mikewalch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-30T03:11:15Z","updated_at":"2017-12-30T03:11:15Z","author_association":"MEMBER","body":"I think the first option is the best. You should check to see if the application is running and abort if it is. I was thinking the `remove` command was only run once from one node (like the `init` command). It just cleans up metadata in Zookeeper and drops the Accumulo table.  Stopping processes is tricky as they could be running locally, in YARN, Marathon, or Kubernetes.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354524230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354525884","html_url":"https://github.com/apache/fluo/issues/991#issuecomment-354525884","issue_url":"https://api.github.com/repos/apache/fluo/issues/991","id":354525884,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDUyNTg4NA==","user":{"login":"kennethmcfarland","id":29900332,"node_id":"MDQ6VXNlcjI5OTAwMzMy","avatar_url":"https://avatars.githubusercontent.com/u/29900332?v=4","gravatar_id":"","url":"https://api.github.com/users/kennethmcfarland","html_url":"https://github.com/kennethmcfarland","followers_url":"https://api.github.com/users/kennethmcfarland/followers","following_url":"https://api.github.com/users/kennethmcfarland/following{/other_user}","gists_url":"https://api.github.com/users/kennethmcfarland/gists{/gist_id}","starred_url":"https://api.github.com/users/kennethmcfarland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kennethmcfarland/subscriptions","organizations_url":"https://api.github.com/users/kennethmcfarland/orgs","repos_url":"https://api.github.com/users/kennethmcfarland/repos","events_url":"https://api.github.com/users/kennethmcfarland/events{/privacy}","received_events_url":"https://api.github.com/users/kennethmcfarland/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-12-30T04:02:27Z","updated_at":"2017-12-30T04:02:27Z","author_association":"CONTRIBUTOR","body":"This issue is the same as #529 from what I can tell. ","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354525884/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354652587","html_url":"https://github.com/apache/fluo/pull/988#issuecomment-354652587","issue_url":"https://api.github.com/repos/apache/fluo/issues/988","id":354652587,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDY1MjU4Nw==","user":{"login":"kamaci","id":3921885,"node_id":"MDQ6VXNlcjM5MjE4ODU=","avatar_url":"https://avatars.githubusercontent.com/u/3921885?v=4","gravatar_id":"","url":"https://api.github.com/users/kamaci","html_url":"https://github.com/kamaci","followers_url":"https://api.github.com/users/kamaci/followers","following_url":"https://api.github.com/users/kamaci/following{/other_user}","gists_url":"https://api.github.com/users/kamaci/gists{/gist_id}","starred_url":"https://api.github.com/users/kamaci/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kamaci/subscriptions","organizations_url":"https://api.github.com/users/kamaci/orgs","repos_url":"https://api.github.com/users/kamaci/repos","events_url":"https://api.github.com/users/kamaci/events{/privacy}","received_events_url":"https://api.github.com/users/kamaci/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-01T13:09:57Z","updated_at":"2018-01-01T13:09:57Z","author_association":"MEMBER","body":"@mikewalch Could you check it again?","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354652587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354797188","html_url":"https://github.com/apache/fluo/issues/994#issuecomment-354797188","issue_url":"https://api.github.com/repos/apache/fluo/issues/994","id":354797188,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDc5NzE4OA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-02T15:52:08Z","updated_at":"2018-01-02T15:52:08Z","author_association":"CONTRIBUTOR","body":"It would be nice if this were implemented in such a way that properties stored in zookeeper could also be encrypted.  The changes for #893 enabled securing the info in zookeeper with a password, but its not encrypted.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354797188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354870822","html_url":"https://github.com/apache/fluo/pull/995#issuecomment-354870822","issue_url":"https://api.github.com/repos/apache/fluo/issues/995","id":354870822,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDg3MDgyMg==","user":{"login":"kennethmcfarland","id":29900332,"node_id":"MDQ6VXNlcjI5OTAwMzMy","avatar_url":"https://avatars.githubusercontent.com/u/29900332?v=4","gravatar_id":"","url":"https://api.github.com/users/kennethmcfarland","html_url":"https://github.com/kennethmcfarland","followers_url":"https://api.github.com/users/kennethmcfarland/followers","following_url":"https://api.github.com/users/kennethmcfarland/following{/other_user}","gists_url":"https://api.github.com/users/kennethmcfarland/gists{/gist_id}","starred_url":"https://api.github.com/users/kennethmcfarland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kennethmcfarland/subscriptions","organizations_url":"https://api.github.com/users/kennethmcfarland/orgs","repos_url":"https://api.github.com/users/kennethmcfarland/repos","events_url":"https://api.github.com/users/kennethmcfarland/events{/privacy}","received_events_url":"https://api.github.com/users/kennethmcfarland/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-02T20:45:37Z","updated_at":"2018-01-02T20:45:37Z","author_association":"CONTRIBUTOR","body":"@mikewalch nice eye catching the lysdexic mistakes lately, glad I'm not the\nonly one now!\n\nOn Jan 2, 2018 9:10 AM, \"Keith Turner\" <notifications@github.com> wrote:\n\n> *@keith-turner* commented on this pull request.\n> ------------------------------\n>\n> In modules/core/pom.xml\n> <https://github.com/apache/fluo/pull/995#discussion_r159270029>:\n>\n> > +        <artifactId>maven-shade-plugin</artifactId>\n> +        <executions>\n> +          <execution>\n> +            <goals>\n> +              <goal>shade</goal>\n> +            </goals>\n> +            <phase>package</phase>\n> +            <configuration>\n> +              <minimizeJar>true</minimizeJar>\n> +              <artifactSet>\n> +                <includes>\n> +                  <include>org.apache.thrift:libthrift</include>\n> +                </includes>\n> +              </artifactSet>\n> +              <shadedArtifactAttached>true</shadedArtifactAttached>\n> +              <shadedClassifierName>shaded</shadedClassifierName>\n>\n> I also think it would be best to modify the original jar instead of create\n> a separate shaded jar.\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/fluo/pull/995#discussion_r159270029>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/Acg-LMGxpkaots9siyyHv8X6QZgmx-Xkks5tGmLvgaJpZM4RPyG3>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354870822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354881422","html_url":"https://github.com/apache/fluo/pull/995#issuecomment-354881422","issue_url":"https://api.github.com/repos/apache/fluo/issues/995","id":354881422,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDg4MTQyMg==","user":{"login":"mikewalch","id":730698,"node_id":"MDQ6VXNlcjczMDY5OA==","avatar_url":"https://avatars.githubusercontent.com/u/730698?v=4","gravatar_id":"","url":"https://api.github.com/users/mikewalch","html_url":"https://github.com/mikewalch","followers_url":"https://api.github.com/users/mikewalch/followers","following_url":"https://api.github.com/users/mikewalch/following{/other_user}","gists_url":"https://api.github.com/users/mikewalch/gists{/gist_id}","starred_url":"https://api.github.com/users/mikewalch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikewalch/subscriptions","organizations_url":"https://api.github.com/users/mikewalch/orgs","repos_url":"https://api.github.com/users/mikewalch/repos","events_url":"https://api.github.com/users/mikewalch/events{/privacy}","received_events_url":"https://api.github.com/users/mikewalch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-02T21:36:01Z","updated_at":"2018-01-02T21:36:01Z","author_association":"MEMBER","body":"@kpm1985, I guess I am the only one that clicks on the issue number in commit to read the issue ;-) :1st_place_medal: ","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354881422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354912291","html_url":"https://github.com/apache/fluo/pull/996#issuecomment-354912291","issue_url":"https://api.github.com/repos/apache/fluo/issues/996","id":354912291,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDkxMjI5MQ==","user":{"login":"kamaci","id":3921885,"node_id":"MDQ6VXNlcjM5MjE4ODU=","avatar_url":"https://avatars.githubusercontent.com/u/3921885?v=4","gravatar_id":"","url":"https://api.github.com/users/kamaci","html_url":"https://github.com/kamaci","followers_url":"https://api.github.com/users/kamaci/followers","following_url":"https://api.github.com/users/kamaci/following{/other_user}","gists_url":"https://api.github.com/users/kamaci/gists{/gist_id}","starred_url":"https://api.github.com/users/kamaci/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kamaci/subscriptions","organizations_url":"https://api.github.com/users/kamaci/orgs","repos_url":"https://api.github.com/users/kamaci/repos","events_url":"https://api.github.com/users/kamaci/events{/privacy}","received_events_url":"https://api.github.com/users/kamaci/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T00:30:26Z","updated_at":"2018-01-03T00:30:26Z","author_association":"MEMBER","body":"I'm closing this PR and opening a new one.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354912291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354958751","html_url":"https://github.com/apache/fluo/pull/996#issuecomment-354958751","issue_url":"https://api.github.com/repos/apache/fluo/issues/996","id":354958751,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDk1ODc1MQ==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T08:31:08Z","updated_at":"2018-01-03T08:31:08Z","author_association":"MEMBER","body":"@kamaci Next time, please just update the current PR by pushing to your branch. Creating a separate PR makes it difficult to follow review comments and code changes as a result of review feedback.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354958751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354958803","html_url":"https://github.com/apache/fluo/pull/997#issuecomment-354958803","issue_url":"https://api.github.com/repos/apache/fluo/issues/997","id":354958803,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NDk1ODgwMw==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T08:31:26Z","updated_at":"2018-01-03T08:31:26Z","author_association":"MEMBER","body":"This PR replaces #996 ","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/354958803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/355066495","html_url":"https://github.com/apache/fluo/issues/992#issuecomment-355066495","issue_url":"https://api.github.com/repos/apache/fluo/issues/992","id":355066495,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NTA2NjQ5NQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-03T17:05:33Z","updated_at":"2018-01-03T17:05:33Z","author_association":"CONTRIBUTOR","body":"I was able to confirm that NotificationTracker.requeue() not being synchronized while accessing a hashmap caused the problem.  \r\n\r\nI suspected when `contains()` is called on the hashmap outside of sync that it could return false even though the map does contain it.  This could happen if another thread is rehashing the map.  I wrote a stand alone test with two threads and a hashmap to confirm this.  One thread would constantly call `contains()` for a key known to be in the map while another thread was constantly inserting data.  Sometimes the `contains()` call would return false even though the map contained the key.\r\n\r\nI patched the code in the following way and ran the stress test until the bug happened again.\r\n\r\n```patch\r\ndiff --git a/modules/core/src/main/java/org/apache/fluo/core/worker/NotificationProcessor.java b/modules/core/src/main/java/org/apache/fluo/core/worker/NotificationProcessor.java\r\nindex 9466933..29c42d6 100644\r\n--- a/modules/core/src/main/java/org/apache/fluo/core/worker/NotificationProcessor.java\r\n+++ b/modules/core/src/main/java/org/apache/fluo/core/worker/NotificationProcessor.java\r\n@@ -126,6 +126,7 @@ public class NotificationProcessor implements AutoCloseable {\r\n \r\n     public boolean requeue(RowColumn rowCol, FutureTask<?> ft) {\r\n       if (!queuedWork.containsKey(rowCol)) {\r\n+        log.debug(\"queuedWork did not contain \" + rowCol + \" not requeuing\");\r\n         return false;\r\n       }\r\n```\r\n\r\nI enabled debug logging and the ran the stress test over and over until the bug happened again.  After it got stuck I saw the following the logs.\r\n\r\n```\r\n$ grep NotificationProcessor *.log\r\nworker1.log:2018-01-03 15:44:37,835 [worker.NotificationProcessor] DEBUG: queuedWork did not contain 07:5d43:08:000000000cc4be00 count wait  not requeuing\r\nworker2.log:2018-01-03 15:44:05,432 [worker.NotificationProcessor] DEBUG: queuedWork did not contain 07:flrf:08:0000000024477200 count wait  not requeuing\r\n```\r\n\r\nThe two notifications above are present in the table, but never being processing by the workers.\r\n\r\n```\r\n$ accumulo shell -u root -p secret -e 'compact -t stresso -w'\r\n$ fluo scan -a stresso --raw -c ntfy\r\n07:5d43:08:000000000cc4be00 ntfy:count:wait [] 822968-INSERT\t\r\n07:flrf:08:0000000024477200 ntfy:count:wait [] 8796731-INSERT\t\r\n```\r\n\r\nI confirmed these notifications were present in the workers processes `queuedWork` hashmaps by taking heap dumps.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/355066495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357104670","html_url":"https://github.com/apache/fluo/pull/999#issuecomment-357104670","issue_url":"https://api.github.com/repos/apache/fluo/issues/999","id":357104670,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NzEwNDY3MA==","user":{"login":"blueshift-brasil","id":34691570,"node_id":"MDQ6VXNlcjM0NjkxNTcw","avatar_url":"https://avatars.githubusercontent.com/u/34691570?v=4","gravatar_id":"","url":"https://api.github.com/users/blueshift-brasil","html_url":"https://github.com/blueshift-brasil","followers_url":"https://api.github.com/users/blueshift-brasil/followers","following_url":"https://api.github.com/users/blueshift-brasil/following{/other_user}","gists_url":"https://api.github.com/users/blueshift-brasil/gists{/gist_id}","starred_url":"https://api.github.com/users/blueshift-brasil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blueshift-brasil/subscriptions","organizations_url":"https://api.github.com/users/blueshift-brasil/orgs","repos_url":"https://api.github.com/users/blueshift-brasil/repos","events_url":"https://api.github.com/users/blueshift-brasil/events{/privacy}","received_events_url":"https://api.github.com/users/blueshift-brasil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-12T00:19:34Z","updated_at":"2018-01-12T00:19:34Z","author_association":"CONTRIBUTOR","body":"This way it is simpler indeed. Thank you!!!","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357104670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357398391","html_url":"https://github.com/apache/fluo/issues/1000#issuecomment-357398391","issue_url":"https://api.github.com/repos/apache/fluo/issues/1000","id":357398391,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NzM5ODM5MQ==","user":{"login":"kennethmcfarland","id":29900332,"node_id":"MDQ6VXNlcjI5OTAwMzMy","avatar_url":"https://avatars.githubusercontent.com/u/29900332?v=4","gravatar_id":"","url":"https://api.github.com/users/kennethmcfarland","html_url":"https://github.com/kennethmcfarland","followers_url":"https://api.github.com/users/kennethmcfarland/followers","following_url":"https://api.github.com/users/kennethmcfarland/following{/other_user}","gists_url":"https://api.github.com/users/kennethmcfarland/gists{/gist_id}","starred_url":"https://api.github.com/users/kennethmcfarland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kennethmcfarland/subscriptions","organizations_url":"https://api.github.com/users/kennethmcfarland/orgs","repos_url":"https://api.github.com/users/kennethmcfarland/repos","events_url":"https://api.github.com/users/kennethmcfarland/events{/privacy}","received_events_url":"https://api.github.com/users/kennethmcfarland/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-13T01:24:02Z","updated_at":"2018-01-13T01:24:02Z","author_association":"CONTRIBUTOR","body":"I've pushed and reset a few times on this branch, this has been good experience to expand and learn a little more about git.\r\n\r\nAnyways, with these modest changes, the only errors that are appearing during mvn verify are in Thrift or something I don't have forked/cloned. The first change sleeps on the state of the curator framework, the second sleeps on isLeader. Basically Fluo gets a chill pill and waits for things to finish and for some reason this has the effect of disappearing the error messages. \r\n\r\nI'm doing further reading and getting to learn more about ZooKeeper and Curator so I can do a better job at this but this is a first analysis. \r\n\r\nhttps://github.com/kpm1985/fluo/tree/CuratorErrors","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357398391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357403176","html_url":"https://github.com/apache/fluo/issues/1000#issuecomment-357403176","issue_url":"https://api.github.com/repos/apache/fluo/issues/1000","id":357403176,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NzQwMzE3Ng==","user":{"login":"mikewalch","id":730698,"node_id":"MDQ6VXNlcjczMDY5OA==","avatar_url":"https://avatars.githubusercontent.com/u/730698?v=4","gravatar_id":"","url":"https://api.github.com/users/mikewalch","html_url":"https://github.com/mikewalch","followers_url":"https://api.github.com/users/mikewalch/followers","following_url":"https://api.github.com/users/mikewalch/following{/other_user}","gists_url":"https://api.github.com/users/mikewalch/gists{/gist_id}","starred_url":"https://api.github.com/users/mikewalch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikewalch/subscriptions","organizations_url":"https://api.github.com/users/mikewalch/orgs","repos_url":"https://api.github.com/users/mikewalch/repos","events_url":"https://api.github.com/users/mikewalch/events{/privacy}","received_events_url":"https://api.github.com/users/mikewalch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-13T02:28:16Z","updated_at":"2018-01-13T02:28:16Z","author_association":"MEMBER","body":"It would be awesome to reduce some of our random test failures.  It looks like you are the right track as I bet most of the failures are timing related.   However, the code you are working is definitely tricky. We need to make sure there is no adverse effects with adding sleeps/delays.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357403176/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357456744","html_url":"https://github.com/apache/fluo/issues/1000#issuecomment-357456744","issue_url":"https://api.github.com/repos/apache/fluo/issues/1000","id":357456744,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NzQ1Njc0NA==","user":{"login":"kennethmcfarland","id":29900332,"node_id":"MDQ6VXNlcjI5OTAwMzMy","avatar_url":"https://avatars.githubusercontent.com/u/29900332?v=4","gravatar_id":"","url":"https://api.github.com/users/kennethmcfarland","html_url":"https://github.com/kennethmcfarland","followers_url":"https://api.github.com/users/kennethmcfarland/followers","following_url":"https://api.github.com/users/kennethmcfarland/following{/other_user}","gists_url":"https://api.github.com/users/kennethmcfarland/gists{/gist_id}","starred_url":"https://api.github.com/users/kennethmcfarland/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kennethmcfarland/subscriptions","organizations_url":"https://api.github.com/users/kennethmcfarland/orgs","repos_url":"https://api.github.com/users/kennethmcfarland/repos","events_url":"https://api.github.com/users/kennethmcfarland/events{/privacy}","received_events_url":"https://api.github.com/users/kennethmcfarland/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-13T18:40:18Z","updated_at":"2018-01-13T18:41:47Z","author_association":"CONTRIBUTOR","body":"@keith-turner Recommended looking at CuratorFramework.blockUntilConnected which I just finished trying out and it works also. This is the change to the OracleServer.takeLeadership method before the call to getData that is fluently styled right after. \r\n\r\nI've dropped changes to the other method that was throwing exceptions, OracleServer.getTimestampImpl until I understand it better. I also put this in a serious branch on my local repo.\r\n\r\nhttps://github.com/kpm1985/fluo/tree/FLUO-1000","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357456744/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357482754","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-357482754","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":357482754,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NzQ4Mjc1NA==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-14T02:02:17Z","updated_at":"2018-01-14T02:02:17Z","author_association":"CONTRIBUTOR","body":"Hey sorry, so I got really distracted and took a bit of a hiatus. But I took a look at it this weekend and went through a first pass at filling it in, [TransactionImpl](https://github.com/jkosh44/fluo/blob/issue-978-keith/modules/core/src/main/java/org/apache/fluo/core/impl/TransactionImpl.java). It's currently failing a lot of tests but surprisingly passing a lot too. I'm going to look at it some more tomorrow, but I just wanted to post this since I haven't posted in awhile.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357482754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357830449","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-357830449","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":357830449,"node_id":"MDEyOklzc3VlQ29tbWVudDM1NzgzMDQ0OQ==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-16T01:51:03Z","updated_at":"2018-01-16T02:48:58Z","author_association":"CONTRIBUTOR","body":"Ok so I created a pull request, #1001. It's not passing every test but it only seems to be failing 3 tests.Those three test are all from `FailureIT` and it's because `TransactionImpl.commitPrimaryColumn(CommitData cd, Stamp commitStamp)` isn't returning false when it's supposed to. I'm pretty sure it's how I implemented exception handling, if a `CommitException` is thrown it's somehow not propagated back up to `commitPrimaryColumn`. I'm going to look at it some more but I though maybe a fresh set of eyes would be helpful.\r\n\r\nIn general the way I dealt with the Visible For Testing methods were as follows.  I would create a first step as whatever intermediate step that testing method was starting at, fill in the rest of the steps using `andThen`, and then call compose. In the appropriate step classes themselves in `getMainOp` i would check if `stopAfterPrimaryCommit` or `stopAfterPreCommit` were true and if so I would return false. Then in `getFailureOp` if `stopAfterPrimaryCommit` or `stopAfter'PreCommit` were true I'd just call `cd.commitObserver.committed();` It's not super clean in that Essentially I'd be saying the operation failed if those test values were true even though technically they didn't fail. I wasn't sure of a cleaner solution but though this was a good first approach.\r\n\r\nEdit: right after typing this I just thought of a cleaner way. We wouldn't even need the two booleans if while filling in the next steps using `andThen` we stopped at the step we wanted to stop at. So for `commitPrimaryColumn` instead of \r\n```\r\nGetCommitStampStepTest firstStep = new GetCommitStampStepTest();\r\n      firstStep.setTestStamp(commitStamp);\r\n\r\n      firstStep.andThen(new WriteNotificationsStep()).andThen(new CommitPrimaryStep())\r\n          .andThen(new DeleteLocksStep()).andThen(new FinishCommitStep());\r\n\r\n      firstStep.compose(cd);\r\n```\r\nwe'd have \r\n```\r\nGetCommitStampStepTest firstStep = new GetCommitStampStepTest();\r\n      firstStep.setTestStamp(commitStamp);\r\n\r\n      firstStep.andThen(new WriteNotificationsStep()).andThen(new CommitPrimaryStep());\r\n\r\n      firstStep.compose(cd).thenAccept(v -> cd.commitObserver.committed());\r\n```","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357830449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357844455","html_url":"https://github.com/apache/fluo/issues/978#issuecomment-357844455","issue_url":"https://api.github.com/repos/apache/fluo/issues/978","id":357844455,"node_id":"MDEyOklzc3VlQ29tbWVudDM1Nzg0NDQ1NQ==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-16T03:30:04Z","updated_at":"2018-01-16T03:30:04Z","author_association":"CONTRIBUTOR","body":"Well that change seemed to have killed two birds with one stone, all tests pass now. I still want to refactor `preCommit(CommitData cd, RowColumn primary)` so it no longer uses `stopAfterPreCommit`.","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357844455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357844833","html_url":"https://github.com/apache/fluo/pull/1001#issuecomment-357844833","issue_url":"https://api.github.com/repos/apache/fluo/issues/1001","id":357844833,"node_id":"MDEyOklzc3VlQ29tbWVudDM1Nzg0NDgzMw==","user":{"login":"jkosh44","id":10800303,"node_id":"MDQ6VXNlcjEwODAwMzAz","avatar_url":"https://avatars.githubusercontent.com/u/10800303?v=4","gravatar_id":"","url":"https://api.github.com/users/jkosh44","html_url":"https://github.com/jkosh44","followers_url":"https://api.github.com/users/jkosh44/followers","following_url":"https://api.github.com/users/jkosh44/following{/other_user}","gists_url":"https://api.github.com/users/jkosh44/gists{/gist_id}","starred_url":"https://api.github.com/users/jkosh44/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jkosh44/subscriptions","organizations_url":"https://api.github.com/users/jkosh44/orgs","repos_url":"https://api.github.com/users/jkosh44/repos","events_url":"https://api.github.com/users/jkosh44/events{/privacy}","received_events_url":"https://api.github.com/users/jkosh44/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-16T03:33:13Z","updated_at":"2018-01-16T03:33:13Z","author_association":"CONTRIBUTOR","body":"Refer to #978 ","reactions":{"url":"https://api.github.com/repos/apache/fluo/issues/comments/357844833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]