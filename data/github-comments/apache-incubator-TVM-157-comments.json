[{"url":"https://api.github.com/repos/apache/tvm/issues/comments/577930418","html_url":"https://github.com/apache/tvm/pull/4769#issuecomment-577930418","issue_url":"https://api.github.com/repos/apache/tvm/issues/4769","id":577930418,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzkzMDQxOA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-23T23:45:20Z","updated_at":"2020-01-23T23:46:28Z","author_association":"MEMBER","body":"so tvm will finally compile itself :) didn't know self hosting is one of our goal","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/577930418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/577937448","html_url":"https://github.com/apache/tvm/pull/4772#issuecomment-577937448","issue_url":"https://api.github.com/repos/apache/tvm/issues/4772","id":577937448,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzkzNzQ0OA==","user":{"login":"alexgl-github","id":53275205,"node_id":"MDQ6VXNlcjUzMjc1MjA1","avatar_url":"https://avatars.githubusercontent.com/u/53275205?v=4","gravatar_id":"","url":"https://api.github.com/users/alexgl-github","html_url":"https://github.com/alexgl-github","followers_url":"https://api.github.com/users/alexgl-github/followers","following_url":"https://api.github.com/users/alexgl-github/following{/other_user}","gists_url":"https://api.github.com/users/alexgl-github/gists{/gist_id}","starred_url":"https://api.github.com/users/alexgl-github/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexgl-github/subscriptions","organizations_url":"https://api.github.com/users/alexgl-github/orgs","repos_url":"https://api.github.com/users/alexgl-github/repos","events_url":"https://api.github.com/users/alexgl-github/events{/privacy}","received_events_url":"https://api.github.com/users/alexgl-github/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T00:12:04Z","updated_at":"2020-01-24T00:12:04Z","author_association":"CONTRIBUTOR","body":"@optima2005 Would you mind reviewing?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/577937448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/577944754","html_url":"https://github.com/apache/tvm/pull/4769#issuecomment-577944754","issue_url":"https://api.github.com/repos/apache/tvm/issues/4769","id":577944754,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Nzk0NDc1NA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T00:43:28Z","updated_at":"2020-01-24T00:43:28Z","author_association":"MEMBER","body":"I am half joking but who knows, maybe we will get there","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/577944754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/577945839","html_url":"https://github.com/apache/tvm/pull/4768#issuecomment-577945839","issue_url":"https://api.github.com/repos/apache/tvm/issues/4768","id":577945839,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Nzk0NTgzOQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T00:48:30Z","updated_at":"2020-01-24T00:48:30Z","author_association":"MEMBER","body":"Thanks @hlu!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/577945839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/577985906","html_url":"https://github.com/apache/tvm/pull/4771#issuecomment-577985906","issue_url":"https://api.github.com/repos/apache/tvm/issues/4771","id":577985906,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Nzk4NTkwNg==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T04:26:07Z","updated_at":"2020-01-24T04:30:22Z","author_association":"MEMBER","body":"ok reading your original proposal carefully I understand that I can look up 'Composite' attribute to know if a particular function has a pattern I'm looking for. Of course I still need to traverse the arguments, but I can remove the \"detection\" logic from \"traversal\" logic in DetectFusedConv2DBiasReLU. \r\n\r\nIt seems I have to make only minimal change to make use of this feature in my PR. Also it enables removing my custom annotator. Sounds great!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/577985906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/577992188","html_url":"https://github.com/apache/tvm/pull/4773#issuecomment-577992188","issue_url":"https://api.github.com/repos/apache/tvm/issues/4773","id":577992188,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Nzk5MjE4OA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T05:02:01Z","updated_at":"2020-01-24T05:02:01Z","author_association":"MEMBER","body":"thanks @anijain2305 @vinx13 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/577992188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578011242","html_url":"https://github.com/apache/tvm/pull/4518#issuecomment-578011242","issue_url":"https://api.github.com/repos/apache/tvm/issues/4518","id":578011242,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODAxMTI0Mg==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T06:42:19Z","updated_at":"2020-01-24T06:42:19Z","author_association":"CONTRIBUTOR","body":"Thanks @optima2005 @inadob ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578011242/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578018262","html_url":"https://github.com/apache/tvm/pull/4368#issuecomment-578018262","issue_url":"https://api.github.com/repos/apache/tvm/issues/4368","id":578018262,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODAxODI2Mg==","user":{"login":"xliucs","id":19635856,"node_id":"MDQ6VXNlcjE5NjM1ODU2","avatar_url":"https://avatars.githubusercontent.com/u/19635856?v=4","gravatar_id":"","url":"https://api.github.com/users/xliucs","html_url":"https://github.com/xliucs","followers_url":"https://api.github.com/users/xliucs/followers","following_url":"https://api.github.com/users/xliucs/following{/other_user}","gists_url":"https://api.github.com/users/xliucs/gists{/gist_id}","starred_url":"https://api.github.com/users/xliucs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xliucs/subscriptions","organizations_url":"https://api.github.com/users/xliucs/orgs","repos_url":"https://api.github.com/users/xliucs/repos","events_url":"https://api.github.com/users/xliucs/events{/privacy}","received_events_url":"https://api.github.com/users/xliucs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T07:12:44Z","updated_at":"2020-01-24T07:12:44Z","author_association":"NONE","body":"@yzhliu Hi, I am having hard time to reproduce the results of mobile GPU. I am wondering did you test this PR w/ mobile gpu? Thanks!!!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578018262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578057856","html_url":"https://github.com/apache/tvm/pull/4771#issuecomment-578057856","issue_url":"https://api.github.com/repos/apache/tvm/issues/4771","id":578057856,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODA1Nzg1Ng==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T09:36:57Z","updated_at":"2020-01-24T09:41:57Z","author_association":"MEMBER","body":"ok I already have a working test case for detecting conv + bias + relu (Note the \"Composite\" attribute). Now I really want to hook this up with \"Compiler\" and \"ExternalSymbol\" attributes to enable codegen.\r\n\r\n```\r\ndef @main(%data: Tensor[(1, 3, 224, 224), float32]) -> Tensor[(1, 16, 224, 224), float32] {\r\n  %2 = fn (%data1: Tensor[(1, 3, 224, 224), float32], %weight: Tensor[(16, 3, 3, 3), float32], %bias: Tensor[(16, 1, 1), float32], Primitive=1, Composite=\"dnnl.conv_bias_relu\") -> Tensor[(1, 16, 224, 224), float32] {\r\n    %0 = nn.conv2d(%data1, %weight, padding=[1, 1], channels=16, kernel_size=[3, 3]) /* ty=Tensor[(1, 16, 224, 224), float32] */;\r\n    %1 = add(%0, %bias) /* ty=Tensor[(1, 16, 224, 224), float32] */;\r\n    nn.relu(%1) /* ty=Tensor[(1, 16, 224, 224), float32] */\r\n  };\r\n  %3 = %2(%data, meta[relay.Constant][0] /* ty=Tensor[(16, 3, 3, 3), float32] */ /* ty=Tensor[(16, 3, 3, 3), float32] */, meta[relay.Constant][1] /* ty=Tensor[(16, 1, 1), float32] */ /* ty=Tensor[(16, 1, 1), float32] */) /* ty=Tensor[(1, 16, 224, 224), float32] */;\r\n  %6 = fn (%data2: Tensor[(1, 16, 224, 224), float32], %weight1: Tensor[(16, 16, 3, 3), float32], %bias1: Tensor[(16, 1, 1), float32], Primitive=1, Composite=\"dnnl.conv_bias_relu\") -> Tensor[(1, 16, 224, 224), float32] {\r\n    %4 = nn.conv2d(%data2, %weight1, padding=[1, 1], channels=16, kernel_size=[3, 3]) /* ty=Tensor[(1, 16, 224, 224), float32] */;\r\n    %5 = add(%4, %bias1) /* ty=Tensor[(1, 16, 224, 224), float32] */;\r\n    nn.relu(%5) /* ty=Tensor[(1, 16, 224, 224), float32] */\r\n  };\r\n  %6(%3, meta[relay.Constant][2] /* ty=Tensor[(16, 16, 3, 3), float32] */ /* ty=Tensor[(16, 16, 3, 3), float32] */, meta[relay.Constant][3] /* ty=Tensor[(16, 1, 1), float32] */ /* ty=Tensor[(16, 1, 1), float32] */) /* ty=Tensor[(1, 16, 224, 224), float32] */\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578057856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578066583","html_url":"https://github.com/apache/tvm/pull/4771#issuecomment-578066583","issue_url":"https://api.github.com/repos/apache/tvm/issues/4771","id":578066583,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODA2NjU4Mw==","user":{"login":"mbaret","id":55580676,"node_id":"MDQ6VXNlcjU1NTgwNjc2","avatar_url":"https://avatars.githubusercontent.com/u/55580676?v=4","gravatar_id":"","url":"https://api.github.com/users/mbaret","html_url":"https://github.com/mbaret","followers_url":"https://api.github.com/users/mbaret/followers","following_url":"https://api.github.com/users/mbaret/following{/other_user}","gists_url":"https://api.github.com/users/mbaret/gists{/gist_id}","starred_url":"https://api.github.com/users/mbaret/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbaret/subscriptions","organizations_url":"https://api.github.com/users/mbaret/orgs","repos_url":"https://api.github.com/users/mbaret/repos","events_url":"https://api.github.com/users/mbaret/events{/privacy}","received_events_url":"https://api.github.com/users/mbaret/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T10:05:11Z","updated_at":"2020-01-24T10:05:11Z","author_association":"CONTRIBUTOR","body":"To hook it up end-to-end will, for now, require writing a custom annotation pass that can recognise composite functions and understand that they need to be treated in the same way as operators. I've got a generic pass that does this, but it builds on top of @zhiics annotation PR which has since been withdrawn. If we agree that this merge_composite pass is useful then I can discuss with zhiics how we want to move forward with the annotator.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578066583/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578102160","html_url":"https://github.com/apache/tvm/pull/4770#issuecomment-578102160","issue_url":"https://api.github.com/repos/apache/tvm/issues/4770","id":578102160,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODEwMjE2MA==","user":{"login":"pingsutw","id":37936015,"node_id":"MDQ6VXNlcjM3OTM2MDE1","avatar_url":"https://avatars.githubusercontent.com/u/37936015?v=4","gravatar_id":"","url":"https://api.github.com/users/pingsutw","html_url":"https://github.com/pingsutw","followers_url":"https://api.github.com/users/pingsutw/followers","following_url":"https://api.github.com/users/pingsutw/following{/other_user}","gists_url":"https://api.github.com/users/pingsutw/gists{/gist_id}","starred_url":"https://api.github.com/users/pingsutw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pingsutw/subscriptions","organizations_url":"https://api.github.com/users/pingsutw/orgs","repos_url":"https://api.github.com/users/pingsutw/repos","events_url":"https://api.github.com/users/pingsutw/events{/privacy}","received_events_url":"https://api.github.com/users/pingsutw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T11:58:23Z","updated_at":"2020-01-24T11:58:23Z","author_association":"MEMBER","body":"@tqchen, Thanks for the review","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578102160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578242837","html_url":"https://github.com/apache/tvm/pull/4368#issuecomment-578242837","issue_url":"https://api.github.com/repos/apache/tvm/issues/4368","id":578242837,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODI0MjgzNw==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T18:19:40Z","updated_at":"2020-01-24T18:19:40Z","author_association":"MEMBER","body":"not yet. did you run auto tvm tuning?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578242837/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578264862","html_url":"https://github.com/apache/tvm/pull/4747#issuecomment-578264862","issue_url":"https://api.github.com/repos/apache/tvm/issues/4747","id":578264862,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODI2NDg2Mg==","user":{"login":"yidawang","id":4458509,"node_id":"MDQ6VXNlcjQ0NTg1MDk=","avatar_url":"https://avatars.githubusercontent.com/u/4458509?v=4","gravatar_id":"","url":"https://api.github.com/users/yidawang","html_url":"https://github.com/yidawang","followers_url":"https://api.github.com/users/yidawang/followers","following_url":"https://api.github.com/users/yidawang/following{/other_user}","gists_url":"https://api.github.com/users/yidawang/gists{/gist_id}","starred_url":"https://api.github.com/users/yidawang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yidawang/subscriptions","organizations_url":"https://api.github.com/users/yidawang/orgs","repos_url":"https://api.github.com/users/yidawang/repos","events_url":"https://api.github.com/users/yidawang/events{/privacy}","received_events_url":"https://api.github.com/users/yidawang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T19:21:11Z","updated_at":"2020-01-24T19:21:11Z","author_association":"CONTRIBUTOR","body":"FYI, we just notice that if we don't bind the master thread, which is the default behavior, the master thread may cause the contention issue as it is allocated to a seemingly idle logical thread under hyperthreading. So I would propose to at least have the master thread bound to the intended running cores by default. @anijain2305 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578264862/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578278411","html_url":"https://github.com/apache/tvm/pull/4750#issuecomment-578278411","issue_url":"https://api.github.com/repos/apache/tvm/issues/4750","id":578278411,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODI3ODQxMQ==","user":{"login":"kice","id":3945950,"node_id":"MDQ6VXNlcjM5NDU5NTA=","avatar_url":"https://avatars.githubusercontent.com/u/3945950?v=4","gravatar_id":"","url":"https://api.github.com/users/kice","html_url":"https://github.com/kice","followers_url":"https://api.github.com/users/kice/followers","following_url":"https://api.github.com/users/kice/following{/other_user}","gists_url":"https://api.github.com/users/kice/gists{/gist_id}","starred_url":"https://api.github.com/users/kice/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kice/subscriptions","organizations_url":"https://api.github.com/users/kice/orgs","repos_url":"https://api.github.com/users/kice/repos","events_url":"https://api.github.com/users/kice/events{/privacy}","received_events_url":"https://api.github.com/users/kice/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T19:57:59Z","updated_at":"2020-01-24T19:57:59Z","author_association":"CONTRIBUTOR","body":"@tqchen @jwfromm Please review the new changes","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578278411/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578281104","html_url":"https://github.com/apache/tvm/pull/4765#issuecomment-578281104","issue_url":"https://api.github.com/repos/apache/tvm/issues/4765","id":578281104,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODI4MTEwNA==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T20:05:44Z","updated_at":"2020-01-24T20:20:46Z","author_association":"MEMBER","body":"@tqchen another problem is currently we rely on `IterVar->var` to propagate variables from the very beginning, e.g., \r\n```\r\nrv = tvm.reduce_axis(...)\r\nY = sum(X[rv], axis=rv)\r\n```\r\n\r\nHowever, `rv` could be replaced during the pass, it cause problem when we use the original `rv` to access array \r\n\r\none example of replacing: https://github.com/apache/incubator-tvm/blob/master/src/tir/ir/expr_functor.cc#L206-L208\r\n\r\nrethink about the scenario, I feel it is actually not a bad idea to have `Var` as a member of `IterVar`,  it simplifies the problem.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578281104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578329595","html_url":"https://github.com/apache/tvm/pull/4771#issuecomment-578329595","issue_url":"https://api.github.com/repos/apache/tvm/issues/4771","id":578329595,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODMyOTU5NQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T22:37:03Z","updated_at":"2020-01-24T22:37:43Z","author_association":"MEMBER","body":"If there are multiple patterns to detect, can a composite function detected by one pattern be used as a part of a match for another patterns?\r\n\r\nNot sure if this is useful though. Maybe it enables breaking up a big pattern into chunks or pattern reuse. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578329595/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578333024","html_url":"https://github.com/apache/tvm/pull/4550#issuecomment-578333024","issue_url":"https://api.github.com/repos/apache/tvm/issues/4550","id":578333024,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODMzMzAyNA==","user":{"login":"soiferj","id":3534847,"node_id":"MDQ6VXNlcjM1MzQ4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/3534847?v=4","gravatar_id":"","url":"https://api.github.com/users/soiferj","html_url":"https://github.com/soiferj","followers_url":"https://api.github.com/users/soiferj/followers","following_url":"https://api.github.com/users/soiferj/following{/other_user}","gists_url":"https://api.github.com/users/soiferj/gists{/gist_id}","starred_url":"https://api.github.com/users/soiferj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/soiferj/subscriptions","organizations_url":"https://api.github.com/users/soiferj/orgs","repos_url":"https://api.github.com/users/soiferj/repos","events_url":"https://api.github.com/users/soiferj/events{/privacy}","received_events_url":"https://api.github.com/users/soiferj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-24T22:51:01Z","updated_at":"2020-01-24T22:51:01Z","author_association":"CONTRIBUTOR","body":"@Laurawly would it be worth automatically calling cublasLt functions if the target is specified as `cuda -libs=cublas`? Currently, this will automatically call cublas GEMM, but it would be nice to call faster functions if the properties of the computation support it.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578333024/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578365956","html_url":"https://github.com/apache/tvm/pull/4497#issuecomment-578365956","issue_url":"https://api.github.com/repos/apache/tvm/issues/4497","id":578365956,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODM2NTk1Ng==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-25T02:03:43Z","updated_at":"2020-01-25T03:54:12Z","author_association":"MEMBER","body":"@alexwong I had a big success in refactoring, the parser itself (except op conversion) is about 150 lines and the \"main loop\" is just:\r\n\r\n```Python\r\n    def get_op_inputs(op_node, outputs, name_map):\r\n        inputs = []\r\n        for i in op_node.inputs():\r\n            inode_name = name_map[i.debugName()]\r\n            inputs.append(outputs[inode_name])\r\n        return inputs\r\n\r\n    outputs = list(input_vars.values())\r\n    node_name_to_nid = dict(zip(input_vars.keys(), range(len(outputs))))\r\n\r\n    for node_name, op_node in ops.items():\r\n        operator = op_node.kind()\r\n        if operator == \"prim::Constant\":\r\n            node_name_to_nid[node_name] = len(outputs)\r\n            outputs.append(consts[node_name])\r\n        elif operator != 'prim::ListConstruct':\r\n            node_name_to_nid[node_name] = len(outputs)\r\n            inputs = get_op_inputs(op_node, outputs, node_name_to_nid)\r\n            call = convert_map[operator](inputs, op_in_types[node_name])\r\n            outputs.append(call)\r\n\r\n    body = outputs[-1]\r\n    func = tvm.relay.Function(_analysis.free_vars(body), body)\r\n    param = {k: tvm.nd.array(v) for k, v in param_tensors.items()}\r\n\r\n```\r\nMy updated version is [here](https://gist.github.com/masahi/7704856919563c4b8a74bf085686b519)\r\n\r\nMaybe this is a too much change for you, I'm happy to send my change as a follow up after this PR. We can merge this after you fix the CI issue. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578365956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578367047","html_url":"https://github.com/apache/tvm/pull/4776#issuecomment-578367047","issue_url":"https://api.github.com/repos/apache/tvm/issues/4776","id":578367047,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODM2NzA0Nw==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-25T02:14:52Z","updated_at":"2020-01-25T02:16:18Z","author_association":"MEMBER","body":"@soiferj the CI is at CUDA 10.0, so it doesn't have cublaslt lib. We will be updating the CI soon #4753 #4756, we can also discuss if we want to go CUDA 10.1 (but it may be too big a change)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578367047/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578369268","html_url":"https://github.com/apache/tvm/pull/4765#issuecomment-578369268","issue_url":"https://api.github.com/repos/apache/tvm/issues/4765","id":578369268,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODM2OTI2OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-25T02:43:11Z","updated_at":"2020-01-25T02:43:11Z","author_association":"MEMBER","body":"It is indeed tradeoff in here, it is similar to early binding of information vs late binding. @yzhliu If you think it is a good idea to keep IterVar as it is(to simplify the mutation of vars), we can close this PR for now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578369268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578369831","html_url":"https://github.com/apache/tvm/pull/4765#issuecomment-578369831","issue_url":"https://api.github.com/repos/apache/tvm/issues/4765","id":578369831,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODM2OTgzMQ==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-25T02:52:06Z","updated_at":"2020-01-25T02:52:06Z","author_association":"MEMBER","body":"Thanks. I'll close it for now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578369831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578373537","html_url":"https://github.com/apache/tvm/pull/4776#issuecomment-578373537","issue_url":"https://api.github.com/repos/apache/tvm/issues/4776","id":578373537,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODM3MzUzNw==","user":{"login":"soiferj","id":3534847,"node_id":"MDQ6VXNlcjM1MzQ4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/3534847?v=4","gravatar_id":"","url":"https://api.github.com/users/soiferj","html_url":"https://github.com/soiferj","followers_url":"https://api.github.com/users/soiferj/followers","following_url":"https://api.github.com/users/soiferj/following{/other_user}","gists_url":"https://api.github.com/users/soiferj/gists{/gist_id}","starred_url":"https://api.github.com/users/soiferj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/soiferj/subscriptions","organizations_url":"https://api.github.com/users/soiferj/orgs","repos_url":"https://api.github.com/users/soiferj/repos","events_url":"https://api.github.com/users/soiferj/events{/privacy}","received_events_url":"https://api.github.com/users/soiferj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-25T03:45:32Z","updated_at":"2020-01-25T03:45:32Z","author_association":"CONTRIBUTOR","body":"Got it. In that case, I’ll update the logic to only link if it found the library.\n\n\n________________________________\nFrom: masahi <notifications@github.com>\nSent: Friday, January 24, 2020 8:14 PM\nTo: apache/incubator-tvm\nCc: Jon Soifer; Mention\nSubject: Re: [apache/incubator-tvm] [Build] Explicitly link to cublasLt (#4776)\n\n\n@soiferj<https://github.com/soiferj> the CI is at CUDA 10.0, so it doesn't have cublaslt lib.\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://github.com/apache/incubator-tvm/pull/4776?email_source=notifications&email_token=AA26773C5W6X54VIZ3HKCELQ7OOBZA5CNFSM4KLNCYOKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEJ4S4RY#issuecomment-578367047>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA2677Y4MA56HLVDNJ43LCLQ7OOBZANCNFSM4KLNCYOA>.\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578373537/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578374172","html_url":"https://github.com/apache/tvm/pull/4747#issuecomment-578374172","issue_url":"https://api.github.com/repos/apache/tvm/issues/4747","id":578374172,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODM3NDE3Mg==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-25T03:58:28Z","updated_at":"2020-01-25T03:58:28Z","author_association":"MEMBER","body":"To clarify your meaning, as hyper thread will make the big_count_ is twice times compared with physical cores. For example, phisical cores are 4, hyper thread will make the concurrency number be 8 (big_count_ is 8 too). So for hyper thread, we wish master thread could run the physical cores (id: 0-3), not cpu id 4-7.&nbsp;\r\n\r\n\r\n------------------ Original ------------------\r\nFrom: Yida Wang <notifications@github.com&gt;\r\nDate: Sat,Jan 25,2020 3:21 AM\r\nTo: apache/incubator-tvm <incubator-tvm@noreply.github.com&gt;\r\nCc: Zhao Wu <zhaowu@apache.org&gt;, Author <author@noreply.github.com&gt;\r\nSubject: Re: [apache/incubator-tvm] [ThreadPool] Solve ARM BIG.LITTLE heterogeneous multicores (#4747)\r\n\r\n\r\n\r\n\r\nFYI, we just notice that if we don't bind the master thread, which is the default behavior, the master thread may cause the contention issue as it is allocated to a seemingly idle logical thread under hyperthreading. So I would propose to at least have the master thread bound to the intended running cores by default. @anijain2305\r\n \r\n—\r\nYou are receiving this because you authored the thread.\r\nReply to this email directly, view it on GitHub, or unsubscribe.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578374172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578388738","html_url":"https://github.com/apache/tvm/pull/4747#issuecomment-578388738","issue_url":"https://api.github.com/repos/apache/tvm/issues/4747","id":578388738,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODM4ODczOA==","user":{"login":"yidawang","id":4458509,"node_id":"MDQ6VXNlcjQ0NTg1MDk=","avatar_url":"https://avatars.githubusercontent.com/u/4458509?v=4","gravatar_id":"","url":"https://api.github.com/users/yidawang","html_url":"https://github.com/yidawang","followers_url":"https://api.github.com/users/yidawang/followers","following_url":"https://api.github.com/users/yidawang/following{/other_user}","gists_url":"https://api.github.com/users/yidawang/gists{/gist_id}","starred_url":"https://api.github.com/users/yidawang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yidawang/subscriptions","organizations_url":"https://api.github.com/users/yidawang/orgs","repos_url":"https://api.github.com/users/yidawang/repos","events_url":"https://api.github.com/users/yidawang/events{/privacy}","received_events_url":"https://api.github.com/users/yidawang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-25T08:43:49Z","updated_at":"2020-01-25T08:43:49Z","author_association":"CONTRIBUTOR","body":"> To clarify your meaning, as hyper thread will make the big_count_ is twice times compared with physical cores. For example, phisical cores are 4, hyper thread will make the concurrency number be 8 (big_count_ is 8 too). So for hyper thread, we wish master thread could run the physical cores (id: 0-3), not cpu id 4-7.&nbsp;\r\n> […](#)\r\n> ------------------ Original ------------------ From: Yida Wang <notifications@github.com&gt; Date: Sat,Jan 25,2020 3:21 AM To: apache/incubator-tvm <incubator-tvm@noreply.github.com&gt; Cc: Zhao Wu <zhaowu@apache.org&gt;, Author <author@noreply.github.com&gt; Subject: Re: [apache/incubator-tvm] [ThreadPool] Solve ARM BIG.LITTLE heterogeneous multicores (#4747) FYI, we just notice that if we don't bind the master thread, which is the default behavior, the master thread may cause the contention issue as it is allocated to a seemingly idle logical thread under hyperthreading. So I would propose to at least have the master thread bound to the intended running cores by default. @anijain2305 — You are receiving this because you authored the thread. Reply to this email directly, view it on GitHub, or unsubscribe.\r\n\r\nYes","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578388738/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578389093","html_url":"https://github.com/apache/tvm/pull/4747#issuecomment-578389093","issue_url":"https://api.github.com/repos/apache/tvm/issues/4747","id":578389093,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODM4OTA5Mw==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-25T08:50:57Z","updated_at":"2020-01-25T08:50:57Z","author_association":"MEMBER","body":"Thanks for clarification. I will do it together in next code update.------------------ Original ------------------From: Yida Wang <notifications@github.com>Date: Sat,Jan 25,2020 4:44 PMTo: apache/incubator-tvm <incubator-tvm@noreply.github.com>Cc: Zhao Wu <zhaowu@apache.org>, Author <author@noreply.github.com>Subject: Re: [apache/incubator-tvm] [ThreadPool] Solve ARM BIG.LITTLE heterogeneous multicores (#4747)\nTo clarify your meaning, as hyper thread will make the big_count_ is twice times compared with physical cores. For example, phisical cores are 4, hyper thread will make the concurrency number be 8 (big_count_ is 8 too). So for hyper thread, we wish master thread could run the physical cores (id: 0-3), not cpu id 4-7. \n…\n------------------ Original ------------------ From: Yida Wang <notifications@github.com> Date: Sat,Jan 25,2020 3:21 AM To: apache/incubator-tvm <incubator-tvm@noreply.github.com> Cc: Zhao Wu <zhaowu@apache.org>, Author <author@noreply.github.com> Subject: Re: [apache/incubator-tvm] [ThreadPool] Solve ARM BIG.LITTLE heterogeneous multicores (#4747) FYI, we just notice that if we don't bind the master thread, which is the default behavior, the master thread may cause the contention issue as it is allocated to a seemingly idle logical thread under hyperthreading. So I would propose to at least have the master thread bound to the intended running cores by default. @anijain2305 — You are receiving this because you authored the thread. Reply to this email directly, view it on GitHub, or unsubscribe.\n\nYes\n\n—You are receiving this because you authored the thread.Reply to this email directly, view it on GitHub, or unsubscribe.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578389093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578450716","html_url":"https://github.com/apache/tvm/pull/4750#issuecomment-578450716","issue_url":"https://api.github.com/repos/apache/tvm/issues/4750","id":578450716,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODQ1MDcxNg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-25T22:55:29Z","updated_at":"2020-01-25T22:55:29Z","author_association":"MEMBER","body":"@kice  it would be great if you can add a testcase that covers this corner case","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578450716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578463216","html_url":"https://github.com/apache/tvm/issues/4777#issuecomment-578463216","issue_url":"https://api.github.com/repos/apache/tvm/issues/4777","id":578463216,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODQ2MzIxNg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-26T02:40:16Z","updated_at":"2020-01-26T02:40:16Z","author_association":"MEMBER","body":"Thanks for reporting the problem, please open a new trouble shooting thread on https://discuss.tvm.ai/","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578463216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578681838","html_url":"https://github.com/apache/tvm/pull/4756#issuecomment-578681838","issue_url":"https://api.github.com/repos/apache/tvm/issues/4756","id":578681838,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODY4MTgzOA==","user":{"login":"leandron","id":437416,"node_id":"MDQ6VXNlcjQzNzQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/437416?v=4","gravatar_id":"","url":"https://api.github.com/users/leandron","html_url":"https://github.com/leandron","followers_url":"https://api.github.com/users/leandron/followers","following_url":"https://api.github.com/users/leandron/following{/other_user}","gists_url":"https://api.github.com/users/leandron/gists{/gist_id}","starred_url":"https://api.github.com/users/leandron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leandron/subscriptions","organizations_url":"https://api.github.com/users/leandron/orgs","repos_url":"https://api.github.com/users/leandron/repos","events_url":"https://api.github.com/users/leandron/events{/privacy}","received_events_url":"https://api.github.com/users/leandron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-27T10:21:27Z","updated_at":"2020-01-27T10:21:27Z","author_association":"CONTRIBUTOR","body":"Sorry @masahi , I don't know how that error is related to the Pillow dependency and couldn't find any related issue on sphinx.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578681838/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578689513","html_url":"https://github.com/apache/tvm/issues/4412#issuecomment-578689513","issue_url":"https://api.github.com/repos/apache/tvm/issues/4412","id":578689513,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODY4OTUxMw==","user":{"login":"hcho3","id":2532981,"node_id":"MDQ6VXNlcjI1MzI5ODE=","avatar_url":"https://avatars.githubusercontent.com/u/2532981?v=4","gravatar_id":"","url":"https://api.github.com/users/hcho3","html_url":"https://github.com/hcho3","followers_url":"https://api.github.com/users/hcho3/followers","following_url":"https://api.github.com/users/hcho3/following{/other_user}","gists_url":"https://api.github.com/users/hcho3/gists{/gist_id}","starred_url":"https://api.github.com/users/hcho3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hcho3/subscriptions","organizations_url":"https://api.github.com/users/hcho3/orgs","repos_url":"https://api.github.com/users/hcho3/repos","events_url":"https://api.github.com/users/hcho3/events{/privacy}","received_events_url":"https://api.github.com/users/hcho3/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-27T10:41:20Z","updated_at":"2020-01-27T10:41:20Z","author_association":"CONTRIBUTOR","body":"I've had a similar problem before, and the solution is to run `python setup.py install` from `topi/python` directory. This command installs the Python package named `topi`.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578689513/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578845333","html_url":"https://github.com/apache/tvm/pull/4651#issuecomment-578845333","issue_url":"https://api.github.com/repos/apache/tvm/issues/4651","id":578845333,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODg0NTMzMw==","user":{"login":"yongfeng-nv","id":49211903,"node_id":"MDQ6VXNlcjQ5MjExOTAz","avatar_url":"https://avatars.githubusercontent.com/u/49211903?v=4","gravatar_id":"","url":"https://api.github.com/users/yongfeng-nv","html_url":"https://github.com/yongfeng-nv","followers_url":"https://api.github.com/users/yongfeng-nv/followers","following_url":"https://api.github.com/users/yongfeng-nv/following{/other_user}","gists_url":"https://api.github.com/users/yongfeng-nv/gists{/gist_id}","starred_url":"https://api.github.com/users/yongfeng-nv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yongfeng-nv/subscriptions","organizations_url":"https://api.github.com/users/yongfeng-nv/orgs","repos_url":"https://api.github.com/users/yongfeng-nv/repos","events_url":"https://api.github.com/users/yongfeng-nv/events{/privacy}","received_events_url":"https://api.github.com/users/yongfeng-nv/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-27T16:58:05Z","updated_at":"2020-01-27T16:58:05Z","author_association":"CONTRIBUTOR","body":"> > Thanks @yongfeng-nv . One thing that I think worth considering, as in many viz tools, is the separation of visualization data source specification(in this case the perhaps a dom tree or similar kind) from the visualization(graphviz).\r\n> > We can have a tool that extracts the spec into json, then have a tool to take that spec and visualize it\r\n> \r\n> @tqchen, I see your point. Let me spec the data source spec.\r\n\r\n@tqchen, @Hzfengsy, I have posted proposal DOM tree in the RFC thread: https://discuss.tvm.ai/t/visualize-tensor-expression/5174/6.  Please leave your comments and suggestions.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578845333/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578902685","html_url":"https://github.com/apache/tvm/pull/4776#issuecomment-578902685","issue_url":"https://api.github.com/repos/apache/tvm/issues/4776","id":578902685,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODkwMjY4NQ==","user":{"login":"soiferj","id":3534847,"node_id":"MDQ6VXNlcjM1MzQ4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/3534847?v=4","gravatar_id":"","url":"https://api.github.com/users/soiferj","html_url":"https://github.com/soiferj","followers_url":"https://api.github.com/users/soiferj/followers","following_url":"https://api.github.com/users/soiferj/following{/other_user}","gists_url":"https://api.github.com/users/soiferj/gists{/gist_id}","starred_url":"https://api.github.com/users/soiferj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/soiferj/subscriptions","organizations_url":"https://api.github.com/users/soiferj/orgs","repos_url":"https://api.github.com/users/soiferj/repos","events_url":"https://api.github.com/users/soiferj/events{/privacy}","received_events_url":"https://api.github.com/users/soiferj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-27T19:06:40Z","updated_at":"2020-01-27T19:06:40Z","author_association":"CONTRIBUTOR","body":"@masahi fixed. Would you mind taking another look?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578902685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578918024","html_url":"https://github.com/apache/tvm/issues/4758#issuecomment-578918024","issue_url":"https://api.github.com/repos/apache/tvm/issues/4758","id":578918024,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODkxODAyNA==","user":{"login":"abergeron","id":1002504,"node_id":"MDQ6VXNlcjEwMDI1MDQ=","avatar_url":"https://avatars.githubusercontent.com/u/1002504?v=4","gravatar_id":"","url":"https://api.github.com/users/abergeron","html_url":"https://github.com/abergeron","followers_url":"https://api.github.com/users/abergeron/followers","following_url":"https://api.github.com/users/abergeron/following{/other_user}","gists_url":"https://api.github.com/users/abergeron/gists{/gist_id}","starred_url":"https://api.github.com/users/abergeron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abergeron/subscriptions","organizations_url":"https://api.github.com/users/abergeron/orgs","repos_url":"https://api.github.com/users/abergeron/repos","events_url":"https://api.github.com/users/abergeron/events{/privacy}","received_events_url":"https://api.github.com/users/abergeron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-27T19:42:51Z","updated_at":"2020-01-27T19:42:51Z","author_association":"CONTRIBUTOR","body":"After some experimentation, if I comment out InlinePrimitives at line 921 in compiler.cc (https://github.com/apache/incubator-tvm/blob/master/src/relay/backend/vm/compiler.cc#L921), then the compilation works.  It seems this is the line that introduces the weird change.\r\n\r\nIf I add an override like this:\r\n\r\n```\r\n  Expr VisitExpr_(const MatchNode* m) {\r\n    std::vector<Clause> clauses;\r\n    for (const Clause& p : m->clauses) {\r\n      clauses.push_back(VisitClause(p));\r\n    }\r\n    return GetRef<Expr>(m);\r\n  }\r\n```\r\n\r\nto the PrimitiveInliner class (in https://github.com/apache/incubator-tvm/blob/master/src/relay/backend/vm/inline_primitives.cc#L54), it appears to make the compilation work (at least in my limited example), but this may have some other consequences that I am not aware of (I suspect this means that no transformations will be applied to the body of match clauses, which might be bad).\r\n\r\nI'll keep working on that for a bit trying to find an acceptable solution, but I will gladly take any help/hints that I can get.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578918024/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578979321","html_url":"https://github.com/apache/tvm/pull/4771#issuecomment-578979321","issue_url":"https://api.github.com/repos/apache/tvm/issues/4771","id":578979321,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODk3OTMyMQ==","user":{"login":"mbaret","id":55580676,"node_id":"MDQ6VXNlcjU1NTgwNjc2","avatar_url":"https://avatars.githubusercontent.com/u/55580676?v=4","gravatar_id":"","url":"https://api.github.com/users/mbaret","html_url":"https://github.com/mbaret","followers_url":"https://api.github.com/users/mbaret/followers","following_url":"https://api.github.com/users/mbaret/following{/other_user}","gists_url":"https://api.github.com/users/mbaret/gists{/gist_id}","starred_url":"https://api.github.com/users/mbaret/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbaret/subscriptions","organizations_url":"https://api.github.com/users/mbaret/orgs","repos_url":"https://api.github.com/users/mbaret/repos","events_url":"https://api.github.com/users/mbaret/events{/privacy}","received_events_url":"https://api.github.com/users/mbaret/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-27T22:10:52Z","updated_at":"2020-01-27T22:10:52Z","author_association":"CONTRIBUTOR","body":"It's the intention that this can be called on the entire Relay graph so that it can be used to help implement a generic annotation pass (one that is aware of composite functions). That way we can define functions similar to the 'Is Supported?' mechanism in the original annotation PR (since taken down) where you could declare in Python whether an operator was supported. That could be extended to say whether a composite function is supported without having to add pattern matching code to the annotator.\r\n\r\nThe problem there is the case where composite functions do not end up in an external function after partitioning. My thinking is to have some legalize pass after the partitioning that removes the composite functions from sections of the graph not marked as external.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578979321/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578985825","html_url":"https://github.com/apache/tvm/pull/4776#issuecomment-578985825","issue_url":"https://api.github.com/repos/apache/tvm/issues/4776","id":578985825,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODk4NTgyNQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-27T22:28:05Z","updated_at":"2020-01-27T22:28:05Z","author_association":"MEMBER","body":"thanks @soiferj ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578985825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578996008","html_url":"https://github.com/apache/tvm/pull/4780#issuecomment-578996008","issue_url":"https://api.github.com/repos/apache/tvm/issues/4780","id":578996008,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODk5NjAwOA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-27T22:58:16Z","updated_at":"2020-01-27T22:58:16Z","author_association":"MEMBER","body":"Thanks @jonso4 !","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/578996008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579014540","html_url":"https://github.com/apache/tvm/pull/4771#issuecomment-579014540","issue_url":"https://api.github.com/repos/apache/tvm/issues/4771","id":579014540,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTAxNDU0MA==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T00:00:32Z","updated_at":"2020-01-28T00:00:32Z","author_association":"CONTRIBUTOR","body":"So you want the flow to be:\r\n```\r\nCompositeMerge -> Annotation -> Partitioning. \r\n```\r\nI agree that this would make annotation generic and straightforward, although it seems like we don't need annotation anymore if we specify all patterns including single ops. While there are lots of approaches to do so, maybe we could accept this solution first and consider the further steps. What you do think? @zhiics \r\n\r\nAlso, please help clarify the question asked by @masahi and me about multiple matching. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579014540/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579026027","html_url":"https://github.com/apache/tvm/pull/4782#issuecomment-579026027","issue_url":"https://api.github.com/repos/apache/tvm/issues/4782","id":579026027,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTAyNjAyNw==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T00:43:28Z","updated_at":"2020-01-28T00:43:28Z","author_association":"MEMBER","body":"cc @zhiics @tmoreau89 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579026027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579028693","html_url":"https://github.com/apache/tvm/pull/4782#issuecomment-579028693","issue_url":"https://api.github.com/repos/apache/tvm/issues/4782","id":579028693,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTAyODY5Mw==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T00:54:57Z","updated_at":"2020-01-28T00:54:57Z","author_association":"MEMBER","body":"@tmoreau89 I added to the pass docs with an example. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579028693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579028784","html_url":"https://github.com/apache/tvm/pull/4497#issuecomment-579028784","issue_url":"https://api.github.com/repos/apache/tvm/issues/4497","id":579028784,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTAyODc4NA==","user":{"login":"alexwong","id":11878166,"node_id":"MDQ6VXNlcjExODc4MTY2","avatar_url":"https://avatars.githubusercontent.com/u/11878166?v=4","gravatar_id":"","url":"https://api.github.com/users/alexwong","html_url":"https://github.com/alexwong","followers_url":"https://api.github.com/users/alexwong/followers","following_url":"https://api.github.com/users/alexwong/following{/other_user}","gists_url":"https://api.github.com/users/alexwong/gists{/gist_id}","starred_url":"https://api.github.com/users/alexwong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexwong/subscriptions","organizations_url":"https://api.github.com/users/alexwong/orgs","repos_url":"https://api.github.com/users/alexwong/repos","events_url":"https://api.github.com/users/alexwong/events{/privacy}","received_events_url":"https://api.github.com/users/alexwong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T00:55:23Z","updated_at":"2020-01-28T00:55:23Z","author_association":"CONTRIBUTOR","body":"> @alexwong I had a big success in refactoring, the parser itself (except op conversion) is about 150 lines and the \"main loop\" is just:\r\n> \r\n> ```python\r\n>     def get_op_inputs(op_node, outputs, name_map):\r\n>         inputs = []\r\n>         for i in op_node.inputs():\r\n>             inode_name = name_map[i.debugName()]\r\n>             inputs.append(outputs[inode_name])\r\n>         return inputs\r\n> \r\n>     outputs = list(input_vars.values())\r\n>     node_name_to_nid = dict(zip(input_vars.keys(), range(len(outputs))))\r\n> \r\n>     for node_name, op_node in ops.items():\r\n>         operator = op_node.kind()\r\n>         if operator == \"prim::Constant\":\r\n>             node_name_to_nid[node_name] = len(outputs)\r\n>             outputs.append(consts[node_name])\r\n>         elif operator != 'prim::ListConstruct':\r\n>             node_name_to_nid[node_name] = len(outputs)\r\n>             inputs = get_op_inputs(op_node, outputs, node_name_to_nid)\r\n>             call = convert_map[operator](inputs, op_in_types[node_name])\r\n>             outputs.append(call)\r\n> \r\n>     body = outputs[-1]\r\n>     func = tvm.relay.Function(_analysis.free_vars(body), body)\r\n>     param = {k: tvm.nd.array(v) for k, v in param_tensors.items()}\r\n> ```\r\n> \r\n> My updated version is [here](https://gist.github.com/masahi/7704856919563c4b8a74bf085686b519)\r\n> \r\n> Maybe this is a too much change for you, I'm happy to send my change as a follow up after this PR. We can merge this after you fix the CI issue.\r\n\r\nIt is a lot of feedback but I think I can manage, just have been sidetracked with other things that keep pulling me away from this. I'm not sure about today but I should be able to work on this tomorrow. I'm all for simpler code though, would you prefer I pull in the changes above in this PR or just try and make all of the simpler changes to get this merged first?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579028784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579038361","html_url":"https://github.com/apache/tvm/pull/4497#issuecomment-579038361","issue_url":"https://api.github.com/repos/apache/tvm/issues/4497","id":579038361,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTAzODM2MQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T01:35:52Z","updated_at":"2020-01-28T01:35:52Z","author_association":"MEMBER","body":"@alexwong I'm 100% for \"make all of the simpler changes to get this merged first\". I don't want you to spend your time redoing the refactoring work I did. Of course, if you want to improve your PR and have time to do so, go ahead and do that as you like. In particular, good simplification can be done around GetAttr node parsing logic and inputs/outputs handling inside main loop (my gist above have my take on this). \r\n\r\nAnyway, the must TODOs for this PR before we merge are,\r\n* Make CI green\r\n* Make it work with PyTorch 1.4 (just add `torch._C._jit_pass_inline(graph)`)\r\n* Replace all the string hacks with PyTorch's Python interface for JIT data structures\r\n\r\nAfter we merge this PR, I'll send a refactoring PR (only about 200 lines change, all op conversion and test cases will be used as is). I've finished refactoring on my branch and currently working on quantized model support. I'm also looking at dynamic models with control flow nodes.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579038361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579340640","html_url":"https://github.com/apache/tvm/pull/4771#issuecomment-579340640","issue_url":"https://api.github.com/repos/apache/tvm/issues/4771","id":579340640,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTM0MDY0MA==","user":{"login":"mbaret","id":55580676,"node_id":"MDQ6VXNlcjU1NTgwNjc2","avatar_url":"https://avatars.githubusercontent.com/u/55580676?v=4","gravatar_id":"","url":"https://api.github.com/users/mbaret","html_url":"https://github.com/mbaret","followers_url":"https://api.github.com/users/mbaret/followers","following_url":"https://api.github.com/users/mbaret/following{/other_user}","gists_url":"https://api.github.com/users/mbaret/gists{/gist_id}","starred_url":"https://api.github.com/users/mbaret/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbaret/subscriptions","organizations_url":"https://api.github.com/users/mbaret/orgs","repos_url":"https://api.github.com/users/mbaret/repos","events_url":"https://api.github.com/users/mbaret/events{/privacy}","received_events_url":"https://api.github.com/users/mbaret/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T16:38:42Z","updated_at":"2020-01-28T16:38:42Z","author_association":"CONTRIBUTOR","body":"I think we probably can get rid of the annotation pass. If we expose the logic that determines whether an operator is supported by a given external compiler to the partitioning pass, then this will also mean we don't need to define a pattern for every single operator. Just define patterns for composite operators and have a common way of expressing whether or not a given operator (composite or otherwise) is supported by an external compiler.\r\n\r\nThat would lose some of the control that could have been gained by writing a custom annotation pass, but I'm not sure what use cases would leverage that.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579340640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579344847","html_url":"https://github.com/apache/tvm/pull/4771#issuecomment-579344847","issue_url":"https://api.github.com/repos/apache/tvm/issues/4771","id":579344847,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTM0NDg0Nw==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T16:47:11Z","updated_at":"2020-01-28T16:47:11Z","author_association":"CONTRIBUTOR","body":"That's exactly what I was thinking -- we can debate if we should merge annotation to this pass, or just get rid of the annotation and make this pass general enough. Anyway can be discussed in the follow-up steps.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579344847/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579362580","html_url":"https://github.com/apache/tvm/pull/4779#issuecomment-579362580","issue_url":"https://api.github.com/repos/apache/tvm/issues/4779","id":579362580,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTM2MjU4MA==","user":{"login":"wpan11nv","id":60017475,"node_id":"MDQ6VXNlcjYwMDE3NDc1","avatar_url":"https://avatars.githubusercontent.com/u/60017475?v=4","gravatar_id":"","url":"https://api.github.com/users/wpan11nv","html_url":"https://github.com/wpan11nv","followers_url":"https://api.github.com/users/wpan11nv/followers","following_url":"https://api.github.com/users/wpan11nv/following{/other_user}","gists_url":"https://api.github.com/users/wpan11nv/gists{/gist_id}","starred_url":"https://api.github.com/users/wpan11nv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpan11nv/subscriptions","organizations_url":"https://api.github.com/users/wpan11nv/orgs","repos_url":"https://api.github.com/users/wpan11nv/repos","events_url":"https://api.github.com/users/wpan11nv/events{/privacy}","received_events_url":"https://api.github.com/users/wpan11nv/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T17:25:01Z","updated_at":"2020-01-28T17:25:01Z","author_association":"CONTRIBUTOR","body":"Please help review this patch.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579362580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579436246","html_url":"https://github.com/apache/tvm/pull/4771#issuecomment-579436246","issue_url":"https://api.github.com/repos/apache/tvm/issues/4771","id":579436246,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTQzNjI0Ng==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T20:18:42Z","updated_at":"2020-01-28T20:20:05Z","author_association":"MEMBER","body":"do we still need partitioning if we get rid of the annotation pass? At least for simple patterns like conv + bias + relu, I can get the same composite (or partitioning, whatever) without writing a clunky custom annotator and doing the partitioning pass. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579436246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579448339","html_url":"https://github.com/apache/tvm/pull/4771#issuecomment-579448339","issue_url":"https://api.github.com/repos/apache/tvm/issues/4771","id":579448339,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTQ0ODMzOQ==","user":{"login":"mbaret","id":55580676,"node_id":"MDQ6VXNlcjU1NTgwNjc2","avatar_url":"https://avatars.githubusercontent.com/u/55580676?v=4","gravatar_id":"","url":"https://api.github.com/users/mbaret","html_url":"https://github.com/mbaret","followers_url":"https://api.github.com/users/mbaret/followers","following_url":"https://api.github.com/users/mbaret/following{/other_user}","gists_url":"https://api.github.com/users/mbaret/gists{/gist_id}","starred_url":"https://api.github.com/users/mbaret/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbaret/subscriptions","organizations_url":"https://api.github.com/users/mbaret/orgs","repos_url":"https://api.github.com/users/mbaret/repos","events_url":"https://api.github.com/users/mbaret/events{/privacy}","received_events_url":"https://api.github.com/users/mbaret/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T20:47:39Z","updated_at":"2020-01-28T20:47:39Z","author_association":"CONTRIBUTOR","body":"It's important to emphasise the difference between partitioned subgraphs (which correspond to 'External' functions), and the merged patterns here (which correspond to 'Composite' functions).\r\n\r\nComposite functions are a way to group together relay patterns which correspond to a particular external codegen function (eg. qnn_conv2d + bias_add + requantize maps to a single convolution function in Arm Compute Library). External functions are a way to represent a subgraph that should not go via TVM codegen but should instead go through an external compiler (eg. DNNL).\r\n\r\nFor libraries like ACL or DNNL, it happens to be the case that you can just put every supported operator/composite function in it's own external function (partitioned subgraph) and because the library calls are standalone that works well enough.\r\n\r\nA more complex external compiler though may want to do some advanced fusion or manipulation which means it needs to see the full supported subgraph, not just a single operator/composite function at a time. It will produce some binary artifact that computes the entire subgraph rather than a particular operator within it. All that complexity should be handled by the external compiler's codegen pass, the responsibility of the partitioner is to ensure that pass receives a valid subgraph that is as large as possible while still being fully supported and introducing no dataflow problems.\r\n\r\nIn summary, I don't think this pass replaces partitioning which is essential for the 'complex compiler' case, but I think it may replace the annotation pass.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579448339/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579456842","html_url":"https://github.com/apache/tvm/pull/4771#issuecomment-579456842","issue_url":"https://api.github.com/repos/apache/tvm/issues/4771","id":579456842,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTQ1Njg0Mg==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T21:09:08Z","updated_at":"2020-01-28T21:09:08Z","author_association":"MEMBER","body":"thanks, such \"complex compiler\" use cases sounds quite interesting and the difference in Composite/External there makes a lot of sense. I also understand your earlier comments better now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579456842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579461903","html_url":"https://github.com/apache/tvm/pull/4771#issuecomment-579461903","issue_url":"https://api.github.com/repos/apache/tvm/issues/4771","id":579461903,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTQ2MTkwMw==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T21:21:22Z","updated_at":"2020-01-28T21:21:22Z","author_association":"CONTRIBUTOR","body":"While @mbarrett97 has pointed out the difference between composite/annotation and partition, I just provide one more clarification: The main task for the partition pass is transforming compiler annotations in a Relay graph to external functions and it is compiler agnostic. It means we may even consider the possibility of partitioning a Relay graph to more than one external compilers.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579461903/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579536676","html_url":"https://github.com/apache/tvm/pull/4775#issuecomment-579536676","issue_url":"https://api.github.com/repos/apache/tvm/issues/4775","id":579536676,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTUzNjY3Ng==","user":{"login":"alexgl-github","id":53275205,"node_id":"MDQ6VXNlcjUzMjc1MjA1","avatar_url":"https://avatars.githubusercontent.com/u/53275205?v=4","gravatar_id":"","url":"https://api.github.com/users/alexgl-github","html_url":"https://github.com/alexgl-github","followers_url":"https://api.github.com/users/alexgl-github/followers","following_url":"https://api.github.com/users/alexgl-github/following{/other_user}","gists_url":"https://api.github.com/users/alexgl-github/gists{/gist_id}","starred_url":"https://api.github.com/users/alexgl-github/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexgl-github/subscriptions","organizations_url":"https://api.github.com/users/alexgl-github/orgs","repos_url":"https://api.github.com/users/alexgl-github/repos","events_url":"https://api.github.com/users/alexgl-github/events{/privacy}","received_events_url":"https://api.github.com/users/alexgl-github/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T00:23:10Z","updated_at":"2020-01-29T00:23:10Z","author_association":"CONTRIBUTOR","body":"@apivovarov \r\n@anijain2305 \r\nCould you please review again?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579536676/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579539128","html_url":"https://github.com/apache/tvm/pull/4775#issuecomment-579539128","issue_url":"https://api.github.com/repos/apache/tvm/issues/4775","id":579539128,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTUzOTEyOA==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T00:32:33Z","updated_at":"2020-01-29T00:32:33Z","author_association":"CONTRIBUTOR","body":"@vinx13 @kevinthesun  for further reviews.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579539128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579543514","html_url":"https://github.com/apache/tvm/pull/4780#issuecomment-579543514","issue_url":"https://api.github.com/repos/apache/tvm/issues/4780","id":579543514,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTU0MzUxNA==","user":{"login":"jmorrill","id":6867609,"node_id":"MDQ6VXNlcjY4Njc2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/6867609?v=4","gravatar_id":"","url":"https://api.github.com/users/jmorrill","html_url":"https://github.com/jmorrill","followers_url":"https://api.github.com/users/jmorrill/followers","following_url":"https://api.github.com/users/jmorrill/following{/other_user}","gists_url":"https://api.github.com/users/jmorrill/gists{/gist_id}","starred_url":"https://api.github.com/users/jmorrill/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmorrill/subscriptions","organizations_url":"https://api.github.com/users/jmorrill/orgs","repos_url":"https://api.github.com/users/jmorrill/repos","events_url":"https://api.github.com/users/jmorrill/events{/privacy}","received_events_url":"https://api.github.com/users/jmorrill/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T00:52:31Z","updated_at":"2020-01-29T00:52:31Z","author_association":"CONTRIBUTOR","body":"@soiferj sorry, I'm late to the party.  Getting over a flu.\r\n\r\nAnyways, I think there might be a problem.\r\n\r\nOn my test, the \"`line`\" variable is \"`AttributeError: relay.Op object has no attributed attrs`\".\r\nOn line `206`, `start_pos` returns -1, which causes a return of \"`None`\";\r\n\r\nMy issue is fixed if the body of `_find_error_type `is replaced with:\r\n```\r\n        end_pos = line.find(\":\")\r\n        if end_pos == -1:\r\n            return None\r\n        err_name = line[:end_pos]\r\n        if _valid_error_name(err_name):\r\n            return err_name\r\n        return None\r\n```\r\nI'd attempt to fix, but I don't want to break the case you are dealing with.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579543514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579544499","html_url":"https://github.com/apache/tvm/pull/4780#issuecomment-579544499","issue_url":"https://api.github.com/repos/apache/tvm/issues/4780","id":579544499,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTU0NDQ5OQ==","user":{"login":"soiferj","id":3534847,"node_id":"MDQ6VXNlcjM1MzQ4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/3534847?v=4","gravatar_id":"","url":"https://api.github.com/users/soiferj","html_url":"https://github.com/soiferj","followers_url":"https://api.github.com/users/soiferj/followers","following_url":"https://api.github.com/users/soiferj/following{/other_user}","gists_url":"https://api.github.com/users/soiferj/gists{/gist_id}","starred_url":"https://api.github.com/users/soiferj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/soiferj/subscriptions","organizations_url":"https://api.github.com/users/soiferj/orgs","repos_url":"https://api.github.com/users/soiferj/repos","events_url":"https://api.github.com/users/soiferj/events{/privacy}","received_events_url":"https://api.github.com/users/soiferj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T00:57:07Z","updated_at":"2020-01-29T00:57:07Z","author_association":"CONTRIBUTOR","body":"@jmorrill, I haven't seen an error formatted like that. Can you print out the full error string in the function that calls into this one? In all of my tests, the message begins with timestamp, which has a few \":\" characters.\r\n\r\nIf this does turn out to be an issue, I think we should handle both cases. If `start_pos` is -1, we should graph `line[:end_pos]`. Otherwise, grab `line[start_pos + 1:end_pos]`. What do you think?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579544499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579546572","html_url":"https://github.com/apache/tvm/pull/4780#issuecomment-579546572","issue_url":"https://api.github.com/repos/apache/tvm/issues/4780","id":579546572,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTU0NjU3Mg==","user":{"login":"jmorrill","id":6867609,"node_id":"MDQ6VXNlcjY4Njc2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/6867609?v=4","gravatar_id":"","url":"https://api.github.com/users/jmorrill","html_url":"https://github.com/jmorrill","followers_url":"https://api.github.com/users/jmorrill/followers","following_url":"https://api.github.com/users/jmorrill/following{/other_user}","gists_url":"https://api.github.com/users/jmorrill/gists{/gist_id}","starred_url":"https://api.github.com/users/jmorrill/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmorrill/subscriptions","organizations_url":"https://api.github.com/users/jmorrill/orgs","repos_url":"https://api.github.com/users/jmorrill/repos","events_url":"https://api.github.com/users/jmorrill/events{/privacy}","received_events_url":"https://api.github.com/users/jmorrill/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T01:06:21Z","updated_at":"2020-01-29T01:06:21Z","author_association":"CONTRIBUTOR","body":"I added: print(\"line var is: \", line)\r\nOutput is: `line var is:  AttributeError: relay.Op object has no attributed attrs`\r\n\r\nThis happens when I run autotvm, coming down the line from `extract_from_program` I believe.\r\n\r\nHere is the stack\r\n\r\n```\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\jeremiah.morrill\\AppData\\Local\\Programs\\Python\\Python37\\lib\\threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"C:\\Users\\jeremiah.morrill\\AppData\\Local\\Programs\\Python\\Python37\\lib\\threading.py\", line 870, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\autotvm\\task\\relay_integration.py\", line 54, in _lower\r\n    compiler.lower(mod, target=target)\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\relay\\backend\\vm.py\", line 455, in lower\r\n    self._lower(mod, target, target_host)\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\_ffi\\_ctypes\\function.py\", line 207, in __call__\r\n    raise get_last_ffi_error()\r\ntvm._ffi.base.TVMError: Traceback (most recent call last):\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\_ffi\\_ctypes\\function.py\", line 72, in cfun\r\n    rv = local_pyfunc(*pyargs)\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\relay\\transform.py\", line 899, in _pass_func\r\n    return inst.transform_function(func, mod, ctx)\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\relay\\memory_alloc.py\", line 284, in transform_function\r\n    func = ea.visit(func)\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\relay\\expr_functor.py\", line 43, in visit\r\n    res = self.visit_function(expr)\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\relay\\expr_functor.py\", line 199, in visit_function\r\n    new_body = self.visit(fn.body)\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\relay\\expr_functor.py\", line 47, in visit\r\n    res = self.visit_let(expr)\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\relay\\memory_alloc.py\", line 159, in visit_let\r\n    new_val = self.visit(let.value)\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\relay\\expr_functor.py\", line 45, in visit\r\n    res = self.visit_call(expr)\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\relay\\memory_alloc.py\", line 170, in visit_call\r\n    if is_primitive(call):\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\relay\\memory_alloc.py\", line 31, in is_primitive\r\n    return hasattr(call.op, 'attrs') and hasattr(call.op.attrs, 'Primitive') and \\\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\_ffi\\object.py\", line 65, in __getattr__\r\n    return _api_internal._NodeGetAttr(self, name)\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\.site-packages\\python\\tvm\\_ffi\\_ctypes\\function.py\", line 207, in __call__\r\n    raise get_last_ffi_error()\r\n  File \"C:\\src\\mediatubes\\ml\\tensortubes\\src\\third_party\\tvm\\src\\node\\reflection.cc\", line 113\r\nAttributeError: relay.Op object has no attributed attrs\r\n```\r\n\r\nBased on your suggestion, I threw this together, which seems to work with my use.\r\n\r\n```\r\ndef _find_error_type(line):\r\n    \"\"\"Find the error name given the first line of the error message.\r\n\r\n    Parameters\r\n    ----------\r\n    line : str\r\n        The first line of error message.\r\n\r\n    Returns\r\n    -------\r\n    name : str The error name\r\n    \"\"\"\r\n    if sys.platform == \"win32\":\r\n        # Stack traces aren't logged on Windows due to a DMLC limitation,\r\n        # so we should try to get the underlying error another way.\r\n        # DMLC formats errors \"[timestamp] file:line: ErrorMessage\"\r\n        # ErrorMessage is usually formatted \"ErrorType: message\"\r\n        # We can try to extract the error type using the final \":\"\r\n        end_pos = line.rfind(\":\")\r\n        if end_pos == -1:\r\n            return None\r\n        start_pos = line.rfind(\":\", 0, end_pos)\r\n        if start_pos == -1:\r\n            err_name = line[:end_pos]\r\n            if _valid_error_name(err_name):\r\n                return err_name\r\n            else:\r\n                return None\r\n        err_name = line[start_pos + 1 : end_pos].strip()\r\n        if _valid_error_name(err_name):\r\n            return err_name\r\n        return None\r\n    else:\r\n        end_pos = line.find(\":\")\r\n        if end_pos == -1:\r\n            return None\r\n        err_name = line[:end_pos]\r\n        if _valid_error_name(err_name):\r\n            return err_name\r\n        return None\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579546572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579548042","html_url":"https://github.com/apache/tvm/pull/4780#issuecomment-579548042","issue_url":"https://api.github.com/repos/apache/tvm/issues/4780","id":579548042,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTU0ODA0Mg==","user":{"login":"soiferj","id":3534847,"node_id":"MDQ6VXNlcjM1MzQ4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/3534847?v=4","gravatar_id":"","url":"https://api.github.com/users/soiferj","html_url":"https://github.com/soiferj","followers_url":"https://api.github.com/users/soiferj/followers","following_url":"https://api.github.com/users/soiferj/following{/other_user}","gists_url":"https://api.github.com/users/soiferj/gists{/gist_id}","starred_url":"https://api.github.com/users/soiferj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/soiferj/subscriptions","organizations_url":"https://api.github.com/users/soiferj/orgs","repos_url":"https://api.github.com/users/soiferj/repos","events_url":"https://api.github.com/users/soiferj/events{/privacy}","received_events_url":"https://api.github.com/users/soiferj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T01:12:54Z","updated_at":"2020-01-29T01:18:42Z","author_association":"CONTRIBUTOR","body":"Oh interesting - your branch is throwing, while mine is just calling `LOG(FATAL)` in `reflection.cc`. Do you know why yours is throwing?\r\n\r\nUpdate: you're going through a different codepath (AutoTVM). Let's update the logic as below.\r\n\r\nIn any case, maybe we can update the logic. I think we can condense this:\r\n\r\n```\r\nif start_pos == -1:\r\n            err_name = line[:end_pos]\r\n            if _valid_error_name(err_name):\r\n                return err_name\r\n            else:\r\n                return None\r\nerr_name = line[start_pos + 1 : end_pos].strip()\r\nif _valid_error_name(err_name):\r\n    return err_name\r\nreturn None\r\n```\r\n\r\ninto this:\r\n\r\n```\r\nif start_pos == -1:\r\n            err_name = line[:end_pos].strip()\r\nelse:\r\n           err_name = line[start_pos + 1 : end_pos].strip()\r\nif _valid_error_name(err_name):\r\n    return err_name\r\nreturn None\r\n```\r\n\r\nWhat do you think? Would you be able to send a PR?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579548042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579553268","html_url":"https://github.com/apache/tvm/pull/4780#issuecomment-579553268","issue_url":"https://api.github.com/repos/apache/tvm/issues/4780","id":579553268,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTU1MzI2OA==","user":{"login":"jmorrill","id":6867609,"node_id":"MDQ6VXNlcjY4Njc2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/6867609?v=4","gravatar_id":"","url":"https://api.github.com/users/jmorrill","html_url":"https://github.com/jmorrill","followers_url":"https://api.github.com/users/jmorrill/followers","following_url":"https://api.github.com/users/jmorrill/following{/other_user}","gists_url":"https://api.github.com/users/jmorrill/gists{/gist_id}","starred_url":"https://api.github.com/users/jmorrill/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmorrill/subscriptions","organizations_url":"https://api.github.com/users/jmorrill/orgs","repos_url":"https://api.github.com/users/jmorrill/repos","events_url":"https://api.github.com/users/jmorrill/events{/privacy}","received_events_url":"https://api.github.com/users/jmorrill/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T01:35:50Z","updated_at":"2020-01-29T01:35:50Z","author_association":"CONTRIBUTOR","body":"Yes much cleaner, and works on my PC :)\r\nSubmitted PR\r\nhttps://github.com/apache/incubator-tvm/pull/4785","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579553268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579590781","html_url":"https://github.com/apache/tvm/pull/4786#issuecomment-579590781","issue_url":"https://api.github.com/repos/apache/tvm/issues/4786","id":579590781,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTU5MDc4MQ==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T04:49:13Z","updated_at":"2020-01-29T04:49:13Z","author_association":"CONTRIBUTOR","body":"Please do not merge, running few more performance tests\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579590781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579601888","html_url":"https://github.com/apache/tvm/issues/4764#issuecomment-579601888","issue_url":"https://api.github.com/repos/apache/tvm/issues/4764","id":579601888,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTYwMTg4OA==","user":{"login":"shoubhik","id":2293791,"node_id":"MDQ6VXNlcjIyOTM3OTE=","avatar_url":"https://avatars.githubusercontent.com/u/2293791?v=4","gravatar_id":"","url":"https://api.github.com/users/shoubhik","html_url":"https://github.com/shoubhik","followers_url":"https://api.github.com/users/shoubhik/followers","following_url":"https://api.github.com/users/shoubhik/following{/other_user}","gists_url":"https://api.github.com/users/shoubhik/gists{/gist_id}","starred_url":"https://api.github.com/users/shoubhik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shoubhik/subscriptions","organizations_url":"https://api.github.com/users/shoubhik/orgs","repos_url":"https://api.github.com/users/shoubhik/repos","events_url":"https://api.github.com/users/shoubhik/events{/privacy}","received_events_url":"https://api.github.com/users/shoubhik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T05:35:24Z","updated_at":"2020-01-29T05:36:16Z","author_association":"CONTRIBUTOR","body":"A question for debugging this, it seems we need to run this on a g4 instance - http://ci.tvm.ai:8080/label/GPU/. What all software I need to install on g4 to run this script? Or can i log into one of the machines in Jenkins CI build to debug this issue?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579601888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579609136","html_url":"https://github.com/apache/tvm/issues/4764#issuecomment-579609136","issue_url":"https://api.github.com/repos/apache/tvm/issues/4764","id":579609136,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTYwOTEzNg==","user":{"login":"shoubhik","id":2293791,"node_id":"MDQ6VXNlcjIyOTM3OTE=","avatar_url":"https://avatars.githubusercontent.com/u/2293791?v=4","gravatar_id":"","url":"https://api.github.com/users/shoubhik","html_url":"https://github.com/shoubhik","followers_url":"https://api.github.com/users/shoubhik/followers","following_url":"https://api.github.com/users/shoubhik/following{/other_user}","gists_url":"https://api.github.com/users/shoubhik/gists{/gist_id}","starred_url":"https://api.github.com/users/shoubhik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shoubhik/subscriptions","organizations_url":"https://api.github.com/users/shoubhik/orgs","repos_url":"https://api.github.com/users/shoubhik/repos","events_url":"https://api.github.com/users/shoubhik/events{/privacy}","received_events_url":"https://api.github.com/users/shoubhik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T06:06:08Z","updated_at":"2020-01-29T06:06:08Z","author_association":"CONTRIBUTOR","body":"@tqchen and @icemelon9 in the meanwhile can we have this workaround to unblock the testing of mxnet qnn parser logic\r\n\r\n```\r\nfor mode in [\"rnn\", \"gru\", \"lstm\"]:\r\n        verify(mode, 1, 64, 64, 1)\r\n        verify(mode, 10, 64, 64, 2)\r\n        # The following two codeblocks need to be fixed for mxnet 1.5.1-mkldnn\r\n        # verify(mode, 10, 64, 32, 2)\r\n        # verify(mode, 10, 64, 32, 2, batch=2)\r\n        verify(mode, 10, 32, 64, 1, bidirectional=True)\r\n        # The following two codeblocks need to be fixed for mxnet 1.5\r\n        # verify(mode, 10, 64, 64, 3, init_states=False)\r\n        # verify(mode, 10, 64, 64, 3, batch=2, bidirectional=True, init_states=False)\r\n``","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579609136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579621689","html_url":"https://github.com/apache/tvm/pull/4786#issuecomment-579621689","issue_url":"https://api.github.com/repos/apache/tvm/issues/4786","id":579621689,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTYyMTY4OQ==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T07:00:50Z","updated_at":"2020-01-29T07:00:50Z","author_association":"CONTRIBUTOR","body":"Update - Interesting observation. Even though the single pad operator sees a large speedup with this PR, the operators that follow pad sees a consistent slowdown in the original graph. I think the reason is that h and w are spread across cores, causing data transfer issues for the second operator.\r\n\r\nWill try a few more options. If nothing works, I will close the PR","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579621689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579739378","html_url":"https://github.com/apache/tvm/pull/4789#issuecomment-579739378","issue_url":"https://api.github.com/repos/apache/tvm/issues/4789","id":579739378,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTczOTM3OA==","user":{"login":"inadob","id":55383260,"node_id":"MDQ6VXNlcjU1MzgzMjYw","avatar_url":"https://avatars.githubusercontent.com/u/55383260?v=4","gravatar_id":"","url":"https://api.github.com/users/inadob","html_url":"https://github.com/inadob","followers_url":"https://api.github.com/users/inadob/followers","following_url":"https://api.github.com/users/inadob/following{/other_user}","gists_url":"https://api.github.com/users/inadob/gists{/gist_id}","starred_url":"https://api.github.com/users/inadob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/inadob/subscriptions","organizations_url":"https://api.github.com/users/inadob/orgs","repos_url":"https://api.github.com/users/inadob/repos","events_url":"https://api.github.com/users/inadob/events{/privacy}","received_events_url":"https://api.github.com/users/inadob/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T12:44:44Z","updated_at":"2020-01-29T12:44:44Z","author_association":"CONTRIBUTOR","body":"@kevinthesun @anijain2305 can you please take a look","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579739378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579765000","html_url":"https://github.com/apache/tvm/pull/4696#issuecomment-579765000","issue_url":"https://api.github.com/repos/apache/tvm/issues/4696","id":579765000,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTc2NTAwMA==","user":{"login":"u99127","id":19559067,"node_id":"MDQ6VXNlcjE5NTU5MDY3","avatar_url":"https://avatars.githubusercontent.com/u/19559067?v=4","gravatar_id":"","url":"https://api.github.com/users/u99127","html_url":"https://github.com/u99127","followers_url":"https://api.github.com/users/u99127/followers","following_url":"https://api.github.com/users/u99127/following{/other_user}","gists_url":"https://api.github.com/users/u99127/gists{/gist_id}","starred_url":"https://api.github.com/users/u99127/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/u99127/subscriptions","organizations_url":"https://api.github.com/users/u99127/orgs","repos_url":"https://api.github.com/users/u99127/repos","events_url":"https://api.github.com/users/u99127/events{/privacy}","received_events_url":"https://api.github.com/users/u99127/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T13:53:21Z","updated_at":"2020-01-29T13:53:21Z","author_association":"CONTRIBUTOR","body":"ping for an approving review ? @FrozenGene @anijain2305.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579765000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579823237","html_url":"https://github.com/apache/tvm/pull/4775#issuecomment-579823237","issue_url":"https://api.github.com/repos/apache/tvm/issues/4775","id":579823237,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTgyMzIzNw==","user":{"login":"alexgl-github","id":53275205,"node_id":"MDQ6VXNlcjUzMjc1MjA1","avatar_url":"https://avatars.githubusercontent.com/u/53275205?v=4","gravatar_id":"","url":"https://api.github.com/users/alexgl-github","html_url":"https://github.com/alexgl-github","followers_url":"https://api.github.com/users/alexgl-github/followers","following_url":"https://api.github.com/users/alexgl-github/following{/other_user}","gists_url":"https://api.github.com/users/alexgl-github/gists{/gist_id}","starred_url":"https://api.github.com/users/alexgl-github/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexgl-github/subscriptions","organizations_url":"https://api.github.com/users/alexgl-github/orgs","repos_url":"https://api.github.com/users/alexgl-github/repos","events_url":"https://api.github.com/users/alexgl-github/events{/privacy}","received_events_url":"https://api.github.com/users/alexgl-github/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T15:52:18Z","updated_at":"2020-01-29T15:52:18Z","author_association":"CONTRIBUTOR","body":"> @alexgl-github Thanks for the contribution.\r\n> \r\n> Almost every PR needs to have a test case in Apache TVM project. In this case, it can be a test case that uses this schedule and compares accuracy with some golden reference.\r\n\r\nThere's already topi conv3d_ndhwc test using this schedule:\r\nhttps://github.com/apache/incubator-tvm/blob/1b8522e475e9a889b80f069a83928cafa3502a74/topi/tests/python/test_topi_conv3d_ndhwc.py#L60","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579823237/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579897309","html_url":"https://github.com/apache/tvm/pull/4785#issuecomment-579897309","issue_url":"https://api.github.com/repos/apache/tvm/issues/4785","id":579897309,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTg5NzMwOQ==","user":{"login":"jmorrill","id":6867609,"node_id":"MDQ6VXNlcjY4Njc2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/6867609?v=4","gravatar_id":"","url":"https://api.github.com/users/jmorrill","html_url":"https://github.com/jmorrill","followers_url":"https://api.github.com/users/jmorrill/followers","following_url":"https://api.github.com/users/jmorrill/following{/other_user}","gists_url":"https://api.github.com/users/jmorrill/gists{/gist_id}","starred_url":"https://api.github.com/users/jmorrill/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmorrill/subscriptions","organizations_url":"https://api.github.com/users/jmorrill/orgs","repos_url":"https://api.github.com/users/jmorrill/repos","events_url":"https://api.github.com/users/jmorrill/events{/privacy}","received_events_url":"https://api.github.com/users/jmorrill/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T18:34:01Z","updated_at":"2020-01-29T18:34:01Z","author_association":"CONTRIBUTOR","body":"Clean fix was all you.  I just did the clerical work.\r\n\r\nThanks man!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579897309/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579944529","html_url":"https://github.com/apache/tvm/pull/4644#issuecomment-579944529","issue_url":"https://api.github.com/repos/apache/tvm/issues/4644","id":579944529,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTk0NDUyOQ==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T20:28:31Z","updated_at":"2020-01-30T21:04:38Z","author_association":"MEMBER","body":"I've added the strategy for all ops. We can start to review this PR since it's huge. Could you help review it?\r\n@tqchen @kevinthesun @comaniac @masahi @MarisaKirisame @hlu1 @yzhliu @zhiics @ZihengJiang @merrymercy @vinx13 @FrozenGene @jroesch @jwfromm \r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579944529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579987071","html_url":"https://github.com/apache/tvm/pull/4497#issuecomment-579987071","issue_url":"https://api.github.com/repos/apache/tvm/issues/4497","id":579987071,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTk4NzA3MQ==","user":{"login":"alexwong","id":11878166,"node_id":"MDQ6VXNlcjExODc4MTY2","avatar_url":"https://avatars.githubusercontent.com/u/11878166?v=4","gravatar_id":"","url":"https://api.github.com/users/alexwong","html_url":"https://github.com/alexwong","followers_url":"https://api.github.com/users/alexwong/followers","following_url":"https://api.github.com/users/alexwong/following{/other_user}","gists_url":"https://api.github.com/users/alexwong/gists{/gist_id}","starred_url":"https://api.github.com/users/alexwong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexwong/subscriptions","organizations_url":"https://api.github.com/users/alexwong/orgs","repos_url":"https://api.github.com/users/alexwong/repos","events_url":"https://api.github.com/users/alexwong/events{/privacy}","received_events_url":"https://api.github.com/users/alexwong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T22:17:03Z","updated_at":"2020-01-29T22:17:30Z","author_association":"CONTRIBUTOR","body":"I cleaned up the code based off the simpler feedback and will focus on getting the CI to pass (w/ refactored test code based off @jwfromm's comment). ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579987071/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579987271","html_url":"https://github.com/apache/tvm/pull/4543#issuecomment-579987271","issue_url":"https://api.github.com/repos/apache/tvm/issues/4543","id":579987271,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTk4NzI3MQ==","user":{"login":"mbaret","id":55580676,"node_id":"MDQ6VXNlcjU1NTgwNjc2","avatar_url":"https://avatars.githubusercontent.com/u/55580676?v=4","gravatar_id":"","url":"https://api.github.com/users/mbaret","html_url":"https://github.com/mbaret","followers_url":"https://api.github.com/users/mbaret/followers","following_url":"https://api.github.com/users/mbaret/following{/other_user}","gists_url":"https://api.github.com/users/mbaret/gists{/gist_id}","starred_url":"https://api.github.com/users/mbaret/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbaret/subscriptions","organizations_url":"https://api.github.com/users/mbaret/orgs","repos_url":"https://api.github.com/users/mbaret/repos","events_url":"https://api.github.com/users/mbaret/events{/privacy}","received_events_url":"https://api.github.com/users/mbaret/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-29T22:17:34Z","updated_at":"2020-01-29T22:17:34Z","author_association":"CONTRIBUTOR","body":"@FrozenGene are there any other changes you want?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/579987271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580047528","html_url":"https://github.com/apache/tvm/issues/4764#issuecomment-580047528","issue_url":"https://api.github.com/repos/apache/tvm/issues/4764","id":580047528,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDA0NzUyOA==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T01:51:16Z","updated_at":"2020-01-30T01:51:16Z","author_association":"MEMBER","body":"@shoubhik @tqchen \r\nI found out that mxnet-mkl RNN layer has some bug. If we use mxnet, the rnn layer test can pass. But if we install mxnet-mkl, even for 1.5.0, the mxnet result is wrong.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580047528/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580066405","html_url":"https://github.com/apache/tvm/issues/4764#issuecomment-580066405","issue_url":"https://api.github.com/repos/apache/tvm/issues/4764","id":580066405,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDA2NjQwNQ==","user":{"login":"shoubhik","id":2293791,"node_id":"MDQ6VXNlcjIyOTM3OTE=","avatar_url":"https://avatars.githubusercontent.com/u/2293791?v=4","gravatar_id":"","url":"https://api.github.com/users/shoubhik","html_url":"https://github.com/shoubhik","followers_url":"https://api.github.com/users/shoubhik/followers","following_url":"https://api.github.com/users/shoubhik/following{/other_user}","gists_url":"https://api.github.com/users/shoubhik/gists{/gist_id}","starred_url":"https://api.github.com/users/shoubhik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shoubhik/subscriptions","organizations_url":"https://api.github.com/users/shoubhik/orgs","repos_url":"https://api.github.com/users/shoubhik/repos","events_url":"https://api.github.com/users/shoubhik/events{/privacy}","received_events_url":"https://api.github.com/users/shoubhik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T03:23:41Z","updated_at":"2020-01-30T03:23:41Z","author_association":"CONTRIBUTOR","body":"@tqchen, in that case, can we create a new docker instance specifically for testing the qnn parser?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580066405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580071366","html_url":"https://github.com/apache/tvm/pull/4785#issuecomment-580071366","issue_url":"https://api.github.com/repos/apache/tvm/issues/4785","id":580071366,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDA3MTM2Ng==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T03:51:29Z","updated_at":"2020-01-30T03:51:29Z","author_association":"MEMBER","body":"@soiferj if you have no other comment, please approve this change according to this doc: https://docs.tvm.ai/contribute/code_review.html#approve-and-request-changes-explicitly","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580071366/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580222718","html_url":"https://github.com/apache/tvm/pull/4792#issuecomment-580222718","issue_url":"https://api.github.com/repos/apache/tvm/issues/4792","id":580222718,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDIyMjcxOA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T12:06:44Z","updated_at":"2020-01-30T12:06:44Z","author_association":"MEMBER","body":"I realized I'd better fix this in my existing PR  #4756 that is blocked by this bug","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580222718/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580244271","html_url":"https://github.com/apache/tvm/pull/4497#issuecomment-580244271","issue_url":"https://api.github.com/repos/apache/tvm/issues/4497","id":580244271,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDI0NDI3MQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T13:07:55Z","updated_at":"2020-01-30T13:07:55Z","author_association":"MEMBER","body":"@alexwong the CI is not updated even if you update the docker script in this PR (see https://docs.tvm.ai/contribute/pull_request.html#ci-environment). To update for v1.4, first we need to wait for #4756 to be merged.\r\n\r\nIn the mean time, you can use\r\n```Python\r\nif torch.__version__ != \"1.2.0\":\r\n    torch._C._jit_pass_inline(graph)\r\n``` \r\nto unblock your testing.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580244271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580259814","html_url":"https://github.com/apache/tvm/pull/4756#issuecomment-580259814","issue_url":"https://api.github.com/repos/apache/tvm/issues/4756","id":580259814,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDI1OTgxNA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T13:45:11Z","updated_at":"2020-01-30T13:45:11Z","author_association":"MEMBER","body":"ok CI is fixed. \r\n\r\n@tqchen since the update of MXNet seems to be having issues, and we want to test the [PyTorch frontend](https://github.com/apache/incubator-tvm/pull/4497) on the latest version, we want the PyTorch update to be built first. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580259814/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580271032","html_url":"https://github.com/apache/tvm/pull/4695#issuecomment-580271032","issue_url":"https://api.github.com/repos/apache/tvm/issues/4695","id":580271032,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDI3MTAzMg==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T14:11:25Z","updated_at":"2020-01-30T14:11:25Z","author_association":"MEMBER","body":"Thanks @inadob @wyc-ruiker This is merged now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580271032/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580311728","html_url":"https://github.com/apache/tvm/issues/1027#issuecomment-580311728","issue_url":"https://api.github.com/repos/apache/tvm/issues/1027","id":580311728,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDMxMTcyOA==","user":{"login":"expectopatronm","id":29397917,"node_id":"MDQ6VXNlcjI5Mzk3OTE3","avatar_url":"https://avatars.githubusercontent.com/u/29397917?v=4","gravatar_id":"","url":"https://api.github.com/users/expectopatronm","html_url":"https://github.com/expectopatronm","followers_url":"https://api.github.com/users/expectopatronm/followers","following_url":"https://api.github.com/users/expectopatronm/following{/other_user}","gists_url":"https://api.github.com/users/expectopatronm/gists{/gist_id}","starred_url":"https://api.github.com/users/expectopatronm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/expectopatronm/subscriptions","organizations_url":"https://api.github.com/users/expectopatronm/orgs","repos_url":"https://api.github.com/users/expectopatronm/repos","events_url":"https://api.github.com/users/expectopatronm/events{/privacy}","received_events_url":"https://api.github.com/users/expectopatronm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T15:38:49Z","updated_at":"2020-01-30T15:38:49Z","author_association":"NONE","body":"I get the exact same issue.\r\n\r\njetson@jetson:~/fast-depth/deploy$ python3 tx2_run_tvm.py --input-fp data/rgb.npy --output-fp data/pred.npy --model-dir ../results/tvm_compiled/tx2_gpu_mobilenet_nnconv5dw_skipadd_pruned/ --cuda True\r\n=> [TVM on TX2] using model files in ../results/tvm_compiled/tx2_gpu_mobilenet_nnconv5dw_skipadd_pruned/\r\n=> [TVM on TX2] loading model lib and ptx\r\n=> [TVM on TX2] loading model graph and params\r\n=> [TVM on TX2] creating TVM runtime module\r\n=> [TVM on TX2] feeding inputs and params into TVM module\r\n=> [TVM on TX2] running TVM module, saving output\r\nTraceback (most recent call last):\r\n\r\n  File \"tx2_run_tvm.py\", line 91, in <module>\r\n    main()\r\n\r\n  File \"tx2_run_tvm.py\", line 88, in main\r\n    run_model(args.model_dir, args.input_fp, args.output_fp, args.warmup, args.run, args.cuda,  try_randin=args.randin)\r\n\r\n  File \"tx2_run_tvm.py\", line 36, in run_model\r\n    run() # not gmodule.run()\r\n\r\n  File \"/home/jetson/tvm/python/tvm/_ffi/_ctypes/function.py\", line 207, in __call__\r\n    raise get_last_ffi_error()\r\n\r\ntvm._ffi.base.TVMError: Traceback (most recent call last):\r\n  [bt] (3) /home/jetson/tvm/build/libtvm.so(TVMFuncCall+0x70) [0x7fad7ccec0]\r\n  [bt] (2) /home/jetson/tvm/build/libtvm.so(std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::detail::PackFuncVoidAddr_<4, tvm::runtime::CUDAWrappedFunc>(tvm::runtime::CUDAWrappedFunc, std::vector<tvm::runtime::detail::ArgConvertCode, std::allocator<tvm::runtime::detail::ArgConvertCode> > const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)+0xe8) [0x7fad850b08]\r\n  [bt] (1) /home/jetson/tvm/build/libtvm.so(tvm::runtime::CUDAWrappedFunc::operator()(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*, void**) const+0x6cc) [0x7fad85093c]\r\n  [bt] (0) /home/jetson/tvm/build/libtvm.so(dmlc::LogMessageFatal::~LogMessageFatal()+0x4c) [0x7facfdebac]\r\n  File \"/home/jetson/tvm/src/runtime/cuda/cuda_module.cc\", line 110\r\n  File \"/home/jetson/tvm/src/runtime/library_module.cc\", line 91\r\nCUDAError: Check failed: ret == 0 (-1 vs. 0) : cuModuleLoadData(&(module_[device_id]), data_.c_str()) failed with error: CUDA_ERROR_INVALID_PTX\r\n\r\nStill haven't found a solution to it. I am runnig it on a Jetson Nano. Please help.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580311728/reactions","total_count":6,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":2},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580339270","html_url":"https://github.com/apache/tvm/pull/4785#issuecomment-580339270","issue_url":"https://api.github.com/repos/apache/tvm/issues/4785","id":580339270,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDMzOTI3MA==","user":{"login":"soiferj","id":3534847,"node_id":"MDQ6VXNlcjM1MzQ4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/3534847?v=4","gravatar_id":"","url":"https://api.github.com/users/soiferj","html_url":"https://github.com/soiferj","followers_url":"https://api.github.com/users/soiferj/followers","following_url":"https://api.github.com/users/soiferj/following{/other_user}","gists_url":"https://api.github.com/users/soiferj/gists{/gist_id}","starred_url":"https://api.github.com/users/soiferj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/soiferj/subscriptions","organizations_url":"https://api.github.com/users/soiferj/orgs","repos_url":"https://api.github.com/users/soiferj/repos","events_url":"https://api.github.com/users/soiferj/events{/privacy}","received_events_url":"https://api.github.com/users/soiferj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T16:33:31Z","updated_at":"2020-01-30T16:33:31Z","author_association":"CONTRIBUTOR","body":"@FrozenGene that’s how I approved the changes yesterday! Above my comment I see the message “soiferj approved these changes”. Feel free to check in. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580339270/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580344098","html_url":"https://github.com/apache/tvm/pull/4785#issuecomment-580344098","issue_url":"https://api.github.com/repos/apache/tvm/issues/4785","id":580344098,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDM0NDA5OA==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T16:43:35Z","updated_at":"2020-01-30T16:43:35Z","author_association":"MEMBER","body":"Thanks @jmorrill @soiferj This is merged now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580344098/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580367317","html_url":"https://github.com/apache/tvm/issues/4758#issuecomment-580367317","issue_url":"https://api.github.com/repos/apache/tvm/issues/4758","id":580367317,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDM2NzMxNw==","user":{"login":"abergeron","id":1002504,"node_id":"MDQ6VXNlcjEwMDI1MDQ=","avatar_url":"https://avatars.githubusercontent.com/u/1002504?v=4","gravatar_id":"","url":"https://api.github.com/users/abergeron","html_url":"https://github.com/abergeron","followers_url":"https://api.github.com/users/abergeron/followers","following_url":"https://api.github.com/users/abergeron/following{/other_user}","gists_url":"https://api.github.com/users/abergeron/gists{/gist_id}","starred_url":"https://api.github.com/users/abergeron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abergeron/subscriptions","organizations_url":"https://api.github.com/users/abergeron/orgs","repos_url":"https://api.github.com/users/abergeron/repos","events_url":"https://api.github.com/users/abergeron/events{/privacy}","received_events_url":"https://api.github.com/users/abergeron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T17:33:48Z","updated_at":"2020-01-30T17:33:48Z","author_association":"CONTRIBUTOR","body":"Fixed by #4783 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580367317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580391605","html_url":"https://github.com/apache/tvm/pull/4497#issuecomment-580391605","issue_url":"https://api.github.com/repos/apache/tvm/issues/4497","id":580391605,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDM5MTYwNQ==","user":{"login":"alexwong","id":11878166,"node_id":"MDQ6VXNlcjExODc4MTY2","avatar_url":"https://avatars.githubusercontent.com/u/11878166?v=4","gravatar_id":"","url":"https://api.github.com/users/alexwong","html_url":"https://github.com/alexwong","followers_url":"https://api.github.com/users/alexwong/followers","following_url":"https://api.github.com/users/alexwong/following{/other_user}","gists_url":"https://api.github.com/users/alexwong/gists{/gist_id}","starred_url":"https://api.github.com/users/alexwong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexwong/subscriptions","organizations_url":"https://api.github.com/users/alexwong/orgs","repos_url":"https://api.github.com/users/alexwong/repos","events_url":"https://api.github.com/users/alexwong/events{/privacy}","received_events_url":"https://api.github.com/users/alexwong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T18:33:14Z","updated_at":"2020-01-30T18:33:14Z","author_association":"CONTRIBUTOR","body":"> @alexwong the CI is not updated even if you update the docker script in this PR (see https://docs.tvm.ai/contribute/pull_request.html#ci-environment). To update for v1.4, first we need to wait for #4756 to be merged.\r\n> \r\n> In the mean time, you can use\r\n> \r\n> ```python\r\n> if torch.__version__ != \"1.2.0\":\r\n>     torch._C._jit_pass_inline(graph)\r\n> ```\r\n> \r\n> to unblock your testing.\r\n\r\nAh, makes sense. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580391605/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580456133","html_url":"https://github.com/apache/tvm/pull/4497#issuecomment-580456133","issue_url":"https://api.github.com/repos/apache/tvm/issues/4497","id":580456133,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDQ1NjEzMw==","user":{"login":"jwfromm","id":9874242,"node_id":"MDQ6VXNlcjk4NzQyNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9874242?v=4","gravatar_id":"","url":"https://api.github.com/users/jwfromm","html_url":"https://github.com/jwfromm","followers_url":"https://api.github.com/users/jwfromm/followers","following_url":"https://api.github.com/users/jwfromm/following{/other_user}","gists_url":"https://api.github.com/users/jwfromm/gists{/gist_id}","starred_url":"https://api.github.com/users/jwfromm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwfromm/subscriptions","organizations_url":"https://api.github.com/users/jwfromm/orgs","repos_url":"https://api.github.com/users/jwfromm/repos","events_url":"https://api.github.com/users/jwfromm/events{/privacy}","received_events_url":"https://api.github.com/users/jwfromm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T20:56:37Z","updated_at":"2020-01-30T20:56:37Z","author_association":"CONTRIBUTOR","body":"@alexwong the new refactored tests look so much better!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580456133/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580493189","html_url":"https://github.com/apache/tvm/pull/4791#issuecomment-580493189","issue_url":"https://api.github.com/repos/apache/tvm/issues/4791","id":580493189,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDQ5MzE4OQ==","user":{"login":"huajsj","id":2281489,"node_id":"MDQ6VXNlcjIyODE0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/2281489?v=4","gravatar_id":"","url":"https://api.github.com/users/huajsj","html_url":"https://github.com/huajsj","followers_url":"https://api.github.com/users/huajsj/followers","following_url":"https://api.github.com/users/huajsj/following{/other_user}","gists_url":"https://api.github.com/users/huajsj/gists{/gist_id}","starred_url":"https://api.github.com/users/huajsj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huajsj/subscriptions","organizations_url":"https://api.github.com/users/huajsj/orgs","repos_url":"https://api.github.com/users/huajsj/repos","events_url":"https://api.github.com/users/huajsj/events{/privacy}","received_events_url":"https://api.github.com/users/huajsj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T22:31:35Z","updated_at":"2020-01-30T22:31:35Z","author_association":"CONTRIBUTOR","body":"Hi @Laurawly @Huyuwei , could you help for the review thanks.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580493189/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580510543","html_url":"https://github.com/apache/tvm/issues/4568#issuecomment-580510543","issue_url":"https://api.github.com/repos/apache/tvm/issues/4568","id":580510543,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDUxMDU0Mw==","user":{"login":"gussmith23","id":1203329,"node_id":"MDQ6VXNlcjEyMDMzMjk=","avatar_url":"https://avatars.githubusercontent.com/u/1203329?v=4","gravatar_id":"","url":"https://api.github.com/users/gussmith23","html_url":"https://github.com/gussmith23","followers_url":"https://api.github.com/users/gussmith23/followers","following_url":"https://api.github.com/users/gussmith23/following{/other_user}","gists_url":"https://api.github.com/users/gussmith23/gists{/gist_id}","starred_url":"https://api.github.com/users/gussmith23/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gussmith23/subscriptions","organizations_url":"https://api.github.com/users/gussmith23/orgs","repos_url":"https://api.github.com/users/gussmith23/repos","events_url":"https://api.github.com/users/gussmith23/events{/privacy}","received_events_url":"https://api.github.com/users/gussmith23/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T23:29:35Z","updated_at":"2020-01-30T23:29:35Z","author_association":"CONTRIBUTOR","body":"I've been trying to get a GNMT model importing into Relay. The ONNX route seems the most pain-free; however, this is a blocking issue!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580510543/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580517249","html_url":"https://github.com/apache/tvm/pull/4497#issuecomment-580517249","issue_url":"https://api.github.com/repos/apache/tvm/issues/4497","id":580517249,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDUxNzI0OQ==","user":{"login":"alexwong","id":11878166,"node_id":"MDQ6VXNlcjExODc4MTY2","avatar_url":"https://avatars.githubusercontent.com/u/11878166?v=4","gravatar_id":"","url":"https://api.github.com/users/alexwong","html_url":"https://github.com/alexwong","followers_url":"https://api.github.com/users/alexwong/followers","following_url":"https://api.github.com/users/alexwong/following{/other_user}","gists_url":"https://api.github.com/users/alexwong/gists{/gist_id}","starred_url":"https://api.github.com/users/alexwong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexwong/subscriptions","organizations_url":"https://api.github.com/users/alexwong/orgs","repos_url":"https://api.github.com/users/alexwong/repos","events_url":"https://api.github.com/users/alexwong/events{/privacy}","received_events_url":"https://api.github.com/users/alexwong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T23:55:46Z","updated_at":"2020-01-30T23:55:46Z","author_association":"CONTRIBUTOR","body":"My local test (using CI container) passes but it fails here due to an out of memory issue so I think it is an issue with not enough memory on whatever machine is running here. Will try some things periodically as I can't really reproduce locally. One more thing, I'm not too sure if we want to keep the specific tests for other data types as it makes the code kind of ugly and I don't see other frontends with similar tests. Perhaps we should move this to another file?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580517249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580517710","html_url":"https://github.com/apache/tvm/pull/4497#issuecomment-580517710","issue_url":"https://api.github.com/repos/apache/tvm/issues/4497","id":580517710,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDUxNzcxMA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-30T23:57:43Z","updated_at":"2020-01-30T23:57:43Z","author_association":"MEMBER","body":"actually I cannot run torchvision tests in this PR on my 8GB laptop. Maybe RAM is the problem?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580517710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580519028","html_url":"https://github.com/apache/tvm/pull/4497#issuecomment-580519028","issue_url":"https://api.github.com/repos/apache/tvm/issues/4497","id":580519028,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDUxOTAyOA==","user":{"login":"alexwong","id":11878166,"node_id":"MDQ6VXNlcjExODc4MTY2","avatar_url":"https://avatars.githubusercontent.com/u/11878166?v=4","gravatar_id":"","url":"https://api.github.com/users/alexwong","html_url":"https://github.com/alexwong","followers_url":"https://api.github.com/users/alexwong/followers","following_url":"https://api.github.com/users/alexwong/following{/other_user}","gists_url":"https://api.github.com/users/alexwong/gists{/gist_id}","starred_url":"https://api.github.com/users/alexwong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexwong/subscriptions","organizations_url":"https://api.github.com/users/alexwong/orgs","repos_url":"https://api.github.com/users/alexwong/repos","events_url":"https://api.github.com/users/alexwong/events{/privacy}","received_events_url":"https://api.github.com/users/alexwong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T00:02:31Z","updated_at":"2020-01-31T00:02:31Z","author_association":"CONTRIBUTOR","body":"> actually I cannot run torchvision tests in this PR on my 8GB laptop. Maybe RAM is the problem?\r\n\r\nYeah I think it's something along that line. Will try to clean up the models after every test to see if it fixes it.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580519028/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580558384","html_url":"https://github.com/apache/tvm/issues/4764#issuecomment-580558384","issue_url":"https://api.github.com/repos/apache/tvm/issues/4764","id":580558384,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDU1ODM4NA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T02:48:28Z","updated_at":"2020-01-31T02:48:28Z","author_association":"MEMBER","body":"given that the mkl part poses accuracy problem, i feel it might be a bad idea to rely on it for testing QNN(see also comment about intel dependency). would be great if we can explore generic alternatives that can test QNN. For the parser part, I think we can start by directly checking alpha equivalence of the graph as well as potentially the comparison to a simulated FP32 version.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580558384/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580592009","html_url":"https://github.com/apache/tvm/issues/4764#issuecomment-580592009","issue_url":"https://api.github.com/repos/apache/tvm/issues/4764","id":580592009,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDU5MjAwOQ==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T05:47:36Z","updated_at":"2020-01-31T05:47:36Z","author_association":"MEMBER","body":"One work around is that we can use the latest build of mxnet-mkl, which has fixed the problem. \r\n```\r\npip install https://apache-mxnet.s3-us-west-2.amazonaws.com/dist/2020-01-30/dist/mxnet_mkl-1.6.0b20200130-py2.py3-none-manylinux1_x86_64.whl\r\n```\r\nSee https://github.com/apache/incubator-mxnet/issues/17479","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580592009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580836237","html_url":"https://github.com/apache/tvm/pull/4787#issuecomment-580836237","issue_url":"https://api.github.com/repos/apache/tvm/issues/4787","id":580836237,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDgzNjIzNw==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T17:43:54Z","updated_at":"2020-01-31T17:43:54Z","author_association":"CONTRIBUTOR","body":"LGTM.\r\n@icemelon9 @yzhliu could you help review and merge? Thanks.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580836237/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580865226","html_url":"https://github.com/apache/tvm/pull/4497#issuecomment-580865226","issue_url":"https://api.github.com/repos/apache/tvm/issues/4497","id":580865226,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDg2NTIyNg==","user":{"login":"jwfromm","id":9874242,"node_id":"MDQ6VXNlcjk4NzQyNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9874242?v=4","gravatar_id":"","url":"https://api.github.com/users/jwfromm","html_url":"https://github.com/jwfromm","followers_url":"https://api.github.com/users/jwfromm/followers","following_url":"https://api.github.com/users/jwfromm/following{/other_user}","gists_url":"https://api.github.com/users/jwfromm/gists{/gist_id}","starred_url":"https://api.github.com/users/jwfromm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwfromm/subscriptions","organizations_url":"https://api.github.com/users/jwfromm/orgs","repos_url":"https://api.github.com/users/jwfromm/repos","events_url":"https://api.github.com/users/jwfromm/events{/privacy}","received_events_url":"https://api.github.com/users/jwfromm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T18:58:35Z","updated_at":"2020-01-31T18:58:35Z","author_association":"CONTRIBUTOR","body":"Reducing all the input sizes might help with memory issues, I don't think theres any need to use big 224x224 test data.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580865226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580873337","html_url":"https://github.com/apache/tvm/pull/4497#issuecomment-580873337","issue_url":"https://api.github.com/repos/apache/tvm/issues/4497","id":580873337,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDg3MzMzNw==","user":{"login":"alexwong","id":11878166,"node_id":"MDQ6VXNlcjExODc4MTY2","avatar_url":"https://avatars.githubusercontent.com/u/11878166?v=4","gravatar_id":"","url":"https://api.github.com/users/alexwong","html_url":"https://github.com/alexwong","followers_url":"https://api.github.com/users/alexwong/followers","following_url":"https://api.github.com/users/alexwong/following{/other_user}","gists_url":"https://api.github.com/users/alexwong/gists{/gist_id}","starred_url":"https://api.github.com/users/alexwong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexwong/subscriptions","organizations_url":"https://api.github.com/users/alexwong/orgs","repos_url":"https://api.github.com/users/alexwong/repos","events_url":"https://api.github.com/users/alexwong/events{/privacy}","received_events_url":"https://api.github.com/users/alexwong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T19:20:26Z","updated_at":"2020-01-31T19:20:26Z","author_association":"CONTRIBUTOR","body":"> Reducing all the input sizes might help with memory issues, I don't think theres any need to use big 224x224 test data.\r\n\r\nI think that would definitely help and worth a try but if single operator models are running into issues then I think larger networks would definitely as well and all of those require larger input sizes. Still looking into some ways to clean up memory.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580873337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580874675","html_url":"https://github.com/apache/tvm/pull/4787#issuecomment-580874675","issue_url":"https://api.github.com/repos/apache/tvm/issues/4787","id":580874675,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDg3NDY3NQ==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T19:23:52Z","updated_at":"2020-01-31T19:23:52Z","author_association":"MEMBER","body":"You should also add `get_pad_tuple2d` to these contrib conv2d ops, e.g., contrib_conv2d_nchwc","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580874675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580881788","html_url":"https://github.com/apache/tvm/pull/4791#issuecomment-580881788","issue_url":"https://api.github.com/repos/apache/tvm/issues/4791","id":580881788,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDg4MTc4OA==","user":{"login":"huajsj","id":2281489,"node_id":"MDQ6VXNlcjIyODE0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/2281489?v=4","gravatar_id":"","url":"https://api.github.com/users/huajsj","html_url":"https://github.com/huajsj","followers_url":"https://api.github.com/users/huajsj/followers","following_url":"https://api.github.com/users/huajsj/following{/other_user}","gists_url":"https://api.github.com/users/huajsj/gists{/gist_id}","starred_url":"https://api.github.com/users/huajsj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huajsj/subscriptions","organizations_url":"https://api.github.com/users/huajsj/orgs","repos_url":"https://api.github.com/users/huajsj/repos","events_url":"https://api.github.com/users/huajsj/events{/privacy}","received_events_url":"https://api.github.com/users/huajsj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T19:43:34Z","updated_at":"2020-01-31T19:43:34Z","author_association":"CONTRIBUTOR","body":"Hi @tmoreau89 , this patch related to let VTA to support Yolov3, if you have time could you help for a review too?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580881788/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580885374","html_url":"https://github.com/apache/tvm/pull/4791#issuecomment-580885374","issue_url":"https://api.github.com/repos/apache/tvm/issues/4791","id":580885374,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDg4NTM3NA==","user":{"login":"huajsj","id":2281489,"node_id":"MDQ6VXNlcjIyODE0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/2281489?v=4","gravatar_id":"","url":"https://api.github.com/users/huajsj","html_url":"https://github.com/huajsj","followers_url":"https://api.github.com/users/huajsj/followers","following_url":"https://api.github.com/users/huajsj/following{/other_user}","gists_url":"https://api.github.com/users/huajsj/gists{/gist_id}","starred_url":"https://api.github.com/users/huajsj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huajsj/subscriptions","organizations_url":"https://api.github.com/users/huajsj/orgs","repos_url":"https://api.github.com/users/huajsj/repos","events_url":"https://api.github.com/users/huajsj/events{/privacy}","received_events_url":"https://api.github.com/users/huajsj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T19:51:29Z","updated_at":"2020-01-31T19:51:29Z","author_association":"CONTRIBUTOR","body":"Hi @jwfromm, if you have time could you help for a review? thanks.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580885374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580886430","html_url":"https://github.com/apache/tvm/pull/4791#issuecomment-580886430","issue_url":"https://api.github.com/repos/apache/tvm/issues/4791","id":580886430,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDg4NjQzMA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T19:54:35Z","updated_at":"2020-01-31T19:54:35Z","author_association":"CONTRIBUTOR","body":"@srkreddy1238 could you help review?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580886430/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580904651","html_url":"https://github.com/apache/tvm/pull/4628#issuecomment-580904651","issue_url":"https://api.github.com/repos/apache/tvm/issues/4628","id":580904651,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDkwNDY1MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T20:46:04Z","updated_at":"2020-01-31T20:46:04Z","author_association":"MEMBER","body":"gentle ping","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580904651/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580939287","html_url":"https://github.com/apache/tvm/pull/4795#issuecomment-580939287","issue_url":"https://api.github.com/repos/apache/tvm/issues/4795","id":580939287,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDkzOTI4Nw==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T22:29:16Z","updated_at":"2020-01-31T22:29:16Z","author_association":"MEMBER","body":"Thanks @anijain2305 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580939287/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580955527","html_url":"https://github.com/apache/tvm/pull/4644#issuecomment-580955527","issue_url":"https://api.github.com/repos/apache/tvm/issues/4644","id":580955527,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDk1NTUyNw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-31T23:30:33Z","updated_at":"2020-01-31T23:30:33Z","author_association":"MEMBER","body":"cc @merrymercy @vinx13 @ZihengJiang @jwfromm please help review if you have time","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580955527/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580966470","html_url":"https://github.com/apache/tvm/pull/4628#issuecomment-580966470","issue_url":"https://api.github.com/repos/apache/tvm/issues/4628","id":580966470,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDk2NjQ3MA==","user":{"login":"wweic","id":594848,"node_id":"MDQ6VXNlcjU5NDg0OA==","avatar_url":"https://avatars.githubusercontent.com/u/594848?v=4","gravatar_id":"","url":"https://api.github.com/users/wweic","html_url":"https://github.com/wweic","followers_url":"https://api.github.com/users/wweic/followers","following_url":"https://api.github.com/users/wweic/following{/other_user}","gists_url":"https://api.github.com/users/wweic/gists{/gist_id}","starred_url":"https://api.github.com/users/wweic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wweic/subscriptions","organizations_url":"https://api.github.com/users/wweic/orgs","repos_url":"https://api.github.com/users/wweic/repos","events_url":"https://api.github.com/users/wweic/events{/privacy}","received_events_url":"https://api.github.com/users/wweic/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-01T00:24:15Z","updated_at":"2020-02-01T00:24:15Z","author_association":"CONTRIBUTOR","body":"@tqchen I'll send new revision soon.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580966470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580976944","html_url":"https://github.com/apache/tvm/pull/4775#issuecomment-580976944","issue_url":"https://api.github.com/repos/apache/tvm/issues/4775","id":580976944,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDk3Njk0NA==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-01T01:43:39Z","updated_at":"2020-02-01T01:43:39Z","author_association":"MEMBER","body":"Thanks @alexgl-github . This is now merged.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580976944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580980672","html_url":"https://github.com/apache/tvm/pull/4799#issuecomment-580980672","issue_url":"https://api.github.com/repos/apache/tvm/issues/4799","id":580980672,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MDk4MDY3Mg==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-01T02:19:10Z","updated_at":"2020-02-01T02:19:10Z","author_association":"MEMBER","body":"this is the error I get if I leave out kernel_size:\r\n```\r\n  File \"/home/masa/projects/dev/tvm/python/tvm/_ffi/_ctypes/function.py\", line 72, in cfun\r\n    rv = local_pyfunc(*pyargs)\r\n  File \"/home/masa/projects/dev/tvm/python/tvm/relay/op/nn/_nn.py\", line 269, in alter_op_layout_conv2d\r\n    return topi.nn.conv2d_alter_layout(attrs, inputs, tinfos, op)\r\n  File \"</home/masa/anaconda3/lib/python3.7/site-packages/decorator.py:decorator-gen-37>\", line 2, in conv2d_alter_layout\r\n  File \"/home/masa/projects/dev/tvm/python/tvm/target.py\", line 382, in dispatch_func\r\n    return dispatch_dict[k](*args, **kwargs)\r\n  File \"/home/masa/projects/dev/tvm/topi/python/topi/x86/conv2d_alter_op.py\", line 45, in _alter_conv2d_layout\r\n    kh, kw = attrs.get_int_tuple(\"kernel_size\")\r\n  File \"/home/masa/projects/dev/tvm/python/tvm/attrs.py\", line 63, in get_int_tuple\r\n    return tuple(x.value for x in self.__getattr__(key))\r\nTypeError: 'NoneType' object is not iterable\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/580980672/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/581036790","html_url":"https://github.com/apache/tvm/pull/4787#issuecomment-581036790","issue_url":"https://api.github.com/repos/apache/tvm/issues/4787","id":581036790,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTAzNjc5MA==","user":{"login":"zxy844288792","id":5164243,"node_id":"MDQ6VXNlcjUxNjQyNDM=","avatar_url":"https://avatars.githubusercontent.com/u/5164243?v=4","gravatar_id":"","url":"https://api.github.com/users/zxy844288792","html_url":"https://github.com/zxy844288792","followers_url":"https://api.github.com/users/zxy844288792/followers","following_url":"https://api.github.com/users/zxy844288792/following{/other_user}","gists_url":"https://api.github.com/users/zxy844288792/gists{/gist_id}","starred_url":"https://api.github.com/users/zxy844288792/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zxy844288792/subscriptions","organizations_url":"https://api.github.com/users/zxy844288792/orgs","repos_url":"https://api.github.com/users/zxy844288792/repos","events_url":"https://api.github.com/users/zxy844288792/events{/privacy}","received_events_url":"https://api.github.com/users/zxy844288792/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-01T14:43:48Z","updated_at":"2020-02-01T14:43:48Z","author_association":"CONTRIBUTOR","body":"> You should also add `get_pad_tuple2d` to these contrib conv2d ops, e.g., contrib_conv2d_nchwc\r\n\r\nI have added get_pad_tuple2d for contrib_conv2d_nchwc and contrib_conv2d_nchwc_int8,  contrib_conv2d_winograd_without_weight_transform and contrib_conv2d_winograd_nnpack_without_weight_transform","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/581036790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/581165443","html_url":"https://github.com/apache/tvm/pull/4801#issuecomment-581165443","issue_url":"https://api.github.com/repos/apache/tvm/issues/4801","id":581165443,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTE2NTQ0Mw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-02T18:57:38Z","updated_at":"2020-02-02T18:57:38Z","author_association":"MEMBER","body":"Thanks @kshitij12345 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/581165443/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]