[{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712878","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712878","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712878,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI4Nzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-22T20:01:11Z","updated_at":"2025-01-21T13:18:01Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dragonsinth\">dragonsinth</a>:</i>\n<p>Prompted by the need to add a new 'maxDepth' field.  The constructors are getting unwieldy.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712878/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713305","html_url":"https://github.com/apache/curator/issues/666#issuecomment-2604713305","issue_url":"https://api.github.com/repos/apache/curator/issues/666","id":2604713305,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMzMDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-22T20:36:29Z","updated_at":"2025-01-21T13:18:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user dragonsinth opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/42\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/42</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-145\" title=\"TreeCache should implement maxDepth\" class=\"issue-link\" data-issue-key=\"CURATOR-145\"><del>CURATOR-145</del></a>: TreeCache should implement maxDepth</p>\n\n<p>    Depends on <a href=\"https://issues.apache.org/jira/browse/CURATOR-144\" title=\"TreeCache should use a builder for advanced options\" class=\"issue-link\" data-issue-key=\"CURATOR-144\"><del>CURATOR-144</del></a></p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/dragonsinth/curator\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/dragonsinth/curator</a> <a href=\"https://issues.apache.org/jira/browse/CURATOR-145\" title=\"TreeCache should implement maxDepth\" class=\"issue-link\" data-issue-key=\"CURATOR-145\"><del>CURATOR-145</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/42.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/42.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #42</p>\n\n<hr />\n<p>commit a8ff472cb0c5e63b7f87a9ebfd22c2c9660d55e5<br/>\nAuthor: Scott Blum <scottb@squareup.com><br/>\nDate:   2014-08-22T20:00:20Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-144\" title=\"TreeCache should use a builder for advanced options\" class=\"issue-link\" data-issue-key=\"CURATOR-144\"><del>CURATOR-144</del></a>: TreeCache.Builder to configure advanced options</p>\n\n<p>commit cdda891614e792bc6a794a81805a3ffd37042f36<br/>\nAuthor: Scott Blum <scottb@squareup.com><br/>\nDate:   2014-08-22T20:34:29Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-145\" title=\"TreeCache should implement maxDepth\" class=\"issue-link\" data-issue-key=\"CURATOR-145\"><del>CURATOR-145</del></a>: TreeCache should implement maxDepth</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712888","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712888","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712888,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI4ODg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-22T21:08:19Z","updated_at":"2025-01-21T13:18:01Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user madrob commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16621573\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16621573</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -65,6 +65,106 @@<br/>\n     {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(TreeCache.class);</p>\n\n<p>    +    public static final class Builder {<br/>\n    +private final CuratorFramework client;<br/>\n    +private final String path;<br/>\n    +private boolean cacheData = true;<br/>\n    +private boolean dataIsCompressed = false;<br/>\n    +private CloseableExecutorService executorService = null;<br/>\n    +<br/>\n    +private Builder(CuratorFramework client, String path) {<br/>\n    +    this.client = client;<br/>\n    +    this.path = path;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Please use ```PathUtils.validatePath``` to make sure that the path is valid before accepting it.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712894","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712894","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712894,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI4OTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-22T21:09:56Z","updated_at":"2025-01-21T13:18:01Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16621647\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16621647</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -65,6 +65,106 @@<br/>\n     {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(TreeCache.class);</p>\n\n<p>    +    public static final class Builder {<br/>\n    +private final CuratorFramework client;<br/>\n    +private final String path;<br/>\n    +private boolean cacheData = true;<br/>\n    +private boolean dataIsCompressed = false;<br/>\n    +private CloseableExecutorService executorService = null;<br/>\n    +<br/>\n    +private Builder(CuratorFramework client, String path) {<br/>\n    +    this.client = client;<br/>\n    +    this.path = path;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Great call</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712901","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712901","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712901,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5MDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-22T21:09:58Z","updated_at":"2025-01-21T13:18:01Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user madrob commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16621651\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16621651</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -356,51 +456,24 @@ public void stateChanged(CuratorFramework client, ConnectionState newState)<br/>\n     }<br/>\n };</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private static final ThreadFactory defaultThreadFactory = ThreadUtils.newThreadFactory(\"TreeCache\");<br/>\n    -</li>\n\t<li>/**</li>\n\t<li>* @param client    the client</li>\n\t<li>* @param path      path to watch</li>\n\t<li>* @param cacheData if true, node contents are cached in addition to the stat</li>\n\t<li>*/</li>\n\t<li>public TreeCache(CuratorFramework client, String path, boolean cacheData)</li>\n\t<li>{\n    -this(client, path, cacheData, false, new CloseableExecutorService(Executors.newSingleThreadExecutor(defaultThreadFactory), true));\n    -    }\n<p>    -</p></li>\n\t<li>/**</li>\n\t<li>* @param clientthe client</li>\n\t<li>* @param path  path to watch</li>\n\t<li>* @param cacheData     if true, node contents are cached in addition to the stat</li>\n\t<li>* @param threadFactory factory to use when creating internal threads</li>\n\t<li>*/</li>\n\t<li>public TreeCache(CuratorFramework client, String path, boolean cacheData, ThreadFactory threadFactory)</li>\n\t<li>{\n    -this(client, path, cacheData, false, new CloseableExecutorService(Executors.newSingleThreadExecutor(threadFactory), true));\n    -    }\n<p>    +    static final ThreadFactory defaultThreadFactory = ThreadUtils.newThreadFactory(\"TreeCache\");</p></li>\n</ul>\n\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* @param client   the client</li>\n\t<li>* @param path     path to watch</li>\n\t<li>* @param cacheDataif true, node contents are cached in addition to the stat</li>\n\t<li>* @param dataIsCompressed if true, data in the path is compressed</li>\n\t<li>* @param threadFactory    factory to use when creating internal threads</li>\n\t<li>*/</li>\n\t<li>public TreeCache(CuratorFramework client, String path, boolean cacheData, boolean dataIsCompressed, ThreadFactory threadFactory)</li>\n\t<li>{\n    -this(client, path, cacheData, dataIsCompressed, new CloseableExecutorService(Executors.newSingleThreadExecutor(threadFactory), true));\n    -    }\n<p>    -</p></li>\n\t<li>/**</li>\n\t<li>* @param client   the client</li>\n\t<li>* @param path     path to watch</li>\n\t<li>* @param cacheDataif true, node contents are cached in addition to the stat</li>\n\t<li>* @param dataIsCompressed if true, data in the path is compressed</li>\n\t<li>* @param executorService  ExecutorService to use for the TreeCache's background thread<br/>\n    +     * Create a TreeCache for the given client and path with default options.<br/>\n    +     *<br/>\n    +     * If the client is namespaced, all operations on the resulting TreeCache will be in terms of<br/>\n    +     * the namespace, including all published events.  The given path is the root at which the<br/>\n    +     * TreeCache will watch and explore.  If no node exists at the given path, the TreeCache will<br/>\n    +     * be initially empty.<br/>\n    +     *<br/>\n    +     * @see #newBuilder(CuratorFramework, String)<br/>\n    +     * @param client the client to use; may be namespaced<br/>\n    +     * @param path the path to the root node to watch/explore; this path need not actually exist on<br/>\n    +     *     the server<br/>\n  */</li>\n\t<li>public TreeCache(CuratorFramework client, String path, boolean cacheData, boolean dataIsCompressed, final ExecutorService executorService)<br/>\n    +    public TreeCache(CuratorFramework client, String path)\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Is it confusing to have both a public constructor and a builder available? I think I'd prefer to expose only the builder.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/53120933","html_url":"https://github.com/apache/curator/pull/41#issuecomment-53120933","issue_url":"https://api.github.com/repos/apache/curator/issues/41","id":53120933,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMTIwOTMz","user":{"login":"madrob","id":1592330,"node_id":"MDQ6VXNlcjE1OTIzMzA=","avatar_url":"https://avatars.githubusercontent.com/u/1592330?v=4","gravatar_id":"","url":"https://api.github.com/users/madrob","html_url":"https://github.com/madrob","followers_url":"https://api.github.com/users/madrob/followers","following_url":"https://api.github.com/users/madrob/following{/other_user}","gists_url":"https://api.github.com/users/madrob/gists{/gist_id}","starred_url":"https://api.github.com/users/madrob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/madrob/subscriptions","organizations_url":"https://api.github.com/users/madrob/orgs","repos_url":"https://api.github.com/users/madrob/repos","events_url":"https://api.github.com/users/madrob/events{/privacy}","received_events_url":"https://api.github.com/users/madrob/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-22T21:11:22Z","updated_at":"2014-08-22T21:11:22Z","author_association":"CONTRIBUTOR","body":"None of the unit tests use the builder, it would be good to get some coverage on it just in case.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/53120933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712909","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712909","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712909,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5MDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-22T21:11:24Z","updated_at":"2025-01-21T13:18:02Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user madrob commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#issuecomment-53120933\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#issuecomment-53120933</a></p>\n\n<p>    None of the unit tests use the builder, it would be good to get some coverage on it just in case.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712919","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712919","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712919,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5MTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-22T21:16:14Z","updated_at":"2025-01-21T13:18:02Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16621936\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16621936</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -356,51 +456,24 @@ public void stateChanged(CuratorFramework client, ConnectionState newState)<br/>\n     }<br/>\n };</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private static final ThreadFactory defaultThreadFactory = ThreadUtils.newThreadFactory(\"TreeCache\");<br/>\n    -</li>\n\t<li>/**</li>\n\t<li>* @param client    the client</li>\n\t<li>* @param path      path to watch</li>\n\t<li>* @param cacheData if true, node contents are cached in addition to the stat</li>\n\t<li>*/</li>\n\t<li>public TreeCache(CuratorFramework client, String path, boolean cacheData)</li>\n\t<li>{\n    -this(client, path, cacheData, false, new CloseableExecutorService(Executors.newSingleThreadExecutor(defaultThreadFactory), true));\n    -    }\n<p>    -</p></li>\n\t<li>/**</li>\n\t<li>* @param clientthe client</li>\n\t<li>* @param path  path to watch</li>\n\t<li>* @param cacheData     if true, node contents are cached in addition to the stat</li>\n\t<li>* @param threadFactory factory to use when creating internal threads</li>\n\t<li>*/</li>\n\t<li>public TreeCache(CuratorFramework client, String path, boolean cacheData, ThreadFactory threadFactory)</li>\n\t<li>{\n    -this(client, path, cacheData, false, new CloseableExecutorService(Executors.newSingleThreadExecutor(threadFactory), true));\n    -    }\n<p>    +    static final ThreadFactory defaultThreadFactory = ThreadUtils.newThreadFactory(\"TreeCache\");</p></li>\n</ul>\n\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* @param client   the client</li>\n\t<li>* @param path     path to watch</li>\n\t<li>* @param cacheDataif true, node contents are cached in addition to the stat</li>\n\t<li>* @param dataIsCompressed if true, data in the path is compressed</li>\n\t<li>* @param threadFactory    factory to use when creating internal threads</li>\n\t<li>*/</li>\n\t<li>public TreeCache(CuratorFramework client, String path, boolean cacheData, boolean dataIsCompressed, ThreadFactory threadFactory)</li>\n\t<li>{\n    -this(client, path, cacheData, dataIsCompressed, new CloseableExecutorService(Executors.newSingleThreadExecutor(threadFactory), true));\n    -    }\n<p>    -</p></li>\n\t<li>/**</li>\n\t<li>* @param client   the client</li>\n\t<li>* @param path     path to watch</li>\n\t<li>* @param cacheDataif true, node contents are cached in addition to the stat</li>\n\t<li>* @param dataIsCompressed if true, data in the path is compressed</li>\n\t<li>* @param executorService  ExecutorService to use for the TreeCache's background thread<br/>\n    +     * Create a TreeCache for the given client and path with default options.<br/>\n    +     *<br/>\n    +     * If the client is namespaced, all operations on the resulting TreeCache will be in terms of<br/>\n    +     * the namespace, including all published events.  The given path is the root at which the<br/>\n    +     * TreeCache will watch and explore.  If no node exists at the given path, the TreeCache will<br/>\n    +     * be initially empty.<br/>\n    +     *<br/>\n    +     * @see #newBuilder(CuratorFramework, String)<br/>\n    +     * @param client the client to use; may be namespaced<br/>\n    +     * @param path the path to the root node to watch/explore; this path need not actually exist on<br/>\n    +     *     the server<br/>\n  */</li>\n\t<li>public TreeCache(CuratorFramework client, String path, boolean cacheData, boolean dataIsCompressed, final ExecutorService executorService)<br/>\n    +    public TreeCache(CuratorFramework client, String path)\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    It's a convenience for the happy path where you don't need any extra options.</p>\n\n<p>    `new TreeCache(client, \"/\")` vs. `TreeCache.newBuilder(client, \"/\").build()`</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712927","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712927","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712927,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5Mjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-22T22:12:09Z","updated_at":"2025-01-21T13:18:02Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user madrob commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16624162\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16624162</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -356,51 +456,24 @@ public void stateChanged(CuratorFramework client, ConnectionState newState)<br/>\n     }<br/>\n };</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private static final ThreadFactory defaultThreadFactory = ThreadUtils.newThreadFactory(\"TreeCache\");<br/>\n    -</li>\n\t<li>/**</li>\n\t<li>* @param client    the client</li>\n\t<li>* @param path      path to watch</li>\n\t<li>* @param cacheData if true, node contents are cached in addition to the stat</li>\n\t<li>*/</li>\n\t<li>public TreeCache(CuratorFramework client, String path, boolean cacheData)</li>\n\t<li>{\n    -this(client, path, cacheData, false, new CloseableExecutorService(Executors.newSingleThreadExecutor(defaultThreadFactory), true));\n    -    }\n<p>    -</p></li>\n\t<li>/**</li>\n\t<li>* @param clientthe client</li>\n\t<li>* @param path  path to watch</li>\n\t<li>* @param cacheData     if true, node contents are cached in addition to the stat</li>\n\t<li>* @param threadFactory factory to use when creating internal threads</li>\n\t<li>*/</li>\n\t<li>public TreeCache(CuratorFramework client, String path, boolean cacheData, ThreadFactory threadFactory)</li>\n\t<li>{\n    -this(client, path, cacheData, false, new CloseableExecutorService(Executors.newSingleThreadExecutor(threadFactory), true));\n    -    }\n<p>    +    static final ThreadFactory defaultThreadFactory = ThreadUtils.newThreadFactory(\"TreeCache\");</p></li>\n</ul>\n\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* @param client   the client</li>\n\t<li>* @param path     path to watch</li>\n\t<li>* @param cacheDataif true, node contents are cached in addition to the stat</li>\n\t<li>* @param dataIsCompressed if true, data in the path is compressed</li>\n\t<li>* @param threadFactory    factory to use when creating internal threads</li>\n\t<li>*/</li>\n\t<li>public TreeCache(CuratorFramework client, String path, boolean cacheData, boolean dataIsCompressed, ThreadFactory threadFactory)</li>\n\t<li>{\n    -this(client, path, cacheData, dataIsCompressed, new CloseableExecutorService(Executors.newSingleThreadExecutor(threadFactory), true));\n    -    }\n<p>    -</p></li>\n\t<li>/**</li>\n\t<li>* @param client   the client</li>\n\t<li>* @param path     path to watch</li>\n\t<li>* @param cacheDataif true, node contents are cached in addition to the stat</li>\n\t<li>* @param dataIsCompressed if true, data in the path is compressed</li>\n\t<li>* @param executorService  ExecutorService to use for the TreeCache's background thread<br/>\n    +     * Create a TreeCache for the given client and path with default options.<br/>\n    +     *<br/>\n    +     * If the client is namespaced, all operations on the resulting TreeCache will be in terms of<br/>\n    +     * the namespace, including all published events.  The given path is the root at which the<br/>\n    +     * TreeCache will watch and explore.  If no node exists at the given path, the TreeCache will<br/>\n    +     * be initially empty.<br/>\n    +     *<br/>\n    +     * @see #newBuilder(CuratorFramework, String)<br/>\n    +     * @param client the client to use; may be namespaced<br/>\n    +     * @param path the path to the root node to watch/explore; this path need not actually exist on<br/>\n    +     *     the server<br/>\n  */</li>\n\t<li>public TreeCache(CuratorFramework client, String path, boolean cacheData, boolean dataIsCompressed, final ExecutorService executorService)<br/>\n    +    public TreeCache(CuratorFramework client, String path)\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    That makes sense. The added javadoc is probably enough to direct people towards the builder if they need something more advanced, so unless this turns out to be an issue later, then we don't need to worry about it.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712927/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712932","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712932","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712932,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5MzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-24T23:28:35Z","updated_at":"2025-01-21T13:18:02Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16638791\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16638791</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -65,6 +67,106 @@<br/>\n     {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(TreeCache.class);</p>\n\n<p>    +    public static final class Builder {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    nit: Formatting</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712938","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712938","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712938,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5Mzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-24T23:28:44Z","updated_at":"2025-01-21T13:18:02Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16638793\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16638793</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -65,6 +67,106 @@<br/>\n     {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(TreeCache.class);</p>\n\n<p>    +    public static final class Builder {<br/>\n    +private final CuratorFramework client;<br/>\n    +private final String path;<br/>\n    +private boolean cacheData = true;<br/>\n    +private boolean dataIsCompressed = false;<br/>\n    +private CloseableExecutorService executorService = null;<br/>\n    +<br/>\n    +private Builder(CuratorFramework client, String path) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    nit: Formatting</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712938/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712942","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712942","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712942,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5NDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-24T23:30:03Z","updated_at":"2025-01-21T13:18:02Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16638810\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16638810</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -65,6 +67,106 @@<br/>\n     {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(TreeCache.class);</p>\n\n<p>    +    public static final class Builder {<br/>\n    +private final CuratorFramework client;<br/>\n    +private final String path;<br/>\n    +private boolean cacheData = true;<br/>\n    +private boolean dataIsCompressed = false;<br/>\n    +private CloseableExecutorService executorService = null;<br/>\n    +<br/>\n    +private Builder(CuratorFramework client, String path) </p>\n{\n    +    this.client = checkNotNull(client);\n    +    this.path = validatePath(path);\n    +}\n<p>    +<br/>\n    +/**<br/>\n    + * Builds the </p>\n{@link TreeCache} based on configured values.<br/>\n    + */<br/>\n    +public TreeCache build()<br/>\n    +{<br/>\n    +    CloseableExecutorService executor = executorService;<br/>\n    +    if ( executor == null )<br/>\n    +    {\n    +executor = new CloseableExecutorService(Executors.newSingleThreadExecutor(defaultThreadFactory));\n    +    }<br/>\n    +    return new TreeCache(client, path, cacheData, dataIsCompressed, executor);<br/>\n    +}<br/>\n    +<br/>\n    +/**<br/>\n    + * Builds the {@link TreeCache}\n<p> based on configured values, and starts it.<br/>\n    + */<br/>\n    +public TreeCache buildAndStart() throws Exception<br/>\n    +</p>\n{\n    +    TreeCache treeCache = build();\n    +    treeCache.start();\n    +    return treeCache;\n    +}\n<p>    +<br/>\n    +/**<br/>\n    + * Sets whether or not to cache byte data per node; default </p>\n{@code true}\n<p>.<br/>\n    + */<br/>\n    +public Builder setCacheData(boolean cacheData)<br/>\n    +</p>\n{\n    +    this.cacheData = cacheData;\n    +    return this;\n    +}\n<p>    +<br/>\n    +/**<br/>\n    + * Sets whether or to decompress node data; default </p>\n{@code false}\n<p>.<br/>\n    + */<br/>\n    +public Builder setDataIsCompressed(boolean dataIsCompressed)<br/>\n    +</p>\n{\n    +    this.dataIsCompressed = dataIsCompressed;\n    +    return this;\n    +}\n<p>    +<br/>\n    +/**<br/>\n    + * Sets the executor to publish events; a default executor will be created if not specified.<br/>\n    + */<br/>\n    +public Builder setExecutor(ThreadFactory threadFactory)<br/>\n    +</p>\n{\n    +    return setExecutor(new CloseableExecutorService(Executors.newSingleThreadExecutor(threadFactory)));\n    +}\n<p>    +<br/>\n    +/**<br/>\n    + * Sets the executor to publish events; a default executor will be created if not specified.<br/>\n    + */<br/>\n    +public Builder setExecutor(ExecutorService executorService)<br/>\n    +{<br/>\n    +    if (executorService instanceof CloseableExecutorService) </p>\n{\n    +return setExecutor((CloseableExecutorService) executorService);\n    +    }\n<p> else </p>\n{\n    +return setExecutor(new CloseableExecutorService(executorService));\n    +    }\n<p>    &#8212; End diff &#8211;</p>\n\n<p>    nit: formatting</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712947","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712947","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712947,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5NDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-24T23:30:21Z","updated_at":"2025-01-21T13:18:02Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16638814\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16638814</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -65,6 +67,106 @@<br/>\n     {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(TreeCache.class);</p>\n\n<p>    +    public static final class Builder {<br/>\n    +private final CuratorFramework client;<br/>\n    +private final String path;<br/>\n    +private boolean cacheData = true;<br/>\n    +private boolean dataIsCompressed = false;<br/>\n    +private CloseableExecutorService executorService = null;<br/>\n    +<br/>\n    +private Builder(CuratorFramework client, String path) </p>\n{\n    +    this.client = checkNotNull(client);\n    +    this.path = validatePath(path);\n    +}\n<p>    +<br/>\n    +/**<br/>\n    + * Builds the </p>\n{@link TreeCache} based on configured values.<br/>\n    + */<br/>\n    +public TreeCache build()<br/>\n    +{<br/>\n    +    CloseableExecutorService executor = executorService;<br/>\n    +    if ( executor == null )<br/>\n    +    {\n    +executor = new CloseableExecutorService(Executors.newSingleThreadExecutor(defaultThreadFactory));\n    +    }<br/>\n    +    return new TreeCache(client, path, cacheData, dataIsCompressed, executor);<br/>\n    +}<br/>\n    +<br/>\n    +/**<br/>\n    + * Builds the {@link TreeCache}\n<p> based on configured values, and starts it.<br/>\n    + */<br/>\n    +public TreeCache buildAndStart() throws Exception<br/>\n    +</p>\n{\n    +    TreeCache treeCache = build();\n    +    treeCache.start();\n    +    return treeCache;\n    +}\n<p>    +<br/>\n    +/**<br/>\n    + * Sets whether or not to cache byte data per node; default </p>\n{@code true}\n<p>.<br/>\n    + */<br/>\n    +public Builder setCacheData(boolean cacheData)<br/>\n    +</p>\n{\n    +    this.cacheData = cacheData;\n    +    return this;\n    +}\n<p>    +<br/>\n    +/**<br/>\n    + * Sets whether or to decompress node data; default </p>\n{@code false}\n<p>.<br/>\n    + */<br/>\n    +public Builder setDataIsCompressed(boolean dataIsCompressed)<br/>\n    +</p>\n{\n    +    this.dataIsCompressed = dataIsCompressed;\n    +    return this;\n    +}\n<p>    +<br/>\n    +/**<br/>\n    + * Sets the executor to publish events; a default executor will be created if not specified.<br/>\n    + */<br/>\n    +public Builder setExecutor(ThreadFactory threadFactory)<br/>\n    +</p>\n{\n    +    return setExecutor(new CloseableExecutorService(Executors.newSingleThreadExecutor(threadFactory)));\n    +}\n<p>    +<br/>\n    +/**<br/>\n    + * Sets the executor to publish events; a default executor will be created if not specified.<br/>\n    + */<br/>\n    +public Builder setExecutor(ExecutorService executorService)<br/>\n    +{<br/>\n    +    if (executorService instanceof CloseableExecutorService) </p>\n{\n    +return setExecutor((CloseableExecutorService) executorService);\n    +    }\n<p> else </p>\n{\n    +return setExecutor(new CloseableExecutorService(executorService));\n    +    }\n<p>    +}<br/>\n    +<br/>\n    +/**<br/>\n    + * Sets the executor to publish events; a default executor will be created if not specified.<br/>\n    + */<br/>\n    +public Builder setExecutor(CloseableExecutorService executorService)<br/>\n    +</p>\n{\n    +    this.executorService = checkNotNull(executorService);\n    +    return this;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Create a TreeCache builder for the given client and path to configure advanced options.<br/>\n    +     *<br/>\n    +     * If the client is namespaced, all operations on the resulting TreeCache will be in terms of<br/>\n    +     * the namespace, including all published events.  The given path is the root at which the<br/>\n    +     * TreeCache will watch and explore.  If no node exists at the given path, the TreeCache will<br/>\n    +     * be initially empty.<br/>\n    +     *<br/>\n    +     * @param client the client to use; may be namespaced<br/>\n    +     * @param path the path to the root node to watch/explore; this path need not actually exist on<br/>\n    +     *     the server<br/>\n    +     * @return a new builder<br/>\n    +     */<br/>\n    +    public static Builder newBuilder(CuratorFramework client, String path) {<br/>\n    +return new Builder(client, path);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    nit: formatting</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/53213724","html_url":"https://github.com/apache/curator/pull/41#issuecomment-53213724","issue_url":"https://api.github.com/repos/apache/curator/issues/41","id":53213724,"node_id":"MDEyOklzc3VlQ29tbWVudDUzMjEzNzI0","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-24T23:35:14Z","updated_at":"2014-08-24T23:35:14Z","author_association":"CONTRIBUTOR","body":"A few minor formatting nit picks. I agree with Mike that it would be good to have some unit tests that are using the builder. Other than that, all looks good.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/53213724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712951","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712951","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712951,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5NTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-24T23:35:15Z","updated_at":"2025-01-21T13:18:02Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#issuecomment-53213724\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#issuecomment-53213724</a></p>\n\n<p>    A few minor formatting nit picks. I agree with Mike that it would be good to have some unit tests that are using the builder. Other than that, all looks good.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/53421096","html_url":"https://github.com/apache/curator/pull/38#issuecomment-53421096","issue_url":"https://api.github.com/repos/apache/curator/issues/38","id":53421096,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNDIxMDk2","user":{"login":"karkum","id":1425446,"node_id":"MDQ6VXNlcjE0MjU0NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1425446?v=4","gravatar_id":"","url":"https://api.github.com/users/karkum","html_url":"https://github.com/karkum","followers_url":"https://api.github.com/users/karkum/followers","following_url":"https://api.github.com/users/karkum/following{/other_user}","gists_url":"https://api.github.com/users/karkum/gists{/gist_id}","starred_url":"https://api.github.com/users/karkum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karkum/subscriptions","organizations_url":"https://api.github.com/users/karkum/orgs","repos_url":"https://api.github.com/users/karkum/repos","events_url":"https://api.github.com/users/karkum/events{/privacy}","received_events_url":"https://api.github.com/users/karkum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-26T13:39:36Z","updated_at":"2014-08-26T13:39:36Z","author_association":"CONTRIBUTOR","body":"@Randgalt, have you had a chance to look over this again?\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/53421096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604703773","html_url":"https://github.com/apache/curator/issues/605#issuecomment-2604703773","issue_url":"https://api.github.com/repos/apache/curator/issues/605","id":2604703773,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MDM3NzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-26T13:39:38Z","updated_at":"2025-01-21T13:14:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user karkum commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/38#issuecomment-53421096\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/38#issuecomment-53421096</a></p>\n\n<p>    @Randgalt, have you had a chance to look over this again?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604703773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604703780","html_url":"https://github.com/apache/curator/issues/605#issuecomment-2604703780","issue_url":"https://api.github.com/repos/apache/curator/issues/605","id":2604703780,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MDM3ODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-26T17:59:35Z","updated_at":"2025-01-21T13:14:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/38\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/38</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604703780/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/53509753","html_url":"https://github.com/apache/curator/pull/41#issuecomment-53509753","issue_url":"https://api.github.com/repos/apache/curator/issues/41","id":53509753,"node_id":"MDEyOklzc3VlQ29tbWVudDUzNTA5NzUz","user":{"login":"dragonsinth","id":1919660,"node_id":"MDQ6VXNlcjE5MTk2NjA=","avatar_url":"https://avatars.githubusercontent.com/u/1919660?v=4","gravatar_id":"","url":"https://api.github.com/users/dragonsinth","html_url":"https://github.com/dragonsinth","followers_url":"https://api.github.com/users/dragonsinth/followers","following_url":"https://api.github.com/users/dragonsinth/following{/other_user}","gists_url":"https://api.github.com/users/dragonsinth/gists{/gist_id}","starred_url":"https://api.github.com/users/dragonsinth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragonsinth/subscriptions","organizations_url":"https://api.github.com/users/dragonsinth/orgs","repos_url":"https://api.github.com/users/dragonsinth/repos","events_url":"https://api.github.com/users/dragonsinth/events{/privacy}","received_events_url":"https://api.github.com/users/dragonsinth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-26T23:52:42Z","updated_at":"2014-08-26T23:52:42Z","author_association":"CONTRIBUTOR","body":"Made several fixes:\n- formatting\n- removed MyTreeCache in favor of using helper methods in tests that call the main constructor and builder; see what you think\n- a couple of test additions\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/53509753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712957","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712957","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712957,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5NTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-26T23:52:43Z","updated_at":"2025-01-21T13:18:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#issuecomment-53509753\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#issuecomment-53509753</a></p>\n\n<p>    Made several fixes:</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>formatting</li>\n\t<li>removed MyTreeCache in favor of using helper methods in tests that call the main constructor and builder; see what you think</li>\n\t<li>a couple of test additions</li>\n</ul>\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712957/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712966","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712966","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712966,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5NjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-26T23:53:22Z","updated_at":"2025-01-21T13:18:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16750582\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16750582</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -461,11 +546,16 @@ public void close()<br/>\n  *</p>\n<ul>\n\t<li>@return listenable<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>public ListenerContainer<TreeCacheListener> getListenable()<br/>\n    +    public Listenable<TreeCacheListener> getListenable()\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    this was wrong all along, a public caller shouldn't be able to e.g. fire listeners</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712972","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712972","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712972,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5NzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-26T23:54:55Z","updated_at":"2025-01-21T13:18:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16750643\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16750643</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -580,13 +670,33 @@ public Void apply(TreeCacheListener listener)<br/>\n }</p>\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* Default behavior is just to log the exception</li>\n\t<li>*</li>\n\t<li>* @param e the exception<br/>\n    +     * Send an exception to any listeners, or else log the error if there are none.<br/>\n  */</li>\n\t<li>protected void handleException(Throwable e)<br/>\n    +    private void handleException(final Throwable e)<br/>\n {</li>\n\t<li>LOG.error(\"\", e);<br/>\n    +if ( errorListeners.size() == 0 )<br/>\n    +\n{\n    +    LOG.error(\"\", e);\n    +}\n<p>    +else<br/>\n    +{<br/>\n    +    errorListeners.forEach(new Function<UnhandledErrorListener, Void>()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public Void apply(UnhandledErrorListener listener)<br/>\n    +</p>\n<div class=\"error\"><span class=\"error\">Unknown macro: {    +    try    +    {\n    +listener.unhandledError(\"\", e);\n    +    }    +    catch ( Exception e )    +    {\n    +LOG.error(\"Exception handling exception\", e);\n    +    }    +    return null;    +}</span> </div>\n<p>    +    });<br/>\n    +}</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    What do you guys think about using an UnhandledErrorListener this way?  Seems nice to be able to handle background errors programmatically instead of always going to the logger.  I needed this for testing anyway, because I'm tired of having to subclass TreeCache and override.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712979","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712979","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712979,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5Nzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-28T14:48:44Z","updated_at":"2025-01-21T13:18:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16843738\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16843738</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -461,11 +546,16 @@ public void close()<br/>\n  *</p>\n<ul>\n\t<li>@return listenable<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>public ListenerContainer<TreeCacheListener> getListenable()<br/>\n    +    public Listenable<TreeCacheListener> getListenable()\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I don't understand this change. There can be multiple listeners. </p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712986","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712986","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712986,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5ODY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-28T14:50:15Z","updated_at":"2025-01-21T13:18:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16843839\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16843839</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -580,13 +670,33 @@ public Void apply(TreeCacheListener listener)<br/>\n }</p>\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* Default behavior is just to log the exception</li>\n\t<li>*</li>\n\t<li>* @param e the exception<br/>\n    +     * Send an exception to any listeners, or else log the error if there are none.<br/>\n  */</li>\n\t<li>protected void handleException(Throwable e)<br/>\n    +    private void handleException(final Throwable e)<br/>\n {</li>\n\t<li>LOG.error(\"\", e);<br/>\n    +if ( errorListeners.size() == 0 )<br/>\n    +\n{\n    +    LOG.error(\"\", e);\n    +}\n<p>    +else<br/>\n    +{<br/>\n    +    errorListeners.forEach(new Function<UnhandledErrorListener, Void>()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public Void apply(UnhandledErrorListener listener)<br/>\n    +</p>\n<div class=\"error\"><span class=\"error\">Unknown macro: {    +    try    +    {\n    +listener.unhandledError(\"\", e);\n    +    }    +    catch ( Exception e )    +    {\n    +LOG.error(\"Exception handling exception\", e);\n    +    }    +    return null;    +}</span> </div>\n<p>    +    });<br/>\n    +}</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I'd rather see a global change for something like this instead of each recipe doing it.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712992","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712992","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712992,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5OTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-28T14:51:13Z","updated_at":"2025-01-21T13:18:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16843905\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16843905</a></p>\n\n<p>    &#8212; Diff: curator-client/src/main/java/org/apache/curator/utils/CloseableExecutorService.java &#8212;<br/>\n    @@ -116,7 +116,7 @@ public CloseableExecutorService(ExecutorService executorService)<br/>\n  */<br/>\n public CloseableExecutorService(ExecutorService executorService, boolean shutdownOnClose)<br/>\n {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>this.executorService = executorService;<br/>\n    +this.executorService = Preconditions.checkNotNull(executorService);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Add a message to the checkNotNull. It helps in debugging. The canonical form is:</p>\n\n<p>    ```java<br/>\n    foo = Preconditions.checkNotNull(foo, \"foo cannot be null\");<br/>\n    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712992/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712998","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604712998","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604712998,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTI5OTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-28T16:41:35Z","updated_at":"2025-01-21T13:18:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16851772\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16851772</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -461,11 +546,16 @@ public void close()<br/>\n  *</p>\n<ul>\n\t<li>@return listenable<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>public ListenerContainer<TreeCacheListener> getListenable()<br/>\n    +    public Listenable<TreeCacheListener> getListenable()\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    It's just a surface area reduction.  Returning Listenable only allows a caller to add and remove listeners (which you want).  Returning the subtype ListenableContainer would let a caller manipulate the collection, i.e. size(), clear(), and forEach().  How weird would it be for an external caller to be able to do `cache.getListenable().forEach(...)`?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604712998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713003","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713003","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713003,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwMDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-28T16:44:07Z","updated_at":"2025-01-21T13:18:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16851906\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16851906</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -580,13 +670,33 @@ public Void apply(TreeCacheListener listener)<br/>\n }</p>\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* Default behavior is just to log the exception</li>\n\t<li>*</li>\n\t<li>* @param e the exception<br/>\n    +     * Send an exception to any listeners, or else log the error if there are none.<br/>\n  */</li>\n\t<li>protected void handleException(Throwable e)<br/>\n    +    private void handleException(final Throwable e)<br/>\n {</li>\n\t<li>LOG.error(\"\", e);<br/>\n    +if ( errorListeners.size() == 0 )<br/>\n    +\n{\n    +    LOG.error(\"\", e);\n    +}\n<p>    +else<br/>\n    +{<br/>\n    +    errorListeners.forEach(new Function<UnhandledErrorListener, Void>()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public Void apply(UnhandledErrorListener listener)<br/>\n    +</p>\n<div class=\"error\"><span class=\"error\">Unknown macro: {    +    try    +    {\n    +listener.unhandledError(\"\", e);\n    +    }    +    catch ( Exception e )    +    {\n    +LOG.error(\"Exception handling exception\", e);\n    +    }    +    return null;    +}</span> </div>\n<p>    +    });<br/>\n    +}</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Which part, having unhandledError listeners attached to a recipe?  Logging to error only when there are no listeners?</p>\n\n<p>    Another option I considered is somehow making the recipe fire the unhandled error through the CuratorFramework's unhandledError listeners.  But I wasn't sure if that was a good idea or not.  WDTY?</p>\n\n<p>    My immediate need is to ensure during tests that no unhandled errors fire.  I was doing that via subclass but I was unhappy about that approach since I want to use the Builder in tests.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713003/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713010","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713010","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713010,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwMTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-28T16:45:14Z","updated_at":"2025-01-21T13:18:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16851967\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16851967</a></p>\n\n<p>    &#8212; Diff: curator-client/src/main/java/org/apache/curator/utils/CloseableExecutorService.java &#8212;<br/>\n    @@ -116,7 +116,7 @@ public CloseableExecutorService(ExecutorService executorService)<br/>\n  */<br/>\n public CloseableExecutorService(ExecutorService executorService, boolean shutdownOnClose)<br/>\n {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>this.executorService = executorService;<br/>\n    +this.executorService = Preconditions.checkNotNull(executorService);\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    done</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713010/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713014","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713014","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713014,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwMTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-28T16:45:33Z","updated_at":"2025-01-21T13:18:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16851987\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16851987</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -461,11 +546,16 @@ public void close()<br/>\n  *</p>\n<ul>\n\t<li>@return listenable<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>public ListenerContainer<TreeCacheListener> getListenable()<br/>\n    +    public Listenable<TreeCacheListener> getListenable()\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Good point. We should do this everywhere.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713020","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713020","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713020,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwMjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-28T16:47:09Z","updated_at":"2025-01-21T13:18:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16852092\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16852092</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -65,6 +69,112 @@<br/>\n     {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(TreeCache.class);</p>\n\n<p>    +    public static final class Builder<br/>\n    +    {<br/>\n    +private final CuratorFramework client;<br/>\n    +private final String path;<br/>\n    +private boolean cacheData = true;<br/>\n    +private boolean dataIsCompressed = false;<br/>\n    +private CloseableExecutorService executorService = null;<br/>\n    +<br/>\n    +private Builder(CuratorFramework client, String path)<br/>\n    +</p>\n{\n    +    this.client = checkNotNull(client);\n    +    this.path = validatePath(path);\n    +}\n<p>    +<br/>\n    +/**<br/>\n    + * Builds the </p>\n{@link TreeCache} based on configured values.<br/>\n    + */<br/>\n    +public TreeCache build()<br/>\n    +{<br/>\n    +    CloseableExecutorService executor = executorService;<br/>\n    +    if ( executor == null )<br/>\n    +    {\n    +executor = new CloseableExecutorService(Executors.newSingleThreadExecutor(defaultThreadFactory));\n    +    }<br/>\n    +    return new TreeCache(client, path, cacheData, dataIsCompressed, executor);<br/>\n    +}<br/>\n    +<br/>\n    +/**<br/>\n    + * Builds the {@link TreeCache}\n<p> based on configured values, and starts it.<br/>\n    + */<br/>\n    +public TreeCache buildAndStart() throws Exception<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This seems like an unnecessary API bloat. Users can just do build().start();</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713020/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713029","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713029","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713029,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwMjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-08-28T17:08:09Z","updated_at":"2025-01-21T13:18:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16853269\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16853269</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -65,6 +69,112 @@<br/>\n     {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(TreeCache.class);</p>\n\n<p>    +    public static final class Builder<br/>\n    +    {<br/>\n    +private final CuratorFramework client;<br/>\n    +private final String path;<br/>\n    +private boolean cacheData = true;<br/>\n    +private boolean dataIsCompressed = false;<br/>\n    +private CloseableExecutorService executorService = null;<br/>\n    +<br/>\n    +private Builder(CuratorFramework client, String path)<br/>\n    +</p>\n{\n    +    this.client = checkNotNull(client);\n    +    this.path = validatePath(path);\n    +}\n<p>    +<br/>\n    +/**<br/>\n    + * Builds the </p>\n{@link TreeCache} based on configured values.<br/>\n    + */<br/>\n    +public TreeCache build()<br/>\n    +{<br/>\n    +    CloseableExecutorService executor = executorService;<br/>\n    +    if ( executor == null )<br/>\n    +    {\n    +executor = new CloseableExecutorService(Executors.newSingleThreadExecutor(defaultThreadFactory));\n    +    }<br/>\n    +    return new TreeCache(client, path, cacheData, dataIsCompressed, executor);<br/>\n    +}<br/>\n    +<br/>\n    +/**<br/>\n    + * Builds the {@link TreeCache}\n<p> based on configured values, and starts it.<br/>\n    + */<br/>\n    +public TreeCache buildAndStart() throws Exception<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Maybe start should `return this` so it's just `foo = builder.build().start()`?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713033","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713033","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713033,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwMzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-01T03:12:53Z","updated_at":"2025-01-21T13:18:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16939659\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16939659</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -580,13 +670,33 @@ public Void apply(TreeCacheListener listener)<br/>\n }</p>\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* Default behavior is just to log the exception</li>\n\t<li>*</li>\n\t<li>* @param e the exception<br/>\n    +     * Send an exception to any listeners, or else log the error if there are none.<br/>\n  */</li>\n\t<li>protected void handleException(Throwable e)<br/>\n    +    private void handleException(final Throwable e)<br/>\n {</li>\n\t<li>LOG.error(\"\", e);<br/>\n    +if ( errorListeners.size() == 0 )<br/>\n    +\n{\n    +    LOG.error(\"\", e);\n    +}\n<p>    +else<br/>\n    +{<br/>\n    +    errorListeners.forEach(new Function<UnhandledErrorListener, Void>()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public Void apply(UnhandledErrorListener listener)<br/>\n    +</p>\n<div class=\"error\"><span class=\"error\">Unknown macro: {    +    try    +    {\n    +listener.unhandledError(\"\", e);\n    +    }    +    catch ( Exception e )    +    {\n    +LOG.error(\"Exception handling exception\", e);\n    +    }    +    return null;    +}</span> </div>\n<p>    +    });<br/>\n    +}</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I don't think that funneling unhandled errors through the CuratorFramework's listeners would work super well. Because there's not going to any real way of identifying where they came from, beyond logging them, I'm not sure what else you could do with them.</p>\n\n<p>    Maybe attaching UnhnadlerErrorListener's to each recipe is the way to go.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713037","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713037","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713037,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwMzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-01T16:20:21Z","updated_at":"2025-01-21T13:18:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16960356\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16960356</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -580,13 +670,33 @@ public Void apply(TreeCacheListener listener)<br/>\n }</p>\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* Default behavior is just to log the exception</li>\n\t<li>*</li>\n\t<li>* @param e the exception<br/>\n    +     * Send an exception to any listeners, or else log the error if there are none.<br/>\n  */</li>\n\t<li>protected void handleException(Throwable e)<br/>\n    +    private void handleException(final Throwable e)<br/>\n {</li>\n\t<li>LOG.error(\"\", e);<br/>\n    +if ( errorListeners.size() == 0 )<br/>\n    +\n{\n    +    LOG.error(\"\", e);\n    +}\n<p>    +else<br/>\n    +{<br/>\n    +    errorListeners.forEach(new Function<UnhandledErrorListener, Void>()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public Void apply(UnhandledErrorListener listener)<br/>\n    +</p>\n<div class=\"error\"><span class=\"error\">Unknown macro: {    +    try    +    {\n    +listener.unhandledError(\"\", e);\n    +    }    +    catch ( Exception e )    +    {\n    +LOG.error(\"Exception handling exception\", e);\n    +    }    +    return null;    +}</span> </div>\n<p>    +    });<br/>\n    +}</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    That was kind of my thought.  If we're not sure, I could make this package-protected for now.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713037/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713040","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713040","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713040,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwNDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-01T23:36:04Z","updated_at":"2025-01-21T13:18:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r16966080\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r16966080</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -580,13 +670,33 @@ public Void apply(TreeCacheListener listener)<br/>\n }</p>\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* Default behavior is just to log the exception</li>\n\t<li>*</li>\n\t<li>* @param e the exception<br/>\n    +     * Send an exception to any listeners, or else log the error if there are none.<br/>\n  */</li>\n\t<li>protected void handleException(Throwable e)<br/>\n    +    private void handleException(final Throwable e)<br/>\n {</li>\n\t<li>LOG.error(\"\", e);<br/>\n    +if ( errorListeners.size() == 0 )<br/>\n    +\n{\n    +    LOG.error(\"\", e);\n    +}\n<p>    +else<br/>\n    +{<br/>\n    +    errorListeners.forEach(new Function<UnhandledErrorListener, Void>()<br/>\n    +    {<br/>\n    +@Override<br/>\n    +public Void apply(UnhandledErrorListener listener)<br/>\n    +</p>\n<div class=\"error\"><span class=\"error\">Unknown macro: {    +    try    +    {\n    +listener.unhandledError(\"\", e);\n    +    }    +    catch ( Exception e )    +    {\n    +LOG.error(\"Exception handling exception\", e);\n    +    }    +    return null;    +}</span> </div>\n<p>    +    });<br/>\n    +}</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    That sounds OK to me for now. I'm not sure how a global change for all recipes would look. Either a util implementation of the handleException() that you've implemented, or a base class for all recipes that holds a reference to error listeners and implements the handleException() method.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713040/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/54388042","html_url":"https://github.com/apache/curator/pull/41#issuecomment-54388042","issue_url":"https://api.github.com/repos/apache/curator/issues/41","id":54388042,"node_id":"MDEyOklzc3VlQ29tbWVudDU0Mzg4MDQy","user":{"login":"dragonsinth","id":1919660,"node_id":"MDQ6VXNlcjE5MTk2NjA=","avatar_url":"https://avatars.githubusercontent.com/u/1919660?v=4","gravatar_id":"","url":"https://api.github.com/users/dragonsinth","html_url":"https://github.com/dragonsinth","followers_url":"https://api.github.com/users/dragonsinth/followers","following_url":"https://api.github.com/users/dragonsinth/following{/other_user}","gists_url":"https://api.github.com/users/dragonsinth/gists{/gist_id}","starred_url":"https://api.github.com/users/dragonsinth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragonsinth/subscriptions","organizations_url":"https://api.github.com/users/dragonsinth/orgs","repos_url":"https://api.github.com/users/dragonsinth/repos","events_url":"https://api.github.com/users/dragonsinth/events{/privacy}","received_events_url":"https://api.github.com/users/dragonsinth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-04T00:18:52Z","updated_at":"2014-09-04T00:18:52Z","author_association":"CONTRIBUTOR","body":"Ping.  Any outstanding issues?\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/54388042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713048","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713048","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713048,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwNDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-04T00:18:54Z","updated_at":"2025-01-21T13:18:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#issuecomment-54388042\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#issuecomment-54388042</a></p>\n\n<p>    Ping.  Any outstanding issues?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/54388198","html_url":"https://github.com/apache/curator/pull/41#issuecomment-54388198","issue_url":"https://api.github.com/repos/apache/curator/issues/41","id":54388198,"node_id":"MDEyOklzc3VlQ29tbWVudDU0Mzg4MTk4","user":{"login":"Randgalt","id":264818,"node_id":"MDQ6VXNlcjI2NDgxOA==","avatar_url":"https://avatars.githubusercontent.com/u/264818?v=4","gravatar_id":"","url":"https://api.github.com/users/Randgalt","html_url":"https://github.com/Randgalt","followers_url":"https://api.github.com/users/Randgalt/followers","following_url":"https://api.github.com/users/Randgalt/following{/other_user}","gists_url":"https://api.github.com/users/Randgalt/gists{/gist_id}","starred_url":"https://api.github.com/users/Randgalt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Randgalt/subscriptions","organizations_url":"https://api.github.com/users/Randgalt/orgs","repos_url":"https://api.github.com/users/Randgalt/repos","events_url":"https://api.github.com/users/Randgalt/events{/privacy}","received_events_url":"https://api.github.com/users/Randgalt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-04T00:21:08Z","updated_at":"2014-09-04T00:21:08Z","author_association":"MEMBER","body":"Sorry - I just started a new job and haven’t had much time. I’ll look more soon.\n\n-JZ\n\nOn September 3, 2014 at 7:18:54 PM, Scott Blum (notifications@github.com) wrote:\n\nPing. Any outstanding issues?\n\n—\nReply to this email directly or view it on GitHub.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/54388198/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713054","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713054","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713054,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwNTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-04T00:21:11Z","updated_at":"2025-01-21T13:18:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#issuecomment-54388198\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#issuecomment-54388198</a></p>\n\n<p>    Sorry - I just started a new job and haven’t had much time. I’ll look more soon.</p>\n\n<p>    -JZ</p>\n\n\n<p>    On September 3, 2014 at 7:18:54 PM, Scott Blum (notifications@github.com) wrote:</p>\n\n<p>    Ping. Any outstanding issues?</p>\n\n<p>    —<br/>\n    Reply to this email directly or view it on GitHub.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713058","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713058","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713058,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwNTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-09T22:28:10Z","updated_at":"2025-01-21T13:18:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user madrob commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r17332515\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r17332515</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -65,6 +70,102 @@<br/>\n     {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(TreeCache.class);</p>\n\n<p>    +    public static final class Builder<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Minor: can we rename this to something more specific like TreeCacheBuilder?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713058/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713062","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713062","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713062,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwNjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-09T22:31:12Z","updated_at":"2025-01-21T13:18:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user madrob commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r17332712\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r17332712</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/BaseTestTreeCache.java &#8212;<br/>\n    @@ -57,22 +60,38 @@ public void childEvent(CuratorFramework client, TreeCacheEvent event) throws Exc<br/>\n };</p>\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* A TreeCache that records exceptions and automatically adds a listener.<br/>\n    +     * Ensures that tests don't cause any background errors.<br/>\n  */</li>\n\t<li>class MyTreeCache extends TreeCache<br/>\n    +    final UnhandledErrorListener errorListener = new UnhandledErrorListener()<br/>\n {<br/>\n    -</li>\n\t<li>MyTreeCache(CuratorFramework client, String path, boolean cacheData)</li>\n\t<li>{\n    -    super(client, path, cacheData);\n    -    getListenable().addListener(eventListener);\n    -}\n<p>    -<br/>\n     @Override</p></li>\n\t<li>protected void handleException(Throwable e)<br/>\n    +public void unhandledError(String message, Throwable e)\n     {\n    -    handleBackgroundException(e);\n    +    hadBackgroundException.set(true);\n    +    e.printStackTrace(System.err);\n     }\n<p>    +    };<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Construct a TreeCache that records exceptions and automatically listens.<br/>\n    +     */<br/>\n    +    protected TreeCache newTreeCacheWithListeners(CuratorFramework client, String path)</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    This can call buildWithListeners, since they do nearly the same thing already.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/55046217","html_url":"https://github.com/apache/curator/pull/41#issuecomment-55046217","issue_url":"https://api.github.com/repos/apache/curator/issues/41","id":55046217,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MDQ2MjE3","user":{"login":"madrob","id":1592330,"node_id":"MDQ6VXNlcjE1OTIzMzA=","avatar_url":"https://avatars.githubusercontent.com/u/1592330?v=4","gravatar_id":"","url":"https://api.github.com/users/madrob","html_url":"https://github.com/madrob","followers_url":"https://api.github.com/users/madrob/followers","following_url":"https://api.github.com/users/madrob/following{/other_user}","gists_url":"https://api.github.com/users/madrob/gists{/gist_id}","starred_url":"https://api.github.com/users/madrob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/madrob/subscriptions","organizations_url":"https://api.github.com/users/madrob/orgs","repos_url":"https://api.github.com/users/madrob/repos","events_url":"https://api.github.com/users/madrob/events{/privacy}","received_events_url":"https://api.github.com/users/madrob/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-09T22:32:21Z","updated_at":"2014-09-09T22:32:21Z","author_association":"CONTRIBUTOR","body":"Minor: before committing to master, I think it would be good to either squash everything into a single commit or edit the commit messages to all include the associated JIRA. Not sure if there is an adopted project wide policy relating to this though.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/55046217/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713068","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713068","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713068,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwNjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-09T22:32:22Z","updated_at":"2025-01-21T13:18:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user madrob commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#issuecomment-55046217\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#issuecomment-55046217</a></p>\n\n<p>    Minor: before committing to master, I think it would be good to either squash everything into a single commit or edit the commit messages to all include the associated JIRA. Not sure if there is an adopted project wide policy relating to this though.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713068/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604711328","html_url":"https://github.com/apache/curator/issues/655#issuecomment-2604711328","issue_url":"https://api.github.com/repos/apache/curator/issues/655","id":2604711328,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTEzMjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-09T22:54:05Z","updated_at":"2025-01-21T13:17:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=benjamin.jaton\">benjamin.jaton</a>:</i>\n<p>I like it <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604711328/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/55050094","html_url":"https://github.com/apache/curator/pull/41#issuecomment-55050094","issue_url":"https://api.github.com/repos/apache/curator/issues/41","id":55050094,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MDUwMDk0","user":{"login":"Randgalt","id":264818,"node_id":"MDQ6VXNlcjI2NDgxOA==","avatar_url":"https://avatars.githubusercontent.com/u/264818?v=4","gravatar_id":"","url":"https://api.github.com/users/Randgalt","html_url":"https://github.com/Randgalt","followers_url":"https://api.github.com/users/Randgalt/followers","following_url":"https://api.github.com/users/Randgalt/following{/other_user}","gists_url":"https://api.github.com/users/Randgalt/gists{/gist_id}","starred_url":"https://api.github.com/users/Randgalt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Randgalt/subscriptions","organizations_url":"https://api.github.com/users/Randgalt/orgs","repos_url":"https://api.github.com/users/Randgalt/repos","events_url":"https://api.github.com/users/Randgalt/events{/privacy}","received_events_url":"https://api.github.com/users/Randgalt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-09T23:06:56Z","updated_at":"2014-09-09T23:06:56Z","author_association":"MEMBER","body":"I'm not a fan of squash commits. I guess I'm pedantic and want to see all the commits. See if another committer wants to do this.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/55050094/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713071","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713071","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713071,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwNzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-09T23:06:58Z","updated_at":"2025-01-21T13:18:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#issuecomment-55050094\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#issuecomment-55050094</a></p>\n\n<p>    I'm not a fan of squash commits. I guess I'm pedantic and want to see all the commits. See if another committer wants to do this.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713071/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/55050374","html_url":"https://github.com/apache/curator/pull/41#issuecomment-55050374","issue_url":"https://api.github.com/repos/apache/curator/issues/41","id":55050374,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MDUwMzc0","user":{"login":"madrob","id":1592330,"node_id":"MDQ6VXNlcjE1OTIzMzA=","avatar_url":"https://avatars.githubusercontent.com/u/1592330?v=4","gravatar_id":"","url":"https://api.github.com/users/madrob","html_url":"https://github.com/madrob","followers_url":"https://api.github.com/users/madrob/followers","following_url":"https://api.github.com/users/madrob/following{/other_user}","gists_url":"https://api.github.com/users/madrob/gists{/gist_id}","starred_url":"https://api.github.com/users/madrob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/madrob/subscriptions","organizations_url":"https://api.github.com/users/madrob/orgs","repos_url":"https://api.github.com/users/madrob/repos","events_url":"https://api.github.com/users/madrob/events{/privacy}","received_events_url":"https://api.github.com/users/madrob/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-09T23:10:21Z","updated_at":"2014-09-09T23:10:21Z","author_association":"CONTRIBUTOR","body":"All commits is fine. I'm pedantic and like to see JIRAs referenced in all commit messages. Fair compromise?\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/55050374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713074","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713074","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713074,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwNzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-09T23:10:24Z","updated_at":"2025-01-21T13:18:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user madrob commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#issuecomment-55050374\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#issuecomment-55050374</a></p>\n\n<p>    All commits is fine. I'm pedantic and like to see JIRAs referenced in all commit messages. Fair compromise?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713074/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/55051530","html_url":"https://github.com/apache/curator/pull/41#issuecomment-55051530","issue_url":"https://api.github.com/repos/apache/curator/issues/41","id":55051530,"node_id":"MDEyOklzc3VlQ29tbWVudDU1MDUxNTMw","user":{"login":"Randgalt","id":264818,"node_id":"MDQ6VXNlcjI2NDgxOA==","avatar_url":"https://avatars.githubusercontent.com/u/264818?v=4","gravatar_id":"","url":"https://api.github.com/users/Randgalt","html_url":"https://github.com/Randgalt","followers_url":"https://api.github.com/users/Randgalt/followers","following_url":"https://api.github.com/users/Randgalt/following{/other_user}","gists_url":"https://api.github.com/users/Randgalt/gists{/gist_id}","starred_url":"https://api.github.com/users/Randgalt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Randgalt/subscriptions","organizations_url":"https://api.github.com/users/Randgalt/orgs","repos_url":"https://api.github.com/users/Randgalt/repos","events_url":"https://api.github.com/users/Randgalt/events{/privacy}","received_events_url":"https://api.github.com/users/Randgalt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-09T23:25:34Z","updated_at":"2014-09-09T23:25:34Z","author_association":"MEMBER","body":"If the branch is named the same as the Jira it's not necessary to put the Jira in the commit.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/55051530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713079","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713079","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713079,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwNzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-09T23:25:38Z","updated_at":"2025-01-21T13:18:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#issuecomment-55051530\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#issuecomment-55051530</a></p>\n\n<p>    If the branch is named the same as the Jira it's not necessary to put the Jira in the commit.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604711336","html_url":"https://github.com/apache/curator/issues/655#issuecomment-2604711336","issue_url":"https://api.github.com/repos/apache/curator/issues/655","id":2604711336,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTEzMzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-10T01:26:44Z","updated_at":"2025-01-21T13:17:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dragonsinth\">dragonsinth</a>:</i>\n<p>I gotta say, I think it makes the most sense if LOST/RECONNECTED are in fact tied to session loss and establishing a new session.  That's how I interpreted it, because that's how PathChildrenCache and NodeCache appear to use it in practice.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604711336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604711340","html_url":"https://github.com/apache/curator/issues/655#issuecomment-2604711340","issue_url":"https://api.github.com/repos/apache/curator/issues/655","id":2604711340,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTEzNDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-10T01:35:55Z","updated_at":"2025-01-21T13:17:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>I'm OK with refining the meaning but I think it should be part of a major version increment as it's a big change.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604711340/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713645","html_url":"https://github.com/apache/curator/issues/667#issuecomment-2604713645","issue_url":"https://api.github.com/repos/apache/curator/issues/667","id":2604713645,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTM2NDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-11T13:36:03Z","updated_at":"2025-01-21T13:18:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=petroff\">petroff</a>:</i>\n<p>a patch for service discovery reRegistering old registrations on RECONNECT</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713725","html_url":"https://github.com/apache/curator/issues/668#issuecomment-2604713725","issue_url":"https://api.github.com/repos/apache/curator/issues/668","id":2604713725,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTM3MjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-11T23:03:39Z","updated_at":"2025-01-21T13:18:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user madrob opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/44\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/44</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-147\" title=\"Avoid internal use of deprecated APIs\" class=\"issue-link\" data-issue-key=\"CURATOR-147\"><del>CURATOR-147</del></a> Remove use of deprecated APIs</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/madrob/curator\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/madrob/curator</a> <a href=\"https://issues.apache.org/jira/browse/CURATOR-147\" title=\"Avoid internal use of deprecated APIs\" class=\"issue-link\" data-issue-key=\"CURATOR-147\"><del>CURATOR-147</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/44.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/44.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #44</p>\n\n<hr />\n<p>commit 8929343e22e51d1c109fe4143327d3c3958077f3<br/>\nAuthor: Mike Drob <mdrob@cloudera.com><br/>\nDate:   2014-09-11T23:03:06Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-147\" title=\"Avoid internal use of deprecated APIs\" class=\"issue-link\" data-issue-key=\"CURATOR-147\"><del>CURATOR-147</del></a> Remove use of deprecated APIs</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713725/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713850","html_url":"https://github.com/apache/curator/issues/669#issuecomment-2604713850","issue_url":"https://api.github.com/repos/apache/curator/issues/669","id":2604713850,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTM4NTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-12T02:51:01Z","updated_at":"2025-01-21T13:18:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>This is intentional. Not all combinations are supported. As each fluent method is added, the available additional methods is limited to what is supported. compressed() and withProtection() should, however, be supported. If you could list some others, they can be added.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713850/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713855","html_url":"https://github.com/apache/curator/issues/669#issuecomment-2604713855","issue_url":"https://api.github.com/repos/apache/curator/issues/669","id":2604713855,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTM4NTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-12T02:56:26Z","updated_at":"2025-01-21T13:18:26Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mdrob\">mdrob</a>:</i>\n<p>I understand that not all combinations make sense. However, I don't understand how <tt>withMode().withACL()</tt> would be any different from <tt>withACL().withMode()</tt> from the caller's perspective.</p>\n\n<p>I'll do a more thorough sweep of the API tomorrow or possibly next week. Once we establish which ones are intentionally left out, I'll be happy to submit a PR to add in the rest if that's the cleanest solution.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/55550099","html_url":"https://github.com/apache/curator/pull/44#issuecomment-55550099","issue_url":"https://api.github.com/repos/apache/curator/issues/44","id":55550099,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTUwMDk5","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-15T03:33:49Z","updated_at":"2014-09-15T03:33:49Z","author_association":"CONTRIBUTOR","body":"Looks good to me. I noticed that there are another couple of places where the isStarted() and nonNamespaceView() are being used on the underlying CuratorFrameworkFactoryImpl class, so I have fixed these up also.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/55550099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713733","html_url":"https://github.com/apache/curator/issues/668#issuecomment-2604713733","issue_url":"https://api.github.com/repos/apache/curator/issues/668","id":2604713733,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTM3MzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-15T03:33:51Z","updated_at":"2025-01-21T13:18:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/44#issuecomment-55550099\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/44#issuecomment-55550099</a></p>\n\n<p>    Looks good to me. I noticed that there are another couple of places where the isStarted() and nonNamespaceView() are being used on the underlying CuratorFrameworkFactoryImpl class, so I have fixed these up also.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713733/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713737","html_url":"https://github.com/apache/curator/issues/668#issuecomment-2604713737","issue_url":"https://api.github.com/repos/apache/curator/issues/668","id":2604713737,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTM3Mzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-15T07:03:09Z","updated_at":"2025-01-21T13:18:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/44\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/44</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/56056722","html_url":"https://github.com/apache/curator/pull/45#issuecomment-56056722","issue_url":"https://api.github.com/repos/apache/curator/issues/45","id":56056722,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDU2NzIy","user":{"login":"madrob","id":1592330,"node_id":"MDQ6VXNlcjE1OTIzMzA=","avatar_url":"https://avatars.githubusercontent.com/u/1592330?v=4","gravatar_id":"","url":"https://api.github.com/users/madrob","html_url":"https://github.com/madrob","followers_url":"https://api.github.com/users/madrob/followers","following_url":"https://api.github.com/users/madrob/following{/other_user}","gists_url":"https://api.github.com/users/madrob/gists{/gist_id}","starred_url":"https://api.github.com/users/madrob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/madrob/subscriptions","organizations_url":"https://api.github.com/users/madrob/orgs","repos_url":"https://api.github.com/users/madrob/repos","events_url":"https://api.github.com/users/madrob/events{/privacy}","received_events_url":"https://api.github.com/users/madrob/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-18T15:35:49Z","updated_at":"2014-09-18T15:35:49Z","author_association":"CONTRIBUTOR","body":"Is there a JIRA associated with this PR? If not, can you please create one at https://issues.apache.org/jira/browse/CURATOR\n\nThanks!\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/56056722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/56057303","html_url":"https://github.com/apache/curator/pull/45#issuecomment-56057303","issue_url":"https://api.github.com/repos/apache/curator/issues/45","id":56057303,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDU3MzAz","user":{"login":"madrob","id":1592330,"node_id":"MDQ6VXNlcjE1OTIzMzA=","avatar_url":"https://avatars.githubusercontent.com/u/1592330?v=4","gravatar_id":"","url":"https://api.github.com/users/madrob","html_url":"https://github.com/madrob","followers_url":"https://api.github.com/users/madrob/followers","following_url":"https://api.github.com/users/madrob/following{/other_user}","gists_url":"https://api.github.com/users/madrob/gists{/gist_id}","starred_url":"https://api.github.com/users/madrob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/madrob/subscriptions","organizations_url":"https://api.github.com/users/madrob/orgs","repos_url":"https://api.github.com/users/madrob/repos","events_url":"https://api.github.com/users/madrob/events{/privacy}","received_events_url":"https://api.github.com/users/madrob/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-18T15:39:20Z","updated_at":"2014-09-18T15:39:20Z","author_association":"CONTRIBUTOR","body":"Can you add a unit test that demonstrates the bug? I recently went through and added null checks for a lot of the recipes and would be interested to see why this one should be exempt (not saying either way is right, speaking from curiosity here).\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/56057303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/56082216","html_url":"https://github.com/apache/curator/pull/45#issuecomment-56082216","issue_url":"https://api.github.com/repos/apache/curator/issues/45","id":56082216,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDgyMjE2","user":{"login":"bonifaido","id":23779,"node_id":"MDQ6VXNlcjIzNzc5","avatar_url":"https://avatars.githubusercontent.com/u/23779?v=4","gravatar_id":"","url":"https://api.github.com/users/bonifaido","html_url":"https://github.com/bonifaido","followers_url":"https://api.github.com/users/bonifaido/followers","following_url":"https://api.github.com/users/bonifaido/following{/other_user}","gists_url":"https://api.github.com/users/bonifaido/gists{/gist_id}","starred_url":"https://api.github.com/users/bonifaido/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bonifaido/subscriptions","organizations_url":"https://api.github.com/users/bonifaido/orgs","repos_url":"https://api.github.com/users/bonifaido/repos","events_url":"https://api.github.com/users/bonifaido/events{/privacy}","received_events_url":"https://api.github.com/users/bonifaido/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-18T18:32:06Z","updated_at":"2014-09-18T18:37:04Z","author_association":"NONE","body":"Running TestPathChildrenCache gives me:\n\n```\njava.lang.ExceptionInInitializerError\n    at org.apache.curator.framework.recipes.cache.TestPathChildrenCache.testAsyncInitialPopulation(TestPathChildrenCache.java:195)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)\n    at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)\n    at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)\n    at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)\n    at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)\n    at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)\n    at org.testng.TestRunner.privateRun(TestRunner.java:767)\n    at org.testng.TestRunner.run(TestRunner.java:617)\n    at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)\n    at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)\n    at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)\n    at org.testng.SuiteRunner.run(SuiteRunner.java:254)\n    at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n    at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\n    at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)\n    at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)\n    at org.testng.TestNG.run(TestNG.java:1057)\n    at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)\n    at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)\n    at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)\n    at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)\nCaused by: java.lang.IllegalArgumentException: Path cannot be null\n    at org.apache.curator.utils.PathUtils.validatePath(PathUtils.java:48)\n    at org.apache.curator.framework.recipes.cache.ChildData.<init>(ChildData.java:34)\n    at org.apache.curator.framework.recipes.cache.PathChildrenCache.<clinit>(PathChildrenCache.java:90)\n    ... 31 more\n```\n\nJIRA issue: https://issues.apache.org/jira/browse/CURATOR-149\nThis happens on master (not in a released version).\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/56082216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/56135351","html_url":"https://github.com/apache/curator/pull/45#issuecomment-56135351","issue_url":"https://api.github.com/repos/apache/curator/issues/45","id":56135351,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MTM1MzUx","user":{"login":"madrob","id":1592330,"node_id":"MDQ6VXNlcjE1OTIzMzA=","avatar_url":"https://avatars.githubusercontent.com/u/1592330?v=4","gravatar_id":"","url":"https://api.github.com/users/madrob","html_url":"https://github.com/madrob","followers_url":"https://api.github.com/users/madrob/followers","following_url":"https://api.github.com/users/madrob/following{/other_user}","gists_url":"https://api.github.com/users/madrob/gists{/gist_id}","starred_url":"https://api.github.com/users/madrob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/madrob/subscriptions","organizations_url":"https://api.github.com/users/madrob/orgs","repos_url":"https://api.github.com/users/madrob/repos","events_url":"https://api.github.com/users/madrob/events{/privacy}","received_events_url":"https://api.github.com/users/madrob/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-19T04:59:24Z","updated_at":"2014-09-19T04:59:24Z","author_association":"CONTRIBUTOR","body":"Very cool, thanks. Based on your test failure, I ran a git bisect and confirmed that the issue came from commit 05254afe - exactly the one where I added all of the validation. Don't know why it didn't get caught right away... probably missed a maven clean or something like that.\n\nIt seems like there are two possible solutions here - remove the null check (which you did), or change NULL_CHILD_DATA to not use a null path (maybe empty string is acceptable here?). It looks like there is nothing special about the object being used, it's just a placeholder. I think I prefer the the second solution, because then users are still protected from undefined/unexpected behaviour, like NPE if they call compareTo().\n\nThoughts?\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/56135351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/56144966","html_url":"https://github.com/apache/curator/pull/45#issuecomment-56144966","issue_url":"https://api.github.com/repos/apache/curator/issues/45","id":56144966,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MTQ0OTY2","user":{"login":"bonifaido","id":23779,"node_id":"MDQ6VXNlcjIzNzc5","avatar_url":"https://avatars.githubusercontent.com/u/23779?v=4","gravatar_id":"","url":"https://api.github.com/users/bonifaido","html_url":"https://github.com/bonifaido","followers_url":"https://api.github.com/users/bonifaido/followers","following_url":"https://api.github.com/users/bonifaido/following{/other_user}","gists_url":"https://api.github.com/users/bonifaido/gists{/gist_id}","starred_url":"https://api.github.com/users/bonifaido/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bonifaido/subscriptions","organizations_url":"https://api.github.com/users/bonifaido/orgs","repos_url":"https://api.github.com/users/bonifaido/repos","events_url":"https://api.github.com/users/bonifaido/events{/privacy}","received_events_url":"https://api.github.com/users/bonifaido/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-19T07:22:58Z","updated_at":"2014-09-19T07:22:58Z","author_association":"NONE","body":"I prefer the second one as well, taken into account that PatChildrenCache might be deprecated in favor of TreeCache (as I heard :)), and also the null-check makes sense there.\n\nThis change broke some tests in the Queue recipes as well, I tried to fix those in another branch: https://github.com/bonifaido/curator/compare/travis\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/56144966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/56319616","html_url":"https://github.com/apache/curator/pull/45#issuecomment-56319616","issue_url":"https://api.github.com/repos/apache/curator/issues/45","id":56319616,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MzE5NjE2","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-09-22T01:07:41Z","updated_at":"2014-09-22T01:07:41Z","author_association":"CONTRIBUTOR","body":"Was wondering why there were heaps of test failures on the master branch! Thanks for the patch. I was thinking of leaving the path validation stuff in the ChildData class, and just modifying the NULL_CHILD_DATA to use the root path (empty path doesn't validate). Does that sound reasonable to you guys?\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/56319616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714245","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714245","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714245,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQyNDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-02T18:05:14Z","updated_at":"2025-01-21T13:18:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>New APIs added</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714250","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714250","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714250,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQyNTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-02T19:42:26Z","updated_at":"2025-01-21T13:18:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dragonsinth\">dragonsinth</a>:</i>\n<p>I can't find the pull request.  How do I comment on the diff?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714254","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714254","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714254,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQyNTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-02T19:45:38Z","updated_at":"2025-01-21T13:18:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>Ha! I used executive privilege and didn't do a PR. Bad form on my part. I should've done a PR. Feel free to change anything though.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714258","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714258","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714258,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQyNTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-02T19:48:55Z","updated_at":"2025-01-21T13:18:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dragonsinth\">dragonsinth</a>:</i>\n<p>Thanks, much better!  I did have one gut reaction on the API though.  This struck me as a little weird:</p>\n\n<p>trySetCount(VersionedValue<Integer> newCount)</p>\n\n<p>It's subtle so let me try to explain.  Assume that you do a read and get (1, \"foo\").  In order to set a new value, you need to manually construct a versioned value (1, \"bar\") to attempt to do a write.  If it succeeds, you end up with a new versioned value (2, \"bar\").  It's actually kind of weird that a versioned value (1, \"bar\") ever existed, since this isn't a real versioned value at all, it's just a mutation attempt.</p>\n\n<p>I would find it less weird if the API was:</p>\n\n<p>trySetCount(VersionedValue<Integer> previous, Integer newCount)</p>\n\n<p>Then, you have the nice invariant that a VersionedValue never exists unless it's a real server state.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714258/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714261","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714261","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714261,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQyNjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-02T19:50:45Z","updated_at":"2025-01-21T13:18:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>I'm OK with that. Change it in both SharedCount and SharedValue please. </p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714265","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714265","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714265,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQyNjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-02T19:53:54Z","updated_at":"2025-01-21T13:18:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>Although, the VersionedValue in the argument is no longer needed. Instead, it should be:</p>\n\n<p>trySetCount(int expectedVersion, int newCount)</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714265/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714273","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714273","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714273,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQyNzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-02T19:59:04Z","updated_at":"2025-01-21T13:18:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dragonsinth\">dragonsinth</a>:</i>\n<p>Yeah, I considered that, but have a mild preference for passing in the previous versioned value, for two reasons:</p>\n\n<p>1) The API becomes crystal clear as far as what you must pass in-- a value previously returned from a reason.<br/>\n2) Specifically for SharedCount, you avoid the potential for argument order mixup with (int, int) and conflating version with value.</p>\n\n<p>Mild preference though, if you have a strong pref for the second formulation we could do it that way.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714284","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714284","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714284,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQyODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-02T20:03:40Z","updated_at":"2025-01-21T13:18:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=randgalt\">randgalt</a>:</i>\n<p>Are you going to actually use the passed in value for comparison as well? If so, then it's OK otherwise not.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713084","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713084","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713084,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMwODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-02T20:23:09Z","updated_at":"2025-01-21T13:18:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r18364761\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r18364761</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/cache/TreeCache.java &#8212;<br/>\n    @@ -65,6 +70,102 @@<br/>\n     {<br/>\n private static final Logger LOG = LoggerFactory.getLogger(TreeCache.class);</p>\n\n<p>    +    public static final class Builder<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    That's kind of weird since it's then TreeCache.TreeCacheBuilder instead of just TreeCache.Builder.  I see \"Builder\" as a static inner class much more often, for example in Guava (ImmutableList.Builder) and protoc-generated java code.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713084/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713113","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713113","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713113,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMxMTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-02T20:24:18Z","updated_at":"2025-01-21T13:18:06Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#discussion_r18364840\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#discussion_r18364840</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/test/java/org/apache/curator/framework/recipes/cache/BaseTestTreeCache.java &#8212;<br/>\n    @@ -57,22 +60,38 @@ public void childEvent(CuratorFramework client, TreeCacheEvent event) throws Exc<br/>\n };</p>\n\n<p> /**</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>* A TreeCache that records exceptions and automatically adds a listener.<br/>\n    +     * Ensures that tests don't cause any background errors.<br/>\n  */</li>\n\t<li>class MyTreeCache extends TreeCache<br/>\n    +    final UnhandledErrorListener errorListener = new UnhandledErrorListener()<br/>\n {<br/>\n    -</li>\n\t<li>MyTreeCache(CuratorFramework client, String path, boolean cacheData)</li>\n\t<li>{\n    -    super(client, path, cacheData);\n    -    getListenable().addListener(eventListener);\n    -}\n<p>    -<br/>\n     @Override</p></li>\n\t<li>protected void handleException(Throwable e)<br/>\n    +public void unhandledError(String message, Throwable e)\n     {\n    -    handleBackgroundException(e);\n    +    hadBackgroundException.set(true);\n    +    e.printStackTrace(System.err);\n     }\n<p>    +    };<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Construct a TreeCache that records exceptions and automatically listens.<br/>\n    +     */<br/>\n    +    protected TreeCache newTreeCacheWithListeners(CuratorFramework client, String path)</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I'm exercising two different code paths on purpose, the first the public ctor, the second the builder.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713113/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/57699318","html_url":"https://github.com/apache/curator/pull/41#issuecomment-57699318","issue_url":"https://api.github.com/repos/apache/curator/issues/41","id":57699318,"node_id":"MDEyOklzc3VlQ29tbWVudDU3Njk5MzE4","user":{"login":"dragonsinth","id":1919660,"node_id":"MDQ6VXNlcjE5MTk2NjA=","avatar_url":"https://avatars.githubusercontent.com/u/1919660?v=4","gravatar_id":"","url":"https://api.github.com/users/dragonsinth","html_url":"https://github.com/dragonsinth","followers_url":"https://api.github.com/users/dragonsinth/followers","following_url":"https://api.github.com/users/dragonsinth/following{/other_user}","gists_url":"https://api.github.com/users/dragonsinth/gists{/gist_id}","starred_url":"https://api.github.com/users/dragonsinth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragonsinth/subscriptions","organizations_url":"https://api.github.com/users/dragonsinth/orgs","repos_url":"https://api.github.com/users/dragonsinth/repos","events_url":"https://api.github.com/users/dragonsinth/events{/privacy}","received_events_url":"https://api.github.com/users/dragonsinth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-02T20:24:58Z","updated_at":"2014-10-02T20:24:58Z","author_association":"CONTRIBUTOR","body":"Sounds like we're good to merge?\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/57699318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713117","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713117","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713117,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMxMTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-02T20:24:59Z","updated_at":"2025-01-21T13:18:06Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#issuecomment-57699318\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#issuecomment-57699318</a></p>\n\n<p>    Sounds like we're good to merge?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/57886128","html_url":"https://github.com/apache/curator/pull/46#issuecomment-57886128","issue_url":"https://api.github.com/repos/apache/curator/issues/46","id":57886128,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODg2MTI4","user":{"login":"dragonsinth","id":1919660,"node_id":"MDQ6VXNlcjE5MTk2NjA=","avatar_url":"https://avatars.githubusercontent.com/u/1919660?v=4","gravatar_id":"","url":"https://api.github.com/users/dragonsinth","html_url":"https://github.com/dragonsinth","followers_url":"https://api.github.com/users/dragonsinth/followers","following_url":"https://api.github.com/users/dragonsinth/following{/other_user}","gists_url":"https://api.github.com/users/dragonsinth/gists{/gist_id}","starred_url":"https://api.github.com/users/dragonsinth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragonsinth/subscriptions","organizations_url":"https://api.github.com/users/dragonsinth/orgs","repos_url":"https://api.github.com/users/dragonsinth/repos","events_url":"https://api.github.com/users/dragonsinth/events{/privacy}","received_events_url":"https://api.github.com/users/dragonsinth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-04T00:19:32Z","updated_at":"2014-10-04T00:19:32Z","author_association":"CONTRIBUTOR","body":"Looks good to me\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/57886128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714292","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714292","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714292,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQyOTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-04T02:06:37Z","updated_at":"2025-01-21T13:18:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user dragonsinth opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-151\" title=\"SharedValue has limited utility but can be improved\" class=\"issue-link\" data-issue-key=\"CURATOR-151\"><del>CURATOR-151</del></a>: SharedValue/SharedCount API update</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/dragonsinth/curator\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/dragonsinth/curator</a> <a href=\"https://issues.apache.org/jira/browse/CURATOR-151\" title=\"SharedValue has limited utility but can be improved\" class=\"issue-link\" data-issue-key=\"CURATOR-151\"><del>CURATOR-151</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #47</p>\n\n<hr />\n<p>commit 0bc73191ba0fce5fb28894f8e4124d9d42655b37<br/>\nAuthor: Scott Blum <scottb@squareup.com><br/>\nDate:   2014-10-04T02:04:36Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/CURATOR-151\" title=\"SharedValue has limited utility but can be improved\" class=\"issue-link\" data-issue-key=\"CURATOR-151\"><del>CURATOR-151</del></a>: SharedValue/SharedCount API update</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/57891735","html_url":"https://github.com/apache/curator/pull/47#issuecomment-57891735","issue_url":"https://api.github.com/repos/apache/curator/issues/47","id":57891735,"node_id":"MDEyOklzc3VlQ29tbWVudDU3ODkxNzM1","user":{"login":"dragonsinth","id":1919660,"node_id":"MDQ6VXNlcjE5MTk2NjA=","avatar_url":"https://avatars.githubusercontent.com/u/1919660?v=4","gravatar_id":"","url":"https://api.github.com/users/dragonsinth","html_url":"https://github.com/dragonsinth","followers_url":"https://api.github.com/users/dragonsinth/followers","following_url":"https://api.github.com/users/dragonsinth/following{/other_user}","gists_url":"https://api.github.com/users/dragonsinth/gists{/gist_id}","starred_url":"https://api.github.com/users/dragonsinth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragonsinth/subscriptions","organizations_url":"https://api.github.com/users/dragonsinth/orgs","repos_url":"https://api.github.com/users/dragonsinth/repos","events_url":"https://api.github.com/users/dragonsinth/events{/privacy}","received_events_url":"https://api.github.com/users/dragonsinth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-04T02:06:45Z","updated_at":"2014-10-04T02:06:45Z","author_association":"CONTRIBUTOR","body":"@Randgalt \n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/57891735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714300","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714300","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714300,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQzMDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-04T02:06:46Z","updated_at":"2025-01-21T13:18:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47#issuecomment-57891735\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47#issuecomment-57891735</a></p>\n\n<p>    @Randgalt </p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714305","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714305","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714305,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQzMDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-04T02:08:16Z","updated_at":"2025-01-21T13:18:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47#discussion_r18426992\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47#discussion_r18426992</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/shared/SharedValue.java &#8212;<br/>\n    @@ -117,10 +117,8 @@ public void setValue(byte[] newValue) throws Exception<br/>\n {<br/>\n     Preconditions.checkState(state.get() == State.STARTED, \"not started\");</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>VersionedValue<byte[]> localCopy = currentValue.get();</li>\n\t<li>client.setData().forPath(path, newValue);<br/>\n    -</li>\n\t<li>currentValue.set(new VersionedValue<byte[]>(localCopy.getVersion() + 1, Arrays.copyOf(newValue, newValue.length)));<br/>\n    +Stat result = client.setData().forPath(path, newValue);<br/>\n    +updateValue(result.getVersion(), Arrays.copyOf(newValue, newValue.length));\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    the oldVersion+1 thing seemed a little squirrelly to me</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714311","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714311","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714311,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQzMTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-04T02:09:22Z","updated_at":"2025-01-21T13:18:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47#discussion_r18426996\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47#discussion_r18426996</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/shared/SharedValue.java &#8212;<br/>\n    @@ -225,11 +238,11 @@ public void close() throws IOException<br/>\n     listeners.clear();<br/>\n }</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>private synchronized void readValue() throws Exception<br/>\n    +    private void readValue() throws Exception\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    we might still want to synchronize to avoid multiple concurrent calls to client.getData(), but we don't need it for correctness anymore.  WDYT?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714318","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714318","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714318,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQzMTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-04T02:09:54Z","updated_at":"2025-01-21T13:18:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47#discussion_r18427001\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47#discussion_r18427001</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/shared/VersionedValue.java &#8212;<br/>\n    @@ -32,7 +32,7 @@</p>\n<ul>\n\t<li>@param version the version</li>\n\t<li>@param value the value (cannot be null)<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>public VersionedValue(int version, T value)<br/>\n    +    VersionedValue(int version, T value)\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    made non-public to force clients to use a previously-retrieved value instead of trying to construct one from thin air</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/58104436","html_url":"https://github.com/apache/curator/pull/41#issuecomment-58104436","issue_url":"https://api.github.com/repos/apache/curator/issues/41","id":58104436,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTA0NDM2","user":{"login":"dragonsinth","id":1919660,"node_id":"MDQ6VXNlcjE5MTk2NjA=","avatar_url":"https://avatars.githubusercontent.com/u/1919660?v=4","gravatar_id":"","url":"https://api.github.com/users/dragonsinth","html_url":"https://github.com/dragonsinth","followers_url":"https://api.github.com/users/dragonsinth/followers","following_url":"https://api.github.com/users/dragonsinth/following{/other_user}","gists_url":"https://api.github.com/users/dragonsinth/gists{/gist_id}","starred_url":"https://api.github.com/users/dragonsinth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragonsinth/subscriptions","organizations_url":"https://api.github.com/users/dragonsinth/orgs","repos_url":"https://api.github.com/users/dragonsinth/repos","events_url":"https://api.github.com/users/dragonsinth/events{/privacy}","received_events_url":"https://api.github.com/users/dragonsinth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-06T21:41:31Z","updated_at":"2014-10-06T21:41:31Z","author_association":"CONTRIBUTOR","body":"Any objections to merge?\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/58104436/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713125","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713125","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713125,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMxMjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-06T21:41:32Z","updated_at":"2025-01-21T13:18:06Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#issuecomment-58104436\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#issuecomment-58104436</a></p>\n\n<p>    Any objections to merge?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/58104626","html_url":"https://github.com/apache/curator/pull/41#issuecomment-58104626","issue_url":"https://api.github.com/repos/apache/curator/issues/41","id":58104626,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTA0NjI2","user":{"login":"madrob","id":1592330,"node_id":"MDQ6VXNlcjE1OTIzMzA=","avatar_url":"https://avatars.githubusercontent.com/u/1592330?v=4","gravatar_id":"","url":"https://api.github.com/users/madrob","html_url":"https://github.com/madrob","followers_url":"https://api.github.com/users/madrob/followers","following_url":"https://api.github.com/users/madrob/following{/other_user}","gists_url":"https://api.github.com/users/madrob/gists{/gist_id}","starred_url":"https://api.github.com/users/madrob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/madrob/subscriptions","organizations_url":"https://api.github.com/users/madrob/orgs","repos_url":"https://api.github.com/users/madrob/repos","events_url":"https://api.github.com/users/madrob/events{/privacy}","received_events_url":"https://api.github.com/users/madrob/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-06T21:42:48Z","updated_at":"2014-10-06T21:42:48Z","author_association":"CONTRIBUTOR","body":"Probably want a committer to weigh in, but you've addressed my concerns.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/58104626/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713133","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713133","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713133,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMxMzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-06T21:42:51Z","updated_at":"2025-01-21T13:18:06Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user madrob commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#issuecomment-58104626\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#issuecomment-58104626</a></p>\n\n<p>    Probably want a committer to weigh in, but you've addressed my concerns.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/58104896","html_url":"https://github.com/apache/curator/pull/41#issuecomment-58104896","issue_url":"https://api.github.com/repos/apache/curator/issues/41","id":58104896,"node_id":"MDEyOklzc3VlQ29tbWVudDU4MTA0ODk2","user":{"login":"cammckenzie","id":7763121,"node_id":"MDQ6VXNlcjc3NjMxMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7763121?v=4","gravatar_id":"","url":"https://api.github.com/users/cammckenzie","html_url":"https://github.com/cammckenzie","followers_url":"https://api.github.com/users/cammckenzie/followers","following_url":"https://api.github.com/users/cammckenzie/following{/other_user}","gists_url":"https://api.github.com/users/cammckenzie/gists{/gist_id}","starred_url":"https://api.github.com/users/cammckenzie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cammckenzie/subscriptions","organizations_url":"https://api.github.com/users/cammckenzie/orgs","repos_url":"https://api.github.com/users/cammckenzie/repos","events_url":"https://api.github.com/users/cammckenzie/events{/privacy}","received_events_url":"https://api.github.com/users/cammckenzie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-06T21:44:58Z","updated_at":"2014-10-06T21:44:58Z","author_association":"CONTRIBUTOR","body":"Good to merge as far as I'm concerned.\n","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/58104896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713137","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713137","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713137,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMxMzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-06T21:44:59Z","updated_at":"2025-01-21T13:18:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user cammckenzie commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41#issuecomment-58104896\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41#issuecomment-58104896</a></p>\n\n<p>    Good to merge as far as I'm concerned.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713142","html_url":"https://github.com/apache/curator/issues/665#issuecomment-2604713142","issue_url":"https://api.github.com/repos/apache/curator/issues/665","id":2604713142,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTMxNDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-06T23:53:23Z","updated_at":"2025-01-21T13:18:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/41\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/41</a></p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604713142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714320","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714320","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714320,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQzMjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-07T23:42:08Z","updated_at":"2025-01-21T13:18:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47#discussion_r18557177\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47#discussion_r18557177</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/shared/SharedValue.java &#8212;<br/>\n    @@ -117,10 +117,8 @@ public void setValue(byte[] newValue) throws Exception<br/>\n {<br/>\n     Preconditions.checkState(state.get() == State.STARTED, \"not started\");</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>VersionedValue<byte[]> localCopy = currentValue.get();</li>\n\t<li>client.setData().forPath(path, newValue);<br/>\n    -</li>\n\t<li>currentValue.set(new VersionedValue<byte[]>(localCopy.getVersion() + 1, Arrays.copyOf(newValue, newValue.length)));<br/>\n    +Stat result = client.setData().forPath(path, newValue);<br/>\n    +updateValue(result.getVersion(), Arrays.copyOf(newValue, newValue.length));\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Yeah I agree.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714325","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714325","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714325,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQzMjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-08T00:12:44Z","updated_at":"2025-01-21T13:18:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47#discussion_r18558295\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47#discussion_r18558295</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/shared/SharedValue.java &#8212;<br/>\n    @@ -129,29 +127,19 @@ public void setValue(byte[] newValue) throws Exception</p>\n<ul>\n\t<li>value is updated. i.e. if the value is not successful you can get the updated value</li>\n\t<li>by calling \n{@link #getValue()}.<br/>\n  *<br/>\n    +     * @deprecated use {@link #trySetValue(VersionedValue, byte[])} for stronger atomicity<br/>\n    +     * guarantees. Even if this object's internal state is up-to-date, the caller has no way to<br/>\n    +     * ensure that they've read the most recently seen value.<br/>\n    +     *<br/>\n  * @param newValue the new value to attempt<br/>\n  * @return true if the change attempt was successful, false if not. If the change<br/>\n  * was not successful, {@link #getValue()}\n<p> will return the updated value</p></li>\n\t<li>@throws Exception ZK errors, interruptions, etc.<br/>\n  */<br/>\n    +    @Deprecated<br/>\n public boolean trySetValue(byte[] newValue) throws Exception<br/>\n {</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>Preconditions.checkState(state.get() == State.STARTED, \"not started\");<br/>\n    -</li>\n\t<li>try</li>\n\t<li>{\n    -    VersionedValue<byte[]> localCopy = currentValue.get();\n    -    client.setData().withVersion(localCopy.getVersion()).forPath(path, newValue);\n    -    currentValue.set(new VersionedValue<byte[]>(localCopy.getVersion() + 1, Arrays.copyOf(newValue, newValue.length)));\n    -    return true;\n    -}</li>\n\t<li>catch ( KeeperException.BadVersionException ignore )</li>\n\t<li>{\n    -    // ignore\n    -}\n<p>    -</p></li>\n\t<li>readValue();</li>\n\t<li>return false;<br/>\n    +return trySetValue(currentValue.get(), newValue);<br/>\n }\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I don't like this because it changes the behavior of the class. If anyone was depending on old behavior their code will break.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714325/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714330","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714330","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714330,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQzMzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-08T00:13:07Z","updated_at":"2025-01-21T13:18:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47#discussion_r18558309\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47#discussion_r18558309</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/shared/SharedValue.java &#8212;<br/>\n    @@ -165,14 +153,20 @@ public boolean trySetValue(byte[] newValue) throws Exception</p>\n<ul>\n\t<li>was not successful, \n{@link #getValue()}\n<p> will return the updated value</p></li>\n\t<li>@throws Exception ZK errors, interruptions, etc.<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>public boolean trySetValue(VersionedValue<byte[]> newValue) throws Exception<br/>\n    +    public boolean trySetValue(VersionedValue<byte[]> previous, byte[] newValue) throws Exception<br/>\n {<br/>\n     Preconditions.checkState(state.get() == State.STARTED, \"not started\");</li>\n</ul>\n\n\n<p>    +VersionedValue<byte[]> current = currentValue.get();<br/>\n    +if ( previous.getVersion() != current.getVersion() || !Arrays.equals(previous.getValue(), current.getValue()) )<br/>\n    +</p>\n{\n    +    return false;\n    +}\n<p>    +<br/>\n     try<br/>\n     {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>client.setData().withVersion(newValue.getVersion()).forPath(path, newValue.getValue());</li>\n\t<li>currentValue.set(new VersionedValue<byte[]>(newValue.getVersion() + 1, Arrays.copyOf(newValue.getValue(), newValue.getValue().length)));<br/>\n    +    Stat result = client.setData().withVersion(previous.getVersion()).forPath(path, newValue);<br/>\n    +    updateValue(result.getVersion(), Arrays.copyOf(newValue, newValue.length));\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    If we're going to add this behavior I'd change the name of this method so it's clear about the behavior.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714338","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714338","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714338,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQzMzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-08T00:19:22Z","updated_at":"2025-01-21T13:18:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47#discussion_r18558516\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47#discussion_r18558516</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/shared/SharedValue.java &#8212;<br/>\n    @@ -129,29 +127,19 @@ public void setValue(byte[] newValue) throws Exception</p>\n<ul>\n\t<li>value is updated. i.e. if the value is not successful you can get the updated value</li>\n\t<li>by calling \n{@link #getValue()}.<br/>\n  *<br/>\n    +     * @deprecated use {@link #trySetValue(VersionedValue, byte[])} for stronger atomicity<br/>\n    +     * guarantees. Even if this object's internal state is up-to-date, the caller has no way to<br/>\n    +     * ensure that they've read the most recently seen value.<br/>\n    +     *<br/>\n  * @param newValue the new value to attempt<br/>\n  * @return true if the change attempt was successful, false if not. If the change<br/>\n  * was not successful, {@link #getValue()}\n<p> will return the updated value</p></li>\n\t<li>@throws Exception ZK errors, interruptions, etc.<br/>\n  */<br/>\n    +    @Deprecated<br/>\n public boolean trySetValue(byte[] newValue) throws Exception<br/>\n {</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>Preconditions.checkState(state.get() == State.STARTED, \"not started\");<br/>\n    -</li>\n\t<li>try</li>\n\t<li>{\n    -    VersionedValue<byte[]> localCopy = currentValue.get();\n    -    client.setData().withVersion(localCopy.getVersion()).forPath(path, newValue);\n    -    currentValue.set(new VersionedValue<byte[]>(localCopy.getVersion() + 1, Arrays.copyOf(newValue, newValue.length)));\n    -    return true;\n    -}</li>\n\t<li>catch ( KeeperException.BadVersionException ignore )</li>\n\t<li>{\n    -    // ignore\n    -}\n<p>    -</p></li>\n\t<li>readValue();</li>\n\t<li>return false;<br/>\n    +return trySetValue(currentValue.get(), newValue);<br/>\n }\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Hmm, so when I wrote this code I was 99% sure this would NOT be a change to the existing behavior.  In other words, if you were to inline the 2-arg version into the 1-arg version, I think you get (essentially) identical code.  I was just trying to DRY this up.  What do you see being different?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714347","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714347","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714347,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQzNDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-08T00:21:07Z","updated_at":"2025-01-21T13:18:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47#discussion_r18558577\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47#discussion_r18558577</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/shared/SharedValue.java &#8212;<br/>\n    @@ -165,14 +153,20 @@ public boolean trySetValue(byte[] newValue) throws Exception</p>\n<ul>\n\t<li>was not successful, \n{@link #getValue()}\n<p> will return the updated value</p></li>\n\t<li>@throws Exception ZK errors, interruptions, etc.<br/>\n  */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>public boolean trySetValue(VersionedValue<byte[]> newValue) throws Exception<br/>\n    +    public boolean trySetValue(VersionedValue<byte[]> previous, byte[] newValue) throws Exception<br/>\n {<br/>\n     Preconditions.checkState(state.get() == State.STARTED, \"not started\");</li>\n</ul>\n\n\n<p>    +VersionedValue<byte[]> current = currentValue.get();<br/>\n    +if ( previous.getVersion() != current.getVersion() || !Arrays.equals(previous.getValue(), current.getValue()) )<br/>\n    +</p>\n{\n    +    return false;\n    +}\n<p>    +<br/>\n     try<br/>\n     {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>client.setData().withVersion(newValue.getVersion()).forPath(path, newValue.getValue());</li>\n\t<li>currentValue.set(new VersionedValue<byte[]>(newValue.getVersion() + 1, Arrays.copyOf(newValue.getValue(), newValue.getValue().length)));<br/>\n    +    Stat result = client.setData().withVersion(previous.getVersion()).forPath(path, newValue);<br/>\n    +    updateValue(result.getVersion(), Arrays.copyOf(newValue, newValue.length));\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I don't think I understand.  Which method would you rename, and what kind of name would you think?  Do you mean that the 2-arg version should be named something like \"compareAndSetValue\"?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714353","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714353","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714353,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQzNTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-09T00:48:27Z","updated_at":"2025-01-21T13:18:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Randgalt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47#discussion_r18621853\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47#discussion_r18621853</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/shared/SharedValue.java &#8212;<br/>\n    @@ -184,6 +178,25 @@ public boolean trySetValue(VersionedValue<byte[]> newValue) throws Exception<br/>\n     return false;<br/>\n }</p>\n\n<p>    +    private void updateValue(int version, byte[] bytes)<br/>\n    +    {<br/>\n    +while (true)<br/>\n    +{<br/>\n    +    VersionedValue<byte[]> current = currentValue.get();<br/>\n    +    if (current.getVersion() >= version)<br/>\n    +    </p>\n{\n    +// A newer version was concurrently set.\n    +return;\n    +    }\n<p>    +    if ( currentValue.compareAndSet(current, new VersionedValue<byte[]>(version, bytes)) )<br/>\n    +    </p>\n{\n    +// Successfully set.\n    +return;\n    +    }\n<p>    +    // Lost a race, retry.<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n /**<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This is the new behavior as I see it. It loops until it successfully updates the value. Right?</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714360","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714360","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714360,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQzNjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-09T08:50:59Z","updated_at":"2025-01-21T13:18:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47#discussion_r18633269\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47#discussion_r18633269</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/shared/SharedValue.java &#8212;<br/>\n    @@ -184,6 +178,25 @@ public boolean trySetValue(VersionedValue<byte[]> newValue) throws Exception<br/>\n     return false;<br/>\n }</p>\n\n<p>    +    private void updateValue(int version, byte[] bytes)<br/>\n    +    {<br/>\n    +while (true)<br/>\n    +{<br/>\n    +    VersionedValue<byte[]> current = currentValue.get();<br/>\n    +    if (current.getVersion() >= version)<br/>\n    +    </p>\n{\n    +// A newer version was concurrently set.\n    +return;\n    +    }\n<p>    +    if ( currentValue.compareAndSet(current, new VersionedValue<byte[]>(version, bytes)) )<br/>\n    +    </p>\n{\n    +// Successfully set.\n    +return;\n    +    }\n<p>    +    // Lost a race, retry.<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n /**<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Ah, gotcha.  So this isn't new behavior &#8211; this is just a standard compare-and-set loop that replaces the synchronized keyword.  It's not round tripping to the server multiple times.  There's still only one attempt to set the server value, and if it fails the calling methods return false.  This is just atomically setting currentValue.  We could replace the loop with a synchronized block, but performance would be worse.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714360/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714366","html_url":"https://github.com/apache/curator/issues/672#issuecomment-2604714366","issue_url":"https://api.github.com/repos/apache/curator/issues/672","id":2604714366,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTQzNjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-09T17:11:29Z","updated_at":"2025-01-21T13:18:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dragonsinth commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/curator/pull/47#discussion_r18659175\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/curator/pull/47#discussion_r18659175</a></p>\n\n<p>    &#8212; Diff: curator-recipes/src/main/java/org/apache/curator/framework/recipes/shared/SharedValue.java &#8212;<br/>\n    @@ -184,6 +178,25 @@ public boolean trySetValue(VersionedValue<byte[]> newValue) throws Exception<br/>\n     return false;<br/>\n }</p>\n\n<p>    +    private void updateValue(int version, byte[] bytes)<br/>\n    +    {<br/>\n    +while (true)<br/>\n    +{<br/>\n    +    VersionedValue<byte[]> current = currentValue.get();<br/>\n    +    if (current.getVersion() >= version)<br/>\n    +    </p>\n{\n    +// A newer version was concurrently set.\n    +return;\n    +    }\n<p>    +    if ( currentValue.compareAndSet(current, new VersionedValue<byte[]>(version, bytes)) )<br/>\n    +    </p>\n{\n    +// Successfully set.\n    +return;\n    +    }\n<p>    +    // Lost a race, retry.<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n /**<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Let me elaborate a little on the race condition this solves.</p>\n\n<p>    Imagine the current value is (1, A) you have one thread calling trySetValue(B) another calling trySetValue(C) at the same time.  Imagine thread 1 succeeds in making the server call first and updating the server value to (2, B) and immediately afterwards thread 2 succeeds in calling the server and updating the server value to (3, C).   But to due to thread scheduling or what have you, both threads actually enter updateValue() at the same time.  How do we ensure that the correct value ends up in currentValue when both threads exit updateValue so that the client has the correct server state?</p>\n\n<p>    That's what the compare-and-set loop solves.  Imagine both threads enter the loop and initially read current as (1, A).  Then they both try to compare and set (1, A) to either (2, B) or (3, C).  Only one of them can win the race.  If (2, B) gets set, then the first thread will return and the second thread will try again, and this time succeed in updating (2, B) -> (3, C).  If (3, C) gets set then the second thread will return, and the first thread will try again.  But this time it will exit out because it will see that someone else already set a higher-versioned value.</p>\n\n<p>    This actually solves several potential races, between threads calling setValue/trySetValue at the same time and also any threads that could be calling readValue() at the same time (watcher, failed trySetValue(), or even the start() call).</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604714366/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604711455","html_url":"https://github.com/apache/curator/issues/656#issuecomment-2604711455","issue_url":"https://api.github.com/repos/apache/curator/issues/656","id":2604711455,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTE0NTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-09T17:19:49Z","updated_at":"2025-01-21T13:17:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jmarsten\">jmarsten</a>:</i>\n<p>I strongly favor switching to the more fine-grained approach suggested in this issue.</p>\n\n<p>Java's linguistic treatment of checked exceptions is frequently cited as one of its largest design flaws. But the concept of categorizing exceptions into expected and unexpected is sound, and particularly important in an IO-intensive framework like Curator. Universally throwing Exception gives callers no information about which error conditions are recoverable or retryable and which error conditions resulted from programming error and leave the system in a corrupt state.</p>\n\n<p>And callers can't just \"do nothing\" if they want to prevent the universal Exception pattern from leaking into the application code. Currently, developers using Curator have to do something like the suggested \"scrub\" for every Curator call they make. So multiply this error-prone effort times the number of Curator calls made in the application... and times the number of applications using Curator.</p>\n\n<p>Checked exceptions are commonly criticized, yet the technique of universally throwing Exception is unique among Java libraries I have seen. It is possible that Curator is advancing the state of the art in Java design patterns. But it is more likely that the techinique is questionable and has been rejected by most API developers.</p>\n\n<p>Changing the universal Exception pattern will be labor-intensive for Curator developers--and for all Curator users, because this would be a breaking change. But in my opionion, the usability improvement would be worth it.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604711455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604711458","html_url":"https://github.com/apache/curator/issues/656#issuecomment-2604711458","issue_url":"https://api.github.com/repos/apache/curator/issues/656","id":2604711458,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MDQ3MTE0NTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2014-10-09T18:00:24Z","updated_at":"2025-01-21T13:17:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dragonsinth\">dragonsinth</a>:</i>\n<p>I see both sides of it, but personally I tend to favor a less defensive style of programming where you let exceptions propagate up and then make tactical fixes based on production experience.  That said, I do find this kind of coding pattern difficult.</p>\n\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\"><span class=\"code-keyword\">try</span> {\n    client.create().creatingParentsIfNeeded().forPath(path, seedValue);\n} <span class=\"code-keyword\">catch</span> ( KeeperException.NodeExistsException ignore ) {\n    <span class=\"code-comment\">// ignore\n</span>}\n</pre>\n</div></div>\n\n<p>You can look at the javadoc for any of the methods in that create chain, and none of them clue you in as to which exceptions might be thrown from this particular fluent invocation.  I'm not sure checked exceptions is the right answer tho.</p>","reactions":{"url":"https://api.github.com/repos/apache/curator/issues/comments/2604711458/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]