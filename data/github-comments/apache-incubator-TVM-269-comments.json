[{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870093432","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870093432","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870093432,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDA5MzQzMg==","user":{"login":"AndrewZhaoLuo","id":13855451,"node_id":"MDQ6VXNlcjEzODU1NDUx","avatar_url":"https://avatars.githubusercontent.com/u/13855451?v=4","gravatar_id":"","url":"https://api.github.com/users/AndrewZhaoLuo","html_url":"https://github.com/AndrewZhaoLuo","followers_url":"https://api.github.com/users/AndrewZhaoLuo/followers","following_url":"https://api.github.com/users/AndrewZhaoLuo/following{/other_user}","gists_url":"https://api.github.com/users/AndrewZhaoLuo/gists{/gist_id}","starred_url":"https://api.github.com/users/AndrewZhaoLuo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndrewZhaoLuo/subscriptions","organizations_url":"https://api.github.com/users/AndrewZhaoLuo/orgs","repos_url":"https://api.github.com/users/AndrewZhaoLuo/repos","events_url":"https://api.github.com/users/AndrewZhaoLuo/events{/privacy}","received_events_url":"https://api.github.com/users/AndrewZhaoLuo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-28T22:40:19Z","updated_at":"2021-06-28T23:23:50Z","author_association":"CONTRIBUTOR","body":"Still a draft, there still is a problem with `src/target/target.cc` construction. \r\n\r\n```\r\nTarget::Target(Target target, Target host) {\r\n  ObjectPtr<TargetNode> n = make_object<TargetNode>(*target.get());\r\n  CHECK(!n->host.defined() || n->host.same_as(host))\r\n      << \"ValueError: Adding a host to a target whose host field has been defined target: \"\r\n      << n->host << \" host: \" << host << \" ptr target: \" << n.get()\r\n      << \" ptr host: \" << make_object<TargetNode>(*host.get()).get();\r\n  ;\r\n  // add target host into host field\r\n  n->host = std::move(host);\r\n  data_ = std::move(n);\r\n}\r\n```\r\nCheck failed\r\nSpawn breaks pointer equality which was the assumption. We now need a deep equality thing for \"tvm::Target\" I think.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870093432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870097981","html_url":"https://github.com/apache/tvm/pull/8096#issuecomment-870097981","issue_url":"https://api.github.com/repos/apache/tvm/issues/8096","id":870097981,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDA5Nzk4MQ==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-28T22:52:51Z","updated_at":"2021-06-28T22:54:22Z","author_association":"MEMBER","body":"@giuseros I would prefer to also use an array of structs, but my goal is to just get us to use the same data structure everywhere since there are multiple places where we are storing different versions of the same data without a shared data structure. We could move the Array outside and simplify the struct but it would be good to move memory planning to also use the same structure. \r\n\r\nI guess one solution could be merge as is, I can rewrite the MemoryPlanning to use the Array of struct and then you can update to use the same structure. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870097981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870104299","html_url":"https://github.com/apache/tvm/pull/8360#issuecomment-870104299","issue_url":"https://api.github.com/repos/apache/tvm/issues/8360","id":870104299,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDEwNDI5OQ==","user":{"login":"junrushao","id":22515877,"node_id":"MDQ6VXNlcjIyNTE1ODc3","avatar_url":"https://avatars.githubusercontent.com/u/22515877?v=4","gravatar_id":"","url":"https://api.github.com/users/junrushao","html_url":"https://github.com/junrushao","followers_url":"https://api.github.com/users/junrushao/followers","following_url":"https://api.github.com/users/junrushao/following{/other_user}","gists_url":"https://api.github.com/users/junrushao/gists{/gist_id}","starred_url":"https://api.github.com/users/junrushao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junrushao/subscriptions","organizations_url":"https://api.github.com/users/junrushao/orgs","repos_url":"https://api.github.com/users/junrushao/repos","events_url":"https://api.github.com/users/junrushao/events{/privacy}","received_events_url":"https://api.github.com/users/junrushao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-28T23:07:43Z","updated_at":"2021-06-28T23:07:43Z","author_association":"MEMBER","body":"Thanks @yzh119 for the contribution!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870104299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870106414","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870106414","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870106414,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDEwNjQxNA==","user":{"login":"junrushao","id":22515877,"node_id":"MDQ6VXNlcjIyNTE1ODc3","avatar_url":"https://avatars.githubusercontent.com/u/22515877?v=4","gravatar_id":"","url":"https://api.github.com/users/junrushao","html_url":"https://github.com/junrushao","followers_url":"https://api.github.com/users/junrushao/followers","following_url":"https://api.github.com/users/junrushao/following{/other_user}","gists_url":"https://api.github.com/users/junrushao/gists{/gist_id}","starred_url":"https://api.github.com/users/junrushao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junrushao/subscriptions","organizations_url":"https://api.github.com/users/junrushao/orgs","repos_url":"https://api.github.com/users/junrushao/repos","events_url":"https://api.github.com/users/junrushao/events{/privacy}","received_events_url":"https://api.github.com/users/junrushao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-28T23:12:10Z","updated_at":"2021-06-28T23:12:10Z","author_association":"MEMBER","body":"Does it work if we use Target.export for serialization? This method converts a Target to a JSON-like dict and should preserve all the information.\r\n\r\nEquality check is another big issue. I discussed with @comaniac a while ago, but haven’t got a conclusion yet when should two targets are considered “equal”: If one target has -libs=cudnn and the other doesn’t, are they equal to each other?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870106414/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870108582","html_url":"https://github.com/apache/tvm/pull/8358#issuecomment-870108582","issue_url":"https://api.github.com/repos/apache/tvm/issues/8358","id":870108582,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDEwODU4Mg==","user":{"login":"junrushao","id":22515877,"node_id":"MDQ6VXNlcjIyNTE1ODc3","avatar_url":"https://avatars.githubusercontent.com/u/22515877?v=4","gravatar_id":"","url":"https://api.github.com/users/junrushao","html_url":"https://github.com/junrushao","followers_url":"https://api.github.com/users/junrushao/followers","following_url":"https://api.github.com/users/junrushao/following{/other_user}","gists_url":"https://api.github.com/users/junrushao/gists{/gist_id}","starred_url":"https://api.github.com/users/junrushao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junrushao/subscriptions","organizations_url":"https://api.github.com/users/junrushao/orgs","repos_url":"https://api.github.com/users/junrushao/repos","events_url":"https://api.github.com/users/junrushao/events{/privacy}","received_events_url":"https://api.github.com/users/junrushao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-28T23:16:28Z","updated_at":"2021-06-28T23:16:28Z","author_association":"MEMBER","body":"The PR fails a flaky test. Please retrigger and let’s get it merged :-)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870108582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870112769","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870112769","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870112769,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDExMjc2OQ==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-28T23:24:26Z","updated_at":"2021-06-28T23:24:26Z","author_association":"CONTRIBUTOR","body":"> Equality check is another big issue. I discussed with @comaniac a while ago, but haven’t got a conclusion yet when should two targets are considered “equal”: If one target has -libs=cudnn and the other doesn’t, are they equal to each other?\r\n\r\nExactly. It seems to me that we ultimately need two APIs for target: one (i.e., `==`) checks if two targets are exactly the same, and the other (`.compatible(self, other)`) checks if target A is compatible to target B. The problem is the definition of \"compatible\" targets. In my own experience, `compatible` is much more useful than `==`, as in many cases, people care more about whether a model/schedule built with target A can be used in target B. Meanwhile, we can still have the equality check first for internal use cases like this one I guess.\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870112769/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870112870","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870112870","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870112870,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDExMjg3MA==","user":{"login":"AndrewZhaoLuo","id":13855451,"node_id":"MDQ6VXNlcjEzODU1NDUx","avatar_url":"https://avatars.githubusercontent.com/u/13855451?v=4","gravatar_id":"","url":"https://api.github.com/users/AndrewZhaoLuo","html_url":"https://github.com/AndrewZhaoLuo","followers_url":"https://api.github.com/users/AndrewZhaoLuo/followers","following_url":"https://api.github.com/users/AndrewZhaoLuo/following{/other_user}","gists_url":"https://api.github.com/users/AndrewZhaoLuo/gists{/gist_id}","starred_url":"https://api.github.com/users/AndrewZhaoLuo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndrewZhaoLuo/subscriptions","organizations_url":"https://api.github.com/users/AndrewZhaoLuo/orgs","repos_url":"https://api.github.com/users/AndrewZhaoLuo/repos","events_url":"https://api.github.com/users/AndrewZhaoLuo/events{/privacy}","received_events_url":"https://api.github.com/users/AndrewZhaoLuo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-28T23:24:39Z","updated_at":"2021-06-28T23:24:39Z","author_association":"CONTRIBUTOR","body":"Hmm I don't understand a lot of the host target stuff. In this case I believe we need equality to be exact equality. \r\n\r\nThe problem you are describing could be another form of equality?\r\n\r\nIn any case me and @tkonolige might just turn off the check for now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870112870/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870122577","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870122577","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870122577,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDEyMjU3Nw==","user":{"login":"AndrewZhaoLuo","id":13855451,"node_id":"MDQ6VXNlcjEzODU1NDUx","avatar_url":"https://avatars.githubusercontent.com/u/13855451?v=4","gravatar_id":"","url":"https://api.github.com/users/AndrewZhaoLuo","html_url":"https://github.com/AndrewZhaoLuo","followers_url":"https://api.github.com/users/AndrewZhaoLuo/followers","following_url":"https://api.github.com/users/AndrewZhaoLuo/following{/other_user}","gists_url":"https://api.github.com/users/AndrewZhaoLuo/gists{/gist_id}","starred_url":"https://api.github.com/users/AndrewZhaoLuo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndrewZhaoLuo/subscriptions","organizations_url":"https://api.github.com/users/AndrewZhaoLuo/orgs","repos_url":"https://api.github.com/users/AndrewZhaoLuo/repos","events_url":"https://api.github.com/users/AndrewZhaoLuo/events{/privacy}","received_events_url":"https://api.github.com/users/AndrewZhaoLuo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-28T23:52:37Z","updated_at":"2021-06-28T23:52:37Z","author_association":"CONTRIBUTOR","body":"@zxybazh thoughts with turning off this check?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870122577/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870125243","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870125243","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870125243,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDEyNTI0Mw==","user":{"login":"zxybazh","id":3203174,"node_id":"MDQ6VXNlcjMyMDMxNzQ=","avatar_url":"https://avatars.githubusercontent.com/u/3203174?v=4","gravatar_id":"","url":"https://api.github.com/users/zxybazh","html_url":"https://github.com/zxybazh","followers_url":"https://api.github.com/users/zxybazh/followers","following_url":"https://api.github.com/users/zxybazh/following{/other_user}","gists_url":"https://api.github.com/users/zxybazh/gists{/gist_id}","starred_url":"https://api.github.com/users/zxybazh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zxybazh/subscriptions","organizations_url":"https://api.github.com/users/zxybazh/orgs","repos_url":"https://api.github.com/users/zxybazh/repos","events_url":"https://api.github.com/users/zxybazh/events{/privacy}","received_events_url":"https://api.github.com/users/zxybazh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T00:01:07Z","updated_at":"2021-06-29T00:01:07Z","author_association":"MEMBER","body":"Hi Andrew, just curious about the context, why in this case would we add a target host to a target object that already has a different host?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870125243/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870128615","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870128615","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870128615,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDEyODYxNQ==","user":{"login":"AndrewZhaoLuo","id":13855451,"node_id":"MDQ6VXNlcjEzODU1NDUx","avatar_url":"https://avatars.githubusercontent.com/u/13855451?v=4","gravatar_id":"","url":"https://api.github.com/users/AndrewZhaoLuo","html_url":"https://github.com/AndrewZhaoLuo","followers_url":"https://api.github.com/users/AndrewZhaoLuo/followers","following_url":"https://api.github.com/users/AndrewZhaoLuo/following{/other_user}","gists_url":"https://api.github.com/users/AndrewZhaoLuo/gists{/gist_id}","starred_url":"https://api.github.com/users/AndrewZhaoLuo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndrewZhaoLuo/subscriptions","organizations_url":"https://api.github.com/users/AndrewZhaoLuo/orgs","repos_url":"https://api.github.com/users/AndrewZhaoLuo/repos","events_url":"https://api.github.com/users/AndrewZhaoLuo/events{/privacy}","received_events_url":"https://api.github.com/users/AndrewZhaoLuo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T00:08:13Z","updated_at":"2021-06-29T00:56:32Z","author_association":"CONTRIBUTOR","body":"Hmm, I'll be honest, I don't quite understand the target/host part of tvm very well. I was hoping you could give context on this since you were the last person on git to touch the line. Specifically the proper usage of the commented out check.\r\n\r\nThis method appears in a lot of places https://github.com/apache/tvm/blob/main/python/tvm/target/target.py#L171. And the problematic line specifically is this one: https://github.com/apache/tvm/blob/main/python/tvm/target/target.py#L200\r\n\r\nBefore it worked since a majority of tested systems used `fork()` as the method for multiprocessing. macOS and windows by default use a different process which is causing this error. If I had to guess why this is the case, it is because macOS and windows serialize and deserialize arguments to a process which breaks the pointer equality assumption in the 2 arg constructor.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870128615/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870130246","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870130246","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870130246,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDEzMDI0Ng==","user":{"login":"tkonolige","id":1501680,"node_id":"MDQ6VXNlcjE1MDE2ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1501680?v=4","gravatar_id":"","url":"https://api.github.com/users/tkonolige","html_url":"https://github.com/tkonolige","followers_url":"https://api.github.com/users/tkonolige/followers","following_url":"https://api.github.com/users/tkonolige/following{/other_user}","gists_url":"https://api.github.com/users/tkonolige/gists{/gist_id}","starred_url":"https://api.github.com/users/tkonolige/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tkonolige/subscriptions","organizations_url":"https://api.github.com/users/tkonolige/orgs","repos_url":"https://api.github.com/users/tkonolige/repos","events_url":"https://api.github.com/users/tkonolige/events{/privacy}","received_events_url":"https://api.github.com/users/tkonolige/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T00:12:03Z","updated_at":"2021-06-29T00:12:03Z","author_association":"CONTRIBUTOR","body":"@zxybazh The target host and the new host are functionally the same, but not the same object.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870130246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870137269","html_url":"https://github.com/apache/tvm/pull/8072#issuecomment-870137269","issue_url":"https://api.github.com/repos/apache/tvm/issues/8072","id":870137269,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDEzNzI2OQ==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T00:28:29Z","updated_at":"2021-06-29T00:28:29Z","author_association":"CONTRIBUTOR","body":"@manupa-arm please let me know if there's anything else--i believe your comments are all forward-looking, but want to understand if there are specific changes needed here to merge.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870137269/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870137434","html_url":"https://github.com/apache/tvm/pull/8072#issuecomment-870137434","issue_url":"https://api.github.com/repos/apache/tvm/issues/8072","id":870137434,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDEzNzQzNA==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T00:28:50Z","updated_at":"2021-06-29T00:28:50Z","author_association":"CONTRIBUTOR","body":"@giuseros please take another look and explicitly approve if you're ok with this","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870137434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870176117","html_url":"https://github.com/apache/tvm/pull/8220#issuecomment-870176117","issue_url":"https://api.github.com/repos/apache/tvm/issues/8220","id":870176117,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDE3NjExNw==","user":{"login":"chiwwang","id":84191062,"node_id":"MDQ6VXNlcjg0MTkxMDYy","avatar_url":"https://avatars.githubusercontent.com/u/84191062?v=4","gravatar_id":"","url":"https://api.github.com/users/chiwwang","html_url":"https://github.com/chiwwang","followers_url":"https://api.github.com/users/chiwwang/followers","following_url":"https://api.github.com/users/chiwwang/following{/other_user}","gists_url":"https://api.github.com/users/chiwwang/gists{/gist_id}","starred_url":"https://api.github.com/users/chiwwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chiwwang/subscriptions","organizations_url":"https://api.github.com/users/chiwwang/orgs","repos_url":"https://api.github.com/users/chiwwang/repos","events_url":"https://api.github.com/users/chiwwang/events{/privacy}","received_events_url":"https://api.github.com/users/chiwwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T02:21:49Z","updated_at":"2021-06-29T02:30:24Z","author_association":"CONTRIBUTOR","body":"@areusch Oops sorry I forgot to change the tag name. Fixed and checked with task_sphinx_precheck.sh. Hope it works this time.\r\n\r\n@tkonolige Thank you for so detailed review!\r\nAnd sorry for my some careless grammar mistakes :( ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870176117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870197052","html_url":"https://github.com/apache/tvm/pull/8267#issuecomment-870197052","issue_url":"https://api.github.com/repos/apache/tvm/issues/8267","id":870197052,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDE5NzA1Mg==","user":{"login":"ganler","id":38074777,"node_id":"MDQ6VXNlcjM4MDc0Nzc3","avatar_url":"https://avatars.githubusercontent.com/u/38074777?v=4","gravatar_id":"","url":"https://api.github.com/users/ganler","html_url":"https://github.com/ganler","followers_url":"https://api.github.com/users/ganler/followers","following_url":"https://api.github.com/users/ganler/following{/other_user}","gists_url":"https://api.github.com/users/ganler/gists{/gist_id}","starred_url":"https://api.github.com/users/ganler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ganler/subscriptions","organizations_url":"https://api.github.com/users/ganler/orgs","repos_url":"https://api.github.com/users/ganler/repos","events_url":"https://api.github.com/users/ganler/events{/privacy}","received_events_url":"https://api.github.com/users/ganler/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T03:13:30Z","updated_at":"2021-06-29T03:13:30Z","author_association":"CONTRIBUTOR","body":"Sorry for the late response. I have applied the 'let-it-leak' mechanism. @junrushao1994 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870197052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870238391","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870238391","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870238391,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDIzODM5MQ==","user":{"login":"zxybazh","id":3203174,"node_id":"MDQ6VXNlcjMyMDMxNzQ=","avatar_url":"https://avatars.githubusercontent.com/u/3203174?v=4","gravatar_id":"","url":"https://api.github.com/users/zxybazh","html_url":"https://github.com/zxybazh","followers_url":"https://api.github.com/users/zxybazh/followers","following_url":"https://api.github.com/users/zxybazh/following{/other_user}","gists_url":"https://api.github.com/users/zxybazh/gists{/gist_id}","starred_url":"https://api.github.com/users/zxybazh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zxybazh/subscriptions","organizations_url":"https://api.github.com/users/zxybazh/orgs","repos_url":"https://api.github.com/users/zxybazh/repos","events_url":"https://api.github.com/users/zxybazh/events{/privacy}","received_events_url":"https://api.github.com/users/zxybazh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T05:05:36Z","updated_at":"2021-06-29T05:05:36Z","author_association":"MEMBER","body":"OK, in that case, is it possible that you explicitly clear the host field of the given target object and then construct it this way? Because `fork` seem to be a special case, and generally the host should always be consistent.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870238391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870277530","html_url":"https://github.com/apache/tvm/pull/8267#issuecomment-870277530","issue_url":"https://api.github.com/repos/apache/tvm/issues/8267","id":870277530,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDI3NzUzMA==","user":{"login":"junrushao","id":22515877,"node_id":"MDQ6VXNlcjIyNTE1ODc3","avatar_url":"https://avatars.githubusercontent.com/u/22515877?v=4","gravatar_id":"","url":"https://api.github.com/users/junrushao","html_url":"https://github.com/junrushao","followers_url":"https://api.github.com/users/junrushao/followers","following_url":"https://api.github.com/users/junrushao/following{/other_user}","gists_url":"https://api.github.com/users/junrushao/gists{/gist_id}","starred_url":"https://api.github.com/users/junrushao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junrushao/subscriptions","organizations_url":"https://api.github.com/users/junrushao/orgs","repos_url":"https://api.github.com/users/junrushao/repos","events_url":"https://api.github.com/users/junrushao/events{/privacy}","received_events_url":"https://api.github.com/users/junrushao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T06:30:23Z","updated_at":"2021-06-29T06:30:23Z","author_association":"MEMBER","body":"Cc: @comaniac ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870277530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870347980","html_url":"https://github.com/apache/tvm/issues/8140#issuecomment-870347980","issue_url":"https://api.github.com/repos/apache/tvm/issues/8140","id":870347980,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDM0Nzk4MA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T07:30:45Z","updated_at":"2021-06-29T07:34:37Z","author_association":"MEMBER","body":"Another failure from the `(1, 64, 20, 4)` workload despite the fix in https://github.com/apache/tvm/pull/8335. `Mismatched elements: 65 / 256 (25.4%)` or ` Mismatched elements: 102 / 256 (39.8%)` suggest that something is off @trevor-m \r\n\r\nhttps://ci.tlcpack.ai/blue/organizations/jenkins/tvm/detail/PR-8358/2/pipeline\r\nhttps://ci.tlcpack.ai/blue/organizations/jenkins/tvm/detail/PR-8357/1/pipeline","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870347980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870348885","html_url":"https://github.com/apache/tvm/pull/8358#issuecomment-870348885","issue_url":"https://api.github.com/repos/apache/tvm/issues/8358","id":870348885,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDM0ODg4NQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T07:32:05Z","updated_at":"2021-06-29T07:32:55Z","author_association":"MEMBER","body":"https://ci.tlcpack.ai/blue/organizations/jenkins/tvm/detail/PR-8358/2/pipeline/\r\n\r\nWe should disable this flaky test case. My mitigation in https://github.com/apache/tvm/pull/8335 apparently didn't help for this workload. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870348885/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870453510","html_url":"https://github.com/apache/tvm/pull/8313#issuecomment-870453510","issue_url":"https://api.github.com/repos/apache/tvm/issues/8313","id":870453510,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDQ1MzUxMA==","user":{"login":"echuraev","id":5525113,"node_id":"MDQ6VXNlcjU1MjUxMTM=","avatar_url":"https://avatars.githubusercontent.com/u/5525113?v=4","gravatar_id":"","url":"https://api.github.com/users/echuraev","html_url":"https://github.com/echuraev","followers_url":"https://api.github.com/users/echuraev/followers","following_url":"https://api.github.com/users/echuraev/following{/other_user}","gists_url":"https://api.github.com/users/echuraev/gists{/gist_id}","starred_url":"https://api.github.com/users/echuraev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/echuraev/subscriptions","organizations_url":"https://api.github.com/users/echuraev/orgs","repos_url":"https://api.github.com/users/echuraev/repos","events_url":"https://api.github.com/users/echuraev/events{/privacy}","received_events_url":"https://api.github.com/users/echuraev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T09:57:11Z","updated_at":"2021-06-29T09:57:11Z","author_association":"CONTRIBUTOR","body":"> Not exactly, but I've dealt with a similar issue. My mitigation was to limit the maximum fusion depth, which breaks large parameter kernels into smaller ones. But that is not guaranteed to work and not predictable. I can imagine that having a pass like this that allows more fine-grained controls might be necessary in some cases.\r\n> \r\n> @echuraev FYI you can cap the fuse depth by\r\n> \r\n> https://github.com/apache/tvm/blob/720e7b1ebd9b789a1100dee7536d0633c7941dd1/tests/python/relay/test_pass_fuse_ops.py#L755\r\n\r\nThank you! I thought about the reducing fuse depth, but as you mentioned, it is not predictable and not guaranteed to work. This is why I think that this approach with splitting kernels is more robust.\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870453510/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870458257","html_url":"https://github.com/apache/tvm/pull/8313#issuecomment-870458257","issue_url":"https://api.github.com/repos/apache/tvm/issues/8313","id":870458257,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDQ1ODI1Nw==","user":{"login":"echuraev","id":5525113,"node_id":"MDQ6VXNlcjU1MjUxMTM=","avatar_url":"https://avatars.githubusercontent.com/u/5525113?v=4","gravatar_id":"","url":"https://api.github.com/users/echuraev","html_url":"https://github.com/echuraev","followers_url":"https://api.github.com/users/echuraev/followers","following_url":"https://api.github.com/users/echuraev/following{/other_user}","gists_url":"https://api.github.com/users/echuraev/gists{/gist_id}","starred_url":"https://api.github.com/users/echuraev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/echuraev/subscriptions","organizations_url":"https://api.github.com/users/echuraev/orgs","repos_url":"https://api.github.com/users/echuraev/repos","events_url":"https://api.github.com/users/echuraev/events{/privacy}","received_events_url":"https://api.github.com/users/echuraev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T10:04:11Z","updated_at":"2021-06-29T10:04:11Z","author_association":"CONTRIBUTOR","body":"> Minor nit.\r\n> \r\n> In general, I see the utility for single Relay kernels that have too many inputs, but I wonder if you'll hit this more for kernels post-fusion. This doesn't seem to tackle that for anything other than giant concatenation?\r\n\r\nYes, now it is solving only problem with concat layer. I thought that maybe this pass can be useful in case of split layer for example. But I wasn't able to reproduce the same problem for a split layer on several simple tests.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870458257/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870512072","html_url":"https://github.com/apache/tvm/pull/8096#issuecomment-870512072","issue_url":"https://api.github.com/repos/apache/tvm/issues/8096","id":870512072,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDUxMjA3Mg==","user":{"login":"giuseros","id":2017147,"node_id":"MDQ6VXNlcjIwMTcxNDc=","avatar_url":"https://avatars.githubusercontent.com/u/2017147?v=4","gravatar_id":"","url":"https://api.github.com/users/giuseros","html_url":"https://github.com/giuseros","followers_url":"https://api.github.com/users/giuseros/followers","following_url":"https://api.github.com/users/giuseros/following{/other_user}","gists_url":"https://api.github.com/users/giuseros/gists{/gist_id}","starred_url":"https://api.github.com/users/giuseros/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giuseros/subscriptions","organizations_url":"https://api.github.com/users/giuseros/orgs","repos_url":"https://api.github.com/users/giuseros/repos","events_url":"https://api.github.com/users/giuseros/events{/privacy}","received_events_url":"https://api.github.com/users/giuseros/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T11:26:36Z","updated_at":"2021-06-29T11:26:36Z","author_association":"CONTRIBUTOR","body":"Hi @jroesch, \r\nThe solution I picked is to use the common `StorageInfo` so that later on we can have a PR to move from SoA to AoS for all the users of that structure (i.e., all the memory planning algorithms). \r\n\r\nThanks,\r\nGiuseppe","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870512072/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870515314","html_url":"https://github.com/apache/tvm/pull/8234#issuecomment-870515314","issue_url":"https://api.github.com/repos/apache/tvm/issues/8234","id":870515314,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDUxNTMxNA==","user":{"login":"jcf94","id":12119698,"node_id":"MDQ6VXNlcjEyMTE5Njk4","avatar_url":"https://avatars.githubusercontent.com/u/12119698?v=4","gravatar_id":"","url":"https://api.github.com/users/jcf94","html_url":"https://github.com/jcf94","followers_url":"https://api.github.com/users/jcf94/followers","following_url":"https://api.github.com/users/jcf94/following{/other_user}","gists_url":"https://api.github.com/users/jcf94/gists{/gist_id}","starred_url":"https://api.github.com/users/jcf94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jcf94/subscriptions","organizations_url":"https://api.github.com/users/jcf94/orgs","repos_url":"https://api.github.com/users/jcf94/repos","events_url":"https://api.github.com/users/jcf94/events{/privacy}","received_events_url":"https://api.github.com/users/jcf94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T11:31:50Z","updated_at":"2021-06-29T11:31:50Z","author_association":"CONTRIBUTOR","body":"Thanks! @comaniac @tkonolige  Most comments have been addressed.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870515314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870552987","html_url":"https://github.com/apache/tvm/pull/8354#issuecomment-870552987","issue_url":"https://api.github.com/repos/apache/tvm/issues/8354","id":870552987,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDU1Mjk4Nw==","user":{"login":"Hzfengsy","id":25500082,"node_id":"MDQ6VXNlcjI1NTAwMDgy","avatar_url":"https://avatars.githubusercontent.com/u/25500082?v=4","gravatar_id":"","url":"https://api.github.com/users/Hzfengsy","html_url":"https://github.com/Hzfengsy","followers_url":"https://api.github.com/users/Hzfengsy/followers","following_url":"https://api.github.com/users/Hzfengsy/following{/other_user}","gists_url":"https://api.github.com/users/Hzfengsy/gists{/gist_id}","starred_url":"https://api.github.com/users/Hzfengsy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hzfengsy/subscriptions","organizations_url":"https://api.github.com/users/Hzfengsy/orgs","repos_url":"https://api.github.com/users/Hzfengsy/repos","events_url":"https://api.github.com/users/Hzfengsy/events{/privacy}","received_events_url":"https://api.github.com/users/Hzfengsy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T12:22:09Z","updated_at":"2021-06-29T12:22:09Z","author_association":"MEMBER","body":"Thanks, @comaniac. Just have fixed it","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870552987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870633463","html_url":"https://github.com/apache/tvm/pull/8361#issuecomment-870633463","issue_url":"https://api.github.com/repos/apache/tvm/issues/8361","id":870633463,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDYzMzQ2Mw==","user":{"login":"giuseros","id":2017147,"node_id":"MDQ6VXNlcjIwMTcxNDc=","avatar_url":"https://avatars.githubusercontent.com/u/2017147?v=4","gravatar_id":"","url":"https://api.github.com/users/giuseros","html_url":"https://github.com/giuseros","followers_url":"https://api.github.com/users/giuseros/followers","following_url":"https://api.github.com/users/giuseros/following{/other_user}","gists_url":"https://api.github.com/users/giuseros/gists{/gist_id}","starred_url":"https://api.github.com/users/giuseros/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giuseros/subscriptions","organizations_url":"https://api.github.com/users/giuseros/orgs","repos_url":"https://api.github.com/users/giuseros/repos","events_url":"https://api.github.com/users/giuseros/events{/privacy}","received_events_url":"https://api.github.com/users/giuseros/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T14:08:23Z","updated_at":"2021-06-29T14:08:23Z","author_association":"CONTRIBUTOR","body":"@mbaret @leandron could you double check this and possibly merge?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870633463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870658270","html_url":"https://github.com/apache/tvm/pull/8313#issuecomment-870658270","issue_url":"https://api.github.com/repos/apache/tvm/issues/8313","id":870658270,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDY1ODI3MA==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T14:37:18Z","updated_at":"2021-06-29T14:37:46Z","author_association":"CONTRIBUTOR","body":"I have no problems merging this as it stands, but I do think I have a bigger question:\r\n\r\nShould we put some sort of logic into fusion to automatically stop fusion if the argument list grows too large per this setting? That should be more robust than arbitrarily limiting the fusion depth. It could of course be a second PR.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870658270/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870667768","html_url":"https://github.com/apache/tvm/pull/8367#issuecomment-870667768","issue_url":"https://api.github.com/repos/apache/tvm/issues/8367","id":870667768,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDY2Nzc2OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T14:49:10Z","updated_at":"2021-06-29T14:49:10Z","author_association":"MEMBER","body":"ignoring types from FFI is fine since we likely will always have a wrapper around FFI calls and we only need to type the wrappers","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870667768/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870670939","html_url":"https://github.com/apache/tvm/pull/8361#issuecomment-870670939","issue_url":"https://api.github.com/repos/apache/tvm/issues/8361","id":870670939,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDY3MDkzOQ==","user":{"login":"mbaret","id":55580676,"node_id":"MDQ6VXNlcjU1NTgwNjc2","avatar_url":"https://avatars.githubusercontent.com/u/55580676?v=4","gravatar_id":"","url":"https://api.github.com/users/mbaret","html_url":"https://github.com/mbaret","followers_url":"https://api.github.com/users/mbaret/followers","following_url":"https://api.github.com/users/mbaret/following{/other_user}","gists_url":"https://api.github.com/users/mbaret/gists{/gist_id}","starred_url":"https://api.github.com/users/mbaret/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbaret/subscriptions","organizations_url":"https://api.github.com/users/mbaret/orgs","repos_url":"https://api.github.com/users/mbaret/repos","events_url":"https://api.github.com/users/mbaret/events{/privacy}","received_events_url":"https://api.github.com/users/mbaret/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T14:53:08Z","updated_at":"2021-06-29T14:53:08Z","author_association":"CONTRIBUTOR","body":"This patch looks good to me, ideally we should have test cases for this though. I'm not up to speed on the status of Arm CI so am unsure how immediately feasible this is, perhaps @u99127 or @leandron know more.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870670939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870702448","html_url":"https://github.com/apache/tvm/pull/8220#issuecomment-870702448","issue_url":"https://api.github.com/repos/apache/tvm/issues/8220","id":870702448,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDcwMjQ0OA==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T15:32:16Z","updated_at":"2021-06-29T15:32:16Z","author_association":"CONTRIBUTOR","body":"@tkonolige @zackcquic please take a look and explicitly approve if you're good with this PR","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870702448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870717130","html_url":"https://github.com/apache/tvm/issues/8177#issuecomment-870717130","issue_url":"https://api.github.com/repos/apache/tvm/issues/8177","id":870717130,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDcxNzEzMA==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T15:51:42Z","updated_at":"2021-06-29T15:51:42Z","author_association":"CONTRIBUTOR","body":"I built the images at pushed them to a PR this morning, I expect the job to fail due to #8339 , but we'll see if there's anything else.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870717130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870776420","html_url":"https://github.com/apache/tvm/pull/8336#issuecomment-870776420","issue_url":"https://api.github.com/repos/apache/tvm/issues/8336","id":870776420,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDc3NjQyMA==","user":{"login":"Lunderberg","id":3888575,"node_id":"MDQ6VXNlcjM4ODg1NzU=","avatar_url":"https://avatars.githubusercontent.com/u/3888575?v=4","gravatar_id":"","url":"https://api.github.com/users/Lunderberg","html_url":"https://github.com/Lunderberg","followers_url":"https://api.github.com/users/Lunderberg/followers","following_url":"https://api.github.com/users/Lunderberg/following{/other_user}","gists_url":"https://api.github.com/users/Lunderberg/gists{/gist_id}","starred_url":"https://api.github.com/users/Lunderberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Lunderberg/subscriptions","organizations_url":"https://api.github.com/users/Lunderberg/orgs","repos_url":"https://api.github.com/users/Lunderberg/repos","events_url":"https://api.github.com/users/Lunderberg/events{/privacy}","received_events_url":"https://api.github.com/users/Lunderberg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T17:18:44Z","updated_at":"2021-06-29T17:18:55Z","author_association":"CONTRIBUTOR","body":"Added a few fixes in the codegen needed for the vulkan tests to run correctly on newer nvidia GPUs.  (@masahi )","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870776420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870793648","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870793648","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870793648,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDc5MzY0OA==","user":{"login":"AndrewZhaoLuo","id":13855451,"node_id":"MDQ6VXNlcjEzODU1NDUx","avatar_url":"https://avatars.githubusercontent.com/u/13855451?v=4","gravatar_id":"","url":"https://api.github.com/users/AndrewZhaoLuo","html_url":"https://github.com/AndrewZhaoLuo","followers_url":"https://api.github.com/users/AndrewZhaoLuo/followers","following_url":"https://api.github.com/users/AndrewZhaoLuo/following{/other_user}","gists_url":"https://api.github.com/users/AndrewZhaoLuo/gists{/gist_id}","starred_url":"https://api.github.com/users/AndrewZhaoLuo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndrewZhaoLuo/subscriptions","organizations_url":"https://api.github.com/users/AndrewZhaoLuo/orgs","repos_url":"https://api.github.com/users/AndrewZhaoLuo/repos","events_url":"https://api.github.com/users/AndrewZhaoLuo/events{/privacy}","received_events_url":"https://api.github.com/users/AndrewZhaoLuo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T17:46:51Z","updated_at":"2021-06-29T17:46:51Z","author_association":"CONTRIBUTOR","body":"> OK, in that case, is it possible that you explicitly clear the host field of the given target object and then construct it this way? Because `fork` seem to be a special case, and generally the host should always be consistent.\r\n\r\nNot from the python end it looks like.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870793648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870815268","html_url":"https://github.com/apache/tvm/issues/8177#issuecomment-870815268","issue_url":"https://api.github.com/repos/apache/tvm/issues/8177","id":870815268,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDgxNTI2OA==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T18:20:51Z","updated_at":"2021-06-29T18:20:51Z","author_association":"CONTRIBUTOR","body":"Okay, I see failures with tflite, but I also saw this:\r\n```\r\nWARNING: The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested\r\n\r\nstandard_init_linux.go:219: exec user process caused: exec format error\r\n\r\nscript returned exit code 1\r\n```\r\nI built the arm image on an amd64 system, do I need to build it on an ARM system instead?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870815268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870825551","html_url":"https://github.com/apache/tvm/issues/8177#issuecomment-870825551","issue_url":"https://api.github.com/repos/apache/tvm/issues/8177","id":870825551,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDgyNTU1MQ==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T18:37:41Z","updated_at":"2021-06-29T18:37:41Z","author_association":"CONTRIBUTOR","body":"the platform error is due to building ci-arm on wrong arch (i use an m6g on AWS). i'm rebuilding for you now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870825551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870830532","html_url":"https://github.com/apache/tvm/issues/8177#issuecomment-870830532","issue_url":"https://api.github.com/repos/apache/tvm/issues/8177","id":870830532,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDgzMDUzMg==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T18:45:32Z","updated_at":"2021-06-29T18:45:32Z","author_association":"CONTRIBUTOR","body":"```Step 17/17 : RUN bash /install/ubuntu_download_arm_compute_lib_binaries.sh\r\n ---> Running in 6b00dc0292ec\r\nHit:1 https://apt.llvm.org/xenial llvm-toolchain-xenial-4.0 InRelease\r\nHit:2 https://apt.llvm.org/xenial llvm-toolchain-xenial-7 InRelease\r\nHit:3 https://apt.llvm.org/xenial llvm-toolchain-xenial-8 InRelease\r\nHit:4 https://apt.llvm.org/xenial llvm-toolchain-xenial-9 InRelease\r\nHit:5 https://apt.llvm.org/xenial llvm-toolchain-xenial InRelease\r\nHit:6 http://ports.ubuntu.com/ubuntu-ports bionic InRelease\r\nHit:7 http://ports.ubuntu.com/ubuntu-ports bionic-updates InRelease\r\nHit:8 http://ports.ubuntu.com/ubuntu-ports bionic-backports InRelease\r\nHit:9 http://ports.ubuntu.com/ubuntu-ports bionic-security InRelease\r\nReading package lists...\r\nReading package lists...\r\nBuilding dependency tree...\r\nReading state information...\r\nPackage gcc-aarch64-linux-gnu is not available, but is referred to by another package.\r\nThis may mean that the package is missing, has been obsoleted, or\r\nis only available from another source\r\n\r\nPackage g++-aarch64-linux-gnu is not available, but is referred to by another package.\r\nThis may mean that the package is missing, has been obsoleted, or\r\nis only available from another source\r\n\r\nE: Package 'g++-aarch64-linux-gnu' has no installation candidate\r\nE: Package 'gcc-aarch64-linux-gnu' has no installation candidate\r\nThe command '/bin/sh -c bash /install/ubuntu_download_arm_compute_lib_binaries.sh' returned a non-zero code: 100\r\nERROR: docker build failed.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870830532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870853665","html_url":"https://github.com/apache/tvm/pull/8313#issuecomment-870853665","issue_url":"https://api.github.com/repos/apache/tvm/issues/8313","id":870853665,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDg1MzY2NQ==","user":{"login":"echuraev","id":5525113,"node_id":"MDQ6VXNlcjU1MjUxMTM=","avatar_url":"https://avatars.githubusercontent.com/u/5525113?v=4","gravatar_id":"","url":"https://api.github.com/users/echuraev","html_url":"https://github.com/echuraev","followers_url":"https://api.github.com/users/echuraev/followers","following_url":"https://api.github.com/users/echuraev/following{/other_user}","gists_url":"https://api.github.com/users/echuraev/gists{/gist_id}","starred_url":"https://api.github.com/users/echuraev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/echuraev/subscriptions","organizations_url":"https://api.github.com/users/echuraev/orgs","repos_url":"https://api.github.com/users/echuraev/repos","events_url":"https://api.github.com/users/echuraev/events{/privacy}","received_events_url":"https://api.github.com/users/echuraev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T19:22:28Z","updated_at":"2021-06-29T19:22:28Z","author_association":"CONTRIBUTOR","body":"> I have no problems merging this as it stands, but I do think I have a bigger question:\r\n> \r\n> Should we put some sort of logic into fusion to automatically stop fusion if the argument list grows too large per this setting? That should be more robust than arbitrarily limiting the fusion depth. It could of course be a second PR.\r\n\r\nIt's a good point and looks reasonable to add such logic into the fusion algorithm. It could help us to avoid some possible problems with number of arguments in the future. I think it would be better to do such logic in separate PR, due to problem with concat layer can appear and without fusing. For example, in the original problem we had many inputs because for each input to concat we had some preprocessing. And the fusing algorithm wasn't able to fuse these inputs into tuple due to this preprocessing. I don't think that the limit on the fusion depth can solve this problem.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870853665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870872102","html_url":"https://github.com/apache/tvm/pull/8371#issuecomment-870872102","issue_url":"https://api.github.com/repos/apache/tvm/issues/8371","id":870872102,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDg3MjEwMg==","user":{"login":"u99127","id":19559067,"node_id":"MDQ6VXNlcjE5NTU5MDY3","avatar_url":"https://avatars.githubusercontent.com/u/19559067?v=4","gravatar_id":"","url":"https://api.github.com/users/u99127","html_url":"https://github.com/u99127","followers_url":"https://api.github.com/users/u99127/followers","following_url":"https://api.github.com/users/u99127/following{/other_user}","gists_url":"https://api.github.com/users/u99127/gists{/gist_id}","starred_url":"https://api.github.com/users/u99127/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/u99127/subscriptions","organizations_url":"https://api.github.com/users/u99127/orgs","repos_url":"https://api.github.com/users/u99127/repos","events_url":"https://api.github.com/users/u99127/events{/privacy}","received_events_url":"https://api.github.com/users/u99127/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T19:54:19Z","updated_at":"2021-06-29T19:54:19Z","author_association":"CONTRIBUTOR","body":"CC @areusch  , @d-smirnov ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870872102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870872745","html_url":"https://github.com/apache/tvm/issues/8177#issuecomment-870872745","issue_url":"https://api.github.com/repos/apache/tvm/issues/8177","id":870872745,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDg3Mjc0NQ==","user":{"login":"u99127","id":19559067,"node_id":"MDQ6VXNlcjE5NTU5MDY3","avatar_url":"https://avatars.githubusercontent.com/u/19559067?v=4","gravatar_id":"","url":"https://api.github.com/users/u99127","html_url":"https://github.com/u99127","followers_url":"https://api.github.com/users/u99127/followers","following_url":"https://api.github.com/users/u99127/following{/other_user}","gists_url":"https://api.github.com/users/u99127/gists{/gist_id}","starred_url":"https://api.github.com/users/u99127/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/u99127/subscriptions","organizations_url":"https://api.github.com/users/u99127/orgs","repos_url":"https://api.github.com/users/u99127/repos","events_url":"https://api.github.com/users/u99127/events{/privacy}","received_events_url":"https://api.github.com/users/u99127/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T19:55:24Z","updated_at":"2021-06-29T19:55:24Z","author_association":"CONTRIBUTOR","body":"Looks like I hadn't tested it properly. I think #8371 should fix it.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870872745/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870904931","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870904931","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870904931,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDkwNDkzMQ==","user":{"login":"zxybazh","id":3203174,"node_id":"MDQ6VXNlcjMyMDMxNzQ=","avatar_url":"https://avatars.githubusercontent.com/u/3203174?v=4","gravatar_id":"","url":"https://api.github.com/users/zxybazh","html_url":"https://github.com/zxybazh","followers_url":"https://api.github.com/users/zxybazh/followers","following_url":"https://api.github.com/users/zxybazh/following{/other_user}","gists_url":"https://api.github.com/users/zxybazh/gists{/gist_id}","starred_url":"https://api.github.com/users/zxybazh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zxybazh/subscriptions","organizations_url":"https://api.github.com/users/zxybazh/orgs","repos_url":"https://api.github.com/users/zxybazh/repos","events_url":"https://api.github.com/users/zxybazh/events{/privacy}","received_events_url":"https://api.github.com/users/zxybazh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T20:45:57Z","updated_at":"2021-06-29T20:45:57Z","author_association":"MEMBER","body":"> > OK, in that case, is it possible that you explicitly clear the host field of the given target object and then construct it this way? Because `fork` seem to be a special case, and generally the host should always be consistent.\r\n> \r\n> Not from the python end it looks like.\r\n\r\nWould `target.host = None` work?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870904931/reactions","total_count":1,"+1":0,"-1":1,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870916059","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870916059","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870916059,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDkxNjA1OQ==","user":{"login":"AndrewZhaoLuo","id":13855451,"node_id":"MDQ6VXNlcjEzODU1NDUx","avatar_url":"https://avatars.githubusercontent.com/u/13855451?v=4","gravatar_id":"","url":"https://api.github.com/users/AndrewZhaoLuo","html_url":"https://github.com/AndrewZhaoLuo","followers_url":"https://api.github.com/users/AndrewZhaoLuo/followers","following_url":"https://api.github.com/users/AndrewZhaoLuo/following{/other_user}","gists_url":"https://api.github.com/users/AndrewZhaoLuo/gists{/gist_id}","starred_url":"https://api.github.com/users/AndrewZhaoLuo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndrewZhaoLuo/subscriptions","organizations_url":"https://api.github.com/users/AndrewZhaoLuo/orgs","repos_url":"https://api.github.com/users/AndrewZhaoLuo/repos","events_url":"https://api.github.com/users/AndrewZhaoLuo/events{/privacy}","received_events_url":"https://api.github.com/users/AndrewZhaoLuo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T21:04:41Z","updated_at":"2021-06-29T21:04:41Z","author_association":"CONTRIBUTOR","body":"Ok folks ready for review. This works with llvm and metal on m1 mac with \"spawn\" multiprocessing enabled. I also added a test to make sure other multiprocessing tests work.\r\n\r\nThe key assumption is when invoking the `Target::Target(Target target, Target host)` constructor it's ok if `target->host` and `host` refer to the same underlying target. This appears to be the intention with the line `n->host.same_as(host)`. \r\n\r\nHowever `spawn()` breaks any pointer equality so we need to have some sort of deep equals. This does not exist so for now I'm just comparing the human readable strings instead.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870916059/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870917419","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870917419","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870917419,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDkxNzQxOQ==","user":{"login":"AndrewZhaoLuo","id":13855451,"node_id":"MDQ6VXNlcjEzODU1NDUx","avatar_url":"https://avatars.githubusercontent.com/u/13855451?v=4","gravatar_id":"","url":"https://api.github.com/users/AndrewZhaoLuo","html_url":"https://github.com/AndrewZhaoLuo","followers_url":"https://api.github.com/users/AndrewZhaoLuo/followers","following_url":"https://api.github.com/users/AndrewZhaoLuo/following{/other_user}","gists_url":"https://api.github.com/users/AndrewZhaoLuo/gists{/gist_id}","starred_url":"https://api.github.com/users/AndrewZhaoLuo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndrewZhaoLuo/subscriptions","organizations_url":"https://api.github.com/users/AndrewZhaoLuo/orgs","repos_url":"https://api.github.com/users/AndrewZhaoLuo/repos","events_url":"https://api.github.com/users/AndrewZhaoLuo/events{/privacy}","received_events_url":"https://api.github.com/users/AndrewZhaoLuo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T21:06:53Z","updated_at":"2021-06-29T21:06:53Z","author_association":"CONTRIBUTOR","body":"> > > OK, in that case, is it possible that you explicitly clear the host field of the given target object and then construct it this way? Because `fork` seem to be a special case, and generally the host should always be consistent.\r\n> > \r\n> > \r\n> > Not from the python end it looks like.\r\n> \r\n> Would `target.host = None` work?\r\n\r\nIt does not actually modify the underlying object.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870917419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870942079","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-870942079","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":870942079,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDk0MjA3OQ==","user":{"login":"AndrewZhaoLuo","id":13855451,"node_id":"MDQ6VXNlcjEzODU1NDUx","avatar_url":"https://avatars.githubusercontent.com/u/13855451?v=4","gravatar_id":"","url":"https://api.github.com/users/AndrewZhaoLuo","html_url":"https://github.com/AndrewZhaoLuo","followers_url":"https://api.github.com/users/AndrewZhaoLuo/followers","following_url":"https://api.github.com/users/AndrewZhaoLuo/following{/other_user}","gists_url":"https://api.github.com/users/AndrewZhaoLuo/gists{/gist_id}","starred_url":"https://api.github.com/users/AndrewZhaoLuo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndrewZhaoLuo/subscriptions","organizations_url":"https://api.github.com/users/AndrewZhaoLuo/orgs","repos_url":"https://api.github.com/users/AndrewZhaoLuo/repos","events_url":"https://api.github.com/users/AndrewZhaoLuo/events{/privacy}","received_events_url":"https://api.github.com/users/AndrewZhaoLuo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T21:49:47Z","updated_at":"2021-06-29T21:49:47Z","author_association":"CONTRIBUTOR","body":"I chatted offline with @zxybazh about this and he says the check is not needed. \r\n\r\nFurthermore, the entire target system is going to revamped relatively soon. \r\n\r\nTherefore I have elected to just remove the check making this PR hopefully less controversial.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870942079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870979958","html_url":"https://github.com/apache/tvm/pull/8096#issuecomment-870979958","issue_url":"https://api.github.com/repos/apache/tvm/issues/8096","id":870979958,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDk3OTk1OA==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T23:17:24Z","updated_at":"2021-06-29T23:17:24Z","author_association":"CONTRIBUTOR","body":"thanks for working through this one with us @giuseros, the PR is now merged! we will now temporarily prioritize #7518 over further compiler changes. we aim to land that this week, so feel free to send additional PRs based on top of that if you'd like.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870979958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870993302","html_url":"https://github.com/apache/tvm/issues/8272#issuecomment-870993302","issue_url":"https://api.github.com/repos/apache/tvm/issues/8272","id":870993302,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDk5MzMwMg==","user":{"login":"electriclilies","id":17014049,"node_id":"MDQ6VXNlcjE3MDE0MDQ5","avatar_url":"https://avatars.githubusercontent.com/u/17014049?v=4","gravatar_id":"","url":"https://api.github.com/users/electriclilies","html_url":"https://github.com/electriclilies","followers_url":"https://api.github.com/users/electriclilies/followers","following_url":"https://api.github.com/users/electriclilies/following{/other_user}","gists_url":"https://api.github.com/users/electriclilies/gists{/gist_id}","starred_url":"https://api.github.com/users/electriclilies/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/electriclilies/subscriptions","organizations_url":"https://api.github.com/users/electriclilies/orgs","repos_url":"https://api.github.com/users/electriclilies/repos","events_url":"https://api.github.com/users/electriclilies/events{/privacy}","received_events_url":"https://api.github.com/users/electriclilies/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T23:53:36Z","updated_at":"2021-06-29T23:53:36Z","author_association":"CONTRIBUTOR","body":"Hi @GoodNight-bye, for general debugging, it would be better for you to open create a discussion post where the community can give input about what is wrong. If you have a found a specific bug, then you should create a tracking issue.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/870993302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871003368","html_url":"https://github.com/apache/tvm/pull/8373#issuecomment-871003368","issue_url":"https://api.github.com/repos/apache/tvm/issues/8373","id":871003368,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTAwMzM2OA==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T00:16:23Z","updated_at":"2021-06-30T00:16:23Z","author_association":"CONTRIBUTOR","body":"> LGTM. One tip: ccache-3.x doesn't support nvcc well, so CUDA kernels may never hit the cache and still need to be re-compiled every time. Using ccache 4.0+ can resolve this issue.\r\n\r\nCan we add that to the documentation on the option?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871003368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871012328","html_url":"https://github.com/apache/tvm/pull/8373#issuecomment-871012328","issue_url":"https://api.github.com/repos/apache/tvm/issues/8373","id":871012328,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTAxMjMyOA==","user":{"login":"mehrdadh","id":6409345,"node_id":"MDQ6VXNlcjY0MDkzNDU=","avatar_url":"https://avatars.githubusercontent.com/u/6409345?v=4","gravatar_id":"","url":"https://api.github.com/users/mehrdadh","html_url":"https://github.com/mehrdadh","followers_url":"https://api.github.com/users/mehrdadh/followers","following_url":"https://api.github.com/users/mehrdadh/following{/other_user}","gists_url":"https://api.github.com/users/mehrdadh/gists{/gist_id}","starred_url":"https://api.github.com/users/mehrdadh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mehrdadh/subscriptions","organizations_url":"https://api.github.com/users/mehrdadh/orgs","repos_url":"https://api.github.com/users/mehrdadh/repos","events_url":"https://api.github.com/users/mehrdadh/events{/privacy}","received_events_url":"https://api.github.com/users/mehrdadh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T00:37:19Z","updated_at":"2021-06-30T00:37:19Z","author_association":"MEMBER","body":"@electriclilies this is great! thanks for adding this feature.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871012328/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871014401","html_url":"https://github.com/apache/tvm/pull/8373#issuecomment-871014401","issue_url":"https://api.github.com/repos/apache/tvm/issues/8373","id":871014401,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTAxNDQwMQ==","user":{"login":"electriclilies","id":17014049,"node_id":"MDQ6VXNlcjE3MDE0MDQ5","avatar_url":"https://avatars.githubusercontent.com/u/17014049?v=4","gravatar_id":"","url":"https://api.github.com/users/electriclilies","html_url":"https://github.com/electriclilies","followers_url":"https://api.github.com/users/electriclilies/followers","following_url":"https://api.github.com/users/electriclilies/following{/other_user}","gists_url":"https://api.github.com/users/electriclilies/gists{/gist_id}","starred_url":"https://api.github.com/users/electriclilies/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/electriclilies/subscriptions","organizations_url":"https://api.github.com/users/electriclilies/orgs","repos_url":"https://api.github.com/users/electriclilies/repos","events_url":"https://api.github.com/users/electriclilies/events{/privacy}","received_events_url":"https://api.github.com/users/electriclilies/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T00:43:24Z","updated_at":"2021-06-30T00:43:24Z","author_association":"CONTRIBUTOR","body":"@mbrookhart Added it :)\r\n@mehrdadh This snippet has been circulating for a while, I got it from @csullivan originally :) I figured I should put it in the codebase after it got wiped from my local config.cmake file when I built using docker and then I had to track down the snippet again 🤣 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871014401/reactions","total_count":1,"+1":0,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871015579","html_url":"https://github.com/apache/tvm/pull/8267#issuecomment-871015579","issue_url":"https://api.github.com/repos/apache/tvm/issues/8267","id":871015579,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTAxNTU3OQ==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T00:47:33Z","updated_at":"2021-06-30T00:47:33Z","author_association":"CONTRIBUTOR","body":"Thanks @ganler @junrushao1994 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871015579/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871020796","html_url":"https://github.com/apache/tvm/pull/8373#issuecomment-871020796","issue_url":"https://api.github.com/repos/apache/tvm/issues/8373","id":871020796,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTAyMDc5Ng==","user":{"login":"electriclilies","id":17014049,"node_id":"MDQ6VXNlcjE3MDE0MDQ5","avatar_url":"https://avatars.githubusercontent.com/u/17014049?v=4","gravatar_id":"","url":"https://api.github.com/users/electriclilies","html_url":"https://github.com/electriclilies","followers_url":"https://api.github.com/users/electriclilies/followers","following_url":"https://api.github.com/users/electriclilies/following{/other_user}","gists_url":"https://api.github.com/users/electriclilies/gists{/gist_id}","starred_url":"https://api.github.com/users/electriclilies/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/electriclilies/subscriptions","organizations_url":"https://api.github.com/users/electriclilies/orgs","repos_url":"https://api.github.com/users/electriclilies/repos","events_url":"https://api.github.com/users/electriclilies/events{/privacy}","received_events_url":"https://api.github.com/users/electriclilies/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T01:04:11Z","updated_at":"2021-06-30T01:04:11Z","author_association":"CONTRIBUTOR","body":"This PR has failed a few times on the windows build. I'm not sure if this is caused by this PR or not; we should keep an eye on it and perhaps set the default behavior to not cache if it is causing flaky tests.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871020796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871030396","html_url":"https://github.com/apache/tvm/pull/8372#issuecomment-871030396","issue_url":"https://api.github.com/repos/apache/tvm/issues/8372","id":871030396,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTAzMDM5Ng==","user":{"login":"junrushao","id":22515877,"node_id":"MDQ6VXNlcjIyNTE1ODc3","avatar_url":"https://avatars.githubusercontent.com/u/22515877?v=4","gravatar_id":"","url":"https://api.github.com/users/junrushao","html_url":"https://github.com/junrushao","followers_url":"https://api.github.com/users/junrushao/followers","following_url":"https://api.github.com/users/junrushao/following{/other_user}","gists_url":"https://api.github.com/users/junrushao/gists{/gist_id}","starred_url":"https://api.github.com/users/junrushao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junrushao/subscriptions","organizations_url":"https://api.github.com/users/junrushao/orgs","repos_url":"https://api.github.com/users/junrushao/repos","events_url":"https://api.github.com/users/junrushao/events{/privacy}","received_events_url":"https://api.github.com/users/junrushao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T01:32:27Z","updated_at":"2021-06-30T01:32:27Z","author_association":"MEMBER","body":"Just curious, if a TVM binary fails at loading time due to inconsistent CUDA versions, I imagine we cannot query via libinfo because loading has already failed. Do we have to consider this particular case?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871030396/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871032849","html_url":"https://github.com/apache/tvm/pull/8370#issuecomment-871032849","issue_url":"https://api.github.com/repos/apache/tvm/issues/8370","id":871032849,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTAzMjg0OQ==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T01:40:16Z","updated_at":"2021-06-30T01:40:16Z","author_association":"MEMBER","body":"Yes. I agree PyTorch CPUInfo library is one good alternative. However, we will introduce one dependency and we should handle it carefully for cross compilation (because we are in the runtime component).","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871032849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871039861","html_url":"https://github.com/apache/tvm/pull/8372#issuecomment-871039861","issue_url":"https://api.github.com/repos/apache/tvm/issues/8372","id":871039861,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTAzOTg2MQ==","user":{"login":"jcf94","id":12119698,"node_id":"MDQ6VXNlcjEyMTE5Njk4","avatar_url":"https://avatars.githubusercontent.com/u/12119698?v=4","gravatar_id":"","url":"https://api.github.com/users/jcf94","html_url":"https://github.com/jcf94","followers_url":"https://api.github.com/users/jcf94/followers","following_url":"https://api.github.com/users/jcf94/following{/other_user}","gists_url":"https://api.github.com/users/jcf94/gists{/gist_id}","starred_url":"https://api.github.com/users/jcf94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jcf94/subscriptions","organizations_url":"https://api.github.com/users/jcf94/orgs","repos_url":"https://api.github.com/users/jcf94/repos","events_url":"https://api.github.com/users/jcf94/events{/privacy}","received_events_url":"https://api.github.com/users/jcf94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T02:00:40Z","updated_at":"2021-06-30T02:02:50Z","author_association":"CONTRIBUTOR","body":"> Just curious, if a TVM binary fails at loading time due to inconsistent CUDA versions, I imagine we cannot query via libinfo because loading has already failed. Do we have to consider this particular case?\r\n\r\nReasonable. The cuda version linked at build time and the cuda version in runtime environment when using tvm python package may be different.\r\nWill it be better to rename this to BINARY_CUDA_VERSION or something like cuda version in build time? @comaniac ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871039861/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871045081","html_url":"https://github.com/apache/tvm/pull/8372#issuecomment-871045081","issue_url":"https://api.github.com/repos/apache/tvm/issues/8372","id":871045081,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTA0NTA4MQ==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T02:14:56Z","updated_at":"2021-06-30T02:14:56Z","author_association":"CONTRIBUTOR","body":"> > Just curious, if a TVM binary fails at loading time due to inconsistent CUDA versions, I imagine we cannot query via libinfo because loading has already failed. Do we have to consider this particular case?\n\nIt seems out of scope to me. It's more like an environment issue if the binary is incompatible and results in loading failure. The only goal of libinfo is reporting the information of the current binary as a part of the environment logging. If we want to provide the information when failed to load, we should do that in other places such as dlopen.\n\n> Reasonable. The cuda version linked at build time and the cuda version in runtime environment when using tvm python package may be different.\n> \n> Will it be better to rename this to BINARY_CUDA_VERSION or something like cuda version in build time? @comaniac \n\nI would prefer to keep the current one for 2 reasons. First, this is under support.libinfo, which already clearly says this is for the TVM lib instead of the runtime. Second, it consists with LLVM_VERSION.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871045081/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871053943","html_url":"https://github.com/apache/tvm/pull/8234#issuecomment-871053943","issue_url":"https://api.github.com/repos/apache/tvm/issues/8234","id":871053943,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTA1Mzk0Mw==","user":{"login":"jcf94","id":12119698,"node_id":"MDQ6VXNlcjEyMTE5Njk4","avatar_url":"https://avatars.githubusercontent.com/u/12119698?v=4","gravatar_id":"","url":"https://api.github.com/users/jcf94","html_url":"https://github.com/jcf94","followers_url":"https://api.github.com/users/jcf94/followers","following_url":"https://api.github.com/users/jcf94/following{/other_user}","gists_url":"https://api.github.com/users/jcf94/gists{/gist_id}","starred_url":"https://api.github.com/users/jcf94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jcf94/subscriptions","organizations_url":"https://api.github.com/users/jcf94/orgs","repos_url":"https://api.github.com/users/jcf94/repos","events_url":"https://api.github.com/users/jcf94/events{/privacy}","received_events_url":"https://api.github.com/users/jcf94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T02:43:27Z","updated_at":"2021-06-30T02:43:27Z","author_association":"CONTRIBUTOR","body":"Thanks! @comaniac @tkonolige\r\nI'll add a topi compute support for multi-dim tensor input in another PR.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871053943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871078545","html_url":"https://github.com/apache/tvm/pull/8373#issuecomment-871078545","issue_url":"https://api.github.com/repos/apache/tvm/issues/8373","id":871078545,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTA3ODU0NQ==","user":{"login":"junrushao","id":22515877,"node_id":"MDQ6VXNlcjIyNTE1ODc3","avatar_url":"https://avatars.githubusercontent.com/u/22515877?v=4","gravatar_id":"","url":"https://api.github.com/users/junrushao","html_url":"https://github.com/junrushao","followers_url":"https://api.github.com/users/junrushao/followers","following_url":"https://api.github.com/users/junrushao/following{/other_user}","gists_url":"https://api.github.com/users/junrushao/gists{/gist_id}","starred_url":"https://api.github.com/users/junrushao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junrushao/subscriptions","organizations_url":"https://api.github.com/users/junrushao/orgs","repos_url":"https://api.github.com/users/junrushao/repos","events_url":"https://api.github.com/users/junrushao/events{/privacy}","received_events_url":"https://api.github.com/users/junrushao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T04:03:21Z","updated_at":"2021-06-30T04:03:21Z","author_association":"MEMBER","body":"Thanks Lily for the great work! Yeah I am using ccache a lot as well when working on the TVM project, but with a more global flag, like\r\n\r\n```cmake\r\nset(CMAKE_C_COMPILER_LAUNCHER /path/to/ccache)\r\nset(CMAKE_CXX_COMPILER_LAUNCHER /path/to/ccache)\r\nset(CMAKE_CUDA_COMPILER_LAUNCHER /path/to/ccache)\r\n```\r\n\r\nWhat's the difference between your approach (`set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE `) and the one above?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871078545/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871089515","html_url":"https://github.com/apache/tvm/issues/8272#issuecomment-871089515","issue_url":"https://api.github.com/repos/apache/tvm/issues/8272","id":871089515,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTA4OTUxNQ==","user":{"login":"GoodNight-bye","id":66587509,"node_id":"MDQ6VXNlcjY2NTg3NTA5","avatar_url":"https://avatars.githubusercontent.com/u/66587509?v=4","gravatar_id":"","url":"https://api.github.com/users/GoodNight-bye","html_url":"https://github.com/GoodNight-bye","followers_url":"https://api.github.com/users/GoodNight-bye/followers","following_url":"https://api.github.com/users/GoodNight-bye/following{/other_user}","gists_url":"https://api.github.com/users/GoodNight-bye/gists{/gist_id}","starred_url":"https://api.github.com/users/GoodNight-bye/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GoodNight-bye/subscriptions","organizations_url":"https://api.github.com/users/GoodNight-bye/orgs","repos_url":"https://api.github.com/users/GoodNight-bye/repos","events_url":"https://api.github.com/users/GoodNight-bye/events{/privacy}","received_events_url":"https://api.github.com/users/GoodNight-bye/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T04:38:05Z","updated_at":"2021-06-30T04:38:05Z","author_association":"NONE","body":"@electriclilies ，thank you for your advice,  I create a new issue and provide a minimum script to reproduce the problem，Look forward to your favourable reply\r\nhttps://github.com/apache/tvm/issues/8374","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871089515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871202170","html_url":"https://github.com/apache/tvm/pull/8302#issuecomment-871202170","issue_url":"https://api.github.com/repos/apache/tvm/issues/8302","id":871202170,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTIwMjE3MA==","user":{"login":"mikepapadim","id":8652854,"node_id":"MDQ6VXNlcjg2NTI4NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8652854?v=4","gravatar_id":"","url":"https://api.github.com/users/mikepapadim","html_url":"https://github.com/mikepapadim","followers_url":"https://api.github.com/users/mikepapadim/followers","following_url":"https://api.github.com/users/mikepapadim/following{/other_user}","gists_url":"https://api.github.com/users/mikepapadim/gists{/gist_id}","starred_url":"https://api.github.com/users/mikepapadim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikepapadim/subscriptions","organizations_url":"https://api.github.com/users/mikepapadim/orgs","repos_url":"https://api.github.com/users/mikepapadim/repos","events_url":"https://api.github.com/users/mikepapadim/events{/privacy}","received_events_url":"https://api.github.com/users/mikepapadim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T08:28:25Z","updated_at":"2021-06-30T08:28:25Z","author_association":"CONTRIBUTOR","body":"> Finally!! Thanks for the great work!\r\n> \r\n> As TensorIR is fully prepared for type annotations, we should probably check `python/tvm/tir/schedule` as well. CC: @Hzfengsy @tqchen\r\n\r\n@junrushao1994 https://github.com/apache/tvm/pull/8367 Please have a look in this one","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871202170/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871209477","html_url":"https://github.com/apache/tvm/pull/8371#issuecomment-871209477","issue_url":"https://api.github.com/repos/apache/tvm/issues/8371","id":871209477,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTIwOTQ3Nw==","user":{"login":"leandron","id":437416,"node_id":"MDQ6VXNlcjQzNzQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/437416?v=4","gravatar_id":"","url":"https://api.github.com/users/leandron","html_url":"https://github.com/leandron","followers_url":"https://api.github.com/users/leandron/followers","following_url":"https://api.github.com/users/leandron/following{/other_user}","gists_url":"https://api.github.com/users/leandron/gists{/gist_id}","starred_url":"https://api.github.com/users/leandron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leandron/subscriptions","organizations_url":"https://api.github.com/users/leandron/orgs","repos_url":"https://api.github.com/users/leandron/repos","events_url":"https://api.github.com/users/leandron/events{/privacy}","received_events_url":"https://api.github.com/users/leandron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T08:39:58Z","updated_at":"2021-06-30T08:39:58Z","author_association":"CONTRIBUTOR","body":"This is merged now, thanks @u99127!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871209477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871212538","html_url":"https://github.com/apache/tvm/pull/8331#issuecomment-871212538","issue_url":"https://api.github.com/repos/apache/tvm/issues/8331","id":871212538,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTIxMjUzOA==","user":{"login":"leandron","id":437416,"node_id":"MDQ6VXNlcjQzNzQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/437416?v=4","gravatar_id":"","url":"https://api.github.com/users/leandron","html_url":"https://github.com/leandron","followers_url":"https://api.github.com/users/leandron/followers","following_url":"https://api.github.com/users/leandron/following{/other_user}","gists_url":"https://api.github.com/users/leandron/gists{/gist_id}","starred_url":"https://api.github.com/users/leandron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leandron/subscriptions","organizations_url":"https://api.github.com/users/leandron/orgs","repos_url":"https://api.github.com/users/leandron/repos","events_url":"https://api.github.com/users/leandron/events{/privacy}","received_events_url":"https://api.github.com/users/leandron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T08:44:40Z","updated_at":"2021-06-30T08:44:40Z","author_association":"CONTRIBUTOR","body":"This is is failing in the latest version of this PR. I'm pasting the error below, to save a trip to Jenkins:\r\n\r\n```\r\n==================================== ERRORS ====================================\r\n\r\n____________ ERROR collecting tests/python/driver/tvmc/test_mlf.py _____________\r\n/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py:286: in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n/usr/local/lib/python3.6/dist-packages/pluggy/manager.py:93: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n/usr/local/lib/python3.6/dist-packages/pluggy/manager.py:87: in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n/usr/local/lib/python3.6/dist-packages/_pytest/python.py:249: in pytest_pycollect_makeitem\r\n    res = list(collector._genfunctions(name, obj))\r\n/usr/local/lib/python3.6/dist-packages/_pytest/python.py:470: in _genfunctions\r\n    self.ihook.pytest_generate_tests.call_extra(methods, dict(metafunc=metafunc))\r\n/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py:324: in call_extra\r\n    return self(**kwargs)\r\n/usr/local/lib/python3.6/dist-packages/pluggy/hooks.py:286: in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n/usr/local/lib/python3.6/dist-packages/pluggy/manager.py:93: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n/usr/local/lib/python3.6/dist-packages/pluggy/manager.py:87: in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nconftest.py:35: in pytest_generate_tests\r\n    tvm.testing._auto_parametrize_target(metafunc)\r\npython/tvm/testing.py:800: in _auto_parametrize_target\r\n    for mark in metafunc.definition.iter_markers(\"parametrize\")\r\npython/tvm/testing.py:801: in <listcomp>\r\n    for arg in mark.args[0].split(\",\")\r\nE   AttributeError: 'list' object has no attribute 'split'\r\n=============================== warnings summary ===============================\r\n../usr/local/lib/python3.6/dist-packages/tensorflow/python/autograph/utils/testing.py:21\r\n  /usr/local/lib/python3.6/dist-packages/tensorflow/python/autograph/utils/testing.py:21: DeprecationWarning: the imp module is eprecated in favour of importlib; see the module's documentation for alternative uses\r\n    import imp\r\n\r\n- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n- generated xml file: /workspace/build/pytest-results/python-integration-driver-ctypes.xml -\r\n=========================== short test summary info ============================\r\nERROR tests/python/driver/tvmc/test_mlf.py - AttributeError: 'list' object ha...\r\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\r\n========================= 1 warning, 1 error in 0.97s ==========================\r\n```\r\n\r\nApart from that, LGTM. Happy to review/merge once we get CI working.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871212538/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871228909","html_url":"https://github.com/apache/tvm/pull/8361#issuecomment-871228909","issue_url":"https://api.github.com/repos/apache/tvm/issues/8361","id":871228909,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTIyODkwOQ==","user":{"login":"u99127","id":19559067,"node_id":"MDQ6VXNlcjE5NTU5MDY3","avatar_url":"https://avatars.githubusercontent.com/u/19559067?v=4","gravatar_id":"","url":"https://api.github.com/users/u99127","html_url":"https://github.com/u99127","followers_url":"https://api.github.com/users/u99127/followers","following_url":"https://api.github.com/users/u99127/following{/other_user}","gists_url":"https://api.github.com/users/u99127/gists{/gist_id}","starred_url":"https://api.github.com/users/u99127/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/u99127/subscriptions","organizations_url":"https://api.github.com/users/u99127/orgs","repos_url":"https://api.github.com/users/u99127/repos","events_url":"https://api.github.com/users/u99127/events{/privacy}","received_events_url":"https://api.github.com/users/u99127/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T09:08:24Z","updated_at":"2021-06-30T09:08:24Z","author_association":"CONTRIBUTOR","body":"> This patch looks good to me, ideally we should have test cases for this though. I'm not up to speed on the status of Arm CI so am unsure how immediately feasible this is, perhaps @u99127 or @leandron know more.\r\n\r\ndo the existing topi tests catch the failure on AArch64 ? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871228909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871237674","html_url":"https://github.com/apache/tvm/issues/8339#issuecomment-871237674","issue_url":"https://api.github.com/repos/apache/tvm/issues/8339","id":871237674,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTIzNzY3NA==","user":{"login":"manupak","id":61496855,"node_id":"MDQ6VXNlcjYxNDk2ODU1","avatar_url":"https://avatars.githubusercontent.com/u/61496855?v=4","gravatar_id":"","url":"https://api.github.com/users/manupak","html_url":"https://github.com/manupak","followers_url":"https://api.github.com/users/manupak/followers","following_url":"https://api.github.com/users/manupak/following{/other_user}","gists_url":"https://api.github.com/users/manupak/gists{/gist_id}","starred_url":"https://api.github.com/users/manupak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manupak/subscriptions","organizations_url":"https://api.github.com/users/manupak/orgs","repos_url":"https://api.github.com/users/manupak/repos","events_url":"https://api.github.com/users/manupak/events{/privacy}","received_events_url":"https://api.github.com/users/manupak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T09:20:40Z","updated_at":"2021-06-30T09:20:40Z","author_association":"CONTRIBUTOR","body":"Can we merge this reasonably sooner ?\r\n\r\nhttps://github.com/apache/tvm/pull/8375\r\n\r\n@mbrookhart  @Lunderberg  @leandron @u99127 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871237674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871364901","html_url":"https://github.com/apache/tvm/pull/8361#issuecomment-871364901","issue_url":"https://api.github.com/repos/apache/tvm/issues/8361","id":871364901,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTM2NDkwMQ==","user":{"login":"AnastasiaStulova","id":38433336,"node_id":"MDQ6VXNlcjM4NDMzMzM2","avatar_url":"https://avatars.githubusercontent.com/u/38433336?v=4","gravatar_id":"","url":"https://api.github.com/users/AnastasiaStulova","html_url":"https://github.com/AnastasiaStulova","followers_url":"https://api.github.com/users/AnastasiaStulova/followers","following_url":"https://api.github.com/users/AnastasiaStulova/following{/other_user}","gists_url":"https://api.github.com/users/AnastasiaStulova/gists{/gist_id}","starred_url":"https://api.github.com/users/AnastasiaStulova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AnastasiaStulova/subscriptions","organizations_url":"https://api.github.com/users/AnastasiaStulova/orgs","repos_url":"https://api.github.com/users/AnastasiaStulova/repos","events_url":"https://api.github.com/users/AnastasiaStulova/events{/privacy}","received_events_url":"https://api.github.com/users/AnastasiaStulova/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T12:36:08Z","updated_at":"2021-06-30T12:36:08Z","author_association":"CONTRIBUTOR","body":"> > This patch looks good to me, ideally we should have test cases for this though. I'm not up to speed on the status of Arm CI so am unsure how immediately feasible this is, perhaps @u99127 or @leandron know more.\r\n> \r\n> do the existing topi tests catch the failure on AArch64 ?\r\n\r\n@u99127 The test indeed caught the bug and it already what we need for `arm_cpu` testing\r\nhttps://github.com/apache/tvm/blob/main/tests/python/topi/python/test_topi_conv2d_nhwc.py#L33\r\nbut it is not enabled by default in the list of tested devices:\r\nhttps://github.com/apache/tvm/blob/main/tests/python/topi/python/test_topi_conv2d_nhwc.py#L78\r\nIt is very easy to add it to the list `\"llvm -device=arm_cpu\"` then it runs straight away.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871364901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871367727","html_url":"https://github.com/apache/tvm/pull/8361#issuecomment-871367727","issue_url":"https://api.github.com/repos/apache/tvm/issues/8361","id":871367727,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTM2NzcyNw==","user":{"login":"AnastasiaStulova","id":38433336,"node_id":"MDQ6VXNlcjM4NDMzMzM2","avatar_url":"https://avatars.githubusercontent.com/u/38433336?v=4","gravatar_id":"","url":"https://api.github.com/users/AnastasiaStulova","html_url":"https://github.com/AnastasiaStulova","followers_url":"https://api.github.com/users/AnastasiaStulova/followers","following_url":"https://api.github.com/users/AnastasiaStulova/following{/other_user}","gists_url":"https://api.github.com/users/AnastasiaStulova/gists{/gist_id}","starred_url":"https://api.github.com/users/AnastasiaStulova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AnastasiaStulova/subscriptions","organizations_url":"https://api.github.com/users/AnastasiaStulova/orgs","repos_url":"https://api.github.com/users/AnastasiaStulova/repos","events_url":"https://api.github.com/users/AnastasiaStulova/events{/privacy}","received_events_url":"https://api.github.com/users/AnastasiaStulova/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T12:40:28Z","updated_at":"2021-06-30T12:40:28Z","author_association":"CONTRIBUTOR","body":"FYI there is also [https://github.com/apache/tvm/blob/main/tests/python/topi/python/test_topi_conv2d_nchw.py](https://github.com/apache/tvm/blob/main/tests/python/topi/python/test_topi_conv2d_nchw.py) for testing `NCHW` layout that already runs on all available targets. So if we run it where Arm CPU is enabled it will test it automatically.\r\n\r\nThe only problem could be that it is a bit long-running as it has more than 350 test cases but we could think of creating a fast running mode too.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871367727/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871382068","html_url":"https://github.com/apache/tvm/pull/8373#issuecomment-871382068","issue_url":"https://api.github.com/repos/apache/tvm/issues/8373","id":871382068,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTM4MjA2OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T12:58:58Z","updated_at":"2021-06-30T13:11:12Z","author_association":"MEMBER","body":"Thanks @electriclilies . One thing that might be helpful here is to streamline the option definition. The current proposed option is closer to `AUTO` mode(enable if found, but disable if not).\r\n\r\nHere are how we interpret values to keep things consistent with our previous options:\r\n- AUTO: automatically detect and if found use it\r\n- /path/to/ccache: set the ccache to the correct ccache path being specified\r\n- OFF: disable ccache\r\n- ON: search and report an error if ccache is not found\r\n\r\nWe should also look a bit into which way is more standard, since I also see `set(CMAKE_C_COMPILER_LAUNCHER /path/to/ccache)` being used a bit more frequently.\r\n\r\nThe use of ccache will likely cause the history cache growing problem in the CI when the node disk space is limited. Because the cost of build is normally smaller compared to testing, we will likely want to disable ccache in the CI setups in the task_config_build_xyz.sh https://github.com/apache/tvm/blob/main/tests/scripts/task_config_build_arm.sh\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871382068/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871394273","html_url":"https://github.com/apache/tvm/pull/8376#issuecomment-871394273","issue_url":"https://api.github.com/repos/apache/tvm/issues/8376","id":871394273,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTM5NDI3Mw==","user":{"login":"lygztq","id":23189027,"node_id":"MDQ6VXNlcjIzMTg5MDI3","avatar_url":"https://avatars.githubusercontent.com/u/23189027?v=4","gravatar_id":"","url":"https://api.github.com/users/lygztq","html_url":"https://github.com/lygztq","followers_url":"https://api.github.com/users/lygztq/followers","following_url":"https://api.github.com/users/lygztq/following{/other_user}","gists_url":"https://api.github.com/users/lygztq/gists{/gist_id}","starred_url":"https://api.github.com/users/lygztq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lygztq/subscriptions","organizations_url":"https://api.github.com/users/lygztq/orgs","repos_url":"https://api.github.com/users/lygztq/repos","events_url":"https://api.github.com/users/lygztq/events{/privacy}","received_events_url":"https://api.github.com/users/lygztq/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T13:14:35Z","updated_at":"2021-06-30T13:14:35Z","author_association":"CONTRIBUTOR","body":"@mbrookhart @tqchen @zhiics @anijain2305 @ZihengJiang ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871394273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871400179","html_url":"https://github.com/apache/tvm/pull/8366#issuecomment-871400179","issue_url":"https://api.github.com/repos/apache/tvm/issues/8366","id":871400179,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTQwMDE3OQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T13:22:11Z","updated_at":"2021-06-30T13:22:11Z","author_association":"MEMBER","body":"Thanks @masahi . seems there are still testcases that we need to fix","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871400179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871411336","html_url":"https://github.com/apache/tvm/pull/8325#issuecomment-871411336","issue_url":"https://api.github.com/repos/apache/tvm/issues/8325","id":871411336,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTQxMTMzNg==","user":{"login":"d-smirnov","id":25180015,"node_id":"MDQ6VXNlcjI1MTgwMDE1","avatar_url":"https://avatars.githubusercontent.com/u/25180015?v=4","gravatar_id":"","url":"https://api.github.com/users/d-smirnov","html_url":"https://github.com/d-smirnov","followers_url":"https://api.github.com/users/d-smirnov/followers","following_url":"https://api.github.com/users/d-smirnov/following{/other_user}","gists_url":"https://api.github.com/users/d-smirnov/gists{/gist_id}","starred_url":"https://api.github.com/users/d-smirnov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d-smirnov/subscriptions","organizations_url":"https://api.github.com/users/d-smirnov/orgs","repos_url":"https://api.github.com/users/d-smirnov/repos","events_url":"https://api.github.com/users/d-smirnov/events{/privacy}","received_events_url":"https://api.github.com/users/d-smirnov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T13:36:49Z","updated_at":"2021-06-30T13:36:49Z","author_association":"CONTRIBUTOR","body":"bump. also cc @tqchen ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871411336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871482502","html_url":"https://github.com/apache/tvm/pull/8325#issuecomment-871482502","issue_url":"https://api.github.com/repos/apache/tvm/issues/8325","id":871482502,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTQ4MjUwMg==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T15:02:31Z","updated_at":"2021-06-30T15:02:31Z","author_association":"CONTRIBUTOR","body":"Sorry! Not sure how I lost this. I don't fully understand this pass, and it seems you've made some more complicated changes above moving it to mixed mode? I would appriciate @tqchen's review, since it was originally his code.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871482502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871483204","html_url":"https://github.com/apache/tvm/pull/8375#issuecomment-871483204","issue_url":"https://api.github.com/repos/apache/tvm/issues/8375","id":871483204,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTQ4MzIwNA==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T15:03:18Z","updated_at":"2021-06-30T15:03:18Z","author_association":"CONTRIBUTOR","body":"Thanks @u99127 @ANSHUMAN87 @leandron ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871483204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871484706","html_url":"https://github.com/apache/tvm/issues/8177#issuecomment-871484706","issue_url":"https://api.github.com/repos/apache/tvm/issues/8177","id":871484706,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTQ4NDcwNg==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T15:05:10Z","updated_at":"2021-06-30T15:05:10Z","author_association":"CONTRIBUTOR","body":"I think we have fixes in for the tflite error and the arm build error (Thanks @u99127 !). I'll regenerate the cpu/gpu/qemu images this morning off https://github.com/apache/tvm/commit/8d4df91836bac8ee416adf29141d051c952802a7, @areusch could you try the ARM image on that commit?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871484706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871507413","html_url":"https://github.com/apache/tvm/pull/8325#issuecomment-871507413","issue_url":"https://api.github.com/repos/apache/tvm/issues/8325","id":871507413,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTUwNzQxMw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T15:33:41Z","updated_at":"2021-06-30T15:33:41Z","author_association":"MEMBER","body":"Would be great if @vinx13 can also help to take a look","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871507413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871518949","html_url":"https://github.com/apache/tvm/issues/8177#issuecomment-871518949","issue_url":"https://api.github.com/repos/apache/tvm/issues/8177","id":871518949,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTUxODk0OQ==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T15:48:18Z","updated_at":"2021-06-30T15:48:18Z","author_association":"CONTRIBUTOR","body":"well, at that commit i get:\r\n```\r\nStep 17/17 : RUN bash /install/ubuntu_download_arm_compute_lib_binaries.sh\r\n ---> Running in 66c2dfde768f\r\n/install/ubuntu_download_arm_compute_lib_binaries.sh: line 20: architecture_type: command not found\r\n```\r\n\r\nbut with this patch \r\n```\r\ndiff --git a/docker/install/ubuntu_download_arm_compute_lib_binaries.sh b/docker/install/ubuntu_download_arm_compute_lib_binaries.sh\r\nindex 01926df9f..c68654c75 100755\r\n--- a/docker/install/ubuntu_download_arm_compute_lib_binaries.sh\r\n+++ b/docker/install/ubuntu_download_arm_compute_lib_binaries.sh\r\n@@ -17,7 +17,7 @@\r\n # under the License.\r\n\r\n set -e\r\n-architecture_type = $(uname -i)\r\n+architecture_type=$(uname -i)\r\n # Install cross-compiler when not building natively.\r\n # Depending on the architecture selected to compile for,\r\n # you may need to install an alternative cross-compiler.\r\n```\r\n\r\ni'm able to get it to build. pushed as `areusch1/ci-arm-staging:v0.04`, if you want to use that. sent #8377 to resolve on `main`.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871518949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871519397","html_url":"https://github.com/apache/tvm/pull/8377#issuecomment-871519397","issue_url":"https://api.github.com/repos/apache/tvm/issues/8377","id":871519397,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTUxOTM5Nw==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T15:48:41Z","updated_at":"2021-06-30T15:48:41Z","author_association":"CONTRIBUTOR","body":"cc @mbrookhart ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871519397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871528374","html_url":"https://github.com/apache/tvm/pull/8072#issuecomment-871528374","issue_url":"https://api.github.com/repos/apache/tvm/issues/8072","id":871528374,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTUyODM3NA==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T15:59:31Z","updated_at":"2021-06-30T15:59:31Z","author_association":"CONTRIBUTOR","body":"oops, think someone already took MLF version 3. added a patch to rev to v4.\r\n\r\n@giuseros please take a look and explicitly approve if you're ok with this PR!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871528374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871529260","html_url":"https://github.com/apache/tvm/issues/8177#issuecomment-871529260","issue_url":"https://api.github.com/repos/apache/tvm/issues/8177","id":871529260,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTUyOTI2MA==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T16:00:37Z","updated_at":"2021-06-30T16:00:37Z","author_association":"CONTRIBUTOR","body":"I hit this building the CPU image as well :(","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871529260/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871541826","html_url":"https://github.com/apache/tvm/pull/8373#issuecomment-871541826","issue_url":"https://api.github.com/repos/apache/tvm/issues/8373","id":871541826,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTU0MTgyNg==","user":{"login":"mehrdadh","id":6409345,"node_id":"MDQ6VXNlcjY0MDkzNDU=","avatar_url":"https://avatars.githubusercontent.com/u/6409345?v=4","gravatar_id":"","url":"https://api.github.com/users/mehrdadh","html_url":"https://github.com/mehrdadh","followers_url":"https://api.github.com/users/mehrdadh/followers","following_url":"https://api.github.com/users/mehrdadh/following{/other_user}","gists_url":"https://api.github.com/users/mehrdadh/gists{/gist_id}","starred_url":"https://api.github.com/users/mehrdadh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mehrdadh/subscriptions","organizations_url":"https://api.github.com/users/mehrdadh/orgs","repos_url":"https://api.github.com/users/mehrdadh/repos","events_url":"https://api.github.com/users/mehrdadh/events{/privacy}","received_events_url":"https://api.github.com/users/mehrdadh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T16:17:13Z","updated_at":"2021-06-30T16:17:13Z","author_association":"MEMBER","body":"I agree with @tqchen about the CI. It's better to always build from scratch in CI.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871541826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871557346","html_url":"https://github.com/apache/tvm/pull/8368#issuecomment-871557346","issue_url":"https://api.github.com/repos/apache/tvm/issues/8368","id":871557346,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTU1NzM0Ng==","user":{"login":"ANSHUMAN87","id":32511895,"node_id":"MDQ6VXNlcjMyNTExODk1","avatar_url":"https://avatars.githubusercontent.com/u/32511895?v=4","gravatar_id":"","url":"https://api.github.com/users/ANSHUMAN87","html_url":"https://github.com/ANSHUMAN87","followers_url":"https://api.github.com/users/ANSHUMAN87/followers","following_url":"https://api.github.com/users/ANSHUMAN87/following{/other_user}","gists_url":"https://api.github.com/users/ANSHUMAN87/gists{/gist_id}","starred_url":"https://api.github.com/users/ANSHUMAN87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ANSHUMAN87/subscriptions","organizations_url":"https://api.github.com/users/ANSHUMAN87/orgs","repos_url":"https://api.github.com/users/ANSHUMAN87/repos","events_url":"https://api.github.com/users/ANSHUMAN87/events{/privacy}","received_events_url":"https://api.github.com/users/ANSHUMAN87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T16:32:57Z","updated_at":"2021-06-30T16:32:57Z","author_association":"CONTRIBUTOR","body":"> This patch adds infrastructure to directly generate TFLite model buffers\r\n> by using flatc, the flatbuffers command line tool. This gives us more\r\n> freedom in creating the models for testing since we don't have to\r\n> rely on any of the converters.\r\n> \r\n> * Add classes and helper functions to create the model buffer\r\n> * Add some convolution tests that test TFLite2 models in int8\r\n>   with per channel and per tensor quantization and remove the\r\n>   orphaned Keras tests\r\n> \r\n> Co-authored with @NicolaLancellotti\r\n\r\nHi @ekalda, I am just unable to see the need for such changes. As per my understanding, TFlite framework behaviour is not something we should control in TVM.\r\nModel buffers should be created using standard Apis in TFlite. We should not use a custom one to validate our requirements which may result in failure of complete TFlite frontend Parser.\r\n\r\nMaybe if you share what was the actual motivation for this change, we can discuss about the solution better. Thanks! ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871557346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871562090","html_url":"https://github.com/apache/tvm/pull/8331#issuecomment-871562090","issue_url":"https://api.github.com/repos/apache/tvm/issues/8331","id":871562090,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTU2MjA5MA==","user":{"login":"Mousius","id":4933431,"node_id":"MDQ6VXNlcjQ5MzM0MzE=","avatar_url":"https://avatars.githubusercontent.com/u/4933431?v=4","gravatar_id":"","url":"https://api.github.com/users/Mousius","html_url":"https://github.com/Mousius","followers_url":"https://api.github.com/users/Mousius/followers","following_url":"https://api.github.com/users/Mousius/following{/other_user}","gists_url":"https://api.github.com/users/Mousius/gists{/gist_id}","starred_url":"https://api.github.com/users/Mousius/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mousius/subscriptions","organizations_url":"https://api.github.com/users/Mousius/orgs","repos_url":"https://api.github.com/users/Mousius/repos","events_url":"https://api.github.com/users/Mousius/events{/privacy}","received_events_url":"https://api.github.com/users/Mousius/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T16:39:46Z","updated_at":"2021-06-30T16:39:46Z","author_association":"MEMBER","body":"Hopefully that should do it, thanks for your feedback @gromero :smile_cat: ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871562090/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871580756","html_url":"https://github.com/apache/tvm/pull/8368#issuecomment-871580756","issue_url":"https://api.github.com/repos/apache/tvm/issues/8368","id":871580756,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTU4MDc1Ng==","user":{"login":"ekalda","id":15799086,"node_id":"MDQ6VXNlcjE1Nzk5MDg2","avatar_url":"https://avatars.githubusercontent.com/u/15799086?v=4","gravatar_id":"","url":"https://api.github.com/users/ekalda","html_url":"https://github.com/ekalda","followers_url":"https://api.github.com/users/ekalda/followers","following_url":"https://api.github.com/users/ekalda/following{/other_user}","gists_url":"https://api.github.com/users/ekalda/gists{/gist_id}","starred_url":"https://api.github.com/users/ekalda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ekalda/subscriptions","organizations_url":"https://api.github.com/users/ekalda/orgs","repos_url":"https://api.github.com/users/ekalda/repos","events_url":"https://api.github.com/users/ekalda/events{/privacy}","received_events_url":"https://api.github.com/users/ekalda/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T17:07:05Z","updated_at":"2021-06-30T17:07:05Z","author_association":"CONTRIBUTOR","body":"> > This patch adds infrastructure to directly generate TFLite model buffers\r\n> > by using flatc, the flatbuffers command line tool. This gives us more\r\n> > freedom in creating the models for testing since we don't have to\r\n> > rely on any of the converters.\r\n> > \r\n> > * Add classes and helper functions to create the model buffer\r\n> > * Add some convolution tests that test TFLite2 models in int8\r\n> >   with per channel and per tensor quantization and remove the\r\n> >   orphaned Keras tests\r\n> > \r\n> > Co-authored with @NicolaLancellotti\r\n> \r\n> Hi @ekalda, I am just unable to see the need for such changes. As per my understanding, TFlite framework behaviour is not something we should control in TVM.\r\n> Model buffers should be created using standard Apis in TFlite. We should not use a custom one to validate our requirements which may result in failure of complete TFlite frontend Parser.\r\n> \r\n> Maybe if you share what was the actual motivation for this change, we can discuss about the solution better. Thanks!\r\n\r\nHi @ANSHUMAN87, see that RFC for some more motivation - https://discuss.tvm.apache.org/t/rfc-tflite-frontend-create-models-for-frontend-testing-by-directly-writing-tflite-buffers/9811\r\n\r\nThe gist is that the current converters that convert into TFLite are just not flexible enough when it comes to creating the one operator models with various properties (e.g. different fused activations). We have found that writing buffers directly is the most convenient, fast and debuggable way for consistently generating various one operator models with desired properties. \r\n\r\nAs of whether the models created like that are valid TFLite models - since we use the TFLite schema to create the buffers, all the models created this way are valid TFLite models and if TVM frontend fails to parse them, that indicates problem with the TVM's TFLite's frontend parser. \r\n\r\nAlso tagging @mbaret @FrozenGene @manupa-arm @anijain2305 @leandron ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871580756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871601714","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-871601714","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":871601714,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTYwMTcxNA==","user":{"login":"junrushao","id":22515877,"node_id":"MDQ6VXNlcjIyNTE1ODc3","avatar_url":"https://avatars.githubusercontent.com/u/22515877?v=4","gravatar_id":"","url":"https://api.github.com/users/junrushao","html_url":"https://github.com/junrushao","followers_url":"https://api.github.com/users/junrushao/followers","following_url":"https://api.github.com/users/junrushao/following{/other_user}","gists_url":"https://api.github.com/users/junrushao/gists{/gist_id}","starred_url":"https://api.github.com/users/junrushao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junrushao/subscriptions","organizations_url":"https://api.github.com/users/junrushao/orgs","repos_url":"https://api.github.com/users/junrushao/repos","events_url":"https://api.github.com/users/junrushao/events{/privacy}","received_events_url":"https://api.github.com/users/junrushao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T17:39:29Z","updated_at":"2021-06-30T17:39:29Z","author_association":"MEMBER","body":"Hey @AndrewZhaoLuo, would you like to briefly summarize the lessons here on properly supporting macOS?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871601714/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871606570","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-871606570","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":871606570,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTYwNjU3MA==","user":{"login":"AndrewZhaoLuo","id":13855451,"node_id":"MDQ6VXNlcjEzODU1NDUx","avatar_url":"https://avatars.githubusercontent.com/u/13855451?v=4","gravatar_id":"","url":"https://api.github.com/users/AndrewZhaoLuo","html_url":"https://github.com/AndrewZhaoLuo","followers_url":"https://api.github.com/users/AndrewZhaoLuo/followers","following_url":"https://api.github.com/users/AndrewZhaoLuo/following{/other_user}","gists_url":"https://api.github.com/users/AndrewZhaoLuo/gists{/gist_id}","starred_url":"https://api.github.com/users/AndrewZhaoLuo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AndrewZhaoLuo/subscriptions","organizations_url":"https://api.github.com/users/AndrewZhaoLuo/orgs","repos_url":"https://api.github.com/users/AndrewZhaoLuo/repos","events_url":"https://api.github.com/users/AndrewZhaoLuo/events{/privacy}","received_events_url":"https://api.github.com/users/AndrewZhaoLuo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T17:47:02Z","updated_at":"2021-06-30T17:47:50Z","author_association":"CONTRIBUTOR","body":"The main lesson here is if we use python we must use multiprocessing to get parallelism. If we use multiprocessing we have to assume sometimes we cannot use  a direct `fork()` to get a subprocess.\r\n\r\nThere might be other bugs as if do not have a direct `fork()` as arguments to the children process need to be serialized and reserialized. This has two implications:\r\n- Pointer equality assumptions are broken -- even if two objects shared a pointer to a resource before they might not after serialization and reserialization. This one is annoying.\r\n- Things passed to subprocesses must be pickleable which they might not be. The solution is to make things pickleable like I did here by removing the anonymous function closure.\r\n\r\nThis also has implications for Windows which does not use the fork() - exec() model.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871606570/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871625248","html_url":"https://github.com/apache/tvm/pull/8368#issuecomment-871625248","issue_url":"https://api.github.com/repos/apache/tvm/issues/8368","id":871625248,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTYyNTI0OA==","user":{"login":"ANSHUMAN87","id":32511895,"node_id":"MDQ6VXNlcjMyNTExODk1","avatar_url":"https://avatars.githubusercontent.com/u/32511895?v=4","gravatar_id":"","url":"https://api.github.com/users/ANSHUMAN87","html_url":"https://github.com/ANSHUMAN87","followers_url":"https://api.github.com/users/ANSHUMAN87/followers","following_url":"https://api.github.com/users/ANSHUMAN87/following{/other_user}","gists_url":"https://api.github.com/users/ANSHUMAN87/gists{/gist_id}","starred_url":"https://api.github.com/users/ANSHUMAN87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ANSHUMAN87/subscriptions","organizations_url":"https://api.github.com/users/ANSHUMAN87/orgs","repos_url":"https://api.github.com/users/ANSHUMAN87/repos","events_url":"https://api.github.com/users/ANSHUMAN87/events{/privacy}","received_events_url":"https://api.github.com/users/ANSHUMAN87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T18:15:54Z","updated_at":"2021-06-30T18:15:54Z","author_association":"CONTRIBUTOR","body":"> > > This patch adds infrastructure to directly generate TFLite model buffers\r\n> > > by using flatc, the flatbuffers command line tool. This gives us more\r\n> > > freedom in creating the models for testing since we don't have to\r\n> > > rely on any of the converters.\r\n> > > \r\n> > > * Add classes and helper functions to create the model buffer\r\n> > > * Add some convolution tests that test TFLite2 models in int8\r\n> > >   with per channel and per tensor quantization and remove the\r\n> > >   orphaned Keras tests\r\n> > > \r\n> > > Co-authored with @NicolaLancellotti\r\n> > \r\n> > \r\n> > Hi @ekalda, I am just unable to see the need for such changes. As per my understanding, TFlite framework behaviour is not something we should control in TVM.\r\n> > Model buffers should be created using standard Apis in TFlite. We should not use a custom one to validate our requirements which may result in failure of complete TFlite frontend Parser.\r\n> > Maybe if you share what was the actual motivation for this change, we can discuss about the solution better. Thanks!\r\n> \r\n> Hi @ANSHUMAN87, see that RFC for some more motivation - https://discuss.tvm.apache.org/t/rfc-tflite-frontend-create-models-for-frontend-testing-by-directly-writing-tflite-buffers/9811\r\n> \r\n> The gist is that the current converters that convert into TFLite are just not flexible enough when it comes to creating the one operator models with various properties (e.g. different fused activations). We have found that writing buffers directly is the most convenient, fast and debuggable way for consistently generating various one operator models with desired properties.\r\n> \r\n> As of whether the models created like that are valid TFLite models - since we use the TFLite schema to create the buffers, all the models created this way are valid TFLite models and if TVM frontend fails to parse them, that indicates problem with the TVM's TFLite's frontend parser.\r\n> \r\n> Also tagging @mbaret @FrozenGene @manupa-arm @anijain2305 @leandron\r\n\r\nThanks @ekalda for detailed response.\r\nI will go through little deeper about the point you mentioned about flexibility. \r\n\r\nBut at high level, I am still not convinced for the approach. Please find below few fruits for thought.\r\n1. TFlite was initially not designed to create models with first hand. Now it is coming up with model maker of its own. So the basic idea was convert existing tf and keras models to TFlite and then do certain optimization like layer fusions and post training quantization or fine tuning. And prep for inference. Now if the conversion to TFlite does not support certain features, then definitely there will not be any TFlite models with that feature.\r\n2. Hence if you want that feature to be part of TFlite, then that has to be first part of Tensorflow project not TVM.\r\n3. As per you mentioned, you need operator with fused activation, then again the questions arise for WHICH one? TFlite, Tensorflow or Keras. if TFlite already supports, then no point of this change. But if Tensorflow or Keras supports, but TFlite does not, then why TVM TFlite frontend needs to support?\r\n\r\nHope my points are clear. Please revert back in case anything. Definitely I might be missing the point which you might have observed. Please enlighten me, so that I also can be on same page. TIA! ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871625248/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871629367","html_url":"https://github.com/apache/tvm/pull/8377#issuecomment-871629367","issue_url":"https://api.github.com/repos/apache/tvm/issues/8377","id":871629367,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTYyOTM2Nw==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T18:22:28Z","updated_at":"2021-06-30T18:22:40Z","author_association":"CONTRIBUTOR","body":"@areusch Looks like you hit a timeout, can you retrigger?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871629367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871630051","html_url":"https://github.com/apache/tvm/issues/8177#issuecomment-871630051","issue_url":"https://api.github.com/repos/apache/tvm/issues/8177","id":871630051,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTYzMDA1MQ==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T18:23:34Z","updated_at":"2021-06-30T18:23:34Z","author_association":"CONTRIBUTOR","body":"I've started a CI staging job with :point_up: that diff and new images here: https://github.com/apache/tvm/pull/8193","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871630051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871667253","html_url":"https://github.com/apache/tvm/pull/8373#issuecomment-871667253","issue_url":"https://api.github.com/repos/apache/tvm/issues/8373","id":871667253,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTY2NzI1Mw==","user":{"login":"electriclilies","id":17014049,"node_id":"MDQ6VXNlcjE3MDE0MDQ5","avatar_url":"https://avatars.githubusercontent.com/u/17014049?v=4","gravatar_id":"","url":"https://api.github.com/users/electriclilies","html_url":"https://github.com/electriclilies","followers_url":"https://api.github.com/users/electriclilies/followers","following_url":"https://api.github.com/users/electriclilies/following{/other_user}","gists_url":"https://api.github.com/users/electriclilies/gists{/gist_id}","starred_url":"https://api.github.com/users/electriclilies/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/electriclilies/subscriptions","organizations_url":"https://api.github.com/users/electriclilies/orgs","repos_url":"https://api.github.com/users/electriclilies/repos","events_url":"https://api.github.com/users/electriclilies/events{/privacy}","received_events_url":"https://api.github.com/users/electriclilies/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T19:24:11Z","updated_at":"2021-06-30T19:27:16Z","author_association":"CONTRIBUTOR","body":"Thanks for the feedback @tqchen @junrushao1994. I'll change the default to AUTO, as suggested, and disable this option in CI.\r\nRegarding which is more common-- I don't know which approach is more commonly used. One advantage to the approach I propose is that the user doesn't have to enter the path to the ccache, so they can take advantage of it without editing the config.cmake file.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871667253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871689078","html_url":"https://github.com/apache/tvm/pull/8373#issuecomment-871689078","issue_url":"https://api.github.com/repos/apache/tvm/issues/8373","id":871689078,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTY4OTA3OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-30T20:01:10Z","updated_at":"2021-06-30T23:19:09Z","author_association":"MEMBER","body":"Thanks @electriclilies , by standard options, I actually  meant we should implement the auto feature(please see the suggested comments) via\r\n-  `set(CMAKE_C_COMPILER_LAUNCHER /path/to/ccache)` vs  `set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE  /path/to/ccache)`\r\n \r\nseems they are two ways to do the same thing(see some related issues https://github.com/Tencent/rapidjson/issues/1794 seems to indicate that we should use the other one), but we are not sure\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871689078/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871809927","html_url":"https://github.com/apache/tvm/issues/8378#issuecomment-871809927","issue_url":"https://api.github.com/repos/apache/tvm/issues/8378","id":871809927,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTgwOTkyNw==","user":{"login":"ymwangg","id":19481308,"node_id":"MDQ6VXNlcjE5NDgxMzA4","avatar_url":"https://avatars.githubusercontent.com/u/19481308?v=4","gravatar_id":"","url":"https://api.github.com/users/ymwangg","html_url":"https://github.com/ymwangg","followers_url":"https://api.github.com/users/ymwangg/followers","following_url":"https://api.github.com/users/ymwangg/following{/other_user}","gists_url":"https://api.github.com/users/ymwangg/gists{/gist_id}","starred_url":"https://api.github.com/users/ymwangg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ymwangg/subscriptions","organizations_url":"https://api.github.com/users/ymwangg/orgs","repos_url":"https://api.github.com/users/ymwangg/repos","events_url":"https://api.github.com/users/ymwangg/events{/privacy}","received_events_url":"https://api.github.com/users/ymwangg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T00:15:02Z","updated_at":"2021-07-01T00:15:02Z","author_association":"CONTRIBUTOR","body":"The document may be misleading. You need to compile the relay expression.\r\nThe following code should work.\r\n```python\r\nimport tvm\r\nfrom tvm import relay\r\nfrom tvm.relay import create_executor\r\n\r\nx = relay.var(\"x\", shape=[3],dtype=\"int32\")\r\ny = relay.var(\"y\", shape=[2],dtype=\"int32\")\r\nout = relay.meshgrid([x, y]).astuple()\r\nf = relay.Function([x,y], out)\r\nmod = tvm.IRModule.from_expr(f)\r\nexecutor = create_executor(kind=\"graph\", mod=mod, target=\"llvm\")\r\nres = executor.evaluate()(np.array([1,2,3]).astype(\"int32\"), np.array([4,5]).astype(\"int32\"))\r\nprint(res)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871809927/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871921726","html_url":"https://github.com/apache/tvm/issues/8053#issuecomment-871921726","issue_url":"https://api.github.com/repos/apache/tvm/issues/8053","id":871921726,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTkyMTcyNg==","user":{"login":"roastduck","id":6522983,"node_id":"MDQ6VXNlcjY1MjI5ODM=","avatar_url":"https://avatars.githubusercontent.com/u/6522983?v=4","gravatar_id":"","url":"https://api.github.com/users/roastduck","html_url":"https://github.com/roastduck","followers_url":"https://api.github.com/users/roastduck/followers","following_url":"https://api.github.com/users/roastduck/following{/other_user}","gists_url":"https://api.github.com/users/roastduck/gists{/gist_id}","starred_url":"https://api.github.com/users/roastduck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roastduck/subscriptions","organizations_url":"https://api.github.com/users/roastduck/orgs","repos_url":"https://api.github.com/users/roastduck/repos","events_url":"https://api.github.com/users/roastduck/events{/privacy}","received_events_url":"https://api.github.com/users/roastduck/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T05:03:31Z","updated_at":"2021-07-01T05:03:31Z","author_association":"CONTRIBUTOR","body":"Hi @lllggghhh1, have you solved the problem? I am encountering the same error.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871921726/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871925509","html_url":"https://github.com/apache/tvm/pull/8113#issuecomment-871925509","issue_url":"https://api.github.com/repos/apache/tvm/issues/8113","id":871925509,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTkyNTUwOQ==","user":{"login":"Tantalus13A98B5F","id":13904366,"node_id":"MDQ6VXNlcjEzOTA0MzY2","avatar_url":"https://avatars.githubusercontent.com/u/13904366?v=4","gravatar_id":"","url":"https://api.github.com/users/Tantalus13A98B5F","html_url":"https://github.com/Tantalus13A98B5F","followers_url":"https://api.github.com/users/Tantalus13A98B5F/followers","following_url":"https://api.github.com/users/Tantalus13A98B5F/following{/other_user}","gists_url":"https://api.github.com/users/Tantalus13A98B5F/gists{/gist_id}","starred_url":"https://api.github.com/users/Tantalus13A98B5F/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Tantalus13A98B5F/subscriptions","organizations_url":"https://api.github.com/users/Tantalus13A98B5F/orgs","repos_url":"https://api.github.com/users/Tantalus13A98B5F/repos","events_url":"https://api.github.com/users/Tantalus13A98B5F/events{/privacy}","received_events_url":"https://api.github.com/users/Tantalus13A98B5F/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T05:11:27Z","updated_at":"2021-07-01T05:11:27Z","author_association":"CONTRIBUTOR","body":"- Synced with up-to-date `main`.\r\n- `measure_option` interface added. `MeasureInput` is created in tuners from tasks, maybe too impactful for now.\r\n- Unittest added.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871925509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871942607","html_url":"https://github.com/apache/tvm/pull/8366#issuecomment-871942607","issue_url":"https://api.github.com/repos/apache/tvm/issues/8366","id":871942607,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTk0MjYwNw==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T05:53:19Z","updated_at":"2021-07-01T05:53:19Z","author_association":"MEMBER","body":"@tqchen I've hit an issue in `lower_thread_allreduce.cc`. There are multiple uses of `AttrStmt` where a storage scope of a buffer variable is assigned after some complicated logic, like this:\r\nhttps://github.com/apache/tvm/blob/ae58f2c387de9944d241a083ce9a0dd4c9ae613d/src/tir/transforms/lower_thread_allreduce.cc#L94\r\n\r\nSo I tried to replace this line by something like `SetStorageScope(repl->buffer_var, \"shared\")` but this doesn't work because I cannot get a mutable pointer to `PointerType` via `buffer_var->type_annotation.as<PointerTypeNode>()`. \r\n\r\nCreating a new variable also doesn't work because the old `buffer_var` is [shared ](https://github.com/apache/tvm/blob/ae58f2c387de9944d241a083ce9a0dd4c9ae613d/src/tir/transforms/lower_thread_allreduce.cc#L354-L359) with other stmt nodes, so updating the `buffer_var` of `AllocateNode` results in the use of undefined variable in other nodes.\r\n\r\nWhat should we do about this?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871942607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871968849","html_url":"https://github.com/apache/tvm/pull/8379#issuecomment-871968849","issue_url":"https://api.github.com/repos/apache/tvm/issues/8379","id":871968849,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTk2ODg0OQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T06:40:37Z","updated_at":"2021-07-01T06:40:37Z","author_association":"MEMBER","body":"thanks @tkonolige ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871968849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871969738","html_url":"https://github.com/apache/tvm/pull/8369#issuecomment-871969738","issue_url":"https://api.github.com/repos/apache/tvm/issues/8369","id":871969738,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTk2OTczOA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T06:42:17Z","updated_at":"2021-07-01T06:42:17Z","author_association":"MEMBER","body":"thanks @altanh ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871969738/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871989194","html_url":"https://github.com/apache/tvm/pull/8363#issuecomment-871989194","issue_url":"https://api.github.com/repos/apache/tvm/issues/8363","id":871989194,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MTk4OTE5NA==","user":{"login":"junrushao","id":22515877,"node_id":"MDQ6VXNlcjIyNTE1ODc3","avatar_url":"https://avatars.githubusercontent.com/u/22515877?v=4","gravatar_id":"","url":"https://api.github.com/users/junrushao","html_url":"https://github.com/junrushao","followers_url":"https://api.github.com/users/junrushao/followers","following_url":"https://api.github.com/users/junrushao/following{/other_user}","gists_url":"https://api.github.com/users/junrushao/gists{/gist_id}","starred_url":"https://api.github.com/users/junrushao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junrushao/subscriptions","organizations_url":"https://api.github.com/users/junrushao/orgs","repos_url":"https://api.github.com/users/junrushao/repos","events_url":"https://api.github.com/users/junrushao/events{/privacy}","received_events_url":"https://api.github.com/users/junrushao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T07:14:41Z","updated_at":"2021-07-01T07:14:41Z","author_association":"MEMBER","body":"Thank you @AndrewZhaoLuo for the awesome work!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/871989194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872090997","html_url":"https://github.com/apache/tvm/pull/8331#issuecomment-872090997","issue_url":"https://api.github.com/repos/apache/tvm/issues/8331","id":872090997,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MjA5MDk5Nw==","user":{"login":"leandron","id":437416,"node_id":"MDQ6VXNlcjQzNzQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/437416?v=4","gravatar_id":"","url":"https://api.github.com/users/leandron","html_url":"https://github.com/leandron","followers_url":"https://api.github.com/users/leandron/followers","following_url":"https://api.github.com/users/leandron/following{/other_user}","gists_url":"https://api.github.com/users/leandron/gists{/gist_id}","starred_url":"https://api.github.com/users/leandron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leandron/subscriptions","organizations_url":"https://api.github.com/users/leandron/orgs","repos_url":"https://api.github.com/users/leandron/repos","events_url":"https://api.github.com/users/leandron/events{/privacy}","received_events_url":"https://api.github.com/users/leandron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T09:37:26Z","updated_at":"2021-07-01T09:37:26Z","author_association":"CONTRIBUTOR","body":"This is now merged, thanks @Mousius and @gromero ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872090997/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872252986","html_url":"https://github.com/apache/tvm/pull/8368#issuecomment-872252986","issue_url":"https://api.github.com/repos/apache/tvm/issues/8368","id":872252986,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MjI1Mjk4Ng==","user":{"login":"ekalda","id":15799086,"node_id":"MDQ6VXNlcjE1Nzk5MDg2","avatar_url":"https://avatars.githubusercontent.com/u/15799086?v=4","gravatar_id":"","url":"https://api.github.com/users/ekalda","html_url":"https://github.com/ekalda","followers_url":"https://api.github.com/users/ekalda/followers","following_url":"https://api.github.com/users/ekalda/following{/other_user}","gists_url":"https://api.github.com/users/ekalda/gists{/gist_id}","starred_url":"https://api.github.com/users/ekalda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ekalda/subscriptions","organizations_url":"https://api.github.com/users/ekalda/orgs","repos_url":"https://api.github.com/users/ekalda/repos","events_url":"https://api.github.com/users/ekalda/events{/privacy}","received_events_url":"https://api.github.com/users/ekalda/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T13:34:49Z","updated_at":"2021-07-01T13:34:49Z","author_association":"CONTRIBUTOR","body":"> > > > This patch adds infrastructure to directly generate TFLite model buffers\r\n> > > > by using flatc, the flatbuffers command line tool. This gives us more\r\n> > > > freedom in creating the models for testing since we don't have to\r\n> > > > rely on any of the converters.\r\n> > > > \r\n> > > > * Add classes and helper functions to create the model buffer\r\n> > > > * Add some convolution tests that test TFLite2 models in int8\r\n> > > >   with per channel and per tensor quantization and remove the\r\n> > > >   orphaned Keras tests\r\n> > > > \r\n> > > > Co-authored with @NicolaLancellotti\r\n> > > \r\n> > > \r\n> > > Hi @ekalda, I am just unable to see the need for such changes. As per my understanding, TFlite framework behaviour is not something we should control in TVM.\r\n> > > Model buffers should be created using standard Apis in TFlite. We should not use a custom one to validate our requirements which may result in failure of complete TFlite frontend Parser.\r\n> > > Maybe if you share what was the actual motivation for this change, we can discuss about the solution better. Thanks!\r\n> > \r\n> > \r\n> > Hi @ANSHUMAN87, see that RFC for some more motivation - https://discuss.tvm.apache.org/t/rfc-tflite-frontend-create-models-for-frontend-testing-by-directly-writing-tflite-buffers/9811\r\n> > The gist is that the current converters that convert into TFLite are just not flexible enough when it comes to creating the one operator models with various properties (e.g. different fused activations). We have found that writing buffers directly is the most convenient, fast and debuggable way for consistently generating various one operator models with desired properties.\r\n> > As of whether the models created like that are valid TFLite models - since we use the TFLite schema to create the buffers, all the models created this way are valid TFLite models and if TVM frontend fails to parse them, that indicates problem with the TVM's TFLite's frontend parser.\r\n> > Also tagging @mbaret @FrozenGene @manupa-arm @anijain2305 @leandron\r\n> \r\n> Thanks @ekalda for detailed response.\r\n> I will go through little deeper about the point you mentioned about flexibility.\r\n> \r\n> But at high level, I am still not convinced for the approach. Please find below few fruits for thought.\r\n> \r\n>     1. TFlite was initially not designed to create models with first hand. Now it is coming up with model maker of its own. So the basic idea was convert existing tf and keras models to TFlite and then do certain optimization like layer fusions and post training quantization or fine tuning. And prep for inference. Now if the conversion to TFlite does not support certain features, then definitely there will not be any TFlite models with that feature.\r\n> \r\n>     2. Hence if you want that feature to be part of TFlite, then that has to be first part of Tensorflow project not TVM.\r\n> \r\n>     3. As per you mentioned, you need operator with fused activation, then again the questions arise for WHICH one? TFlite, Tensorflow or Keras. if TFlite already supports, then no point of this change. But if Tensorflow or Keras supports, but TFlite does not, then why TVM TFlite frontend needs to support?\r\n> \r\n> \r\n> Hope my points are clear. Please revert back in case anything. Definitely I might be missing the point which you might have observed. Please enlighten me, so that I also can be on same page. TIA!\r\n\r\nHi @ANSHUMAN87, thanks for clarifying your concerns! I'll try to respond to your comments and expand on our motivaton for this work.\r\n\r\n- \"As per my understanding, TFlite framework behaviour is not something we should control in TVM.\" - By writing buffers directly we are not controlling TFLite framework behavior, we are creating test cases that are conformant with TFLite schema and run with the TFLite runtime, which we think TVM should be able to compile.\r\n\r\n- \"We should not use a custom one to validate our requirements which may result in failure of complete TFlite frontend Parser.\" - We are not creating \"custom\" operators, we are creating test cases that are conformant with TFLite schema and can be run with the TFLite runtime. If you are concerned about the situations where we have aligned the frontend parser to the test cases made by directly writing buffers and that parser failing to parse models that have been converted from TensorFlow or Keras - that will not happen as long as Tensorflow is consistent with TFLite since the models converted from TensorFlow always obey the TFLite schema. \r\n\r\n- \"So the basic idea was convert existing tf and keras models to TFlite and then do certain optimization like layer fusions and post training quantization or fine tuning.\" - Yes, all outputs of such optimizations will always be expressible using the TFLite schema and runnable in TFLite runtime, so as a result of that we will only test cases subject to those two constraints.\r\n\r\n- \"Now if the conversion to TFlite does not support certain features, then definitely there will not be any TFlite models with that feature.\" - Since the conversion is model to model (and not op to op), starting with single operators of TensorFlow/Keras might not cover atomic operators of TFLite that get generated during a model to model converter. The mapping between TensorFlow and TFLite is not strictly one-to-one, it can be both one-to-many and many-to-one (e.g. LSTM).\r\n\r\n- \"But if Tensorflow or Keras supports, but TFlite does not, then why TVM TFlite frontend needs to support?\" - Since TVM supports TFLite as an input format (not just TensorFlow and Keras), its vital for TVM project to have full coverage of flatbuffers that would execute on TFLite runtime. If TVM claims that it supports a frontend, it should support the whole specification of that frontend, which in this case is defined by the TFLite schema.\r\n\r\nI'll also expand a bit on the assumption that the above statements make - that TFLite is defined by what can be converted from TensorFlow or Keras: \r\n\r\n- Not all operators in TFLite can be created by using TensorFlow APIs. The example of this is TFLite_PostProcess_Detection, which currently gets created in TensorFlow by directly writing a TensorFlow buffer and converting that into TFLite model (it is also currently tested in the frontend by downloading an SSD Mobilenet from the web and chopping off rest of the operators). Other examples are RNN and LSTM.\r\n\r\n- If we assert that TFLite is defined by not only what we can create with using TensorFlow/Keras APIs but also whatever can be converted from TensorFlow flatbuffers, the space of TFLite we need to support and test now becomes whatever can be written in the TensorFlow buffers.  \r\n\r\n- We currently test the TFLite operators individually but we use the converters. This isn't because we believe the results of the converters define TFLite, but because it has historically been the easiest way to make the TFLite operators. \r\n\r\n- We want to unit test a component whose interface is a TFLite flatbuffer. We don't want to test the behaviour of the converters because their behaviour is not stable unlike the schema which is strictly defined, versioned and executable via the TFLite runtime.\r\n\r\n- We are not proposing to change the current frontend testing philosophy, we are proposing a neat way of creating operators instead of having to come up tricks to create operators and it is easier to check whether the operators are indeed what we want them to be. \r\n\r\nI hope that helps. Let me know if that makes sense!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872252986/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872276241","html_url":"https://github.com/apache/tvm/pull/8366#issuecomment-872276241","issue_url":"https://api.github.com/repos/apache/tvm/issues/8366","id":872276241,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MjI3NjI0MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T14:05:04Z","updated_at":"2021-07-01T14:05:04Z","author_association":"MEMBER","body":"In this particular case, we might need to create a new buffer var and remap the use of the old buffer vars to new one","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872276241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872300752","html_url":"https://github.com/apache/tvm/issues/8177#issuecomment-872300752","issue_url":"https://api.github.com/repos/apache/tvm/issues/8177","id":872300752,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MjMwMDc1Mg==","user":{"login":"mbrookhart","id":4065489,"node_id":"MDQ6VXNlcjQwNjU0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4065489?v=4","gravatar_id":"","url":"https://api.github.com/users/mbrookhart","html_url":"https://github.com/mbrookhart","followers_url":"https://api.github.com/users/mbrookhart/followers","following_url":"https://api.github.com/users/mbrookhart/following{/other_user}","gists_url":"https://api.github.com/users/mbrookhart/gists{/gist_id}","starred_url":"https://api.github.com/users/mbrookhart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbrookhart/subscriptions","organizations_url":"https://api.github.com/users/mbrookhart/orgs","repos_url":"https://api.github.com/users/mbrookhart/repos","events_url":"https://api.github.com/users/mbrookhart/events{/privacy}","received_events_url":"https://api.github.com/users/mbrookhart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T14:36:02Z","updated_at":"2021-07-01T14:36:02Z","author_association":"CONTRIBUTOR","body":"The staging job failed because Keras didn't seem to make it into the packages? Did TF drop Keras in 2.4? \r\n\r\nAlso, @Lunderberg there are a couple more TF failures:\r\n\r\nhttps://ci.tlcpack.ai/blue/organizations/jenkins/tvm/detail/ci-docker-staging/107/pipeline","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872300752/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872317286","html_url":"https://github.com/apache/tvm/issues/8339#issuecomment-872317286","issue_url":"https://api.github.com/repos/apache/tvm/issues/8339","id":872317286,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MjMxNzI4Ng==","user":{"login":"leandron","id":437416,"node_id":"MDQ6VXNlcjQzNzQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/437416?v=4","gravatar_id":"","url":"https://api.github.com/users/leandron","html_url":"https://github.com/leandron","followers_url":"https://api.github.com/users/leandron/followers","following_url":"https://api.github.com/users/leandron/following{/other_user}","gists_url":"https://api.github.com/users/leandron/gists{/gist_id}","starred_url":"https://api.github.com/users/leandron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leandron/subscriptions","organizations_url":"https://api.github.com/users/leandron/orgs","repos_url":"https://api.github.com/users/leandron/repos","events_url":"https://api.github.com/users/leandron/events{/privacy}","received_events_url":"https://api.github.com/users/leandron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T14:57:56Z","updated_at":"2021-07-01T14:57:56Z","author_association":"CONTRIBUTOR","body":"#8375 is now merged, so perhaps we can close this issue?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872317286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872327756","html_url":"https://github.com/apache/tvm/issues/8339#issuecomment-872327756","issue_url":"https://api.github.com/repos/apache/tvm/issues/8339","id":872327756,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MjMyNzc1Ng==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T15:10:35Z","updated_at":"2021-07-01T15:10:35Z","author_association":"CONTRIBUTOR","body":"i think we should wait til #8177 is done, just to make sure the fix will stick.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872327756/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872352229","html_url":"https://github.com/apache/tvm/pull/8382#issuecomment-872352229","issue_url":"https://api.github.com/repos/apache/tvm/issues/8382","id":872352229,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MjM1MjIyOQ==","user":{"login":"areusch","id":532957,"node_id":"MDQ6VXNlcjUzMjk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/532957?v=4","gravatar_id":"","url":"https://api.github.com/users/areusch","html_url":"https://github.com/areusch","followers_url":"https://api.github.com/users/areusch/followers","following_url":"https://api.github.com/users/areusch/following{/other_user}","gists_url":"https://api.github.com/users/areusch/gists{/gist_id}","starred_url":"https://api.github.com/users/areusch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/areusch/subscriptions","organizations_url":"https://api.github.com/users/areusch/orgs","repos_url":"https://api.github.com/users/areusch/repos","events_url":"https://api.github.com/users/areusch/events{/privacy}","received_events_url":"https://api.github.com/users/areusch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-01T15:43:39Z","updated_at":"2021-07-01T15:43:39Z","author_association":"CONTRIBUTOR","body":"thanks @mikepapadim this looks like a great addition! one question on the approach: typically in order to get accurate e.g. pylint results, you need to ensure you have exactly the version of pylint, astroid, etc. as are installed in the CI. we don't currently have a programmatic way to do that outside of the `ci-lint` docker container. \r\n\r\ni made a script `docker/lint.sh` which invokes these commands in `ci-lint`--the problem with this one is that due to a limitation of the docker container mounts (see #6344), this doesn't work with git-subtree. it would be great if we could somehow introduce the docker container to this approach to make it foolproof. otherwise, it might weaken the pre-commit output if it's inaccurate.\r\n\r\nwhat are your thoughts? we don't have a good way to capture the python deps used in CI right now (there are some efforts underway, but it'll be a while); however, you could probably get what you need from `docker/bash.sh ci_lint pip3 freeze` if we wanted to go that approach. another approach is to push on #6344 again and try to fix the rust build issues.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/872352229/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]