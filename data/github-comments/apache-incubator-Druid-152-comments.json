[{"url":"https://api.github.com/repos/apache/druid/issues/comments/316809532","html_url":"https://github.com/apache/druid/pull/4581#issuecomment-316809532","issue_url":"https://api.github.com/repos/apache/druid/issues/4581","id":316809532,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjgwOTUzMg==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-20T19:44:04Z","updated_at":"2017-07-20T19:44:04Z","author_association":"CONTRIBUTOR","body":":+1:  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316809532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316820006","html_url":"https://github.com/apache/druid/issues/4511#issuecomment-316820006","issue_url":"https://api.github.com/repos/apache/druid/issues/4511","id":316820006,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjgyMDAwNg==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-20T20:26:33Z","updated_at":"2017-07-20T20:26:33Z","author_association":"CONTRIBUTOR","body":"@sujithkulasekara  What do you mean by \"duplicate\" files?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316820006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316820130","html_url":"https://github.com/apache/druid/issues/4536#issuecomment-316820130","issue_url":"https://api.github.com/repos/apache/druid/issues/4536","id":316820130,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjgyMDEzMA==","user":{"login":"erikdubbelboer","id":522870,"node_id":"MDQ6VXNlcjUyMjg3MA==","avatar_url":"https://avatars.githubusercontent.com/u/522870?v=4","gravatar_id":"","url":"https://api.github.com/users/erikdubbelboer","html_url":"https://github.com/erikdubbelboer","followers_url":"https://api.github.com/users/erikdubbelboer/followers","following_url":"https://api.github.com/users/erikdubbelboer/following{/other_user}","gists_url":"https://api.github.com/users/erikdubbelboer/gists{/gist_id}","starred_url":"https://api.github.com/users/erikdubbelboer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikdubbelboer/subscriptions","organizations_url":"https://api.github.com/users/erikdubbelboer/orgs","repos_url":"https://api.github.com/users/erikdubbelboer/repos","events_url":"https://api.github.com/users/erikdubbelboer/events{/privacy}","received_events_url":"https://api.github.com/users/erikdubbelboer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-20T20:27:00Z","updated_at":"2017-07-20T20:27:00Z","author_association":"CONTRIBUTOR","body":"@gianm with #4567 everything works fine. There is only one exception that repeats a couple of times at the start but it doesn't seem to affect anything:\r\n```\r\n2017-07-20 09:23:56,956 task-runner-0-priority-0 WARN JNDI lookup class is not available because this JRE does not support JNDI. JNDI string lookups will not be available, continuing configuration. java.lang.ClassCastException: Cannot cast org.apache.logging.log4j.core.lookup.JndiLookup to org.apache.logging.log4j.core.lookup.StrLookup\r\n\tat java.lang.Class.cast(Class.java:3369)\r\n\tat org.apache.logging.log4j.util.LoaderUtil.newCheckedInstanceOf(LoaderUtil.java:167)\r\n\tat org.apache.logging.log4j.core.util.Loader.newCheckedInstanceOf(Loader.java:301)\r\n\tat org.apache.logging.log4j.core.lookup.Interpolator.<init>(Interpolator.java:94)\r\n\tat org.apache.logging.log4j.core.config.AbstractConfiguration.<init>(AbstractConfiguration.java:111)\r\n\tat org.apache.logging.log4j.core.config.DefaultConfiguration.<init>(DefaultConfiguration.java:48)\r\n\tat org.apache.logging.log4j.core.LoggerContext.<init>(LoggerContext.java:75)\r\n\tat org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.createContext(ClassLoaderContextSelector.java:171)\r\n\tat org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.locateContext(ClassLoaderContextSelector.java:145)\r\n\tat org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.getContext(ClassLoaderContextSelector.java:70)\r\n\tat org.apache.logging.log4j.core.selector.ClassLoaderContextSelector.getContext(ClassLoaderContextSelector.java:57)\r\n\tat org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:140)\r\n\tat org.apache.logging.log4j.core.impl.Log4jContextFactory.getContext(Log4jContextFactory.java:41)\r\n\tat org.apache.logging.log4j.LogManager.getContext(LogManager.java:182)\r\n\tat org.apache.logging.log4j.spi.AbstractLoggerAdapter.getContext(AbstractLoggerAdapter.java:103)\r\n\tat org.apache.logging.log4j.jul.AbstractLoggerAdapter.getContext(AbstractLoggerAdapter.java:34)\r\n\tat org.apache.logging.log4j.spi.AbstractLoggerAdapter.getLogger(AbstractLoggerAdapter.java:42)\r\n\tat org.apache.logging.log4j.jul.LogManager.getLogger(LogManager.java:89)\r\n\tat java.util.logging.LogManager.demandLogger(LogManager.java:551)\r\n\tat java.util.logging.Logger.demandLogger(Logger.java:455)\r\n\tat java.util.logging.Logger.getLogger(Logger.java:502)\r\n\tat com.google.inject.internal.util.Stopwatch.<clinit>(Stopwatch.java:27)\r\n\tat com.google.inject.internal.InternalInjectorCreator.<init>(InternalInjectorCreator.java:61)\r\n\tat com.google.inject.Guice.createInjector(Guice.java:96)\r\n\tat com.google.inject.Guice.createInjector(Guice.java:73)\r\n\tat io.druid.guice.GuiceInjectors.makeStartupInjector(GuiceInjectors.java:60)\r\n\tat io.druid.indexer.HadoopDruidIndexerConfig.<clinit>(HadoopDruidIndexerConfig.java:105)\r\n\tat io.druid.indexing.common.task.HadoopIndexTask$HadoopDetermineConfigInnerProcessing.runTask(HadoopIndexTask.java:293)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat io.druid.indexing.common.task.HadoopTask.invokeForeignLoader(HadoopTask.java:215)\r\n\tat io.druid.indexing.common.task.HadoopIndexTask.run(HadoopIndexTask.java:177)\r\n\tat io.druid.indexing.overlord.ThreadPoolTaskRunner$ThreadPoolTaskRunnerCallable.call(ThreadPoolTaskRunner.java:436)\r\n\tat io.druid.indexing.overlord.ThreadPoolTaskRunner$ThreadPoolTaskRunnerCallable.call(ThreadPoolTaskRunner.java:408)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\nThe exception I'm seeing over and over again when upgrading only the middlemanager to master is:\r\n```\r\n2017-07-20T03:44:51,532 WARN [main] io.druid.indexing.common.actions.RemoteTaskActionClient - Exception submitting action for task[kill_ssps_2000-01-01T00:00:00.000Z_3000-01-01T00:00:00.000Z_2017-07-20T02:50:01.978Z]\r\njava.io.IOException: Failed to locate service uri\r\n\tat io.druid.indexing.common.actions.RemoteTaskActionClient.submit(RemoteTaskActionClient.java:94) [druid-indexing-service-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\n\tat io.druid.indexing.common.task.AbstractFixedIntervalTask.isReady(AbstractFixedIntervalTask.java:92) [druid-indexing-service-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\n\tat io.druid.indexing.worker.executor.ExecutorLifecycle.start(ExecutorLifecycle.java:169) [druid-indexing-service-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_131]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_131]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_131]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_131]\r\n\tat io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler.start(Lifecycle.java:364) [java-util-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\n\tat io.druid.java.util.common.lifecycle.Lifecycle.start(Lifecycle.java:263) [java-util-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\n\tat io.druid.guice.LifecycleModule$2.start(LifecycleModule.java:156) [druid-api-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\n\tat io.druid.cli.GuiceRunnable.initLifecycle(GuiceRunnable.java:101) [druid-services-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\n\tat io.druid.cli.CliPeon.run(CliPeon.java:283) [druid-services-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\n\tat io.druid.cli.Main.main(Main.java:108) [druid-services-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\nCaused by: java.lang.NullPointerException\r\n\tat io.druid.curator.discovery.ServerDiscoverySelector$1.apply(ServerDiscoverySelector.java:60) ~[druid-server-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\n\tat io.druid.curator.discovery.ServerDiscoverySelector$1.apply(ServerDiscoverySelector.java:52) ~[druid-server-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\n\tat io.druid.curator.discovery.ServerDiscoverySelector.pick(ServerDiscoverySelector.java:108) ~[druid-server-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\n\tat io.druid.indexing.common.actions.RemoteTaskActionClient.getServiceInstance(RemoteTaskActionClient.java:164) ~[druid-indexing-service-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\n\tat io.druid.indexing.common.actions.RemoteTaskActionClient.submit(RemoteTaskActionClient.java:89) ~[druid-indexing-service-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\r\n\t... 12 more\r\n2017-07-20T03:44:51,539 INFO [main] io.druid.indexing.common.actions.RemoteTaskActionClient - Will try again in [PT4.686S].\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316820130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316824704","html_url":"https://github.com/apache/druid/issues/4536#issuecomment-316824704","issue_url":"https://api.github.com/repos/apache/druid/issues/4536","id":316824704,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjgyNDcwNA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-20T20:45:49Z","updated_at":"2017-07-20T20:46:34Z","author_association":"CONTRIBUTOR","body":"@erikdubbelboer \r\n\r\nThe JNDI exception at startup can be ignored.\r\n\r\nFor the second exception, based on the line numbers in ServerDiscoverySelector, it looks like you've pulled in some post 0.10.1 changes (i.e., in master but not in 0.10.1-rc1 or rc2), specifically this PR that adds TLS support: https://github.com/druid-io/druid/pull/4270\r\n\r\nI'm guessing what's happening is that the service announcement changes that set the TLS-enabled port property are missing because only the middleManager got the upgrade, but this newer code running on the middleManager expects that property to be non-null and gets an NPE here.\r\n\r\nCan you try basing your custom branch on 0.10.1-rc2?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316824704/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316832774","html_url":"https://github.com/apache/druid/issues/4494#issuecomment-316832774","issue_url":"https://api.github.com/repos/apache/druid/issues/4494","id":316832774,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjgzMjc3NA==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-20T21:17:19Z","updated_at":"2017-07-20T21:17:19Z","author_association":"CONTRIBUTOR","body":"It's likely important to verify how much performance gain this gives.  From what we've looked at, the lookup in the `GenericIndexed` is actually pretty fast, so it would be interesting to know how much time is actually saved by this.\r\n\r\nAlso, for our own purposes, when we've looked at the queries that will sometimes match zero rows on segments, it seems like it might be more important to \"fail fast\" and not process subsequent filters when one of the filters returns an always-false response.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316832774/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316851226","html_url":"https://github.com/apache/druid/issues/4494#issuecomment-316851226","issue_url":"https://api.github.com/repos/apache/druid/issues/4494","id":316851226,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjg1MTIyNg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-20T22:44:40Z","updated_at":"2017-07-20T22:44:40Z","author_association":"CONTRIBUTOR","body":"> Also, for our own purposes, when we've looked at the queries that will sometimes match zero rows on segments, it seems like it might be more important to \"fail fast\" and not process subsequent filters when one of the filters returns an always-false response.\r\n\r\nIs that the same thing as #3676?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316851226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316852962","html_url":"https://github.com/apache/druid/issues/4536#issuecomment-316852962","issue_url":"https://api.github.com/repos/apache/druid/issues/4536","id":316852962,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjg1Mjk2Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-20T22:54:12Z","updated_at":"2017-07-20T22:54:12Z","author_association":"CONTRIBUTOR","body":"> I'm guessing what's happening is that the service announcement changes that set the TLS-enabled port property are missing because only the middleManager got the upgrade, but this newer code running on the middleManager expects that property to be non-null and gets an NPE here.\r\n\r\nIs that what happens when #4270 is rolled out to MMs but not overlords? If so, that makes it impossible to do a proper rolling update, and we should address it before 0.11.0.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316852962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316873908","html_url":"https://github.com/apache/druid/issues/4494#issuecomment-316873908","issue_url":"https://api.github.com/repos/apache/druid/issues/4494","id":316873908,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjg3MzkwOA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T01:13:57Z","updated_at":"2017-07-21T01:14:32Z","author_association":"CONTRIBUTOR","body":"That could make a lot of sense: would it look something like combining operations for bitmaps passing in getters or factories so they don't have to make them if the early ones would cause the later to never need to materialize?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316873908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316901328","html_url":"https://github.com/apache/druid/issues/4494#issuecomment-316901328","issue_url":"https://api.github.com/repos/apache/druid/issues/4494","id":316901328,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjkwMTMyOA==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T04:44:54Z","updated_at":"2017-07-21T04:44:54Z","author_association":"CONTRIBUTOR","body":"@gianm awesome, yes, hadn't realized that was done.\r\n\r\nIn that case, then my only real comment here is that we should verify the performance gain from using the bloomfilter, especially on columns that have dictionaries.  Other systems get nice speed gains because the predicate check is a lot more expensive.  In our case, it will save a lookup in a dictionary which might be expensive, but also might not be any more expensive than the seeks we expect to do for each of the bloom filter hash functions.  Anyway, bloomfilters might be a win and also might not.  For columns without dictionaries, they would definitely be a win though.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316901328/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316926368","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-316926368","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":316926368,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjkyNjM2OA==","user":{"login":"ambition119","id":20353043,"node_id":"MDQ6VXNlcjIwMzUzMDQz","avatar_url":"https://avatars.githubusercontent.com/u/20353043?v=4","gravatar_id":"","url":"https://api.github.com/users/ambition119","html_url":"https://github.com/ambition119","followers_url":"https://api.github.com/users/ambition119/followers","following_url":"https://api.github.com/users/ambition119/following{/other_user}","gists_url":"https://api.github.com/users/ambition119/gists{/gist_id}","starred_url":"https://api.github.com/users/ambition119/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ambition119/subscriptions","organizations_url":"https://api.github.com/users/ambition119/orgs","repos_url":"https://api.github.com/users/ambition119/repos","events_url":"https://api.github.com/users/ambition119/events{/privacy}","received_events_url":"https://api.github.com/users/ambition119/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T07:27:06Z","updated_at":"2017-07-21T09:38:19Z","author_association":"NONE","body":"hi dkhwangbo :\r\n     In kafka-emitter code kafka version is  0.10.2.0 , I use kafka-0.8.2.1 config kafka-emitter status is ok.But use kafka-0.10.2.0 status is exception :\r\nio.druid.emitter.kafka.KafkaEmitter - Failed to take record from queue!\r\njava.lang.InterruptedException\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316926368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316928910","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-316928910","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":316928910,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjkyODkxMA==","user":{"login":"dkhwangbo","id":13585249,"node_id":"MDQ6VXNlcjEzNTg1MjQ5","avatar_url":"https://avatars.githubusercontent.com/u/13585249?v=4","gravatar_id":"","url":"https://api.github.com/users/dkhwangbo","html_url":"https://github.com/dkhwangbo","followers_url":"https://api.github.com/users/dkhwangbo/followers","following_url":"https://api.github.com/users/dkhwangbo/following{/other_user}","gists_url":"https://api.github.com/users/dkhwangbo/gists{/gist_id}","starred_url":"https://api.github.com/users/dkhwangbo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dkhwangbo/subscriptions","organizations_url":"https://api.github.com/users/dkhwangbo/orgs","repos_url":"https://api.github.com/users/dkhwangbo/repos","events_url":"https://api.github.com/users/dkhwangbo/events{/privacy}","received_events_url":"https://api.github.com/users/dkhwangbo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T07:40:23Z","updated_at":"2017-07-21T07:40:23Z","author_association":"CONTRIBUTOR","body":"@ambition119 \r\nCan I get your config file both with 0.8.2.1 and 0.10.2.0?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316928910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316937297","html_url":"https://github.com/apache/druid/issues/4580#issuecomment-316937297","issue_url":"https://api.github.com/repos/apache/druid/issues/4580","id":316937297,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjkzNzI5Nw==","user":{"login":"darkbluever","id":1259163,"node_id":"MDQ6VXNlcjEyNTkxNjM=","avatar_url":"https://avatars.githubusercontent.com/u/1259163?v=4","gravatar_id":"","url":"https://api.github.com/users/darkbluever","html_url":"https://github.com/darkbluever","followers_url":"https://api.github.com/users/darkbluever/followers","following_url":"https://api.github.com/users/darkbluever/following{/other_user}","gists_url":"https://api.github.com/users/darkbluever/gists{/gist_id}","starred_url":"https://api.github.com/users/darkbluever/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/darkbluever/subscriptions","organizations_url":"https://api.github.com/users/darkbluever/orgs","repos_url":"https://api.github.com/users/darkbluever/repos","events_url":"https://api.github.com/users/darkbluever/events{/privacy}","received_events_url":"https://api.github.com/users/darkbluever/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T08:20:02Z","updated_at":"2017-07-21T08:20:02Z","author_association":"NONE","body":"got it.\r\nThanks for reply : )","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316937297/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316949408","html_url":"https://github.com/apache/druid/pull/3860#issuecomment-316949408","issue_url":"https://api.github.com/repos/apache/druid/issues/3860","id":316949408,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjk0OTQwOA==","user":{"login":"ambition119","id":20353043,"node_id":"MDQ6VXNlcjIwMzUzMDQz","avatar_url":"https://avatars.githubusercontent.com/u/20353043?v=4","gravatar_id":"","url":"https://api.github.com/users/ambition119","html_url":"https://github.com/ambition119","followers_url":"https://api.github.com/users/ambition119/followers","following_url":"https://api.github.com/users/ambition119/following{/other_user}","gists_url":"https://api.github.com/users/ambition119/gists{/gist_id}","starred_url":"https://api.github.com/users/ambition119/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ambition119/subscriptions","organizations_url":"https://api.github.com/users/ambition119/orgs","repos_url":"https://api.github.com/users/ambition119/repos","events_url":"https://api.github.com/users/ambition119/events{/privacy}","received_events_url":"https://api.github.com/users/ambition119/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T09:12:09Z","updated_at":"2017-07-21T09:42:58Z","author_association":"NONE","body":"@dkhwangbo :\r\n            Use kafka-0.8.2.1 and kafka-0.10.2.0 common.runtime.properties kafka-emitter config is the same, info :\r\ndruid.extensions.loadList=[\"druid-kafka-eight\",\"druid-hdfs-storage\", \"druid-histogram\", \"druid-datasketches\", \"druid-lookups-cached-global\", \"mysql-metadata-storage\", \"kafka-emitter\"]\r\ndruid.monitoring.monitors=[\"com.metamx.metrics.JvmMonitor\"]\r\ndruid.emitter=composing\r\ndruid.emitter.composing.emitters=[\"logging\",\"kafka\"]\r\ndruid.emitter.logging.logLevel=info\r\n#druid.emitter=kafka\r\ndruid.emitter.kafka.bootstrap.servers=hdp:9092\r\ndruid.emitter.kafka.metric.topic=druid-metric\r\ndruid.emitter.kafka.alert.topic=druid-alert\r\ndruid.emitter.kafka.producer.config={\"key.serializer\":\"org.apache.kafka.common.serialization.StringSerializer\",\"value.serializer\":\"org.apache.kafka.common.serialization.StringSerializer\",\"max.block.ms\":10}\r\n\r\nextensions/kafka-emitter directory Are not the same, kafka-emitter（0.8.2.1）info:\r\nkafka-emitter/\r\nkafka-emitter-0.11.0-SNAPSHOT.jar   \r\nkafka_2.10-0.8.2.1.jar\r\nkafka-clients-0.8.2.1.jar\r\nmetrics-core-2.2.0.jar\r\nscala-library-2.10.4.jar\r\nsnappy-java-1.1.1.6.jar\r\nzkclient-0.3.jar\r\njopt-simple-3.2.jar\r\n\r\nkafka-emitter（0.10.2.0）info:\r\nkafka-emitter/\r\njopt-simple-5.0.3.jar\r\nkafka_2.10-0.10.2.0.jar\r\nkafka-clients-0.10.2.0.jar\r\nkafka-emitter-0.11.0-SNAPSHOT.jar\r\nmetrics-core-2.2.0.jar\r\nscala-library-2.10.6.jar\r\nsnappy-java-1.1.2.6.jar\r\nzkclient-0.10.jar\r\n\r\nthanks!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316949408/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316955712","html_url":"https://github.com/apache/druid/issues/4477#issuecomment-316955712","issue_url":"https://api.github.com/repos/apache/druid/issues/4477","id":316955712,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjk1NTcxMg==","user":{"login":"xu-xlucas","id":20542692,"node_id":"MDQ6VXNlcjIwNTQyNjky","avatar_url":"https://avatars.githubusercontent.com/u/20542692?v=4","gravatar_id":"","url":"https://api.github.com/users/xu-xlucas","html_url":"https://github.com/xu-xlucas","followers_url":"https://api.github.com/users/xu-xlucas/followers","following_url":"https://api.github.com/users/xu-xlucas/following{/other_user}","gists_url":"https://api.github.com/users/xu-xlucas/gists{/gist_id}","starred_url":"https://api.github.com/users/xu-xlucas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xu-xlucas/subscriptions","organizations_url":"https://api.github.com/users/xu-xlucas/orgs","repos_url":"https://api.github.com/users/xu-xlucas/repos","events_url":"https://api.github.com/users/xu-xlucas/events{/privacy}","received_events_url":"https://api.github.com/users/xu-xlucas/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T09:39:33Z","updated_at":"2017-07-21T09:39:33Z","author_association":"NONE","body":"i meet the same question ,i fixed use classpath add conf/druid/_common/ and config the druid.extensions.hadoopDependenciesDir ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316955712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316967998","html_url":"https://github.com/apache/druid/issues/4577#issuecomment-316967998","issue_url":"https://api.github.com/repos/apache/druid/issues/4577","id":316967998,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjk2Nzk5OA==","user":{"login":"yiguolei","id":9208457,"node_id":"MDQ6VXNlcjkyMDg0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/9208457?v=4","gravatar_id":"","url":"https://api.github.com/users/yiguolei","html_url":"https://github.com/yiguolei","followers_url":"https://api.github.com/users/yiguolei/followers","following_url":"https://api.github.com/users/yiguolei/following{/other_user}","gists_url":"https://api.github.com/users/yiguolei/gists{/gist_id}","starred_url":"https://api.github.com/users/yiguolei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yiguolei/subscriptions","organizations_url":"https://api.github.com/users/yiguolei/orgs","repos_url":"https://api.github.com/users/yiguolei/repos","events_url":"https://api.github.com/users/yiguolei/events{/privacy}","received_events_url":"https://api.github.com/users/yiguolei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T10:35:04Z","updated_at":"2017-07-21T10:35:04Z","author_association":"NONE","body":"@leventov \r\nthe bitmap size = cardinality (number of distinct values in segment file) * number of rows / 8. \r\nthe data size = avg row size * number of rows.\r\nIf every dimension has a bitmap index, maybe the bit map size is larger than the data size. For example, there are 50000 rows in a segment file, every row have 10 long value dimensions and 1 float metrics and every dimension have 1000 distinct values. In this case, there will be 10 bitmaps  and every bitmap's size = 1000 * 50000 /8 and the size is:\r\n the bitmap size =   10 * 1000 * 50000/8 = 62.5mb [not consider about compression of bitmap, like roaring] \r\nthe data size = 50000*(10*8 + 4) = 4.2mb\r\nYou can see, the bitmap size is larger than the data size. It may waste lot of storage.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316967998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316972913","html_url":"https://github.com/apache/druid/pull/4489#issuecomment-316972913","issue_url":"https://api.github.com/repos/apache/druid/issues/4489","id":316972913,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjk3MjkxMw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T11:01:29Z","updated_at":"2017-07-21T11:01:29Z","author_association":"MEMBER","body":"@jihoonson thanks, fixed","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316972913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316975502","html_url":"https://github.com/apache/druid/pull/4564#issuecomment-316975502","issue_url":"https://api.github.com/repos/apache/druid/issues/4564","id":316975502,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjk3NTUwMg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T11:17:05Z","updated_at":"2017-07-21T11:17:05Z","author_association":"MEMBER","body":"@himanshug could you please merge this PR?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316975502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316976068","html_url":"https://github.com/apache/druid/pull/4581#issuecomment-316976068","issue_url":"https://api.github.com/repos/apache/druid/issues/4581","id":316976068,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjk3NjA2OA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T11:20:39Z","updated_at":"2017-07-21T11:20:39Z","author_association":"MEMBER","body":"Thanks @a2l007, please sign CLA: http://druid.io/community/cla.html","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316976068/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/316979401","html_url":"https://github.com/apache/druid/issues/4577#issuecomment-316979401","issue_url":"https://api.github.com/repos/apache/druid/issues/4577","id":316979401,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNjk3OTQwMQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T11:40:39Z","updated_at":"2017-07-21T11:40:39Z","author_association":"MEMBER","body":"@yiguolei is it more like a theoretical question or you hit this in your workload somehow?\r\n\r\nNote that Druid currently doesn't compute bitmaps for long-typed dimensions, only for string-typed dimensions (it was the only available type of dimensions until recently, long-typed dimensions is a recent addition.)\r\n\r\nNot considering bitmap compression is wrong, because it reduces the footprint required for bitmaps for high-cardinality dimensions dramatically. Note that \"concise\" bitmap compression algorithm could still be preferable over \"roaring\" in this case, because it achieves much better compression. However this area is very far from being optimized well in Druid, a lot of changes are possible that would allow better compression _and_ better performance, e. g.  #3882\r\n\r\nGenerally you cannot say that some format is \"waste of storage\", because there is always a tradeoff between how much do you precompute in the segment (bitmaps, indexes, etc.) and therefore the segment size increases, and how fast you can perform queries. See https://en.wikipedia.org/wiki/Space%E2%80%93time_tradeoff ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/316979401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317007296","html_url":"https://github.com/apache/druid/pull/4581#issuecomment-317007296","issue_url":"https://api.github.com/repos/apache/druid/issues/4581","id":317007296,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzAwNzI5Ng==","user":{"login":"a2l007","id":4603202,"node_id":"MDQ6VXNlcjQ2MDMyMDI=","avatar_url":"https://avatars.githubusercontent.com/u/4603202?v=4","gravatar_id":"","url":"https://api.github.com/users/a2l007","html_url":"https://github.com/a2l007","followers_url":"https://api.github.com/users/a2l007/followers","following_url":"https://api.github.com/users/a2l007/following{/other_user}","gists_url":"https://api.github.com/users/a2l007/gists{/gist_id}","starred_url":"https://api.github.com/users/a2l007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/a2l007/subscriptions","organizations_url":"https://api.github.com/users/a2l007/orgs","repos_url":"https://api.github.com/users/a2l007/repos","events_url":"https://api.github.com/users/a2l007/events{/privacy}","received_events_url":"https://api.github.com/users/a2l007/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T13:54:21Z","updated_at":"2017-07-21T13:54:21Z","author_association":"CONTRIBUTOR","body":"I've signed it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317007296/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317031923","html_url":"https://github.com/apache/druid/pull/4581#issuecomment-317031923","issue_url":"https://api.github.com/repos/apache/druid/issues/4581","id":317031923,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzAzMTkyMw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T15:28:00Z","updated_at":"2017-07-21T15:28:00Z","author_association":"CONTRIBUTOR","body":"@a2l007 has joined in my team and will be added to our CLA .","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317031923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317064312","html_url":"https://github.com/apache/druid/pull/4585#issuecomment-317064312","issue_url":"https://api.github.com/repos/apache/druid/issues/4585","id":317064312,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzA2NDMxMg==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T17:34:58Z","updated_at":"2017-07-21T17:35:13Z","author_association":"CONTRIBUTOR","body":"@wywlds this PR needs to go against master first, then will backport it if needed","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317064312/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317085709","html_url":"https://github.com/apache/druid/pull/4281#issuecomment-317085709","issue_url":"https://api.github.com/repos/apache/druid/issues/4281","id":317085709,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzA4NTcwOQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T19:00:50Z","updated_at":"2017-07-21T19:00:50Z","author_association":"CONTRIBUTOR","body":"@gianm @drcrallen I've reduced this PR to just mentioning merged coordinator+overlord node ... going forward the expectation would be that overlord can be upgraded before/after MMs or both.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317085709/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317088353","html_url":"https://github.com/apache/druid/issues/4384#issuecomment-317088353","issue_url":"https://api.github.com/repos/apache/druid/issues/4384","id":317088353,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzA4ODM1Mw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T19:12:06Z","updated_at":"2017-07-21T19:12:06Z","author_association":"CONTRIBUTOR","body":"@gianm i think 0.10.1 fulfills the updated rolling upgrade contract in #4281 , so 0.10.1 is alright.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317088353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317120664","html_url":"https://github.com/apache/druid/pull/4570#issuecomment-317120664","issue_url":"https://api.github.com/repos/apache/druid/issues/4570","id":317120664,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzEyMDY2NA==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T21:50:56Z","updated_at":"2017-07-21T21:50:56Z","author_association":"CONTRIBUTOR","body":"Thanks @leventov, added `Select/SearchQueryMetricsFactory` with default implementations.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317120664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317123016","html_url":"https://github.com/apache/druid/issues/4545#issuecomment-317123016","issue_url":"https://api.github.com/repos/apache/druid/issues/4545","id":317123016,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzEyMzAxNg==","user":{"login":"donpinkus","id":987092,"node_id":"MDQ6VXNlcjk4NzA5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/987092?v=4","gravatar_id":"","url":"https://api.github.com/users/donpinkus","html_url":"https://github.com/donpinkus","followers_url":"https://api.github.com/users/donpinkus/followers","following_url":"https://api.github.com/users/donpinkus/following{/other_user}","gists_url":"https://api.github.com/users/donpinkus/gists{/gist_id}","starred_url":"https://api.github.com/users/donpinkus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/donpinkus/subscriptions","organizations_url":"https://api.github.com/users/donpinkus/orgs","repos_url":"https://api.github.com/users/donpinkus/repos","events_url":"https://api.github.com/users/donpinkus/events{/privacy}","received_events_url":"https://api.github.com/users/donpinkus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T22:02:59Z","updated_at":"2017-10-05T02:16:09Z","author_association":"NONE","body":"Thanks @akashdw - which queries in Druid are sortable? \r\n\r\nThe page you linked to says it's only for groupBy, but that conflicts with another page in the docs.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317123016/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317131916","html_url":"https://github.com/apache/druid/issues/2187#issuecomment-317131916","issue_url":"https://api.github.com/repos/apache/druid/issues/2187","id":317131916,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzEzMTkxNg==","user":{"login":"donpinkus","id":987092,"node_id":"MDQ6VXNlcjk4NzA5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/987092?v=4","gravatar_id":"","url":"https://api.github.com/users/donpinkus","html_url":"https://github.com/donpinkus","followers_url":"https://api.github.com/users/donpinkus/followers","following_url":"https://api.github.com/users/donpinkus/following{/other_user}","gists_url":"https://api.github.com/users/donpinkus/gists{/gist_id}","starred_url":"https://api.github.com/users/donpinkus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/donpinkus/subscriptions","organizations_url":"https://api.github.com/users/donpinkus/orgs","repos_url":"https://api.github.com/users/donpinkus/repos","events_url":"https://api.github.com/users/donpinkus/events{/privacy}","received_events_url":"https://api.github.com/users/donpinkus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-21T23:04:38Z","updated_at":"2017-07-21T23:04:38Z","author_association":"NONE","body":"Has this functionality been added? Or does a JS filter still only work on one column?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317131916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317143158","html_url":"https://github.com/apache/druid/pull/4585#issuecomment-317143158","issue_url":"https://api.github.com/repos/apache/druid/issues/4585","id":317143158,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzE0MzE1OA==","user":{"login":"wywlds","id":5862682,"node_id":"MDQ6VXNlcjU4NjI2ODI=","avatar_url":"https://avatars.githubusercontent.com/u/5862682?v=4","gravatar_id":"","url":"https://api.github.com/users/wywlds","html_url":"https://github.com/wywlds","followers_url":"https://api.github.com/users/wywlds/followers","following_url":"https://api.github.com/users/wywlds/following{/other_user}","gists_url":"https://api.github.com/users/wywlds/gists{/gist_id}","starred_url":"https://api.github.com/users/wywlds/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wywlds/subscriptions","organizations_url":"https://api.github.com/users/wywlds/orgs","repos_url":"https://api.github.com/users/wywlds/repos","events_url":"https://api.github.com/users/wywlds/events{/privacy}","received_events_url":"https://api.github.com/users/wywlds/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-22T01:01:03Z","updated_at":"2017-07-22T01:01:03Z","author_association":"CONTRIBUTOR","body":"@b-slim I have created another pull request for master branch in #4588 , should I delete this pr?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317143158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317152857","html_url":"https://github.com/apache/druid/pull/4489#issuecomment-317152857","issue_url":"https://api.github.com/repos/apache/druid/issues/4489","id":317152857,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzE1Mjg1Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-22T04:08:28Z","updated_at":"2017-07-22T04:08:28Z","author_association":"CONTRIBUTOR","body":"I'll commit tomorrow if other committers don't have any comments.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317152857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317164316","html_url":"https://github.com/apache/druid/pull/4576#issuecomment-317164316","issue_url":"https://api.github.com/repos/apache/druid/issues/4576","id":317164316,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzE2NDMxNg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-22T07:46:02Z","updated_at":"2017-07-22T07:46:02Z","author_association":"CONTRIBUTOR","body":"In this patch, the grouping keys are stored in the buffer as well as the aggregated values. However, actually they don't have to be stored because ```BufferArrayGrouper``` is only used for a single indexed column and the key is always the index for the grouping key. It means, the array index can be used to directly represent the dimension index which is always an integer. This improvement can reduce the memory consumption significantly as well as the overhead to write to ByteBuffer.\r\nThe one thing I'm concerned with for this further improvement is that ```BufferArrayGrouper.Iterator``` should return ```Entry<ByteBuffer>```. To do so, I'm thinking using a mutable ```keyBuffer``` of an integer size when returning an entry in ```BufferArrayGrouper.Iterator.next()```. Here is an example implementation.\r\n\r\n```java\r\n    @Override\r\n    public Entry<KeyType> next()\r\n    {\r\n      if (cur == NOT_FOUND) {\r\n        throw new NoSuchElementException();\r\n      }\r\n\r\n      keyBuffer.putInt(0, cur - 1);\r\n\r\n      needFindNext = true;\r\n      final int baseOffset = cur * recordSize + USED_FLAG_SIZE;\r\n      final Object[] values = new Object[aggregators.length];\r\n      for (int i = 0; i < aggregators.length; i++) {\r\n        values[i] = aggregators[i].get(valBuffer, baseOffset + aggregatorOffsets[i]);\r\n      }\r\n      return new Entry<>(keySerde.fromByteBuffer(keyBuffer, 0), values);\r\n    }\r\n```\r\n\r\nHowever, this assumes that callers immediately process the returned keys from ```next()```. I'm not sure this improvement breaks any contract around ```Grouper```. \r\nAny thoughts @gianm?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317164316/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317183531","html_url":"https://github.com/apache/druid/pull/4585#issuecomment-317183531","issue_url":"https://api.github.com/repos/apache/druid/issues/4585","id":317183531,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzE4MzUzMQ==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-22T13:23:32Z","updated_at":"2017-07-22T13:23:32Z","author_association":"CONTRIBUTOR","body":"@wywlds Thanks i have merged your changes.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317183531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317197507","html_url":"https://github.com/apache/druid/issues/4589#issuecomment-317197507","issue_url":"https://api.github.com/repos/apache/druid/issues/4589","id":317197507,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzE5NzUwNw==","user":{"login":"ashishpahwa7","id":13049716,"node_id":"MDQ6VXNlcjEzMDQ5NzE2","avatar_url":"https://avatars.githubusercontent.com/u/13049716?v=4","gravatar_id":"","url":"https://api.github.com/users/ashishpahwa7","html_url":"https://github.com/ashishpahwa7","followers_url":"https://api.github.com/users/ashishpahwa7/followers","following_url":"https://api.github.com/users/ashishpahwa7/following{/other_user}","gists_url":"https://api.github.com/users/ashishpahwa7/gists{/gist_id}","starred_url":"https://api.github.com/users/ashishpahwa7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashishpahwa7/subscriptions","organizations_url":"https://api.github.com/users/ashishpahwa7/orgs","repos_url":"https://api.github.com/users/ashishpahwa7/repos","events_url":"https://api.github.com/users/ashishpahwa7/events{/privacy}","received_events_url":"https://api.github.com/users/ashishpahwa7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-22T17:14:43Z","updated_at":"2017-07-22T17:14:50Z","author_association":"NONE","body":"It just worked fine the first time I launched it . I am currently using conf-quick-start default settings on 8 GB machine.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317197507/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317251088","html_url":"https://github.com/apache/druid/issues/2187#issuecomment-317251088","issue_url":"https://api.github.com/repos/apache/druid/issues/2187","id":317251088,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzI1MTA4OA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-23T12:54:29Z","updated_at":"2017-07-23T12:54:29Z","author_association":"MEMBER","body":"@donpinkus this specific type of filter is implemented in #3928","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317251088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317265103","html_url":"https://github.com/apache/druid/pull/4489#issuecomment-317265103","issue_url":"https://api.github.com/repos/apache/druid/issues/4489","id":317265103,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzI2NTEwMw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-23T16:32:46Z","updated_at":"2017-07-23T16:32:46Z","author_association":"MEMBER","body":"Thanks @jihoonson !","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317265103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317265245","html_url":"https://github.com/apache/druid/pull/4171#issuecomment-317265245","issue_url":"https://api.github.com/repos/apache/druid/issues/4171","id":317265245,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzI2NTI0NQ==","user":{"login":"knoguchi","id":127546,"node_id":"MDQ6VXNlcjEyNzU0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/127546?v=4","gravatar_id":"","url":"https://api.github.com/users/knoguchi","html_url":"https://github.com/knoguchi","followers_url":"https://api.github.com/users/knoguchi/followers","following_url":"https://api.github.com/users/knoguchi/following{/other_user}","gists_url":"https://api.github.com/users/knoguchi/gists{/gist_id}","starred_url":"https://api.github.com/users/knoguchi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knoguchi/subscriptions","organizations_url":"https://api.github.com/users/knoguchi/orgs","repos_url":"https://api.github.com/users/knoguchi/repos","events_url":"https://api.github.com/users/knoguchi/events{/privacy}","received_events_url":"https://api.github.com/users/knoguchi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-23T16:35:24Z","updated_at":"2017-07-23T16:35:24Z","author_association":"CONTRIBUTOR","body":"@gianm  I appreciate if you'd review.  I'm using this in my production system.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317265245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317299438","html_url":"https://github.com/apache/druid/issues/4575#issuecomment-317299438","issue_url":"https://api.github.com/repos/apache/druid/issues/4575","id":317299438,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzI5OTQzOA==","user":{"login":"zhxiaom5","id":10976459,"node_id":"MDQ6VXNlcjEwOTc2NDU5","avatar_url":"https://avatars.githubusercontent.com/u/10976459?v=4","gravatar_id":"","url":"https://api.github.com/users/zhxiaom5","html_url":"https://github.com/zhxiaom5","followers_url":"https://api.github.com/users/zhxiaom5/followers","following_url":"https://api.github.com/users/zhxiaom5/following{/other_user}","gists_url":"https://api.github.com/users/zhxiaom5/gists{/gist_id}","starred_url":"https://api.github.com/users/zhxiaom5/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhxiaom5/subscriptions","organizations_url":"https://api.github.com/users/zhxiaom5/orgs","repos_url":"https://api.github.com/users/zhxiaom5/repos","events_url":"https://api.github.com/users/zhxiaom5/events{/privacy}","received_events_url":"https://api.github.com/users/zhxiaom5/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T01:43:06Z","updated_at":"2017-07-24T01:43:06Z","author_association":"NONE","body":"any help?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317299438/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317344260","html_url":"https://github.com/apache/druid/issues/4584#issuecomment-317344260","issue_url":"https://api.github.com/repos/apache/druid/issues/4584","id":317344260,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzM0NDI2MA==","user":{"login":"ambition119","id":20353043,"node_id":"MDQ6VXNlcjIwMzUzMDQz","avatar_url":"https://avatars.githubusercontent.com/u/20353043?v=4","gravatar_id":"","url":"https://api.github.com/users/ambition119","html_url":"https://github.com/ambition119","followers_url":"https://api.github.com/users/ambition119/followers","following_url":"https://api.github.com/users/ambition119/following{/other_user}","gists_url":"https://api.github.com/users/ambition119/gists{/gist_id}","starred_url":"https://api.github.com/users/ambition119/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ambition119/subscriptions","organizations_url":"https://api.github.com/users/ambition119/orgs","repos_url":"https://api.github.com/users/ambition119/repos","events_url":"https://api.github.com/users/ambition119/events{/privacy}","received_events_url":"https://api.github.com/users/ambition119/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T07:44:09Z","updated_at":"2017-07-24T07:53:36Z","author_association":"NONE","body":"conf/druid/_common/common.runtime.properties:\r\ndruid.extensions.loadList=[\"druid-kafka-eight\", \"druid-hdfs-storage\", \"druid-histogram\", \"druid-datasketches\", \"druid-lookups-cached-global\", \"mysql-metadata-storage\", \"kafka-emitter\"]\r\n\r\n#\r\n# kafka-emitter\r\n#\r\ndruid.monitoring.monitors=[\"com.metamx.metrics.JvmMonitor\"]\r\ndruid.emitter=composing\r\ndruid.emitter.composing.emitters=[\"logging\",\"kafka\"]\r\ndruid.emitter.logging.logLevel=info\r\ndruid.emitter.kafka.bootstrap.servers=hdp:9092\r\ndruid.emitter.kafka.metric.topic=druid-metric\r\ndruid.emitter.kafka.alert.topic=druid-alert\r\ndruid.emitter.kafka.producer.config={\"max.block.ms\":10,\"buffer.memory\":10,\"batch.size\":10,\"receive.buffer.bytes\":10,\"receive.buffer.bytes\":10,\"max.request.size\":10,\"send.buffer.bytes\":10}\r\n\r\n$ ll extensions/kafka-emitter\r\njopt-simple-5.0.3.jar\r\nkafka_2.10-0.10.2.0.jar\r\nkafka-clients-0.10.2.0.jar\r\nkafka-emitter-0.11.0-SNAPSHOT.jar\r\nmetrics-core-2.2.0.jar\r\nscala-library-2.10.6.jar\r\nsnappy-java-1.1.2.6.jar\r\nzkclient-0.10.jar\r\n\r\n\r\n$ bin/broker.sh start\r\n$ tail -100f log/broker.log\r\n....\r\nINFO [MonitorScheduler-0] com.metamx.emitter.core.LoggingEmitter - Event [{\"feed\":\"metrics\",\"timestamp\":\"2017-07-23T23:38:54.320-08:00\",\"service\":\"druid/broker\",\"host\":\"hdp:8082\",\"version\":\"0.11.0-SNAPSHOT\",\"metric\":\"jetty/numOpenConnections\",\"value\":0}]\r\n...\r\n\r\n$ bin/kafka-topics.sh --zookeeper hdp:2181 --list\r\n__consumer_offsets\r\ndruid-alert\r\ndruid-metric\r\n$bin/kafka-console-consumer.sh -zookeeper hdp:2181 --from-beginning --topic druid-metric\r\n// no message consumer\r\n\r\n$bin/broker.sh stop\r\n$ tail -100f log/broker.log\r\nWARN [pool-18-thread-1] io.druid.emitter.kafka.KafkaEmitter - Failed to take record from queue!\r\njava.lang.InterruptedException\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014) ~[?:1.8.0_131]\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2048) ~[?:1.8.0_131]\r\n\tat java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442) ~[?:1.8.0_131]\r\n\tat io.druid.emitter.kafka.MemoryBoundLinkedBlockingQueue.take(MemoryBoundLinkedBlockingQueue.java:59) ~[?:?]\r\n\tat io.druid.emitter.kafka.KafkaEmitter.sendToKafka(KafkaEmitter.java:147) ~[?:?]\r\n\tat io.druid.emitter.kafka.KafkaEmitter.sendMetricToKafka(KafkaEmitter.java:134) ~[?:?]\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_131]\r\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_131]\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_131]\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_131]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_131]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_131]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_131]\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317344260/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317454952","html_url":"https://github.com/apache/druid/issues/4587#issuecomment-317454952","issue_url":"https://api.github.com/repos/apache/druid/issues/4587","id":317454952,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzQ1NDk1Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T15:11:53Z","updated_at":"2017-07-24T15:11:53Z","author_association":"CONTRIBUTOR","body":"Do you mean like a SQL HAVING? This is supported, but only by groupBy. See havingSpec here: http://druid.io/docs/latest/querying/groupbyquery.html","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317454952/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317494368","html_url":"https://github.com/apache/druid/pull/4561#issuecomment-317494368","issue_url":"https://api.github.com/repos/apache/druid/issues/4561","id":317494368,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzQ5NDM2OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T17:25:32Z","updated_at":"2017-07-24T17:25:32Z","author_association":"CONTRIBUTOR","body":"Resolved merge conflicts and force pushed, since I think nobody has looked at this yet.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317494368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317527942","html_url":"https://github.com/apache/druid/issues/4593#issuecomment-317527942","issue_url":"https://api.github.com/repos/apache/druid/issues/4593","id":317527942,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzUyNzk0Mg==","user":{"login":"rahulsingh303","id":11955402,"node_id":"MDQ6VXNlcjExOTU1NDAy","avatar_url":"https://avatars.githubusercontent.com/u/11955402?v=4","gravatar_id":"","url":"https://api.github.com/users/rahulsingh303","html_url":"https://github.com/rahulsingh303","followers_url":"https://api.github.com/users/rahulsingh303/followers","following_url":"https://api.github.com/users/rahulsingh303/following{/other_user}","gists_url":"https://api.github.com/users/rahulsingh303/gists{/gist_id}","starred_url":"https://api.github.com/users/rahulsingh303/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rahulsingh303/subscriptions","organizations_url":"https://api.github.com/users/rahulsingh303/orgs","repos_url":"https://api.github.com/users/rahulsingh303/repos","events_url":"https://api.github.com/users/rahulsingh303/events{/privacy}","received_events_url":"https://api.github.com/users/rahulsingh303/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T19:23:23Z","updated_at":"2017-07-24T19:23:23Z","author_association":"NONE","body":"I missed attaching error logs , they're attached now : \r\n[hadoop_job_error_log.txt](https://github.com/druid-io/druid/files/1170955/hadoop_job_error_log.txt)\r\n[druid_indexing_console_error_log.txt](https://github.com/druid-io/druid/files/1170956/druid_indexing_console_error_log.txt)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317527942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317542531","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317542531","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317542531,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU0MjUzMQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T20:20:55Z","updated_at":"2017-07-24T20:20:55Z","author_association":"CONTRIBUTOR","body":":+1:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317542531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317543875","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317543875","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317543875,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU0Mzg3NQ==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T20:26:07Z","updated_at":"2017-07-24T20:26:07Z","author_association":"CONTRIBUTOR","body":"@akashdw and @himanshug  why do we need a default implementation ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317543875/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317544681","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317544681","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317544681,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU0NDY4MQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T20:29:05Z","updated_at":"2017-07-24T20:29:05Z","author_association":"CONTRIBUTOR","body":"@b-slim because all aggregators are failing to compile.\r\nwhat is the downside of having default impl ?  that method would not have a meaningful implementation for the sketch based complex aggs.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317544681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317545775","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317545775","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317545775,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU0NTc3NQ==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T20:33:12Z","updated_at":"2017-07-24T20:33:12Z","author_association":"CONTRIBUTOR","body":"Which aggregators are failing to compile ? this default implementation is not a meaningful one and it can lead the dev into forgetting about implementing it. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317545775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317548031","html_url":"https://github.com/apache/druid/issues/3594#issuecomment-317548031","issue_url":"https://api.github.com/repos/apache/druid/issues/3594","id":317548031,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU0ODAzMQ==","user":{"login":"rahulsingh303","id":11955402,"node_id":"MDQ6VXNlcjExOTU1NDAy","avatar_url":"https://avatars.githubusercontent.com/u/11955402?v=4","gravatar_id":"","url":"https://api.github.com/users/rahulsingh303","html_url":"https://github.com/rahulsingh303","followers_url":"https://api.github.com/users/rahulsingh303/followers","following_url":"https://api.github.com/users/rahulsingh303/following{/other_user}","gists_url":"https://api.github.com/users/rahulsingh303/gists{/gist_id}","starred_url":"https://api.github.com/users/rahulsingh303/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rahulsingh303/subscriptions","organizations_url":"https://api.github.com/users/rahulsingh303/orgs","repos_url":"https://api.github.com/users/rahulsingh303/repos","events_url":"https://api.github.com/users/rahulsingh303/events{/privacy}","received_events_url":"https://api.github.com/users/rahulsingh303/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T20:41:57Z","updated_at":"2017-07-24T20:41:57Z","author_association":"NONE","body":"still looking for answers ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317548031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317560839","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317560839","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317560839,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU2MDgzOQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T21:30:05Z","updated_at":"2017-07-24T21:30:05Z","author_association":"CONTRIBUTOR","body":"@b-slim e.g. https://github.com/druid-io/druid/blob/master/extensions-core/datasketches/src/main/java/io/druid/query/aggregation/datasketches/theta/SketchBufferAggregator.java#L123 has same and all the other sketch based aggregators (qualtiles, tuples,.. ) would have same impl ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317560839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317561790","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317561790","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317561790,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU2MTc5MA==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T21:34:07Z","updated_at":"2017-07-24T21:34:07Z","author_association":"CONTRIBUTOR","body":"yeah that is the way to go every aggregator will implement what ever needed, but that's not a default implementation anyway same for other methods like `getLong`. Again not sure which code you said is not compiling ?   ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317561790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317562916","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317562916","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317562916,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU2MjkxNg==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T21:39:00Z","updated_at":"2017-07-24T21:39:00Z","author_association":"CONTRIBUTOR","body":"we have custom aggregators which are failing to compile and getDouble() can't have a meaningful implementation for any, hence the default.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317562916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317564278","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317564278","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317564278,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU2NDI3OA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T21:45:17Z","updated_at":"2017-07-24T21:45:17Z","author_association":"CONTRIBUTOR","body":"also, about dev forgetting to implement it: wouldn't that specific aggregator end up throwing exception and then the dev would know that it needs to be implemented?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317564278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317564762","html_url":"https://github.com/apache/druid/pull/4540#issuecomment-317564762","issue_url":"https://api.github.com/repos/apache/druid/issues/4540","id":317564762,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU2NDc2Mg==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T21:47:23Z","updated_at":"2017-07-24T21:47:23Z","author_association":"CONTRIBUTOR","body":"@drcrallen ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317564762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317566227","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317566227","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317566227,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU2NjIyNw==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T21:54:12Z","updated_at":"2017-07-24T21:54:12Z","author_association":"CONTRIBUTOR","body":"From a design perspective, I don't think throwing an exception is suppose to be the default implementation of such method it makes no sense IMO, it sends wrong message/question to any new developer. \r\n\r\n> also, about dev forgetting to implement it: wouldn't that specific aggregator end up throwing exception and then the dev would know that it needs to be implemented?\r\n\r\nnot necessarily, it can throw the exception on run time and not seeing it during development phase. \r\n\r\nNot sure what is wrong with implementing those within the in-house custom aggregator and avoid polluting the interface ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317566227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317580890","html_url":"https://github.com/apache/druid/pull/4596#issuecomment-317580890","issue_url":"https://api.github.com/repos/apache/druid/issues/4596","id":317580890,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU4MDg5MA==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T23:08:36Z","updated_at":"2017-07-24T23:08:36Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317580890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317581572","html_url":"https://github.com/apache/druid/pull/4597#issuecomment-317581572","issue_url":"https://api.github.com/repos/apache/druid/issues/4597","id":317581572,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU4MTU3Mg==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-24T23:11:40Z","updated_at":"2017-07-24T23:11:40Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317581572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317598290","html_url":"https://github.com/apache/druid/pull/4596#issuecomment-317598290","issue_url":"https://api.github.com/repos/apache/druid/issues/4596","id":317598290,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU5ODI5MA==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T01:06:12Z","updated_at":"2017-07-25T01:06:12Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317598290/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317599335","html_url":"https://github.com/apache/druid/issues/4542#issuecomment-317599335","issue_url":"https://api.github.com/repos/apache/druid/issues/4542","id":317599335,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzU5OTMzNQ==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T01:13:16Z","updated_at":"2017-07-25T01:13:16Z","author_association":"CONTRIBUTOR","body":"Can you share the ingestion spec and the query. Have you set the queryGranularity in the ingestion spec to be HOUR ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317599335/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317602017","html_url":"https://github.com/apache/druid/pull/4576#issuecomment-317602017","issue_url":"https://api.github.com/repos/apache/druid/issues/4576","id":317602017,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzYwMjAxNw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T01:31:04Z","updated_at":"2017-07-25T01:31:04Z","author_association":"CONTRIBUTOR","body":"Re: https://github.com/druid-io/druid/pull/4576#discussion_r129187939\r\n\r\nConsider also adding a benchmark that groups by one very low cardinality dimension, to measure performance for \"easy\" queries.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317602017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317602249","html_url":"https://github.com/apache/druid/pull/4576#issuecomment-317602249","issue_url":"https://api.github.com/repos/apache/druid/issues/4576","id":317602249,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzYwMjI0OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T01:32:31Z","updated_at":"2017-07-25T01:32:31Z","author_association":"CONTRIBUTOR","body":"Another useful benchmark is one that groups a medium or high cardinality dimension, but with a filter such that most values are not seen. That should exercise the case where lazier aggregator initialization helps.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317602249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317608683","html_url":"https://github.com/apache/druid/pull/4576#issuecomment-317608683","issue_url":"https://api.github.com/repos/apache/druid/issues/4576","id":317608683,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzYwODY4Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T02:16:10Z","updated_at":"2017-07-25T02:16:28Z","author_association":"CONTRIBUTOR","body":"> The one thing I'm concerned with for this further improvement is that BufferArrayGrouper.Iterator should return Entry<ByteBuffer>. To do so, I'm thinking using a mutable keyBuffer of an integer size when returning an entry in BufferArrayGrouper.Iterator.next(). Here is an example implementation.\r\n\r\nI'm not sure if BufferArrayGrouper should even use a KeySerde at all. Maybe its key should be forced to be `Integer` or `ByteBuffer` with the understanding that the key is always going to be an array index. Then we don't need to store the key since it's implicit.\r\n\r\n> However, this assumes that callers immediately process the returned keys from next(). I'm not sure this improvement breaks any contract around Grouper.\r\n\r\nIf you need to change the contract, then do it. If some users of the Grouper interface process them immediately, but some expect to be able to retain keys, then you can include some language in the Grouper interface like \"Some Grouper implementations will re-use key objects, meaning callers are required to process and discard keys immediately. Check each specific Grouper implementation for details on whether or not it re-uses key objects.\"\r\n\r\nOr, another option is to add a method like `grouper.canRetainKeysFromIterator()` that returns true or false as appropriate. Code that expects to be able to retain keys can call that method and then throw an IllegalStateException if it returns false. I kind of like this option since it'll make it resistant to attempts by future developers to break things by accident :)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317608683/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317674673","html_url":"https://github.com/apache/druid/pull/4592#issuecomment-317674673","issue_url":"https://api.github.com/repos/apache/druid/issues/4592","id":317674673,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzY3NDY3Mw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T08:58:01Z","updated_at":"2017-07-25T08:58:01Z","author_association":"MEMBER","body":"@drcrallen I think  #4480 should be updated instead of creating a new PR","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317674673/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317746087","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317746087","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317746087,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzc0NjA4Nw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T13:58:38Z","updated_at":"2017-07-25T13:58:38Z","author_association":"CONTRIBUTOR","body":"I see your point of enforcing that aggregators compilation fail so that owning dev takes a look at it and implement it appropriately. ( I wonder if documenting it in the release notes wouldn't be enough. )\r\n\r\nOn the other hand, there are many custom aggregators that different teams have (not necessarily one set of devs) and a general user complain about extra work needed to do upgrades. Intention of this PR is to reduce the extra work needed if possible. `getDouble()` would have the default impl proposed in this PR in most cases.\r\n\r\nlet us discuss it in the dev sync to arrive at a conclusion.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317746087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317750891","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317750891","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317750891,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzc1MDg5MQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T14:14:22Z","updated_at":"2017-07-25T14:15:21Z","author_association":"MEMBER","body":"I support @b-slim here, default implementation makes more harm than good here IMO. If adding default impl to getDouble(), why not to add it to getFloat() and getLong() also? But if we do so, it looks like we give preference to Object aggregators, that is actually false, numeric aggregators are more widely used overall.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317750891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317756552","html_url":"https://github.com/apache/druid/issues/4599#issuecomment-317756552","issue_url":"https://api.github.com/repos/apache/druid/issues/4599","id":317756552,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzc1NjU1Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T14:32:00Z","updated_at":"2017-07-25T14:32:00Z","author_association":"CONTRIBUTOR","body":"Such a feature makes sense to me, at least. A patch is welcome :)\r\n\r\nIt's important to make sure that all tasks use the same time, since replicas need to perform exactly the same logic and so their local clocks cannot be used. If you implement this in a similar way to lateMessageRejectionPeriod then it should work.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317756552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317785300","html_url":"https://github.com/apache/druid/issues/4599#issuecomment-317785300","issue_url":"https://api.github.com/repos/apache/druid/issues/4599","id":317785300,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzc4NTMwMA==","user":{"login":"dclim","id":11050882,"node_id":"MDQ6VXNlcjExMDUwODgy","avatar_url":"https://avatars.githubusercontent.com/u/11050882?v=4","gravatar_id":"","url":"https://api.github.com/users/dclim","html_url":"https://github.com/dclim","followers_url":"https://api.github.com/users/dclim/followers","following_url":"https://api.github.com/users/dclim/following{/other_user}","gists_url":"https://api.github.com/users/dclim/gists{/gist_id}","starred_url":"https://api.github.com/users/dclim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dclim/subscriptions","organizations_url":"https://api.github.com/users/dclim/orgs","repos_url":"https://api.github.com/users/dclim/repos","events_url":"https://api.github.com/users/dclim/events{/privacy}","received_events_url":"https://api.github.com/users/dclim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T16:00:21Z","updated_at":"2017-07-25T16:00:21Z","author_association":"CONTRIBUTOR","body":"makes sense to me too :)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317785300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317792383","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317792383","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317792383,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzc5MjM4Mw==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T16:25:03Z","updated_at":"2017-07-25T16:25:03Z","author_association":"CONTRIBUTOR","body":"The introduction of the `getDouble` is a backwards incompatible API change on a public API.  Forcing all implementations of all aggregators to add the same default implementation that is added here will only introduce friction for upgrading for anybody who has taken the time to implement their own aggregator.\r\n\r\nBackwards incompatible API changes should only be made when absolutely necessary in order to facilitate new functionality.  Philosophical concerns are the least important element when discussing backwards incompatible API changes.  If there are philosophical concerns with the APIs, then a new set of APIs that won't have the same philosophical issues (both at inception and during evolution) should be introduced and we should migrate to them.\r\n\r\nAnd yes, a default on `getLong` would've been called for if we had been on Java 8 at the time.  `getFloat` was part of the original interface, so defaulting that wouldn't have happened, but there's no reason for it to not happen.  If the request is to add defaults on `getFloat` and `getLong` as well as documentation for why we have the individual primitive getters to make it more clear to developers, that sounds reasonable to me.\r\n\r\nFwiw, if we really want to make it super simple to generate different types of columns, it might actually make sense to use `getObject` and just verify that it is a `Double` before converting it to the primitive `double`.  I.e. just figure out a way to completely circumvent the primitive getters altogether.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317792383/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317807897","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317807897","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317807897,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzgwNzg5Nw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T17:20:14Z","updated_at":"2017-07-25T17:20:14Z","author_association":"CONTRIBUTOR","body":"it was concluded that having a default implementation makes sense to have easy upgrade, however default implementation should return the result of `getFloat()` instead of throwing exception.\r\ninterface change would be noted in the release notes so that extension owners could change their implementations if needed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317807897/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317811231","html_url":"https://github.com/apache/druid/pull/4281#issuecomment-317811231","issue_url":"https://api.github.com/repos/apache/druid/issues/4281","id":317811231,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzgxMTIzMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T17:32:15Z","updated_at":"2017-07-25T17:32:15Z","author_association":"CONTRIBUTOR","body":"On the dev sync we decided it was worth supporting both orders. (Overlord -> MM; and MM -> Overlord)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317811231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317818527","html_url":"https://github.com/apache/druid/pull/4598#issuecomment-317818527","issue_url":"https://api.github.com/repos/apache/druid/issues/4598","id":317818527,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzgxODUyNw==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T17:57:51Z","updated_at":"2017-07-25T17:57:51Z","author_association":"CONTRIBUTOR","body":"overall +1 left small comments.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317818527/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317818784","html_url":"https://github.com/apache/druid/pull/4433#issuecomment-317818784","issue_url":"https://api.github.com/repos/apache/druid/issues/4433","id":317818784,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzgxODc4NA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T17:58:46Z","updated_at":"2017-07-25T17:58:46Z","author_association":"CONTRIBUTOR","body":"@gianm I have heard from @cheddar before that the json is the api spec rather than the java code itself per-se. Since there is a mix of things which feed into jackson and things which don't feed into jackson that have the same annotation, would it make sense to have a special annotation for things which are part of the JSON api, rather than the Java api?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317818784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317822791","html_url":"https://github.com/apache/druid/pull/4433#issuecomment-317822791","issue_url":"https://api.github.com/repos/apache/druid/issues/4433","id":317822791,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzgyMjc5MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T18:13:01Z","updated_at":"2017-07-25T18:13:01Z","author_association":"CONTRIBUTOR","body":"@drcrallen,\r\n\r\n> @gianm I have heard from @cheddar before that the json is the api spec rather than the java code itself per-se. Since there is a mix of things which feed into jackson and things which don't feed into jackson that have the same annotation, would it make sense to have a special annotation for things which are part of the JSON api, rather than the Java api?\r\n\r\nFor this I think the attitude has been (and can continue to be) that a JSON API is stable if, and only if, it is documented. So I don't think an annotation is necessary.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317822791/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317822881","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317822881","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317822881,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzgyMjg4MQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T18:13:21Z","updated_at":"2017-07-25T18:13:36Z","author_association":"CONTRIBUTOR","body":"@akashdw can you change the default impl to `getFloat()` ? it should be mergeable afterwards.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317822881/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317827823","html_url":"https://github.com/apache/druid/pull/4598#issuecomment-317827823","issue_url":"https://api.github.com/repos/apache/druid/issues/4598","id":317827823,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzgyNzgyMw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T18:30:17Z","updated_at":"2017-07-25T18:30:17Z","author_association":"CONTRIBUTOR","body":"Thanks for reviewing @b-slim ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317827823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317841273","html_url":"https://github.com/apache/druid/issues/4144#issuecomment-317841273","issue_url":"https://api.github.com/repos/apache/druid/issues/4144","id":317841273,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzg0MTI3Mw==","user":{"login":"SpotXPeterCunningham","id":17167879,"node_id":"MDQ6VXNlcjE3MTY3ODc5","avatar_url":"https://avatars.githubusercontent.com/u/17167879?v=4","gravatar_id":"","url":"https://api.github.com/users/SpotXPeterCunningham","html_url":"https://github.com/SpotXPeterCunningham","followers_url":"https://api.github.com/users/SpotXPeterCunningham/followers","following_url":"https://api.github.com/users/SpotXPeterCunningham/following{/other_user}","gists_url":"https://api.github.com/users/SpotXPeterCunningham/gists{/gist_id}","starred_url":"https://api.github.com/users/SpotXPeterCunningham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SpotXPeterCunningham/subscriptions","organizations_url":"https://api.github.com/users/SpotXPeterCunningham/orgs","repos_url":"https://api.github.com/users/SpotXPeterCunningham/repos","events_url":"https://api.github.com/users/SpotXPeterCunningham/events{/privacy}","received_events_url":"https://api.github.com/users/SpotXPeterCunningham/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T19:10:15Z","updated_at":"2017-07-25T19:11:09Z","author_association":"CONTRIBUTOR","body":"HI Guys,\r\n\r\nSo my question is the similar except I want to have a slightly different ingestion spec for both topics but ultimately pointing at the same datasource in Druid.\r\n\r\nI would like to be able to map multiple topics to a single data source, however I would like to ignore several of the metrics when consuming events from one of the topics. I would like to use it as a way to delta ingest delayed events and update one of the metrics against the existing aggregated record.\r\n\r\nI.e a message arrives on topic 1 with a set of dimensions and 5 metrics. A few minutes later a message arrives on topic 2 with all the same dimensions and 5 metrics repeated plus an additional metric. I would like to update the aggregated records in Druid that matches the dimensions with the additional metric. I.e only take into consideration one of the metrics in the ingestion spec from the 2nd topic.\r\n\r\nIs this possible ?\r\n\r\nThanks\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317841273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317860836","html_url":"https://github.com/apache/druid/pull/4570#issuecomment-317860836","issue_url":"https://api.github.com/repos/apache/druid/issues/4570","id":317860836,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzg2MDgzNg==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T20:23:05Z","updated_at":"2017-07-25T20:26:43Z","author_association":"CONTRIBUTOR","body":"Thanks @leventov for reviewing the PR.   I totally agree with you on giving more flexibility to users to select which dimensions they want instead druid core deciding it, but IMO granularity is an important dimension and druid core should emit it by default.\r\n\r\nI added specialized `Select/SearchQueryMetricsFactory` because of two reasons:\r\n1. Having specialized factory allows users to add query specific dimensions easily, this could also be done as you suggested `to have empty default implementations, that emit nothing.` approach.\r\n\r\n2. As you suggested in the first comment to have `granularity() method in QueryMetrics interface which accepts QueryType and return void\r\n` is tricky for all Query types b/c `getGranularity()` method is not available in `Query` interface and not all Query types support granularity (i.e SegmentMetadataQuery, TimeBoundaryQuery and DataSourceMetadataQuery).  I had an offline discussion with @himanshug and we discussed below approaches to emit granularity dimension.\r\n\r\n  a)   add `getGranularity()` method in Query interface with some default.\r\n  b)   granularity() method in DefaultQueryMetrics  but implementation will require a switch case  to \r\n        get `Query.getType()` and then type cast Query object to corresponding QueryType to get \r\n        granularity. IMO this approach might not be suitable b/c it requires switch + typecasting.\r\n   c)  Have query specific MetricsFactory.\r\n\r\nCurrent patch is using `option c`. \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317860836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317861612","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317861612","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317861612,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzg2MTYxMg==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T20:25:58Z","updated_at":"2017-07-25T20:25:58Z","author_association":"CONTRIBUTOR","body":"@b-slim @himanshug Thanks for reviewing the PR. I changed the default implementation to use getFloat().","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317861612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317863970","html_url":"https://github.com/apache/druid/pull/4595#issuecomment-317863970","issue_url":"https://api.github.com/repos/apache/druid/issues/4595","id":317863970,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzg2Mzk3MA==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T20:34:56Z","updated_at":"2017-07-25T20:34:56Z","author_association":"CONTRIBUTOR","body":"👍 left a minor comment.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317863970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317878173","html_url":"https://github.com/apache/druid/pull/4570#issuecomment-317878173","issue_url":"https://api.github.com/repos/apache/druid/issues/4570","id":317878173,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzg3ODE3Mw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T21:29:03Z","updated_at":"2017-07-25T21:29:03Z","author_association":"MEMBER","body":"How importance of a dimension is measured? Nobody needed and nobody asked for it yet (I might be wrong about this - please point if), and you are the first one who needs it and probably will stay the only one for some time. So why add extra stuff to everyone's else metrics?\r\n\r\nAlso if you will no longer need this dimension, with empty default implementation it's safe to remove this method - people who didn't use it won't notice, and people who used to override it in their custom QueryMetrics (to actually emit this dimension -- they have to override!) will be \"notified\" by API breakage and will have a chance to react - e. g. emit it differently, or raise an issue on Github. If the default implementation emits this dimension, somebody may depend on this fact in non-programmatic way (e. g. parsing) and it's much more dangerous to revoke a dimension in this case. This is also a reason why QueryMetrics interface is introduced, see #3954. And this is why dimension that used to be emitted at the moment of QueryMetrics introduction are still emitted by default.\r\n\r\nSo please leave the default implementation empty, and actually emit it in your private extension.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317878173/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317878184","html_url":"https://github.com/apache/druid/pull/4570#issuecomment-317878184","issue_url":"https://api.github.com/repos/apache/druid/issues/4570","id":317878184,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzg3ODE4NA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-25T21:29:06Z","updated_at":"2017-07-25T21:29:06Z","author_association":"MEMBER","body":"On Select/Search, I'm ok either way, but just want to point out that SegmentMetadataQuery and DataSourceMetadataQuery already emit pretty non-sense \"intervals\" (see their getIntervals()) and it's used in QueryMetrics.interval()","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317878184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317909594","html_url":"https://github.com/apache/druid/pull/4271#issuecomment-317909594","issue_url":"https://api.github.com/repos/apache/druid/issues/4271","id":317909594,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzkwOTU5NA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-26T00:14:31Z","updated_at":"2017-07-26T00:15:04Z","author_association":"CONTRIBUTOR","body":"@pjain1 @jihoonson \r\n\r\nUpdated this PR, I'm still looking into caching for the authorization checks and tests for the sanity check filters.\r\n\r\n---\r\n\r\nI added a new feature to this today, introducing namespacing for Authenticators and AuthorizationManagers. This allows multiple AuthorizationManager implementations to be used at the same time.\r\n\r\nThe namespace is another header field, added by an Authenticator after it successfully authenticates a request, that determines how authenticated requests get routed to an AuthorizationManager. More details are at the end of the top-level PR description and auth.md\r\n\r\nEach AuthorizationManager registers itself with an associated namespace, authenticated requests will be sent to the AuthorizationManager that registered with a matching namespace.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317909594/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317968217","html_url":"https://github.com/apache/druid/pull/4576#issuecomment-317968217","issue_url":"https://api.github.com/repos/apache/druid/issues/4576","id":317968217,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzk2ODIxNw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-26T07:09:35Z","updated_at":"2017-07-26T07:09:35Z","author_association":"CONTRIBUTOR","body":"> Consider also adding a benchmark that groups by one very low cardinality dimension, to measure performance for \"easy\" queries.\r\n\r\nI think the ```simple.A``` query in GroupByBenchmark is the one for this kind of use case.\r\n\r\n> Another useful benchmark is one that groups a medium or high cardinality dimension, but with a filter such that most values are not seen. That should exercise the case where lazier aggregator initialization helps.\r\n\r\nGood point! I added a new query ```basic.filter``` and here is the benchmark result.\r\n\r\n```\r\nlazy\r\n\r\nBenchmark                                   (defaultStrategy)  (initialBuckets)  (numProcessingThreads)  (numSegments)  (queryGranularity)  (rowsPerSegment)  (schemaAndQuery)  Mode  Cnt     Score    Error  Units\r\nGroupByBenchmark.querySingleQueryableIndex                 v2                -1                       4              4                 all            100000      basic.filter  avgt   30  1047.481 ± 17.247  us/op\r\n\r\nearly\r\n\r\nBenchmark                                   (defaultStrategy)  (initialBuckets)  (numProcessingThreads)  (numSegments)  (queryGranularity)  (rowsPerSegment)  (schemaAndQuery)  Mode  Cnt     Score    Error  Units\r\nGroupByBenchmark.querySingleQueryableIndex                 v2                -1                       4              4                 all            100000      basic.filter  avgt   30  1314.018 ± 22.357  us/op\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317968217/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/317972385","html_url":"https://github.com/apache/druid/pull/4576#issuecomment-317972385","issue_url":"https://api.github.com/repos/apache/druid/issues/4576","id":317972385,"node_id":"MDEyOklzc3VlQ29tbWVudDMxNzk3MjM4NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-26T07:29:33Z","updated_at":"2017-07-26T07:29:33Z","author_association":"CONTRIBUTOR","body":"> I'm not sure if BufferArrayGrouper should even use a KeySerde at all. Maybe its key should be forced to be Integer or ByteBuffer with the understanding that the key is always going to be an array index. Then we don't need to store the key since it's implicit.\r\n\r\nI'm thinking how ```BufferArrayGrouper``` can be used for merging partial aggregation results. One of the major problems for using ```BufferArrayGrouper``` for merge is the cardinality of the grouping key across segments cannot be acquired. One possible solution is computing the cardinality additionally while doing aggregation. It means, when performing per-segment query execution, hash values of the grouping key are collected using ```HyperLogLogCollector``` in the ```responseContext```. When historicals or brokers merge partial aggregation results, they can use the collector to estimate the approximate cardinality. Even though there are some challenges like additional overhead for cardinality estimation (about additional 15% overhead in the benchmark) and approximate cardinality may cause buffer overflow if the actual cardinality is greater than the approximate one.\r\n\r\nIf this solution or any better idea is acceptable, ```BufferArrayGrouper``` should have the ```KeyType``` parameter to be used by ```SpillingGrouper``` or ```ConcurrentGrouper``` without huge code duplication. What do you think? @gianm ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/317972385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318021361","html_url":"https://github.com/apache/druid/issues/4599#issuecomment-318021361","issue_url":"https://api.github.com/repos/apache/druid/issues/4599","id":318021361,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODAyMTM2MQ==","user":{"login":"wywlds","id":5862682,"node_id":"MDQ6VXNlcjU4NjI2ODI=","avatar_url":"https://avatars.githubusercontent.com/u/5862682?v=4","gravatar_id":"","url":"https://api.github.com/users/wywlds","html_url":"https://github.com/wywlds","followers_url":"https://api.github.com/users/wywlds/followers","following_url":"https://api.github.com/users/wywlds/following{/other_user}","gists_url":"https://api.github.com/users/wywlds/gists{/gist_id}","starred_url":"https://api.github.com/users/wywlds/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wywlds/subscriptions","organizations_url":"https://api.github.com/users/wywlds/orgs","repos_url":"https://api.github.com/users/wywlds/repos","events_url":"https://api.github.com/users/wywlds/events{/privacy}","received_events_url":"https://api.github.com/users/wywlds/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-26T11:01:49Z","updated_at":"2017-07-26T11:01:49Z","author_association":"CONTRIBUTOR","body":"Thank you for your advice. I am already working on it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318021361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318062671","html_url":"https://github.com/apache/druid/pull/4601#issuecomment-318062671","issue_url":"https://api.github.com/repos/apache/druid/issues/4601","id":318062671,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODA2MjY3MQ==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-26T14:03:47Z","updated_at":"2017-07-26T14:03:47Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318062671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318066108","html_url":"https://github.com/apache/druid/pull/4601#issuecomment-318066108","issue_url":"https://api.github.com/repos/apache/druid/issues/4601","id":318066108,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODA2NjEwOA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-26T14:15:19Z","updated_at":"2017-07-26T14:15:19Z","author_association":"CONTRIBUTOR","body":"@niketh can you check other impls as well and ensure that null is take care of in there.\r\nalso, can you annotate ExtractionFn.apply(..) args with `@Nullable` ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318066108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318082633","html_url":"https://github.com/apache/druid/issues/4603#issuecomment-318082633","issue_url":"https://api.github.com/repos/apache/druid/issues/4603","id":318082633,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODA4MjYzMw==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-26T15:06:54Z","updated_at":"2017-07-26T15:06:54Z","author_association":"CONTRIBUTOR","body":"This *might* just be noise during the switchover, but is very annoying","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318082633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318086026","html_url":"https://github.com/apache/druid/pull/4604#issuecomment-318086026","issue_url":"https://api.github.com/repos/apache/druid/issues/4604","id":318086026,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODA4NjAyNg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-26T15:17:57Z","updated_at":"2017-07-26T15:17:57Z","author_association":"CONTRIBUTOR","body":"I don't think it should be automatic. In 0.10.0 merge buffers are available by default on all node types unless you explicitly disable them. And if you explicitly disable them, then you can explicitly switch to groupBy v1 through `druid.query.groupBy.defaultStrategy`. At any rate, I think we should get rid of groupBy v1 at some point, so this patch goes in the \"wrong\" direction.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318086026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318087833","html_url":"https://github.com/apache/druid/pull/4604#issuecomment-318087833","issue_url":"https://api.github.com/repos/apache/druid/issues/4604","id":318087833,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODA4NzgzMw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-26T15:23:51Z","updated_at":"2017-07-26T15:23:51Z","author_association":"MEMBER","body":"@gianm we cannot get rid of groupBy strategy V1, because we are very short on memory and had to set numMergeBuffers=0, because groupBy queries are very unimportant on our nodes. OTOH, we don't want to make groupBy queries impossible completely.\r\n\r\nThe message in the PR could say \"please set up defaultStrategy=v1\", but note that a query with explicit v2 configuration may come also. I think it's better to process such queries somehow than fail altogether.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318087833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318123946","html_url":"https://github.com/apache/druid/issues/4603#issuecomment-318123946","issue_url":"https://api.github.com/repos/apache/druid/issues/4603","id":318123946,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODEyMzk0Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-26T17:24:28Z","updated_at":"2017-07-26T17:24:28Z","author_association":"CONTRIBUTOR","body":"@himanshug do you know if this is expected or not?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318123946/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318128181","html_url":"https://github.com/apache/druid/pull/4604#issuecomment-318128181","issue_url":"https://api.github.com/repos/apache/druid/issues/4604","id":318128181,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODEyODE4MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-26T17:40:03Z","updated_at":"2017-07-26T17:40:03Z","author_association":"CONTRIBUTOR","body":"> @gianm we cannot get rid of groupBy strategy V1, because we are very short on memory and had to set numMergeBuffers=0, because groupBy queries are very unimportant on our nodes. OTOH, we don't want to make groupBy queries impossible completely.\r\n\r\nThat's valid, in this case it makes sense to set `druid.query.groupBy.defaultStrategy=v1`. Alternatively it could also make sense to add a new config to size merge buffers, so you can create 1 merge buffer and have it be smaller than your processing buffers, minimizing the amount of memory reserved for it.\r\n\r\n> The message in the PR could say \"please set up defaultStrategy=v1\", but note that a query with explicit v2 configuration may come also. I think it's better to process such queries somehow than fail altogether.\r\n\r\nOn the other hand, it seems weird to me to ignore what the user asked for in their query. If a user asks for v2 but v2 is not available, I think it's best to tell them that (in the form of an error) rather than silently use v1 instead. That's because the user is not always the same as the cluster operator, and the user deserves to know that what they asked for is not possible, even if they don't have access to cluster logs.\r\n\r\nAt any rate, I expect that queries that ask for a specific groupBy strategy will be uncommon anyway, outside of benchmarking or testing situations. So I expect that the impact of returning errors there is low in production, and it's a good thing for testing, since it lets users confirm they are actually using what they think they're using.\r\n\r\nFinally, separate from the above points: I'm not totally sure this patch will work properly as-is, since IIRC groupBy v2 on the broker assumes results from historicals are sorted, but groupBy v1 on historicals does not sort results. So the patch may cause results to not be merged properly. But I haven't reviewed this closely to determine if this is really the case or not.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318128181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318128528","html_url":"https://github.com/apache/druid/pull/4604#issuecomment-318128528","issue_url":"https://api.github.com/repos/apache/druid/issues/4604","id":318128528,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODEyODUyOA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-26T17:41:19Z","updated_at":"2017-07-26T17:41:19Z","author_association":"CONTRIBUTOR","body":"Regardless of whether we decide to apply this patch or not, I don't think it needs to be considered a blocker in 0.10.1, since the described issue exists in 0.10.0 as well and there is a good workaround (set defaultStrategy). So I would consider it for 0.11 if we are going to do it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318128528/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318175058","html_url":"https://github.com/apache/druid/pull/4601#issuecomment-318175058","issue_url":"https://api.github.com/repos/apache/druid/issues/4601","id":318175058,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODE3NTA1OA==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-26T20:37:29Z","updated_at":"2017-07-26T20:37:29Z","author_association":"CONTRIBUTOR","body":"@leventov @himanshug Add nullable to other interfaces and impls","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318175058/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318224320","html_url":"https://github.com/apache/druid/pull/4433#issuecomment-318224320","issue_url":"https://api.github.com/repos/apache/druid/issues/4433","id":318224320,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODIyNDMyMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-27T00:47:13Z","updated_at":"2017-07-27T00:47:13Z","author_association":"CONTRIBUTOR","body":"It was brought up on the dev sync that it would be desirable to merge java-util into druid-common, which would solve the problem of \"java-util can't see the annotations\". That would be a big patch though and I think I'd like to do this patch first, for everything other than java-util. And then do another one for merging in java-util to druid-common.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318224320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318230430","html_url":"https://github.com/apache/druid/pull/4271#issuecomment-318230430","issue_url":"https://api.github.com/repos/apache/druid/issues/4271","id":318230430,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODIzMDQzMA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-27T01:28:34Z","updated_at":"2017-07-27T01:28:34Z","author_association":"CONTRIBUTOR","body":"@pjain1 I added authorization result caching in the latest patch\r\n\r\n@jihoonson I added unit tests for SecuritySanityCheckFilter and PreResponseAuthorizationCheckFilter","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318230430/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318236594","html_url":"https://github.com/apache/druid/issues/4603#issuecomment-318236594","issue_url":"https://api.github.com/repos/apache/druid/issues/4603","id":318236594,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODIzNjU5NA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-27T02:00:50Z","updated_at":"2017-07-27T02:00:50Z","author_association":"CONTRIBUTOR","body":"@drcrallen @gianm it is expected. The reason is that when historical is on 0.10.1 while coordinator is on smaller version, coordinator would try to propagate lookups to historical even if they are already loaded on the historical... historical prints a warning on receiving request to load a lookup whose same or higher version is already loaded.\r\nwarning message is intended to find out any bugs in coordinator code, 0.10.1 coordinator is suppose to first check with historical what it has and then ask it to do stuff so these warnings shouldn't get printed once coordinator is upgraded too.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318236594/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318255008","html_url":"https://github.com/apache/druid/issues/4603#issuecomment-318255008","issue_url":"https://api.github.com/repos/apache/druid/issues/4603","id":318255008,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODI1NTAwOA==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-27T04:25:12Z","updated_at":"2017-07-27T04:25:12Z","author_association":"CONTRIBUTOR","body":"The concern is that it reports as an error but isn't really an error, which makes it harder to catch real errors. I propose simply calling it out in the release notes.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318255008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318255796","html_url":"https://github.com/apache/druid/issues/4603#issuecomment-318255796","issue_url":"https://api.github.com/repos/apache/druid/issues/4603","id":318255796,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODI1NTc5Ng==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-27T04:32:10Z","updated_at":"2017-07-27T04:32:10Z","author_association":"CONTRIBUTOR","body":"Resolving by adding info to release notes","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318255796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318268199","html_url":"https://github.com/apache/druid/pull/4570#issuecomment-318268199","issue_url":"https://api.github.com/repos/apache/druid/issues/4570","id":318268199,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODI2ODE5OQ==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-27T06:09:39Z","updated_at":"2017-07-27T06:09:39Z","author_association":"CONTRIBUTOR","body":"@leventov   It doesn't make sense to extend `DefaultQueryMetrics`. Either we decide to include inside the `DefaultQueryMetrics` or have it as an extension which is internal (private).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318268199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318278554","html_url":"https://github.com/apache/druid/pull/4540#issuecomment-318278554","issue_url":"https://api.github.com/repos/apache/druid/issues/4540","id":318278554,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODI3ODU1NA==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-27T07:09:52Z","updated_at":"2017-07-27T07:09:52Z","author_association":"CONTRIBUTOR","body":"@himanshug Is there any advantage of having the queueSize variable? We are throttling on the activeRequests.\r\n\r\nWe can actually have queue size as the default (unbounded) and throttle on the activeRequests like you have done. This way we will avoid having yet another config variable for tuning also","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318278554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318279561","html_url":"https://github.com/apache/druid/pull/4570#issuecomment-318279561","issue_url":"https://api.github.com/repos/apache/druid/issues/4570","id":318279561,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODI3OTU2MQ==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-27T07:15:05Z","updated_at":"2017-07-27T07:15:05Z","author_association":"CONTRIBUTOR","body":"@leventov I didn't read your last comment https://github.com/druid-io/druid/pull/4570#issuecomment-317878173. I think we are saying the same thing 👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318279561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318283642","html_url":"https://github.com/apache/druid/pull/4550#issuecomment-318283642","issue_url":"https://api.github.com/repos/apache/druid/issues/4550","id":318283642,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODI4MzY0Mg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-27T07:35:26Z","updated_at":"2017-07-27T07:35:26Z","author_association":"CONTRIBUTOR","body":"@jon-wei thanks. I addressed your comments.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318283642/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/318308781","html_url":"https://github.com/apache/druid/pull/4570#issuecomment-318308781","issue_url":"https://api.github.com/repos/apache/druid/issues/4570","id":318308781,"node_id":"MDEyOklzc3VlQ29tbWVudDMxODMwODc4MQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-07-27T09:24:32Z","updated_at":"2017-07-27T09:24:32Z","author_association":"MEMBER","body":"@niketh the point of adding methods to QueryMetrics is to call them from core, so that extensions shouldn't touch the core.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/318308781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]