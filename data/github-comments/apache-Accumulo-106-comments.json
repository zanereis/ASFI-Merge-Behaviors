[{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453640639","html_url":"https://github.com/apache/accumulo/pull/3215#issuecomment-1453640639","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3215","id":1453640639,"node_id":"IC_kwDOACaFSM5WpMu_","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T14:48:15Z","updated_at":"2023-03-03T14:48:15Z","author_association":"MEMBER","body":"> @DomGarguilo I fixed the unintentional merge of main, merge 2.1 instead, cherry-picked your partial revert, then added another commit to fix a few things you missed. Waiting for the build to finish, but should be good after that.\r\n\r\nThanks, @ctubbsii. I'll go ahead and merge it once the build completes.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453640639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453657726","html_url":"https://github.com/apache/accumulo/pull/3222#issuecomment-1453657726","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3222","id":1453657726,"node_id":"IC_kwDOACaFSM5WpQ5-","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T14:59:30Z","updated_at":"2023-03-03T14:59:30Z","author_association":"MEMBER","body":"> I'm surprised that the modernizer:2.5.0 plugin works. A fix for this issue was merged two weeks ago ([gaul/modernizer-maven-plugin#170](https://github.com/gaul/modernizer-maven-plugin/pull/170)) and modernizer:2.5.0 was released in November.\r\n\r\nIt was fixed in https://github.com/gaul/modernizer-maven-plugin/pull/153","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453657726/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453697993","html_url":"https://github.com/apache/accumulo/pull/3223#issuecomment-1453697993","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3223","id":1453697993,"node_id":"IC_kwDOACaFSM5WpavJ","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T15:26:38Z","updated_at":"2023-03-03T15:26:38Z","author_association":"MEMBER","body":"@cshannon  I created a separate PR to reproduce the error you observed in #3207 to see if there's an easy way to address it here.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453697993/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453721986","html_url":"https://github.com/apache/accumulo/pull/3223#issuecomment-1453721986","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3223","id":1453721986,"node_id":"IC_kwDOACaFSM5WpgmC","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T15:42:29Z","updated_at":"2023-03-03T15:42:29Z","author_association":"CONTRIBUTOR","body":"We could try defining our own version of Netty and import the BOM instead of relying on transitive dependencies. Also, there appears to be an exclusion for Netty for Zookeeper in core but nowhere else which is weird, especially because as far as I know we need Netty for Zookeeper to work.\r\n\r\nhttps://github.com/apache/accumulo/blob/fe31930ccef448a549cea082943c510b678dbecd/core/pom.xml#L127-L135\r\n\r\nFurthermore, the exclusion doesn't do anything as the GAV is incorrect as Zookeeper has a dependency on netty-handler and not netty.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453721986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453728229","html_url":"https://github.com/apache/accumulo/pull/3219#issuecomment-1453728229","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3219","id":1453728229,"node_id":"IC_kwDOACaFSM5WpiHl","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T15:47:12Z","updated_at":"2023-03-03T15:47:12Z","author_association":"MEMBER","body":"> It seems to me that we should probably synchronizing around the code that uses or modifies the `cur` pointer, to fix that, which is a whole different thing than merely making it volatile.\r\n\r\nIt seems like synchronization was intentionally avoided here for some reason. The comment at the top mentions avoiding synchronization. \r\nhttps://github.com/apache/accumulo/blob/fe31930ccef448a549cea082943c510b678dbecd/core/src/main/java/org/apache/accumulo/core/file/blockfile/impl/SeekableByteArrayInputStream.java#L28-L31","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453728229/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453736621","html_url":"https://github.com/apache/accumulo/pull/3223#issuecomment-1453736621","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3223","id":1453736621,"node_id":"IC_kwDOACaFSM5WpkKt","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T15:53:23Z","updated_at":"2023-03-03T15:53:23Z","author_association":"CONTRIBUTOR","body":"PR created to add netty bom: https://github.com/ctubbsii/accumulo/pull/20","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453736621/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453767381","html_url":"https://github.com/apache/accumulo/pull/3223#issuecomment-1453767381","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3223","id":1453767381,"node_id":"IC_kwDOACaFSM5WprrV","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T16:14:50Z","updated_at":"2023-03-03T16:14:50Z","author_association":"MEMBER","body":"> We could try defining our own version of Netty and import the BOM instead of relying on transitive dependencies. Also, there appears to be an exclusion for Netty for Zookeeper in core but nowhere else which is weird, especially because as far as I know we need Netty for Zookeeper to work.\r\n\r\nMy best guess is that we used to rely on ZooKeeper being brought in transitively by the core module, but that changed when we started doing dependency analysis, we needed to specify it in every module where we explicitly use ZooKeeper  as a direct dependency, but we didn't carry over the exclusion.\r\n\r\nAs for the exclusion itself, it's possible we were just relying on the netty version being resolved by Hadoop or another dependency. In order to converge on a specific version of netty, we should specify the version in our top-level POM's dependencyManagement section. However, I don't know which of our dependencies use Netty, and whether the version we'd pick will work for all of them... we'd have to check.\r\n\r\n> \r\n> https://github.com/apache/accumulo/blob/fe31930ccef448a549cea082943c510b678dbecd/core/pom.xml#L127-L135\r\n> \r\n> Furthermore, the exclusion doesn't do anything as the GAV is incorrect as Zookeeper has a dependency on netty-handler and not netty.\r\n\r\nIt probably did work at some earlier point. It's frustrating that this isn't a simple fix, because micrometer and ZooKeeper depend on Netty via different transitive paths, so there's no simple common entry point, like both depending on netty-handler.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453767381/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453773200","html_url":"https://github.com/apache/accumulo/pull/3223#issuecomment-1453773200","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3223","id":1453773200,"node_id":"IC_kwDOACaFSM5WptGQ","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T16:19:17Z","updated_at":"2023-03-03T16:19:17Z","author_association":"CONTRIBUTOR","body":"> It probably did work at some earlier point. It's frustrating that this isn't a simple fix, because micrometer and ZooKeeper depend on Netty via different transitive paths, so there's no simple common entry point, like both depending on netty-handler.\r\n\r\nRight, that's why I figured I'd go with a BOM import to cover everything in my PR https://github.com/ctubbsii/accumulo/pull/20 since there's no common entry point.\r\n\r\nThe Jenkins job appears to have [passed](https://github.com/cshannon/accumulo/actions/runs/4325083411/jobs/7550765166) for that run in my branch (after I fixed the import order)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453773200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453773489","html_url":"https://github.com/apache/accumulo/pull/3223#issuecomment-1453773489","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3223","id":1453773489,"node_id":"IC_kwDOACaFSM5WptKx","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T16:19:31Z","updated_at":"2023-03-03T16:19:31Z","author_association":"MEMBER","body":"Luckily, netty has a BOM, so we don't need to converge each dependency individually!","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453773489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453775750","html_url":"https://github.com/apache/accumulo/pull/3223#issuecomment-1453775750","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3223","id":1453775750,"node_id":"IC_kwDOACaFSM5WptuG","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T16:21:19Z","updated_at":"2023-03-03T16:21:19Z","author_association":"CONTRIBUTOR","body":"> Luckily, netty has a BOM, so we don't need to converge each dependency individually!\r\n\r\nYep, we appear to have come to the same fix at the same time. :) \r\n\r\nI  had created a PR to your fork because it wouldn't let me push a commit to this.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453775750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453783397","html_url":"https://github.com/apache/accumulo/pull/3223#issuecomment-1453783397","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3223","id":1453783397,"node_id":"IC_kwDOACaFSM5Wpvll","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T16:27:46Z","updated_at":"2023-03-03T16:27:46Z","author_association":"CONTRIBUTOR","body":"We should also update https://github.com/apache/accumulo-testing with the new version when merged I guess.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453783397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453804220","html_url":"https://github.com/apache/accumulo/pull/3223#issuecomment-1453804220","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3223","id":1453804220,"node_id":"IC_kwDOACaFSM5Wp0q8","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T16:43:35Z","updated_at":"2023-03-03T16:43:35Z","author_association":"MEMBER","body":"> Looks good to me now. Do you also want to update opentelemetry in this PR or separate? We've updated them together in the past I think.\r\n\r\nThey aren't related, and don't need to be updated together. This one was done separate, just because of the dependency convergence issue. I haven't looked into opentelemetry to know if it has any issues being updated.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453804220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453852972","html_url":"https://github.com/apache/accumulo/pull/3202#issuecomment-1453852972","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3202","id":1453852972,"node_id":"IC_kwDOACaFSM5WqAks","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T17:19:31Z","updated_at":"2023-03-03T17:19:31Z","author_association":"CONTRIBUTOR","body":"Replaced with https://github.com/apache/accumulo/pull/3225 that makes the replacement only in test code - leaving the other occurrences for future work.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1453852972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1454029119","html_url":"https://github.com/apache/accumulo/pull/3202#issuecomment-1454029119","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3202","id":1454029119,"node_id":"IC_kwDOACaFSM5Wqrk_","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T19:31:55Z","updated_at":"2023-03-03T19:31:55Z","author_association":"MEMBER","body":"> When that is truly intended we should make that explicit through the code and not as a side effect of the method.\r\n\r\nThe choice to use that method is \"explicit through the code\". The mere fact of using this method makes it appear that this is the true intention. It's not clear, without looking at each case individually, whether it's a side effect or the intent, but I would generally assume that it's intended if this method is used.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1454029119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1454047105","html_url":"https://github.com/apache/accumulo/pull/3202#issuecomment-1454047105","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3202","id":1454047105,"node_id":"IC_kwDOACaFSM5Wqv-B","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T19:44:55Z","updated_at":"2023-03-03T19:44:55Z","author_association":"CONTRIBUTOR","body":"The use in tests seems to contradict the assumption that the intent was to leverage the side effect of pausing the full duration - but rather it looks like it was used as a convenience to avoid handling or explicitly throwing  InterruptedException.  \r\n\r\nBecause of the number of places that sleepUninterrupty is used made this PR very large and hard to review.  I did not expect the push-back, but do understand the concern.  Basically I think the default should be to bail when an interrupt occurs unless in very specific cases where is can be handled.\r\n\r\nIn the future, we should be on the look out for new uses of sleepUninterrupty and at a minimum require documentation that the side effect is necessary for correct operation.\r\n\r\nThere are other places with busy loop that seem like they would benefit from explicitly recognizing the interrupt status and those can be handled on a case by case basis. \r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1454047105/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1454049899","html_url":"https://github.com/apache/accumulo/pull/3196#issuecomment-1454049899","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3196","id":1454049899,"node_id":"IC_kwDOACaFSM5Wqwpr","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T19:48:03Z","updated_at":"2023-03-03T19:48:03Z","author_association":"CONTRIBUTOR","body":"@ctubbsii I may have stepped on your changes - I had done a merge locally and was running local tests and then force pushed before I noticed your comment","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1454049899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1454094953","html_url":"https://github.com/apache/accumulo/pull/3196#issuecomment-1454094953","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3196","id":1454094953,"node_id":"IC_kwDOACaFSM5Wq7pp","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T20:34:50Z","updated_at":"2023-03-03T20:34:50Z","author_association":"MEMBER","body":"> @ctubbsii I may have stepped on your changes - I had done a merge locally and was running local tests and then force pushed before I noticed your comment\r\n\r\nNo worries. The force push masked my conflict resolution commit, but no harm done... the end result is the same.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1454094953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1454167919","html_url":"https://github.com/apache/accumulo/pull/3219#issuecomment-1454167919","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3219","id":1454167919,"node_id":"IC_kwDOACaFSM5WrNdv","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-03T21:46:25Z","updated_at":"2023-03-03T21:46:25Z","author_association":"MEMBER","body":"> I'm still not sure what the volatile on the byte array buffer is doing, though... that doesn't seem to have any impact, as far as I can tell.\r\n\r\nI made it final in b821992\r\n\r\nAlso, I tried to refactor some of the repeated logic in aa0f2c9. Not sure if it is an improvement in terms of readability (or anything else for that matter). I am not opposed to reverting the commit, take a look and let me know what you think.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1454167919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1454833743","html_url":"https://github.com/apache/accumulo/pull/3221#issuecomment-1454833743","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3221","id":1454833743,"node_id":"IC_kwDOACaFSM5WtwBP","user":{"login":"Manno15","id":29436247,"node_id":"MDQ6VXNlcjI5NDM2MjQ3","avatar_url":"https://avatars.githubusercontent.com/u/29436247?v=4","gravatar_id":"","url":"https://api.github.com/users/Manno15","html_url":"https://github.com/Manno15","followers_url":"https://api.github.com/users/Manno15/followers","following_url":"https://api.github.com/users/Manno15/following{/other_user}","gists_url":"https://api.github.com/users/Manno15/gists{/gist_id}","starred_url":"https://api.github.com/users/Manno15/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Manno15/subscriptions","organizations_url":"https://api.github.com/users/Manno15/orgs","repos_url":"https://api.github.com/users/Manno15/repos","events_url":"https://api.github.com/users/Manno15/events{/privacy}","received_events_url":"https://api.github.com/users/Manno15/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-04T18:30:45Z","updated_at":"2023-03-04T19:18:57Z","author_association":"CONTRIBUTOR","body":"It seems the build timed out so I am rerunning it. \r\n\r\nEDIT: Things passed this time around. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1454833743/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1456368599","html_url":"https://github.com/apache/accumulo/issues/3210#issuecomment-1456368599","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3210","id":1456368599,"node_id":"IC_kwDOACaFSM5WzmvX","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-06T15:40:28Z","updated_at":"2023-03-06T15:40:28Z","author_association":"MEMBER","body":"I kind of like the idea of having all tables on-demand. Is there a specific advantage of having a new table state that is treated differently than \"online\"? I am admittedly behind in following all the proposed changes, and ideas recently. I am still trying to work on getting 3.0 out the door, and this seems to be moving too fast for me to keep up with when it's progressing concurrently. But that's my problem, I guess.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1456368599/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1456388569","html_url":"https://github.com/apache/accumulo/issues/3210#issuecomment-1456388569","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3210","id":1456388569,"node_id":"IC_kwDOACaFSM5WzrnZ","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-06T15:51:16Z","updated_at":"2023-03-06T15:51:16Z","author_association":"CONTRIBUTOR","body":"I made a similar comment to @keith-turner last week. If all tables were on-demand, then startup would be really fast as you would not have to wait for assignment and balancing. I'm all for getting 3.0, 2.1.1, and 1.10.3 released ASAP so that we can get everyone working on this. Please let me know what issues I can work on to help with this.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1456388569/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1456662140","html_url":"https://github.com/apache/accumulo/pull/3226#issuecomment-1456662140","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3226","id":1456662140,"node_id":"IC_kwDOACaFSM5W0uZ8","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-06T18:02:15Z","updated_at":"2023-03-06T18:02:15Z","author_association":"CONTRIBUTOR","body":"I don't have the ability to push to the accumulo repo in order to merge these changes. \r\n \r\nI tested the following merge operations locally and they did not produce any merge conflicts. \r\n\r\n```\r\n1. git checkout 1.10\r\n2. git merge ddanielr:bugfix/file-manager-permit-fix\r\n3. git rebase -i 9580cbab7e9887f450f6ad5f7059d3ec5e5824b1\r\n  (drop commits 092ce9ac21 and 03d5eebc92 as they are unnecessary)\r\n4. git push (permission denied) \r\n5. git checkout 2.1\r\n6. git merge 1.10\r\n7. git push (permission denied)\r\n8. git checkout main\r\n9. git merge 2.1\r\n10. git push (permission denied)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1456662140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1456704022","html_url":"https://github.com/apache/accumulo/pull/3226#issuecomment-1456704022","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3226","id":1456704022,"node_id":"IC_kwDOACaFSM5W04oW","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-06T18:18:08Z","updated_at":"2023-03-06T18:18:08Z","author_association":"MEMBER","body":"Since this has been thoroughly reviewed and approved by others, I'll take care of merging it.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1456704022/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1457092425","html_url":"https://github.com/apache/accumulo/issues/3211#issuecomment-1457092425","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3211","id":1457092425,"node_id":"IC_kwDOACaFSM5W2XdJ","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-06T22:15:05Z","updated_at":"2023-03-06T22:15:05Z","author_association":"CONTRIBUTOR","body":"Draft PR up at https://github.com/dlmarion/accumulo/pull/37","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1457092425/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1457409313","html_url":"https://github.com/apache/accumulo/issues/3211#issuecomment-1457409313","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3211","id":1457409313,"node_id":"IC_kwDOACaFSM5W3k0h","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-07T02:33:30Z","updated_at":"2023-03-07T02:33:30Z","author_association":"CONTRIBUTOR","body":"I started looking through [#37](https://github.com/dlmarion/accumulo/pull/37) and I had a functional/process question. \r\n\r\nIf all tablets are \"offline\" by default, then an accumulo cluster will exist with a higher number of tablets then the amount of tserver resources could fully host.  \r\n\r\nWith that in mind, I have a couple questions\r\n1. Is there a mechanism to alert on approaching resource limits or evaluate the cluster's current size/use before marking a tablet as onDemand? \r\n2. Given the possibility of a limited resource footprint,  what mechanism is going to be used for scheduling the tablet hosting?\r\n3. What determines hosting priority of onDemand tables? should this exist? should it be a per-client setting or perhaps per table? \r\n4. Are \"resources unavailable for hosting\" an error condition that can be handled for onDemand tables? \r\n5. Is there a possibility of scheduling deadlock situations? ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1457409313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458089562","html_url":"https://github.com/apache/accumulo/issues/3211#issuecomment-1458089562","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3211","id":1458089562,"node_id":"IC_kwDOACaFSM5W6K5a","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-07T12:29:11Z","updated_at":"2023-03-07T12:29:11Z","author_association":"CONTRIBUTOR","body":"> Is there a mechanism to alert on approaching resource limits or evaluate the cluster's current size/use before marking a tablet as onDemand?\r\n\r\nGiven that we don't know which schedulers might be in use on a cluster, I think we just need to emit metrics that can be used for a scheduling system to make a determination that more tablet servers are needed. Accumulo doesn't do any alerting, that's typically set up by the users of the system - trigger an alert when some criteria is met.\r\n\r\n> Given the possibility of a limited resource footprint, what mechanism is going to be used for scheduling the tablet hosting?\r\n\r\nI don't think we should build or use a specific scheduler. [KEDA](https://keda.sh/) and [HPA](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/) exist already and I'm sure the different commercial cloud vendors may supply their own solutions as well (Azure has [VPA](https://learn.microsoft.com/en-us/azure/aks/vertical-pod-autoscaler) for example).\r\n\r\n> What determines hosting priority of onDemand tables? should this exist? should it be a per-client setting or perhaps per table?\r\n\r\nI don't think we have had any discussion of priority. Can you give an example of how priority would work?\r\n\r\n> Are \"resources unavailable for hosting\" an error condition that can be handled for onDemand tables?\r\n\r\nI'm not sure that we can do this reliably. If we were able to determine a cost (in terms of memory required to host a tablet), a TabletServer may or may not have enough memory to host another tablet. It may appear that the TabletServer doesn't have the memory, but after a GC it very well could. I'm not sure there is a good answer here.\r\n\r\n> Is there a possibility of scheduling deadlock situations?\r\n\r\nI don't think so, this is using the existing mechanism of assigning online unassigned tablets to tablet servers. When the client requests that an ondemand tablet is assigned, it just puts a marker entry in the tablet metadata for that tablet. The TabletGroupWatcher process in the Manager will notice this change and on it's next pass assign it to a TabletServer.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458089562/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458097980","html_url":"https://github.com/apache/accumulo/issues/3210#issuecomment-1458097980","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3210","id":1458097980,"node_id":"IC_kwDOACaFSM5W6M88","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-07T12:35:58Z","updated_at":"2023-03-07T12:35:58Z","author_association":"CONTRIBUTOR","body":"I don't think that we would want to remove the online table state though. There is a latency cost to hosting an ondemand tablet and a user may not want to avoid that latency for some (or all) of their tables.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458097980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458672277","html_url":"https://github.com/apache/accumulo/issues/3211#issuecomment-1458672277","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3211","id":1458672277,"node_id":"IC_kwDOACaFSM5W8ZKV","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-07T18:59:16Z","updated_at":"2023-03-07T18:59:16Z","author_association":"CONTRIBUTOR","body":"> > Is there a mechanism to alert on approaching resource limits or evaluate the cluster's current size/use before marking a tablet as onDemand?\r\n> \r\n> Given that we don't know which schedulers might be in use on a cluster, I think we just need to emit metrics that can be used for a scheduling system to make a determination that more tablet servers are needed. Accumulo doesn't do any alerting, that's typically set up by the users of the system - trigger an alert when some criteria is met.\r\n\r\n:+1:  Using an external metric collection system makes sense.\r\n\r\n> > Given the possibility of a limited resource footprint, what mechanism is going to be used for scheduling the tablet hosting?\r\n\r\n> I don't think we should build or use a specific scheduler. [KEDA](https://keda.sh/) and [HPA](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/) exist already and I'm sure the different commercial cloud vendors may supply their own solutions as well (Azure has [VPA](https://learn.microsoft.com/en-us/azure/aks/vertical-pod-autoscaler) for example).\r\n\r\nScheduling was probably the wrong word to use. But I agree on using a pre-defined scheduler for k8s resources. \r\nI think this question is wrapped into the priority discussion.\r\n\r\n>> What determines hosting priority of onDemand tables? should this exist? should it be a per-client setting or perhaps per table?\r\n\r\n> I don't think we have had any discussion of priority. Can you give an example of how priority would work?\r\n\r\nPlease correct any inaccuracy here. \r\n\r\nLets say we have an accumulo cluster that does not have tserver groups implemented and services two clients. \r\nBoth clients have tables that, individually, fit within the cluster's resource footprint but when hosted at the same time exceed the current resources. \r\n\r\nIf my understanding is correct, both clients can attempt writes on \"onDemand\" tables that are currently unloaded. Or, both clients could request that tables be moved from offline to \"onDemand\". \r\nEach of these actions would result in the tablets being marked for assignment and attempt to be loaded onto tservers via the TabletGroupWatcher. \r\n\r\nSince these are not enough resources for both tables to be fully hosted, will the TabletGroupWatcher discern which \"ondemand\" tablets should be hosted first? Or does it just see a pool of tablets that need to be assigned and will do so indiscriminately?\r\n\r\nIf it's the latter, since the clients are attempting actions at a table level vs a tablet level. Does that mean all tablets for a given table need to be assigned and loaded before the action can be completed? \r\n\r\nIf so, then as part of bringing tablets online, a priority level (1-x) or an \"onDemand\" request timestamp could be included in the metadata. Then the TabletGroupWatcher could ensure all tablets of a specific \"onDemand\" request would be fully hosted prior to assigning a second \"OnDemand\" requests tablets.\r\n\r\nOtherwise, wouldn't there be a resource blocking issue where tablets of both tables are being assigned, but each table cannot fully be hosted due to resource constraints? ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458672277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458706511","html_url":"https://github.com/apache/accumulo/issues/3211#issuecomment-1458706511","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3211","id":1458706511,"node_id":"IC_kwDOACaFSM5W8hhP","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-07T19:28:37Z","updated_at":"2023-03-07T19:28:37Z","author_association":"CONTRIBUTOR","body":"> > > Is there a mechanism to alert on approaching resource limits or evaluate the cluster's current size/use before marking a tablet as onDemand?\r\n> > \r\n> > \r\n> > Given that we don't know which schedulers might be in use on a cluster, I think we just need to emit metrics that can be used for a scheduling system to make a determination that more tablet servers are needed. Accumulo doesn't do any alerting, that's typically set up by the users of the system - trigger an alert when some criteria is met.\r\n> \r\n> 👍 Using an external metric collection system makes sense.\r\n> \r\n> > > Given the possibility of a limited resource footprint, what mechanism is going to be used for scheduling the tablet hosting?\r\n> \r\n> > I don't think we should build or use a specific scheduler. [KEDA](https://keda.sh/) and [HPA](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/) exist already and I'm sure the different commercial cloud vendors may supply their own solutions as well (Azure has [VPA](https://learn.microsoft.com/en-us/azure/aks/vertical-pod-autoscaler) for example).\r\n> \r\n> Scheduling was probably the wrong word to use. But I agree on using a pre-defined scheduler for k8s resources. I think this question is wrapped into the priority discussion.\r\n> \r\n> > > What determines hosting priority of onDemand tables? should this exist? should it be a per-client setting or perhaps per table?\r\n> \r\n> > I don't think we have had any discussion of priority. Can you give an example of how priority would work?\r\n> \r\n> Please correct any inaccuracy here.\r\n> \r\n> Lets say we have an accumulo cluster that does not have tserver groups implemented and services two clients. Both clients have tables that, individually, fit within the cluster's resource footprint but when hosted at the same time exceed the current resources.\r\n>\r\n\r\nWhat does it mean to exceed? I believe that the limitation to a TabletServer hosting a Tablet is the amount of memory given to the TabletServer. If a TabletServer can host N Tablets, it will still be limited as to how many tablets can read/write concurrently based on other properties. If a TabletServer can't host N tablets, then it it needs more memory, or more TabletServers need to be stood up so that the load can be distributed. I would say that determining how many Tablets a TabletServer can host would be difficult as the TabletMetadata is not the same size for each Tablet. It might be possible to use some rough upper bound on the amount of memory required to host each Tablet to determine how many TabletServers are needed.\r\n \r\n> If my understanding is correct, both clients can attempt writes on \"onDemand\" tables that are currently unloaded. Or, both clients could request that tables be moved from offline to \"onDemand\". Each of these actions would result in the tablets being marked for assignment and attempt to be loaded onto tservers via the TabletGroupWatcher.\r\n> \r\n\r\nMoving the table state from `offline` to `ondemand` would not result in tablets being loaded. The tablets for an ondemand table are only loaded when the client needs them for live ingest or scans.\r\n\r\n> Since these are not enough resources for both tables to be fully hosted, will the TabletGroupWatcher discern which \"ondemand\" tablets should be hosted first? Or does it just see a pool of tablets that need to be assigned and will do so indiscriminately?\r\n> \r\nThe latter\r\n\r\n> If it's the latter, since the clients are attempting actions at a table level vs a tablet level. Does that mean all tablets for a given table need to be assigned and loaded before the action can be completed?\r\n> \r\n\r\nThe way that I currently have this wired up, the tablets are loaded when they are required by the client. The client tries to determine the location (which TabletServer) a tablet is hosted on, so that it can send read or write requests. If the tablet is not hosted, and the table is ondemand, it sends a request for the tablet to be hosted which incurs some latency cost. So, the number of tablets that need to be hosted for an ondemand table are the sum of the tablets involved in read and write requests from all of the clients. If you do an unbounded scan, then it's going to eventually host the entire table, but that's what the user requested of the client.\r\n\r\n> If so, then as part of bringing tablets online, a priority level (1-x) or an \"onDemand\" request timestamp could be included in the metadata. Then the TabletGroupWatcher could ensure all tablets of a specific \"onDemand\" request would be fully hosted prior to assigning a second \"OnDemand\" requests tablets.\r\n> \r\n> Otherwise, wouldn't there be a resource blocking issue where tablets of both tables are being assigned, but each table cannot fully be hosted due to resource constraints?\r\n\r\nIf we end up with a mechanism for determining reliably how many tablets a TabletServer can host, then I agree we could introduce some priority scheme. Without that, and in its current form, the code just does what is asked. In #3212 we will create some mechanism for unloading ondemand tablets, not sure what that will look like yet. I think there are several possibilities, for example: a TabletServer could host N (configurable) ondemand tablets and unload them in an LRU fashion.\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458706511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458835343","html_url":"https://github.com/apache/accumulo/issues/3211#issuecomment-1458835343","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3211","id":1458835343,"node_id":"IC_kwDOACaFSM5W9A-P","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-07T20:34:41Z","updated_at":"2023-03-07T20:34:41Z","author_association":"CONTRIBUTOR","body":"> What does it mean to exceed? I believe that the limitation to a TabletServer hosting a Tablet is the amount of memory given to the TabletServer. If a TabletServer can host N Tablets, it will still be limited as to how many tablets can read/write concurrently based on other properties. If a TabletServer can't host N tablets, then it it needs more memory, or more TabletServers need to be stood up so that the load can be distributed. I would say that determining how many Tablets a TabletServer can host would be difficult as the TabletMetadata is not the same size for each Tablet. It might be possible to use some rough upper bound on the amount of memory required to host each Tablet to determine how many TabletServers are needed.\r\n\r\n\"Exceed \"is exactly what you stated, no TabletServers with available memory exist to host the assigned tablet. \r\nI'm curious what the default balancer does for tablet assignment. If it's just based off # of tablets per tserver that doesn't seem optimal, but out of scope of this current conversation. \r\n\r\n> The way that I currently have this wired up, the tablets are loaded when they are required by the client. The client tries to determine the location (which TabletServer) a tablet is hosted on, so that it can send read or write requests. If the tablet is not hosted, and the table is ondemand, it sends a request for the tablet to be hosted which incurs some latency cost. So, the number of tablets that need to be hosted for an ondemand table are the sum of the tablets involved in read and write requests from all of the clients. If you do an unbounded scan, then it's going to eventually host the entire table, but that's what the user requested of the client.\r\n\r\nThanks for the explanation, I think what wasn't clicking in my head was how the client interaction worked for a given write. This makes more sense. \r\n\r\n> If we end up with a mechanism for determining reliably how many tablets a TabletServer can host, then I agree we could introduce some priority scheme. Without that, and in its current form, the code just does what is asked. In https://github.com/apache/accumulo/issues/3212 we will create some mechanism for unloading ondemand tablets, not sure what that will look like yet. I think there are several possibilities, for example: a TabletServer could host N (configurable) ondemand tablets and unload them in an LRU fashion.\r\n\r\nYeah, I could see priority being used for both hosting and unloading. But I agree that a mechanism for # of possible hosted tablets is required for that to work. \r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458835343/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458846574","html_url":"https://github.com/apache/accumulo/issues/3210#issuecomment-1458846574","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3210","id":1458846574,"node_id":"IC_kwDOACaFSM5W9Dtu","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-07T20:43:00Z","updated_at":"2023-03-07T20:43:00Z","author_association":"MEMBER","body":"Elsewhere I saw a proposal to have tablets/tables pinned. Since the online state can be represented as a particular pinning, I think it makes sense to rely on that, so the online and ondemand features cohere into a single concept, rather than exist as two distinct concepts.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458846574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458859299","html_url":"https://github.com/apache/accumulo/issues/3210#issuecomment-1458859299","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3210","id":1458859299,"node_id":"IC_kwDOACaFSM5W9G0j","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-07T20:52:23Z","updated_at":"2023-03-07T20:52:23Z","author_association":"CONTRIBUTOR","body":"> Elsewhere I saw a proposal to have tablets/tables pinned. Since the online state can be represented as a particular pinning, I think it makes sense to rely on that, so the online and ondemand features cohere into a single concept, rather than exist as two distinct concepts.\r\n\r\nI think you are referencing #3213.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458859299/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458867683","html_url":"https://github.com/apache/accumulo/issues/3211#issuecomment-1458867683","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3211","id":1458867683,"node_id":"IC_kwDOACaFSM5W9I3j","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-07T21:00:16Z","updated_at":"2023-03-07T21:00:16Z","author_association":"CONTRIBUTOR","body":"Since tablet sizes are going to vary widely, even within the same table or database, it might just make sense to have a property somewhere that limits the number of ondemand tablets that can be hosted per tablet server. This could feed into the implementation of #3212 . Users could use something like OpenJDKs Java Object Layout tool, specifically the [footprint](https://github.com/openjdk/jol#footprint) command to find the average size of their tablets to help inform them on how to modify this property. Or maybe the property is used to emit a metric when more tablet servers are need to be spun up based on the number of tablet servers, the number of ondemand tablets hosted, TabletServer heap size, block cache sizes, etc. However, that assumes equal distribution of tablets. It might be easier to write an SPI where the user can plug in their own logic, since this seems like a pretty intractable problem.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1458867683/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1459202080","html_url":"https://github.com/apache/accumulo/pull/3229#issuecomment-1459202080","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3229","id":1459202080,"node_id":"IC_kwDOACaFSM5W-agg","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T02:38:08Z","updated_at":"2023-03-08T02:38:08Z","author_association":"MEMBER","body":"Some notable omissions from this: old bulk import, and some shell interpreter/formatter stuff that is obsoleted by the existence of JShell. As it turns out, we only partially marked some of the shell stuff as deprecated... so we'll need to fix some of those in 2.1.1. It's also a little bit complicated, so I'm going to submit that as a separate PR after this one.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1459202080/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460372883","html_url":"https://github.com/apache/accumulo/issues/3208#issuecomment-1460372883","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3208","id":1460372883,"node_id":"IC_kwDOACaFSM5XC4WT","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T15:47:17Z","updated_at":"2023-03-08T15:47:17Z","author_association":"CONTRIBUTOR","body":"I started looking into this. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460372883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460506103","html_url":"https://github.com/apache/accumulo/issues/3108#issuecomment-1460506103","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3108","id":1460506103,"node_id":"IC_kwDOACaFSM5XDY33","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T17:01:14Z","updated_at":"2023-03-08T17:01:14Z","author_association":"CONTRIBUTOR","body":"@EdColeman - can this be closed?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460506103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460518494","html_url":"https://github.com/apache/accumulo/issues/3108#issuecomment-1460518494","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3108","id":1460518494,"node_id":"IC_kwDOACaFSM5XDb5e","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T17:10:13Z","updated_at":"2023-03-08T17:10:13Z","author_association":"CONTRIBUTOR","body":"Closed with #3109 and #3118","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460518494/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460590893","html_url":"https://github.com/apache/accumulo/issues/2606#issuecomment-1460590893","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2606","id":1460590893,"node_id":"IC_kwDOACaFSM5XDtkt","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T17:53:09Z","updated_at":"2023-03-08T17:53:09Z","author_association":"CONTRIBUTOR","body":"The timeout is a timeout for thrift calls, not a scan timeout. With a scanner, setting a batch timeout will control how long it will take to gather results - but it does not time out - presumably because the iterator is \"still making progress\" wrt the scan. Not sure that the timeout can be tested directly - would need to mock or somehow slow down thrift calls to trigger the retry.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460590893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460634818","html_url":"https://github.com/apache/accumulo/pull/3230#issuecomment-1460634818","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3230","id":1460634818,"node_id":"IC_kwDOACaFSM5XD4TC","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T18:14:58Z","updated_at":"2023-03-08T18:14:58Z","author_association":"CONTRIBUTOR","body":"> Add pre-upgrade check that looks for tserver locks in ZooKeeper and checks that the locks for the current version. Invalid locks are removed from ZooKeeper.\r\n> \r\n> * If the lock data cannot be parsed, it is removed. (data changed in 3.0)\r\n> * Make a thrift call to servers with locks that can be parsed, the thrift call will fail if incorrect version and it is removed.\r\n> \r\n\r\nFor an upgrade wouldn't the typical process be?\r\n\r\n1. Shutdown Accumulo\r\n2. Install new version of Accumulo\r\n3. Start Manager\r\n4. Start remaining processes when upgrade is successful\r\n\r\nI assume then that the goal of this is to stop any TabletServer processes that are running an older version and remove their locks? I'm confused by the description I guess - is the goal to remove invalid locks or is the goal to stop processes running older versions of software and you are doing it by checking the lock data?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460634818/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460667891","html_url":"https://github.com/apache/accumulo/pull/3230#issuecomment-1460667891","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3230","id":1460667891,"node_id":"IC_kwDOACaFSM5XEAXz","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T18:35:09Z","updated_at":"2023-03-08T18:35:09Z","author_association":"CONTRIBUTOR","body":"I updated the initial comment.  The goal is to terminate tservers that are running older versions - this is accomplished by removing their locks.\r\n\r\nIt is possible to have the tservers running before the upgrade process in the manager kicks off.  If somehow, a tserver was started with an older version then, currently the way to tell that there are \"old\" versions running are log messages indicating that communications cannot be established.  This attempts, that at least on the start of the upgrade that all of the tservers are running the target version.  ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460667891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460679215","html_url":"https://github.com/apache/accumulo/pull/3230#issuecomment-1460679215","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3230","id":1460679215,"node_id":"IC_kwDOACaFSM5XEDIv","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T18:39:29Z","updated_at":"2023-03-08T18:39:29Z","author_association":"CONTRIBUTOR","body":"Should it be limited to tservers? Why not check all locks from all processes?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460679215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460688315","html_url":"https://github.com/apache/accumulo/pull/3230#issuecomment-1460688315","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3230","id":1460688315,"node_id":"IC_kwDOACaFSM5XEFW7","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T18:44:22Z","updated_at":"2023-03-08T18:44:22Z","author_association":"CONTRIBUTOR","body":"Tservers were specifically called out in https://github.com/apache/accumulo/issues/1300 - it may be possible / desirable to add other services if they are identified.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460688315/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460719191","html_url":"https://github.com/apache/accumulo/issues/1327#issuecomment-1460719191","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1327","id":1460719191,"node_id":"IC_kwDOACaFSM5XEM5X","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T19:12:11Z","updated_at":"2023-03-08T19:12:11Z","author_association":"CONTRIBUTOR","body":"I bumped this to 3.1.0 - it is a new capability and may fit better there rather than a deprecation clean-up release (3.0.0).  If this is ready before the 3.0.0 is released, we can move it back if appropriate.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460719191/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460893149","html_url":"https://github.com/apache/accumulo/issues/3182#issuecomment-1460893149","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3182","id":1460893149,"node_id":"IC_kwDOACaFSM5XE3Xd","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T21:21:47Z","updated_at":"2023-03-08T21:21:47Z","author_association":"CONTRIBUTOR","body":"Closing this as won't fix for 1.10 and 2.1.1. If we find this is an issue in the future, then we can re-open.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460893149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460893844","html_url":"https://github.com/apache/accumulo/pull/3187#issuecomment-1460893844","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3187","id":1460893844,"node_id":"IC_kwDOACaFSM5XE3iU","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T21:22:26Z","updated_at":"2023-03-08T21:22:26Z","author_association":"CONTRIBUTOR","body":"I closed #3182 as won't fix. We can re-open in the future if we need to.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460893844/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460899973","html_url":"https://github.com/apache/accumulo/pull/3221#issuecomment-1460899973","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3221","id":1460899973,"node_id":"IC_kwDOACaFSM5XE5CF","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T21:27:56Z","updated_at":"2023-03-08T21:27:56Z","author_association":"CONTRIBUTOR","body":"@FineAndDandy @keith-turner - this is one of the last issues for 1.10.3 and 2.1.1. What's the plan for moving this forward?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460899973/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460902374","html_url":"https://github.com/apache/accumulo/pull/3167#issuecomment-1460902374","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3167","id":1460902374,"node_id":"IC_kwDOACaFSM5XE5nm","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-08T21:30:03Z","updated_at":"2023-03-08T21:30:03Z","author_association":"CONTRIBUTOR","body":"Updated from `main` and kicked off full IT build to see what's failing.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1460902374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1461066428","html_url":"https://github.com/apache/accumulo/pull/3231#issuecomment-1461066428","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3231","id":1461066428,"node_id":"IC_kwDOACaFSM5XFhq8","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-09T00:13:25Z","updated_at":"2023-03-09T00:13:25Z","author_association":"CONTRIBUTOR","body":"I don't think the `sleepInterval` is calculated elegantly. Dividing the wait interval into 10  sleep periods seemed to be ok for now, but I welcome better suggestions.\r\n\r\nI wanted to get this change in to close out the open items for 1.10.3\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1461066428/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1461472973","html_url":"https://github.com/apache/accumulo/pull/3231#issuecomment-1461472973","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3231","id":1461472973,"node_id":"IC_kwDOACaFSM5XHE7N","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-09T07:29:42Z","updated_at":"2023-03-09T07:29:42Z","author_association":"CONTRIBUTOR","body":"> Overall this looks okay, but removing the retry in favor of a wait loop looses some functionality - mainly that there was a small pause at start. It also seems cleaner because the wait times do not need to be calculated. Also, with the retry, there would be a most 3 log messages generated for the wait.\r\n> \r\n> Why did you choose not to use retry?\r\n\r\nI attempted using a Retry with an earlier version of this fix. However, while wait times do not need to be calculated with a Retry, the amount of retries in the given time duration window still need to be calculated. Otherwise it never completes and just keeps retrying.  \r\n\r\nIn my first iteration, the retry never matched up to my time value as the increment value would always cause the retry to overshoot the defined property value. \r\n\r\nhttps://github.com/ddanielr/accumulo/pull/5/commits/f93c327073d660039716e21330deb98986b19494#diff-56945d7261689b2323a668699ab5865a1e48ec8424b0d612091d29ae0f2fc67cR1510\r\n\r\nBecause of the complications with the Retry object, and the fact that`blockForTservers()` is not attempting an operation as it's just blocking, I chose to simplify it for a wait loop.\r\n\r\nI can add in a small wait at the start if you'd prefer, or I'm happy to dig further into the Retry object with someone and see if I'm just completely missing something.\r\n\r\nI'm not super concerned about the logs being spammed as this is a block on the main thread so nothing else should really be showing up in the logs until this method has completed.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1461472973/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1461952967","html_url":"https://github.com/apache/accumulo/pull/3167#issuecomment-1461952967","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3167","id":1461952967,"node_id":"IC_kwDOACaFSM5XI6HH","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-09T12:26:42Z","updated_at":"2023-03-09T12:26:42Z","author_association":"CONTRIBUTOR","body":"Found the issue causing test failures, the time between the checks was too long. Making that time shorter (1s -> 10ms) allowed the failing tests to succeed. Kicking off a new full IT build.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1461952967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1462171595","html_url":"https://github.com/apache/accumulo/pull/3231#issuecomment-1462171595","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3231","id":1462171595,"node_id":"IC_kwDOACaFSM5XJvfL","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-09T14:37:38Z","updated_at":"2023-03-09T14:39:21Z","author_association":"CONTRIBUTOR","body":"The following seems close to what is wanted (I built this against 3.0, so there may be changes needed for 1.10)  Ignore the time and count values - they were picked for convenience and not what we'd what to use here.\r\n\r\n```\r\n     Retry.builder().maxRetries(10).retryAfter(50, MILLISECONDS).incrementBy(100, MILLISECONDS)\r\n                        .maxWait(maxWaitSec, SECONDS).backOffFactor(2.0).logInterval(1, SECONDS).createRetry();\r\n\r\n...\r\n  while(retry.canRetry()){\r\n            attempts++;\r\n            retry.logRetry(log, \"current counts \" + attempts);\r\n            retry.waitForNextAttempt(log, \"pause for next attempt\");\r\n            retry.useRetry();\r\n        }\r\n```\r\n\r\nI think things to note:  \r\n\r\n- maxWait set the max delay and factors in with the backoff, the delay time will increase up to that value with each attempt.\r\n- maxRetries is a count \r\n- removing infiniteRetries() and then adding useRetry is required to advance the retry attempt logic","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1462171595/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1462863093","html_url":"https://github.com/apache/accumulo/pull/3167#issuecomment-1462863093","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3167","id":1462863093,"node_id":"IC_kwDOACaFSM5XMYT1","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-09T21:41:44Z","updated_at":"2023-03-09T21:41:44Z","author_association":"CONTRIBUTOR","body":"Full IT build passed, ready for re-review","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1462863093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1463070661","html_url":"https://github.com/apache/accumulo/pull/3221#issuecomment-1463070661","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3221","id":1463070661,"node_id":"IC_kwDOACaFSM5XNK_F","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T01:23:54Z","updated_at":"2023-03-10T01:23:54Z","author_association":"CONTRIBUTOR","body":"@dlmarion I plan to look at this again to see what could be done about the problem @FineAndDandy mentioned where the split calculation delays reporting a tablets bulk import back via RPC.  Hope to look at it the next few days.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1463070661/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1463488586","html_url":"https://github.com/apache/accumulo/pull/3231#issuecomment-1463488586","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3231","id":1463488586,"node_id":"IC_kwDOACaFSM5XOxBK","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T09:04:37Z","updated_at":"2023-03-10T09:04:37Z","author_association":"CONTRIBUTOR","body":"Dug into the retry object a bit with @EdColeman and found that removing the incrementing backoff and just using maxRetries makes the Retry object function as expected. \r\n\r\nI've pushed an updated commit that switches back to the Retry object, but calculates an exact max wait vs an approximate value. \r\nIt also switches the logging statement to use the Retry logging method which takes advantage of the Retry object's logging interval.\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1463488586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464120437","html_url":"https://github.com/apache/accumulo/issues/3233#issuecomment-1464120437","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3233","id":1464120437,"node_id":"IC_kwDOACaFSM5XRLR1","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T17:17:16Z","updated_at":"2023-03-10T17:17:16Z","author_association":"CONTRIBUTOR","body":"Which version of Accumulo are you using?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464120437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464120812","html_url":"https://github.com/apache/accumulo/issues/3233#issuecomment-1464120812","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3233","id":1464120812,"node_id":"IC_kwDOACaFSM5XRLXs","user":{"login":"jschmidt10","id":1583214,"node_id":"MDQ6VXNlcjE1ODMyMTQ=","avatar_url":"https://avatars.githubusercontent.com/u/1583214?v=4","gravatar_id":"","url":"https://api.github.com/users/jschmidt10","html_url":"https://github.com/jschmidt10","followers_url":"https://api.github.com/users/jschmidt10/followers","following_url":"https://api.github.com/users/jschmidt10/following{/other_user}","gists_url":"https://api.github.com/users/jschmidt10/gists{/gist_id}","starred_url":"https://api.github.com/users/jschmidt10/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschmidt10/subscriptions","organizations_url":"https://api.github.com/users/jschmidt10/orgs","repos_url":"https://api.github.com/users/jschmidt10/repos","events_url":"https://api.github.com/users/jschmidt10/events{/privacy}","received_events_url":"https://api.github.com/users/jschmidt10/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T17:17:37Z","updated_at":"2023-03-10T17:17:37Z","author_association":"CONTRIBUTOR","body":"This was found on 1.10.2","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464120812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464123350","html_url":"https://github.com/apache/accumulo/issues/3233#issuecomment-1464123350","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3233","id":1464123350,"node_id":"IC_kwDOACaFSM5XRL_W","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T17:19:50Z","updated_at":"2023-03-10T17:21:37Z","author_association":"CONTRIBUTOR","body":"The update properties changed with 2.1 - not sure if the new methods would match your use-case, but there are more options now, starting with 2.1.\r\n\r\nMentioning mainly for anyone that may pick-up this issue that things changed and would need to be evaluated. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464123350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464126538","html_url":"https://github.com/apache/accumulo/issues/3233#issuecomment-1464126538","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3233","id":1464126538,"node_id":"IC_kwDOACaFSM5XRMxK","user":{"login":"jschmidt10","id":1583214,"node_id":"MDQ6VXNlcjE1ODMyMTQ=","avatar_url":"https://avatars.githubusercontent.com/u/1583214?v=4","gravatar_id":"","url":"https://api.github.com/users/jschmidt10","html_url":"https://github.com/jschmidt10","followers_url":"https://api.github.com/users/jschmidt10/followers","following_url":"https://api.github.com/users/jschmidt10/following{/other_user}","gists_url":"https://api.github.com/users/jschmidt10/gists{/gist_id}","starred_url":"https://api.github.com/users/jschmidt10/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschmidt10/subscriptions","organizations_url":"https://api.github.com/users/jschmidt10/orgs","repos_url":"https://api.github.com/users/jschmidt10/repos","events_url":"https://api.github.com/users/jschmidt10/events{/privacy}","received_events_url":"https://api.github.com/users/jschmidt10/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T17:22:45Z","updated_at":"2023-03-10T17:22:45Z","author_association":"CONTRIBUTOR","body":"Thanks Ed! Tried it out in 2.1 and got the same behavior. I was unaware of the new opts, so thanks for the heads up. In this case, I was looking for like a \"table-scope only copy-configs\" but didn't see anything pop out at me. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464126538/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464129875","html_url":"https://github.com/apache/accumulo/issues/3233#issuecomment-1464129875","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3233","id":1464129875,"node_id":"IC_kwDOACaFSM5XRNlT","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T17:25:46Z","updated_at":"2023-03-10T17:25:46Z","author_association":"CONTRIBUTOR","body":"The new changes are not related to copy config - but there are now ways to atomically set / modify a group of properties - seemed similar enough to mention, but again, not sure if they fit what this is asking for,","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464129875/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464213808","html_url":"https://github.com/apache/accumulo/issues/3159#issuecomment-1464213808","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3159","id":1464213808,"node_id":"IC_kwDOACaFSM5XRiEw","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T18:28:12Z","updated_at":"2023-03-10T18:28:12Z","author_association":"CONTRIBUTOR","body":"Closed with https://github.com/apache/accumulo/pull/3231","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464213808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464359156","html_url":"https://github.com/apache/accumulo/issues/3233#issuecomment-1464359156","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3233","id":1464359156,"node_id":"IC_kwDOACaFSM5XSFj0","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T20:09:49Z","updated_at":"2023-03-10T20:09:49Z","author_association":"MEMBER","body":"The issue here is basically whether copy config should copy the actual config or the effective config. It currently copies the effective config, since there's no good way to view the actual config. In 2.1, with the way we've changed how properties work, it might be easier to resolve just the actual config and bypass the effective config... but I think if we change that behavior, it should be done with a new API, rather than break the existing API.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464359156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464486152","html_url":"https://github.com/apache/accumulo/pull/3234#issuecomment-1464486152","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3234","id":1464486152,"node_id":"IC_kwDOACaFSM5XSkkI","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T21:16:59Z","updated_at":"2023-03-10T21:17:58Z","author_association":"CONTRIBUTOR","body":"Given that the intervals just need to be changed, wouldn't just changing the number of retries and the increment variable accomplish that without redoing the logic? \r\n\r\n```\r\n    long retries = 10;\r\n    long waitPeriod = maxWait / retries;\r\n    long waitIncrement = 0;\r\n    \r\n    if (maxWait <= 0) {\r\n      log.info(\"tserver availability check set to block indefinitely, To change, set {} > 0.\",\r\n          Property.MASTER_STARTUP_TSERVER_AVAIL_MAX_WAIT.getKey());\r\n      maxWait = Long.MAX_VALUE;\r\n      \r\n      // Change retry logic for incremental backoff and logging due to indefinite blocking\r\n      retries = maxWait;\r\n      waitPeriod = maxWait;\r\n      waitIncrement = 15_000;\r\n    }\r\n ```\r\n \r\nAdd waitIncrement to Retry: \r\n ```\r\n    Retry tserverRetry = Retry.builder().maxRetries(retries).retryAfter(waitPeriod, MILLISECONDS)\r\n        .incrementBy(waitIncrement, MILLISECONDS).maxWait(waitPeriod, MILLISECONDS)\r\n        .logInterval(30_000, MILLISECONDS).createRetry();\r\n```\r\n        ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464486152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464491613","html_url":"https://github.com/apache/accumulo/pull/3234#issuecomment-1464491613","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3234","id":1464491613,"node_id":"IC_kwDOACaFSM5XSl5d","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T21:23:09Z","updated_at":"2023-03-10T21:23:09Z","author_association":"CONTRIBUTOR","body":"I think that trying to use `maxWait(waitPeriod, MILLISECONDS)` when waitPeriod is MAX_LONG would make the time between checks excessively long  - we should continue to poll at a reasonable interval (this code picked 30 seconds as a max)","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464491613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464493498","html_url":"https://github.com/apache/accumulo/pull/3234#issuecomment-1464493498","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3234","id":1464493498,"node_id":"IC_kwDOACaFSM5XSmW6","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T21:25:25Z","updated_at":"2023-03-10T21:25:25Z","author_association":"CONTRIBUTOR","body":"> I think that trying to use `maxWait(waitPeriod, MILLISECONDS)` when waitPeriod is MAX_LONG would make the time between checks excessively long - we should continue to poll at a reasonable interval (this code picked 30 seconds as a max)\r\n\r\nSure, that could be reduced. I believe the original value was 50ms or half of maxWait. \r\nThe incremental change is what causes the inaccuracy for defined startup timeouts. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464493498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464524386","html_url":"https://github.com/apache/accumulo/pull/3234#issuecomment-1464524386","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3234","id":1464524386,"node_id":"IC_kwDOACaFSM5XSt5i","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T21:58:38Z","updated_at":"2023-03-10T21:58:38Z","author_association":"CONTRIBUTOR","body":"@ddanielr is going to post an alternate instead of this approach.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464524386/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464584261","html_url":"https://github.com/apache/accumulo/pull/3231#issuecomment-1464584261","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3231","id":1464584261,"node_id":"IC_kwDOACaFSM5XS8hF","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T22:42:47Z","updated_at":"2023-03-10T22:42:47Z","author_association":"MEMBER","body":"GitHub's UI seems to create a new branch to revert the change if you click the revert button, even if you abort the process and don't actually follow through with reverting anything. I'll delete the unintentionally created revert branch. #3235 is a fix subsequent to this PR that should be finished before merging the 1.10 branch forward into 2.1 and on.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464584261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464586674","html_url":"https://github.com/apache/accumulo/pull/3234#issuecomment-1464586674","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3234","id":1464586674,"node_id":"IC_kwDOACaFSM5XS9Gy","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T22:44:17Z","updated_at":"2023-03-10T22:44:17Z","author_association":"MEMBER","body":"#3235 supersedes this","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464586674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464594354","html_url":"https://github.com/apache/accumulo/pull/3235#issuecomment-1464594354","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3235","id":1464594354,"node_id":"IC_kwDOACaFSM5XS--y","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T22:52:21Z","updated_at":"2023-03-10T22:52:21Z","author_association":"CONTRIBUTOR","body":"Don't merge this yet, there's a math problem that throw runtime error on infinite wait conditions.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464594354/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464643996","html_url":"https://github.com/apache/accumulo/pull/3235#issuecomment-1464643996","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3235","id":1464643996,"node_id":"IC_kwDOACaFSM5XTLGc","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-10T23:37:15Z","updated_at":"2023-03-10T23:37:15Z","author_association":"CONTRIBUTOR","body":"Fixed the math error and confirmed the change works against both a defined maxWait > 0 timeout and a maxWait of 0.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464643996/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464997245","html_url":"https://github.com/apache/accumulo/issues/1327#issuecomment-1464997245","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1327","id":1464997245,"node_id":"IC_kwDOACaFSM5XUhV9","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-11T19:46:04Z","updated_at":"2023-03-11T19:46:04Z","author_association":"CONTRIBUTOR","body":"Just a quick update, I've been working on a prototype the last couple weeks (trying various different things so it is taking a while) and I should have something by next week to push up for a draft PR to get some feedback on. I have a basic iterator currently working with a few tests but still needs work and I'm sure has lots of issue (and not everything is implemented yet). Also while working on testing one thing I noticed was the index probably needs fencing as well so I'm need to work on figuring out is the best way to fence off the index and handle operations like getLastKey(), getFirstKey() etc.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1464997245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1465388246","html_url":"https://github.com/apache/accumulo/issues/3210#issuecomment-1465388246","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3210","id":1465388246,"node_id":"IC_kwDOACaFSM5XWAzW","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-13T01:53:37Z","updated_at":"2023-03-13T01:53:37Z","author_association":"CONTRIBUTOR","body":"One minor difference between online and ondemand on the client side is the behavior when a tablet does not have a location.  For on demand tables the client would need to request the tablet be loaded.  For online tables the client would not need to make this request, it knows that the goal is to get tablets loaded as soon as possible.  If a client were aware of what ranges of an ondemand table were pinned, then it could avoid making the request.  However, if the client does make an unneeded request to load a tablet it should be fine but could place unnecessary load on manager for an online table that happens to have some tablets that temporarily do not have a location.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1465388246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1465396573","html_url":"https://github.com/apache/accumulo/issues/1327#issuecomment-1465396573","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1327","id":1465396573,"node_id":"IC_kwDOACaFSM5XWC1d","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-13T02:03:30Z","updated_at":"2023-03-13T02:03:30Z","author_association":"CONTRIBUTOR","body":"> and handle operations like getLastKey(), getFirstKey() etc.\r\n\r\n@cshannon  where are you seeing those methods?  I was looking around in the code and saw them in FileSKVIterator. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1465396573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1465837390","html_url":"https://github.com/apache/accumulo/issues/1327#issuecomment-1465837390","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1327","id":1465837390,"node_id":"IC_kwDOACaFSM5XXudO","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-13T10:00:35Z","updated_at":"2023-03-13T10:10:23Z","author_association":"CONTRIBUTOR","body":"@keith-turner - Right, that's the interface where they are and the current RFile reader iterator implements that interface so we would need to implement this or make sure the code that calls the iterator that handles fencing doesn't care about the methods/interface. If we only care about the start/end of a file it should not be a big deal but I need to dig into it more. For the draft PR they can stay unimplemented either way.\r\n\r\nI was looking at those methods because I was thinking we could/should try and implement that interface as well for the fenced reader to make it easy to replace the iterator where it's used in the code but maybe we don't do that (it may not make sense) or we just don't implement certain methods (unsupported methods seem pretty common). I'll have to play around with it a bit more.\r\n\r\nThis should be a lot easier to discuss once I push up what I have.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1465837390/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1466936827","html_url":"https://github.com/apache/accumulo/pull/3232#issuecomment-1466936827","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3232","id":1466936827,"node_id":"IC_kwDOACaFSM5Xb637","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-13T20:50:15Z","updated_at":"2023-03-13T20:50:15Z","author_association":"CONTRIBUTOR","body":"Any reason to not just make the default TabletMutator implemention be conditional vs having two implementations?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1466936827/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1467328671","html_url":"https://github.com/apache/accumulo/pull/3232#issuecomment-1467328671","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3232","id":1467328671,"node_id":"IC_kwDOACaFSM5Xdaif","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-14T04:11:21Z","updated_at":"2023-03-14T04:11:21Z","author_association":"CONTRIBUTOR","body":"> Any reason to not just make the default TabletMutator implemention be conditional vs having two implementations?\r\n\r\nIf there are still use cases for unconditional writes to the metadata table, then it would be nice to have that.  I suspect there will stil l be some use case for that.  If there are not, thinking we can remove it later.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1467328671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1467334702","html_url":"https://github.com/apache/accumulo/pull/3221#issuecomment-1467334702","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3221","id":1467334702,"node_id":"IC_kwDOACaFSM5XdcAu","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-14T04:21:47Z","updated_at":"2023-03-14T04:21:47Z","author_association":"CONTRIBUTOR","body":"Looking at this again, I think one way forward on this is to merge this PR and I can follow up with another PR next week to pull the split computation outside of the tablet lock.  I think the issue with the split computation holding up the bulk import thread could be addressed in my follow up PR by ensuring only the new isSplitPossible method is called by the bulk import thread, pushing any split computation into another thread. Thinking the two PRs together can address the problem of a split point computation holding up a bulk import.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1467334702/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1467969709","html_url":"https://github.com/apache/accumulo/pull/3220#issuecomment-1467969709","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3220","id":1467969709,"node_id":"IC_kwDOACaFSM5Xf3Ct","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-14T12:00:23Z","updated_at":"2023-03-14T12:00:23Z","author_association":"CONTRIBUTOR","body":"  There are now 3 PRs up for the OnDemand tablet feature, and I think it's functional although I'm sure there are more edge cases to test. \r\n\r\n  This PR introduces new API methods to put a table in an onDemand state (vs online or offline). The implementation of this creates a Fate operation that ends up running the `ChangeTableState` Fate op. The Manager has been updated such that tablets for a table in the onDemand state will not be hosted, just like an offline table.\r\n\r\n  [37](https://github.com/dlmarion/accumulo/pull/37) builds on this and contains modifications for onDemand tablets to be brought online. This is done via the `TabletLocator`, when the client is unable to find a Tablet location and it's an onDemand table, then it makes a call to a new Thrift API method called `bringOnDemandTabletOnline`. When this method is called, the implementation (`TabletClientHandler.bringOnDemandTabletsOnline`) inserts an \"ondemand\" column into the metadata for the tablet. The `TabletStateChangeIterator` has been modified to return the `TabletLocationState` via the `MetaDataTableScanner` so that the `TabletGroupWatcher` running in the Manager will see the tablet as unassigned and will assign it using the normal tablet assignment process.\r\n\r\n  [38](https://github.com/dlmarion/accumulo/pull/38) builds on 37 and contains modifications for onDemand tablets to be unloaded. This is done by a new Thread in the TabletServer that calls the new method `evaluateOnDemandTabletsForUnload` at some interval (defined by a new property). `evaluateOnDemandTabletsForUnload` uses an implementation of a new SPI `OnDemandTabletUnloader` class (default implementation provided) to determine which online tablets for an onDemand tablet should be unloaded. For each tablet returned, the method removes the \"ondemand\" column from the metadata table for the tablet. Like in 37, the `TabletStateChangeIterator` returns the information to the `TabletGroupWatcher` running in the Manager and it will unload the tablet using the normal process.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1467969709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1468479387","html_url":"https://github.com/apache/accumulo/pull/3221#issuecomment-1468479387","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3221","id":1468479387,"node_id":"IC_kwDOACaFSM5Xhzeb","user":{"login":"FineAndDandy","id":7751180,"node_id":"MDQ6VXNlcjc3NTExODA=","avatar_url":"https://avatars.githubusercontent.com/u/7751180?v=4","gravatar_id":"","url":"https://api.github.com/users/FineAndDandy","html_url":"https://github.com/FineAndDandy","followers_url":"https://api.github.com/users/FineAndDandy/followers","following_url":"https://api.github.com/users/FineAndDandy/following{/other_user}","gists_url":"https://api.github.com/users/FineAndDandy/gists{/gist_id}","starred_url":"https://api.github.com/users/FineAndDandy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FineAndDandy/subscriptions","organizations_url":"https://api.github.com/users/FineAndDandy/orgs","repos_url":"https://api.github.com/users/FineAndDandy/repos","events_url":"https://api.github.com/users/FineAndDandy/events{/privacy}","received_events_url":"https://api.github.com/users/FineAndDandy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-14T16:58:33Z","updated_at":"2023-03-14T16:58:33Z","author_association":"CONTRIBUTOR","body":"I'd be happy with that solution. The goal is just to get out of the way of the RPC call returning. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1468479387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1468700646","html_url":"https://github.com/apache/accumulo/pull/3220#issuecomment-1468700646","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3220","id":1468700646,"node_id":"IC_kwDOACaFSM5Xipfm","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-14T19:25:48Z","updated_at":"2023-03-15T16:50:52Z","author_association":"CONTRIBUTOR","body":"If you want to test this yourself, you can:\r\n\r\n  1. Build Accumulo from PR [38](https://github.com/dlmarion/accumulo/pull/38)\r\n  2. Set the following properties in accumulo.properties:\r\n  ```\r\n    manager.tablet.watcher.interval=15s\r\n    table.ondemand.tablet.unloader.interval=1m\r\n    table.custom.ondemand.unloader.inactivity.threshold=120000\r\n  ```\r\n  3. Start up local instance\r\n  4. Log into Accumulo shell, and do the following\r\n  ```\r\n  createtable test\r\n  ```\r\n  > **Note**\r\n  > notice test and 1 tablet in Monitor\r\n  > notice \"loc\" column in tablet metadata\r\n  ```\r\n  ondemand test\r\n  ```\r\n  > **Note**\r\n  > notice 0 tablets in monitor\r\n  > notice \"loc\" missing from tablet metadata\r\n  ```\r\n  insert a b c d\r\n  ```\r\n  > **Note**\r\n  > notice shell command wait for tablet to be hosted\r\n  > notice 1 tablet in Monitor\r\n  > notice \"loc\" column in tablet metadata\r\n  > notice \"ondemand\" column in tablet metadata\r\n  ```\r\n  addsplits m -t test\r\n  ```\r\n  > **Note**\r\n  > notice 1 tablet in Monitor\r\n  > notice \"loc\" in tablet metadata for source tablet only\r\n  > notice \"ondemand\" column in tablet metadata for source tablet only\r\n ```\r\n sleep 240\r\n ```\r\n  > **Note**\r\n  > table.custom.ondemand.unloader.inactivity.threshold is set to 2m, waiting 4m should unload the tablet\r\n  > notice 0 tablets in monitor\r\n  > notice \"loc\" column missing in tablet metadata\r\n  > notice \"ondemand\" column missing in tablet metadata\r\n  ```\r\n  insert a b c d\r\n ```\r\n  > **Note**\r\n  > notice shell command wait for tablet to be hosted\r\n  > notice 1 tablet in Monitor\r\n  > notice \"loc\" column in tablet metadata\r\n  > notice \"ondemand\" column in tablet metadata\r\n\r\n  5. Stop Accumulo\r\n  6. Start Accumulo\r\n  > **Note**\r\n  > test tablet had \"ondemand\" column on shutdown, so it gets re-hosted\r\n  > notice 1 tablet in Monitor\r\n  > notice \"loc\" column in tablet metadata\r\n  > notice \"ondemand\" column in tablet metadata\r\n  7.  Wait a few minutes for tablet to be unloaded\r\n  > **Note**\r\n  > notice 0 tablets in monitor\r\n  > notice \"loc\" column missing in tablet metadata\r\n  > notice \"ondemand\" column missing in tablet metadata","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1468700646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1468709138","html_url":"https://github.com/apache/accumulo/issues/3213#issuecomment-1468709138","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3213","id":1468709138,"node_id":"IC_kwDOACaFSM5XirkS","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-14T19:33:48Z","updated_at":"2023-03-14T19:33:48Z","author_association":"CONTRIBUTOR","body":"Given how tablets are unloaded in [38](https://github.com/dlmarion/accumulo/pull/38), I'm not sure that tablets need to be pinned. The TabletServer keeps track of the KeyExtent and last access time for each online onDemand tablet and passes that information to an implementation of an OnDemandTabletUnloader (unloader). The unloader then determines which tablets should be unloaded. If the unloader never returns a KeyExtent to be unloaded, then it's effectively pinned once loaded. Different OnDemandTabletUnloader implementations could be created for different types of tables. For example, for tables where a date is stored in the row, which is available in the KeyExtent, an implementation could be created that never returned any KeyExtent that falls within some time frame.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1468709138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1468710294","html_url":"https://github.com/apache/accumulo/pull/3221#issuecomment-1468710294","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3221","id":1468710294,"node_id":"IC_kwDOACaFSM5Xir2W","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-14T19:34:56Z","updated_at":"2023-03-14T19:34:56Z","author_association":"CONTRIBUTOR","body":"Kicking off full IT build","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1468710294/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1470001275","html_url":"https://github.com/apache/accumulo/issues/3213#issuecomment-1470001275","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3213","id":1470001275,"node_id":"IC_kwDOACaFSM5XnnB7","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-15T13:20:21Z","updated_at":"2023-03-15T13:20:21Z","author_association":"CONTRIBUTOR","body":"My mental model for tracking loading / unloading is that this is implementing a cache.  This description\r\n> The TabletServer keeps track of the KeyExtent and last access time for each online onDemand tablet \r\nseems to be describing LRU behavior.  \r\n\r\nTracking the last access time can be expensive.  How often does the access time get updated?  If it is updated only on loading, then this seems that it would act more like \"expireAfter\", where it would be eligible for removal an a fixed time period.  In that case, what would prevent a tablet from being unloaded while a scan is in progress?  Updating on every \"next()\" seems like it could be prohibitively expensive.  The sweet spot would seem to be something that is tracking tablet usage  so that tablet being used in active scans would not be unnecessarily unloaded.  Maybe the last access is updated on init and on tear-down?\r\n\r\nThe TableServers are going to need to gather sufficient metrics that unloader implementations can make determinations - while things like row / key knowledge will be custom, usage and access times will need to be provided.\r\n\r\nAs a  \"base\" implementation, we could provide a time-based cleaner thread and as a extension, something triggered on low memory conditions?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1470001275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1470173125","html_url":"https://github.com/apache/accumulo/issues/3213#issuecomment-1470173125","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3213","id":1470173125,"node_id":"IC_kwDOACaFSM5XoQ_F","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-15T15:05:11Z","updated_at":"2023-03-15T15:05:11Z","author_association":"CONTRIBUTOR","body":"> My mental model for tracking loading / unloading is that this is implementing a cache. This description\r\n> \r\n> > The TabletServer keeps track of the KeyExtent and last access time for each online onDemand tablet\r\n> > seems to be describing LRU behavior.\r\n> \r\n> Tracking the last access time can be expensive. How often does the access time get updated? If it is updated only on loading, then this seems that it would act more like \"expireAfter\", where it would be eligible for removal an a fixed time period.\r\n\r\nIn my current PR for unloading, the last access time is set when the tablet is loaded, updated when TabletServer.getOnlineExtent() is called, and removed when the tablet is unloaded.\r\n\r\n>  In that case, what would prevent a tablet from being unloaded while a scan is in progress? Updating on every \"next()\" seems like it could be prohibitively expensive. The sweet spot would seem to be something that is tracking tablet usage so that tablet being used in active scans would not be unnecessarily unloaded. Maybe the last access is updated on init and on tear-down?\r\n\r\nI think I found a solution using the existing metrics that are tracked. I added it in https://github.com/dlmarion/accumulo/pull/38/commits/33fa498fe5272400a3da88645be01d56f097f845\r\n\r\n> \r\n> The TableServers are going to need to gather sufficient metrics that unloader implementations can make determinations - while things like row / key knowledge will be custom, usage and access times will need to be provided.\r\n> \r\n> As a \"base\" implementation, we could provide a time-based cleaner thread and as a extension, something triggered on low memory conditions?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1470173125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1472090682","html_url":"https://github.com/apache/accumulo/pull/3221#issuecomment-1472090682","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3221","id":1472090682,"node_id":"IC_kwDOACaFSM5XvlI6","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-16T14:30:26Z","updated_at":"2023-03-16T14:30:26Z","author_association":"CONTRIBUTOR","body":"Full IT build passed successfully. @keith-turner - Do you think we should wait to merge this until you have the follow-on ready?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1472090682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1472723310","html_url":"https://github.com/apache/accumulo/issues/3198#issuecomment-1472723310","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3198","id":1472723310,"node_id":"IC_kwDOACaFSM5Xx_lu","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-16T20:52:32Z","updated_at":"2023-03-16T20:52:32Z","author_association":"MEMBER","body":"I added 2.1.1 as a version in which this is fixed, since the fix for this will appear in both the 1.10.3 and the 2.1.1 patch releases.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1472723310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1474841850","html_url":"https://github.com/apache/accumulo/pull/3245#issuecomment-1474841850","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3245","id":1474841850,"node_id":"IC_kwDOACaFSM5X6Ez6","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-18T12:48:51Z","updated_at":"2023-03-18T12:48:51Z","author_association":"CONTRIBUTOR","body":"Adding the sleep is simple but picking the right amount is pretty arbitrary. Can you use the [Wait](https://github.com/apache/accumulo/blob/540179d1f52dcc478eee3a3ee3c5fac106736c8b/test/src/main/java/org/apache/accumulo/test/util/Wait.java) util class and just wait until the property has propagated to ZK before continuing?\r\n\r\nI used it quite a few times inside of PropStoreConfigIT to wait for propagation of properties. For example: https://github.com/apache/accumulo/blob/540179d1f52dcc478eee3a3ee3c5fac106736c8b/test/src/main/java/org/apache/accumulo/test/conf/PropStoreConfigIT.java#L95-L124\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1474841850/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1475303228","html_url":"https://github.com/apache/accumulo/issues/3242#issuecomment-1475303228","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3242","id":1475303228,"node_id":"IC_kwDOACaFSM5X71c8","user":{"login":"Manno15","id":29436247,"node_id":"MDQ6VXNlcjI5NDM2MjQ3","avatar_url":"https://avatars.githubusercontent.com/u/29436247?v=4","gravatar_id":"","url":"https://api.github.com/users/Manno15","html_url":"https://github.com/Manno15","followers_url":"https://api.github.com/users/Manno15/followers","following_url":"https://api.github.com/users/Manno15/following{/other_user}","gists_url":"https://api.github.com/users/Manno15/gists{/gist_id}","starred_url":"https://api.github.com/users/Manno15/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Manno15/subscriptions","organizations_url":"https://api.github.com/users/Manno15/orgs","repos_url":"https://api.github.com/users/Manno15/repos","events_url":"https://api.github.com/users/Manno15/events{/privacy}","received_events_url":"https://api.github.com/users/Manno15/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-19T15:59:48Z","updated_at":"2023-03-19T16:08:17Z","author_association":"CONTRIBUTOR","body":"To add some info on this. If you run the command \r\n`compact -t test -w` then it will throw the offline command as it seems the `waitForFateOperation` can throw the `ThriftTableOperationException` for offline tables. Without it, the transaction gets seeded as you stated. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1475303228/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1475307312","html_url":"https://github.com/apache/accumulo/issues/1327#issuecomment-1475307312","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1327","id":1475307312,"node_id":"IC_kwDOACaFSM5X72cw","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-19T16:11:07Z","updated_at":"2023-03-19T16:11:07Z","author_association":"CONTRIBUTOR","body":"I've started looking at how to persist ranges to the file field in the metadata table. The main thing I've noticed digging into it so far is that I will need to find a good way to persist the ranges as a String. It looks like all the values in the Metadata table are converting to string representations and encoded as UTF-8 and right now a Range encode only supports just bytes. This should be doable of course I will just need to write the logic to do it.\r\n\r\nCurrently [DataFileValue](https://github.com/apache/accumulo/blob/540179d1f52dcc478eee3a3ee3c5fac106736c8b/core/src/main/java/org/apache/accumulo/core/metadata/schema/DataFileValue.java) contains size, number of entries and optional time field all comma separated and encoded as a String. My current plan is to encode the collection or Ranges for a file and append it as the 4th item in the value. In order to be backwards compatible the DataFileValue logic that decodes will check if there are 4 items to parse when splitting on the comma and if there's a 4th item it will know that range information exists. Right now time is optional and is not encoded if -1 (not set) so going forward we will have to write it as -1 if not set but range information is set so that we can parse properly. Obviously if no range information exists then this just means the entire file is valid so we don't need to have a range or the range will just be a range with infinite start/stop so will be backwards compatible.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1475307312/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1475311943","html_url":"https://github.com/apache/accumulo/issues/1327#issuecomment-1475311943","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1327","id":1475311943,"node_id":"IC_kwDOACaFSM5X73lH","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-19T16:28:28Z","updated_at":"2023-03-19T16:28:28Z","author_association":"CONTRIBUTOR","body":"@ctubbsii and @keith-turner  - In regards to my recent comment about storing ranges to the file field, how do you feel about encoding a list of ranges using JSON or maybe Base64? A list of ranges will be fairly complex with the different fields so to make creating a string representation easier I was thinking of using JSON or just encoding using the existing binary logic and then encoding that as Base64.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1475311943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1476283642","html_url":"https://github.com/apache/accumulo/pull/3245#issuecomment-1476283642","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3245","id":1476283642,"node_id":"IC_kwDOACaFSM5X_kz6","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-20T13:58:00Z","updated_at":"2023-03-20T13:58:00Z","author_association":"CONTRIBUTOR","body":"The change 5872a846d2 has a large diff because of formatting changes due to changing try-resource client scope.  \r\n\r\nAlso modified the property check sleep to shorten initial time and add a back-off.\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1476283642/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1476338686","html_url":"https://github.com/apache/accumulo/issues/1327#issuecomment-1476338686","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1327","id":1476338686,"node_id":"IC_kwDOACaFSM5X_yP-","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-20T14:29:36Z","updated_at":"2023-03-20T14:29:36Z","author_association":"CONTRIBUTOR","body":"> encoding a list of ranges using JSON\r\n\r\n:+1: ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1476338686/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1476888945","html_url":"https://github.com/apache/accumulo/issues/1327#issuecomment-1476888945","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1327","id":1476888945,"node_id":"IC_kwDOACaFSM5YB4lx","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-20T20:30:03Z","updated_at":"2023-03-20T20:30:03Z","author_association":"MEMBER","body":"I would favor using JSON, and converting the old binary fields to also use the same JSON, so we're not mixing and matching formats. Any binary data would necessarily need to be Base64 encoded in order to be placed in the JSON blob, since JSON doesn't support binary data directly.\r\n\r\nI'm curious how you intend to handle the situation where ranges are contiguous or overlapping, whether you'd want to try to coalesce these during a merge to reduce the number of ranges, or leave them as-is.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1476888945/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1476947406","html_url":"https://github.com/apache/accumulo/issues/1327#issuecomment-1476947406","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1327","id":1476947406,"node_id":"IC_kwDOACaFSM5YCG3O","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-20T21:17:10Z","updated_at":"2023-03-20T21:17:10Z","author_association":"CONTRIBUTOR","body":"Thanks for the feedback, I'll start exploring the JSON option and see how it goes. I may have some follow up questions on how to handle things as i start working on it but that's a good starting point. \r\n\r\nI was also thinking it would be nice to just write the entire DataFieldValue as as JSON object (so the 3 existing fields plus the new list of Ranges) but then it wouldn't be backwards compatible so you'd need some new way to detect the new format and code to handle the old and new ways of storing the data which adds complexity and could be tricky so not sure if that's the best thing to do or instead only serialize the Ranges as a JSON encoded String and appending as the 4th item in the comma separated representation of DataFieldValue.\r\n\r\nIn terms of contiguous/overlapping ranges I plan to collapse them when storing to reduce the ranges. It makes sense to keep as few as possible as it should improve the performance as there will be less ranges to track/manage and reduces the data that is stored in metadata. There's already a very nice method called [mergeOverlapping](https://github.com/apache/accumulo/blob/540179d1f52dcc478eee3a3ee3c5fac106736c8b/core/src/main/java/org/apache/accumulo/core/data/Range.java#L418) in Range to handle this and I'm using it in my PR for the ranged File Reader when [constructing](https://github.com/apache/accumulo/blob/f4e5e66df9bca02d951a1801b5e9d459d815aea3/core/src/main/java/org/apache/accumulo/core/file/rfile/RFile.java#L1590) the iterator for fencing. We may actually be able to remove that call from the ranged reader if we use it when storing in metadata as it would in theory be redundant as the stored ranges should already be merged together and not need to be checked again.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1476947406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1477082239","html_url":"https://github.com/apache/accumulo/pull/3245#issuecomment-1477082239","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3245","id":1477082239,"node_id":"IC_kwDOACaFSM5YCnx_","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-20T23:26:30Z","updated_at":"2023-03-20T23:35:54Z","author_association":"CONTRIBUTOR","body":"This change does not resolve the race condition, see https://github.com/apache/accumulo/issues/3248 - additional code changes may be required - looking into it now.  With either add to this PR, or close and submit a new one.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1477082239/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1477093649","html_url":"https://github.com/apache/accumulo/pull/3249#issuecomment-1477093649","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3249","id":1477093649,"node_id":"IC_kwDOACaFSM5YCqkR","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-20T23:45:14Z","updated_at":"2023-03-20T23:45:14Z","author_association":"CONTRIBUTOR","body":"Ignoring white space changes makes the diffs smaller.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1477093649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1477099084","html_url":"https://github.com/apache/accumulo/pull/3221#issuecomment-1477099084","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3221","id":1477099084,"node_id":"IC_kwDOACaFSM5YCr5M","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-20T23:54:52Z","updated_at":"2023-03-20T23:54:52Z","author_association":"CONTRIBUTOR","body":"> Do you think we should wait to merge this until you have the follow-on ready?\r\n\r\nI have a follow on PR #3249.  It currently includes this commit.  When the #3249 is ready to merge I can merge this and then rebase #3249 and merge it.  After that I can work on merging 1.10 forward into 2.1 and beyond.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1477099084/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1477102514","html_url":"https://github.com/apache/accumulo/pull/3249#issuecomment-1477102514","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3249","id":1477102514,"node_id":"IC_kwDOACaFSM5YCsuy","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-20T23:59:30Z","updated_at":"2023-03-20T23:59:30Z","author_association":"CONTRIBUTOR","body":"Ran all ITs matching the pattern `*Split*IT` and that looked good.\r\n\r\n```\r\nINFO] -------------------------------------------------------\r\n[INFO]  T E S T S\r\n[INFO] -------------------------------------------------------\r\n[INFO] Running org.apache.accumulo.test.LargeSplitRowIT\r\n[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 43.505 s - in org.apache.accumulo.test.LargeSplitRowIT\r\n[INFO] Running org.apache.accumulo.test.functional.BatchScanSplitIT\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 14.504 s - in org.apache.accumulo.test.functional.BatchScanSplitIT\r\n[INFO] Running org.apache.accumulo.test.functional.SplitRecoveryIT\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.354 s - in org.apache.accumulo.test.functional.SplitRecoveryIT\r\n[INFO] Running org.apache.accumulo.test.functional.AddSplitIT\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.51 s - in org.apache.accumulo.test.functional.AddSplitIT\r\n[INFO] Running org.apache.accumulo.test.functional.DeleteTableDuringSplitIT\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 67.48 s - in org.apache.accumulo.test.functional.DeleteTableDuringSplitIT\r\n[INFO] Running org.apache.accumulo.test.functional.DeleteRowsSplitIT\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 42.34 s - in org.apache.accumulo.test.functional.DeleteRowsSplitIT\r\n[INFO] Running org.apache.accumulo.test.functional.BulkSplitOptimizationIT\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.016 s - in org.apache.accumulo.test.functional.BulkSplitOptimizationIT\r\n[INFO] Running org.apache.accumulo.test.functional.MetadataSplitIT\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 19.841 s - in org.apache.accumulo.test.functional.MetadataSplitIT\r\n[INFO] Running org.apache.accumulo.test.functional.SplitIT\r\n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 92.578 s - in org.apache.accumulo.test.functional.SplitIT\r\n[INFO] Running org.apache.accumulo.test.SplitRecoveryIT\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.61 s - in org.apache.accumulo.test.SplitRecoveryIT\r\n[INFO] Running org.apache.accumulo.test.ManySplitIT\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 17.312 s - in org.apache.accumulo.test.ManySplitIT\r\n[INFO] Running org.apache.accumulo.test.SplitCancelsMajCIT\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 68.982 s - in org.apache.accumulo.test.SplitCancelsMajCIT\r\n[INFO] Running org.apache.accumulo.test.MetaSplitIT\r\n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 30.511 s - in org.apache.accumulo.test.MetaSplitIT\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[INFO] Tests run: 21, Failures: 0, Errors: 0, Skipped: 0\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1477102514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1477771066","html_url":"https://github.com/apache/accumulo/pull/3249#issuecomment-1477771066","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3249","id":1477771066,"node_id":"IC_kwDOACaFSM5YFP86","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-21T12:40:45Z","updated_at":"2023-03-21T12:40:45Z","author_association":"CONTRIBUTOR","body":"Realized this change could possibly lead to split starvation.  The change allows more concurrency would means if the split takes a long time to compute and files keep coming in that the tablet may never split because its always recomputing the split point.  I think maybe this can be avoided with a simple change which I will work on shortly.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1477771066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1478347120","html_url":"https://github.com/apache/accumulo/pull/3220#issuecomment-1478347120","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3220","id":1478347120,"node_id":"IC_kwDOACaFSM5YHclw","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-21T17:54:38Z","updated_at":"2023-03-21T17:58:35Z","author_association":"CONTRIBUTOR","body":"I was looking at dlmarion/accumulo#37 and I like the on demand column.  Looking at it I was thinking for an ondemand table that the tablet location cache will need to cache tablets with and without locations.  This is so that eventual scans can work against tablets without a location like the changes in #3143 for offline tables.\r\n\r\nIf the tablet location cache will eventually hold tablets w/o a location, then we could possibly leverage that.  Below is some pseudo code I wrote to help me explore this concept and think through it at a high level.  \r\n\r\n```java\r\n \r\n interface ClientLoadRequestProcessor {\r\n       /**\r\n        * Makes a call to one or more managers to load tablets for an ondemand table, knows how to partition \r\n        * tablets to managers.  May ingore extents it was recently asked to load.\r\n        */\r\n       void  loadTablets(Set<KeyExtent> extents); \r\n }\r\n \r\n \r\n interface TabletLocator {\r\n      /**\r\n       * Maps ranges to tablets, partitioning the tablets into hosted and unhosted sets.  Unhosted means the \r\n       * tablet does not have a location.\r\n       */\r\n      List<Range> locateTablets(List<Range> ranges, Map<...> hostedTablets, Set<KeyExtent> unhostedTablets);\r\n      \r\n      void invalidateExtents(Set<KeyExtent> extents);\r\n }\r\n \r\n \r\n \r\n/* Maybe this code would  be in the tablet locator impl or batch scanner impl, not sure of best way to organize \r\n * code ATM. I am slightly leaning twoards putting it in TabletLocator like you did in 37, but pulling the code to \r\n * make load request to managers out of tablet locator.  \r\n * /\r\n class XYZ {\r\n \r\n    // The following vrs should hang off the client context, just putting it here to make things shorter\r\n     ClientLoadRequestProcessor tabletLoader;\r\n     TabletLocator locator;\r\n \r\n     // Maps all given ranges to tablets with locations.  This would be used by batch scanners doing \r\n     // immediate scans.\r\n     private Map<...> lookupLocations(List<Range> ranges) {\r\n       while(true){\r\n         var hosted = new Map();\r\n         var unhosted = new Set<KeyExtent>();\r\n         \r\n         locator.locateTablets(ranges, hosted, unhosted);\r\n     \r\n         if(unhosted.isEmpty()) {\r\n            // all ranges were mapped to tablets with a location\r\n            return hosted;\r\n         }\r\n         \r\n         var tableState = getTableState();\r\n         \r\n        if(tableState == ONDEMAND) {\r\n\r\n         tabletLoader.loadTablets(unhosted);\r\n\r\n        } else if(tableState != ONLINE) {\r\n          // if table is offline or deleted then tablets will never come online.\r\n          //TODO invalidate cache if table deleted\r\n           throw new Exception();\r\n        }\r\n\r\n         // TODO sleep with backoff\r\n\r\n         // this will force the cache to reread these from the metadata table on the next request \r\n         locator.invalidateExtents(unhosted); \r\n       }\r\n     }\r\n }\r\n\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1478347120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1478432496","html_url":"https://github.com/apache/accumulo/issues/3238#issuecomment-1478432496","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3238","id":1478432496,"node_id":"IC_kwDOACaFSM5YHxbw","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-03-21T18:59:26Z","updated_at":"2023-03-21T18:59:26Z","author_association":"MEMBER","body":"Closing this for now. Doesn't seem like its worth changing at this time. This can be re-opened if it turns out to be more of a priority at somepoint.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1478432496/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]