[{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133586192","html_url":"https://github.com/apache/jena/issues/1324#issuecomment-1133586192","issue_url":"https://api.github.com/repos/apache/jena/issues/1324","id":1133586192,"node_id":"IC_kwDOAHF7Ec5DkScQ","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-21T09:17:12Z","updated_at":"2022-05-21T09:17:12Z","author_association":"MEMBER","body":"Yes, good to report. \r\n\r\nIt might be more of an issue in `INSERT DATA` although then there is usually the option of POSTing RDF.\r\n\r\nFuseki has \"Fuseki modules\" so adding a modified parser does not require a complete rebuild.\r\n\r\nOr in this case the plain [Jena initialization](https://jena.apache.org/documentation/notes/system-initialization.html) that can modify the server.\r\n\r\nThe lexical actions approach looks interesting.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133586192/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133811405","html_url":"https://github.com/apache/jena/pull/1307#issuecomment-1133811405","issue_url":"https://api.github.com/repos/apache/jena/issues/1307","id":1133811405,"node_id":"IC_kwDOAHF7Ec5DlJbN","user":{"login":"kinow","id":304786,"node_id":"MDQ6VXNlcjMwNDc4Ng==","avatar_url":"https://avatars.githubusercontent.com/u/304786?v=4","gravatar_id":"","url":"https://api.github.com/users/kinow","html_url":"https://github.com/kinow","followers_url":"https://api.github.com/users/kinow/followers","following_url":"https://api.github.com/users/kinow/following{/other_user}","gists_url":"https://api.github.com/users/kinow/gists{/gist_id}","starred_url":"https://api.github.com/users/kinow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kinow/subscriptions","organizations_url":"https://api.github.com/users/kinow/orgs","repos_url":"https://api.github.com/users/kinow/repos","events_url":"https://api.github.com/users/kinow/events{/privacy}","received_events_url":"https://api.github.com/users/kinow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-22T03:34:33Z","updated_at":"2022-05-22T03:34:33Z","author_association":"MEMBER","body":"\\- Me: _@afs do not worry, this update is going very well_\r\n\\- Also me: \r\n![GIFrecord_2022-05-22_153237](https://user-images.githubusercontent.com/304786/169677179-bc28fa5e-e796-4d97-90f1-fcd6778e276f.gif)\r\n\r\n:smile: \r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133811405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133832495","html_url":"https://github.com/apache/jena/issues/1306#issuecomment-1133832495","issue_url":"https://api.github.com/repos/apache/jena/issues/1306","id":1133832495,"node_id":"IC_kwDOAHF7Ec5DlOkv","user":{"login":"kinow","id":304786,"node_id":"MDQ6VXNlcjMwNDc4Ng==","avatar_url":"https://avatars.githubusercontent.com/u/304786?v=4","gravatar_id":"","url":"https://api.github.com/users/kinow","html_url":"https://github.com/kinow","followers_url":"https://api.github.com/users/kinow/followers","following_url":"https://api.github.com/users/kinow/following{/other_user}","gists_url":"https://api.github.com/users/kinow/gists{/gist_id}","starred_url":"https://api.github.com/users/kinow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kinow/subscriptions","organizations_url":"https://api.github.com/users/kinow/orgs","repos_url":"https://api.github.com/users/kinow/repos","events_url":"https://api.github.com/users/kinow/events{/privacy}","received_events_url":"https://api.github.com/users/kinow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-22T07:01:23Z","updated_at":"2022-05-22T07:01:23Z","author_association":"MEMBER","body":"Bug in the regex, some `b-form-*` elements were swallowed by the regex. Here's the current list:\r\n\r\n```\r\nkinow@ranma:~/Development/java/jena/jena/jena-fuseki2/jena-fuseki-ui$ grep -r -h -E \"<b\\-[^ >]+\" -o src | awk -F\" \" '{ print $1 }' | cut -c2- | sort | uniq -c | sort -h -r\r\n     11 b-form-group\r\n     10 b-nav-item\r\n      9 b-card-body\r\n      7 b-card-header\r\n      7 b-card\r\n      5 b-form-input\r\n      4 b-table\r\n      4 b-spinner\r\n      3 b-skeleton\r\n      3 b-popover\r\n      2 b-navbar-nav\r\n      2 b-nav\r\n      2 b-list-group-item\r\n      2 b-form-select\r\n      2 b-form\r\n      2 b-card-title\r\n      1 b-textarea\r\n      1 b-progress\r\n      1 b-pagination\r\n      1 b-overlay\r\n      1 b-navbar-toggle\r\n      1 b-navbar-brand\r\n      1 b-navbar\r\n      1 b-list-group\r\n      1 b-form-radio-group\r\n      1 b-collapse\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133832495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133833045","html_url":"https://github.com/apache/jena/pull/1307#issuecomment-1133833045","issue_url":"https://api.github.com/repos/apache/jena/issues/1307","id":1133833045,"node_id":"IC_kwDOAHF7Ec5DlOtV","user":{"login":"kinow","id":304786,"node_id":"MDQ6VXNlcjMwNDc4Ng==","avatar_url":"https://avatars.githubusercontent.com/u/304786?v=4","gravatar_id":"","url":"https://api.github.com/users/kinow","html_url":"https://github.com/kinow","followers_url":"https://api.github.com/users/kinow/followers","following_url":"https://api.github.com/users/kinow/following{/other_user}","gists_url":"https://api.github.com/users/kinow/gists{/gist_id}","starred_url":"https://api.github.com/users/kinow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kinow/subscriptions","organizations_url":"https://api.github.com/users/kinow/orgs","repos_url":"https://api.github.com/users/kinow/repos","events_url":"https://api.github.com/users/kinow/events{/privacy}","received_events_url":"https://api.github.com/users/kinow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-22T07:04:51Z","updated_at":"2022-05-22T07:04:51Z","author_association":"MEMBER","body":"Fixed a bug in the Edit, where a recent bug fix in the UI made it raise an error whenever we loaded the page. The issue was the order the components were loaded, so I just had to hook the reactivity another way (watch a property instead of doing when the component is created).","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133833045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133833368","html_url":"https://github.com/apache/jena/pull/1307#issuecomment-1133833368","issue_url":"https://api.github.com/repos/apache/jena/issues/1307","id":1133833368,"node_id":"IC_kwDOAHF7Ec5DlOyY","user":{"login":"kinow","id":304786,"node_id":"MDQ6VXNlcjMwNDc4Ng==","avatar_url":"https://avatars.githubusercontent.com/u/304786?v=4","gravatar_id":"","url":"https://api.github.com/users/kinow","html_url":"https://github.com/kinow","followers_url":"https://api.github.com/users/kinow/followers","following_url":"https://api.github.com/users/kinow/following{/other_user}","gists_url":"https://api.github.com/users/kinow/gists{/gist_id}","starred_url":"https://api.github.com/users/kinow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kinow/subscriptions","organizations_url":"https://api.github.com/users/kinow/orgs","repos_url":"https://api.github.com/users/kinow/repos","events_url":"https://api.github.com/users/kinow/events{/privacy}","received_events_url":"https://api.github.com/users/kinow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-22T07:06:51Z","updated_at":"2022-05-22T07:06:51Z","author_association":"MEMBER","body":"Added the CSS of Bootstrap 5 directly after the Bootstrap Vue. It looks like Bootstrap Vue was either using an older Bootstrap 5, or customizing some classes. Now the layout has a few problems, but we can fix it as we update the components.\r\n\r\nOnce all components here have been migrated to Bootstrap, my plan is to remove the CSS styles and JS dependencies of Bootstrap Vue in this PR, and then adjust the layout to match what we have (it will be slightly different, font color may be a darker black, corners a little more or less rounded, and other cosmetic changes due to changes in Bootstrap, but nothing major, in theory).","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133833368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133989297","html_url":"https://github.com/apache/jena/pull/1273#issuecomment-1133989297","issue_url":"https://api.github.com/repos/apache/jena/issues/1273","id":1133989297,"node_id":"IC_kwDOAHF7Ec5Dl02x","user":{"login":"arne-bdt","id":53625519,"node_id":"MDQ6VXNlcjUzNjI1NTE5","avatar_url":"https://avatars.githubusercontent.com/u/53625519?v=4","gravatar_id":"","url":"https://api.github.com/users/arne-bdt","html_url":"https://github.com/arne-bdt","followers_url":"https://api.github.com/users/arne-bdt/followers","following_url":"https://api.github.com/users/arne-bdt/following{/other_user}","gists_url":"https://api.github.com/users/arne-bdt/gists{/gist_id}","starred_url":"https://api.github.com/users/arne-bdt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arne-bdt/subscriptions","organizations_url":"https://api.github.com/users/arne-bdt/orgs","repos_url":"https://api.github.com/users/arne-bdt/repos","events_url":"https://api.github.com/users/arne-bdt/events{/privacy}","received_events_url":"https://api.github.com/users/arne-bdt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-22T21:40:12Z","updated_at":"2022-05-22T21:40:28Z","author_association":"CONTRIBUTOR","body":"@rvesse : Thank you very much for your motivating words. That was quite helpful, when I got frustrated in the last days.\r\nI updated the PR description, including the devastating Graph#delete benchmarks.\r\n\r\n> We can always iterate and improve on the implementation later, having the initial improvement is a good first step. Don't get too hung up on getting this perfect first time.\r\n\r\nYou defintivley got a point here. But I made a promise to the community and I want to keep it. Even though I was unsure if I could do it. In the last week I have regained a little of my confidence and hope that this time I have not missed anything.\r\n\r\nTo make Graph#delete work, I implemented a deviation of the HashedTripleBunch as [LowMemoryHashSet](https://github.com/arne-bdt/jena/blob/GraphExperiments/jena-core/src/main/java/org/apache/jena/mem2/generic/LowMemoryHashSet.java). With the right iterators and spliterators, it provides good retrieval performance. My removal algorithm is not optimized yet, and maybe I will leave it that way, because I want to have everything ready before the summer vacations.\r\n\r\nI'm eager to hear feedback on the benchmark tables once I've finished preparing them. Most recently, I kept discovering anomalies during the preparation that had escaped me before.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133989297/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133991576","html_url":"https://github.com/apache/jena/pull/1273#issuecomment-1133991576","issue_url":"https://api.github.com/repos/apache/jena/issues/1273","id":1133991576,"node_id":"IC_kwDOAHF7Ec5Dl1aY","user":{"login":"arne-bdt","id":53625519,"node_id":"MDQ6VXNlcjUzNjI1NTE5","avatar_url":"https://avatars.githubusercontent.com/u/53625519?v=4","gravatar_id":"","url":"https://api.github.com/users/arne-bdt","html_url":"https://github.com/arne-bdt","followers_url":"https://api.github.com/users/arne-bdt/followers","following_url":"https://api.github.com/users/arne-bdt/following{/other_user}","gists_url":"https://api.github.com/users/arne-bdt/gists{/gist_id}","starred_url":"https://api.github.com/users/arne-bdt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arne-bdt/subscriptions","organizations_url":"https://api.github.com/users/arne-bdt/orgs","repos_url":"https://api.github.com/users/arne-bdt/repos","events_url":"https://api.github.com/users/arne-bdt/events{/privacy}","received_events_url":"https://api.github.com/users/arne-bdt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-22T21:50:00Z","updated_at":"2022-05-22T21:50:00Z","author_association":"CONTRIBUTOR","body":"> If you point me at `ExtendedIterator.remove` in `org.apache.jena.sparql.*`, I'll check them and rewrite suspect ones.\r\n\r\nSorry, I didn't mean to point at anyone. It seems that it's pretty common in the core Java libraries to work with iterator#remove, and they have sophisticated solutions to support it. I didn't know this before and thought changing a collection during iteration was an anti-pattern. \r\n \r\n> If it easier for your board, the Software Grant is for a specific body of code.\r\n\r\nWe had a meeting with our lawyer who had some questions about our intentions. The general feedback was positive and he will give his final feedback shortly.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1133991576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1134460282","html_url":"https://github.com/apache/jena/pull/1331#issuecomment-1134460282","issue_url":"https://api.github.com/repos/apache/jena/issues/1331","id":1134460282,"node_id":"IC_kwDOAHF7Ec5Dnn16","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-23T09:59:19Z","updated_at":"2022-05-23T09:59:19Z","author_association":"MEMBER","body":"Tested.\r\nPlease remove the clandestine author tag :smile: in the commit log message.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1134460282/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1134461027","html_url":"https://github.com/apache/jena/issues/1334#issuecomment-1134461027","issue_url":"https://api.github.com/repos/apache/jena/issues/1334","id":1134461027,"node_id":"IC_kwDOAHF7Ec5DnoBj","user":{"login":"kinow","id":304786,"node_id":"MDQ6VXNlcjMwNDc4Ng==","avatar_url":"https://avatars.githubusercontent.com/u/304786?v=4","gravatar_id":"","url":"https://api.github.com/users/kinow","html_url":"https://github.com/kinow","followers_url":"https://api.github.com/users/kinow/followers","following_url":"https://api.github.com/users/kinow/following{/other_user}","gists_url":"https://api.github.com/users/kinow/gists{/gist_id}","starred_url":"https://api.github.com/users/kinow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kinow/subscriptions","organizations_url":"https://api.github.com/users/kinow/orgs","repos_url":"https://api.github.com/users/kinow/repos","events_url":"https://api.github.com/users/kinow/events{/privacy}","received_events_url":"https://api.github.com/users/kinow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-23T09:59:57Z","updated_at":"2022-05-23T09:59:57Z","author_association":"MEMBER","body":"I think the resizable query would be super easy.\r\n\r\nFor the tabs, I think YASGUI may support it… otherwise, that's something I added [in a previous project](https://github.com/cylc/cylc-ui/pull/325#issuecomment-562555293), using the same JS library that JupyterLab uses.\r\n\r\nOnce I have finished the migration to Vue 3 and the e2e tests I will take a look at these two features. Thanks @SimonBin !","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1134461027/reactions","total_count":3,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":2,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1135460741","html_url":"https://github.com/apache/jena/issues/1334#issuecomment-1135460741","issue_url":"https://api.github.com/repos/apache/jena/issues/1334","id":1135460741,"node_id":"IC_kwDOAHF7Ec5DrcGF","user":{"login":"LorenzBuehmann","id":976029,"node_id":"MDQ6VXNlcjk3NjAyOQ==","avatar_url":"https://avatars.githubusercontent.com/u/976029?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzBuehmann","html_url":"https://github.com/LorenzBuehmann","followers_url":"https://api.github.com/users/LorenzBuehmann/followers","following_url":"https://api.github.com/users/LorenzBuehmann/following{/other_user}","gists_url":"https://api.github.com/users/LorenzBuehmann/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzBuehmann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzBuehmann/subscriptions","organizations_url":"https://api.github.com/users/LorenzBuehmann/orgs","repos_url":"https://api.github.com/users/LorenzBuehmann/repos","events_url":"https://api.github.com/users/LorenzBuehmann/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzBuehmann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-24T06:25:26Z","updated_at":"2022-05-24T06:25:26Z","author_association":"CONTRIBUTOR","body":"> For the tabs, I think YASGUI may support it\r\n\r\nyes, YASGUI has already built-in support for it. see https://triply.cc/docs/yasgui-api#yasgui-api","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1135460741/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1135724654","html_url":"https://github.com/apache/jena/issues/1292#issuecomment-1135724654","issue_url":"https://api.github.com/repos/apache/jena/issues/1292","id":1135724654,"node_id":"IC_kwDOAHF7Ec5Dschu","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-24T10:19:53Z","updated_at":"2022-05-24T10:19:53Z","author_association":"MEMBER","body":"#1335 provides code to handle a 401 challenge for bearer tokens. It calls back into the application to get a token. ","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1135724654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1135727305","html_url":"https://github.com/apache/jena/issues/1292#issuecomment-1135727305","issue_url":"https://api.github.com/repos/apache/jena/issues/1292","id":1135727305,"node_id":"IC_kwDOAHF7Ec5DsdLJ","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-24T10:21:44Z","updated_at":"2022-05-24T10:23:16Z","author_association":"CONTRIBUTOR","body":"So I can confirm that the solution from more than an hour ago seems satisfactory to me - using an invalid token or none at all against a bearer-token-protected endpoint resulted in 401 rather than NPE:\r\n```\r\nCaused by: org.apache.jena.atlas.web.HttpException: 401 - Unauthorized\r\n\tat org.apache.jena.http.HttpLib.exception(HttpLib.java:231)\r\n\tat org.apache.jena.http.HttpLib.handleHttpStatusCode(HttpLib.java:161)\r\n```\r\nAndy just added a new PR like 30min ago which I haven't tried yet.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1135727305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1135851464","html_url":"https://github.com/apache/jena/issues/1292#issuecomment-1135851464","issue_url":"https://api.github.com/repos/apache/jena/issues/1292","id":1135851464,"node_id":"IC_kwDOAHF7Ec5Ds7fI","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-24T12:22:30Z","updated_at":"2022-05-24T12:26:24Z","author_association":"MEMBER","body":"Thanks.\r\n\r\nThe new commit adds some helper support (`AuthEnv.setBearerToken`, `AuthEnv.setBearerTokenProvider`) for ahead-of-time setting the token and challenge response handling.\r\n\r\nThe test suite covers requests with ahead of time registration of a token and with responses to a 401 challenge.\r\n\r\nAlmost everything to do with bearer auth involves application supplied code to access the deployment environment.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1135851464/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1135878365","html_url":"https://github.com/apache/jena/pull/1335#issuecomment-1135878365","issue_url":"https://api.github.com/repos/apache/jena/issues/1335","id":1135878365,"node_id":"IC_kwDOAHF7Ec5DtCDd","user":{"login":"rvesse","id":2104864,"node_id":"MDQ6VXNlcjIxMDQ4NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/2104864?v=4","gravatar_id":"","url":"https://api.github.com/users/rvesse","html_url":"https://github.com/rvesse","followers_url":"https://api.github.com/users/rvesse/followers","following_url":"https://api.github.com/users/rvesse/following{/other_user}","gists_url":"https://api.github.com/users/rvesse/gists{/gist_id}","starred_url":"https://api.github.com/users/rvesse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rvesse/subscriptions","organizations_url":"https://api.github.com/users/rvesse/orgs","repos_url":"https://api.github.com/users/rvesse/repos","events_url":"https://api.github.com/users/rvesse/events{/privacy}","received_events_url":"https://api.github.com/users/rvesse/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-24T12:48:00Z","updated_at":"2022-05-24T12:48:00Z","author_association":"MEMBER","body":"This PR is definitely a good first step and should get merged ASAP\r\n\r\n> The server side has some preparation work but again there has to be custom code somewhere to validate tokens in the deployment environment. This is probably better done with a Fuseki module - custom code for Fuseki main as released.\r\n\r\nI would somewhat disagree with this.  Certainly in the general case we probably can't support verifying every possible JWT that users might want to use (algorithms, key sources etc).\r\n\r\nBut for most everyday cases I think we could support a default verifier based on the following parameters that would be compatible with most OAuth2/OpenID Connect authentication providers:\r\n\r\n- A JWKS file/URL, where JWKS is a JSON Web Key Set per [RFC 7517 Section 5](https://datatracker.ietf.org/doc/html/rfc7517#section-5), from which the public keys for verifying a token can be obtained\r\n- Optionally the claim to obtain the username from.  This would default to `sub` but from practical experience the value of the `sub` field is often an internal system identifier rather than an actual username which is carried in a different claim.\r\n\r\nThis can be provided in a separate PR (and one which I'm happy to author myself)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1135878365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1136002474","html_url":"https://github.com/apache/jena/pull/1273#issuecomment-1136002474","issue_url":"https://api.github.com/repos/apache/jena/issues/1273","id":1136002474,"node_id":"IC_kwDOAHF7Ec5DtgWq","user":{"login":"arne-bdt","id":53625519,"node_id":"MDQ6VXNlcjUzNjI1NTE5","avatar_url":"https://avatars.githubusercontent.com/u/53625519?v=4","gravatar_id":"","url":"https://api.github.com/users/arne-bdt","html_url":"https://github.com/arne-bdt","followers_url":"https://api.github.com/users/arne-bdt/followers","following_url":"https://api.github.com/users/arne-bdt/following{/other_user}","gists_url":"https://api.github.com/users/arne-bdt/gists{/gist_id}","starred_url":"https://api.github.com/users/arne-bdt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arne-bdt/subscriptions","organizations_url":"https://api.github.com/users/arne-bdt/orgs","repos_url":"https://api.github.com/users/arne-bdt/repos","events_url":"https://api.github.com/users/arne-bdt/events{/privacy}","received_events_url":"https://api.github.com/users/arne-bdt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-24T14:27:23Z","updated_at":"2022-05-24T14:27:56Z","author_association":"CONTRIBUTOR","body":"Please comment on the new benchmarks (see PR-description above) for Graph#add, Graph#find, Graph#stream, memory consumption and Graph#contains!\r\n\r\nMy general conclusions are:\r\n- GraphMem2 is always faster at Graph#add\r\n- GraphMem2 is always faster at Graph#stream\r\n- GraphMem2 always requires less memory than GraphMem (but the relative savings are very different)\r\n- with GraphMem2 Graph#stream is (almost) always faster than Graph#find and should be prefered in the future\r\n- GraphMem2 is not as fast as GraphMem at Graph#delete, but in my opinion it should be fast enough\r\n\r\nThings I recognized:\r\n- only with the samle graph \"RealGrid_EQ.xml\" GraphMem2 is a bit slower at Graph#find -> I don´t know why\r\n- only on the small sample graphs \"cheese-0.1.ttl\" and \"pizza.owl.rft\" GraphMem2 is slower at Graph#contains -> I don´t know why\r\n- in the first iteration Graph#contains always takes pretty long with GraphMem2 -> the relative difference is striking\r\n- GraphMem practically does not support Graph#stream.parallel\r\n- Graph#stream.parallel has problems with small graphs, but that seems to be \"normal\", as it is the same with simple ArrayLists\r\n\r\nAre you missing any specific benchmarks or information? Am I missing something?\r\nDo these benchmarks look promising enough to justify replacing the current GraphMem? (cleaning up and writing more tests is still a lot of work and I don't want to waste my time)","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1136002474/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1136130703","html_url":"https://github.com/apache/jena/pull/1335#issuecomment-1136130703","issue_url":"https://api.github.com/repos/apache/jena/issues/1335","id":1136130703,"node_id":"IC_kwDOAHF7Ec5Dt_qP","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-24T16:17:17Z","updated_at":"2022-05-24T16:17:17Z","author_association":"MEMBER","body":"Environments where we might provide a solution are the major cloud providers.\r\n\r\nThe code can be delivered via a module that configures a servlet filter.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1136130703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1136370647","html_url":"https://github.com/apache/jena/issues/1336#issuecomment-1136370647","issue_url":"https://api.github.com/repos/apache/jena/issues/1336","id":1136370647,"node_id":"IC_kwDOAHF7Ec5Du6PX","user":{"login":"kinow","id":304786,"node_id":"MDQ6VXNlcjMwNDc4Ng==","avatar_url":"https://avatars.githubusercontent.com/u/304786?v=4","gravatar_id":"","url":"https://api.github.com/users/kinow","html_url":"https://github.com/kinow","followers_url":"https://api.github.com/users/kinow/followers","following_url":"https://api.github.com/users/kinow/following{/other_user}","gists_url":"https://api.github.com/users/kinow/gists{/gist_id}","starred_url":"https://api.github.com/users/kinow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kinow/subscriptions","organizations_url":"https://api.github.com/users/kinow/orgs","repos_url":"https://api.github.com/users/kinow/repos","events_url":"https://api.github.com/users/kinow/events{/privacy}","received_events_url":"https://api.github.com/users/kinow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-24T19:53:21Z","updated_at":"2022-05-24T19:53:21Z","author_association":"MEMBER","body":"Adding quotes should be ok and fix the issue here. Would you like to send a small pull request for that? Thanks!","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1136370647/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1136438196","html_url":"https://github.com/apache/jena/issues/1336#issuecomment-1136438196","issue_url":"https://api.github.com/repos/apache/jena/issues/1336","id":1136438196,"node_id":"IC_kwDOAHF7Ec5DvKu0","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-24T21:13:36Z","updated_at":"2022-05-24T21:23:36Z","author_association":"MEMBER","body":"There is a corner case : suppose \"$FUSEKI_HOME/log4j2.properties\" does not exist then LOGGING isn't set and $LOGGING expands on the command line to no argument. But if it is quoted, it puts in an empty string argument. And because it has no leading \"-\" it cuts off the command flags.\r\n\r\nIs there a way to put it on the command as a single argument if not the empty string and  nothing if empty.\r\n\r\nAn alternative is to to set LOGGING to some no-op like `-Dnosuch=novalue`.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1136438196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1136457402","html_url":"https://github.com/apache/jena/issues/1336#issuecomment-1136457402","issue_url":"https://api.github.com/repos/apache/jena/issues/1336","id":1136457402,"node_id":"IC_kwDOAHF7Ec5DvPa6","user":{"login":"swartik","id":6043991,"node_id":"MDQ6VXNlcjYwNDM5OTE=","avatar_url":"https://avatars.githubusercontent.com/u/6043991?v=4","gravatar_id":"","url":"https://api.github.com/users/swartik","html_url":"https://github.com/swartik","followers_url":"https://api.github.com/users/swartik/followers","following_url":"https://api.github.com/users/swartik/following{/other_user}","gists_url":"https://api.github.com/users/swartik/gists{/gist_id}","starred_url":"https://api.github.com/users/swartik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/swartik/subscriptions","organizations_url":"https://api.github.com/users/swartik/orgs","repos_url":"https://api.github.com/users/swartik/repos","events_url":"https://api.github.com/users/swartik/events{/privacy}","received_events_url":"https://api.github.com/users/swartik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-24T21:39:26Z","updated_at":"2022-05-24T21:39:26Z","author_association":"NONE","body":"Good point. I will come up with a solution that can't insert an empty argument.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1136457402/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137289102","html_url":"https://github.com/apache/jena/issues/1336#issuecomment-1137289102","issue_url":"https://api.github.com/repos/apache/jena/issues/1336","id":1137289102,"node_id":"IC_kwDOAHF7Ec5DyaeO","user":{"login":"swartik","id":6043991,"node_id":"MDQ6VXNlcjYwNDM5OTE=","avatar_url":"https://avatars.githubusercontent.com/u/6043991?v=4","gravatar_id":"","url":"https://api.github.com/users/swartik","html_url":"https://github.com/swartik","followers_url":"https://api.github.com/users/swartik/followers","following_url":"https://api.github.com/users/swartik/following{/other_user}","gists_url":"https://api.github.com/users/swartik/gists{/gist_id}","starred_url":"https://api.github.com/users/swartik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/swartik/subscriptions","organizations_url":"https://api.github.com/users/swartik/orgs","repos_url":"https://api.github.com/users/swartik/repos","events_url":"https://api.github.com/users/swartik/events{/privacy}","received_events_url":"https://api.github.com/users/swartik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-25T14:04:01Z","updated_at":"2022-05-25T14:04:01Z","author_association":"NONE","body":"I've pushed another commit that quotes LOGGING if it's not empty.\r\n\r\nThe code assumes LOGGING will expand to a single argument. That is,\r\n\r\n```shell\r\n$ export LOGGING='-Dlog4j.configurationFile=myconfig.properties -DmyLogVar=value'\r\n$ fuseki-server\r\n```\r\n\r\nwon't work. I assume this isn't a problem, because the argument could be provided in JVM_ARGS. Let me know if I'm mistaken.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137289102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137485615","html_url":"https://github.com/apache/jena/issues/1336#issuecomment-1137485615","issue_url":"https://api.github.com/repos/apache/jena/issues/1336","id":1137485615,"node_id":"IC_kwDOAHF7Ec5DzKcv","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-25T16:10:47Z","updated_at":"2022-05-25T16:10:47Z","author_association":"MEMBER","body":"No, shouldn't be a problem.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137485615/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137560459","html_url":"https://github.com/apache/jena/pull/1273#issuecomment-1137560459","issue_url":"https://api.github.com/repos/apache/jena/issues/1273","id":1137560459,"node_id":"IC_kwDOAHF7Ec5DzcuL","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-25T17:01:16Z","updated_at":"2022-05-25T17:01:16Z","author_association":"MEMBER","body":"Looking good!\r\n\r\nI agree with the conclusions. It is an in-memory graph - adding is more important than delete.\r\n\r\nThe only odd result - and this is not a concern - is that GraphMem2#stream is faster than GraphMem2#find. My experience has been that Java streams have overhead for setup (several objects). I haven't dug in the code to investigate, and havn't been into the old GraphMem code in depth quite awhile; for me, this is just an item of note, and not a concern. My only thought is to have index direct manipulation of ArrayLists and avoid list iterators, but that is messy code to do and IMO not necessary. If we encounter some unknown use case, we will then have better information to revise the code.\r\n\r\n> Do these benchmarks look promising enough to justify replacing the current GraphMem? \r\nYes, very much so.\r\n\r\nThe code works and is better on important cases - the smaller memory footprint is especially welcome.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137560459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137710213","html_url":"https://github.com/apache/jena/issues/1272#issuecomment-1137710213","issue_url":"https://api.github.com/repos/apache/jena/issues/1272","id":1137710213,"node_id":"IC_kwDOAHF7Ec5D0BSF","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-25T18:47:05Z","updated_at":"2022-05-25T18:49:18Z","author_association":"CONTRIBUTOR","body":"There is now a best-effort PR - however I am not sure about the SPARQL spec and whether this actually opens a bit of a pandora's box:\r\n\r\nThe sparql spec's [grammar](https://www.w3.org/TR/sparql11-query/#sparqlGrammar) allows for multiple prologues on each `Update` - and I am not sure whether they actually need to stay separate or whether only the last one takes precedence.\r\n\r\n```\r\n[29] | Update | ::= | Prologue ( Update1 ( ';' Update )? )?\r\n```\r\n\r\nIn any case, with Jena I get:\r\n```java\r\nUpdateRequest req = UpdateFactory.create(String.join(\";\\n\",\r\n  \"BASE <http://foo.foo/> INSERT { ?s ?s ?s } WHERE { BIND(IRI('s') AS ?s) }\",\r\n  \"BASE <http://bar.bar/> INSERT { ?x ?x ?x } WHERE { BIND(IRI('x') AS ?x) }\"));\r\nSystem.out.println(req);\r\n```\r\n\r\n```\r\nBASE    <http://bar.bar/>\r\n\r\nINSERT {\r\n  ?s ?s ?s .\r\n}\r\nWHERE\r\n  { BIND(iri(\"s\") AS ?s) } ;\r\nINSERT {\r\n  ?x ?x ?x .\r\n}\r\nWHERE\r\n  { BIND(iri(\"x\") AS ?x) }\r\n```\r\n\r\nNot sure if this is the correct semantics or whether jena's update model actually deviates from the spec here such that actually UpdateRequest would have to become a list of Updates without prologue, and every Update would have to extend Prologue.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137710213/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137758183","html_url":"https://github.com/apache/jena/issues/1272#issuecomment-1137758183","issue_url":"https://api.github.com/repos/apache/jena/issues/1272","id":1137758183,"node_id":"IC_kwDOAHF7Ec5D0M_n","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-25T19:17:34Z","updated_at":"2022-05-25T19:20:42Z","author_association":"MEMBER","body":"There isn't anything special about update: the prologue accumulates. For BASE that is \"replace\" although the new base URI is resolved against the previous one, starting from the file or URL the query is read from.\r\n\r\n```\r\nBASE <http://base/>\r\nPREFIX ex: <z1/z2/>\r\nBASE <y/>\r\nPREFIX : <a>\r\n\r\nSELECT (:123 AS ?X) (ex:456 AS ?Y)\r\nWHERE {}\r\n```\r\ngives `http://base/y/a123` ,`http://base/z1/z2/456`.\r\n\r\nRepeated prologues in update are just updating the active prefixes and base as the parser goes along.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137758183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137785955","html_url":"https://github.com/apache/jena/issues/1272#issuecomment-1137785955","issue_url":"https://api.github.com/repos/apache/jena/issues/1272","id":1137785955,"node_id":"IC_kwDOAHF7Ec5D0Txj","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-25T19:51:00Z","updated_at":"2022-05-25T19:51:00Z","author_association":"CONTRIBUTOR","body":"Ok, so that means that the IRI function then only sees the final accumulated base IRI (and not that of the respective Update operation)","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137785955/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137793761","html_url":"https://github.com/apache/jena/pull/1338#issuecomment-1137793761","issue_url":"https://api.github.com/repos/apache/jena/issues/1338","id":1137793761,"node_id":"IC_kwDOAHF7Ec5D0Vrh","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-25T20:00:23Z","updated_at":"2022-05-25T20:00:23Z","author_association":"CONTRIBUTOR","body":"So according to #1272 I yet need to add accumulation to UpdateExecDatasetBuilder","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137793761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137814567","html_url":"https://github.com/apache/jena/issues/1272#issuecomment-1137814567","issue_url":"https://api.github.com/repos/apache/jena/issues/1272","id":1137814567,"node_id":"IC_kwDOAHF7Ec5D0awn","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-25T20:25:02Z","updated_at":"2022-05-25T20:33:15Z","author_association":"MEMBER","body":"This is a dynamic vs static scoping issue. Is the base dynamically or staticly scoped to the IRI function? For query, the difference is not observable.\r\n\r\nMaking it whole update is dynamic, picking base up at runtime; that becomes \"last BASE\" through out the update.\r\n\r\nThe static style alternative is the syntax element for the IRI function could record the base at point of creation i.e. the IRI function captures the parser base, and not have context at execution time.\r\n\r\nI don't recall when I last saw a real-world update with split prologue.\r\n\r\nAdding updates together (\"fragments\") does suggest the static approach.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137814567/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137834831","html_url":"https://github.com/apache/jena/issues/1272#issuecomment-1137834831","issue_url":"https://api.github.com/repos/apache/jena/issues/1272","id":1137834831,"node_id":"IC_kwDOAHF7Ec5D0ftP","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-25T20:49:21Z","updated_at":"2022-05-25T20:49:29Z","author_association":"CONTRIBUTOR","body":"> Making it whole update is dynamic, picking base up at runtime; that becomes \"last BASE\" through out the update.\r\n\r\nThis is at least the easiest thing to implement for the time being - although the statically scoped interpretation is clearly the intuitive one. But the latter would require quite some refactoring.\r\n\r\n> I don't recall when I last saw a real-world update with split prologue.\r\n\r\nYes, the cheap solution would be to drop split prologues from the spec 😁 \r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137834831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137846903","html_url":"https://github.com/apache/jena/issues/1272#issuecomment-1137846903","issue_url":"https://api.github.com/repos/apache/jena/issues/1272","id":1137846903,"node_id":"IC_kwDOAHF7Ec5D0ip3","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-25T21:04:18Z","updated_at":"2022-05-25T21:04:18Z","author_association":"MEMBER","body":"\"static\" is a parser change - I'll try it out.\r\n\r\n(The fact Query and UpdateRequest extend Prologue was a mistake but we are where we are.)","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1137846903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1138270087","html_url":"https://github.com/apache/jena/pull/1331#issuecomment-1138270087","issue_url":"https://api.github.com/repos/apache/jena/issues/1331","id":1138270087,"node_id":"IC_kwDOAHF7Ec5D2J-H","user":{"login":"neumarcx","id":10403482,"node_id":"MDQ6VXNlcjEwNDAzNDgy","avatar_url":"https://avatars.githubusercontent.com/u/10403482?v=4","gravatar_id":"","url":"https://api.github.com/users/neumarcx","html_url":"https://github.com/neumarcx","followers_url":"https://api.github.com/users/neumarcx/followers","following_url":"https://api.github.com/users/neumarcx/following{/other_user}","gists_url":"https://api.github.com/users/neumarcx/gists{/gist_id}","starred_url":"https://api.github.com/users/neumarcx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neumarcx/subscriptions","organizations_url":"https://api.github.com/users/neumarcx/orgs","repos_url":"https://api.github.com/users/neumarcx/repos","events_url":"https://api.github.com/users/neumarcx/events{/privacy}","received_events_url":"https://api.github.com/users/neumarcx/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-26T07:58:51Z","updated_at":"2022-05-26T07:58:51Z","author_association":"CONTRIBUTOR","body":"> Tested. Please remove the clandestine author tag 😄 in the commit log message.\r\n\r\nI don't see the clandestine author tag\r\n\r\n> Tested. Please remove the clandestine author tag 😄 in the commit log message.\r\n\r\n@afs I don't see the clandestine author tag in the commit log message. what is it you are referring to?","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1138270087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1138283030","html_url":"https://github.com/apache/jena/pull/1331#issuecomment-1138283030","issue_url":"https://api.github.com/repos/apache/jena/issues/1331","id":1138283030,"node_id":"IC_kwDOAHF7Ec5D2NIW","user":{"login":"LorenzBuehmann","id":976029,"node_id":"MDQ6VXNlcjk3NjAyOQ==","avatar_url":"https://avatars.githubusercontent.com/u/976029?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzBuehmann","html_url":"https://github.com/LorenzBuehmann","followers_url":"https://api.github.com/users/LorenzBuehmann/followers","following_url":"https://api.github.com/users/LorenzBuehmann/following{/other_user}","gists_url":"https://api.github.com/users/LorenzBuehmann/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzBuehmann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzBuehmann/subscriptions","organizations_url":"https://api.github.com/users/LorenzBuehmann/orgs","repos_url":"https://api.github.com/users/LorenzBuehmann/repos","events_url":"https://api.github.com/users/LorenzBuehmann/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzBuehmann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-26T08:14:03Z","updated_at":"2022-05-26T08:14:03Z","author_association":"CONTRIBUTOR","body":"@neumarcx I fixed it already and used a different commit message now, that's why you can't see it anymore","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1138283030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1138335007","html_url":"https://github.com/apache/jena/pull/1331#issuecomment-1138335007","issue_url":"https://api.github.com/repos/apache/jena/issues/1331","id":1138335007,"node_id":"IC_kwDOAHF7Ec5D2Z0f","user":{"login":"neumarcx","id":10403482,"node_id":"MDQ6VXNlcjEwNDAzNDgy","avatar_url":"https://avatars.githubusercontent.com/u/10403482?v=4","gravatar_id":"","url":"https://api.github.com/users/neumarcx","html_url":"https://github.com/neumarcx","followers_url":"https://api.github.com/users/neumarcx/followers","following_url":"https://api.github.com/users/neumarcx/following{/other_user}","gists_url":"https://api.github.com/users/neumarcx/gists{/gist_id}","starred_url":"https://api.github.com/users/neumarcx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neumarcx/subscriptions","organizations_url":"https://api.github.com/users/neumarcx/orgs","repos_url":"https://api.github.com/users/neumarcx/repos","events_url":"https://api.github.com/users/neumarcx/events{/privacy}","received_events_url":"https://api.github.com/users/neumarcx/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-26T09:19:45Z","updated_at":"2022-05-26T09:19:45Z","author_association":"CONTRIBUTOR","body":"👍\n\nOn Thu, May 26, 2022 at 9:14 AM Lorenz Bühmann ***@***.***>\nwrote:\n\n> @neumarcx <https://github.com/neumarcx> I fixed it already and used a\n> different commit message now, that's why you can't see it anymore\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/jena/pull/1331#issuecomment-1138283030>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACPL5GXLDHE2PNUDGWKBPH3VL4XFNANCNFSM5WO45GPQ>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n\n\n-- \n\n\n---\nMarco Neumann\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1138335007/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1138699592","html_url":"https://github.com/apache/jena/pull/1338#issuecomment-1138699592","issue_url":"https://api.github.com/repos/apache/jena/issues/1338","id":1138699592,"node_id":"IC_kwDOAHF7Ec5D3y1I","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-26T15:27:00Z","updated_at":"2022-05-26T15:27:00Z","author_association":"CONTRIBUTOR","body":"@afs If you are refactoring parts of the Update APIs then I wait for your changes and see whether this PR is then still relevant.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1138699592/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1139494739","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1139494739","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1139494739,"node_id":"IC_kwDOAHF7Ec5D609T","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-27T10:34:10Z","updated_at":"2022-05-27T10:34:30Z","author_association":"CONTRIBUTOR","body":"Updated title because it turned that the bulk retrieval has to be cache-aware if caching is desired. The PR draft already includes a fully streaming caching system that \"de-partitions\" bulk retrieval responses in order to cache ranges of data on a per-input-binding basis. Conversely, creation of the bulk request considers the ranges of data already present in the cache.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1139494739/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140053318","html_url":"https://github.com/apache/jena/issues/1336#issuecomment-1140053318","issue_url":"https://api.github.com/repos/apache/jena/issues/1336","id":1140053318,"node_id":"IC_kwDOAHF7Ec5D89VG","user":{"login":"swartik","id":6043991,"node_id":"MDQ6VXNlcjYwNDM5OTE=","avatar_url":"https://avatars.githubusercontent.com/u/6043991?v=4","gravatar_id":"","url":"https://api.github.com/users/swartik","html_url":"https://github.com/swartik","followers_url":"https://api.github.com/users/swartik/followers","following_url":"https://api.github.com/users/swartik/following{/other_user}","gists_url":"https://api.github.com/users/swartik/gists{/gist_id}","starred_url":"https://api.github.com/users/swartik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/swartik/subscriptions","organizations_url":"https://api.github.com/users/swartik/orgs","repos_url":"https://api.github.com/users/swartik/repos","events_url":"https://api.github.com/users/swartik/events{/privacy}","received_events_url":"https://api.github.com/users/swartik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-27T21:30:05Z","updated_at":"2022-05-27T21:30:05Z","author_association":"NONE","body":"I think we're good to go, then. Let me know if there's anything else you need from me.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140053318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140230093","html_url":"https://github.com/apache/jena/issues/1272#issuecomment-1140230093","issue_url":"https://api.github.com/repos/apache/jena/issues/1272","id":1140230093,"node_id":"IC_kwDOAHF7Ec5D9ofN","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-28T10:22:42Z","updated_at":"2022-05-28T15:32:03Z","author_association":"MEMBER","body":"#1343 does static scoping.\r\n\r\nIt makes these \r\n```\r\nBIND(<x> as ?X1)\r\nBIND(IRI(\"<x>\") as ?X2)\r\n```\r\nin an update both produce the same IRI.\r\n\r\nThe first resolves the relative IRI by parsing, the second takes the base in scope of the parser captured bat parse time and applied it at runtime.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140230093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140230675","html_url":"https://github.com/apache/jena/pull/1338#issuecomment-1140230675","issue_url":"https://api.github.com/repos/apache/jena/issues/1338","id":1140230675,"node_id":"IC_kwDOAHF7Ec5D9ooT","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-28T10:26:15Z","updated_at":"2022-05-28T10:26:15Z","author_association":"MEMBER","body":"#1343 shows static scoping.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140230675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140231213","html_url":"https://github.com/apache/jena/pull/1343#issuecomment-1140231213","issue_url":"https://api.github.com/repos/apache/jena/issues/1343","id":1140231213,"node_id":"IC_kwDOAHF7Ec5D9owt","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-28T10:29:22Z","updated_at":"2022-05-28T10:29:22Z","author_association":"MEMBER","body":"There is one wrinkle to sort out. SSE parsers in two steps: text to general expression and general expression to update.\r\n\r\nThere is compatibility code in the PR.\r\n\r\nIdeally, `(iri ...)` would take a new, optional arg to be the base. That said, SSE+updates isn't very common and SSE is primarily for Jena-dev use, it's just grown / been spotted.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140231213/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140371448","html_url":"https://github.com/apache/jena/pull/1307#issuecomment-1140371448","issue_url":"https://api.github.com/repos/apache/jena/issues/1307","id":1140371448,"node_id":"IC_kwDOAHF7Ec5D-K_4","user":{"login":"kinow","id":304786,"node_id":"MDQ6VXNlcjMwNDc4Ng==","avatar_url":"https://avatars.githubusercontent.com/u/304786?v=4","gravatar_id":"","url":"https://api.github.com/users/kinow","html_url":"https://github.com/kinow","followers_url":"https://api.github.com/users/kinow/followers","following_url":"https://api.github.com/users/kinow/following{/other_user}","gists_url":"https://api.github.com/users/kinow/gists{/gist_id}","starred_url":"https://api.github.com/users/kinow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kinow/subscriptions","organizations_url":"https://api.github.com/users/kinow/orgs","repos_url":"https://api.github.com/users/kinow/repos","events_url":"https://api.github.com/users/kinow/events{/privacy}","received_events_url":"https://api.github.com/users/kinow/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-29T03:48:34Z","updated_at":"2022-05-29T03:48:34Z","author_association":"MEMBER","body":"`form-group` was dropped in 5.2.\r\n![image](https://user-images.githubusercontent.com/304786/170851205-71d95ade-a7d5-4786-a449-a5cc50ffbd17.png)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140371448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140445468","html_url":"https://github.com/apache/jena/pull/1343#issuecomment-1140445468","issue_url":"https://api.github.com/repos/apache/jena/issues/1343","id":1140445468,"node_id":"IC_kwDOAHF7Ec5D-dEc","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-29T13:06:06Z","updated_at":"2022-05-29T13:08:57Z","author_association":"CONTRIBUTOR","body":"Just a minor remark: `E_IRI` should have a public getBase() method so it can be accessed during expression traversal - other than that the solution to just make the base URL an attribute (much like a hidden argument) is certainly simpler than having to rely on the execution scope :)","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140445468/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140449274","html_url":"https://github.com/apache/jena/pull/1343#issuecomment-1140449274","issue_url":"https://api.github.com/repos/apache/jena/issues/1343","id":1140449274,"node_id":"IC_kwDOAHF7Ec5D-d_6","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-29T13:26:23Z","updated_at":"2022-05-29T13:26:23Z","author_association":"MEMBER","body":"> Just a minor remark: E_IRI should have a public getBase() method\r\n\r\nyes, and more! The second commit add a 2-argument form `IRI(baseExpr, rel)`. For update, I think that this general form might be useful for translating data. Experimental.\r\n\r\nThat'll need accessors to the state of E_IRI that \"ExprFunction1\" does not expose for printing (to SSE and to SPARQL) - WIP.\r\n\r\nWhether it is better to be an \"ExprFunction2\" or \"ExprFunctionN\" isn't clear. `IRI` is still primarily a one-argument function. because it retains how it was setup (implicit base or explicit base), it isn't a true \"ExprFunction2\" either.\r\n\r\n(And some of this code structure is really old!)\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140449274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140456487","html_url":"https://github.com/apache/jena/pull/1337#issuecomment-1140456487","issue_url":"https://api.github.com/repos/apache/jena/issues/1337","id":1140456487,"node_id":"IC_kwDOAHF7Ec5D-fwn","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-29T14:04:46Z","updated_at":"2022-06-01T14:57:27Z","author_association":"MEMBER","body":"Hi @swartik -- a couple of problems:\r\n\r\n* It's a sh script, not a bash script so `@Q` is not available. (We can switch to bash.)\r\n* if it is bash, the substitution does not seem to work (reading the man age, I think it should but it doesn't. Bash version 5.1.16).\r\n \r\nHow about this approach:\r\n\r\n```\r\nif [ -n \"$LOGGING\" ]\r\nthen\r\n    exec \"$JAVA\" $JVM_ARGS \"$LOGGING\" -cp \"$CP\" org.apache.jena.fuseki.cmd.FusekiCmd \"$@\"\r\nelse\r\n    exec \"$JAVA\" $JVM_ARGS -cp \"$CP\" org.apache.jena.fuseki.cmd.FusekiCmd \"$@\"\r\nfi\r\n```\r\n\r\nI've tested it with FUSEKI_HOME set to a directory path with a space in it. Could you confirm please? What in the path does your setup have the space?\r\n\r\nThere is an unrelated problem with some cases of FUSEKI_BASE including a path with a space. This is a separate issue not related to the script.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1140456487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1141857920","html_url":"https://github.com/apache/jena/pull/1340#issuecomment-1141857920","issue_url":"https://api.github.com/repos/apache/jena/issues/1340","id":1141857920,"node_id":"IC_kwDOAHF7Ec5ED16A","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-31T08:52:04Z","updated_at":"2022-05-31T08:52:04Z","author_association":"MEMBER","body":"Discussion :: [JENA-2331](https://issues.apache.org/jira/browse/JENA-2331).","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1141857920/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1142038151","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1142038151","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1142038151,"node_id":"IC_kwDOAHF7Ec5EEh6H","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-31T11:57:02Z","updated_at":"2022-05-31T15:25:54Z","author_association":"CONTRIBUTOR","body":"In the process of implementing this bulk retrieval and caching I have extended the custom service executor system such that the main contribution of this PR (i.e. bulk processing and caching) can be added as a plugin with no strong ties to ARQ.\r\n\r\nI suppose that these revisions could/should eventually be moved to their own separate issue and PR but because they happened in the context of this issue I am writing this here for now.\r\nI am proposing the following revisions and extensions:\r\n\r\n* The original ServiceExectorFactory continues to exist with the same signature but is now called ServiceExecutor. The rationale is that an executor is already a factory for executions.\r\n```java\r\npublic interface ServiceExecutor {\r\n  ServiceExecution createExecution(OpService opExecute, OpService original, Binding binding,\r\n    ExecutionContext execCxt);\r\n}\r\n```\r\n\r\n* There is now a new ChainingServiceExectutor which enables implementing chains (much like jetty servlet filters):\r\n```java\r\npublic interface ChainingServiceExecutor {\r\n  ServiceExecution createExecution(OpService opExecute, OpService opOriginal, Binding binding,\r\n    ExecutionContext execCxt, ServiceExecutor chain);\r\n}\r\n```\r\n\r\nThis allows for passing modified/rewritten ops down the chain - which is not possible with the ServiceExecutor interface.\r\nThe `ServiceExecutorRegistry` still exists but now internally holds `ChainingServiceExecutor` instances rather than `ServiceExecutor`.\r\nThere is `ServiceExecutorOverRegistry` which abstracts the existing `ServiceExecutorRegistry`.\r\n\r\n* The same concept is now repeated for bulk processing:\r\n```java\r\npublic interface ServiceExecutorBulk {\r\n  ServiceExecution createExecution(OpService opService, QueryIterator input, ExecutionContext execCxt);\r\n}\r\n\r\npublic interface ChainingServiceExecutorBulk {\r\n  ServiceExecution createExecution(OpService opService, QueryIterator input, ExecutionContext execCxt,\r\n    ServiceExecutorBulk chain);\r\n}\r\n```\r\n* There is now a new `ServiceExecutorRegistryBulk` which is essentially the same as `ServiceExecutorRegistry` but with an internal list of `ChainingServiceExecutorBulk` instances.\r\n\r\n* By default, `ServiceExecutorRegistryBulk` is initialized with an `ChainingServiceExecutorBulkToSingle` instance which bridges to the non-bulk registry.\r\n\r\n* `QueryIterService` is superseded by `QueryIterServiceBulk`which essentially only delegates to the bulk registry:\r\n```java\r\n    @Override\r\n    protected QueryIterator nextStage(QueryIterator input) {\r\n        ...\r\n    \tServiceExecutorRegistryBulk registry = ServiceExecutorRegistryBulk.get(cxt);\r\n    \tServiceExecutor seviceExecutor = new ServiceExecutorBulkOverRegistry(registry);\r\n    \tServiceExecution svcExec = serviceExecutor.createExecution(opService, input, execCxt);\r\n    \tQueryIterator result = svcExec.exec();\r\n    \treturn result;\r\n    }\r\n```\r\n\r\nThis way, caching and bulk retrieval system can be plugged in using\r\n```\r\nServiceExecutorRegistryBulk.get().chain(new ChainingServiceExecutorBulkSpecial());\r\n```\r\n\r\n[ChainingServiceExecutorBulkSpecial](https://github.com/Aklakan/jena/blob/f85548c488c7f7002eb30943cd7469aa84a6c22b/jena-arq/src/main/java/org/apache/jena/sparql/service/impl/ChainingServiceExecutorBulkSpecial.java#L68) addes support for special service iris such as\r\n```\r\nSERVICE <cache:bulk+20:correlate:http://dbpedia.org/sparql> { }\r\n``` \r\nor equivalently\r\n```\r\nSERVICE <cache:bulk+20:correlate> { SERVICE <http://dbpedia.org/sparql> { } }\r\n```\r\nwhere:\r\n* bulk+20 requests a bulk size of 20 bindings\r\n* cache enables caching\r\n* correlate performs a naive `Rename.reverseVarRename` such that substitution with the outer variables (regardless of scoping) can be performed. It allows for\r\n```sparql\r\nBIND(<s> AS ?s)\r\nSERVICE <correlate:http://foo/sparql> { {\r\n  SELECT ?x { { BIND(?s AS ?x) } UNION { BIND(?s AS ?y) } \r\n} }\r\n```\r\nto yield bindings where ?x and ?y are bound to `<s>`.\r\n\r\n(There is a caveat that this only works reliably if none of the joining variables is projected because otherwise VarFinder may prevent conversion of OpJoin to OpSequence).\r\n\r\nWith the revised plugin system it is easy to add/remove this special functionality or add more custom ones.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1142038151/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1142042268","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1142042268","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1142042268,"node_id":"IC_kwDOAHF7Ec5EEi6c","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-31T12:01:28Z","updated_at":"2022-05-31T12:01:28Z","author_association":"MEMBER","body":"There are no tests covering the assembler change nor the functionality change.\r\n\r\nExperts - what is the impact of no index on performance?","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1142042268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1142423413","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1142423413","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1142423413,"node_id":"IC_kwDOAHF7Ec5EF_91","user":{"login":"vtermanis","id":6112689,"node_id":"MDQ6VXNlcjYxMTI2ODk=","avatar_url":"https://avatars.githubusercontent.com/u/6112689?v=4","gravatar_id":"","url":"https://api.github.com/users/vtermanis","html_url":"https://github.com/vtermanis","followers_url":"https://api.github.com/users/vtermanis/followers","following_url":"https://api.github.com/users/vtermanis/following{/other_user}","gists_url":"https://api.github.com/users/vtermanis/gists{/gist_id}","starred_url":"https://api.github.com/users/vtermanis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vtermanis/subscriptions","organizations_url":"https://api.github.com/users/vtermanis/orgs","repos_url":"https://api.github.com/users/vtermanis/repos","events_url":"https://api.github.com/users/vtermanis/events{/privacy}","received_events_url":"https://api.github.com/users/vtermanis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-31T17:37:40Z","updated_at":"2022-05-31T17:37:40Z","author_association":"NONE","body":"> There are no tests covering the assembler change nor the functionality change.\r\n\r\nI did look to see what there was, but like you say, the assembler part is not currently tested. For the assembler, I presume you mean something [like this](https://github.com/apache/jena/blob/main/jena-permissions/src/test/java/org/apache/jena/permissions/SecuredAssemblerTest.java)? Or would it be more appropriate to explicitly call the updated assembler's `createDataset` and inspect the output (e.g. dataset has no spatial index in its context)?","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1142423413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1142551419","html_url":"https://github.com/apache/jena/pull/1343#issuecomment-1142551419","issue_url":"https://api.github.com/repos/apache/jena/issues/1343","id":1142551419,"node_id":"IC_kwDOAHF7Ec5EGfN7","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-31T19:19:38Z","updated_at":"2022-05-31T22:14:00Z","author_association":"MEMBER","body":"There are now 2 IRI functions: the standard \"E_IRI\" takes on argument and records the pasrer base and \"E_IRI2\" which has two arguments - `IRI(base, rel)` - and because `base` can be relative, it also records the parser base.\r\n\r\nThese become functions `(iri ...)` and `(iri2 ...)`.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1142551419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1142552968","html_url":"https://github.com/apache/jena/issues/1272#issuecomment-1142552968","issue_url":"https://api.github.com/repos/apache/jena/issues/1272","id":1142552968,"node_id":"IC_kwDOAHF7Ec5EGfmI","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-31T19:21:33Z","updated_at":"2022-05-31T19:22:09Z","author_association":"MEMBER","body":"PR #1343 provides static scoping and includes an extension which is \"IRI\" with a provided base `IRI(base, rel)`.\r\n\r\nThere are now 2 IRI \"E_\" functions: the standard \"E_IRI\" takes on argument and records the pasrer base and \"E_IRI2\" which has two arguments - (base, rel) - and because base can be relative, it also records the parser base.\r\n\r\nThese become functions `(iri)` and `(iri2)` in the algebra.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1142552968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1142575131","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1142575131","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1142575131,"node_id":"IC_kwDOAHF7Ec5EGlAb","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-05-31T19:44:50Z","updated_at":"2022-05-31T19:44:50Z","author_association":"MEMBER","body":"Whatever works for the GeoSPARQL interest community.\r\n\r\nA way like [Fuseki main :: TestSecurityConfig](https://github.com/apache/jena/blob/main/jena-fuseki2/jena-fuseki-main/src/test/java/org/apache/jena/fuseki/main/access/TestSecurityConfig.java) is launching a server with a configuration and sending requests for testing.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1142575131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143493570","html_url":"https://github.com/apache/jena/pull/1340#issuecomment-1143493570","issue_url":"https://api.github.com/repos/apache/jena/issues/1340","id":1143493570,"node_id":"IC_kwDOAHF7Ec5EKFPC","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-01T11:39:06Z","updated_at":"2022-06-01T11:39:06Z","author_association":"MEMBER","body":"There are three commits. \r\n\r\nOnly \"JENA-2331: isolate setting of XMLInputFactory properties\" makes sense for the long term history in git. One isn't relevant. Could you squash this PR please?\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143493570/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143513890","html_url":"https://github.com/apache/jena/issues/1272#issuecomment-1143513890","issue_url":"https://api.github.com/repos/apache/jena/issues/1272","id":1143513890,"node_id":"IC_kwDOAHF7Ec5EKKMi","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-01T11:58:45Z","updated_at":"2022-06-01T12:01:01Z","author_association":"CONTRIBUTOR","body":"Seems very reasonable to me.\r\n\r\nThough - while we are at it - I wouldn't be opposed to an IRI function that can yield relative IRIs \"as given\" - e.g. not resolving `../../common/schema.rdf` against the parser base.\r\nIt's somehow odd that one can put a turtle file on the Web with relative IRIs pointing e.g. to resources such as downloads or ontology files - but there is no way to create such relative IRIs with SPARQL.\r\nUsing turtle with `RIOT.symTurtleOmitBase` is not really a solution because of iris with \"..\" are always resolved (iirc) so the \"..\" gets lost.\r\n\r\nSo maybe E_IRI2 could have an optional third boolean parameter whether to resolve against the parser base if the given base is relative which defaults to true.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143513890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143517830","html_url":"https://github.com/apache/jena/pull/1340#issuecomment-1143517830","issue_url":"https://api.github.com/repos/apache/jena/issues/1340","id":1143517830,"node_id":"IC_kwDOAHF7Ec5EKLKG","user":{"login":"bvosburgh-tq","id":87335518,"node_id":"MDQ6VXNlcjg3MzM1NTE4","avatar_url":"https://avatars.githubusercontent.com/u/87335518?v=4","gravatar_id":"","url":"https://api.github.com/users/bvosburgh-tq","html_url":"https://github.com/bvosburgh-tq","followers_url":"https://api.github.com/users/bvosburgh-tq/followers","following_url":"https://api.github.com/users/bvosburgh-tq/following{/other_user}","gists_url":"https://api.github.com/users/bvosburgh-tq/gists{/gist_id}","starred_url":"https://api.github.com/users/bvosburgh-tq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bvosburgh-tq/subscriptions","organizations_url":"https://api.github.com/users/bvosburgh-tq/orgs","repos_url":"https://api.github.com/users/bvosburgh-tq/repos","events_url":"https://api.github.com/users/bvosburgh-tq/events{/privacy}","received_events_url":"https://api.github.com/users/bvosburgh-tq/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-01T12:02:40Z","updated_at":"2022-06-01T12:02:40Z","author_association":"CONTRIBUTOR","body":"> Only \"JENA-2331: isolate setting of XMLInputFactory properties\" makes sense for the long term history in git. One isn't relevant. Could you squash this PR please?\r\n\r\nDone.\r\n\r\nThanks, Andy!","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143517830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143615496","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1143615496","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1143615496,"node_id":"IC_kwDOAHF7Ec5EKjAI","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-01T13:30:09Z","updated_at":"2022-06-01T13:34:11Z","author_association":"CONTRIBUTOR","body":"A screenshot with cache and correlate in action to give some impression about the current state of the implementation.\r\n* The first service fetches an osm id from wikidata\r\n* The second service fetches a polygon from our nominatim service - even though its just a block of BIND statements this works because of correlate\r\n* The third part fetches overlapping regions for the nominatim polygon. It is a union of several fetches and again this works only because of correlate.\r\nBecause of the caching a repeated execution is instant without a remote request.\r\n\r\n![image](https://user-images.githubusercontent.com/839608/171416044-d09bf0dc-0c2f-4fe4-8cd1-8b89e9f754e3.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143615496/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143631502","html_url":"https://github.com/apache/jena/issues/1272#issuecomment-1143631502","issue_url":"https://api.github.com/repos/apache/jena/issues/1272","id":1143631502,"node_id":"IC_kwDOAHF7Ec5EKm6O","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-01T13:43:43Z","updated_at":"2022-06-01T13:43:43Z","author_association":"MEMBER","body":"Let's do one thing at a time.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143631502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143693766","html_url":"https://github.com/apache/jena/pull/1338#issuecomment-1143693766","issue_url":"https://api.github.com/repos/apache/jena/issues/1338","id":1143693766,"node_id":"IC_kwDOAHF7Ec5EK2HG","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-01T14:36:09Z","updated_at":"2022-06-01T14:36:09Z","author_association":"MEMBER","body":"Done by PR #1343 instead (static scoping).","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143693766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143707947","html_url":"https://github.com/apache/jena/pull/1315#issuecomment-1143707947","issue_url":"https://api.github.com/repos/apache/jena/issues/1315","id":1143707947,"node_id":"IC_kwDOAHF7Ec5EK5kr","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-01T14:48:16Z","updated_at":"2022-06-01T14:56:07Z","author_association":"MEMBER","body":"This is growing a lot of functionality in the core of ARQ. I am concerned that increasing specific code is creeping into the general engine.\r\n\r\nIt is changing QueryIterRepeatApply and OpExecutor.\r\n\r\nCould it be a separate system that uses the service extensibility mechanism? This would also mean development is not on a Jena PR - it can evolve independently of the Jena release cycle.\r\n\r\nCould it do a simple case? Reading a few input iterator bindings (say up to 10) and issuing a compound SERVICE for 10 items. Repeat. This is a reduction of calls by x10.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143707947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143806536","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1143806536","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1143806536,"node_id":"IC_kwDOAHF7Ec5ELRpI","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-01T16:09:41Z","updated_at":"2022-06-01T16:09:41Z","author_association":"MEMBER","body":"> This allows for passing modified/rewritten ops down the chain - which is not possible with the ServiceExecutor interface.\r\n\r\nPut any state the processing needs as an object in the context carried by the execution context.\r\n\r\nThis has per execution scope.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143806536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143889131","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1143889131","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1143889131,"node_id":"IC_kwDOAHF7Ec5ELlzr","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-01T17:08:39Z","updated_at":"2022-06-01T17:12:19Z","author_association":"CONTRIBUTOR","body":"Yes, that's what I am doing already for configuration of bulk sizes or caching as in [ChainingServiceExecutorBulkSpecial.java#L132](https://github.com/Aklakan/jena/blob/322c4d9c9873e867bf9c986951d468edf05b9ee0/jena-arq/src/main/java/org/apache/jena/sparql/service/impl/ChainingServiceExecutorBulkSpecial.java#L132).\r\n\r\nWhat I meant is, that the chaining API allows for passing arguments to whatever service executors remain in the two service executor registries (bulk and non-bulk).\r\n\r\nI added a new example to the [CustomServiceExecutor examples](https://github.com/Aklakan/jena/blob/gh-1314/jena-examples/src/main/java/arq/examples/service/CustomServiceExecutor.java#L107) which uses the chaining API - just below the non-chaining version. In summary:\r\n\r\n\"Old\" approach:\r\n```java\r\nServiceExecutorFactory relaySef = (opExecute, original, binding, execCxt) -> {\r\n        if (opExecute.getService().equals(WIKIDATA)) {\r\n            opExecute = new OpService(DBPEDIA, opExecute.getSubOp(), opExecute.getSilent());\r\n            // ISSUE: We cannot easily forward the new OpExecute to the remainder of the\r\n            // registered service executors. We would have to check at which index 'relaySef'\r\n            // is registered and then manually do the forwarding\r\n            // So for simplicity we just invoked the httpService directly - bypassing anything\r\n            // in the executor registry\r\n            return ServiceExecutorRegistry.httpService.createExecutor(opExecute, original, binding, execCxt);\r\n        }\r\n        return null;\r\n    };\r\n```\r\n\r\nImproved API:\r\n```java\r\nChainingServiceExecutor relaySef = (opExecute, original, binding, execCxt, chain) -> {\r\n    if (opExecute.getService().equals(WIKIDATA)) {\r\n        opExecute = new OpService(DBPEDIA, opExecute.getSubOp(), opExecute.getSilent());\r\n    }\r\n    // The remainder of the registry is nicely taken into account\r\n    return chain.createExecution(opExecute, original, binding, execCxt);\r\n};\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1143889131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144053575","html_url":"https://github.com/apache/jena/issues/1272#issuecomment-1144053575","issue_url":"https://api.github.com/repos/apache/jena/issues/1272","id":1144053575,"node_id":"IC_kwDOAHF7Ec5EMN9H","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-01T19:34:37Z","updated_at":"2022-06-01T19:34:37Z","author_association":"MEMBER","body":"Closed by PR #1343.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144053575/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144119748","html_url":"https://github.com/apache/jena/pull/1358#issuecomment-1144119748","issue_url":"https://api.github.com/repos/apache/jena/issues/1358","id":1144119748,"node_id":"IC_kwDOAHF7Ec5EMeHE","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-01T20:48:20Z","updated_at":"2022-06-01T20:48:20Z","author_association":"MEMBER","body":"Ghosts!","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144119748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144120452","html_url":"https://github.com/apache/jena/issues/1357#issuecomment-1144120452","issue_url":"https://api.github.com/repos/apache/jena/issues/1357","id":1144120452,"node_id":"IC_kwDOAHF7Ec5EMeSE","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-01T20:49:12Z","updated_at":"2022-06-01T20:49:12Z","author_association":"MEMBER","body":"Addressed by #1358.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144120452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144683643","html_url":"https://github.com/apache/jena/pull/1315#issuecomment-1144683643","issue_url":"https://api.github.com/repos/apache/jena/issues/1315","id":1144683643,"node_id":"IC_kwDOAHF7Ec5EOnx7","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-02T10:08:02Z","updated_at":"2022-06-02T10:24:01Z","author_association":"CONTRIBUTOR","body":"> Could it be a separate system that uses the service extensibility mechanism?\r\n\r\nThe changes to ARQ are not as severe as it may seem because of all the other changes in this PR\r\nThe changes are exactly there there to enable the service extensibility mechanism:\r\n\r\n>  I am concerned that increasing specific code is creeping into the general engine.\r\n\r\nYes that was my concern too so that's why I extended the service extension system in order to decouple it. I already hinted somewhere in my remarks that actually this PR is two PRs: (1) Enhancing the extension system and (2) providing the new functionality on top of it. Both parts are functional, and the current state of (1) is powerful enough to cater for (2).\r\nConversely, (2) is my test-bed for whether (1) is a sufficient foundation.\r\nHowever, (2) needs more testing and I have a dependency on my own caching library in there which I want to disentangle so finishing (2) is still a bit of work. So I think its reasonable to factor (1) out as a separate PR soon.\r\n\r\nTo summarize the service extension system:\r\n* The only change in OpExecutor is to now use QueryIteratorServiceBulk rather than QueryIteratorService. Before the extension system one had to override the execute(OpService) method - any existing overrides won't break with my change.\r\n* QueryIterService continues to exist (though it should be deprecated in favor of the extension system) if someone used it with a custom OpExecutor before.\r\n* I factored out the subclass QueryIterRepeatApplyBulk from QueryIteratorRepeatApply. Nothing that extended QueryIteratorRepeatApply should break. The only difference lies in the nextStage method that either accepts a QueryIterator or a single Binding, respectively. The bulk version delegates to the single binding one.\r\n* QueryIteratorServiceBulk: This is the implementation which bridges to the extension by accessing the ServiceExecutorRegistryBulk from the execCxt. By default the bulk registry has an ServiceExecutorBulk that delegates to our old non-bulk ServiceExecutorRegistry (also accessed from the execCxt).\r\n\r\nMy extension of (1) bulk retrieval, (2) caching, (3) correlate, and (4) self reference (SERVICE <urn:self> to allow for correlating back (\"fetch 5 employees of each department\")) are already only plugins to the new extension system.\r\nThe only hard coded part right now is the initial registration in ServiceExecutorRegistryBulk / ServiceExecutorRegistry.\r\n\r\n> Could it be a separate system that uses the service extensibility mechanism?\r\n\r\nYes, wanted to leave this option open for the caching system - not because it's not mature enough, but it currently has a dependency on my own library (which is on maven central though) but which in turn uses non-shaded guava.\r\n\r\n> Could it do a simple case? Reading a few input iterator bindings (say up to 10) and issuing a compound SERVICE for 10 items. Repeat. This is a reduction of calls by x10.\r\n\r\nYes, this already works:\r\n```sparql\r\nSELECT * WHERE {\r\n  SERVICE <https://dbpedia.org/sparql> {\r\n    { SELECT * {\r\n        ?s a <http://dbpedia.org/ontology/MusicalArtist>\r\n      } ORDER BY DESC(?s) LIMIT 5 }\r\n  }\r\n  SERVICE <correlate:bulk+20:https://dbpedia.org/sparql> {\r\n    { SELECT * {\r\n        ?s ?p ?o\r\n      } LIMIT 1 }\r\n  }\r\n}\r\n```\r\n\r\nThe second service generates and sends a UNION query to remote endpoint:\r\n```sparql\r\nSELECT  *\r\nWHERE\r\n...\r\n  UNION\r\n  {   { { SELECT  * { <http://dbpedia.org/resource/Živorad_Nikolić>  ?p  ?o BIND(2 AS ?__idx__) } LIMIT   1 } }\r\n   UNION\r\n      {   { { SELECT  * { <http://dbpedia.org/resource/Živan_Cvitković> ?p  ?o BIND(3 AS ?__idx__) } LIMIT   1 }\r\n   UNION\r\n...\r\n}\r\n```\r\nSome remarks: `bulk+20` gives some control of bulk size to the user but it is restricted by ARQ.serviceBulkMaxBindingCount (currently 100). The `+` symbol is used because RFC3986 only allows these symbols in an URI scheme:\r\n\r\n```\r\nscheme      = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\r\n```\r\n\r\nI need to give the query generation another pass in order to group bindings into VALUES blocks again where possible and do some more testing.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144683643/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144685644","html_url":"https://github.com/apache/jena/pull/1341#issuecomment-1144685644","issue_url":"https://api.github.com/repos/apache/jena/issues/1341","id":1144685644,"node_id":"IC_kwDOAHF7Ec5EOoRM","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-02T10:10:12Z","updated_at":"2022-06-02T10:10:12Z","author_association":"MEMBER","body":"Context: Rob and I work at the same company.\r\n\r\nSome improvements to `AuthBearerFilter` have gone in #1345.\r\n\r\nThe code currently has Fuseki dependencies so the goal of sharing code for bearer token handling between `AuthBearerFilter`, which is in Fuseki main, not Fuskei webapp, means that the separation isn't there yet.\r\n\r\nEnsuring the bearer token handling is able to be deployed at cloud-providers, enterprise on-prem, and different trusted platforms will generate further requirements on the flexibility for general purpose code.\r\n\r\nWe'll close this as #1345 has some improvements and be back later.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144685644/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144749824","html_url":"https://github.com/apache/jena/pull/1315#issuecomment-1144749824","issue_url":"https://api.github.com/repos/apache/jena/issues/1315","id":1144749824,"node_id":"IC_kwDOAHF7Ec5EO38A","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-02T11:22:16Z","updated_at":"2022-06-02T11:22:16Z","author_association":"MEMBER","body":"FYI: `bulk-20` isn't in the scheme; that ended at the first `:`.\r\n\r\nThe RFC 3986 components are:\r\n\r\n```\r\nScheme|correlate|\r\nAuthority|null|\r\nPath|bulk+20:https://dbpedia.org/sparql| \r\nQuery|null|\r\nFragment|null|\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144749824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144801436","html_url":"https://github.com/apache/jena/pull/1315#issuecomment-1144801436","issue_url":"https://api.github.com/repos/apache/jena/issues/1315","id":1144801436,"node_id":"IC_kwDOAHF7Ec5EPEic","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-02T12:23:45Z","updated_at":"2022-06-02T12:43:59Z","author_association":"CONTRIBUTOR","body":"Argh, my example is bad. What I meant is that by adding options as 'prefixes' separated by ':' they may in the process be parsed as scheme and this only allows for a very restricted set of characters. Just think of bulk+20 coming first. The service executor Plugin cuts those away - but my concern is that possibly a pedantic sparql query parser may complain about illegal (characters in) uris. The remainder ending up as a path is imo acceptable(?) So it's really just about the sparql parser seeing these special uris.\r\n\r\nThe alternative would be to use magic triples within the service element.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1144801436/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1145085621","html_url":"https://github.com/apache/jena/issues/1360#issuecomment-1145085621","issue_url":"https://api.github.com/repos/apache/jena/issues/1360","id":1145085621,"node_id":"IC_kwDOAHF7Ec5EQJ61","user":{"login":"ebremer","id":4094961,"node_id":"MDQ6VXNlcjQwOTQ5NjE=","avatar_url":"https://avatars.githubusercontent.com/u/4094961?v=4","gravatar_id":"","url":"https://api.github.com/users/ebremer","html_url":"https://github.com/ebremer","followers_url":"https://api.github.com/users/ebremer/followers","following_url":"https://api.github.com/users/ebremer/following{/other_user}","gists_url":"https://api.github.com/users/ebremer/gists{/gist_id}","starred_url":"https://api.github.com/users/ebremer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebremer/subscriptions","organizations_url":"https://api.github.com/users/ebremer/orgs","repos_url":"https://api.github.com/users/ebremer/repos","events_url":"https://api.github.com/users/ebremer/events{/privacy}","received_events_url":"https://api.github.com/users/ebremer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-02T16:49:31Z","updated_at":"2022-06-02T16:49:31Z","author_association":"CONTRIBUTOR","body":"It will work outside Netbean using Maven:\r\n mvn exec:java -Dexec.mainClass=\"com.myworks.testprog\"\r\n\r\nbut still returns null using the \"java -jar\" method.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1145085621/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1145161149","html_url":"https://github.com/apache/jena/issues/1360#issuecomment-1145161149","issue_url":"https://api.github.com/repos/apache/jena/issues/1360","id":1145161149,"node_id":"IC_kwDOAHF7Ec5EQcW9","user":{"login":"ebremer","id":4094961,"node_id":"MDQ6VXNlcjQwOTQ5NjE=","avatar_url":"https://avatars.githubusercontent.com/u/4094961?v=4","gravatar_id":"","url":"https://api.github.com/users/ebremer","html_url":"https://github.com/ebremer","followers_url":"https://api.github.com/users/ebremer/followers","following_url":"https://api.github.com/users/ebremer/following{/other_user}","gists_url":"https://api.github.com/users/ebremer/gists{/gist_id}","starred_url":"https://api.github.com/users/ebremer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebremer/subscriptions","organizations_url":"https://api.github.com/users/ebremer/orgs","repos_url":"https://api.github.com/users/ebremer/repos","events_url":"https://api.github.com/users/ebremer/events{/privacy}","received_events_url":"https://api.github.com/users/ebremer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-02T18:06:19Z","updated_at":"2022-06-02T18:06:19Z","author_association":"CONTRIBUTOR","body":"After some digging, I added:\r\n        ARQ.init();\r\n\r\nand now the expected results print.  I never had to do this before.  I suppose something is different in this new JDK I am using.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1145161149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1145225365","html_url":"https://github.com/apache/jena/issues/1360#issuecomment-1145225365","issue_url":"https://api.github.com/repos/apache/jena/issues/1360","id":1145225365,"node_id":"IC_kwDOAHF7Ec5EQsCV","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-02T19:18:14Z","updated_at":"2022-06-02T19:18:14Z","author_association":"MEMBER","body":"This could be because the combined jar does not include the service loader files:\r\n\r\nhttps://jena.apache.org/documentation/notes/jena-repack.html\r\n\r\nFor each of the jena jars included, the repacking needs to include (concatenate into one file) the contents of all\r\n`META-INF/services/org.apache.jena.sys.JenaSubsystemLifecycle` files in one file in the combined jar.\r\n\r\nThese are what drives Jena initialization using Java ServiceLoader. The JenaSubsystemLifecycle in Jena calls ARQ.init amongst other things.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1145225365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1145976054","html_url":"https://github.com/apache/jena/issues/1360#issuecomment-1145976054","issue_url":"https://api.github.com/repos/apache/jena/issues/1360","id":1145976054,"node_id":"IC_kwDOAHF7Ec5ETjT2","user":{"login":"ebremer","id":4094961,"node_id":"MDQ6VXNlcjQwOTQ5NjE=","avatar_url":"https://avatars.githubusercontent.com/u/4094961?v=4","gravatar_id":"","url":"https://api.github.com/users/ebremer","html_url":"https://github.com/ebremer","followers_url":"https://api.github.com/users/ebremer/followers","following_url":"https://api.github.com/users/ebremer/following{/other_user}","gists_url":"https://api.github.com/users/ebremer/gists{/gist_id}","starred_url":"https://api.github.com/users/ebremer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ebremer/subscriptions","organizations_url":"https://api.github.com/users/ebremer/orgs","repos_url":"https://api.github.com/users/ebremer/repos","events_url":"https://api.github.com/users/ebremer/events{/privacy}","received_events_url":"https://api.github.com/users/ebremer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-03T13:38:51Z","updated_at":"2022-06-03T13:38:51Z","author_association":"CONTRIBUTOR","body":"That did the trick.  I was able to remove the ARQ.init() line after that.  The weird is that I've used a shaded jar in this project for years with Jena without needing this change, so I'm not sure what changed, but it's an easy enough change.  Thanks Andy!","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1145976054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146070778","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1146070778","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1146070778,"node_id":"IC_kwDOAHF7Ec5ET6b6","user":{"login":"LorenzBuehmann","id":976029,"node_id":"MDQ6VXNlcjk3NjAyOQ==","avatar_url":"https://avatars.githubusercontent.com/u/976029?v=4","gravatar_id":"","url":"https://api.github.com/users/LorenzBuehmann","html_url":"https://github.com/LorenzBuehmann","followers_url":"https://api.github.com/users/LorenzBuehmann/followers","following_url":"https://api.github.com/users/LorenzBuehmann/following{/other_user}","gists_url":"https://api.github.com/users/LorenzBuehmann/gists{/gist_id}","starred_url":"https://api.github.com/users/LorenzBuehmann/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LorenzBuehmann/subscriptions","organizations_url":"https://api.github.com/users/LorenzBuehmann/orgs","repos_url":"https://api.github.com/users/LorenzBuehmann/repos","events_url":"https://api.github.com/users/LorenzBuehmann/events{/privacy}","received_events_url":"https://api.github.com/users/LorenzBuehmann/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-03T15:21:13Z","updated_at":"2022-06-03T15:22:10Z","author_association":"CONTRIBUTOR","body":"> Experts - what is the impact of no index on performance?\r\n\r\nNot an expert but using Fuseki with GeoSPARQL for a longer time now ...\r\n\r\nContainment checks can be way slower without index usage: \r\nFor example, currently, spatial containment queries that lead to point in polygon checks can make use of the index first (takes an envelope of the polygon, i.e. a rectangle to gather all points in this rectangle followed by a second check for proper point in polygon check necessary to filter points not in the polygon - for a large datasets and a small polygon this can be a huge performance gain. I don't have that exhaustive numbers at the moment though a minor example on a dataset about companies (`2,374,998` in total):\r\n\r\nThe query gives the number of companies (`10,270`) in a small part of Germany:\r\n\r\n``` sparql\r\nSELECT (count(?c) as ?cnt) {\r\n   BIND(\"POLYGON((7.654288035299954 51.82366598560922,11.257803660299954 51.82366598560922,11.257803660299954 49.59800926392628,7.654288035299954 49.59800926392628,7.654288035299954 51.82366598560922))\"^^geo:wktLiteral as ?box)\r\n  ?c spatial:withinBoxGeom(?box) . # the explicit spatial index lookup\r\n  ?c a coy:Company ;\r\n  geo:hasGeometry/geo:asWKT ?lit .  \r\n  FILTER(geof:sfContains(?box, ?lit))\r\n}\r\n```\r\nwith the index lookup triple pattern it takes 0.1s, without it takes ~10s.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146070778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146075948","html_url":"https://github.com/apache/jena/pull/1344#issuecomment-1146075948","issue_url":"https://api.github.com/repos/apache/jena/issues/1344","id":1146075948,"node_id":"IC_kwDOAHF7Ec5ET7ss","user":{"login":"neumarcx","id":10403482,"node_id":"MDQ6VXNlcjEwNDAzNDgy","avatar_url":"https://avatars.githubusercontent.com/u/10403482?v=4","gravatar_id":"","url":"https://api.github.com/users/neumarcx","html_url":"https://github.com/neumarcx","followers_url":"https://api.github.com/users/neumarcx/followers","following_url":"https://api.github.com/users/neumarcx/following{/other_user}","gists_url":"https://api.github.com/users/neumarcx/gists{/gist_id}","starred_url":"https://api.github.com/users/neumarcx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neumarcx/subscriptions","organizations_url":"https://api.github.com/users/neumarcx/orgs","repos_url":"https://api.github.com/users/neumarcx/repos","events_url":"https://api.github.com/users/neumarcx/events{/privacy}","received_events_url":"https://api.github.com/users/neumarcx/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-03T15:27:01Z","updated_at":"2022-06-03T15:27:01Z","author_association":"CONTRIBUTOR","body":"Now you can compare that with a manual MBR.\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146075948/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146087304","html_url":"https://github.com/apache/jena/issues/1360#issuecomment-1146087304","issue_url":"https://api.github.com/repos/apache/jena/issues/1360","id":1146087304,"node_id":"IC_kwDOAHF7Ec5ET-eI","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-03T15:39:09Z","updated_at":"2022-06-03T15:39:09Z","author_association":"MEMBER","body":"There was probably partial initialization - normally initialization happens when Jena is first touched by app code. An app can force it with `JenaSystem.init()`. There is still class initialization happening and `ARQ.init` can be triggered (or \"was triggered\") by other routes.\r\n\r\nhttps://jena.apache.org/documentation/notes/system-initialization.html\r\n\r\nincluding how to debug.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146087304/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146196013","html_url":"https://github.com/apache/jena/pull/1315#issuecomment-1146196013","issue_url":"https://api.github.com/repos/apache/jena/issues/1315","id":1146196013,"node_id":"IC_kwDOAHF7Ec5EUZAt","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-03T17:20:58Z","updated_at":"2022-06-03T17:22:09Z","author_association":"MEMBER","body":"Separating it out into two PRs is a good idea.\r\n\r\nThe only part to go into jena-arq is the extension mechanism changes such as wikidata might use.\r\n\r\nThe extension itself can be a separate maven module. We have the `jena-extras` area for things like this. Items in this area can evolve more easily than the core Jena system (roughly Fuskei+text) and be treated as evolving and labelled \"experimental\". The project does have the convention that material not in the core system does not block a release. A module can be skipped - not ideal but a stable core system has to be main focus.\r\n\r\nThere are lots of issues for the bulk extensions that aren't clear - for example the interactions a query that combines local patterns with SERVICE:  \"SERVICE - local - SERVICE\". (And there is quite a lot of papers on the subject, some going back a few decades - research was ahead of the capabilities of networking and hardware!)\r\n\r\nI want to enable easy evolution of the bulk-caching extension. Putting it in an optional module means that you have control over its evolution and it can mature there. Adding to `jena-arq` requires stability, long-term commitment to the exact behaviour and understanding the support+maintenance over the coming 5+ years. It also requires a lot more technical review and finding the time to do that each PR is going to slow things down. Hopefully a sub-community will \r\n\r\n> QueryIterRepeatApplyBulk from QueryIteratorRepeatApply. Nothing that extended QueryIteratorRepeatApply should break.\r\n\r\nQueryIteratorRepeatApply is central throughout execution. I don't see any changes to `QueryIterRepeatApplyBulk`.\r\n\r\n> QueryIteratorServiceBulk rather than QueryIteratorService\r\n\r\nSurely that's just `QueryIteratorService` - only the extension mechanism.\r\n\r\nThe extension itself executed there can be no more than a call through to the the functionality.\r\n\r\n```\r\npublic interface ServiceExecution {\r\n    public QueryIterator exec();\r\n}\r\n```\r\nthat could have a `start` (or `initExecution`) that creates a per-execution state object, and `finish` to release anything that is per-execution unique to get a full lifecycle.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146196013/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146199486","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1146199486","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1146199486,"node_id":"IC_kwDOAHF7Ec5EUZ2-","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-03T17:25:24Z","updated_at":"2022-06-03T17:25:24Z","author_association":"MEMBER","body":"Discussion about improving the SERVICE extension mechanism separately from the extension to do bulk retrieval, caching etc on the PR #1315 .","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146199486/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146247350","html_url":"https://github.com/apache/jena/pull/1315#issuecomment-1146247350","issue_url":"https://api.github.com/repos/apache/jena/issues/1315","id":1146247350,"node_id":"IC_kwDOAHF7Ec5EUli2","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-03T18:28:28Z","updated_at":"2022-06-03T18:48:56Z","author_association":"CONTRIBUTOR","body":"Yes, I will split the PR up. I started testing the cache system (and thus the plugin system) on some of our use cases and I am currently rooting out the most obvious issues. Moving the cache to `jena-extras` once it is sufficiently stable sound very good to me.\r\nAs an estimate, I am targeting a PR for the extension system in two weeks; next week for more testing, and the week after for factoring things out. Also, I should look into whether there are any features so far used by Wikidata that could not be covered with the current state of the extension system. (And afterwards then finally JENA-2309 :).\r\n\r\n> the interactions a query that combines local patterns with SERVICE: \"SERVICE - local -SERVICE\"\r\n\r\nJust to clarify the scope of this work: At this stage, I am not building a query optimizer that tries to re-order the algebra. I appreciate the \"straight-forwardness\" of SPARQL basic federation which works without statistics over the data in remote endpoints.\r\n\r\nThe goal is to enable caching of the results of the service clause's graph pattern w.r.t. to each individual input binding (which may be the root/identity binding). Because of the bulk feature, multiple input bindings may be combined into a batch request but the system disentangles this on a per-binding level again - so if the same service pattern is joined with the same binding it will cause a cache hit - regardless whether that input binding originated from e.g. a sub query or a values clause.\r\nBecause of this design goal, the bulk retrieval and the caching system cannot be completely independent from each other.\r\n\r\nThe goal of the cache is to allow for *manual* marking expensive parts of a query - e.g. parts that make use of ordering or aggregation. In Apache Spark terms it would be quite akin to an `rdd.cache()` operation.\r\nConversely, the goal is NOT to automatically decide on expensive parts (such as by looking at the query history and trying to make smart decision).\r\n\r\nFor example, one use case is to have a UI with a search box that allows filtering e.g. the available predicates.\r\nWith the cache, it becomes possible to filter over the cached result set  - without having to compute it over and over again or the need to cache the result with custom logic in. e.g. java script.\r\n```sparql\r\nSELECT * {\r\n  SERVICE <cache:http://my.endpoint/sparql> { SELECT DISTINCT ?p { ?s ?p ?o } ORDER BY ?p }\r\n  FILTER(CONTAINS(STR(?p), 'rdf'))\r\n}\r\n```\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146247350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146350174","html_url":"https://github.com/apache/jena/pull/1315#issuecomment-1146350174","issue_url":"https://api.github.com/repos/apache/jena/issues/1315","id":1146350174,"node_id":"IC_kwDOAHF7Ec5EU-pe","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-03T20:48:26Z","updated_at":"2022-06-03T20:48:26Z","author_association":"MEMBER","body":"If passing additional fixed arguments to SERVICE is a requirement, we can change the ARQ parser, e.g.\r\n\r\n`SERVICE <http://my.endpoint/sparql> ARGS \"cache\" { ... }`\r\n\r\nwhere `ARGS` is optional and takes a single string.\r\n\r\nThis avoids needing to modify the SERVICE URI, which might not be a constant - e.g. injected by `QueryExecBuilder.substitution`.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146350174/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146580508","html_url":"https://github.com/apache/jena/pull/1337#issuecomment-1146580508","issue_url":"https://api.github.com/repos/apache/jena/issues/1337","id":1146580508,"node_id":"IC_kwDOAHF7Ec5EV24c","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-04T09:55:27Z","updated_at":"2022-06-04T09:55:27Z","author_association":"MEMBER","body":"PR #1366 contains the suggested `sh` compatible fix.  @swartik Let us know if that works to your enviornment.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146580508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146626634","html_url":"https://github.com/apache/jena/pull/1337#issuecomment-1146626634","issue_url":"https://api.github.com/repos/apache/jena/issues/1337","id":1146626634,"node_id":"IC_kwDOAHF7Ec5EWCJK","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-04T14:46:31Z","updated_at":"2022-06-04T14:46:31Z","author_association":"MEMBER","body":"Closed by PR #1366.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1146626634/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147195886","html_url":"https://github.com/apache/jena/issues/1369#issuecomment-1147195886","issue_url":"https://api.github.com/repos/apache/jena/issues/1369","id":1147195886,"node_id":"IC_kwDOAHF7Ec5EYNHu","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T08:39:39Z","updated_at":"2022-06-06T08:39:39Z","author_association":"MEMBER","body":"Simpler: no `?y` reuse for `?z`:\r\n\r\n`SELECT ?z { BIND('x' AS ?y) BIND('z' AS ?z) }`\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147195886/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147222431","html_url":"https://github.com/apache/jena/issues/1369#issuecomment-1147222431","issue_url":"https://api.github.com/repos/apache/jena/issues/1369","id":1147222431,"node_id":"IC_kwDOAHF7Ec5EYTmf","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T08:59:52Z","updated_at":"2022-06-06T08:59:52Z","author_association":"MEMBER","body":"`OpAsQuery` is not a perfect reversal of the process of compiling the query to algebra. It aims to produce equivalent queries - same output. It has to spot patterns because `SELECT (expr as ?var)` and `SELECT * {   ... BIND (expr as ?var)}` are the same algebra.\r\n\r\nWhen translating algebra to syntax, `OpAsQuery` is spotting this pattern. If you want all the `BIND`, use `SELECT *`.\r\n\r\n`SELECT  (?x AS ?y) (?y AS ?z) {}` has two variables, whereas `SELECT ?z {}` has one. It's a different query.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147222431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147223319","html_url":"https://github.com/apache/jena/issues/1369#issuecomment-1147223319","issue_url":"https://api.github.com/repos/apache/jena/issues/1369","id":1147223319,"node_id":"IC_kwDOAHF7Ec5EYT0X","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T09:00:53Z","updated_at":"2022-06-06T09:13:25Z","author_association":"CONTRIBUTOR","body":"The problem is that the projection just naively filters the collected assignments without taking dependent expressions into account:\r\n```\r\n//OpAsQuery.java\r\nlevel.opProject.getVars().forEach(v -> {\r\n    if ( assignments.containsKey(v) ) {\r\n        query.addResultVar(v, assignments.get(v)) ;\r\n    } else\r\n        query.getProjectVars().add(v) ;\r\n\r\n}) ;\r\n```","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147223319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147230091","html_url":"https://github.com/apache/jena/issues/1369#issuecomment-1147230091","issue_url":"https://api.github.com/repos/apache/jena/issues/1369","id":1147230091,"node_id":"IC_kwDOAHF7Ec5EYVeL","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T09:08:14Z","updated_at":"2022-06-06T09:10:28Z","author_association":"CONTRIBUTOR","body":"> It aims to produce equivalent queries - same output.\r\n\r\nYes, but in the first example with the transitive assignment of the constant `'x'` it fails because the output differs.\r\n\r\nIn the case where there is a variable based off of a unit table it would be according to the 'same output' contract - though losing those expressions is not really what I expected.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147230091/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147236644","html_url":"https://github.com/apache/jena/issues/1369#issuecomment-1147236644","issue_url":"https://api.github.com/repos/apache/jena/issues/1369","id":1147236644,"node_id":"IC_kwDOAHF7Ec5EYXEk","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T09:15:20Z","updated_at":"2022-06-06T09:15:20Z","author_association":"MEMBER","body":"> IMO the expected result.\r\n\r\nI was speaking about this proposal. It is a different query.\r\n\r\nThis code has built-up over time with lots of opinion. Outputting a query that is not the input will probably cause users problems, generate a support load and we end up going in circles.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147236644/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147240811","html_url":"https://github.com/apache/jena/issues/1369#issuecomment-1147240811","issue_url":"https://api.github.com/repos/apache/jena/issues/1369","id":1147240811,"node_id":"IC_kwDOAHF7Ec5EYYFr","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T09:19:47Z","updated_at":"2022-06-06T09:29:00Z","author_association":"CONTRIBUTOR","body":"Oh my, I messed up the expected results because I forgot the projection of ?z - sorry for the confusion.\r\nOf course the output query should be the same as the input one.\r\n\r\nI updated the expected results with the projection now.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147240811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147255487","html_url":"https://github.com/apache/jena/issues/1369#issuecomment-1147255487","issue_url":"https://api.github.com/repos/apache/jena/issues/1369","id":1147255487,"node_id":"IC_kwDOAHF7Ec5EYbq_","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T09:36:10Z","updated_at":"2022-06-06T09:36:10Z","author_association":"MEMBER","body":"Why not add a detection criterion so that BIND is reversed to a project expression only if the project is safe? This would work down the `(extend)` stack with a \"while safe\" test. Replace that stream with a for-loop, push back remaining `level.opExtends` into the pattern.\r\n\r\nThese short examples hide the fact that in real queries, the BIND are at the end of a long pattern. Only BIND at the end are considered. Adding an extra sub-query - even if the same query - is unexpected by users.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147255487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147260854","html_url":"https://github.com/apache/jena/issues/1369#issuecomment-1147260854","issue_url":"https://api.github.com/repos/apache/jena/issues/1369","id":1147260854,"node_id":"IC_kwDOAHF7Ec5EYc-2","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T09:42:46Z","updated_at":"2022-06-06T09:49:08Z","author_association":"CONTRIBUTOR","body":"> Why not add a detection criterion so that BIND is reversed to a project expression only if the project is safe?\r\n\r\nYes, that makes sense.\r\n\r\n> Adding an extra sub-query - even if the same query - is unexpected by users.\r\n\r\nCertainly; I was incorrectly assuming that OpAsQuery due to the 'not perfect reversal'-nature always uses projections but I see it actually does support reversing into BIND. So the detection criterion is what is needed.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147260854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147266270","html_url":"https://github.com/apache/jena/issues/1369#issuecomment-1147266270","issue_url":"https://api.github.com/repos/apache/jena/issues/1369","id":1147266270,"node_id":"IC_kwDOAHF7Ec5EYeTe","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T09:49:37Z","updated_at":"2022-06-06T09:49:37Z","author_association":"MEMBER","body":"It'll be easiest in the calculation of `level.opExtend` which look like it is `processExtend` (which is used twice).","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147266270/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147268617","html_url":"https://github.com/apache/jena/issues/1369#issuecomment-1147268617","issue_url":"https://api.github.com/repos/apache/jena/issues/1369","id":1147268617,"node_id":"IC_kwDOAHF7Ec5EYe4J","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T09:52:53Z","updated_at":"2022-06-06T09:55:09Z","author_association":"CONTRIBUTOR","body":"Are you working on it already or should I look into it? It's not clear whether your last message was a note to yourself or a hint to me :)","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147268617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147270476","html_url":"https://github.com/apache/jena/issues/1369#issuecomment-1147270476","issue_url":"https://api.github.com/repos/apache/jena/issues/1369","id":1147270476,"node_id":"IC_kwDOAHF7Ec5EYfVM","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T09:55:29Z","updated_at":"2022-06-06T09:55:29Z","author_association":"MEMBER","body":"I'm not working on it.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147270476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147553892","html_url":"https://github.com/apache/jena/pull/1337#issuecomment-1147553892","issue_url":"https://api.github.com/repos/apache/jena/issues/1337","id":1147553892,"node_id":"IC_kwDOAHF7Ec5EZkhk","user":{"login":"swartik","id":6043991,"node_id":"MDQ6VXNlcjYwNDM5OTE=","avatar_url":"https://avatars.githubusercontent.com/u/6043991?v=4","gravatar_id":"","url":"https://api.github.com/users/swartik","html_url":"https://github.com/swartik","followers_url":"https://api.github.com/users/swartik/followers","following_url":"https://api.github.com/users/swartik/following{/other_user}","gists_url":"https://api.github.com/users/swartik/gists{/gist_id}","starred_url":"https://api.github.com/users/swartik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/swartik/subscriptions","organizations_url":"https://api.github.com/users/swartik/orgs","repos_url":"https://api.github.com/users/swartik/repos","events_url":"https://api.github.com/users/swartik/events{/privacy}","received_events_url":"https://api.github.com/users/swartik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T15:07:38Z","updated_at":"2022-06-06T15:07:38Z","author_association":"NONE","body":"@afs Sorry for the delayed response – I was on vacation last week. Your solution works in my environment. Thanks for stepping in.\r\n\r\nAs you had some problems I didn't seem to experience, here's my set-up:\r\n\r\n- I'm using cygwin, updated as of this morning.\r\n- The bash version is 4.4.12(3)-release.\r\n- The value I use for FUSEKI_HOME is `C:/Users/swartik/Apache Software Foundation/apache-jena-fuseki-4.5.0`.\r\n\r\nI am curious why your version of bash didn't interpret `@Q` the same way mine did, but it's not important to resolving this issue, so unless you have lots of spare time we can leave that for another day.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147553892/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147636610","html_url":"https://github.com/apache/jena/pull/1337#issuecomment-1147636610","issue_url":"https://api.github.com/repos/apache/jena/issues/1337","id":1147636610,"node_id":"IC_kwDOAHF7Ec5EZ4uC","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-06T16:22:35Z","updated_at":"2022-06-06T16:22:35Z","author_association":"MEMBER","body":"I'm curious about as well `@Q` - in trying things out it sort of worked, and sort of didn't. But if some platforms work and some don't, it's a problem for the project.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1147636610/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148412626","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1148412626","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1148412626,"node_id":"IC_kwDOAHF7Ec5Ec2LS","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-07T09:16:56Z","updated_at":"2022-06-07T09:16:56Z","author_association":"MEMBER","body":"Related: correlated subquery / lateral join for subqueries: \r\nhttps://www.ontotext.com/blog/graphdb-users-ask-does-graphdb-support-reusing-values-in-sub-selects/","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148412626/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148443040","html_url":"https://github.com/apache/jena/pull/1370#issuecomment-1148443040","issue_url":"https://api.github.com/repos/apache/jena/issues/1370","id":1148443040,"node_id":"IC_kwDOAHF7Ec5Ec9mg","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-07T09:44:34Z","updated_at":"2022-06-07T09:44:34Z","author_association":"CONTRIBUTOR","body":"I added a few more tests for somewhat corner cases that came to my mind today; it's still green - so from my side its ready for review/feedback.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148443040/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148604760","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1148604760","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1148604760,"node_id":"IC_kwDOAHF7Ec5EdlFY","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-07T12:32:45Z","updated_at":"2022-06-07T12:35:18Z","author_association":"CONTRIBUTOR","body":"The reason why - at least at present - I like the `SERVICE <correlate:> {}` approach is that it gives full control to the user within the SPARQL 1.1 syntax. Caching is most useful with correlated joins so that the result of the right-hand-side is cached for each input binding. In addition, with the special urn `urn:arq:self` (which is implied if no other service IRI is specified) to correlate back to the active dataset it's a very powerful feature.\r\n\r\nIn case you'd prefer an alternative approach please let me know.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148604760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148637123","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1148637123","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1148637123,"node_id":"IC_kwDOAHF7Ec5Eds_D","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-07T12:59:08Z","updated_at":"2022-06-07T12:59:08Z","author_association":"CONTRIBUTOR","body":"Stardog's approach: https://docs.stardog.com/query-stardog/stored-query-service#correlated-subqueries","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148637123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148660109","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1148660109","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1148660109,"node_id":"IC_kwDOAHF7Ec5EdymN","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-07T13:16:28Z","updated_at":"2022-06-07T13:16:28Z","author_association":"MEMBER","body":"Either. We don't have to stay within strict SPARQL syntax because the meaning of the evaluation is engine specific so custom syntax is not a restriction except on 3rd party UI tools.\r\n\r\n(first pass): Stardog looking like \"SERVICE\" is used only for a stored query but could be extended to \"SERVICE { annotate { subquery } }\". The meaning variables in \"annotate\" is quoting.\r\n\r\nOntotext is inline query, possible less clear to the user with the use of VALUES\r\n\r\nWe can have both! Nice syntax and a forced syntax.\r\n\r\n`LOOP (?v1 ?v2) { subquery }` which loops on the LHS.\r\n\r\n(there are other kinds of correlated query - EXISTS is a correlated ASK; and like SQL, there could be a filter function \"IN { }\").\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148660109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148717089","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1148717089","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1148717089,"node_id":"IC_kwDOAHF7Ec5EeAgh","user":{"login":"Aklakan","id":839608,"node_id":"MDQ6VXNlcjgzOTYwOA==","avatar_url":"https://avatars.githubusercontent.com/u/839608?v=4","gravatar_id":"","url":"https://api.github.com/users/Aklakan","html_url":"https://github.com/Aklakan","followers_url":"https://api.github.com/users/Aklakan/followers","following_url":"https://api.github.com/users/Aklakan/following{/other_user}","gists_url":"https://api.github.com/users/Aklakan/gists{/gist_id}","starred_url":"https://api.github.com/users/Aklakan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Aklakan/subscriptions","organizations_url":"https://api.github.com/users/Aklakan/orgs","repos_url":"https://api.github.com/users/Aklakan/repos","events_url":"https://api.github.com/users/Aklakan/events{/privacy}","received_events_url":"https://api.github.com/users/Aklakan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-07T14:00:01Z","updated_at":"2022-06-07T14:02:54Z","author_association":"CONTRIBUTOR","body":"The advantage of extra LOOP syntax would be that the loop variables can be explicitly specified in an easy way.\r\nWith the SERVICE approach I was thinking about the rule that any variable *visible* on the lhs and *mentioned* in the rhs would be implicit loop variables.\r\n\r\nWith regard to caching and bulk retrieval, I think those would remain as options on the SERVICE clause:\r\nThe LOOP yields a QueryIterator of input bindings and the service extension would then take care of grouping as many input bindings as it sees fit into batch requests (as it is done right now) - so all options (except for correlate) would still be at the level of the service clause:\r\n```\r\nLOOP (?x) { SERVICE <cache:bulk+20:http://dbpedia.org/sparql> { }\r\n```\r\n(The options may also be represented using your proposed syntax extension - something along the lines of `SERVICE <http://dbpedia.org/sparql> ARGS bulk=20 cache`)\r\n\r\n\r\nNote, that IMHO a clean solution would require making TransformScopeRename (and related classes) aware of correlated joins and scoping of the loop variables. So this feature actually has implications on the core of ARQ.","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148717089/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148753355","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1148753355","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1148753355,"node_id":"IC_kwDOAHF7Ec5EeJXL","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-07T14:29:00Z","updated_at":"2022-06-07T14:29:00Z","author_association":"MEMBER","body":"`ARGS bulk=20 cache` -- no string -- is harder because SPARQL has fixed keywords that drive the grammar.  The tokenizer knows the keywords.\r\n\r\nA parser that has a keyword-neutral tokenizer moves the work into the grammar part.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1148753355/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1149565780","html_url":"https://github.com/apache/jena/issues/1361#issuecomment-1149565780","issue_url":"https://api.github.com/repos/apache/jena/issues/1361","id":1149565780,"node_id":"IC_kwDOAHF7Ec5EhPtU","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-08T07:32:32Z","updated_at":"2022-06-08T07:32:32Z","author_association":"MEMBER","body":"@givors-anabasis - sorry I can't answer your question directly:\r\n\r\nYou may get an answer if ask on the Jena users list users@jena.apache.org.\r\n\r\nJoining list information:\r\nhttps://jena.apache.org/help_and_support/index.html\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1149565780/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/jena/issues/comments/1149719845","html_url":"https://github.com/apache/jena/issues/1314#issuecomment-1149719845","issue_url":"https://api.github.com/repos/apache/jena/issues/1314","id":1149719845,"node_id":"IC_kwDOAHF7Ec5Eh1Ul","user":{"login":"afs","id":101362,"node_id":"MDQ6VXNlcjEwMTM2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/101362?v=4","gravatar_id":"","url":"https://api.github.com/users/afs","html_url":"https://github.com/afs","followers_url":"https://api.github.com/users/afs/followers","following_url":"https://api.github.com/users/afs/following{/other_user}","gists_url":"https://api.github.com/users/afs/gists{/gist_id}","starred_url":"https://api.github.com/users/afs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/afs/subscriptions","organizations_url":"https://api.github.com/users/afs/orgs","repos_url":"https://api.github.com/users/afs/repos","events_url":"https://api.github.com/users/afs/events{/privacy}","received_events_url":"https://api.github.com/users/afs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-06-08T10:05:32Z","updated_at":"2022-06-08T10:05:32Z","author_association":"MEMBER","body":"Q: What are the variables in LOOP for? Is it so they are replaced even if not exposed in the projection results? (this changed how variable scoping is done - at the moment, some variables are renamed as `?/var` to hide thm from other, unrelated uses of `?var`.\r\n\r\nWhatever the technology grand plan is, we need to make sure you're not blocked waiting for some deep change in the general query engine.\r\n","reactions":{"url":"https://api.github.com/repos/apache/jena/issues/comments/1149719845/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]