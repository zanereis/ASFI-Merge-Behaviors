[{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/545142844","html_url":"https://github.com/apache/openjpa/pull/42#issuecomment-545142844","issue_url":"https://api.github.com/repos/apache/openjpa/issues/42","id":545142844,"node_id":"MDEyOklzc3VlQ29tbWVudDU0NTE0Mjg0NA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-10-22T20:36:13Z","updated_at":"2019-10-22T20:36:13Z","author_association":"CONTRIBUTOR","body":"From memory twice the same name with same type or not and same value or not - no more sure if both cases were needed, @struberg: do you recall?","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/545142844/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/557629973","html_url":"https://github.com/apache/openjpa/pull/55#issuecomment-557629973","issue_url":"https://api.github.com/repos/apache/openjpa/issues/55","id":557629973,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzYyOTk3Mw==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T17:54:44Z","updated_at":"2019-11-22T17:54:44Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/557629973/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/557630112","html_url":"https://github.com/apache/openjpa/pull/56#issuecomment-557630112","issue_url":"https://api.github.com/repos/apache/openjpa/issues/56","id":557630112,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzYzMDExMg==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T17:55:09Z","updated_at":"2019-11-22T17:55:09Z","author_association":"CONTRIBUTOR","body":"Also LGTM","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/557630112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/577705929","html_url":"https://github.com/apache/openjpa/pull/58#issuecomment-577705929","issue_url":"https://api.github.com/repos/apache/openjpa/issues/58","id":577705929,"node_id":"MDEyOklzc3VlQ29tbWVudDU3NzcwNTkyOQ==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-23T14:31:19Z","updated_at":"2020-01-23T14:31:19Z","author_association":"MEMBER","body":"@rmannibucau via mail:\r\n\r\n> I'd try to at least add a test (faking k8s with HttpServer is enough IMHO)\r\n\r\nI think we can look at the mocking strategy taken by the Kubernetes client library: https://github.com/fabric8io/kubernetes-client/tree/master/kubernetes-tests/src/test/java/io/fabric8/kubernetes/client/mock","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/577705929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/579126012","html_url":"https://github.com/apache/openjpa/pull/58#issuecomment-579126012","issue_url":"https://api.github.com/repos/apache/openjpa/issues/58","id":579126012,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTEyNjAxMg==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T08:03:00Z","updated_at":"2020-01-28T08:03:00Z","author_association":"MEMBER","body":"I have added a test case: see https://github.com/apache/openjpa/pull/58/files#diff-dcd29b66ec7e23f7eae2b148c6ba7b77R1","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/579126012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/579173018","html_url":"https://github.com/apache/openjpa/pull/58#issuecomment-579173018","issue_url":"https://api.github.com/repos/apache/openjpa/issues/58","id":579173018,"node_id":"MDEyOklzc3VlQ29tbWVudDU3OTE3MzAxOA==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-01-28T10:13:29Z","updated_at":"2020-01-28T10:13:29Z","author_association":"MEMBER","body":"Merged as 6a3395dc795e3f356f11039caaebdca3bf8c373b","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/579173018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/609399593","html_url":"https://github.com/apache/openjpa/pull/59#issuecomment-609399593","issue_url":"https://api.github.com/repos/apache/openjpa/issues/59","id":609399593,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTM5OTU5Mw==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-05T11:12:35Z","updated_at":"2020-04-05T11:12:35Z","author_association":"CONTRIBUTOR","body":"Hi @solomax ,\r\n\r\n1. is it possible to harness that with a test?\r\n2. wonder if it needs a flag since it can change old behavior in test suites, wdyt?\r\n\r\notherwise looks like an old due debt ;), thanks a lot.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/609399593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/611292795","html_url":"https://github.com/apache/openjpa/pull/59#issuecomment-611292795","issue_url":"https://api.github.com/repos/apache/openjpa/issues/59","id":611292795,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMTI5Mjc5NQ==","user":{"login":"solomax","id":3870591,"node_id":"MDQ6VXNlcjM4NzA1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/3870591?v=4","gravatar_id":"","url":"https://api.github.com/users/solomax","html_url":"https://github.com/solomax","followers_url":"https://api.github.com/users/solomax/followers","following_url":"https://api.github.com/users/solomax/following{/other_user}","gists_url":"https://api.github.com/users/solomax/gists{/gist_id}","starred_url":"https://api.github.com/users/solomax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomax/subscriptions","organizations_url":"https://api.github.com/users/solomax/orgs","repos_url":"https://api.github.com/users/solomax/repos","events_url":"https://api.github.com/users/solomax/events{/privacy}","received_events_url":"https://api.github.com/users/solomax/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-09T02:28:34Z","updated_at":"2020-04-09T02:28:34Z","author_association":"CONTRIBUTOR","body":"Hello @rmannibucau, thanks for review\r\n1. Can this `TestSchemaGenerator` test be considered as good example?\r\n2. There is `SchemaTool.Flags.indexes` already, is it not enough?\r\n\r\nSorry for the long response\r\n","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/611292795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/617506092","html_url":"https://github.com/apache/openjpa/pull/61#issuecomment-617506092","issue_url":"https://api.github.com/repos/apache/openjpa/issues/61","id":617506092,"node_id":"MDEyOklzc3VlQ29tbWVudDYxNzUwNjA5Mg==","user":{"login":"solomax","id":3870591,"node_id":"MDQ6VXNlcjM4NzA1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/3870591?v=4","gravatar_id":"","url":"https://api.github.com/users/solomax","html_url":"https://github.com/solomax","followers_url":"https://api.github.com/users/solomax/followers","following_url":"https://api.github.com/users/solomax/following{/other_user}","gists_url":"https://api.github.com/users/solomax/gists{/gist_id}","starred_url":"https://api.github.com/users/solomax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomax/subscriptions","organizations_url":"https://api.github.com/users/solomax/orgs","repos_url":"https://api.github.com/users/solomax/repos","events_url":"https://api.github.com/users/solomax/events{/privacy}","received_events_url":"https://api.github.com/users/solomax/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-22T02:14:41Z","updated_at":"2020-04-22T02:14:41Z","author_association":"CONTRIBUTOR","body":"Thanks for the contribution!","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/617506092/reactions","total_count":1,"+1":0,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/619534999","html_url":"https://github.com/apache/openjpa/pull/61#issuecomment-619534999","issue_url":"https://api.github.com/repos/apache/openjpa/issues/61","id":619534999,"node_id":"MDEyOklzc3VlQ29tbWVudDYxOTUzNDk5OQ==","user":{"login":"vorburger","id":298598,"node_id":"MDQ6VXNlcjI5ODU5OA==","avatar_url":"https://avatars.githubusercontent.com/u/298598?v=4","gravatar_id":"","url":"https://api.github.com/users/vorburger","html_url":"https://github.com/vorburger","followers_url":"https://api.github.com/users/vorburger/followers","following_url":"https://api.github.com/users/vorburger/following{/other_user}","gists_url":"https://api.github.com/users/vorburger/gists{/gist_id}","starred_url":"https://api.github.com/users/vorburger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vorburger/subscriptions","organizations_url":"https://api.github.com/users/vorburger/orgs","repos_url":"https://api.github.com/users/vorburger/repos","events_url":"https://api.github.com/users/vorburger/events{/privacy}","received_events_url":"https://api.github.com/users/vorburger/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-26T11:36:18Z","updated_at":"2020-04-26T11:36:18Z","author_association":"MEMBER","body":"@nemux nice!!!!! Keep it coming.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/619534999/reactions","total_count":1,"+1":0,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/641226604","html_url":"https://github.com/apache/openjpa/pull/62#issuecomment-641226604","issue_url":"https://api.github.com/repos/apache/openjpa/issues/62","id":641226604,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTIyNjYwNA==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-09T11:23:21Z","updated_at":"2020-06-09T11:23:21Z","author_association":"MEMBER","body":"Thanks @solomax !","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/641226604/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/641227764","html_url":"https://github.com/apache/openjpa/pull/62#issuecomment-641227764","issue_url":"https://api.github.com/repos/apache/openjpa/issues/62","id":641227764,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTIyNzc2NA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-09T11:25:43Z","updated_at":"2020-06-09T11:25:43Z","author_association":"CONTRIBUTOR","body":"Is there a jira about it? (for the changelog)\r\nWhen can it arrive - = any way to reproduce it in a test? (when DB already exists and JPA model is not 1-1?)","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/641227764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/641234398","html_url":"https://github.com/apache/openjpa/pull/62#issuecomment-641234398","issue_url":"https://api.github.com/repos/apache/openjpa/issues/62","id":641234398,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTIzNDM5OA==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-09T11:38:31Z","updated_at":"2020-06-09T11:38:31Z","author_association":"MEMBER","body":"> Is there a jira about it? (for the changelog)\r\n\r\nNo, I would have added it to the commit message, in case; I thought it was not needed, being just an additional check to avoid an exception\r\n\r\n> When can it arrive - = any way to reproduce it in a test?\r\n\r\nAs I said above, I am not able to reproduce it systematically but, looking at the code, I thought it was safer any way to add a check, so I did.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/641234398/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/641255826","html_url":"https://github.com/apache/openjpa/pull/62#issuecomment-641255826","issue_url":"https://api.github.com/repos/apache/openjpa/issues/62","id":641255826,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MTI1NTgyNg==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-09T12:27:44Z","updated_at":"2020-06-09T12:27:44Z","author_association":"CONTRIBUTOR","body":"Hmm, concretely it shouldn't be possible and it is safe to directly access it since we computed the model before so to me - and I don't fully get the source yet - it looks like it hides the real issue more than fixing it, no?","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/641255826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657642869","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657642869","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657642869,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzY0Mjg2OQ==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T15:55:31Z","updated_at":"2020-07-13T15:55:31Z","author_association":"CONTRIBUTOR","body":"Will create a trunk PR after this has been reviewed.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657642869/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657652349","html_url":"https://github.com/apache/openjpa/pull/63#issuecomment-657652349","issue_url":"https://api.github.com/repos/apache/openjpa/issues/63","id":657652349,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzY1MjM0OQ==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T16:13:00Z","updated_at":"2020-07-13T16:13:00Z","author_association":"MEMBER","body":"...no tests at all?","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657652349/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657671825","html_url":"https://github.com/apache/openjpa/pull/63#issuecomment-657671825","issue_url":"https://api.github.com/repos/apache/openjpa/issues/63","id":657671825,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzY3MTgyNQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T16:50:46Z","updated_at":"2020-07-13T16:50:46Z","author_association":"CONTRIBUTOR","body":"@ilgrosso IT are coming but are IT (for ext db they are only meaningful if covering 100% of db version otherwise it is like having no test for all other versions ;)). We also have issues with our IT as mentionned by Mark on the list and it hits here so need a few days.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657671825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657676916","html_url":"https://github.com/apache/openjpa/pull/63#issuecomment-657676916","issue_url":"https://api.github.com/repos/apache/openjpa/issues/63","id":657676916,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzY3NjkxNg==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T17:01:00Z","updated_at":"2020-07-13T17:01:22Z","author_association":"MEMBER","body":"We do have tests for other in-memory dbms, I was thinking to include the new one.\n...and \"some test\" is always better than \"no tests\".","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657676916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657680377","html_url":"https://github.com/apache/openjpa/pull/63#issuecomment-657680377","issue_url":"https://api.github.com/repos/apache/openjpa/issues/63","id":657680377,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzY4MDM3Nw==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T17:07:53Z","updated_at":"2020-07-13T17:07:53Z","author_association":"CONTRIBUTOR","body":"@ilgrosso agree, point was more that IMHO it is more important to make it its way on master than to get an IT which is not straight forward yet (a mix between both the DB and our own lacks of our suite). To be concrete I expect a snapshot to be grabbable in the coming days for CI to catch/test up with the newt config so test are pushed to another PR. Hope it makes sense.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657680377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657685084","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657685084","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657685084,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzY4NTA4NA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T17:17:30Z","updated_at":"2020-07-13T17:17:30Z","author_association":"CONTRIBUTOR","body":"@jgrassel , for now I'm trying to see in which case we need that. Say me if I'm wrong but the scope is only about the javaagent (other cases - ie container deployment enhancement and build time enhancement - must be single threaded by construction today). Since all entities are loaded when the EMF is created it should also be single threaded until the EMF is lazily created and concurrently at runtime - which must be handled by the EMF then IMO. The comment is surprising though cause it means it only happens when loading openjpa itself - which kind of implies the temp loader should filter openjpa \"runtime\" instead of adding this boolean. So wonder if you are able to replicate the issue in a test (even abusing of countdownlatch or \"sleep\" in loadClass) to ensure we fix an issue instead of propagating dead code. Hope it makes sense.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657685084/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657690775","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657690775","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657690775,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzY5MDc3NQ==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T17:29:06Z","updated_at":"2020-07-13T17:29:06Z","author_association":"CONTRIBUTOR","body":"@rmannibucau  This issue was brought to my awareness after Open Liberty's application classloader was updated to allow multi-threaded concurrency (even though concurrency was allowed after JDK 7, OpenLiberty only very recently updated its own application classloader to allow this).  Presumably, this would also affect other application servers which are also updated to take advantage of that particular approach for performance improvement.\r\n\r\nI was not able to replicate this in a test environment, but my customer has confirmed that this resolved the symptoms caused by the old design approach (in the form of entity types not being class transformed).","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657690775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657693580","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657693580","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657693580,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzY5MzU4MA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T17:34:47Z","updated_at":"2020-07-13T17:34:47Z","author_association":"CONTRIBUTOR","body":"@jgrassel can you thread dump (even with a monkey patch) when the issue occurs? OpenLiberty is supposed to have the EMF ready during CDI boot (I know there is a chicken egg issue between cdi and jpa in the spec so can be a toggle thing in OpenLiberty) and this part is monothreaded so classes are either concurrently loaded before (which can be but would be weird and wouldn't use enhancement at deploy time properly) or it is when bypassing this part (not EE case?).\r\nI'm just trying to refine the exact use case cause today I would be more keen to remove the boolean but I'm sure I miss a case if you hit it hard, we just need to ensure we fully get why ;). Also happy to run it locally if you can share a mvn project on github.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657693580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657699740","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657699740","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657699740,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzY5OTc0MA==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T17:47:25Z","updated_at":"2020-07-13T17:47:25Z","author_association":"CONTRIBUTOR","body":"True, OpenLiberty creates the EMF during application start (it has to, in order to register the Class Transformer [with the application classloader] before any of the persistent capable classes are loaded), but the transformation is invoked when the class is first loaded, which can happen at any time after the transformer has been registered.  In the customer scenario, two concurrent threads triggered a classload on the same application classloader.  Before the classloader perf-update, one thread would secure a lock on the classloader, while the second thread would get blocked, the class that it requested would be enhanced, and then it would unlock the classloader, which then the other thread would get its lock.\r\n\r\nNow, both threads can concurrently request a class load without one being blocked, so both can enter the transformer (enhancer) and the same time.  One thread sets the `_transforming` boolean, and while that thread is doing its transforming work, the other thread sees that `_transforming` has been set, assumes that this is a reentrant call(x), and returns null -- meaning don't transform the class.  So the second thread's transform request does not happen, and the class is loaded untransformed, and thus cannot be used by openjpa.\r\n\r\n(x) - The `_transforming` field was to prevent reentrancy which, in the days of single-threaded access, was assumed to be only possible by the thread that had the lock on the classloader, and during the transform, a classload occurred while in the transform method body and that classload (an openjpa library class is the only possibility at this point, it wouldn't be a PC-type) is being performed by the classloader that has the enhancer registered to it.  Since it was safe to assume that a reentrant call to the enhancer could only be an openjpa library type, that would never be enhanced, so just return null instead of going through the effort spent to check the type against the persistence unit's PC-type membership list.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657699740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657701193","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657701193","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657701193,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzcwMTE5Mw==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T17:50:25Z","updated_at":"2020-07-13T17:50:25Z","author_association":"CONTRIBUTOR","body":"Now, I can try to come up with an example to demonstrate it, but I am on a very tight deadline, so I can agree to delay committing the update to trunk, but I'm going to insist on the example not being a gating requirement for integrating into 2.2.x.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657701193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657703700","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657703700","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657703700,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NzcwMzcwMA==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T17:55:32Z","updated_at":"2020-07-13T17:55:32Z","author_association":"CONTRIBUTOR","body":"(updated the commit to rename `_tl` to `_isTransformingInLocalThread` based on a review comment by Albert.  Thanks!)","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657703700/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657757931","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657757931","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657757931,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Nzc1NzkzMQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T19:51:57Z","updated_at":"2020-07-13T19:51:57Z","author_association":"CONTRIBUTOR","body":"@jgrassel Hmm, a few things which makes this fix looking very weird to me:\r\n\r\n1. fact is it is already synchronized by metadatarepository until Preload=true (see org.apache.openjpa.meta.MetaDataRepository#preload) so concurrency here is very unlikely so removing the threadlocal (and boolean) sounds better to me - I guess only Geronimo (and maybe WAS?) was using it out there due to a not conrrectly configured temp loader.\r\n2. that _transforming boolean was not here for exactly what you describe but for the case you load a transformed class and - using the javaagent, not a deploy time or build time enhancement - you load openjpa (org.apache.openjpa.enhance.PCEnhancer typically but a few other classes as well).\r\n3. a correct concurrent classloader locks around transform so the case you describe does not really happen and the boolean protection is not needed even with the javaagent (classloader#loadclass > findClass > transform for custom classloaders or loadclass > findclass > defineClass > transform for the jvm classloader)\r\n\r\nSo at the end it sounds like a bug in the classloader you use in openliberty so I would fix it there.\r\n\r\nBTW where is Albert's review? I can't see it it seems.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657757931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657767799","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657767799","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657767799,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Nzc2Nzc5OQ==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T20:14:14Z","updated_at":"2020-07-13T20:15:05Z","author_association":"CONTRIBUTOR","body":"I asked Albert via company internal slack to review my changes, he's not set up a link between github and apache yet.\r\n\r\n```\r\nJoe Grassel  11:07 AM\r\nHey, Albert.  Hope things are going well!  I was going to ask if you could do an OpenJPA code review, as Will is out until tomorrow and I've got a customer pressuring for an ifix asap.  https://issues.apache.org/jira/browse/OPENJPA-2817\r\n\r\nAlbert Lee  12:31 PM\r\nJody,  I have reviewed the PR.  I don't have access to approve the PR.\r\nOnce one comment:\r\nprivate static final ThreadLocal<Boolean> tl = new ThreadLocal();\r\n12:33\r\nyou may want to add a comment for that this variable is for.   tl does not means anything to me.  The value in this ThreadLocal is irrelevant since you are just checking for not null. Change it to isTransformingInLocalThread ?\r\n\r\nJoe Grassel  12:33 PM\r\nOh, sure, that's a good idea.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657767799/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657775964","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657775964","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657775964,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Nzc3NTk2NA==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T20:28:51Z","updated_at":"2020-07-13T20:28:51Z","author_association":"CONTRIBUTOR","body":"@rmannibucau\r\n\r\n1. `preload=true` is not enabled by default (at least it is not in the 2.2.x branch.)  Therefore the MDR will lazily initialize itself in incrementals that it finds necessary.  Also, processing reaches the `_transforming` check before touching the MDR (which yes, has synchronized access, but it is invoked only after `_transforming` is checked and set)\r\n\r\n2. The `_transforming` field is there because it is possible for a classloader load to occur while the transform() is being executed, where the second load is an OpenJPA library type (for the scenario where OpenJPA is bundled in the application and thus is being loaded by the application classloader that will call on the enhancer to transform a class before loading it), which when classloader access is synchronized across threads, a reentrant call could be assumed to be this situation.  See Marc's commit from 14 years ago:\r\n\r\n```\r\ncommit f74ac8b6b9f8d6f5c4fdae6798018458687741fc\r\nAuthor: Marc Prud'hommeaux <mprudhom@apache.org> 2006-09-29 21:00:40\r\nCommitter: Marc Prud'hommeaux <mprudhom@apache.org> 2006-09-29 21:00:40\r\nParent: 1236605135400dd42e4942d25cff310ac304dac0 (removed unneeded imports)\r\nChild: e30632b60b26430fe4f95dd3f5a3bd79c4a36f9f (Trying a new approach to automatic enhancement in a container.  Might have to revert.)\r\nBranches: 2.2.x_debug, 2.2.x_OJ2287, 2.2.x_OJ2790, 2.2.x_TS003776060_PH26967, 2.4.x_OJ2790, currentaccessdiag, DIAG_TS003449484, master, master_OJ2790, OJ2603, OPENJPA_2817_22X, pmr42014_211_788, QueryDebugForCase, trunk, TS000798754, TS001107772, TS001228829_DIAG01, TS001491495, TS002193952_detach_issue, TS002637050_testfix_2.2.x, ibmgit/1.2.x, ibmgit/2.2.x_debug and 71 more branches\r\n\r\nPrevent reentrant calls to transform() in order to prevent attempts to enhance OpenJPA libraries (for cases where OpenJPA falls under the control of the enhancing class loader).\r\n\r\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@451517 13f79535-47bb-0310-9956-ffa450edef68\r\n```\r\n\r\nHowever, because now the classloader isn't going to synchronize between threads, we can't make that assumption anymore, hence we need to rely on a marker that is independent of the thread -- a ThreadLocal instead of a boolean.\r\n\r\n3.  This is an issue within the transformer/enhancer, I do not think shifting the burden of single-transformer entrancy to the application server is the correct solution.\r\n","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657775964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657785926","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657785926","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657785926,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Nzc4NTkyNg==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T20:47:52Z","updated_at":"2020-07-13T20:51:29Z","author_association":"CONTRIBUTOR","body":"@jgrassel \r\n\r\n1. hmm, depends once again the env, with a javaagent it will be triggered on a new MyEntity() but on other cases it will not. And for javaagent this is not an issue since the context is protected properly by the classloader normally.\r\n2. this is a setup bug we shouldn't have. Correct fix is probably to prevent openjpa to be loaded from the temp loader (likely container integration) and/or to skip openjpa stack in transform (we can skip more actually, see https://github.com/apache/tomee/blob/master/container/openejb-core/src/main/java/org/apache/openejb/util/classloader/URLClassLoaderFirst.java#L207 for a list example). A toggle is a quick and dirty fix but does not solve the cause of this issue IMHO. The threadlocal generalizes this workaround but still does not tackle the source of the issue. I'd like to fix it right on master at least.\r\n3. The transformer is executed in a secured context by design/contract so this must be an issue with the env so part of 2 (the exclusion list in transform) and potentially server classloader enhancement support.\r\n\r\nWhat the boolean - with a threadlocal or not - enables is to not enhance some classes - this is why sometimes we can have \"missing metadata\" error in some setup because if an enhancement triggers the load of another entity, this last one is not enhanced - depends the tmploader which can be the same as app loader when using an agent to speed up the execution/boot.\r\n\r\nFYI: dropping the boolean the build still works fine so guess we should work forward the exclusion list.\r\n\r\nWhat about something like that:\r\n\r\n\tdiff --git a/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCClassFileTransformer.java b/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCClassFileTransformer.java\r\n\tindex 872d413a4..1126762ef 100644\r\n\t--- a/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCClassFileTransformer.java\r\n\t+++ b/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCClassFileTransformer.java\r\n\t@@ -55,7 +55,6 @@ public class PCClassFileTransformer\r\n\t     private final ClassLoader _tmpLoader;\r\n\t     private final Log _log;\r\n\t     private final Set _names;\r\n\t-    private boolean _transforming = false;\r\n\t \r\n\t     /**\r\n\t      * Constructor.\r\n\t@@ -107,6 +106,9 @@ public class PCClassFileTransformer\r\n\t\t     _log.info(_loc.get(\"runtime-enhance-pcclasses\"));\r\n\t     }\r\n\t \r\n\t+    // this must be called under a proper locking, this is guaranteed by either\r\n\t+    // a correct concurrent classloader with transformation support OR\r\n\t+    // a mono-threaded access guarantee (build, deploy time enhancements).\r\n\t     @Override\r\n\t     public byte[] transform(ClassLoader loader, String className,\r\n\t\t Class redef, ProtectionDomain domain, byte[] bytes)\r\n\t@@ -115,16 +117,13 @@ public class PCClassFileTransformer\r\n\t\t     return null;\r\n\t \r\n\t\t // JDK bug -- OPENJPA-1676\r\n\t-        if (className == null) {\r\n\t+        if (className == null ||\r\n\t+                className.startsWith(\"org/apache/openjpa/\") ||\r\n\t+                className.startsWith(\"java/\") ||\r\n\t+                className.startsWith(\"javax/\") ||\r\n\t+                className.startsWith(\"jakarta/\")) {\r\n\t\t     return null;\r\n\t\t }\r\n\t-        // prevent re-entrant calls, which can occur if the enhancing\r\n\t-        // loader is used to also load OpenJPA libraries; this is to prevent\r\n\t-        // recursive enhancement attempts for internal openjpa libraries\r\n\t-        if (_transforming)\r\n\t-            return null;\r\n\t-\r\n\t-        _transforming = true;\r\n\t \r\n\t\t return transform0(className, redef, bytes);\r\n\t     }\r\n\t@@ -151,7 +150,7 @@ public class PCClassFileTransformer\r\n\t\t     try {\r\n\t\t         PCEnhancer enhancer = new PCEnhancer(_repos.getConfiguration(),\r\n\t\t                 new Project().loadClass(new ByteArrayInputStream(bytes),\r\n\t-                                _tmpLoader), _repos);\r\n\t+                                _tmpLoader), _repos, _tmpLoader);\r\n\t\t         enhancer.setAddDefaultConstructor(_flags.addDefaultConstructor);\r\n\t\t         enhancer.setEnforcePropertyRestrictions\r\n\t\t                 (_flags.enforcePropertyRestrictions);\r\n\t@@ -172,7 +171,6 @@ public class PCClassFileTransformer\r\n\t\t         throw (IllegalClassFormatException) t;\r\n\t\t     throw new GeneralException(t);\r\n\t\t } finally {\r\n\t-            _transforming = false;\r\n\t\t     if (returnBytes != null && _log.isTraceEnabled())\r\n\t\t         _log.trace(_loc.get(\"runtime-enhance-complete\", className,\r\n\t\t             bytes.length, returnBytes.length));\r\n\t@@ -186,9 +184,9 @@ public class PCClassFileTransformer\r\n\t\t if (redef != null) {\r\n\t\t     Class[] intfs = redef.getInterfaces();\r\n\t\t     for (int i = 0; i < intfs.length; i++)\r\n\t-                if (PersistenceCapable.class.getName().\r\n\t-                    equals(intfs[i].getName()))\r\n\t-                    return Boolean.valueOf(!isEnhanced(bytes));\r\n\t+                if (PersistenceCapable.class.getName()\r\n\t+                    .equals(intfs[i].getName()))\r\n\t+                    return false;\r\n\t\t     return null;\r\n\t\t }\r\n\t \r\n\t@@ -198,8 +196,6 @@ public class PCClassFileTransformer\r\n\t\t     return null;\r\n\t\t }\r\n\t \r\n\t-        if (clsName.startsWith(\"java/\") || clsName.startsWith(\"javax/\"))\r\n\t-            return null;\r\n\t\t if (isEnhanced(bytes))\r\n\t\t     return Boolean.FALSE;\r\n\t ","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657785926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657789090","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657789090","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657789090,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Nzc4OTA5MA==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T20:55:36Z","updated_at":"2020-07-13T20:55:36Z","author_association":"CONTRIBUTOR","body":"This has nothing to do with the temp classloader.  The temp classloader itself doesn't have an enhancer registered to it, it only exists as a means for the persistence provider impl to load a class (in order to inspect it via reflection, though OpenJPA uses SERP for that business, I don't believe OpenJPA does much with the temp classloader that PersistenceUnitInfo can provide) without using the real application classloader (because once a class is loaded, that's it, the opportunity to enhance it has been missed.)","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657789090/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657792504","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657792504","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657792504,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Nzc5MjUwNA==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T21:03:23Z","updated_at":"2020-07-13T21:03:23Z","author_association":"CONTRIBUTOR","body":"Personally, I'm not a fan of the \"exclude list\", because that adds a lot of unnecessary processing time, as String comparing a jar with hundreds and even thousands of classes against a group of patterns is not going to come cheap.  In an application server environment, as long as the jpa provider impl is not bundled with the application (that is, loaded by the same classloader that we register a class transformer with), then the reentrancy that the `_transforming` boolean was put in to guard against is not going to happen.  But it can if openjpa is bundled as part of the application and is loaded by the classloader which has the transformer registered to it.  That's what Marc's original method was to guard against.\r\n\r\nBut like I've said many times now, with ClassLoaders that permit concurrent classloading (and thus concurrent enhancing), the boolean method falls short because it doesn't detect thread-scoped reentrancy.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657792504/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657842754","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657842754","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657842754,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Nzg0Mjc1NA==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T22:53:25Z","updated_at":"2020-07-13T23:21:05Z","author_association":"CONTRIBUTOR","body":"Okay, here is a maven project that will demonstrate the problem with an application server using openjpa.\r\n\r\nCouple of notes:\r\n1. Yes, you can use the `mvn liberty:start` goal in the `ear` sub-project (after building the entire project) to download Open Liberty and start the server, but it will use Eclipselink.  URL to hit the test servlet is `http://localhost:9080/jpatest/SimpleTestServlet` .\r\n2. Open Liberty does not ship with OpenJPA, only Eclipselink.  It's Commercial Liberty that ships with OpenJPA in the form of the `jpa-2.0` feature.  The maven tools will thus not be able to download the jpa-2.0 feature because it is not available to the open public.\r\n\r\nHowever, you can build and extract the ear application generated, and run it on an application server that will run with OpenJPA.  The problem will only manifest itself if the application classloader allows for concurrent classloading and enhancement.\r\n\r\nExample output using Commercial Liberty with the ear generated by this application:\r\n```\r\nOPENJPA-2817 Test Case\r\n\r\nStarting Worker thread 1...\r\nStarting Worker thread 2...\r\nWorker Threads Complete.\r\nWorker thread Thread-30 started.\r\n\r\nNow to verify enhancement. Look at the interfaces associated with EntityA and EntityC:\r\nClass: model.EntityA\r\nWorker thread Thread-30 finished.\r\nInterfaces:\r\norg.apache.openjpa.enhance.PersistenceCapable\r\n\r\n\r\nClass: model.EntityC\r\nNo Interfaces Found\r\nWorker thread Thread-31 started.\r\nWorker thread Thread-31 finished.\r\n```\r\n\r\nNote that with Eclipselink, which has a bytecode weaver that properly manages reentrancy, doesn't suffer from this problem:\r\n```\r\nOPENJPA-2817 Test Case\r\n\r\nStarting Worker thread 1...\r\nStarting Worker thread 2...\r\nWorker thread Thread-16 started.\r\nWorker thread Thread-17 started.\r\nWorker thread Thread-17 finished.\r\nWorker thread Thread-16 finished.\r\nWorker Threads Complete.\r\n\r\nNow to verify enhancement. Look at the interfaces associated with EntityA and EntityC:\r\nClass: model.EntityA\r\nInterfaces:\r\njava.lang.Cloneable\r\norg.eclipse.persistence.internal.weaving.PersistenceWeaved\r\norg.eclipse.persistence.internal.descriptors.PersistenceEntity\r\norg.eclipse.persistence.internal.descriptors.PersistenceObject\r\norg.eclipse.persistence.queries.FetchGroupTracker\r\norg.eclipse.persistence.internal.weaving.PersistenceWeavedFetchGroups\r\norg.eclipse.persistence.descriptors.changetracking.ChangeTracker\r\norg.eclipse.persistence.internal.weaving.PersistenceWeavedChangeTracking\r\norg.eclipse.persistence.internal.weaving.PersistenceWeavedRest\r\n\r\n\r\nClass: model.EntityC\r\nInterfaces:\r\njava.lang.Cloneable\r\norg.eclipse.persistence.internal.weaving.PersistenceWeaved\r\norg.eclipse.persistence.internal.descriptors.PersistenceEntity\r\norg.eclipse.persistence.internal.descriptors.PersistenceObject\r\norg.eclipse.persistence.queries.FetchGroupTracker\r\norg.eclipse.persistence.internal.weaving.PersistenceWeavedFetchGroups\r\norg.eclipse.persistence.descriptors.changetracking.ChangeTracker\r\norg.eclipse.persistence.internal.weaving.PersistenceWeavedChangeTracking\r\norg.eclipse.persistence.internal.weaving.PersistenceWeavedRest\r\n```\r\n[openjpa_2817-project.zip](https://github.com/apache/openjpa/files/4915535/openjpa_2817-project.zip)\r\n","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657842754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657859353","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657859353","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657859353,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Nzg1OTM1Mw==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-13T23:11:32Z","updated_at":"2020-07-13T23:11:32Z","author_association":"CONTRIBUTOR","body":"And in the OpenJPA case above, here is a cut of the trace log file showing EntityA (thread 000000a2) being enhanced, but EntityC (thread 000000a3) is not:\r\n\r\n```\r\n[7/13/20 17:44:15:317 CDT] 0000008f JPAPUnitInfo_ >  transformClass: PUID = PuId=jpasandbox_simple_web.ear-1.0-SNAPSHOT.ear#webapp.war#TestPU, class name = web.SimpleTestServlet$Worker, classBytes.length = 1907 Entry  \r\n                                 (file:/Users/jgrassel/Dev/Liberty/WS-CD-Open/dev/build.image/wlp/usr/servers/defaultServer/apps/jpasandbox_simple_web.ear-1.0-SNAPSHOT.ear <no signer certificates>)\r\n                                 com.ibm.ws.classloading.internal.AppClassLoader@369bc432\r\n[7/13/20 17:44:15:317 CDT] 0000008f JPAPUnitInfo  >  classNeedsTransform : PUID = PuId=jpasandbox_simple_web.ear-1.0-SNAPSHOT.ear#webapp.war#TestPU, class name = web.SimpleTestServlet$Worker Entry \r\n[7/13/20 17:44:15:317 CDT] 0000008f JPAPUnitInfo  <  classNeedsTransform : web.SimpleTestServlet$Worker needs transform. Exit \r\n[7/13/20 17:44:15:317 CDT] 0000008f JPAPUnitInfo_ 3   transformer: org.apache.openjpa.persistence.PersistenceProviderImpl$ClassTransformerImpl@4192b75d , className: web.SimpleTestServlet$Worker\r\n[7/13/20 17:44:15:317 CDT] 0000008f JPAPUnitInfo_ 3   transformer:org.apache.openjpa.persistence.PersistenceProviderImpl$ClassTransformerImpl@4192b75d, web.SimpleTestServlet$Worker is NOT transformed. Byte length(old/new)=1907/1907\r\n[7/13/20 17:44:15:317 CDT] 0000008f JPAPUnitInfo_ <  transformClass: 0/1 Exit \r\n[7/13/20 17:44:15:321 CDT] 000000a3 JPAPUnitInfo_ >  transformClass: PUID = PuId=jpasandbox_simple_web.ear-1.0-SNAPSHOT.ear#webapp.war#TestPU, class name = model.EntityC, classBytes.length = 1219 Entry  \r\n                                 (file:/Users/jgrassel/Dev/Liberty/WS-CD-Open/dev/build.image/wlp/usr/servers/defaultServer/apps/jpasandbox_simple_web.ear-1.0-SNAPSHOT.ear <no signer certificates>)\r\n                                 com.ibm.ws.classloading.internal.AppClassLoader@369bc432\r\n[7/13/20 17:44:15:321 CDT] 000000a2 JPAPUnitInfo_ >  transformClass: PUID = PuId=jpasandbox_simple_web.ear-1.0-SNAPSHOT.ear#webapp.war#TestPU, class name = model.EntityA, classBytes.length = 2258 Entry  \r\n                                 (file:/Users/jgrassel/Dev/Liberty/WS-CD-Open/dev/build.image/wlp/usr/servers/defaultServer/apps/jpasandbox_simple_web.ear-1.0-SNAPSHOT.ear <no signer certificates>)\r\n                                 com.ibm.ws.classloading.internal.AppClassLoader@369bc432\r\n[7/13/20 17:44:15:322 CDT] 000000a2 JPAPUnitInfo  >  classNeedsTransform : PUID = PuId=jpasandbox_simple_web.ear-1.0-SNAPSHOT.ear#webapp.war#TestPU, class name = model.EntityA Entry \r\n[7/13/20 17:44:15:322 CDT] 000000a3 JPAPUnitInfo  >  classNeedsTransform : PUID = PuId=jpasandbox_simple_web.ear-1.0-SNAPSHOT.ear#webapp.war#TestPU, class name = model.EntityC Entry \r\n[7/13/20 17:44:15:322 CDT] 000000a2 JPAPUnitInfo  <  classNeedsTransform : model.EntityA needs transform. Exit \r\n[7/13/20 17:44:15:322 CDT] 000000a2 JPAPUnitInfo_ 3   transformer: org.apache.openjpa.persistence.PersistenceProviderImpl$ClassTransformerImpl@4192b75d , className: model.EntityA\r\n[7/13/20 17:44:15:322 CDT] 000000a3 JPAPUnitInfo  <  classNeedsTransform : model.EntityC needs transform. Exit \r\n[7/13/20 17:44:15:322 CDT] 000000a3 JPAPUnitInfo_ 3   transformer: org.apache.openjpa.persistence.PersistenceProviderImpl$ClassTransformerImpl@4192b75d , className: model.EntityC\r\n[7/13/20 17:44:15:322 CDT] 000000a3 JPAPUnitInfo_ 3   transformer:org.apache.openjpa.persistence.PersistenceProviderImpl$ClassTransformerImpl@4192b75d, model.EntityC is NOT transformed. Byte length(old/new)=1219/1219\r\n[7/13/20 17:44:15:322 CDT] 000000a3 JPAPUnitInfo_ <  transformClass: 0/1 Exit \r\n[7/13/20 17:44:15:325 CDT] 000000a2 Enhance       3   openjpa.Enhance: Trace: \"model.EntityA\" requires runtime enhancement: true\r\n[7/13/20 17:44:15:366 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: Loading metadata for \"class model.EntityA\" under mode \"[META][QUERY]\".\r\n[7/13/20 17:44:15:387 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: Parsing class \"model.EntityA\".\r\n[7/13/20 17:44:15:387 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: Parsing package \"model.EntityA\".\r\n[7/13/20 17:44:15:408 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: Generating default metadata for type \"model.EntityA\".\r\n[7/13/20 17:44:15:408 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: Using reflection for metadata generation.\r\n[7/13/20 17:44:15:420 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: Set persistence-capable superclass of \"model.EntityA\" to \"null\".\r\n[7/13/20 17:44:15:422 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: Resolving metadata for \"model.EntityA@5732165\".\r\n[7/13/20 17:44:15:422 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: \tResolving field \"model.EntityA@5732165.entityB\".\r\n[7/13/20 17:44:15:422 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: Loading metadata for \"class model.EntityB\" under mode \"[META][QUERY]\".\r\n[7/13/20 17:44:15:422 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: Parsing class \"model.EntityB\".\r\n[7/13/20 17:44:15:422 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: Generating default metadata for type \"model.EntityB\".\r\n[7/13/20 17:44:15:422 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: Using reflection for metadata generation.\r\n[7/13/20 17:44:15:423 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: Set persistence-capable superclass of \"model.EntityB\" to \"null\".\r\n[7/13/20 17:44:15:430 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: \tResolving field \"model.EntityA@5732165.id\".\r\n[7/13/20 17:44:15:430 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: \tResolving field \"model.EntityA@5732165.lazyStringData\".\r\n[7/13/20 17:44:15:430 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: \tResolving field \"model.EntityA@5732165.strData\".\r\n[7/13/20 17:44:15:430 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: \tResolving field \"model.EntityA@5732165.version\".\r\n[7/13/20 17:44:15:431 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: Resolving metadata for \"model.EntityB@55778804\".\r\n[7/13/20 17:44:15:431 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: \tResolving field \"model.EntityB@55778804.id\".\r\n[7/13/20 17:44:15:431 CDT] 000000a2 MetaData      3   openjpa.MetaData: Trace: \tResolving field \"model.EntityB@55778804.strData\".\r\n[7/13/20 17:44:15:432 CDT] 000000a2 Enhance       3   openjpa.Enhance: Trace: Enhancing type \"class model.EntityA\" loaded by com.ibm.ws.classloading.internal.ShadowClassLoader@79eae7e4.\r\n[7/13/20 17:44:15:459 CDT] 000000a2 Enhance       3   openjpa.Enhance: Trace: Enhancement for \"model.EntityA\" completed. Class size: [2,258/10,803]\r\n[7/13/20 17:44:15:459 CDT] 000000a2 JPAPUnitInfo_ 3   transformer:org.apache.openjpa.persistence.PersistenceProviderImpl$ClassTransformerImpl@4192b75d, model.EntityA is transformed. Byte length(old/new)=2258/10803\r\n[7/13/20 17:44:15:459 CDT] 000000a2 JPAPUnitInfo_ <  transformClass: 1/1 Exit \r\n```\r\n\r\nNotice we only see: `openjpa.Enhance: Trace: \"model.EntityA\" requires runtime enhancement: true`, but not for EntityC, because the boolean short circuits hitting the MDR.\r\n","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657859353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657993792","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-657993792","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":657993792,"node_id":"MDEyOklzc3VlQ29tbWVudDY1Nzk5Mzc5Mg==","user":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T06:23:28Z","updated_at":"2020-07-14T06:23:28Z","author_association":"MEMBER","body":"I've now read the SE7 documentation about a few times and I think the ThreadLocal<Boolean> is not enough for this specific case. From the ClassLoader doc it appears that the lock now got moved from a full exclusive Semaphore to a Lock by ClassLoader+Classname.\r\nSo - without digging into all the details - it seems logical to also move from a Boolean to a Map<String, Boolean> were the key is the CL id + Classname ?","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/657993792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658034247","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-658034247","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":658034247,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODAzNDI0Nw==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T08:02:31Z","updated_at":"2020-07-14T08:25:42Z","author_association":"CONTRIBUTOR","body":"@struberg point is that the classloader does it and the transformer is called under that lock already\r\n@jgrassel will test your sample but today I'm off but I will come back to you likely tomorrow, thanks a lot for setting up a project!\r\n\r\nedit: tested on tomee adding:\r\n\r\n            <plugin>\r\n                <groupId>org.apache.tomee.maven</groupId>\r\n                <artifactId>tomee-maven-plugin</artifactId>\r\n                <version>8.0.3</version>\r\n            </plugin>\r\n\r\nIt works as expected:\r\n\r\n\tStarting Worker thread 1...\r\n\tStarting Worker thread 2...\r\n\tWorker thread Thread-63 started.\r\n\tWorker Threads Complete.\r\n\r\n\tNow to verify enhancement. Look at the interfaces associated with EntityA and EntityC:\r\n\tWorker thread Thread-64 started.\r\n\tWorker thread Thread-63 finished.\r\n\tWorker thread Thread-64 finished.\r\n\tClass: model.EntityA\r\n\tInterfaces:\r\n\torg.apache.openjpa.enhance.PersistenceCapable\r\n\r\n\r\n\tClass: model.EntityC\r\n\tInterfaces:\r\n\torg.apache.openjpa.enhance.PersistenceCapable he.openjpa.enhance.PersistenceCapable\r\n\tWorker Threads Complete.\r\n\r\n\tNow to verify enhancement. Look at the interfaces associated with EntityA and EntityC:\r\n\tWorker thread Thread-66 finished.\r\n\tClass: model.EntityA\r\n\tInterfaces:\r\n\torg.apache.openjpa.enhance.PersistenceCapable\r\n\r\n\r\n\tClass: model.EntityC\r\n\tInterfaces:\r\n\torg.apache.openjpa.enhance.PersistenceCapable\r\n\r\nIn particular with the proposed patch ^^. Any way to patch liberty locally to run openjpa (creating my liberty.openjpa.jar with blueprint registration maybe?).\r\n\r\nedit 2: just checked openliberty sources (https://github.com/OpenLiberty/open-liberty/ right?), seems all classloaders are marked as concurrent but wrongly get the lock, in particular when there is a transformer so this is not an openjpa issue but an openliberty issue, no? Look https://github.com/OpenLiberty/open-liberty/blob/integration/dev/com.ibm.ws.classloading/src/com/ibm/ws/classloading/internal/AppClassLoader.java#L272 for ex, if no transformer is it correctly impl, if there is a transfomer it bypasses the lock :s.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658034247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658318212","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-658318212","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":658318212,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODMxODIxMg==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T17:43:40Z","updated_at":"2020-07-14T17:43:40Z","author_association":"CONTRIBUTOR","body":"Created https://github.com/apache/openjpa/pull/65 as a proposed fix on master if you want to give it a try.\r\n","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658318212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658319959","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-658319959","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":658319959,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODMxOTk1OQ==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T17:47:06Z","updated_at":"2020-07-14T17:51:27Z","author_association":"CONTRIBUTOR","body":"I've already stated I'm not a fan of the exclusion list, for something that's going to be called once for every class that has to be checked to be enhanced, let alone be enhanced, this is going to be very costly.\r\n\r\nMight as well make the transform() method itself synchronized.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658319959/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658324978","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-658324978","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":658324978,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODMyNDk3OA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T17:57:06Z","updated_at":"2020-07-14T17:57:56Z","author_association":"CONTRIBUTOR","body":"@jgrassel commons is excluded and the jdk as well, just to skip reading the bytecode (which is more costly than this exclusion list if you benchmark both options so overall the fact it is slower or faster depends the classpath size but it is unlikely you notice the difference, in particular with a custom classloader or a default temporary classloader usage which is way slower than that). Also note that the threadlocal option does not work as mentionned so I'm fully open to have another solution but it is better to have a functional solution than nothing I think and I don't have another proposal for now.\r\nAbout locking in transform: you can't do that since you would deadlock with the classloader and it is not needed, this is not the issue you hit btw.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658324978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658326420","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-658326420","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":658326420,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODMyNjQyMA==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T18:00:06Z","updated_at":"2020-07-14T18:00:06Z","author_association":"CONTRIBUTOR","body":"Yeah, I noticed that commons was excluded after taking a second look through the change set, my comment update wasn't fast enough. =). I'm not sure I'm clear on why the ThreadLocal approach does not work?","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658326420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658338171","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-658338171","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":658338171,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODMzODE3MQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T18:24:08Z","updated_at":"2020-07-14T18:24:08Z","author_association":"CONTRIBUTOR","body":"@jgrassel The threadlocal - as the boolean today - just skips the transformer, so it means that if a class must be enhanced and is loaded while another is enhanced then it is skipped and runtime is likely broken. It is not highly highly likely but not uncommon too. In the common cases I see, the case tmpLoader=mainloader (this is a common optimization which saves a lot of time, in particular with CDS on or too wide temp loader impls. In this last case, if the agent is set on the JVM for runtime enhancement, it should work whereas the classloader will guarantee a lock per class and will enable to load a class during a loadclass and the second one will bypass the transformer (wrongly). Also note that the enhancement, using openjpaconf, can load any plugin working on the class graph (thinking to MDR extensions to be concrete) so we don't fully control what can be loaded by openjpa itself during a transform0. So at the end, the only thing we are sure is that we can't transform concurrently a single class but anything else can happen (concurrent calls to transform, nested calls etc). However the main case is still that the \"subloading\" will be about classes of the enhancer graph so the openjpa+serp+asm (i will add this one ;), thanks for reminding it to me) explicit exclusion is a good default I think.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658338171/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658339925","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-658339925","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":658339925,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODMzOTkyNQ==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T18:27:37Z","updated_at":"2020-07-14T18:27:37Z","author_association":"CONTRIBUTOR","body":"Here's a version of the test bucket that will run with the jpa-2.2 complaint version of OpenJPA \r\n\r\nYou'll need to edit the pom.xml file at the project root, and put in the full classname for the ProviderImpl class, as well as the directory where all of the jpa impl jar and its dependent libraries are (be sure to remove the jars containing javax.* packages) -- I moved the openjpa impl jar into lib so that all of the jars were in one dir:\r\n\r\n```\r\n        <!-- Third Party JPA Persistence Provider Configuration \r\n             Persistence Provider Class - fully qualified classname of the provider's implementation of javax.persistence.spi.PersistenceProvider -->\r\n        \r\n        <thirdPartyJPAProviderClass>org.apache.openjpa.persistence.PersistenceProviderImpl</thirdPartyJPAProviderClass>\r\n        \r\n        \r\n        <!-- Path to Third Party JPA Persistence Privider jars -->\r\n        \r\n        <!-- For openjpa, removed the jars containing javax. packages, and moved the openjpa impl into lib -->        \r\n        <thirdPartyJPAProviderPath>/Users/jgrassel/dev/Apache/drivers/apache-openjpa-3.1.0/lib</thirdPartyJPAProviderPath>\r\n```\r\n\r\n[simple-webWithThirdPartyJPAProvider-project.zip](https://github.com/apache/openjpa/files/4920532/simple-webWithThirdPartyJPAProvider-project.zip)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658339925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658340904","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-658340904","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":658340904,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODM0MDkwNA==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T18:29:34Z","updated_at":"2020-07-14T18:29:34Z","author_association":"CONTRIBUTOR","body":"I was able to reproduce the enhancement failure issue with OpenJPA 3.1.0 this way on Open Liberty.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658340904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658349573","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-658349573","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":658349573,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODM0OTU3Mw==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T18:47:33Z","updated_at":"2020-07-14T18:47:33Z","author_association":"CONTRIBUTOR","body":"@jgrassel thanks a lot, I was able to test it on 3.1.2 too and also checked the proposed patch in my PR fixes that issue.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658349573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658350601","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-658350601","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":658350601,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODM1MDYwMQ==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T18:49:44Z","updated_at":"2020-07-14T18:49:44Z","author_association":"CONTRIBUTOR","body":"@rmannibucau That optimization sounds like a violation of the PersistenceUnitInfo contract:\r\n```\r\n/**\r\n* Return a new instance of a ClassLoader that the provider may\r\n* use to temporarily load any classes, resources, or open\r\n* URLs. The scope and classpath of this loader is exactly the\r\n* same as that of the loader returned by\r\n* PersistenceUnitInfo.getClassLoader. None of the classes loaded \r\n* by this class loader will be visible to application\r\n* components. The provider may only use this ClassLoader within \r\n* the scope of the createContainerEntityManagerFactory call.\r\n* @return temporary ClassLoader with same visibility as current \r\n* loader\r\n*/\r\npublic ClassLoader getNewTempClassLoader();\r\n```\r\n\r\nIt specifically states `None of the classes loaded by this class loader will be visible to application components.` -- that is impossible if the Temporary CL is the same object instance as the App CL.\r\n\r\nAnyways, the `_transforming` boolean was put in there to catch a reentrant call triggered during enhancement, which could only occur if the JPA impl classes are loaded by the same CL as the entity classes.  See this flow:\r\n\r\n```\r\n1.  MyEntity is loaded by the ClassLoader for the first time.  Bytecode is fetched, and passed to the enhancer for transformation (if necessary)\r\n2. Control enters the OpenJPA Enhancer code. (_transforming is set true)\r\n3. While in the OpenJPA Enhancer code, one of the OpenJPA impl types needs to be loaded by the ClassLoader.  This triggers the ClassLoader (which this thread has a lock on, as back then CLer access was synchronized) to load that OpenJPA impl type's bytecode and calls the enhancer (the CL just knows this is a class that it is loading, it cannot distinguish an entity class from a non-entity class)\r\n4. Control re-enters the OpenJPA Enhancer code\r\n5. Because this reentrancy can only happen if a class is loaded while processing the enhancement logic (step 3), the class being requested for transformation could only be an openjpa type, which is never going to be enhanced.  So return null (no transform) -- this condition is detected by the `_transforming` field set in (step 2).\r\n6. Transformer returns with no change, CLer finishes loading the OpenJPA type\r\n7. Control returns from the CLer back to the transformer\r\n8. Transformer finishes transforming the class, and sets _transforming to false\r\n9. Control returns to ClassLoader, which loads the transformed bytecode\r\n10. Done, profit!\r\n```\r\n\r\nNow, because ClassLoaders now permit concurrent access among multiple threads, that _transforming boolean has to be thread context aware -- it should allow any number of threads to use the transformer, but the same thread would not be calling a classload and transform for any type other than a JPA provider impl type.\r\n","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658350601/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658353355","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-658353355","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":658353355,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODM1MzM1NQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T18:55:24Z","updated_at":"2020-07-14T18:55:24Z","author_association":"CONTRIBUTOR","body":"@jgrassel yes it violates but it is important to have it when startup time is needed otherwise you basically potentially load all your app twice for nothing (or load it all in mem which is not better). It is a common \"workaround\" for a poorly written spec if you want but it is used. Also note that strictly speaking it is compliant with the spec if you use a javaagent (even if I can agree it was maybe not the original intent but technically it is and it fully match the original goal of ensuring runtime enhancement works :).\r\n\r\nAbout the loading: we just don't know as explained in previous message so we can't just have a skip flag (per thread or not). My PR works well while you use openjpa provided classes, with extensions it can requires some more work in integration code (wrap the transformer basically to prefilter known extensions) or we should add a config for the exclusion list in the pu (think it would be good anyway).\r\n","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658353355/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658357931","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-658357931","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":658357931,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODM1NzkzMQ==","user":{"login":"jgrassel","id":28658988,"node_id":"MDQ6VXNlcjI4NjU4OTg4","avatar_url":"https://avatars.githubusercontent.com/u/28658988?v=4","gravatar_id":"","url":"https://api.github.com/users/jgrassel","html_url":"https://github.com/jgrassel","followers_url":"https://api.github.com/users/jgrassel/followers","following_url":"https://api.github.com/users/jgrassel/following{/other_user}","gists_url":"https://api.github.com/users/jgrassel/gists{/gist_id}","starred_url":"https://api.github.com/users/jgrassel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jgrassel/subscriptions","organizations_url":"https://api.github.com/users/jgrassel/orgs","repos_url":"https://api.github.com/users/jgrassel/repos","events_url":"https://api.github.com/users/jgrassel/events{/privacy}","received_events_url":"https://api.github.com/users/jgrassel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T19:04:43Z","updated_at":"2020-07-14T19:05:04Z","author_association":"CONTRIBUTOR","body":"Ok, glad to hear that it worked with 3.1.2 (the patch that is)!","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658357931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658359342","html_url":"https://github.com/apache/openjpa/pull/64#issuecomment-658359342","issue_url":"https://api.github.com/repos/apache/openjpa/issues/64","id":658359342,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODM1OTM0Mg==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T19:07:38Z","updated_at":"2020-07-14T19:08:24Z","author_association":"CONTRIBUTOR","body":"@jgrassel not with 3.1.2  (:() but with a patched 3.1.3-SNAPSHOT (still trying to find a good solution we both agree on before merging/pushing). Just meant I can reproduce the issue too with 3.1.2.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658359342/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658421421","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-658421421","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":658421421,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODQyMTQyMQ==","user":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-14T21:24:42Z","updated_at":"2020-07-14T21:24:42Z","author_association":"MEMBER","body":"I still wonder if this whole `_transforming` boolean is a bit gone wrong?\r\n\r\nA.) it is set in a different method than cleared! For no apparent reason. This is not per se wrong, but a sign that the 'design' was not really clear.\r\n\r\nB.) There is already a method `needsEnhance` in `transform0`. This alone would probably be enough to guard us?\r\nThe _transform flag blocks ANY recursive definition. That includes any other entity class you hit while transforming this class.\r\nWe get likely saved by all those classes will be enhanced later on anyway. Is this intentionally or by accident?\r\n\r\nC.) Can't we get into troubles also in other cases in parallel CL mode? \r\n\r\nI also don't really like the string matching. But I likely need one more day to get my head around the full complexity.\r\n\r\nBtw, fun to still see things like `OpenJpaException ke` where ke most likely stands for 'KodoException' :)","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658421421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658559477","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-658559477","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":658559477,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODU1OTQ3Nw==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-15T05:47:56Z","updated_at":"2020-07-15T05:47:56Z","author_association":"CONTRIBUTOR","body":"@struberg agree on A, B is true but likely slower than this exclusion list (even if not sexy it is faster than a hashset in most cases and consumes way less constant mem ;)), C normally no since classloading concurrency is protected by the classloader by spec so only thing we care is being able to load a whole subgraph of openjpa from transform without paying all the self instrumentation cost if not already loaded (unlikely but can happen).\r\n\r\nAnd I repeat what I wrote in the other PR since it was maybe not read by everyone: I'm happy to drop the string list (and likely the new config enabling to control it I didnt add yet in the PR) if we find a solution which works in all cases, I just fail to see a better compromise today - but see that a toggle does not work in a few cases :(.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658559477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658586585","html_url":"https://github.com/apache/openjpa/pull/66#issuecomment-658586585","issue_url":"https://api.github.com/repos/apache/openjpa/issues/66","id":658586585,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODU4NjU4NQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-15T07:04:32Z","updated_at":"2020-07-15T07:04:32Z","author_association":"CONTRIBUTOR","body":"This is what does the getColumnAlias in the enclosing class so it looks good to me, just requires to check all IT on all DB but I'm quite confident.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658586585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658740170","html_url":"https://github.com/apache/openjpa/pull/66#issuecomment-658740170","issue_url":"https://api.github.com/repos/apache/openjpa/issues/66","id":658740170,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODc0MDE3MA==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-15T12:32:59Z","updated_at":"2020-07-15T12:32:59Z","author_association":"CONTRIBUTOR","body":"@rmannibucau  @struberg  I am closing this PR, superseded by #67 ","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/658740170/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/659225545","html_url":"https://github.com/apache/openjpa/pull/67#issuecomment-659225545","issue_url":"https://api.github.com/repos/apache/openjpa/issues/67","id":659225545,"node_id":"MDEyOklzc3VlQ29tbWVudDY1OTIyNTU0NQ==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-16T07:49:54Z","updated_at":"2020-07-16T07:49:54Z","author_association":"CONTRIBUTOR","body":"this is not the right way :-( ","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/659225545/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/659226910","html_url":"https://github.com/apache/openjpa/pull/66#issuecomment-659226910","issue_url":"https://api.github.com/repos/apache/openjpa/issues/66","id":659226910,"node_id":"MDEyOklzc3VlQ29tbWVudDY1OTIyNjkxMA==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-16T07:52:37Z","updated_at":"2020-07-16T07:52:37Z","author_association":"CONTRIBUTOR","body":"GitHub does not allow me to reopen this PR, created #68 68","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/659226910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/659466579","html_url":"https://github.com/apache/openjpa/pull/68#issuecomment-659466579","issue_url":"https://api.github.com/repos/apache/openjpa/issues/68","id":659466579,"node_id":"MDEyOklzc3VlQ29tbWVudDY1OTQ2NjU3OQ==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-16T14:55:24Z","updated_at":"2020-07-16T14:55:24Z","author_association":"CONTRIBUTOR","body":"sorry for the noise, this patch makes sense only with #69 \r\nso I have merged the two patches","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/659466579/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/659466960","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-659466960","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":659466960,"node_id":"MDEyOklzc3VlQ29tbWVudDY1OTQ2Njk2MA==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-16T14:56:00Z","updated_at":"2020-07-16T14:56:00Z","author_association":"CONTRIBUTOR","body":"I will be happy to add tests in case the direction of this patch is good","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/659466960/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/659467892","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-659467892","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":659467892,"node_id":"MDEyOklzc3VlQ29tbWVudDY1OTQ2Nzg5Mg==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-16T14:57:24Z","updated_at":"2020-07-16T14:57:24Z","author_association":"CONTRIBUTOR","body":"@eolivelli looks \"expected\" to me but it needs harnessing for both changes too IMHO","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/659467892/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660118706","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-660118706","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":660118706,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDExODcwNg==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-17T13:51:44Z","updated_at":"2020-07-17T13:51:44Z","author_association":"CONTRIBUTOR","body":"@rmannibucau the patch became bigger as soon as I tried to add test cases.\r\nStill it is not complete, I have to add a test case of the  SelectImpl#getColumnAlias case\r\n\r\nThis patch also is fixing HerdDBDictionary, if you prefer I can separate that change in HerdDBDictionary ticket","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660118706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660127090","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-660127090","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":660127090,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDEyNzA5MA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-17T14:08:20Z","updated_at":"2020-07-17T14:08:20Z","author_association":"CONTRIBUTOR","body":"@eolivelli it is ok to fix herddb dict there since it is fully related IMHO. The first part of the diff is suspicious (schematool diff seems unnecessary and getColumnNames change is unlikely too). Would also be neat to not drop delimiters if the dictionnary does not use them (normalizeColumnKey). If it helps I think we can add a flag in DBIdentifier to notify it is delimited or not and have both the delimited and not delimited values (raw name vs statement name).","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660127090/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660207978","html_url":"https://github.com/apache/openjpa/pull/70#issuecomment-660207978","issue_url":"https://api.github.com/repos/apache/openjpa/issues/70","id":660207978,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDIwNzk3OA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-17T16:32:15Z","updated_at":"2020-07-17T16:32:15Z","author_association":"CONTRIBUTOR","body":"Looks good to me now, only thing to decide is if we keep on push or not (does not hurt I think and can be good for us).\r\nWaiting for a passing build then I think we can merge.\r\n\r\n\r\ncc @ilgrosso @struberg want to have a look?","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660207978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660246008","html_url":"https://github.com/apache/openjpa/pull/70#issuecomment-660246008","issue_url":"https://api.github.com/repos/apache/openjpa/issues/70","id":660246008,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDI0NjAwOA==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-17T17:36:27Z","updated_at":"2020-07-17T17:36:27Z","author_association":"MEMBER","body":"@eolivelli why \"only\" `package`? Why not `install`?\r\n\r\n@rmannibucau +1 to add it to push as well.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660246008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660260140","html_url":"https://github.com/apache/openjpa/pull/70#issuecomment-660260140","issue_url":"https://api.github.com/repos/apache/openjpa/issues/70","id":660260140,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDI2MDE0MA==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-17T18:04:11Z","updated_at":"2020-07-17T18:04:11Z","author_association":"CONTRIBUTOR","body":"@ilgrosso thanks for your review\r\n\r\nThere is not need to 'install'.\r\nWith 'install' Maven copies the jar to .m2.\r\n\r\nIt looks like the build works without it.\r\nProbably 'verify' could work ad well ","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660260140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660275467","html_url":"https://github.com/apache/openjpa/pull/70#issuecomment-660275467","issue_url":"https://api.github.com/repos/apache/openjpa/issues/70","id":660275467,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDI3NTQ2Nw==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-17T18:37:07Z","updated_at":"2020-07-17T18:37:07Z","author_association":"MEMBER","body":"Agree then, go on with verify","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660275467/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660279543","html_url":"https://github.com/apache/openjpa/pull/70#issuecomment-660279543","issue_url":"https://api.github.com/repos/apache/openjpa/issues/70","id":660279543,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDI3OTU0Mw==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-17T18:45:53Z","updated_at":"2020-07-17T18:45:53Z","author_association":"CONTRIBUTOR","body":"@ilgrosso done","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660279543/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660279740","html_url":"https://github.com/apache/openjpa/pull/70#issuecomment-660279740","issue_url":"https://api.github.com/repos/apache/openjpa/issues/70","id":660279740,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDI3OTc0MA==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-17T18:46:22Z","updated_at":"2020-07-17T18:46:22Z","author_association":"CONTRIBUTOR","body":"If you commit this change github actions will automatically be activated probably ","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660279740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660320903","html_url":"https://github.com/apache/openjpa/pull/70#issuecomment-660320903","issue_url":"https://api.github.com/repos/apache/openjpa/issues/70","id":660320903,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDMyMDkwMw==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-17T20:23:09Z","updated_at":"2020-07-17T20:23:09Z","author_association":"CONTRIBUTOR","body":"The build fails with verify\r\n\r\n[ERROR] /home/runner/work/openjpa/openjpa/openjpa-examples/openbooks/build.xml:117: *** Error:\r\n[ERROR] \t\t   The directory for OpenJPA libraries can not be located at /home/runner/.m2/repository/org/apache/openjpa/openjpa-all/3.1.3-SNAPSHOT.\r\n[ERROR] \t\t   Make sure openjpa.lib property value is correct in build.properties file.\r\n[ERROR] around Ant part ...<ant ","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660320903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660335260","html_url":"https://github.com/apache/openjpa/pull/70#issuecomment-660335260","issue_url":"https://api.github.com/repos/apache/openjpa/issues/70","id":660335260,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDMzNTI2MA==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-17T20:59:18Z","updated_at":"2020-07-17T20:59:32Z","author_association":"CONTRIBUTOR","body":"this is a demo run:\r\nhttps://github.com/eolivelli/openjpa/runs/883352848\r\n\r\nfingers crossed :-) ","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660335260/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660335524","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-660335524","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":660335524,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDMzNTUyNA==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-17T21:00:03Z","updated_at":"2020-07-17T21:00:03Z","author_association":"CONTRIBUTOR","body":"all tests passed locally","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660335524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660336352","html_url":"https://github.com/apache/openjpa/pull/70#issuecomment-660336352","issue_url":"https://api.github.com/repos/apache/openjpa/issues/70","id":660336352,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDMzNjM1Mg==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-17T21:02:07Z","updated_at":"2020-07-17T21:02:07Z","author_association":"CONTRIBUTOR","body":"It looks like the ant plugin looks for openjpa lib into local Maven repository.\r\nI will change the goal to 'install' as @ilgrosso suggested","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660336352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660336943","html_url":"https://github.com/apache/openjpa/pull/70#issuecomment-660336943","issue_url":"https://api.github.com/repos/apache/openjpa/issues/70","id":660336943,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDMzNjk0Mw==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-17T21:03:33Z","updated_at":"2020-07-17T21:03:33Z","author_association":"CONTRIBUTOR","body":"try again:\r\nhttps://github.com/eolivelli/openjpa/runs/883449807","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660336943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660441330","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-660441330","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":660441330,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDQ0MTMzMA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-18T07:12:34Z","updated_at":"2020-07-18T07:12:34Z","author_association":"CONTRIBUTOR","body":"Except the double alloc it looks good to me, @struberg want to have a quick look before we merge?","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660441330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660612072","html_url":"https://github.com/apache/openjpa/pull/70#issuecomment-660612072","issue_url":"https://api.github.com/repos/apache/openjpa/issues/70","id":660612072,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDYxMjA3Mg==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-19T08:57:34Z","updated_at":"2020-07-19T08:57:34Z","author_association":"CONTRIBUTOR","body":"@ilgrosso @rmannibucau @struberg an you please commit this patch ?\r\nit looks like it works very well\r\nhttps://github.com/eolivelli/openjpa/runs/883449807\r\n","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660612072/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660626017","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-660626017","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":660626017,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDYyNjAxNw==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-19T10:59:34Z","updated_at":"2020-07-19T10:59:34Z","author_association":"CONTRIBUTOR","body":"all tests are passing locally on this branch","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660626017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660665518","html_url":"https://github.com/apache/openjpa/pull/70#issuecomment-660665518","issue_url":"https://api.github.com/repos/apache/openjpa/issues/70","id":660665518,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDY2NTUxOA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-19T15:42:24Z","updated_at":"2020-07-19T15:42:24Z","author_association":"CONTRIBUTOR","body":"+1 from me","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660665518/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660928008","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-660928008","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":660928008,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDkyODAwOA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T09:54:20Z","updated_at":"2020-07-20T09:54:20Z","author_association":"CONTRIBUTOR","body":"Once double allocation (https://github.com/apache/openjpa/pull/69/files#diff-59344a422210f668cbeb574dc22e8339R324) is fixed it can be merged for me","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660928008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660941112","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-660941112","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":660941112,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MDk0MTExMg==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T10:20:37Z","updated_at":"2020-07-20T10:20:37Z","author_association":"CONTRIBUTOR","body":"@rmannibucau  let's see now github validation in action","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/660941112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/661005910","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-661005910","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":661005910,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTAwNTkxMA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T12:39:17Z","updated_at":"2020-07-20T12:39:17Z","author_association":"CONTRIBUTOR","body":"Mergeable for me (i cant do it right now so if any dev with the perms agree and comes feel free to hit the green button)","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/661005910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/661011182","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-661011182","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":661011182,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTAxMTE4Mg==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-20T12:43:55Z","updated_at":"2020-07-20T12:43:55Z","author_association":"MEMBER","body":"whoever and does the merge, please do \"squash & merge\" :-)","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/661011182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/661834012","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-661834012","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":661834012,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTgzNDAxMg==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-21T12:42:27Z","updated_at":"2020-07-21T12:42:35Z","author_association":"CONTRIBUTOR","body":"@ilgrosso or @rmannibucau can you please merge this patch ?\r\nI am going to work on the follow up work about storing into DBIdentifier a property that tells if the id has been already delimited","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/661834012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/661835241","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-661835241","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":661835241,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTgzNTI0MQ==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-21T12:44:00Z","updated_at":"2020-07-21T12:44:00Z","author_association":"MEMBER","body":"@eolivelli done!\r\nThanks for your contribution.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/661835241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/661843497","html_url":"https://github.com/apache/openjpa/pull/69#issuecomment-661843497","issue_url":"https://api.github.com/repos/apache/openjpa/issues/69","id":661843497,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MTg0MzQ5Nw==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-21T12:55:35Z","updated_at":"2020-07-21T12:55:35Z","author_association":"CONTRIBUTOR","body":"@ilgrosso thanks to you guys for providing OpenJPA to the public\r\nstarting on https://issues.apache.org/jira/browse/OPENJPA-2820 soon","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/661843497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/662738559","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-662738559","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":662738559,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjczODU1OQ==","user":{"login":"dazey3","id":3675328,"node_id":"MDQ6VXNlcjM2NzUzMjg=","avatar_url":"https://avatars.githubusercontent.com/u/3675328?v=4","gravatar_id":"","url":"https://api.github.com/users/dazey3","html_url":"https://github.com/dazey3","followers_url":"https://api.github.com/users/dazey3/followers","following_url":"https://api.github.com/users/dazey3/following{/other_user}","gists_url":"https://api.github.com/users/dazey3/gists{/gist_id}","starred_url":"https://api.github.com/users/dazey3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dazey3/subscriptions","organizations_url":"https://api.github.com/users/dazey3/orgs","repos_url":"https://api.github.com/users/dazey3/repos","events_url":"https://api.github.com/users/dazey3/events{/privacy}","received_events_url":"https://api.github.com/users/dazey3/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-22T22:59:13Z","updated_at":"2020-07-22T23:05:44Z","author_association":"CONTRIBUTOR","body":"Let's keep in mind that the issue we are trying to determine a fix for here is that `PCClassFileTransformer._transforming` does not support concurrent transformation access, correct?\r\n\r\n### Current behavior:\r\n@struberg was correct in pointing out that the current, simple boolean implementation locks a Class transformer instance from being used by ANY Thread concurrently, including itself. All reentrant access to the same instance will just return NULL; no blocking, locking, or anything.\r\n\r\nIn an environment where many Threads concurrently use the same Class transformer instance, a race condition occurs. Whichever Thread sets the boolean lock first, all other Threads seeking concurrent access return NULL and no transformation occurs. **This is the behavior that needs to change.** The boolean implementation needs to change behavior only to consider concurrent Thread access.\r\n\r\n### Proposed fixes:\r\nIt would appear that the reason for this current implementation was to prevent reentry for OpenJPA libraries/packages, and the implementation appears to do that. However, I think the original reason is irrelevant and should not be discussed in this fix. If further enhancements to this code want to be pursued later, under a separate issue, that's fine. The issue is NOT that there is an issue with recursive transformation on specific packages. What is important is preserving the current behavior as much as possible. **The current implementation blocks ALL reentrance and current works fine; minus the issue with concurrent threads.**\r\n\r\nWith the code change to a ThreadLocal boolean, the current behavior is preserved, but widened to support concurrent access. Rentrance would be allowed, but only on separate Threads. Even on the same Thread, recursive access would be blocks just like the current implementation. **I think the only question is: Is concurrent transformation thread safe (for instance, MetaDataRepository)?**\r\n\r\nThe proposed code change to use an exclusion list feels like a re-implementation of the original fix that introduced the `PCClassFileTransformer._transforming` boolean. I think that is the incorrect path to take here because we are only guessing at the purpose of the original problem ( like what packages we need to prevent reentry for). What matters is what the code DOES right now and preserving that behavior, as much as possible, is the safest path","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/662738559/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/662824173","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-662824173","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":662824173,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjgyNDE3Mw==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T05:24:14Z","updated_at":"2020-07-23T05:24:14Z","author_association":"CONTRIBUTOR","body":"@dazey3 not really, the concurrency is an issue on top of an original issue. The toggle never worked reliably whereas the exclusion list always worked until you plug custom impls under openjpa SPI (used by enhancement) or use a tmploader=apploader (it is done, good or not). This is why I jumped into this issue and proposed a fix version even if not 100% satisfying, it is saner than a toggle which blindly excludes classes and can miss enhancements.\r\n","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/662824173/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/662836767","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-662836767","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":662836767,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MjgzNjc2Nw==","user":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T06:15:08Z","updated_at":"2020-07-23T06:15:08Z","author_association":"MEMBER","body":"hi @dazey3 I took about whole evenings for about a week to dig into the code and all it's constellation I could think of. I think we now understand the problem really well. The whole recursive situation usually does _not_ occur if the agent is attached dynamically, it does _not_ occur if the PCClassFileTransformer is used programmatically etc.\r\n\r\nIt will mostly happen if the transformer is used as javaagent and then _only_ for all the classes used in the PCClassFileTransformer code itself. Like `org.apache.openjpa.meta.MetaDataRepository` or `serp.bytecode.lowlevel.ConstantPoolTable`.\r\n\r\nIt will also _not_ happen for any classes referenced inside an entity. When you touch the first entity the `ClassFileTransformer#transform` will return a byte[] which will be analysed by the JVM. And only after that it will load the classes found therein (and invoke the Transformer again subsequently).\r\n\r\nNow both the boolean and the exclude list from @rmannibucau serve the same needs. Both are an exit criteria in the classloader iteration for *internal* classes.\r\nBoth have their pros and cons.\r\n\r\nI personally like the `ThreadLocal<Boolean>` better as it needs less maintenance.\r\nBut actually there is one more thing we should check (later?): once the `PCClassFileTransformer` did successfully run for the first time and triggered all the classloading, do we need all this guarding at all? Or can we assume that all the necessary class loading did get triggered the first time already?","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/662836767/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/662842764","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-662842764","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":662842764,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mjg0Mjc2NA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T06:37:55Z","updated_at":"2020-07-23T06:37:55Z","author_association":"CONTRIBUTOR","body":"Hmm, a kind of double lock check on a volatile boolean? Think it makes more sense actually. Judt needs to bench the exclude list vs isEnhanced speed at runtime - would need to rerun it but think exclude list is faster - and we are good.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/662842764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/662843953","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-662843953","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":662843953,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mjg0Mzk1Mw==","user":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T06:41:44Z","updated_at":"2020-07-23T06:41:44Z","author_association":"MEMBER","body":"While talking with @elexx about this issue I had another thought: probably we only need to guard against classes which are touched in `PCClassFileTransformer#needsEnhance`? because once this runs through the needsEnhance would return `null` also for OpenJPAs internal classes. Would need to dig down the rabbit hole...","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/662843953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/662846369","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-662846369","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":662846369,"node_id":"MDEyOklzc3VlQ29tbWVudDY2Mjg0NjM2OQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T06:49:39Z","updated_at":"2020-07-23T06:51:04Z","author_association":"CONTRIBUTOR","body":"@struberg right, this is where the exclude list is likely faster than the end of the method but functionally it should just be fine.\r\n\r\nSide note: in agents it is common to exclude the agent classes + some jvm classes (ex: https://github.com/rmannibucau/sirona/blob/trunk/agent/javaagent/src/main/java/com/github/rmannibucau/sirona/javaagent/SironaTransformer.java#L194)","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/662846369/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663055275","html_url":"https://github.com/apache/openjpa/pull/71#issuecomment-663055275","issue_url":"https://api.github.com/repos/apache/openjpa/issues/71","id":663055275,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzA1NTI3NQ==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T14:56:51Z","updated_at":"2020-07-23T14:56:51Z","author_association":"CONTRIBUTOR","body":"@rmannibucau does this patch look like what you meant ?","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663055275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663062661","html_url":"https://github.com/apache/openjpa/pull/71#issuecomment-663062661","issue_url":"https://api.github.com/repos/apache/openjpa/issues/71","id":663062661,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzA2MjY2MQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T15:10:09Z","updated_at":"2020-07-23T15:10:09Z","author_association":"CONTRIBUTOR","body":"@eolivelli yes, exactly","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663062661/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663067727","html_url":"https://github.com/apache/openjpa/pull/71#issuecomment-663067727","issue_url":"https://api.github.com/repos/apache/openjpa/issues/71","id":663067727,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzA2NzcyNw==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T15:19:05Z","updated_at":"2020-07-23T15:19:05Z","author_association":"CONTRIBUTOR","body":"All tests are passing :-) ","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663067727/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663070397","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-663070397","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":663070397,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzA3MDM5Nw==","user":{"login":"dazey3","id":3675328,"node_id":"MDQ6VXNlcjM2NzUzMjg=","avatar_url":"https://avatars.githubusercontent.com/u/3675328?v=4","gravatar_id":"","url":"https://api.github.com/users/dazey3","html_url":"https://github.com/dazey3","followers_url":"https://api.github.com/users/dazey3/followers","following_url":"https://api.github.com/users/dazey3/following{/other_user}","gists_url":"https://api.github.com/users/dazey3/gists{/gist_id}","starred_url":"https://api.github.com/users/dazey3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dazey3/subscriptions","organizations_url":"https://api.github.com/users/dazey3/orgs","repos_url":"https://api.github.com/users/dazey3/repos","events_url":"https://api.github.com/users/dazey3/events{/privacy}","received_events_url":"https://api.github.com/users/dazey3/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T15:24:12Z","updated_at":"2020-07-23T15:30:36Z","author_association":"CONTRIBUTOR","body":"@rmannibucau \r\n> The toggle never worked reliably\r\n\r\nOther than with concurrency, which is the reason we are pursuing a fix in the first place, do you have examples of how this toggle doesnt work reliably?\r\n\r\n> it is saner than a toggle which blindly excludes classes and can miss enhancements.\r\n\r\nDo you have examples of missed enhancements by the transformer due to this boolean toggle? As I am aware, recursive calls are not used to do transformation/enhancement. \r\nThis toggle is absolute in it's exclusion, it excludes all reentrance, however I do not know of an issue that demonstrates that to be an incorrect behavior. Is there an open defect to fix that issue if it exists? Can that issue not be fixed separately? \r\n\r\n@struberg \r\n>The whole recursive situation usually does not occur if the agent is attached dynamically, it does not occur if the PCClassFileTransformer is used programmatically etc\r\n...\r\n> It will mostly happen if the transformer is used as javaagent and then only for all the classes used in the PCClassFileTransformer code itself.\r\n\r\nThank you for verifying this. In a server environment, we are seeing that no transformation recursion is happening as a product of classloading/transforming a class. The current implementation is written in such a way that ALL recursion would be blocked and I do not know of any outstanding issues with that behavior.\r\n\r\n> Now both the boolean and the exclude list from @rmannibucau serve the same needs. Both are an exit criteria in the classloader iteration for internal classes.\r\n\r\nI agree that both implementations serve the same needs. However, I prefer the boolean implementation because it maintains the original behavior of excluding ALL possible recursive calls, on the same Thread. If there is an issue with this implementation, I don't see why that can't be fixed in a separate issue that documents THAT issue.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663070397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663085420","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-663085420","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":663085420,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzA4NTQyMA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T15:51:48Z","updated_at":"2020-07-23T15:51:48Z","author_association":"CONTRIBUTOR","body":"@dazey3 yep, the one mentionned on the list and the PRs: tmploader==apploader. The toggle just disable enhancement under some setups (close to openliberty ones where the load class goes into the apploader which implements itself the transformer). That said you have a very good point that JVM instrumentation does not need that since it skips by itself the nested enhancement so seems it is only appearing on custom classloaders in app servers (like tomcat or openliberty).\r\n\r\nSo overall it seems it means that it is an application server bug that this boolean is needed.\r\n\r\nRegarding the exclude list vs boolean: the exclude list makes the behavior deterministic vs the boolean depends which classes where touched or not before which is way less deterministic and error prone so between both I prefer the exclude list to at least guarantee the understanding is unique.\r\n\r\nHowever, in regards to previous point it seems we should just drop this as a default behavior and use a config to have a nested exclusion for buggy servers for compatibility only.\r\n\r\nConcretely it would be something like: if \"openjpa.agent.preventNestedTransformations=true\" then we wouldnt use PCClassFileTransformer but HarnessedPCClassFileTransformer which would fully delegate to PCClassFileTransformer but transform method*s* would be wrapped in with this boolean:\r\n\r\n    if (transforming.get() != null) return null;\r\n    transforming.set(true);\r\n    try {\r\n        delegate.transform();\r\n    } finally {\r\n        transforming.remove();\r\n    }\r\n\r\nThis way we handle buggy impls with a flag but our default is sane and aligned on the JVM.\r\n\r\nLong term we can report the bugs in the app servers and make them properly fix it (it is not limited to openjpa).","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663085420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663156203","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-663156203","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":663156203,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzE1NjIwMw==","user":{"login":"dazey3","id":3675328,"node_id":"MDQ6VXNlcjM2NzUzMjg=","avatar_url":"https://avatars.githubusercontent.com/u/3675328?v=4","gravatar_id":"","url":"https://api.github.com/users/dazey3","html_url":"https://github.com/dazey3","followers_url":"https://api.github.com/users/dazey3/followers","following_url":"https://api.github.com/users/dazey3/following{/other_user}","gists_url":"https://api.github.com/users/dazey3/gists{/gist_id}","starred_url":"https://api.github.com/users/dazey3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dazey3/subscriptions","organizations_url":"https://api.github.com/users/dazey3/orgs","repos_url":"https://api.github.com/users/dazey3/repos","events_url":"https://api.github.com/users/dazey3/events{/privacy}","received_events_url":"https://api.github.com/users/dazey3/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T18:13:32Z","updated_at":"2020-07-23T18:14:22Z","author_association":"CONTRIBUTOR","body":"@rmannibucau \r\n> The toggle just disable enhancement under some setups\r\n\r\nPerhaps you can explain what you mean here. How does the toggle disable enhancement under \"some\" setups? The toggle only disables reentrance, but it does it indiscriminately.\r\n\r\n>That said you have a very good point that JVM instrumentation does not need that since it skips by itself the nested enhancement so seems it is only appearing on custom classloaders in app servers\r\n\r\nPlease explain.\r\n\r\n> So overall it seems it means that it is an application server bug that this boolean is needed.\r\n\r\nNot sure if I understand what you mean here. What is the server bug?","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663156203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663183133","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-663183133","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":663183133,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzE4MzEzMw==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-23T19:11:12Z","updated_at":"2020-07-23T19:11:12Z","author_association":"CONTRIBUTOR","body":"@dazey3 oki, the fact you can't be in transform from transform is only true for a javaagent called from defineClassX, not from a custom classloader handling the transformation itself so if you use such boolean then you just disable the enhancement for potentially other classes usince container entity manager (which are used in standalone too btw). Letting tranform trigger another transform can be considered - or not by implementors - as a bug, but it also means we must support it so not use a toggle. So overall I'm certain exclude list works while a SPI is not \"unexpected\" or you use plain OpenJPA but there are several cases the toggle can break the environment in hybrid - SE/EE-light but using container JPAAPI - but existing (common actually) envs.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/663183133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/664468094","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-664468094","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":664468094,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDQ2ODA5NA==","user":{"login":"dazey3","id":3675328,"node_id":"MDQ6VXNlcjM2NzUzMjg=","avatar_url":"https://avatars.githubusercontent.com/u/3675328?v=4","gravatar_id":"","url":"https://api.github.com/users/dazey3","html_url":"https://github.com/dazey3","followers_url":"https://api.github.com/users/dazey3/followers","following_url":"https://api.github.com/users/dazey3/following{/other_user}","gists_url":"https://api.github.com/users/dazey3/gists{/gist_id}","starred_url":"https://api.github.com/users/dazey3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dazey3/subscriptions","organizations_url":"https://api.github.com/users/dazey3/orgs","repos_url":"https://api.github.com/users/dazey3/repos","events_url":"https://api.github.com/users/dazey3/events{/privacy}","received_events_url":"https://api.github.com/users/dazey3/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-27T15:32:56Z","updated_at":"2020-07-27T15:34:55Z","author_association":"CONTRIBUTOR","body":"> oki, the fact you can't be in transform from transform is only true for a javaagent called from defineClassX, not from a custom classloader handling the transformation itself so if you use such boolean then you just disable the enhancement for potentially other classes usince container entity manager (which are used in standalone too btw). \r\n\r\nI am not following what your talking about. The current \"toggle\" implementation blocks reentrant transformation (transform triggering another transform) on the same org.apache.openjpa.enhance.PCClassFileTransformer instance. I don't see how the ClassLoader is involved in this function of the `java.lang.instrument.ClassFileTransformer`. What do you mean by \"a custom classloader handling the transformation itself\"?\r\n\r\n> Letting transform trigger another transform can be considered - or not by implementors - as a bug, but it also means we must support it so not use a toggle.\r\n\r\nI don't feel like you have explained why \"we must support\" reentrance nor why \"we must support it so not use a toggle\". Is there an existing bug that describes reentrance occurring and breaking some usecase? The toggle appears to block ALL reentrance so I don't see how such a bug could exist, but if if there is, please direct me to it or explain it in detail","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/664468094/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/664551783","html_url":"https://github.com/apache/openjpa/pull/65#issuecomment-664551783","issue_url":"https://api.github.com/repos/apache/openjpa/issues/65","id":664551783,"node_id":"MDEyOklzc3VlQ29tbWVudDY2NDU1MTc4Mw==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-27T18:04:28Z","updated_at":"2020-07-27T18:04:28Z","author_association":"CONTRIBUTOR","body":"Transformers only make sense for classloaders and classloaders are the one calling transformers - either in loadclass for custom classloaders and defineclass in jvm one with agent.\r\n\r\nIssue is when loading transformer classes from the transform method (will end in classnotfound or noclassdeferror if not excluded) so one or two classes must be excluded. Everything else is a perf optim.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/664551783/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/693259554","html_url":"https://github.com/apache/openjpa/pull/73#issuecomment-693259554","issue_url":"https://api.github.com/repos/apache/openjpa/issues/73","id":693259554,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzI1OTU1NA==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-16T08:32:54Z","updated_at":"2020-09-16T08:32:54Z","author_association":"MEMBER","body":"Thanks @PoojaChandak !","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/693259554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/693260119","html_url":"https://github.com/apache/openjpa/pull/72#issuecomment-693260119","issue_url":"https://api.github.com/repos/apache/openjpa/issues/72","id":693260119,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzI2MDExOQ==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-16T08:34:01Z","updated_at":"2020-09-16T08:34:01Z","author_association":"MEMBER","body":"@simesi could you please add a test case?","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/693260119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/696161926","html_url":"https://github.com/apache/openjpa/pull/74#issuecomment-696161926","issue_url":"https://api.github.com/repos/apache/openjpa/issues/74","id":696161926,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjE2MTkyNg==","user":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-21T14:43:48Z","updated_at":"2020-09-21T14:43:48Z","author_association":"CONTRIBUTOR","body":"@rmannibucau I have run integration tests on mysql-docker locally on this branch and they are passing","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/696161926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/696677565","html_url":"https://github.com/apache/openjpa/pull/72#issuecomment-696677565","issue_url":"https://api.github.com/repos/apache/openjpa/issues/72","id":696677565,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjY3NzU2NQ==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T12:04:54Z","updated_at":"2020-09-22T12:04:54Z","author_association":"MEMBER","body":"@simesi thanks for adding tests: as GitHub actions are reporting the build is failing for the following reason:\r\n\r\n```\r\n[ERROR] Failed to execute goal org.apache.rat:apache-rat-plugin:0.12:check (default) on project openjpa-parent: Too many files with unapproved license: 1 See RAT report in: /home/runner/work/openjpa/openjpa/target/rat.txt -> [Help 1]\r\n```\r\n\r\nPlease ensure to copy the license header from other test classes, thanks.","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/696677565/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/696683789","html_url":"https://github.com/apache/openjpa/pull/72#issuecomment-696683789","issue_url":"https://api.github.com/repos/apache/openjpa/issues/72","id":696683789,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjY4Mzc4OQ==","user":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T12:18:13Z","updated_at":"2020-09-22T12:18:13Z","author_association":"MEMBER","body":"@simesi besides my comment above about package name, there is a new error from CI: https://github.com/apache/openjpa/pull/72/checks?check_run_id=1149292021#step:5:358","reactions":{"url":"https://api.github.com/repos/apache/openjpa/issues/comments/696683789/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]