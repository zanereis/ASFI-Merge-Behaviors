[{"url":"https://api.github.com/repos/apache/drill/issues/comments/855388142","html_url":"https://github.com/apache/drill/issues/2233#issuecomment-855388142","issue_url":"https://api.github.com/repos/apache/drill/issues/2233","id":855388142,"node_id":"MDEyOklzc3VlQ29tbWVudDg1NTM4ODE0Mg==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-06T12:03:46Z","updated_at":"2021-06-06T12:03:46Z","author_association":"MEMBER","body":"@cdmikechen Thanks for the questions.\r\n1. I can fork `/Agirish/drill-helm-charts` and create a branch to driven the `Drill on K8S`, if anyone ready to contribute the feature. I recommend that you can discussion this topic on mailing list or Slack channel, Talk with @Agirish first.\r\n2. Ranger? Atlas? Great ideas. All right. Could you please talk this design using the Github's Issues? About the security and multi-tenancy, [DRILL-7871](https://github.com/apache/drill/pull/2251) will be include in 1.20.\r\n3. I remember the Apache Ozone support the S3 API, Drill also can query data on the S3. We need more love to support the Alluxio.\r\n\r\nAll great ideas have a path to success. We welcome contributions of any kind including pull requests, ideas, bug reports, testing, writing documentation, tutorials and blog posts.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/855388142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/858184140","html_url":"https://github.com/apache/drill/issues/2233#issuecomment-858184140","issue_url":"https://api.github.com/repos/apache/drill/issues/2233","id":858184140,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODE4NDE0MA==","user":{"login":"cdmikechen","id":12069428,"node_id":"MDQ6VXNlcjEyMDY5NDI4","avatar_url":"https://avatars.githubusercontent.com/u/12069428?v=4","gravatar_id":"","url":"https://api.github.com/users/cdmikechen","html_url":"https://github.com/cdmikechen","followers_url":"https://api.github.com/users/cdmikechen/followers","following_url":"https://api.github.com/users/cdmikechen/following{/other_user}","gists_url":"https://api.github.com/users/cdmikechen/gists{/gist_id}","starred_url":"https://api.github.com/users/cdmikechen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cdmikechen/subscriptions","organizations_url":"https://api.github.com/users/cdmikechen/orgs","repos_url":"https://api.github.com/users/cdmikechen/repos","events_url":"https://api.github.com/users/cdmikechen/events{/privacy}","received_events_url":"https://api.github.com/users/cdmikechen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-10T00:13:14Z","updated_at":"2021-06-10T00:13:14Z","author_association":"CONTRIBUTOR","body":"@luocooong About the helm...\r\nI noticed that the 1.19 image was recently updated on docker hub. Iâ€™ve made some adaptations according to his helm and ran it in the test environment for a long time. I think I can try to submit a PR later, or even change it to an operator directly.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/858184140/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/858213311","html_url":"https://github.com/apache/drill/pull/2256#issuecomment-858213311","issue_url":"https://api.github.com/repos/apache/drill/issues/2256","id":858213311,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODIxMzMxMQ==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-10T01:36:20Z","updated_at":"2021-06-10T01:36:20Z","author_association":"MEMBER","body":"@cgivre Thanks for the PR. Is it ready to review?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/858213311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/858214588","html_url":"https://github.com/apache/drill/pull/2256#issuecomment-858214588","issue_url":"https://api.github.com/repos/apache/drill/issues/2256","id":858214588,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODIxNDU4OA==","user":{"login":"cgivre","id":5513150,"node_id":"MDQ6VXNlcjU1MTMxNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5513150?v=4","gravatar_id":"","url":"https://api.github.com/users/cgivre","html_url":"https://github.com/cgivre","followers_url":"https://api.github.com/users/cgivre/followers","following_url":"https://api.github.com/users/cgivre/following{/other_user}","gists_url":"https://api.github.com/users/cgivre/gists{/gist_id}","starred_url":"https://api.github.com/users/cgivre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgivre/subscriptions","organizations_url":"https://api.github.com/users/cgivre/orgs","repos_url":"https://api.github.com/users/cgivre/repos","events_url":"https://api.github.com/users/cgivre/events{/privacy}","received_events_url":"https://api.github.com/users/cgivre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-10T01:40:14Z","updated_at":"2021-06-10T01:40:14Z","author_association":"CONTRIBUTOR","body":"> @cgivre Thanks for the PR. Is it ready to review?\r\n\r\nI'm not sure why these tests are failing as they don't have anything to do with the changes I made.  Let me rerun them a few times to see if it is a CI issue or an actual issue. ","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/858214588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/858573260","html_url":"https://github.com/apache/drill/pull/2256#issuecomment-858573260","issue_url":"https://api.github.com/repos/apache/drill/issues/2256","id":858573260,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODU3MzI2MA==","user":{"login":"cgivre","id":5513150,"node_id":"MDQ6VXNlcjU1MTMxNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5513150?v=4","gravatar_id":"","url":"https://api.github.com/users/cgivre","html_url":"https://github.com/cgivre","followers_url":"https://api.github.com/users/cgivre/followers","following_url":"https://api.github.com/users/cgivre/following{/other_user}","gists_url":"https://api.github.com/users/cgivre/gists{/gist_id}","starred_url":"https://api.github.com/users/cgivre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgivre/subscriptions","organizations_url":"https://api.github.com/users/cgivre/orgs","repos_url":"https://api.github.com/users/cgivre/repos","events_url":"https://api.github.com/users/cgivre/events{/privacy}","received_events_url":"https://api.github.com/users/cgivre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-10T12:20:58Z","updated_at":"2021-06-10T12:20:58Z","author_association":"CONTRIBUTOR","body":"> > @cgivre Thanks for the PR. Is it ready to review?\r\n> \r\n> I'm not sure why these tests are failing as they don't have anything to do with the changes I made. Let me rerun them a few times to see if it is a CI issue or an actual issue.\r\n\r\n@luocooong \r\nNow this is ready for review. :-). \r\n\r\n@jfmario, Do you have any suggestions?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/858573260/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/858684060","html_url":"https://github.com/apache/drill/pull/2257#issuecomment-858684060","issue_url":"https://api.github.com/repos/apache/drill/issues/2257","id":858684060,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODY4NDA2MA==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-10T14:44:04Z","updated_at":"2021-06-10T14:44:04Z","author_association":"MEMBER","body":"| Title | JIRA ID |\r\n| --- | --- |\r\n| Add XML Format Plugin | DRILL-7823 |\r\n| Add Storage Plugin for Splunk | DRILL-7751 |\r\n| Convert format plugins to EVF | DRILL-7525, DRILL-7532, DRILL-7533, DRILL-7534, DRILL-7536 |\r\n| Merge row set-based JSON reader | DRILL-6953 |\r\n| Use streaming for REST JSON queries | DRILL-7733 |\r\n| Add Limit Pushdown to Storage Plugin | DRILL-7763, DRILL-7800, DRILL-7814 |\r\n| Build Drill with Netty version 4.1.50.Final | DRILL-7790 |\r\n| Update to 30-jre Guava version | DRILL-7904 |\r\n| Bump Mongo driver from 3.12 to 4.2 | DRILL-7903 |\r\n| Bump Kafka driver from 2.3 to the 2.8 | DRILL-7917 |\r\n| Bump HBase driver from 2.2 to 2.4 | DRILL-7918 |\r\n| Bump Kudu driver from 1.3 to 1.14 | DRILL-7918 |\r\n","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/858684060/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/858812676","html_url":"https://github.com/apache/drill/pull/2256#issuecomment-858812676","issue_url":"https://api.github.com/repos/apache/drill/issues/2256","id":858812676,"node_id":"MDEyOklzc3VlQ29tbWVudDg1ODgxMjY3Ng==","user":{"login":"jfmario","id":6844155,"node_id":"MDQ6VXNlcjY4NDQxNTU=","avatar_url":"https://avatars.githubusercontent.com/u/6844155?v=4","gravatar_id":"","url":"https://api.github.com/users/jfmario","html_url":"https://github.com/jfmario","followers_url":"https://api.github.com/users/jfmario/followers","following_url":"https://api.github.com/users/jfmario/following{/other_user}","gists_url":"https://api.github.com/users/jfmario/gists{/gist_id}","starred_url":"https://api.github.com/users/jfmario/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jfmario/subscriptions","organizations_url":"https://api.github.com/users/jfmario/orgs","repos_url":"https://api.github.com/users/jfmario/repos","events_url":"https://api.github.com/users/jfmario/events{/privacy}","received_events_url":"https://api.github.com/users/jfmario/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-10T17:26:39Z","updated_at":"2021-06-10T17:26:39Z","author_association":"NONE","body":"@cgivre I think a lot of this looks good. I noticed that when I query an API and receive a 404 response with no body, Drill throws an error instead of giving me those fields.\r\n\r\nI think there may be cases where that is preferred, but my view is that a 404 with no body is an informative response and not an error, so I would have preferred to see the \"fact of\" the 400 response in the returning table. The same thing applies to other 400 errors.\r\n\r\nThis may be something that users want to configure. I think 500s are always errors, but if you add a configuration it may be worth letting users specify which status codes should be treated as errors.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/858812676/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/859538370","html_url":"https://github.com/apache/drill/pull/2253#issuecomment-859538370","issue_url":"https://api.github.com/repos/apache/drill/issues/2253","id":859538370,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTUzODM3MA==","user":{"login":"cgivre","id":5513150,"node_id":"MDQ6VXNlcjU1MTMxNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5513150?v=4","gravatar_id":"","url":"https://api.github.com/users/cgivre","html_url":"https://github.com/cgivre","followers_url":"https://api.github.com/users/cgivre/followers","following_url":"https://api.github.com/users/cgivre/following{/other_user}","gists_url":"https://api.github.com/users/cgivre/gists{/gist_id}","starred_url":"https://api.github.com/users/cgivre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgivre/subscriptions","organizations_url":"https://api.github.com/users/cgivre/orgs","repos_url":"https://api.github.com/users/cgivre/repos","events_url":"https://api.github.com/users/cgivre/events{/privacy}","received_events_url":"https://api.github.com/users/cgivre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T12:13:56Z","updated_at":"2021-06-11T12:13:56Z","author_association":"CONTRIBUTOR","body":"@vvysotskyi Could you please rebase on current master?  It seems one of the tests is failing in the http plugin.\r\nThx!","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/859538370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/859592827","html_url":"https://github.com/apache/drill/pull/2253#issuecomment-859592827","issue_url":"https://api.github.com/repos/apache/drill/issues/2253","id":859592827,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTU5MjgyNw==","user":{"login":"vvysotskyi","id":20928429,"node_id":"MDQ6VXNlcjIwOTI4NDI5","avatar_url":"https://avatars.githubusercontent.com/u/20928429?v=4","gravatar_id":"","url":"https://api.github.com/users/vvysotskyi","html_url":"https://github.com/vvysotskyi","followers_url":"https://api.github.com/users/vvysotskyi/followers","following_url":"https://api.github.com/users/vvysotskyi/following{/other_user}","gists_url":"https://api.github.com/users/vvysotskyi/gists{/gist_id}","starred_url":"https://api.github.com/users/vvysotskyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vvysotskyi/subscriptions","organizations_url":"https://api.github.com/users/vvysotskyi/orgs","repos_url":"https://api.github.com/users/vvysotskyi/repos","events_url":"https://api.github.com/users/vvysotskyi/events{/privacy}","received_events_url":"https://api.github.com/users/vvysotskyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T13:44:47Z","updated_at":"2021-06-11T13:44:47Z","author_association":"MEMBER","body":"@cgivre, this is a random failure, please see run on the same commit (870a489) for my local branch: https://github.com/vvysotskyi/drill/runs/2758472300","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/859592827/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/859595482","html_url":"https://github.com/apache/drill/pull/2253#issuecomment-859595482","issue_url":"https://api.github.com/repos/apache/drill/issues/2253","id":859595482,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTU5NTQ4Mg==","user":{"login":"cgivre","id":5513150,"node_id":"MDQ6VXNlcjU1MTMxNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5513150?v=4","gravatar_id":"","url":"https://api.github.com/users/cgivre","html_url":"https://github.com/cgivre","followers_url":"https://api.github.com/users/cgivre/followers","following_url":"https://api.github.com/users/cgivre/following{/other_user}","gists_url":"https://api.github.com/users/cgivre/gists{/gist_id}","starred_url":"https://api.github.com/users/cgivre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgivre/subscriptions","organizations_url":"https://api.github.com/users/cgivre/orgs","repos_url":"https://api.github.com/users/cgivre/repos","events_url":"https://api.github.com/users/cgivre/events{/privacy}","received_events_url":"https://api.github.com/users/cgivre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T13:48:52Z","updated_at":"2021-06-11T13:48:52Z","author_association":"CONTRIBUTOR","body":"> @cgivre, this is a random failure, please see run on the same commit ([870a489](https://github.com/apache/drill/commit/870a48916b850dc275cf2b74a1a26cca67beb849)) for my local branch: https://github.com/vvysotskyi/drill/runs/2758472300\r\n\r\nAre we good to merge?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/859595482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/859599934","html_url":"https://github.com/apache/drill/pull/2253#issuecomment-859599934","issue_url":"https://api.github.com/repos/apache/drill/issues/2253","id":859599934,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTU5OTkzNA==","user":{"login":"vvysotskyi","id":20928429,"node_id":"MDQ6VXNlcjIwOTI4NDI5","avatar_url":"https://avatars.githubusercontent.com/u/20928429?v=4","gravatar_id":"","url":"https://api.github.com/users/vvysotskyi","html_url":"https://github.com/vvysotskyi","followers_url":"https://api.github.com/users/vvysotskyi/followers","following_url":"https://api.github.com/users/vvysotskyi/following{/other_user}","gists_url":"https://api.github.com/users/vvysotskyi/gists{/gist_id}","starred_url":"https://api.github.com/users/vvysotskyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vvysotskyi/subscriptions","organizations_url":"https://api.github.com/users/vvysotskyi/orgs","repos_url":"https://api.github.com/users/vvysotskyi/repos","events_url":"https://api.github.com/users/vvysotskyi/events{/privacy}","received_events_url":"https://api.github.com/users/vvysotskyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T13:55:50Z","updated_at":"2021-06-11T13:55:50Z","author_association":"MEMBER","body":"I think yes.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/859599934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/859665949","html_url":"https://github.com/apache/drill/pull/2254#issuecomment-859665949","issue_url":"https://api.github.com/repos/apache/drill/issues/2254","id":859665949,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTY2NTk0OQ==","user":{"login":"vvysotskyi","id":20928429,"node_id":"MDQ6VXNlcjIwOTI4NDI5","avatar_url":"https://avatars.githubusercontent.com/u/20928429?v=4","gravatar_id":"","url":"https://api.github.com/users/vvysotskyi","html_url":"https://github.com/vvysotskyi","followers_url":"https://api.github.com/users/vvysotskyi/followers","following_url":"https://api.github.com/users/vvysotskyi/following{/other_user}","gists_url":"https://api.github.com/users/vvysotskyi/gists{/gist_id}","starred_url":"https://api.github.com/users/vvysotskyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vvysotskyi/subscriptions","organizations_url":"https://api.github.com/users/vvysotskyi/orgs","repos_url":"https://api.github.com/users/vvysotskyi/repos","events_url":"https://api.github.com/users/vvysotskyi/events{/privacy}","received_events_url":"https://api.github.com/users/vvysotskyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T15:36:46Z","updated_at":"2021-06-11T15:36:46Z","author_association":"MEMBER","body":"@vdiravka, sorry, but I don't know how to generate a parquet file with the correct INTERVAL type and using dictionary encoding, so no test was added, but we have tests for INTERVAL with non-dictionary encoding.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/859665949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/859671319","html_url":"https://github.com/apache/drill/pull/2254#issuecomment-859671319","issue_url":"https://api.github.com/repos/apache/drill/issues/2254","id":859671319,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTY3MTMxOQ==","user":{"login":"vvysotskyi","id":20928429,"node_id":"MDQ6VXNlcjIwOTI4NDI5","avatar_url":"https://avatars.githubusercontent.com/u/20928429?v=4","gravatar_id":"","url":"https://api.github.com/users/vvysotskyi","html_url":"https://github.com/vvysotskyi","followers_url":"https://api.github.com/users/vvysotskyi/followers","following_url":"https://api.github.com/users/vvysotskyi/following{/other_user}","gists_url":"https://api.github.com/users/vvysotskyi/gists{/gist_id}","starred_url":"https://api.github.com/users/vvysotskyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vvysotskyi/subscriptions","organizations_url":"https://api.github.com/users/vvysotskyi/orgs","repos_url":"https://api.github.com/users/vvysotskyi/repos","events_url":"https://api.github.com/users/vvysotskyi/events{/privacy}","received_events_url":"https://api.github.com/users/vvysotskyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T15:45:30Z","updated_at":"2021-06-11T15:45:30Z","author_association":"MEMBER","body":"Yes, the main change is the fix for the `FIXED_LEN_BYTE_ARRAY` decimal type.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/859671319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/859695809","html_url":"https://github.com/apache/drill/pull/2254#issuecomment-859695809","issue_url":"https://api.github.com/repos/apache/drill/issues/2254","id":859695809,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTY5NTgwOQ==","user":{"login":"vdiravka","id":11904420,"node_id":"MDQ6VXNlcjExOTA0NDIw","avatar_url":"https://avatars.githubusercontent.com/u/11904420?v=4","gravatar_id":"","url":"https://api.github.com/users/vdiravka","html_url":"https://github.com/vdiravka","followers_url":"https://api.github.com/users/vdiravka/followers","following_url":"https://api.github.com/users/vdiravka/following{/other_user}","gists_url":"https://api.github.com/users/vdiravka/gists{/gist_id}","starred_url":"https://api.github.com/users/vdiravka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdiravka/subscriptions","organizations_url":"https://api.github.com/users/vdiravka/orgs","repos_url":"https://api.github.com/users/vdiravka/repos","events_url":"https://api.github.com/users/vdiravka/events{/privacy}","received_events_url":"https://api.github.com/users/vdiravka/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T16:21:16Z","updated_at":"2021-06-11T16:21:16Z","author_association":"MEMBER","body":"Let me try to generate it within Drill's `ParquetSimpleTestFileGenerator`","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/859695809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/859898985","html_url":"https://github.com/apache/drill/pull/2254#issuecomment-859898985","issue_url":"https://api.github.com/repos/apache/drill/issues/2254","id":859898985,"node_id":"MDEyOklzc3VlQ29tbWVudDg1OTg5ODk4NQ==","user":{"login":"vvysotskyi","id":20928429,"node_id":"MDQ6VXNlcjIwOTI4NDI5","avatar_url":"https://avatars.githubusercontent.com/u/20928429?v=4","gravatar_id":"","url":"https://api.github.com/users/vvysotskyi","html_url":"https://github.com/vvysotskyi","followers_url":"https://api.github.com/users/vvysotskyi/followers","following_url":"https://api.github.com/users/vvysotskyi/following{/other_user}","gists_url":"https://api.github.com/users/vvysotskyi/gists{/gist_id}","starred_url":"https://api.github.com/users/vvysotskyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vvysotskyi/subscriptions","organizations_url":"https://api.github.com/users/vvysotskyi/orgs","repos_url":"https://api.github.com/users/vvysotskyi/repos","events_url":"https://api.github.com/users/vvysotskyi/events{/privacy}","received_events_url":"https://api.github.com/users/vvysotskyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-11T20:38:16Z","updated_at":"2021-06-11T20:38:16Z","author_association":"MEMBER","body":"@vdiravka, thanks to referring to `ParquetSimpleTestFileGenerator`, I have generated a parquet file using it, but looks like it generates files with almost all columns of the non-dictionary encoding (except for `_INT96_RAW` in the last row group):\r\n```\r\njava -jar parquet-tools-1.12.0-SNAPSHOT_LocalMode.jar meta parquet/drill/parquet_test_file_simple\r\nfile:                              file:/private/tmp/parquet/drill/parquet_test_file_simple\r\ncreator:                           parquet-mr version 1.12.0 (build db75a6815f2ba1d1ee89d1a90aeb296f1f3a8f20)\r\nextra:                             writer.model.name = example\r\n\r\nfile schema:                       ParquetLogicalDataTypes\r\n--------------------------------------------------------------------------------\r\nrowKey:                            REQUIRED INT32 R:0 D:0\r\n_UTF8:                             REQUIRED BINARY L:STRING R:0 D:0\r\n_Enum:                             REQUIRED BINARY L:ENUM R:0 D:0\r\n_INT32_RAW:                        REQUIRED INT32 R:0 D:0\r\n_INT_8:                            REQUIRED INT32 L:INTEGER(8,true) R:0 D:0\r\n_INT_16:                           REQUIRED INT32 L:INTEGER(16,true) R:0 D:0\r\n_INT_32:                           REQUIRED INT32 L:INTEGER(32,true) R:0 D:0\r\n_UINT_8:                           REQUIRED INT32 L:INTEGER(8,false) R:0 D:0\r\n_UINT_16:                          REQUIRED INT32 L:INTEGER(16,false) R:0 D:0\r\n_UINT_32:                          REQUIRED INT32 L:INTEGER(32,false) R:0 D:0\r\n_DECIMAL_decimal9:                 REQUIRED INT32 L:DECIMAL(9,2) R:0 D:0\r\n_INT64_RAW:                        REQUIRED INT64 R:0 D:0\r\n_INT_64:                           REQUIRED INT64 L:INTEGER(64,true) R:0 D:0\r\n_UINT_64:                          REQUIRED INT64 L:INTEGER(64,false) R:0 D:0\r\n_DECIMAL_decimal18:                REQUIRED INT64 L:DECIMAL(18,2) R:0 D:0\r\n_DECIMAL_fixed_n:                  REQUIRED FIXED_LEN_BYTE_ARRAY L:DECIMAL(20,2) R:0 D:0\r\n_DECIMAL_unlimited:                REQUIRED BINARY L:DECIMAL(30,2) R:0 D:0\r\n_DATE_int32:                       REQUIRED INT32 L:DATE R:0 D:0\r\n_TIME_MILLIS_int32:                REQUIRED INT32 L:TIME(MILLIS,true) R:0 D:0\r\n_TIMESTAMP_MILLIS_int64:           REQUIRED INT64 L:TIMESTAMP(MILLIS,true) R:0 D:0\r\n_TIMESTAMP_MICROS_int64:           REQUIRED INT64 L:TIMESTAMP(MICROS,true) R:0 D:0\r\n_INTERVAL_fixed_len_byte_array_12: REQUIRED FIXED_LEN_BYTE_ARRAY L:INTERVAL R:0 D:0\r\n_INT96_RAW:                        REQUIRED INT96 R:0 D:0\r\n\r\nrow group 1:                       RC:3 TS:1152 OFFSET:4\r\n--------------------------------------------------------------------------------\r\nrowKey:                             INT32 SNAPPY DO:0 FPO:4 SZ:37/35/0.95 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: 1, max: 3, num_nulls: 0]\r\n_UTF8:                              BINARY SNAPPY DO:0 FPO:41 SZ:62/71/1.15 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: UTF8 string1, max: UTF8 string3, num_nulls: 0]\r\n_Enum:                              BINARY SNAPPY DO:0 FPO:103 SZ:59/65/1.10 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: MAX_VALUE, max: RANDOM_VALUE, num_nulls: 0]\r\n_INT32_RAW:                         INT32 SNAPPY DO:0 FPO:162 SZ:37/35/0.95 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: -2147483648, max: 2147483647, num_nulls: 0]\r\n_INT_8:                             INT32 SNAPPY DO:0 FPO:199 SZ:37/35/0.95 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: -128, max: 127, num_nulls: 0]\r\n_INT_16:                            INT32 SNAPPY DO:0 FPO:236 SZ:37/35/0.95 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: -32768, max: 32767, num_nulls: 0]\r\n_INT_32:                            INT32 SNAPPY DO:0 FPO:273 SZ:37/35/0.95 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: -2147483648, max: 2147483647, num_nulls: 0]\r\n_UINT_8:                            INT32 SNAPPY DO:0 FPO:310 SZ:37/35/0.95 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: 0, max: 255, num_nulls: 0]\r\n_UINT_16:                           INT32 SNAPPY DO:0 FPO:347 SZ:37/35/0.95 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: 0, max: 65535, num_nulls: 0]\r\n_UINT_32:                           INT32 SNAPPY DO:0 FPO:384 SZ:37/35/0.95 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: 0, max: 4294967295, num_nulls: 0]\r\n_DECIMAL_decimal9:                  INT32 SNAPPY DO:0 FPO:421 SZ:37/35/0.95 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: -0.01, max: 12345.67, num_nulls: 0]\r\n_INT64_RAW:                         INT64 SNAPPY DO:0 FPO:458 SZ:49/47/0.96 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: -9223372036854775808, max: 9223372036854775807, num_nulls: 0]\r\n_INT_64:                            INT64 SNAPPY DO:0 FPO:507 SZ:49/47/0.96 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: -9223372036854775808, max: 9223372036854775807, num_nulls: 0]\r\n_UINT_64:                           INT64 SNAPPY DO:0 FPO:556 SZ:49/47/0.96 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: 0, max: 18446744073709551615, num_nulls: 0]\r\n_DECIMAL_decimal18:                 INT64 SNAPPY DO:0 FPO:605 SZ:49/47/0.96 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: -0.01, max: 12345678901234.56, num_nulls: 0]\r\n_DECIMAL_fixed_n:                   FIXED_LEN_BYTE_ARRAY SNAPPY DO:0 FPO:654 SZ:46/82/1.78 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: 0.00, max: 2808600455222908552998455437577489916754369068.00, num_nulls: 0]\r\n_DECIMAL_unlimited:                 BINARY SNAPPY DO:0 FPO:700 SZ:55/126/2.29 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: 0.00, max: 3395389607300375329868809150482838932772815902977278052454891160836652.00, num_nulls: 0]\r\n_DATE_int32:                        INT32 SNAPPY DO:0 FPO:755 SZ:37/35/0.95 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: 1969-12-31, max: 5350-02-17, num_nulls: 0]\r\n_TIME_MILLIS_int32:                 INT32 SNAPPY DO:0 FPO:792 SZ:37/35/0.95 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: 00:00:00.001+0000, max: 00:20:34.567+0000, num_nulls: 0]\r\n_TIMESTAMP_MILLIS_int64:            INT64 SNAPPY DO:0 FPO:829 SZ:49/47/0.96 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: 1970-01-01T00:00:00.000+0000, max: 2038-01-19T03:14:07.999+0000, num_nulls: 0]\r\n_TIMESTAMP_MICROS_int64:            INT64 SNAPPY DO:0 FPO:878 SZ:49/47/0.96 VC:3 ENC:PLAIN,BIT_PACKED ST:[min: 1970-01-01T00:00:00.000000+0000, max: +294247-01-10T04:00:54.775807+0000, num_nulls: 0]\r\n_INTERVAL_fixed_len_byte_array_12:  FIXED_LEN_BYTE_ARRAY SNAPPY DO:0 FPO:927 SZ:53/59/1.11 VC:3 ENC:PLAIN,BIT_PACKED ST:[num_nulls: 0, min/max not defined]\r\n_INT96_RAW:                         INT96 SNAPPY DO:980 FPO:1029 SZ:78/82/1.05 VC:3 ENC:BIT_PACKED,PLAIN_DICTIONARY ST:[num_nulls: 0, min/max not defined]\r\n```\r\nHere is the example of output for dictionary encoding:\r\n```\r\njava -jar parquet-tools-1.12.0-SNAPSHOT_LocalMode.jar meta dict_dec.parquet\r\nfile:        file:/private/tmp/dict_dec.parquet\r\ncreator:     parquet-cpp version 1.5.1-SNAPSHOT\r\n\r\nfile schema: schema\r\n--------------------------------------------------------------------------------\r\nRecId:       OPTIONAL INT64 L:INTEGER(64,true) R:0 D:1\r\nRegHrs:      OPTIONAL FIXED_LEN_BYTE_ARRAY L:DECIMAL(29,6) R:0 D:1\r\n\r\nrow group 1: RC:1 TS:232 OFFSET:4\r\n--------------------------------------------------------------------------------\r\nRecId:        INT64 SNAPPY DO:4 FPO:28 SZ:96/92/0.96 VC:1 ENC:PLAIN_DICTIONARY,PLAIN,RLE ST:[min: 250, max: 250, num_nulls: 0]\r\nRegHrs:       FIXED_LEN_BYTE_ARRAY SNAPPY DO:195 FPO:227 SZ:136/132/0.97 VC:1 ENC:PLAIN_DICTIONARY,PLAIN,RLE ST:[min: 8.000000, max: 8.000000, num_nulls: 0]\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/859898985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/860040676","html_url":"https://github.com/apache/drill/pull/2257#issuecomment-860040676","issue_url":"https://api.github.com/repos/apache/drill/issues/2257","id":860040676,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MDA0MDY3Ng==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-12T11:31:51Z","updated_at":"2021-06-12T11:31:51Z","author_association":"MEMBER","body":"@laurentgo This looks good. Could you please confirm that the [2b27a1e](https://github.com/apache/drill/pull/2257/commits/2b27a1e60f8870dacee963bd4c62febbadc21dec) revision only affect the changes for the `gh-pages/apidocs` directory?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/860040676/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/860164363","html_url":"https://github.com/apache/drill/pull/2254#issuecomment-860164363","issue_url":"https://api.github.com/repos/apache/drill/issues/2254","id":860164363,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MDE2NDM2Mw==","user":{"login":"vvysotskyi","id":20928429,"node_id":"MDQ6VXNlcjIwOTI4NDI5","avatar_url":"https://avatars.githubusercontent.com/u/20928429?v=4","gravatar_id":"","url":"https://api.github.com/users/vvysotskyi","html_url":"https://github.com/vvysotskyi","followers_url":"https://api.github.com/users/vvysotskyi/followers","following_url":"https://api.github.com/users/vvysotskyi/following{/other_user}","gists_url":"https://api.github.com/users/vvysotskyi/gists{/gist_id}","starred_url":"https://api.github.com/users/vvysotskyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vvysotskyi/subscriptions","organizations_url":"https://api.github.com/users/vvysotskyi/orgs","repos_url":"https://api.github.com/users/vvysotskyi/repos","events_url":"https://api.github.com/users/vvysotskyi/events{/privacy}","received_events_url":"https://api.github.com/users/vvysotskyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-13T07:03:38Z","updated_at":"2021-06-13T07:03:38Z","author_association":"MEMBER","body":"@vdiravka, did you have a chance to take a look at generating a parquet file?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/860164363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/860242200","html_url":"https://github.com/apache/drill/pull/2257#issuecomment-860242200","issue_url":"https://api.github.com/repos/apache/drill/issues/2257","id":860242200,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MDI0MjIwMA==","user":{"login":"laurentgo","id":677448,"node_id":"MDQ6VXNlcjY3NzQ0OA==","avatar_url":"https://avatars.githubusercontent.com/u/677448?v=4","gravatar_id":"","url":"https://api.github.com/users/laurentgo","html_url":"https://github.com/laurentgo","followers_url":"https://api.github.com/users/laurentgo/followers","following_url":"https://api.github.com/users/laurentgo/following{/other_user}","gists_url":"https://api.github.com/users/laurentgo/gists{/gist_id}","starred_url":"https://api.github.com/users/laurentgo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/laurentgo/subscriptions","organizations_url":"https://api.github.com/users/laurentgo/orgs","repos_url":"https://api.github.com/users/laurentgo/repos","events_url":"https://api.github.com/users/laurentgo/events{/privacy}","received_events_url":"https://api.github.com/users/laurentgo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-13T17:06:30Z","updated_at":"2021-06-13T17:06:30Z","author_association":"CONTRIBUTOR","body":"> @laurentgo This looks good. Could you please confirm that the [2b27a1e](https://github.com/apache/drill/pull/2257/commits/2b27a1e60f8870dacee963bd4c62febbadc21dec) revision only affect the changes for the `gh-pages/apidocs` directory?\r\n\r\nYes, correct","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/860242200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/860389483","html_url":"https://github.com/apache/drill/pull/2254#issuecomment-860389483","issue_url":"https://api.github.com/repos/apache/drill/issues/2254","id":860389483,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MDM4OTQ4Mw==","user":{"login":"vdiravka","id":11904420,"node_id":"MDQ6VXNlcjExOTA0NDIw","avatar_url":"https://avatars.githubusercontent.com/u/11904420?v=4","gravatar_id":"","url":"https://api.github.com/users/vdiravka","html_url":"https://github.com/vdiravka","followers_url":"https://api.github.com/users/vdiravka/followers","following_url":"https://api.github.com/users/vdiravka/following{/other_user}","gists_url":"https://api.github.com/users/vdiravka/gists{/gist_id}","starred_url":"https://api.github.com/users/vdiravka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdiravka/subscriptions","organizations_url":"https://api.github.com/users/vdiravka/orgs","repos_url":"https://api.github.com/users/vdiravka/repos","events_url":"https://api.github.com/users/vdiravka/events{/privacy}","received_events_url":"https://api.github.com/users/vdiravka/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-14T05:56:32Z","updated_at":"2021-06-14T05:58:53Z","author_association":"MEMBER","body":"For me it is some sort of bug in Parquet lib. Anyway looks like there is a workaround: you can remove `\"  optional int96 _INT96_RAW  ; \\n\"` from schema and then dictionary encoding is used for `_INTERVAL_fixed_len_byte_array_12`, which you are interested in.\r\n\r\n```\r\nvitalii@vitalii-UX331UN:~/IdeaProjects/parquet-mr/parquet-cli$ java -cp 'target/*:target/dependency/*' org.apache.parquet.cli.Main meta /tmp/parquet/drill/parquet_test_file_simple\r\nWARNING: An illegal reflective access operation has occurred\r\nWARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/home/vitalii/IdeaProjects/parquet-mr/parquet-cli/target/dependency/hadoop-auth-2.10.1.jar) to method sun.security.krb5.Config.getInstance()\r\nWARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil\r\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\r\nWARNING: All illegal access operations will be denied in a future release\r\n\r\nFile path:  /tmp/parquet/drill/parquet_test_file_simple\r\nCreated by: parquet-mr version 1.12.0 (build db75a6815f2ba1d1ee89d1a90aeb296f1f3a8f20)\r\nProperties:\r\n  writer.model.name: example\r\nSchema:\r\nmessage ParquetLogicalDataTypes {\r\n  required int32 rowKey;\r\n  required binary _UTF8 (STRING);\r\n  required binary _Enum (ENUM);\r\n  required fixed_len_byte_array(16) _UUID (UUID);\r\n  required int32 _INT32_RAW;\r\n  required int32 _INT_8 (INTEGER(8,true));\r\n  required int32 _INT_16 (INTEGER(16,true));\r\n  required int32 _INT_32 (INTEGER(32,true));\r\n  required int32 _UINT_8 (INTEGER(8,false));\r\n  required int32 _UINT_16 (INTEGER(16,false));\r\n  required int32 _UINT_32 (INTEGER(32,false));\r\n  required int32 _DECIMAL_decimal9 (DECIMAL(9,2));\r\n  required int64 _INT64_RAW;\r\n  required int64 _INT_64 (INTEGER(64,true));\r\n  required int64 _UINT_64 (INTEGER(64,false));\r\n  required int64 _DECIMAL_decimal18 (DECIMAL(18,2));\r\n  required fixed_len_byte_array(20) _DECIMAL_fixed_n (DECIMAL(20,2));\r\n  required binary _DECIMAL_unlimited (DECIMAL(30,2));\r\n  required int32 _DATE_int32 (DATE);\r\n  required int32 _TIME_MILLIS_int32 (TIME(MILLIS,true));\r\n  required int64 _TIMESTAMP_MILLIS_int64 (TIMESTAMP(MILLIS,true));\r\n  required int64 _TIMESTAMP_MICROS_int64 (TIMESTAMP(MICROS,true));\r\n  required fixed_len_byte_array(12) _INTERVAL_fixed_len_byte_array_12 (INTERVAL);\r\n}\r\n\r\n\r\nRow group 0:  count: 3  435.00 B records  start: 4  total: 1.274 kB\r\n--------------------------------------------------------------------------------\r\n                                   type      encodings count     avg size   nulls   min / max\r\nrowKey                             INT32     S   D     3         11.00 B    0       \"1\" / \"3\"\r\n_UTF8                              BINARY    S   D     3         22.33 B    0       \"UTF8 string1\" / \"UTF8 string3\"\r\n_Enum                              BINARY    S   D     3         26.33 B    0       \"MAX_VALUE\" / \"RANDOM_VALUE\"\r\n_UUID                              FIXED[16] S _ R     3         20.67 B  0       \"01010101-0101-0101-0101-0...\" / \"01010101-0101-0101-0101-0...\"\r\n_INT32_RAW                         INT32     S   D     3         16.33 B    0       \"-2147483648\" / \"2147483647\"\r\n_INT_8                             INT32     S   D     3         13.67 B    0       \"-128\" / \"127\"\r\n_INT_16                            INT32     S   D     3         15.00 B    0       \"-32768\" / \"32767\"\r\n_INT_32                            INT32     S   D     3         16.33 B    0       \"-2147483648\" / \"2147483647\"\r\n_UINT_8                            INT32     S   D     3         13.67 B    0       \"0\" / \"255\"\r\n_UINT_16                           INT32     S   D     3         14.67 B    0       \"0\" / \"65535\"\r\n_UINT_32                           INT32     S   D     3         17.33 B    0       \"0\" / \"4294967295\"\r\n_DECIMAL_decimal9                  INT32     S   D     3         17.33 B    0       \"-0.01\" / \"12345.67\"\r\n_INT64_RAW                         INT64     S   D     3         21.00 B    0       \"-9223372036854775808\" / \"9223372036854775807\"\r\n_INT_64                            INT64     S   D     3         21.00 B    0       \"-9223372036854775808\" / \"9223372036854775807\"\r\n_UINT_64                           INT64     S   D     3         21.33 B    0       \"0\" / \"18446744073709551615\"\r\n_DECIMAL_decimal18                 INT64     S   D     3         21.33 B    0       \"-0.01\" / \"12345678901234.56\"\r\n_DECIMAL_fixed_n                   FIXED[20] S _ R     3         23.00 B  0       \"0.00\" / \"2808600455222908552998455...\"\r\n_DECIMAL_unlimited                 BINARY    S   D     3         20.33 B    0       \"0.00\" / \"3395389607300375329868809...\"\r\n_DATE_int32                        INT32     S   D     3         17.33 B    0       \"1969-12-31\" / \"5350-02-17\"\r\n_TIME_MILLIS_int32                 INT32     S   D     3         17.33 B    0       \"00:00:00.001+0000\" / \"00:20:34.567+0000\"\r\n_TIMESTAMP_MILLIS_int64            INT64     S   D     3         20.33 B    0       \"1970-01-01T00:00:00.000+0000\" / \"2038-01-19T03:14:07.999+0000\"\r\n_TIMESTAMP_MICROS_int64            INT64     S   D     3         22.00 B    0       \"1970-01-01T00:00:00.00000...\" / \"+294247-01-10T04:00:54.77...\"\r\n_INTERVAL_fixed_len_byte_array_12  FIXED[12] S _ R     3         25.33 B  0  \r\n```\r\nwhere `R` means `RLE_DICTIONARY` or  `PLAIN_DICTIONARY`.\r\n\r\nInitially there was a following meta for this file for me:\r\n```\r\nvitalii@vitalii-UX331UN:~/IdeaProjects/parquet-mr/parquet-cli$ java -cp 'target/*:target/dependency/*' org.apache.parquet.cli.Main meta /tmp/parquet/drill/parquet_test_file_simple\r\nWARNING: An illegal reflective access operation has occurred\r\nWARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/home/vitalii/IdeaProjects/parquet-mr/parquet-cli/target/dependency/hadoop-auth-2.10.1.jar) to method sun.security.krb5.Config.getInstance()\r\nWARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil\r\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\r\nWARNING: All illegal access operations will be denied in a future release\r\n\r\nFile path:  /tmp/parquet/drill/parquet_test_file_simple\r\nCreated by: parquet-mr version 1.12.0 (build db75a6815f2ba1d1ee89d1a90aeb296f1f3a8f20)\r\nProperties:\r\n  writer.model.name: example\r\nSchema:\r\nmessage ParquetLogicalDataTypes {\r\n  required int32 rowKey;\r\n  required binary _UTF8 (STRING);\r\n  required binary _Enum (ENUM);\r\n  required fixed_len_byte_array(16) _UUID (UUID);\r\n  required int32 _INT32_RAW;\r\n  required int32 _INT_8 (INTEGER(8,true));\r\n  required int32 _INT_16 (INTEGER(16,true));\r\n  required int32 _INT_32 (INTEGER(32,true));\r\n  required int32 _UINT_8 (INTEGER(8,false));\r\n  required int32 _UINT_16 (INTEGER(16,false));\r\n  required int32 _UINT_32 (INTEGER(32,false));\r\n  required int32 _DECIMAL_decimal9 (DECIMAL(9,2));\r\n  required int64 _INT64_RAW;\r\n  required int64 _INT_64 (INTEGER(64,true));\r\n  required int64 _UINT_64 (INTEGER(64,false));\r\n  required int64 _DECIMAL_decimal18 (DECIMAL(18,2));\r\n  required fixed_len_byte_array(20) _DECIMAL_fixed_n (DECIMAL(20,2));\r\n  required binary _DECIMAL_unlimited (DECIMAL(30,2));\r\n  required int32 _DATE_int32 (DATE);\r\n  required int32 _TIME_MILLIS_int32 (TIME(MILLIS,true));\r\n  required int64 _TIMESTAMP_MILLIS_int64 (TIMESTAMP(MILLIS,true));\r\n  required int64 _TIMESTAMP_MICROS_int64 (TIMESTAMP(MICROS,true));\r\n  required fixed_len_byte_array(12) _INTERVAL_fixed_len_byte_array_12 (INTERVAL);\r\n  required int96 _INT96_RAW;\r\n}\r\n\r\n\r\nRow group 0:  count: 3  361.00 B records  start: 4  total: 1.058 kB\r\n--------------------------------------------------------------------------------\r\n                                   type      encodings count     avg size   nulls   min / max\r\nrowKey                             INT32     S   _     3         12.33 B    0       \"1\" / \"3\"\r\n_UTF8                              BINARY    S   _     3         20.67 B    0       \"UTF8 string1\" / \"UTF8 string3\"\r\n_Enum                              BINARY    S   _     3         19.67 B    0       \"MAX_VALUE\" / \"RANDOM_VALUE\"\r\n_UUID                              FIXED[16] S   _     3         9.67 B   0       \"01010101-0101-0101-0101-0...\" / \"01010101-0101-0101-0101-0...\"\r\n_INT32_RAW                         INT32     S   _     3         12.33 B    0       \"-2147483648\" / \"2147483647\"\r\n_INT_8                             INT32     S   _     3         12.33 B    0       \"-128\" / \"127\"\r\n_INT_16                            INT32     S   _     3         12.33 B    0       \"-32768\" / \"32767\"\r\n_INT_32                            INT32     S   _     3         12.33 B    0       \"-2147483648\" / \"2147483647\"\r\n_UINT_8                            INT32     S   _     3         12.33 B    0       \"0\" / \"255\"\r\n_UINT_16                           INT32     S   _     3         12.33 B    0       \"0\" / \"65535\"\r\n_UINT_32                           INT32     S   _     3         12.33 B    0       \"0\" / \"4294967295\"\r\n_DECIMAL_decimal9                  INT32     S   _     3         12.33 B    0       \"-0.01\" / \"12345.67\"\r\n_INT64_RAW                         INT64     S   _     3         16.33 B    0       \"-9223372036854775808\" / \"9223372036854775807\"\r\n_INT_64                            INT64     S   _     3         16.33 B    0       \"-9223372036854775808\" / \"9223372036854775807\"\r\n_UINT_64                           INT64     S   _     3         16.33 B    0       \"0\" / \"18446744073709551615\"\r\n_DECIMAL_decimal18                 INT64     S   _     3         16.33 B    0       \"-0.01\" / \"12345678901234.56\"\r\n_DECIMAL_fixed_n                   FIXED[20] S   _     3         15.33 B  0       \"0.00\" / \"2808600455222908552998455...\"\r\n_DECIMAL_unlimited                 BINARY    S   _     3         18.33 B    0       \"0.00\" / \"3395389607300375329868809...\"\r\n_DATE_int32                        INT32     S   _     3         12.33 B    0       \"1969-12-31\" / \"5350-02-17\"\r\n_TIME_MILLIS_int32                 INT32     S   _     3         12.33 B    0       \"00:00:00.001+0000\" / \"00:20:34.567+0000\"\r\n_TIMESTAMP_MILLIS_int64            INT64     S   _     3         16.33 B    0       \"1970-01-01T00:00:00.000+0000\" / \"2038-01-19T03:14:07.999+0000\"\r\n_TIMESTAMP_MICROS_int64            INT64     S   _     3         16.33 B    0       \"1970-01-01T00:00:00.00000...\" / \"+294247-01-10T04:00:54.77...\"\r\n_INTERVAL_fixed_len_byte_array_12  FIXED[12] S   _     3         17.67 B  0       \r\n_INT96_RAW                         INT96     S _ R     3         26.00 B    0  \r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/860389483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/861738583","html_url":"https://github.com/apache/drill/pull/2254#issuecomment-861738583","issue_url":"https://api.github.com/repos/apache/drill/issues/2254","id":861738583,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MTczODU4Mw==","user":{"login":"vvysotskyi","id":20928429,"node_id":"MDQ6VXNlcjIwOTI4NDI5","avatar_url":"https://avatars.githubusercontent.com/u/20928429?v=4","gravatar_id":"","url":"https://api.github.com/users/vvysotskyi","html_url":"https://github.com/vvysotskyi","followers_url":"https://api.github.com/users/vvysotskyi/followers","following_url":"https://api.github.com/users/vvysotskyi/following{/other_user}","gists_url":"https://api.github.com/users/vvysotskyi/gists{/gist_id}","starred_url":"https://api.github.com/users/vvysotskyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vvysotskyi/subscriptions","organizations_url":"https://api.github.com/users/vvysotskyi/orgs","repos_url":"https://api.github.com/users/vvysotskyi/repos","events_url":"https://api.github.com/users/vvysotskyi/events{/privacy}","received_events_url":"https://api.github.com/users/vvysotskyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-15T18:33:02Z","updated_at":"2021-06-15T18:33:02Z","author_association":"MEMBER","body":"@vdiravka, I have added requested unit tests and fixed several issues, please take a look","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/861738583/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/863169172","html_url":"https://github.com/apache/drill/issues/2260#issuecomment-863169172","issue_url":"https://api.github.com/repos/apache/drill/issues/2260","id":863169172,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MzE2OTE3Mg==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-17T11:44:05Z","updated_at":"2021-06-17T11:44:05Z","author_association":"MEMBER","body":"@ssainz  Hello, It seems to be resolved. #2202 ","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/863169172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/863431486","html_url":"https://github.com/apache/drill/pull/2262#issuecomment-863431486","issue_url":"https://api.github.com/repos/apache/drill/issues/2262","id":863431486,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MzQzMTQ4Ng==","user":{"login":"jaltekruse","id":365366,"node_id":"MDQ6VXNlcjM2NTM2Ng==","avatar_url":"https://avatars.githubusercontent.com/u/365366?v=4","gravatar_id":"","url":"https://api.github.com/users/jaltekruse","html_url":"https://github.com/jaltekruse","followers_url":"https://api.github.com/users/jaltekruse/followers","following_url":"https://api.github.com/users/jaltekruse/following{/other_user}","gists_url":"https://api.github.com/users/jaltekruse/gists{/gist_id}","starred_url":"https://api.github.com/users/jaltekruse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaltekruse/subscriptions","organizations_url":"https://api.github.com/users/jaltekruse/orgs","repos_url":"https://api.github.com/users/jaltekruse/repos","events_url":"https://api.github.com/users/jaltekruse/events{/privacy}","received_events_url":"https://api.github.com/users/jaltekruse/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-17T17:36:27Z","updated_at":"2021-06-17T17:36:27Z","author_association":"CONTRIBUTOR","body":"+1, I would just make sure to update the git commit message to include the JIRA number","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/863431486/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/863483191","html_url":"https://github.com/apache/drill/issues/2260#issuecomment-863483191","issue_url":"https://api.github.com/repos/apache/drill/issues/2260","id":863483191,"node_id":"MDEyOklzc3VlQ29tbWVudDg2MzQ4MzE5MQ==","user":{"login":"cgivre","id":5513150,"node_id":"MDQ6VXNlcjU1MTMxNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5513150?v=4","gravatar_id":"","url":"https://api.github.com/users/cgivre","html_url":"https://github.com/cgivre","followers_url":"https://api.github.com/users/cgivre/followers","following_url":"https://api.github.com/users/cgivre/following{/other_user}","gists_url":"https://api.github.com/users/cgivre/gists{/gist_id}","starred_url":"https://api.github.com/users/cgivre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgivre/subscriptions","organizations_url":"https://api.github.com/users/cgivre/orgs","repos_url":"https://api.github.com/users/cgivre/repos","events_url":"https://api.github.com/users/cgivre/events{/privacy}","received_events_url":"https://api.github.com/users/cgivre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-17T18:49:55Z","updated_at":"2021-06-17T18:49:55Z","author_association":"CONTRIBUTOR","body":"Unless there is any objection, I'm going to close this as it should be resolved in Drill 1.19.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/863483191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/864019172","html_url":"https://github.com/apache/drill/issues/2260#issuecomment-864019172","issue_url":"https://api.github.com/repos/apache/drill/issues/2260","id":864019172,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NDAxOTE3Mg==","user":{"login":"ssainz","id":8454123,"node_id":"MDQ6VXNlcjg0NTQxMjM=","avatar_url":"https://avatars.githubusercontent.com/u/8454123?v=4","gravatar_id":"","url":"https://api.github.com/users/ssainz","html_url":"https://github.com/ssainz","followers_url":"https://api.github.com/users/ssainz/followers","following_url":"https://api.github.com/users/ssainz/following{/other_user}","gists_url":"https://api.github.com/users/ssainz/gists{/gist_id}","starred_url":"https://api.github.com/users/ssainz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ssainz/subscriptions","organizations_url":"https://api.github.com/users/ssainz/orgs","repos_url":"https://api.github.com/users/ssainz/repos","events_url":"https://api.github.com/users/ssainz/events{/privacy}","received_events_url":"https://api.github.com/users/ssainz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-18T12:58:12Z","updated_at":"2021-06-18T12:58:31Z","author_association":"NONE","body":"Hello there @luocooong , @cgivre - defect not fixed. Please check this line:\r\n\r\nhttps://github.com/apache/drill/blob/master/pom.xml#L49 \r\n\r\nshared guava still refers to guava 28.2 , thus, CVE-2020-8908 remains in Drill 1.19.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/864019172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/864223771","html_url":"https://github.com/apache/drill/pull/2259#issuecomment-864223771","issue_url":"https://api.github.com/repos/apache/drill/issues/2259","id":864223771,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NDIyMzc3MQ==","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-18T19:04:14Z","updated_at":"2021-06-19T06:24:30Z","author_association":"CONTRIBUTOR","body":"Thanks for finding and fixing this bug. It is a very difficult one. This area of code is complex.\r\n\r\nRevision to my earlier comment: I had assumed that the problem was in the run time part of the code, since that is where this stuff usually fails. However, I double-checked the code that was changed. Turns out the fix is in the *planner* not the runtime. So, most of the stuff I say below may not actually relevant to this bug. (Going to leave it anyway as background.)\r\n\r\nMy knowledge of the Calcite planner is not as deep as it should be so I can't tell if the fix is correct. I'm inclined to approve the fix because it works. Also, a deeper investigation would require quite a bit of work.\r\n\r\nWhat I find confusing is that the type conflict can *only* occur at runtime since Drill is unique in that the planner does not know about data types (that is what \"schema on read\" is all about.) So, why would the planner do something that would cause the runtime (which does know about types) to throw an error? And, why are the aggregate accumulators nullable (see below)?\r\n\r\n*Original note, somewhat edited:*\r\n\r\nThe description suggests that the code is attempting to combine the sum operation for `stddev()` with the sum operation for `sum()`. I believe that doing so is a bug unless there was some specific optimization attempt to share common expressions. Normally the planner would perform this kind of optimization. The trick, for Drill, is that the planner does not know the data type, so it must be the runtime that handles such details. I rather doubt that the original developers had gotten to the level of optimization in code generation where they attempted to share subexpressions.\r\n\r\nHowever, since the fix is in the planner, I wonder if Calcite is attempting to do what it would normally do (combine subexpressions), but doing so is wrong for Drill because we don't yet know the types? The only thing we do know is that if two expressions both work on column `c`, then their types are the same, even if the planner does not know what the actual type will turn out to be.\r\n\r\nThen there is the issue of the nullable `bigint` data type. According to the [SQL Server docs](https://docs.microsoft.com/en-us/sql/t-sql/functions/stdev-transact-sql?view=sql-server-ver15), `stddev` will ignore `NULL` values and will return `NULL` only if no non-`NULL` rows are present. Probably other engines work the same way. The [Drill docs](http://drill.apache.org/docs/aggregate-and-aggregate-statistical/) do not say how `NULL`s are handled, but the original developers mostly followed [Postgres](https://www.postgresql.org/docs/9.1/functions-aggregate.html), among others. Postgres also uses the \"ignore NULL\" behavior.\r\n\r\nGiven this, there should *never* be a nullable anything in the accumulators, even if the input type *is* nullable. Instead, to implement the \"`NULL` if no values\" behavior, the \"finalize\" step (the one that computes the final output value), should return a nullable value if the count is zero. Note that Postgres returns `NULL` for `sum()` when there are no rows instead of 0. This is odd, I'm not sure if that is what Drill does. (All these details should be in the Drill docs, but are not. If we figure out how this works in Drill, we should file a Doc. JIRA ticket to get the information added.)\r\n\r\nNext, consider how the accumulators are created. Remember that Drill does not know the data type until the first row arrives. At that point, Drill has a data type and can set up the needed accumulators and generate the code for the operations. My understanding is that the accumulators and code will remain in place for the rest of the query -- unless the operation receives an `OK_NEW_SCHEMA` (schema change) from the upstream operator. At that point, Drill is supposed to handle the change. (A `sum(c)` first saw `c` as `INT`, but later saw it as `DOUBLE`, say.) I doubt if this actually works: we'd have to somehow compute the common type of the old and new types, convert the accumulators, etc. Maybe it works, but I'd not bet on it. (Most schema change events are not handled in most operators -- they are an intractable problem for which there is no good *a priori* solution. It is an ongoing embarrassment that Drill promises to do things which it cannot do, even in principle.)\r\n\r\nLet's look at the error message to see what that tells us. Query:\r\n\r\n```sql\r\nselect col1, stddev(col2), SUM(col2)\r\nFROM (values ('UA', 3), ('USA', 2), ('UA', 3), ('USA', 5), ('USA', 1), ('UA', 9)) x(col1, col2)\r\nGROUP BY col1;\r\n```\r\n\r\nSince the data is from a `VALUES` clause, the schema does not change, so we can rule out that as a possible cause. Instead, the problem is probably a bug within Drill itself.\r\n\r\n```text\r\nrowtype of new rel:\r\nRecordType(CHAR(3) NOT NULL col1, BIGINT $f1, BIGINT $f2, BIGINT NOT NULL $f3, BIGINT $f4) NOT NULL\r\nrowtype of set:\r\nRecordType(CHAR(3) NOT NULL col1, BIGINT $f1, BIGINT $f2, BIGINT NOT NULL $f3, BIGINT NOT NULL $f4) NOT NULL\r\n```\r\n\r\nWe see that the `$f1` is not a very descriptive name. It probably means \"function 1\". The pull request description suggests that:\r\n\r\n* `$f1` is `STDDEV.sum(col2)`\r\n* `$f2` is `STDDEV.sum(col2*col2)`\r\n* `$f3` is `STDDEV.count(col2)`\r\n* `$f4` is `SUM(col2)`\r\n\r\nWhere `STDDEV.sum` is something I just made up to mean \"the `sum()` function that implements `STDDEV()`\". We can immediately notice some issues:\r\n\r\n* *None* of the functions should be nullable, all should be `NOT NULL` because of the way that SQL handles `NULL`s: they are ignored, so we only accumulate non-null values. The `NULL`ness will be added to the output column.\r\n* So, the \"new rel\" is less correct than the \"rowtype of set\", even though both are wrong.\r\n\r\nSo, where does this leave us? Again, if the planner fix works, then the result is less broken than the current code, which is good.\r\n\r\nOn the other hand, longer term, the above suggests that we should check:\r\n\r\n* Why did code generation decide to create a nullable accumulator? According to the rules of SQL, discussed above, the accumulators should all be non-nullable.\r\n* How does the code find the accumulator? Each should have a unique name, derived, somehow, from the input expression. The `$f1` symbols are internal names. They clearly do not identify the function in any detail. If we use them as a key, we have to ensure that we do the same mapping from expression to `$fn` each time. Otherwise, the names should be more unique such as (making something up)  `$STDDEV$SUM$C`. The question is: are the names getting confused, or is the problem elsewhere?\r\n* If the planner does decide to combine the `sum()` for `stddev()` with the \"bare\" `sum()` operation, why is that a problem, since they both use the same column `c`, and thus the two have the same input data type?\r\n\r\nAgain, thanks for looking into this; this is a very complex part of the code, so we have to work carefully.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/864223771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/864392221","html_url":"https://github.com/apache/drill/issues/2260#issuecomment-864392221","issue_url":"https://api.github.com/repos/apache/drill/issues/2260","id":864392221,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NDM5MjIyMQ==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-19T11:14:33Z","updated_at":"2021-06-19T11:14:33Z","author_association":"MEMBER","body":"@ssainz YES. Thanks for the reminder. @vdiravka has already started the process of updating Drill shaded Guava.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/864392221/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/864843790","html_url":"https://github.com/apache/drill/pull/2259#issuecomment-864843790","issue_url":"https://api.github.com/repos/apache/drill/issues/2259","id":864843790,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NDg0Mzc5MA==","user":{"login":"Leon-WTF","id":25920008,"node_id":"MDQ6VXNlcjI1OTIwMDA4","avatar_url":"https://avatars.githubusercontent.com/u/25920008?v=4","gravatar_id":"","url":"https://api.github.com/users/Leon-WTF","html_url":"https://github.com/Leon-WTF","followers_url":"https://api.github.com/users/Leon-WTF/followers","following_url":"https://api.github.com/users/Leon-WTF/following{/other_user}","gists_url":"https://api.github.com/users/Leon-WTF/gists{/gist_id}","starred_url":"https://api.github.com/users/Leon-WTF/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Leon-WTF/subscriptions","organizations_url":"https://api.github.com/users/Leon-WTF/orgs","repos_url":"https://api.github.com/users/Leon-WTF/repos","events_url":"https://api.github.com/users/Leon-WTF/events{/privacy}","received_events_url":"https://api.github.com/users/Leon-WTF/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-21T08:35:02Z","updated_at":"2021-06-21T08:35:41Z","author_association":"CONTRIBUTOR","body":"Thanks paul for your detailed note. I reviewed the code more deeper, and below are my discoveries for your questions, please correct me if something is wrong.\r\n1. There two sum functions: SqlSumAggFunction and SqlSumEmptyIsZeroAggFunction, from TypeInferenceUtils.DrillSumSqlReturnTypeInference, we can find that the return type of SqlSumAggFunction is non-nullable only when there is group-py and input type is non-nullable, otherwise it is nullable(Don't know why?). SqlSumAggFunction can be convert to SqlSumEmptyIsZeroAggFunction when return type is non-nullable or to \"case count(c) when 0 then null else sum0(c) end\" when return type is nullable. The return type of SqlSumEmptyIsZeroAggFunction should always be non-nullable.\r\n2. In RexBuilder.addAggCall, we can find that it uses the equals and hashCode methods of AggregateCall to decide if it already exists in aggCallMapping, but the return type property is not checked in the methods. That's why the code finds the nullable sum operator and throws the non-nullable one. \r\n3. When we call RelOptRuleCall.transformTo, it will do the rowtype equality check between the new and old RelNode, that's where the exception is thrown. The return type of \"bare\" sum operation is non-nullable because there is group-py and the input type is non-nullable. The return type of the sum function from stddev is nullable because it is changed to nullable at line 516 of DrillReduceAggregatesRule(Don't know why?)\r\n\r\nI made some new modifications based on above discoveries, and also I think we should use DrillCalciteSqlAggFunctionWrapper consistently for calcite's SqlAggFunction to avoid unequality of the class type when compare AggregateCall.\r\n\r\nWe have two choses to fix the bug now: one solution as my previouse modification is to compare the return type of AggregateCall when checking if it is already existing, this will result in having two same functions just different with return type which actually can be combined, but this solution will have less side effect. Another solution as my current modification is to make sum0 operation's return type always be false, which one do you prefer?\r\n\r\nIn addition, sum returns empty data with group by, otherwise returns null when there is no rows,\r\n\r\n> Thanks for finding and fixing this bug. It is a very difficult one. This area of code is complex.\r\n> \r\n> Revision to my earlier comment: I had assumed that the problem was in the run time part of the code, since that is where this stuff usually fails. However, I double-checked the code that was changed. Turns out the fix is in the _planner_ not the runtime. So, most of the stuff I say below may not actually relevant to this bug. (Going to leave it anyway as background.)\r\n> \r\n> My knowledge of the Calcite planner is not as deep as it should be so I can't tell if the fix is correct. I'm inclined to approve the fix because it works. Also, a deeper investigation would require quite a bit of work.\r\n> \r\n> What I find confusing is that the type conflict can _only_ occur at runtime since Drill is unique in that the planner does not know about data types (that is what \"schema on read\" is all about.) So, why would the planner do something that would cause the runtime (which does know about types) to throw an error? And, why are the aggregate accumulators nullable (see below)?\r\n> \r\n> _Original note, somewhat edited:_\r\n> \r\n> The description suggests that the code is attempting to combine the sum operation for `stddev()` with the sum operation for `sum()`. I believe that doing so is a bug unless there was some specific optimization attempt to share common expressions. Normally the planner would perform this kind of optimization. The trick, for Drill, is that the planner does not know the data type, so it must be the runtime that handles such details. I rather doubt that the original developers had gotten to the level of optimization in code generation where they attempted to share subexpressions.\r\n> \r\n> However, since the fix is in the planner, I wonder if Calcite is attempting to do what it would normally do (combine subexpressions), but doing so is wrong for Drill because we don't yet know the types? The only thing we do know is that if two expressions both work on column `c`, then their types are the same, even if the planner does not know what the actual type will turn out to be.\r\n> \r\n> Then there is the issue of the nullable `bigint` data type. According to the [SQL Server docs](https://docs.microsoft.com/en-us/sql/t-sql/functions/stdev-transact-sql?view=sql-server-ver15), `stddev` will ignore `NULL` values and will return `NULL` only if no non-`NULL` rows are present. Probably other engines work the same way. The [Drill docs](http://drill.apache.org/docs/aggregate-and-aggregate-statistical/) do not say how `NULL`s are handled, but the original developers mostly followed [Postgres](https://www.postgresql.org/docs/9.1/functions-aggregate.html), among others. Postgres also uses the \"ignore NULL\" behavior.\r\n> \r\n> Given this, there should _never_ be a nullable anything in the accumulators, even if the input type _is_ nullable. Instead, to implement the \"`NULL` if no values\" behavior, the \"finalize\" step (the one that computes the final output value), should return a nullable value if the count is zero. Note that Postgres returns `NULL` for `sum()` when there are no rows instead of 0. This is odd, I'm not sure if that is what Drill does. (All these details should be in the Drill docs, but are not. If we figure out how this works in Drill, we should file a Doc. JIRA ticket to get the information added.)\r\n> \r\n> Next, consider how the accumulators are created. Remember that Drill does not know the data type until the first row arrives. At that point, Drill has a data type and can set up the needed accumulators and generate the code for the operations. My understanding is that the accumulators and code will remain in place for the rest of the query -- unless the operation receives an `OK_NEW_SCHEMA` (schema change) from the upstream operator. At that point, Drill is supposed to handle the change. (A `sum(c)` first saw `c` as `INT`, but later saw it as `DOUBLE`, say.) I doubt if this actually works: we'd have to somehow compute the common type of the old and new types, convert the accumulators, etc. Maybe it works, but I'd not bet on it. (Most schema change events are not handled in most operators -- they are an intractable problem for which there is no good _a priori_ solution. It is an ongoing embarrassment that Drill promises to do things which it cannot do, even in principle.)\r\n> \r\n> Let's look at the error message to see what that tells us. Query:\r\n> \r\n> ```sql\r\n> select col1, stddev(col2), SUM(col2)\r\n> FROM (values ('UA', 3), ('USA', 2), ('UA', 3), ('USA', 5), ('USA', 1), ('UA', 9)) x(col1, col2)\r\n> GROUP BY col1;\r\n> ```\r\n> \r\n> Since the data is from a `VALUES` clause, the schema does not change, so we can rule out that as a possible cause. Instead, the problem is probably a bug within Drill itself.\r\n> \r\n> ```\r\n> rowtype of new rel:\r\n> RecordType(CHAR(3) NOT NULL col1, BIGINT $f1, BIGINT $f2, BIGINT NOT NULL $f3, BIGINT $f4) NOT NULL\r\n> rowtype of set:\r\n> RecordType(CHAR(3) NOT NULL col1, BIGINT $f1, BIGINT $f2, BIGINT NOT NULL $f3, BIGINT NOT NULL $f4) NOT NULL\r\n> ```\r\n> \r\n> We see that the `$f1` is not a very descriptive name. It probably means \"function 1\". The pull request description suggests that:\r\n> \r\n> * `$f1` is `STDDEV.sum(col2)`\r\n> * `$f2` is `STDDEV.sum(col2*col2)`\r\n> * `$f3` is `STDDEV.count(col2)`\r\n> * `$f4` is `SUM(col2)`\r\n> \r\n> Where `STDDEV.sum` is something I just made up to mean \"the `sum()` function that implements `STDDEV()`\". We can immediately notice some issues:\r\n> \r\n> * _None_ of the functions should be nullable, all should be `NOT NULL` because of the way that SQL handles `NULL`s: they are ignored, so we only accumulate non-null values. The `NULL`ness will be added to the output column.\r\n> * So, the \"new rel\" is less correct than the \"rowtype of set\", even though both are wrong.\r\n> \r\n> So, where does this leave us? Again, if the planner fix works, then the result is less broken than the current code, which is good.\r\n> \r\n> On the other hand, longer term, the above suggests that we should check:\r\n> \r\n> * Why did code generation decide to create a nullable accumulator? According to the rules of SQL, discussed above, the accumulators should all be non-nullable.\r\n> * How does the code find the accumulator? Each should have a unique name, derived, somehow, from the input expression. The `$f1` symbols are internal names. They clearly do not identify the function in any detail. If we use them as a key, we have to ensure that we do the same mapping from expression to `$fn` each time. Otherwise, the names should be more unique such as (making something up)  `$STDDEV$SUM$C`. The question is: are the names getting confused, or is the problem elsewhere?\r\n> * If the planner does decide to combine the `sum()` for `stddev()` with the \"bare\" `sum()` operation, why is that a problem, since they both use the same column `c`, and thus the two have the same input data type?\r\n> \r\n> Again, thanks for looking into this; this is a very complex part of the code, so we have to work carefully.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/864843790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/866817374","html_url":"https://github.com/apache/drill/pull/2251#issuecomment-866817374","issue_url":"https://api.github.com/repos/apache/drill/issues/2251","id":866817374,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NjgxNzM3NA==","user":{"login":"vvysotskyi","id":20928429,"node_id":"MDQ6VXNlcjIwOTI4NDI5","avatar_url":"https://avatars.githubusercontent.com/u/20928429?v=4","gravatar_id":"","url":"https://api.github.com/users/vvysotskyi","html_url":"https://github.com/vvysotskyi","followers_url":"https://api.github.com/users/vvysotskyi/followers","following_url":"https://api.github.com/users/vvysotskyi/following{/other_user}","gists_url":"https://api.github.com/users/vvysotskyi/gists{/gist_id}","starred_url":"https://api.github.com/users/vvysotskyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vvysotskyi/subscriptions","organizations_url":"https://api.github.com/users/vvysotskyi/orgs","repos_url":"https://api.github.com/users/vvysotskyi/repos","events_url":"https://api.github.com/users/vvysotskyi/events{/privacy}","received_events_url":"https://api.github.com/users/vvysotskyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-23T13:04:48Z","updated_at":"2021-06-23T13:04:48Z","author_association":"MEMBER","body":"@vdiravka, looks like the test you have added is failing in CI, could you please take a look?\r\n\r\nCould you please share some functional-level doc with the description use cases and behavior, so it will be easier to do the code review?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/866817374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/866818124","html_url":"https://github.com/apache/drill/pull/2263#issuecomment-866818124","issue_url":"https://api.github.com/repos/apache/drill/issues/2263","id":866818124,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NjgxODEyNA==","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-23T13:05:44Z","updated_at":"2021-06-23T13:05:44Z","author_association":"CONTRIBUTOR","body":"Please rebase on apache:gh-pages","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/866818124/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/867536800","html_url":"https://github.com/apache/drill/pull/2264#issuecomment-867536800","issue_url":"https://api.github.com/repos/apache/drill/issues/2264","id":867536800,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzUzNjgwMA==","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-24T10:49:00Z","updated_at":"2021-06-24T10:49:00Z","author_association":"CONTRIBUTOR","body":"I was unsure about how to select a reviewer, apologies if I've spammed you.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/867536800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/867589030","html_url":"https://github.com/apache/drill/pull/2244#issuecomment-867589030","issue_url":"https://api.github.com/repos/apache/drill/issues/2244","id":867589030,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzU4OTAzMA==","user":{"login":"martin-g","id":232002,"node_id":"MDQ6VXNlcjIzMjAwMg==","avatar_url":"https://avatars.githubusercontent.com/u/232002?v=4","gravatar_id":"","url":"https://api.github.com/users/martin-g","html_url":"https://github.com/martin-g","followers_url":"https://api.github.com/users/martin-g/followers","following_url":"https://api.github.com/users/martin-g/following{/other_user}","gists_url":"https://api.github.com/users/martin-g/gists{/gist_id}","starred_url":"https://api.github.com/users/martin-g/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martin-g/subscriptions","organizations_url":"https://api.github.com/users/martin-g/orgs","repos_url":"https://api.github.com/users/martin-g/repos","events_url":"https://api.github.com/users/martin-g/events{/privacy}","received_events_url":"https://api.github.com/users/martin-g/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-24T12:15:00Z","updated_at":"2021-06-24T12:15:00Z","author_association":"MEMBER","body":"I've updated the PR to latest master and resolved the merge conflicts!","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/867589030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/867712456","html_url":"https://github.com/apache/drill/pull/2264#issuecomment-867712456","issue_url":"https://api.github.com/repos/apache/drill/issues/2264","id":867712456,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzcxMjQ1Ng==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-24T15:07:23Z","updated_at":"2021-06-24T15:07:23Z","author_association":"MEMBER","body":"@dzamo Nice work. Could you please update the docs for this extension? [Math and Trig](https://github.com/apache/drill/blob/gh-pages/_docs/en/sql-reference/sql-functions/010-math-and-trig.md)","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/867712456/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/867731330","html_url":"https://github.com/apache/drill/pull/2264#issuecomment-867731330","issue_url":"https://api.github.com/repos/apache/drill/issues/2264","id":867731330,"node_id":"MDEyOklzc3VlQ29tbWVudDg2NzczMTMzMA==","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-24T15:27:42Z","updated_at":"2021-06-24T15:27:42Z","author_association":"CONTRIBUTOR","body":"> @dzamo Nice work. Could you please update the docs for this extension? [Math and Trig](https://github.com/apache/drill/blob/gh-pages/_docs/en/sql-reference/sql-functions/010-math-and-trig.md)\n\nAlready done, Sir. Will deploy in the next batch of doc updates. ","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/867731330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/869725751","html_url":"https://github.com/apache/drill/pull/2256#issuecomment-869725751","issue_url":"https://api.github.com/repos/apache/drill/issues/2256","id":869725751,"node_id":"MDEyOklzc3VlQ29tbWVudDg2OTcyNTc1MQ==","user":{"login":"cgivre","id":5513150,"node_id":"MDQ6VXNlcjU1MTMxNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5513150?v=4","gravatar_id":"","url":"https://api.github.com/users/cgivre","html_url":"https://github.com/cgivre","followers_url":"https://api.github.com/users/cgivre/followers","following_url":"https://api.github.com/users/cgivre/following{/other_user}","gists_url":"https://api.github.com/users/cgivre/gists{/gist_id}","starred_url":"https://api.github.com/users/cgivre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgivre/subscriptions","organizations_url":"https://api.github.com/users/cgivre/orgs","repos_url":"https://api.github.com/users/cgivre/repos","events_url":"https://api.github.com/users/cgivre/events{/privacy}","received_events_url":"https://api.github.com/users/cgivre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-28T14:18:22Z","updated_at":"2021-06-28T14:18:22Z","author_association":"CONTRIBUTOR","body":"Hi @luocooong, @jfmario \r\nThank you for the review comments.   @luocooong I think I addressed all your comments.\r\n\r\n@jfmario \r\nI added a configuration option to the API Connection, `errorOn400` which allows the user to decide whether they want Drill to throw an error or not on 400 response codes.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/869725751/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/869726447","html_url":"https://github.com/apache/drill/pull/2266#issuecomment-869726447","issue_url":"https://api.github.com/repos/apache/drill/issues/2266","id":869726447,"node_id":"MDEyOklzc3VlQ29tbWVudDg2OTcyNjQ0Nw==","user":{"login":"kingswanwho","id":15710469,"node_id":"MDQ6VXNlcjE1NzEwNDY5","avatar_url":"https://avatars.githubusercontent.com/u/15710469?v=4","gravatar_id":"","url":"https://api.github.com/users/kingswanwho","html_url":"https://github.com/kingswanwho","followers_url":"https://api.github.com/users/kingswanwho/followers","following_url":"https://api.github.com/users/kingswanwho/following{/other_user}","gists_url":"https://api.github.com/users/kingswanwho/gists{/gist_id}","starred_url":"https://api.github.com/users/kingswanwho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kingswanwho/subscriptions","organizations_url":"https://api.github.com/users/kingswanwho/orgs","repos_url":"https://api.github.com/users/kingswanwho/repos","events_url":"https://api.github.com/users/kingswanwho/events{/privacy}","received_events_url":"https://api.github.com/users/kingswanwho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-28T14:19:08Z","updated_at":"2021-06-28T14:39:03Z","author_association":"CONTRIBUTOR","body":"> I see in that in the external links you remove the scheme \"https:\", probably by accidentally reverting to old code. I recently added \"https:\" to these URLs because otherwise Polyglot thinks it must mangle them for multilingual, and of course it must not. It is possible to use a special character to tell Polyglot to leave these URLs alone but instead I used an explict \"https:\" since that is a practice recommended in general these days. This could be what has messed with your page layout so could you put \"https:\" back into every URL starting with \"//\" and see if the layout problems are fixed?\r\n\r\nYes, I found the problem you mentioned, after I changed those thing to newest version you just submitted, the video switch framework bug I mentioned in slack back to normal.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/869726447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/869756166","html_url":"https://github.com/apache/drill/pull/2266#issuecomment-869756166","issue_url":"https://api.github.com/repos/apache/drill/issues/2266","id":869756166,"node_id":"MDEyOklzc3VlQ29tbWVudDg2OTc1NjE2Ng==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-28T14:57:31Z","updated_at":"2021-06-28T14:57:31Z","author_association":"MEMBER","body":"@kingswanwho YES, Don't need to open new pull request. Because Git is a very powerful tool, the condition is that we have to master these skills, but most developers will mess it up at the beginning.\nWell, I'm going to address some suggestions (for zh-CN) tomorrow.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/869756166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/869766797","html_url":"https://github.com/apache/drill/pull/2266#issuecomment-869766797","issue_url":"https://api.github.com/repos/apache/drill/issues/2266","id":869766797,"node_id":"MDEyOklzc3VlQ29tbWVudDg2OTc2Njc5Nw==","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-28T15:09:30Z","updated_at":"2021-06-28T15:09:30Z","author_association":"CONTRIBUTOR","body":"@kingswanwho just push a last commit with the fixes to kingswanwho:git-pages-zh-index.  This PR will automatically incorporate it.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/869766797/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/869793371","html_url":"https://github.com/apache/drill/pull/2244#issuecomment-869793371","issue_url":"https://api.github.com/repos/apache/drill/issues/2244","id":869793371,"node_id":"MDEyOklzc3VlQ29tbWVudDg2OTc5MzM3MQ==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-28T15:42:46Z","updated_at":"2021-06-28T15:42:46Z","author_association":"MEMBER","body":"@cgivre The new revision is good for the PR. Any suggestions?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/869793371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/870853765","html_url":"https://github.com/apache/drill/pull/2244#issuecomment-870853765","issue_url":"https://api.github.com/repos/apache/drill/issues/2244","id":870853765,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MDg1Mzc2NQ==","user":{"login":"cgivre","id":5513150,"node_id":"MDQ6VXNlcjU1MTMxNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5513150?v=4","gravatar_id":"","url":"https://api.github.com/users/cgivre","html_url":"https://github.com/cgivre","followers_url":"https://api.github.com/users/cgivre/followers","following_url":"https://api.github.com/users/cgivre/following{/other_user}","gists_url":"https://api.github.com/users/cgivre/gists{/gist_id}","starred_url":"https://api.github.com/users/cgivre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgivre/subscriptions","organizations_url":"https://api.github.com/users/cgivre/orgs","repos_url":"https://api.github.com/users/cgivre/repos","events_url":"https://api.github.com/users/cgivre/events{/privacy}","received_events_url":"https://api.github.com/users/cgivre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-06-29T19:22:37Z","updated_at":"2021-06-29T19:22:37Z","author_association":"CONTRIBUTOR","body":"> @cgivre The new revision is good for the PR. Any suggestions?\r\n\r\nIt looks good to me.  @vvysotskyi do you have any additional changes or can we merge?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/870853765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/872627197","html_url":"https://github.com/apache/drill/pull/2259#issuecomment-872627197","issue_url":"https://api.github.com/repos/apache/drill/issues/2259","id":872627197,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MjYyNzE5Nw==","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-02T00:20:22Z","updated_at":"2021-07-02T00:20:22Z","author_association":"CONTRIBUTOR","body":"Thanks @Leon-WTF for the very clear explanation: you clearly did your homework and understand Calcite. I agree that your fix is the correct one short-term. Given that Drill (incorrectly) makes the function nullable at times, it does make sense to include the type in the lookup check.\r\n\r\nIt is true that there are times when the function can return a `NULL` result. The code is probably confusing the fact that the *output* can be nullable (if all inputs are `NULL`, say) vs. the fact that the calculation itself is not nullable. This seems like a rather complex mess to clean up, and is best left for later. There is little harm, for now, in having two copies of the function. Someone can fix the issue when they need to squeeze the ultimate performance out of the computation.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/872627197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/872638482","html_url":"https://github.com/apache/drill/pull/2259#issuecomment-872638482","issue_url":"https://api.github.com/repos/apache/drill/issues/2259","id":872638482,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MjYzODQ4Mg==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-02T00:56:55Z","updated_at":"2021-07-02T00:56:55Z","author_association":"MEMBER","body":"@paul-rogers Thanks for the guide.\n@Leon-WTF Are we planning any new revisions?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/872638482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/873074866","html_url":"https://github.com/apache/drill/pull/2259#issuecomment-873074866","issue_url":"https://api.github.com/repos/apache/drill/issues/2259","id":873074866,"node_id":"MDEyOklzc3VlQ29tbWVudDg3MzA3NDg2Ng==","user":{"login":"Leon-WTF","id":25920008,"node_id":"MDQ6VXNlcjI1OTIwMDA4","avatar_url":"https://avatars.githubusercontent.com/u/25920008?v=4","gravatar_id":"","url":"https://api.github.com/users/Leon-WTF","html_url":"https://github.com/Leon-WTF","followers_url":"https://api.github.com/users/Leon-WTF/followers","following_url":"https://api.github.com/users/Leon-WTF/following{/other_user}","gists_url":"https://api.github.com/users/Leon-WTF/gists{/gist_id}","starred_url":"https://api.github.com/users/Leon-WTF/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Leon-WTF/subscriptions","organizations_url":"https://api.github.com/users/Leon-WTF/orgs","repos_url":"https://api.github.com/users/Leon-WTF/repos","events_url":"https://api.github.com/users/Leon-WTF/events{/privacy}","received_events_url":"https://api.github.com/users/Leon-WTF/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-02T15:16:55Z","updated_at":"2021-07-02T15:16:55Z","author_association":"CONTRIBUTOR","body":"> @paul-rogers Thanks for the guide.\r\n> @Leon-WTF Are we planning any new revisions?\r\n\r\nNoï¼ŒI have rebased on the master, do we still need to wait for another reviewer to approve befere merge?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/873074866/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/874750796","html_url":"https://github.com/apache/drill/pull/2225#issuecomment-874750796","issue_url":"https://api.github.com/repos/apache/drill/issues/2225","id":874750796,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NDc1MDc5Ng==","user":{"login":"Leon-WTF","id":25920008,"node_id":"MDQ6VXNlcjI1OTIwMDA4","avatar_url":"https://avatars.githubusercontent.com/u/25920008?v=4","gravatar_id":"","url":"https://api.github.com/users/Leon-WTF","html_url":"https://github.com/Leon-WTF","followers_url":"https://api.github.com/users/Leon-WTF/followers","following_url":"https://api.github.com/users/Leon-WTF/following{/other_user}","gists_url":"https://api.github.com/users/Leon-WTF/gists{/gist_id}","starred_url":"https://api.github.com/users/Leon-WTF/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Leon-WTF/subscriptions","organizations_url":"https://api.github.com/users/Leon-WTF/orgs","repos_url":"https://api.github.com/users/Leon-WTF/repos","events_url":"https://api.github.com/users/Leon-WTF/events{/privacy}","received_events_url":"https://api.github.com/users/Leon-WTF/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-06T13:16:14Z","updated_at":"2021-07-06T13:16:14Z","author_association":"CONTRIBUTOR","body":"Thanks congï¼Œjust if we use queryId as the cache key, it may conflict when two users upload different profile jsons with same query id at the same time(Though this may be a rare condition). What do you think?\r\n\r\n> @Leon-WTF Hi. I think we made things complicated. There is a suggestion to revise :\r\n> \r\n> 1. Define the cache above the `getProfileJSON(@PathParam(\"queryid\") String queryId)`\r\n> \r\n> ```java\r\n>   // provide cache for view the profile\r\n>   private static final Cache<String, String> PROFILE_CACHE =\r\n>       CacheBuilder\r\n>         .newBuilder()\r\n>           .expireAfterAccess(1, TimeUnit.MINUTES)\r\n>             .build();\r\n> ```\r\n> \r\n> 1. Add the if-else in the `getProfileJSON(@PathParam(\"queryid\") String queryId)`\r\n> \r\n> ```java\r\n> String content = PROFILE_CACHE.getIfPresent(queryId);\r\n> if (content == null) {\r\n>  // return the new\r\n> } else {\r\n>   PROFILE_CACHE.invalidate(queryId);\r\n>   // then, return the cache\r\n> }\r\n> ```\r\n> \r\n> 1. Cache the data in the `viewProfile(@FormDataParam(PROFILE_DATA) String content)`\r\n> \r\n> ```java\r\n> PROFILE_CACHE.put(profile.getQueryId(), content);\r\n> ```","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/874750796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/874760720","html_url":"https://github.com/apache/drill/pull/2225#issuecomment-874760720","issue_url":"https://api.github.com/repos/apache/drill/issues/2225","id":874760720,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NDc2MDcyMA==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-06T13:28:57Z","updated_at":"2021-07-06T13:28:57Z","author_association":"MEMBER","body":"@Leon-WTF This feature should be used for troubleshooting. I chose to keep the code simple.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/874760720/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/874817786","html_url":"https://github.com/apache/drill/pull/2225#issuecomment-874817786","issue_url":"https://api.github.com/repos/apache/drill/issues/2225","id":874817786,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NDgxNzc4Ng==","user":{"login":"Leon-WTF","id":25920008,"node_id":"MDQ6VXNlcjI1OTIwMDA4","avatar_url":"https://avatars.githubusercontent.com/u/25920008?v=4","gravatar_id":"","url":"https://api.github.com/users/Leon-WTF","html_url":"https://github.com/Leon-WTF","followers_url":"https://api.github.com/users/Leon-WTF/followers","following_url":"https://api.github.com/users/Leon-WTF/following{/other_user}","gists_url":"https://api.github.com/users/Leon-WTF/gists{/gist_id}","starred_url":"https://api.github.com/users/Leon-WTF/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Leon-WTF/subscriptions","organizations_url":"https://api.github.com/users/Leon-WTF/orgs","repos_url":"https://api.github.com/users/Leon-WTF/repos","events_url":"https://api.github.com/users/Leon-WTF/events{/privacy}","received_events_url":"https://api.github.com/users/Leon-WTF/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-06T14:37:17Z","updated_at":"2021-07-06T14:37:17Z","author_association":"CONTRIBUTOR","body":"> @Leon-WTF This feature should be used for troubleshooting. I chose to keep the code simple.\r\n\r\nGot it, I have modified the code to base on cache, please have a look.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/874817786/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/874845845","html_url":"https://github.com/apache/drill/pull/2225#issuecomment-874845845","issue_url":"https://api.github.com/repos/apache/drill/issues/2225","id":874845845,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NDg0NTg0NQ==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-06T15:10:46Z","updated_at":"2021-07-06T15:10:46Z","author_association":"MEMBER","body":"@Leon-WTF Good. We can also revert the change in `WebServerConstants`. And the checkstyle failed on CI. Then, Could you please squash all the commits (rebase on master)?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/874845845/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/874853811","html_url":"https://github.com/apache/drill/pull/2225#issuecomment-874853811","issue_url":"https://api.github.com/repos/apache/drill/issues/2225","id":874853811,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NDg1MzgxMQ==","user":{"login":"Leon-WTF","id":25920008,"node_id":"MDQ6VXNlcjI1OTIwMDA4","avatar_url":"https://avatars.githubusercontent.com/u/25920008?v=4","gravatar_id":"","url":"https://api.github.com/users/Leon-WTF","html_url":"https://github.com/Leon-WTF","followers_url":"https://api.github.com/users/Leon-WTF/followers","following_url":"https://api.github.com/users/Leon-WTF/following{/other_user}","gists_url":"https://api.github.com/users/Leon-WTF/gists{/gist_id}","starred_url":"https://api.github.com/users/Leon-WTF/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Leon-WTF/subscriptions","organizations_url":"https://api.github.com/users/Leon-WTF/orgs","repos_url":"https://api.github.com/users/Leon-WTF/repos","events_url":"https://api.github.com/users/Leon-WTF/events{/privacy}","received_events_url":"https://api.github.com/users/Leon-WTF/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-06T15:20:17Z","updated_at":"2021-07-06T15:20:17Z","author_association":"CONTRIBUTOR","body":"> @Leon-WTF Good. We can also revert the change in `WebServerConstants`. And the checkstyle failed on CI. Then, Could you please squash all the commits (rebase on master)?\r\n\r\ndone, if you have no more comments, I will squash the commits after CI passed.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/874853811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/874858488","html_url":"https://github.com/apache/drill/pull/2225#issuecomment-874858488","issue_url":"https://api.github.com/repos/apache/drill/issues/2225","id":874858488,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NDg1ODQ4OA==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-06T15:26:23Z","updated_at":"2021-07-06T15:26:23Z","author_association":"MEMBER","body":"@Leon-WTF Don't forget the test, thanks.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/874858488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/875032800","html_url":"https://github.com/apache/drill/pull/2268#issuecomment-875032800","issue_url":"https://api.github.com/repos/apache/drill/issues/2268","id":875032800,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NTAzMjgwMA==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-06T19:42:33Z","updated_at":"2021-07-06T19:42:33Z","author_association":"MEMBER","body":"@oleg-zinovev It's glad to see your new contribution.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/875032800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/875319179","html_url":"https://github.com/apache/drill/pull/2268#issuecomment-875319179","issue_url":"https://api.github.com/repos/apache/drill/issues/2268","id":875319179,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NTMxOTE3OQ==","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-07T06:19:54Z","updated_at":"2021-07-07T06:19:54Z","author_association":"CONTRIBUTOR","body":"The current AGE function is completely half-baked, look at the transcript below.  A total replacement is the surely the best route and further attempts at calendar arithemetic using DateUtilities are probably inadvisable.  Can `java.time` not provide what Joda is being used for in this first version of a fix?\r\n\r\n```\r\napache drill> select age('2021-01-01', '2021-01-01');\r\n+---------------------------------+\r\n|             EXPR$0              |\r\n+---------------------------------+\r\n| 0 years 0 months 0 days 0:00:00 |\r\n+---------------------------------+\r\n1 row selected (0.179 seconds)\r\napache drill> select age('2021-02-01', '2021-01-01');\r\n+-------------------------------+\r\n|            EXPR$0             |\r\n+-------------------------------+\r\n| 0 years 1 month 1 day 0:00:00 |\r\n+-------------------------------+\r\n1 row selected (0.159 seconds)\r\napache drill> select age('2021-03-01', '2021-01-01');\r\n+---------------------------------+\r\n|             EXPR$0              |\r\n+---------------------------------+\r\n| 0 years 1 month 29 days 0:00:00 |\r\n+---------------------------------+\r\n1 row selected (0.158 seconds)\r\napache drill> select age('2022-01-01', '2021-01-01');\r\n+--------------------------------+\r\n|             EXPR$0             |\r\n+--------------------------------+\r\n| 1 year 0 months 5 days 0:00:00 |\r\n+--------------------------------+\r\n1 row selected (0.12 seconds)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/875319179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/875428440","html_url":"https://github.com/apache/drill/pull/2267#issuecomment-875428440","issue_url":"https://api.github.com/repos/apache/drill/issues/2267","id":875428440,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NTQyODQ0MA==","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-07T09:04:25Z","updated_at":"2021-07-07T09:04:25Z","author_association":"CONTRIBUTOR","body":"@luocooong I think all the builds have passed at least once now.  There is one cancelled main build reported under Checks.  Do I need to do any builds here?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/875428440/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/875481721","html_url":"https://github.com/apache/drill/pull/2267#issuecomment-875481721","issue_url":"https://api.github.com/repos/apache/drill/issues/2267","id":875481721,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NTQ4MTcyMQ==","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-07T10:18:08Z","updated_at":"2021-07-07T10:18:08Z","author_association":"MEMBER","body":"@dzamo It's time to merge. Squash all the commits for better.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/875481721/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/876376398","html_url":"https://github.com/apache/drill/pull/2225#issuecomment-876376398","issue_url":"https://api.github.com/repos/apache/drill/issues/2225","id":876376398,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NjM3NjM5OA==","user":{"login":"Leon-WTF","id":25920008,"node_id":"MDQ6VXNlcjI1OTIwMDA4","avatar_url":"https://avatars.githubusercontent.com/u/25920008?v=4","gravatar_id":"","url":"https://api.github.com/users/Leon-WTF","html_url":"https://github.com/Leon-WTF","followers_url":"https://api.github.com/users/Leon-WTF/followers","following_url":"https://api.github.com/users/Leon-WTF/following{/other_user}","gists_url":"https://api.github.com/users/Leon-WTF/gists{/gist_id}","starred_url":"https://api.github.com/users/Leon-WTF/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Leon-WTF/subscriptions","organizations_url":"https://api.github.com/users/Leon-WTF/orgs","repos_url":"https://api.github.com/users/Leon-WTF/repos","events_url":"https://api.github.com/users/Leon-WTF/events{/privacy}","received_events_url":"https://api.github.com/users/Leon-WTF/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-08T11:56:03Z","updated_at":"2021-07-08T11:56:03Z","author_association":"CONTRIBUTOR","body":"> @Leon-WTF Don't forget the test, thanks.\r\n\r\ndone","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/876376398/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/876542274","html_url":"https://github.com/apache/drill/pull/2225#issuecomment-876542274","issue_url":"https://api.github.com/repos/apache/drill/issues/2225","id":876542274,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NjU0MjI3NA==","user":{"login":"cgivre","id":5513150,"node_id":"MDQ6VXNlcjU1MTMxNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5513150?v=4","gravatar_id":"","url":"https://api.github.com/users/cgivre","html_url":"https://github.com/cgivre","followers_url":"https://api.github.com/users/cgivre/followers","following_url":"https://api.github.com/users/cgivre/following{/other_user}","gists_url":"https://api.github.com/users/cgivre/gists{/gist_id}","starred_url":"https://api.github.com/users/cgivre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgivre/subscriptions","organizations_url":"https://api.github.com/users/cgivre/orgs","repos_url":"https://api.github.com/users/cgivre/repos","events_url":"https://api.github.com/users/cgivre/events{/privacy}","received_events_url":"https://api.github.com/users/cgivre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-08T15:38:20Z","updated_at":"2021-07-08T15:38:20Z","author_association":"CONTRIBUTOR","body":"@Leon-WTF Why did you close the PR?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/876542274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/876545499","html_url":"https://github.com/apache/drill/pull/2225#issuecomment-876545499","issue_url":"https://api.github.com/repos/apache/drill/issues/2225","id":876545499,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NjU0NTQ5OQ==","user":{"login":"Leon-WTF","id":25920008,"node_id":"MDQ6VXNlcjI1OTIwMDA4","avatar_url":"https://avatars.githubusercontent.com/u/25920008?v=4","gravatar_id":"","url":"https://api.github.com/users/Leon-WTF","html_url":"https://github.com/Leon-WTF","followers_url":"https://api.github.com/users/Leon-WTF/followers","following_url":"https://api.github.com/users/Leon-WTF/following{/other_user}","gists_url":"https://api.github.com/users/Leon-WTF/gists{/gist_id}","starred_url":"https://api.github.com/users/Leon-WTF/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Leon-WTF/subscriptions","organizations_url":"https://api.github.com/users/Leon-WTF/orgs","repos_url":"https://api.github.com/users/Leon-WTF/repos","events_url":"https://api.github.com/users/Leon-WTF/events{/privacy}","received_events_url":"https://api.github.com/users/Leon-WTF/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-08T15:42:55Z","updated_at":"2021-07-08T15:42:55Z","author_association":"CONTRIBUTOR","body":"> @Leon-WTF Why did you close the PR?\r\n\r\nsomething wrong with git, i'am trying to fix it.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/876545499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/876554369","html_url":"https://github.com/apache/drill/pull/2225#issuecomment-876554369","issue_url":"https://api.github.com/repos/apache/drill/issues/2225","id":876554369,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NjU1NDM2OQ==","user":{"login":"Leon-WTF","id":25920008,"node_id":"MDQ6VXNlcjI1OTIwMDA4","avatar_url":"https://avatars.githubusercontent.com/u/25920008?v=4","gravatar_id":"","url":"https://api.github.com/users/Leon-WTF","html_url":"https://github.com/Leon-WTF","followers_url":"https://api.github.com/users/Leon-WTF/followers","following_url":"https://api.github.com/users/Leon-WTF/following{/other_user}","gists_url":"https://api.github.com/users/Leon-WTF/gists{/gist_id}","starred_url":"https://api.github.com/users/Leon-WTF/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Leon-WTF/subscriptions","organizations_url":"https://api.github.com/users/Leon-WTF/orgs","repos_url":"https://api.github.com/users/Leon-WTF/repos","events_url":"https://api.github.com/users/Leon-WTF/events{/privacy}","received_events_url":"https://api.github.com/users/Leon-WTF/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-08T15:54:47Z","updated_at":"2021-07-08T15:54:47Z","author_association":"CONTRIBUTOR","body":"> @Leon-WTF Why did you close the PR?\r\n\r\nthis PR close automaticlly when I reset this branch to master, I re-commit the changes to this branch, could you please help to re-open this PR? thanks","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/876554369/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/877118634","html_url":"https://github.com/apache/drill/pull/2270#issuecomment-877118634","issue_url":"https://api.github.com/repos/apache/drill/issues/2270","id":877118634,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NzExODYzNA==","user":{"login":"cgivre","id":5513150,"node_id":"MDQ6VXNlcjU1MTMxNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5513150?v=4","gravatar_id":"","url":"https://api.github.com/users/cgivre","html_url":"https://github.com/cgivre","followers_url":"https://api.github.com/users/cgivre/followers","following_url":"https://api.github.com/users/cgivre/following{/other_user}","gists_url":"https://api.github.com/users/cgivre/gists{/gist_id}","starred_url":"https://api.github.com/users/cgivre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgivre/subscriptions","organizations_url":"https://api.github.com/users/cgivre/orgs","repos_url":"https://api.github.com/users/cgivre/repos","events_url":"https://api.github.com/users/cgivre/events{/privacy}","received_events_url":"https://api.github.com/users/cgivre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-09T11:28:50Z","updated_at":"2021-07-09T11:28:50Z","author_association":"CONTRIBUTOR","body":"@jfmario, @jaltekruse, @Daddykong,   \r\nCould one of you take a look at this PR and see what you think?    Thanks!!","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/877118634/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/877337490","html_url":"https://github.com/apache/drill/pull/2268#issuecomment-877337490","issue_url":"https://api.github.com/repos/apache/drill/issues/2268","id":877337490,"node_id":"MDEyOklzc3VlQ29tbWVudDg3NzMzNzQ5MA==","user":{"login":"oleg-zinovev","id":17238766,"node_id":"MDQ6VXNlcjE3MjM4NzY2","avatar_url":"https://avatars.githubusercontent.com/u/17238766?v=4","gravatar_id":"","url":"https://api.github.com/users/oleg-zinovev","html_url":"https://github.com/oleg-zinovev","followers_url":"https://api.github.com/users/oleg-zinovev/followers","following_url":"https://api.github.com/users/oleg-zinovev/following{/other_user}","gists_url":"https://api.github.com/users/oleg-zinovev/gists{/gist_id}","starred_url":"https://api.github.com/users/oleg-zinovev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oleg-zinovev/subscriptions","organizations_url":"https://api.github.com/users/oleg-zinovev/orgs","repos_url":"https://api.github.com/users/oleg-zinovev/repos","events_url":"https://api.github.com/users/oleg-zinovev/events{/privacy}","received_events_url":"https://api.github.com/users/oleg-zinovev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-09T17:19:10Z","updated_at":"2021-07-09T17:24:26Z","author_association":"CONTRIBUTOR","body":"@paul-rogers @dzamo \r\nIt looks like I managed to implement the function using the Java Time API. But it seems to me that this solution looks much worse than the previous one.\r\n\r\nYou can compare the code yourself by comparing the commits included in PR","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/877337490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/877870693","html_url":"https://github.com/apache/drill/pull/2251#issuecomment-877870693","issue_url":"https://api.github.com/repos/apache/drill/issues/2251","id":877870693,"node_id":"MDEyOklzc3VlQ29tbWVudDg3Nzg3MDY5Mw==","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-11T22:30:42Z","updated_at":"2021-07-11T22:30:42Z","author_association":"CONTRIBUTOR","body":"This one is difficult. We are reviewing code under time pressure when the design itself raises many questions. Let's start with the design. First, it is too short, it leaves many issues unspecified. So, I have to infer them from reviewing the code. As noted before, the storage plugin registry is complex; so having to reverse-engineer a design at the code level makes the process slower than it might otherwise be.\r\n\r\nThis PR adds two separate features: a new options level and changes to the plugin registry. Since these are independent concepts, they should appear as separate PRs: one for the options, another for plugins. That will reduce the cognitive load on us poor reviewers.\r\n\r\nSo, the design of options:\r\n\r\n> But it appears different users have the common Storage Plugins and System Options.\r\n> * There is no possibility for Drillbit configuring individually for every user and persistent between sessions (Note: SessionOptions are removed after closing session)\r\n\r\nThe above is by design. **System** options are just that: options for the system. They are meant to be set by the administrator to control the Drill cluster as a whole. Drill also has *Session* options: these are per user session. If we want per-user option settings, then we need a new level: *User* options.\r\n\r\nOptions form a hierarchy. At present that hierarchy, from most to least specific, is:\r\n\r\n* Per-query options *or* session options\r\n* System options\r\n* Options configured in the Drill config system.\r\n\r\nIt sounds like you want to add a new layer: user options:\r\n\r\n* Per-query options **or**\r\n  * Session option\r\n  * Per-user option\r\n* System options...\r\n\r\nSuppose we have per-user system options: I set my queue length to 10 items, you set your queue length to 100 items. But, the queue is a global resource: which is used? This is just one example of how intractable \"per-user system options\" is as a concept. So, we need actual user options.\r\n\r\nOne obvious choice is simply to persist the session options. I login and change `foo` to 10. Drill simply persists that change so that next time I log in, `foo` is 10. Easy, but is that the right answer? Drill has a serious flaw that the behavior of any query depends on options: JSON modes, all-text mode and so on. That was done as a quick and dirty short-term solution to ship the product, but is still with us and still causing issues. If I set an option to \"all text mode\", and run my query, I get a result. If I share that query with you, but you don't set the all-text option, the query will produce different results (or, probably, fail.)\r\n\r\nSo, to \"fix\" options, we need to push those options into the query (with hints, say), or we need options associated with a query, as having per-user options won't solve the \"options associated with a query\" problem.\r\n\r\nSo, we probably do not want to just persist session options as they are used to control specific queries. Instead, we'd want to add a new system: `SET USER OPTION ...` so that the hierarchy is as above.\r\n\r\nThe design is silent on many important questions:\r\n\r\n* What is the new hierarchy?\r\n* How does *the* (not an) administrator set truly-global options if all users can set their own?\r\n* How does the user set, review and clear the user options?\r\n* Suppose a user is logged in twice. In session 1 they change `foo` to 10. Do we expect session 2 (on a different Drillbit) to see that change? This is a **very** difficult concurrency question. Of course they do. But, when? In the middle of query planning? At the start of the next SQL statement? After a time period? Only at the next login? If concurrently, how will one Drillbit track changes made to the user options by another Drillbit? How can the use a \"force resync\" to keep options synchronized?\r\n* Can the admin see the per-user options? If so, how? `SHOW OPTIONS FOR USER 'bob'`? Remember, the admin is tasked with policing the system, they **must** be able to see all options.\r\n* How do we solve the current ambiguity of true system options (the query queuing options mentioned above) vs. user/session options? At present, the solution is ad-hoc and we just trust that most options are not changed. If a naive user can change any option, we've got issues. Do we need a permissions table to say which users can change which options? (And, categorize true system options as read-only at the user and session levels.)\r\n* You will need `USER` version of all of the option commands.\r\n* You will need complete tests that demonstrate that the hierarchy works as expected.\r\n\r\nThe good news is that, in terms of implementation, Drill's option system is already hierarchical, so adding a new layer should be very easy.\r\n\r\nAll of this is complex. It should be done as its own PR along with a *detailed* design.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/877870693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/877884101","html_url":"https://github.com/apache/drill/pull/2251#issuecomment-877884101","issue_url":"https://api.github.com/repos/apache/drill/issues/2251","id":877884101,"node_id":"MDEyOklzc3VlQ29tbWVudDg3Nzg4NDEwMQ==","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-12T00:07:03Z","updated_at":"2021-07-12T00:07:03Z","author_association":"CONTRIBUTOR","body":"Let's now move onto the primary topic of this PR: plugins. Again, this is a complex topic, especially if we think about how the solution would work at scale. I'm afraid that, since the design is so sparse and leaves out many details, that we're perhaps going down the wrong path. Let's take each topic in turn so we can see what's what.\r\n\r\nFirst, what is the structure we want? To answer this we need to separate the *code* (Java libraries, which I'll call a \"connector\", following Presto) and *configs* (the JSON things that users see, what we normally mean when we say \"plugin\".)\r\n\r\nDrill will only ever work with a fixed set of connectors: those available on the class path at runtime. AFAIK, there has never been interest in adding connectors at runtime (no \"dynamic connectors\") and, for security reasons, I'm not sure that doing so would even be a good idea.\r\n\r\nConnectors are presently used by any number of configs. And, every query creates an instance of the objects in the connector (the readers, the planner objects, etc.) So, the structure we have is:\r\n\r\n* Config (a JSON object in the persistent store)\r\n* Connector (a library)\r\n  * Plugin (an instance of the plugin class from a connector, along with its config.)\r\n    * Readers, planner objects, created per-query from a plugin\r\n\r\nThe plugin registry binds connectors to configs to produce plugins (where by \"plugin\" I mean an instance of the plugin class initialized with a config.) This is some mighty complex code! It has to deal with a bunch of distributed system and concurrency-related issues. I'll omit the details for now.\r\n\r\nSo, what does this mean? For one, it means we only need *one* copy of the connector. The \"new\" plugin registry is designed to handle this idea. My \"class path plugin\" and your \"class path plugin\" use the same plugin library. I'll assume that the answer above, that each user has their own copy of the code, represents a misunderstanding because of Drill's horribly ambiguous names in this area.\r\n\r\nNext, the plugin registry holds two kinds of \"plugins\". First are those configured in the UI and that can be resolved in queries. Familiar things like `cp`, `dfs` and so on. Second are ad-hoc plugins: those created on-the-fly based on table properties in a query, or plugin properties passed along in a query definition. This is done so that queries work even if, right after planning completes, someone deletes or changes the stored config: the next query sees the new config, the executing query uses the config stored in the query. (Else, disaster would result when some Drillbits see one config, others another.)\r\n\r\nThere is a system plugin that offers the system tables. This one is meant to be shared by all users. It has no config options, but if it did, they would be set at the system level by the admin. It makes no sense for each user to have their own copy. (It might make sense to disallow certain system tables for some users, but that is a different question.)\r\n\r\nNow we have the \"regular\" configured plugins: a JSON config and an associated plugin instance. The goal here is to define a new level so that individual users have these items.\r\n\r\nFirst, I'll question if the requirements are correct. Do we really want plugins associated with each user? If you and I both use tale \"foo\", do I have to ask you to send me your JSON so I can create a new copy? What if you change something? What if we have 100s of users all with copies? Making copies is a \"demo only\" feature, it does not scale in production. Remember: reuse by copy and paste is for amateurs who will throw away their solution, not for professionals who want to minimize total costs.\r\n\r\nLet's think of a use case. A firm has five departments with 10 people per department. Some people in one department can see some data in another. For example, the VP of marketing is allowed to see Sales and Dev data. The CFO can see everything. Oh, and the employees change regularly.\r\n\r\nThis is not a new idea. How do other tools handle this? Oracle? SQLServer? They operate at the level of schemas (databases) and tables. So, think of a plugin (config in storage, config + connector at runtime) as a shared, named object.\r\n\r\nSo, what we want are groups of plugins. \"Marketing\", \"Sales\", \"Ops\". Within each are the configs for that set of tables. Users can be given permissions on the whole group, or on individual plugins. Administrators or DBAs (those who understand production systems) set up the configs. Users use those to which they are given permission. Or, if we want to be cheap, we have a huge global name space of plugins, and require all names to be globally unique, but you can only see those to which you have been given permission. (How will this work with 100 plugins and 1000 users? That results in 10,000 distinct permissions to maintain.)\r\n\r\nUsers might want to create their own, individual configs not meant to be shared. Fine. Have a \"user\" group that holds configs for just that user. If I want to promote my new \"foo\" config, I ask an Admin to add it to the \"Dev\" group so you can see it.\r\n\r\nIf the above is roughly in the ball park, we'd want to work out the details in a detailed design. There are likely a dozen \"gotchas\" that the above omitted. Who removes configs for users no longer with the organization? What connectors is a user allowed to create configs for? How can the admin see all configs to police users or track down odd behavior \"some user did something silly that puts huge load on an external system\"? \r\n\r\nThink of security: who decides who gets permission on what? Is it done manually? With what UI? How does that work in an organization of 10 people? 100? 1000? Since we are dealing with permissions based on roles (role-based security), can/should we tie onto the corporate LDAP or similar system? What is the API for that?\r\n\r\nConfigs should hold security keys, but those should not be in JSON, stored in the persistent store. (Drill has *always* done this wrong for systems other than MFS; another reason Drill fails in production.) How are configs connected with a \"vault\" to get keys, passwords, tickets and the like at runtime? On S3, the use of temporary tokens is the right way to do permissions, no one gives away S3 keys any more. So, how does a plugin obtain and refresh its S3 token?\r\n\r\nThese are hard topics. Thanks for taking on this big challenge! Suggestion: pick a small subset to start with, but ensure that subset allows us to add the pieces needed when the solution moves into production.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/877884101/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/878090634","html_url":"https://github.com/apache/drill/pull/2268#issuecomment-878090634","issue_url":"https://api.github.com/repos/apache/drill/issues/2268","id":878090634,"node_id":"MDEyOklzc3VlQ29tbWVudDg3ODA5MDYzNA==","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-12T08:44:03Z","updated_at":"2021-07-12T08:44:03Z","author_association":"CONTRIBUTOR","body":"@oleg-zinovev thanks for adapting your solution to java.time.  I agree that the API it offers for this problem looks like a downgrade but there is already an initiative in Drill to migrate from Joda to java.time, as Joda warns us that we should.  There are some other issues I can see.  There is a @Workspace variable being used but 1) it's not a Holder type and 2) this is a simple function not an aggregate function.  I'm going to pull your PR branch down to my machine to look more closely at this so we can get this important fix merged.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/878090634/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/878269379","html_url":"https://github.com/apache/drill/pull/2268#issuecomment-878269379","issue_url":"https://api.github.com/repos/apache/drill/issues/2268","id":878269379,"node_id":"MDEyOklzc3VlQ29tbWVudDg3ODI2OTM3OQ==","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-12T13:14:40Z","updated_at":"2021-07-12T13:14:40Z","author_association":"CONTRIBUTOR","body":"~There is a @Workspace variable being used but 1) it's not a Holder type and 2) this is a simple function not an aggregate function~.  I see these concerns only apply to aggregate functions, please disregard.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/878269379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/879480858","html_url":"https://github.com/apache/drill/pull/2251#issuecomment-879480858","issue_url":"https://api.github.com/repos/apache/drill/issues/2251","id":879480858,"node_id":"MDEyOklzc3VlQ29tbWVudDg3OTQ4MDg1OA==","user":{"login":"vdiravka","id":11904420,"node_id":"MDQ6VXNlcjExOTA0NDIw","avatar_url":"https://avatars.githubusercontent.com/u/11904420?v=4","gravatar_id":"","url":"https://api.github.com/users/vdiravka","html_url":"https://github.com/vdiravka","followers_url":"https://api.github.com/users/vdiravka/followers","following_url":"https://api.github.com/users/vdiravka/following{/other_user}","gists_url":"https://api.github.com/users/vdiravka/gists{/gist_id}","starred_url":"https://api.github.com/users/vdiravka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdiravka/subscriptions","organizations_url":"https://api.github.com/users/vdiravka/orgs","repos_url":"https://api.github.com/users/vdiravka/repos","events_url":"https://api.github.com/users/vdiravka/events{/privacy}","received_events_url":"https://api.github.com/users/vdiravka/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-14T00:00:48Z","updated_at":"2021-07-14T00:00:48Z","author_association":"MEMBER","body":"Hi @paul-rogers,\r\n\r\nI started design for system options from adding the new additional layer. But this approach is much more complex and we should cover all the cases you described.\r\nThe design for the feature proposed by me is other: we just don't use global system options at all (in case `separate_workspace` is enabled). Every user has it's own system options. It gives a great functionality, which drill required for a long time, I think. We used session options for this purpose, but it can't be serialized. I also abandon the idea to Store Session options for the same reason, it has other concept and couples with a Query.\r\n\r\nAbout plugins the same thing, I tried to keep things as simple as it is possible (it corresponds to your last sentence).\r\n* I agree we can factor out system plugins and use that shared plugins for all users. It is minor improvement, it allows to keep less things in memory. This is not a blocker for this PR. I will create a ticket and proceed working on it after finishing this PR.\r\n* Also I agree with it is nice to have Group/Organization level of plugins and `System Options`. I noted about it in Design document. But it is much more complex improvement, requires introducing a lot of new rules and grants. I thought to consider working on it after finishing on this PR. Because now separate plugins and options can provide all things needed for users, but setting up is not so comfortable as it can be with Group/Organization level of these instances. And there are more similar instances are placed in memory now (separate instances for Groups/Organizations will improve this too)\r\n* About concurrency and distributed systems issues, they are all the same as it is now. Since event now one user can run query and other can edit the plugin config. Now the picture is even better, since two user can't sue common plugins registry or system options. Whey their own ones. They don't impact each other.\r\n\r\nAbout dividing the PR I also thought about it initially, because leverage of System Options is other than plugins, so a lot of things for options is other. But options and plugins are combined with a common idea - to have the separate workspace for users: plugin configs, system options and to see their own query profiles only. And the approach for implementation is very similar - to replace the global instances with their own user-session ones.\r\nSo I can here to divide the PR in two parts or just in two commits for easier review. But I think we can also go with one PR and commit.\r\n\r\nSo let me know do you like the above approach for this feature with a two (or more) further improvements or possibly you want to bring mail discussion on this topic with other devs?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/879480858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/881151197","html_url":"https://github.com/apache/drill/pull/2251#issuecomment-881151197","issue_url":"https://api.github.com/repos/apache/drill/issues/2251","id":881151197,"node_id":"IC_kwDOAFa5xc40hUzd","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-16T03:34:17Z","updated_at":"2021-07-16T03:34:17Z","author_association":"CONTRIBUTOR","body":"Hi @vdiravka,\r\n\r\nThanks for the note, you make good points. Let's see where we can compromise. Let's start with options.\r\n\r\nIt makes no sense for users to have their own system options (my favorite example is the length of the global, shared query queue.) So, `SYSTEM` options can't be per-user. This means that the `SYSTEM` level has to remain as it is. We can cut corners: still allow users to change system options, we just ignore those values. (For example, IIRC, the query queue, the value is taken from the `SYSTEM` options; we ignore `SESSION` values.) That is, we just trust that user ignorance will prevent them from breaking things; they won't know about the system options.\r\n\r\nIf we have any form of user-property persistence, then we have to worry about race conditions. I don't see how we can ignore that issue unless we are strict and we say that user options are read once: when the user starts a session. If I change `all-text-mode` in session 1, it will not affect session 2. This seems reasonable for the \"toy\" use cases where Drill is now used.\r\n\r\nThat is, when a session starts, we set the session options to the saved per-user values from the persistent store. A nice result is that, at runtime, there is no difference between user and session options. This fact should save some work.\r\n\r\nThe user has to be able to set the user options. We don't need a new option level. Simply add a new statement: `ALTER USER SET <name>=<value>`. This would do two things:\r\n\r\n1. Write the given key/value pair into the persistent store for the user.\r\n2. Change the session option in the current session to that new value.\r\n\r\nAgain, we let the user change anything they want; we rely on the fact that users will only care about one or two options, and only when someone suggests a change.\r\n\r\nThe above is simple, but limited. The limits are no worse than today. It seems we could extend the feature in the future without breaking anything. (For example, broadcast user option changes to all sessions. Apply security to system options. Etc.)\r\n\r\nThen, we simply ignore the issue that the options users care about are associated with queries (all the Parquet, JSON, and other options that affect reader behavior.) We simply decide to be surprised when the user encounters those issues. User: \"Gee, I set the `all-text-mode` option and my queries run file. But, when Bob runs them, they fail...\". Our answer: \"have Bob change the same option\" This may break Bob's own queries, so we have Bob change the option back. This is a horrible user experience, but is the same as what Drill offers today, so we're not breaking anything.\r\n\r\nWill this work?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/881151197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/881155695","html_url":"https://github.com/apache/drill/pull/2251#issuecomment-881155695","issue_url":"https://api.github.com/repos/apache/drill/issues/2251","id":881155695,"node_id":"IC_kwDOAFa5xc40hV5v","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-16T03:50:12Z","updated_at":"2021-07-16T03:50:12Z","author_association":"CONTRIBUTOR","body":"Next, let's discuss plugins. Let's start with three goals:\r\n\r\n1. System plugins work for everyone (we can add security later).\r\n2. By default, plugins are available to everyone. That is, the Drill out-of-the-box plugins are available so that, say, `cp` works and people can try examples from the documentation.\r\n3. There is an optional way to create per-user plugin (configs).\r\n\r\nWhat is the simplest way to do this? Maybe by changing the plugin resolution rules. When the planner looks for a plugin, it tries two names: `$$<user>$$<plugin>` and `<plugin>`. We use the resulting name in the query plan. So, if I have (unwisely) created my own `cp` plugin, when I ask for `cp`, that's what I get:  `$$paul$$cp`. If I do not have my own `dfs`, then when I ask for it, I get the (global) `dfs`. (The `$$<user>$$` is something I just made up; it can be anything as long as the marker is not likely to ever appear in a real plugin name. Maybe `..<user>..` or `\\<user>\\` would be better since they are not legal SQL.)\r\n\r\nWhen a user stores a plugin, and the per-user config feature is enabled, then the UI appends the user prefix. The UI filters out all plugins owned by other users. When the admin works with plugins, there is no prefix. This allows the admin to see, and change, both `cp` and `$$paul$$cp`. If I leave the organization, the admin can remove all the `$$paul$$...` plugins.\r\n\r\nI suspect you'll find that, with this solution, *no* change is needed in the plugin registry. Plans will resolve to the correct reader configs. The reader configs in the query plan will just work (as they would in your design.)\r\n\r\nHow does this help sharing? Simply ask the admin to change the name of the plugin from `$$paul$$whizbang` to just `whizbang`. Now, everyone can see it and my queries work without change. Super simple. We have only two security levels (everyone or single user), but that is **far** better than reuse by copy/paste. The design could be extended to the role-based one without breaking anything.\r\n\r\nThe next step is store the per-user plugins in separate persistent stores. This is the \"cleaner\" design, but now you have to create the means for an admin to see, change, and remove the user-level plugins. You also have to extend the plugin registry, which is, as we noted, a complex beast. Any change requires *extensive* unit tests.\r\n\r\nBy the way, when I revised the plugin registry a while back, I fixed dozens of bugs. Most were simply because I added tests and found all kinds of broken stuff. Concurrency was broken, upgrades were broken, expiring of old plugins was broken. and so on. I still have scars. So, I'm trying to save you from similar pain.\r\n\r\nWill something like this work and avoid the hard work we discussed earlier?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/881155695/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/881179890","html_url":"https://github.com/apache/drill/pull/2251#issuecomment-881179890","issue_url":"https://api.github.com/repos/apache/drill/issues/2251","id":881179890,"node_id":"IC_kwDOAFa5xc40hbzy","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-16T05:05:56Z","updated_at":"2021-07-16T05:05:56Z","author_association":"CONTRIBUTOR","body":"One more thought: it is not clear from the PR or design document *why* you need these changes, so I'm having to guess. I may be guessing wrong. Can you spell out the use case?\r\n\r\nFor example, I could imagine that you need the persistent user options because you want to use the REST API, and that API does not have a persistent session, so options don't persist. As it turns out, someone kindly recently added the ability to pass along options on each query request. This is, in fact, how Impala works to avoid the need for session state. So, you can achieve the same result by keeping options on the client.\r\n\r\nOr, you can achieve the same result by adding a session concept to the REST API. Log in and get a session token back. Send that token on subsequent requests to identify the user and to key to a cached session object. The session ends after a timeout or on an explicit logout call.\r\n\r\nIf the per-user plugins are to allow multi-tenant operation, then the problem is considerably more complex as much of Drill is not designed for that. (You'd want to secure query profiles, police resource usage, etc.) If it is to allow different users in the same organization to define their own plugins, then you have the sharing issue we discussed.\r\n\r\nIn short, if you can explain your goals, we can perhaps help you find a workable solution that achieves the goals. Without knowing the goals, then I'm free to make up my own understanding of what you want...","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/881179890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/881235096","html_url":"https://github.com/apache/drill/pull/2275#issuecomment-881235096","issue_url":"https://api.github.com/repos/apache/drill/issues/2275","id":881235096,"node_id":"IC_kwDOAFa5xc40hpSY","user":{"login":"vvysotskyi","id":20928429,"node_id":"MDQ6VXNlcjIwOTI4NDI5","avatar_url":"https://avatars.githubusercontent.com/u/20928429?v=4","gravatar_id":"","url":"https://api.github.com/users/vvysotskyi","html_url":"https://github.com/vvysotskyi","followers_url":"https://api.github.com/users/vvysotskyi/followers","following_url":"https://api.github.com/users/vvysotskyi/following{/other_user}","gists_url":"https://api.github.com/users/vvysotskyi/gists{/gist_id}","starred_url":"https://api.github.com/users/vvysotskyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vvysotskyi/subscriptions","organizations_url":"https://api.github.com/users/vvysotskyi/orgs","repos_url":"https://api.github.com/users/vvysotskyi/repos","events_url":"https://api.github.com/users/vvysotskyi/events{/privacy}","received_events_url":"https://api.github.com/users/vvysotskyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-16T07:22:25Z","updated_at":"2021-07-16T07:22:25Z","author_association":"MEMBER","body":"@paul-rogers, thanks for the review!\r\nThese plugins should be of different types to reproduce the issue, for example, JDBC and Elasticsearch, or JDBC and Cassandra, so it is a problem for adding end-to-end test since we don't have a module with several plugin dependencies.\r\n\r\nRegarding updated rules, the main change is in its constructor, now it has the `RelOptRuleOperand` that controls conventions of the rel nodes, but it is slightly problematic to create all required instances for checking whether the rule would or wouldn't match the specific rel node.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/881235096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/881314920","html_url":"https://github.com/apache/drill/pull/2276#issuecomment-881314920","issue_url":"https://api.github.com/repos/apache/drill/issues/2276","id":881314920,"node_id":"IC_kwDOAFa5xc40h8xo","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-16T09:37:20Z","updated_at":"2021-07-16T09:37:20Z","author_association":"MEMBER","body":"@gauravgahlot299 Thank you for updated the docs.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/881314920/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/882132363","html_url":"https://github.com/apache/drill/pull/2275#issuecomment-882132363","issue_url":"https://api.github.com/repos/apache/drill/issues/2275","id":882132363,"node_id":"IC_kwDOAFa5xc40lEWL","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-18T23:29:19Z","updated_at":"2021-07-18T23:29:19Z","author_association":"CONTRIBUTOR","body":"@vvysotskyi, as it turns out, it is easy to create a \"dummy\" plugin for such cases. In fact, we have some. The \"Mock\" storage plugin (which is actually rather complex, because it also generates data). Another is this [super simple](https://github.com/apache/drill/blob/master/exec/java-exec/src/test/java/org/apache/drill/exec/store/BasePluginRegistryTest.java#L116) one.\r\n\r\nWhat you may mean is that we don't have multiple plugins which we can use in an exec unit test, that need the rules which you are modifying. This does, indeed, make this kind of problem very hard to debug, and very hard to test. It also makes it very hard for anyone in the future to avoid breaking things.\r\n\r\nDrill does not have \"integration\" tests, but it could: tests that are run after all plugins are created so the tests have visibility to the entire system. Presumably each plugin has some way to test itself (creates a test DB or whatever.) So, the integration test could use these features to set up two plugins. Very heavy-weight, and very hard to debug (still have to build everything.)\r\n\r\nPoint is: we do want to have tests so that people can confidently modify the code knowing that tests will catch any mistakes. How can we test fixes such as this?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/882132363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/882272366","html_url":"https://github.com/apache/drill/pull/2268#issuecomment-882272366","issue_url":"https://api.github.com/repos/apache/drill/issues/2268","id":882272366,"node_id":"IC_kwDOAFa5xc40lmhu","user":{"login":"oleg-zinovev","id":17238766,"node_id":"MDQ6VXNlcjE3MjM4NzY2","avatar_url":"https://avatars.githubusercontent.com/u/17238766?v=4","gravatar_id":"","url":"https://api.github.com/users/oleg-zinovev","html_url":"https://github.com/oleg-zinovev","followers_url":"https://api.github.com/users/oleg-zinovev/followers","following_url":"https://api.github.com/users/oleg-zinovev/following{/other_user}","gists_url":"https://api.github.com/users/oleg-zinovev/gists{/gist_id}","starred_url":"https://api.github.com/users/oleg-zinovev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oleg-zinovev/subscriptions","organizations_url":"https://api.github.com/users/oleg-zinovev/orgs","repos_url":"https://api.github.com/users/oleg-zinovev/repos","events_url":"https://api.github.com/users/oleg-zinovev/events{/privacy}","received_events_url":"https://api.github.com/users/oleg-zinovev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-19T06:19:05Z","updated_at":"2021-07-19T06:19:42Z","author_association":"CONTRIBUTOR","body":"@paul-rogers \r\nI would like to clarify the use of the user's timezone.\r\n\r\n1) Functions to convert time stamp from string and back use UTC time zone\r\n2) TimeStampAccessor uses UTC timezone\r\n3) QueryContextInformation#queryStartTime is filled with value obtained from System#currentTimeMillis. \r\nThis method returns a timestamp in UTC timezone (aka UNIX timestamp) (https://docs.oracle.com/javase/7/docs/api/java/lang/System.html#currentTimeMillis())\r\n\r\nWhat timezone should I use in the age function?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/882272366/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/882856859","html_url":"https://github.com/apache/drill/pull/2251#issuecomment-882856859","issue_url":"https://api.github.com/repos/apache/drill/issues/2251","id":882856859,"node_id":"IC_kwDOAFa5xc40n1Ob","user":{"login":"vdiravka","id":11904420,"node_id":"MDQ6VXNlcjExOTA0NDIw","avatar_url":"https://avatars.githubusercontent.com/u/11904420?v=4","gravatar_id":"","url":"https://api.github.com/users/vdiravka","html_url":"https://github.com/vdiravka","followers_url":"https://api.github.com/users/vdiravka/followers","following_url":"https://api.github.com/users/vdiravka/following{/other_user}","gists_url":"https://api.github.com/users/vdiravka/gists{/gist_id}","starred_url":"https://api.github.com/users/vdiravka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdiravka/subscriptions","organizations_url":"https://api.github.com/users/vdiravka/orgs","repos_url":"https://api.github.com/users/vdiravka/repos","events_url":"https://api.github.com/users/vdiravka/events{/privacy}","received_events_url":"https://api.github.com/users/vdiravka/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-19T21:03:00Z","updated_at":"2021-07-19T21:03:00Z","author_association":"MEMBER","body":"* **Motivation:**\r\n\r\nThe goal is to allow multi-tenant operations. So it doesn't matter what API user uses: REST, JDBC ot ODBC. This is true that Drill initially wasn't designed for that, but we ca add it.\r\n\r\n* **Options:** \r\n> The user has to be able to set the user options. We don't need a new option level. Simply add a new statement: ALTER USER > SET <name>=<value>. This would do two things:\r\n> Write the given key/value pair into the persistent store for the user.\r\n> Change the session option in the current session to that new value.\r\n\r\nThis is also questionable, because it breaks `SessionOptionManager extends InMemoryOptionManager`:\r\n```\r\nThis is an OptionManager that holds options in memory rather than in a persistent store. Options stored in \r\nSessionOptionManager, QueryOptionManager, and FragmentOptionManager are held in memory \r\n(see options) whereas the SystemOptionManager stores options in a persistent store.\r\n```\r\nMost likely all easy ways here are some sort of hacks. So let's do that in correct manner: adding the new `UserOptionManager` as a layer between `SystemOptionManager` and `SessionOptionManager`.\r\n\r\n> The next step is store the per-user plugins in separate persistent stores. This is the \"cleaner\" design, but now you have to \r\n> create the means for an admin to see, change, and remove the user-level plugins. You also have to extend the plugin registry, > which is, as we noted, a complex beast. Any change requires extensive unit tests.\r\n\r\nDifferent PS can be chosen per Drill doc. This is independent from Plugins. We have `HBasePersistentStore`, `InMemoryStore`, `LocalPersistentStore`, `MongoPersistentStore`, `NoWriteLocalStore`, `ZookeeperPersistentStore` implementations for PS.\r\nIf you mean different instances of the same`PS`, that is not needed. PSRegistry is just a code, which allows to access actual PS. We can manage access via the common PSRegistry. Or we can reconsider it in future.\r\n\r\n*  **Plugins:**\r\n\r\nAbout plugins it makes sense to add Global plugins and to use it in case User plugin is absent. It's like a plugins fallback.\r\nAnd system plugins can be used only in scope of Global plugins. I don't think user name in schema is a nice and elegant solution. I think plugins fallback is simpler and more convenient approach.\r\n\r\n* **Conclusion:**\r\n\r\nSo I am going to add this functionality to current implementation and separate out `user options` part of this PR into the new one.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/882856859/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/883730995","html_url":"https://github.com/apache/drill/pull/2275#issuecomment-883730995","issue_url":"https://api.github.com/repos/apache/drill/issues/2275","id":883730995,"node_id":"IC_kwDOAFa5xc40rKoz","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-20T21:51:13Z","updated_at":"2021-07-20T21:51:13Z","author_association":"CONTRIBUTOR","body":"Another thought. In years past, cases such as this were handled by the separate [Drill test framework](https://github.com/mapr/drill-test-framework) which was run before each release. The framework had visibility to all of Drill and a number of data sources as well. For this bug, it might be easier to add a test to that framework -- if we had a way to run the thing.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/883730995/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/885680635","html_url":"https://github.com/apache/drill/pull/2277#issuecomment-885680635","issue_url":"https://api.github.com/repos/apache/drill/issues/2277","id":885680635,"node_id":"IC_kwDOAFa5xc40ymn7","user":{"login":"kingswanwho","id":15710469,"node_id":"MDQ6VXNlcjE1NzEwNDY5","avatar_url":"https://avatars.githubusercontent.com/u/15710469?v=4","gravatar_id":"","url":"https://api.github.com/users/kingswanwho","html_url":"https://github.com/kingswanwho","followers_url":"https://api.github.com/users/kingswanwho/followers","following_url":"https://api.github.com/users/kingswanwho/following{/other_user}","gists_url":"https://api.github.com/users/kingswanwho/gists{/gist_id}","starred_url":"https://api.github.com/users/kingswanwho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kingswanwho/subscriptions","organizations_url":"https://api.github.com/users/kingswanwho/orgs","repos_url":"https://api.github.com/users/kingswanwho/repos","events_url":"https://api.github.com/users/kingswanwho/events{/privacy}","received_events_url":"https://api.github.com/users/kingswanwho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-23T14:30:47Z","updated_at":"2021-07-23T14:30:47Z","author_association":"CONTRIBUTOR","body":"All issues @luocooong mentioned, has been resolved","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/885680635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/885702320","html_url":"https://github.com/apache/drill/pull/2268#issuecomment-885702320","issue_url":"https://api.github.com/repos/apache/drill/issues/2268","id":885702320,"node_id":"IC_kwDOAFa5xc40yr6w","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-23T15:03:08Z","updated_at":"2021-07-23T17:06:05Z","author_association":"CONTRIBUTOR","body":"For my part, I'm inclined to agree that we're now okay fetching the query start time from ContextInfo like you're doing @oleg-zinovev .  The existing utility method `DateTypeFunctions.getQueryStartDate` follows the same route.\r\n\r\nNext, I will share what I've found out trying to clarify your time zone questions.  In Drill, `DATE` and `TIMESTAMP` are zoneless (a.k.a. \"naive\") times that are implicitly regarded as being in whatever time zone is set by the parameter `user.timezone`, which defaults to the time zone of the local machine.  You can set `user.timezone=UTC` and then everything does happen in UTC.\r\n\r\nBut Drill's _internal representation_ of these zoneless times, which you're encountering, is a different story.  From what I can see it was decided to use UNIX times internally, and doing that requires the specification of absolute time, not just an ambiguous zoneless time.  So the zoneless times coming in from the outside world, e.g. when I do `select cast('2021-07-23 01:23:45' as timestamp)` had to be coerced to _some_ timezone and it didn't matter which one, provided the choice was consistent throughout the codebase including using same time zone when they did the reverse operation and go from UNIX time back to a zoneless `TIMESTAMP`.\r\n\r\nSo here we are.  You're using the UTC timezone when you work with `left.value` and `right.value` and I think that's right.  But I think that, as @paul-rogers says, the query start time you get from the ContextInfo should be taken to be in the local time zone.  You can test this part quite easily if we agree that the following query should return an interval of 0s, including when it's run on Drillbits that are not in UTC...\r\n\r\n```sql\r\nselect age(current_date);\r\n```\r\nI ran it with your branch now and I got a number of hours equal to my timezone offset (2).","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/885702320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/885808346","html_url":"https://github.com/apache/drill/pull/2275#issuecomment-885808346","issue_url":"https://api.github.com/repos/apache/drill/issues/2275","id":885808346,"node_id":"IC_kwDOAFa5xc40zFza","user":{"login":"vvysotskyi","id":20928429,"node_id":"MDQ6VXNlcjIwOTI4NDI5","avatar_url":"https://avatars.githubusercontent.com/u/20928429?v=4","gravatar_id":"","url":"https://api.github.com/users/vvysotskyi","html_url":"https://github.com/vvysotskyi","followers_url":"https://api.github.com/users/vvysotskyi/followers","following_url":"https://api.github.com/users/vvysotskyi/following{/other_user}","gists_url":"https://api.github.com/users/vvysotskyi/gists{/gist_id}","starred_url":"https://api.github.com/users/vvysotskyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vvysotskyi/subscriptions","organizations_url":"https://api.github.com/users/vvysotskyi/orgs","repos_url":"https://api.github.com/users/vvysotskyi/repos","events_url":"https://api.github.com/users/vvysotskyi/events{/privacy}","received_events_url":"https://api.github.com/users/vvysotskyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-23T18:02:19Z","updated_at":"2021-07-23T18:02:19Z","author_association":"MEMBER","body":"@paul-rogers, I have added a mock plugin that can be used for checking this functionality and added unit tests that check both updated rules, please take a look.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/885808346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/885869395","html_url":"https://github.com/apache/drill/pull/2268#issuecomment-885869395","issue_url":"https://api.github.com/repos/apache/drill/issues/2268","id":885869395,"node_id":"IC_kwDOAFa5xc40zUtT","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-23T19:32:06Z","updated_at":"2021-07-23T19:48:33Z","author_association":"CONTRIBUTOR","body":"@dzamo, thanks much for inspecting the code and for the tests. @oleg-zinovev, the reason you are dealing with this mess is that Drill clearly did not have adequate tests in this area. Please, as part of your work, go ahead and add sufficient unit tests to check for the cases which @dzamo showed and for the other cases in my comments.\r\n\r\nYou may find that things don't work because of bugs in other areas. You seemed to find places where Drill deals with TIMESTAMP in UTC. As explained above, those are bugs: the bulk of Drill is written (alas) to assume TIMESTAMP is local time.\r\n\r\n`AGE()` is particularly nasty since it relies on the query start time, which will differ for each test. By factoring the logic into a function, where \"now\" is a parameter, you can write tests independent of the current time by passing in a known, fixed value for \"now.\" Otherwise, the results of the tests will reflect the actual query start time, and perhaps even time zone, and the test driver will have to repeat the math to check the answer. Doable, but complex.\r\n\r\nIf it were me, I would implement the age function as a normal Java function, test the heck out of it, then wrap it in a UDF. However, if you prefer, you can implement the logic in the UDF, then test the cases by running queries, which requires that you have a working reader and working conversion from Drill's output to some date/time class. Since I suspect these may also be buggy, doing \"full up\" testing may be a bit frustrating. Still, your choice.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/885869395/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/885875711","html_url":"https://github.com/apache/drill/pull/2268#issuecomment-885875711","issue_url":"https://api.github.com/repos/apache/drill/issues/2268","id":885875711,"node_id":"IC_kwDOAFa5xc40zWP_","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-23T19:45:35Z","updated_at":"2021-07-23T19:45:35Z","author_association":"CONTRIBUTOR","body":"@dzamo, let's think a bit about your observation:\r\n\r\n> You're using the UTC timezone when you work with left.value and right.value and I think that's right.\r\n\r\nAs explained elsewhere, Drill defines its TIMESTAMP column as local time, specifically, the number of ms. since 1970-01-01'T'00:00:00 *local time*. That is, it is a ms offset, from a specific calendar date, but from midnight on that date local time. This *looks* like UTC, but isn't. UTC is defined as ms. since the epoch, and the epoch is UTC. Yes, I agree, this has long been *very* confusing.\r\n\r\nI find that writing words just gets folks further wrapped around the axle. Tests, however, are unambiguous. If baby Fred's birthday is 2020-07-23, then Fred's Age is 1 year (exactly) in any timezone, during the period from midnight to midnight on 2021-07-23. Fred's age (as customarily stated) should not include units finer than a day.\r\n\r\nDrill's AGE function does return a finer grain: the number of ms:\r\n\r\n> Returns the interval between two timestamps or subtracts a timestamp from midnight of the current date.\r\n\r\nThis makes sense: it is the number of ms since midnight local time (since we don't know, and wouldn't care about, the timezone in which Fred was born.)\r\n\r\nAnd, the reason that the \"midnight local time\" makes sense is that even TIMESTAMP are in local time.\r\n\r\nNow, I could be wrong (we've seen cases where the code does one thing and the documentation says another, or where two smart engineers strenuously disagree about how Drill's time support is supposed to work.) So, *caveat emptor*.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/885875711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/885888891","html_url":"https://github.com/apache/drill/pull/2251#issuecomment-885888891","issue_url":"https://api.github.com/repos/apache/drill/issues/2251","id":885888891,"node_id":"IC_kwDOAFa5xc40zZd7","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-23T20:11:26Z","updated_at":"2021-07-23T21:42:26Z","author_association":"CONTRIBUTOR","body":"@vdiravka, thanks for the explanation. Let's be careful not to confuse existing implementation with new requirements. Yes, there is a comment that says that the system options are persistent and session options are not. Be careful to read this correctly. *At the time the comment was written*, system options were the only persistent options. System options, by definition, have to be persistent. The comment did not *forbid* session options from being persistent; it simply observes that, at that time, for the reasons we discussed, session options were not persistent. Nor does the comment say that, if you add persistent user-level options, that they have to be system options because only system options are persistent: you are free to add persistence to session options.\r\n\r\nThanks splitting this PR into two: one for options, another for plugins. Else, discussion becomes overly complex.\r\n\r\n*Before* we worry about code details, we have to get the semantics right. After writing the comment on plugins, below, I realize that we are probably using the same words for entirely different ideas. Your goal is to add multi-tenant support to Drill. You uses the term \"user options\". I now realize you probably mean \"tenant options.\"\r\n\r\nIf we are doing per-user options (which is how I first read your description), then the requirements are one thing. If we want per-tenant options, the requirements are different. Let's list both scenarios: per-user options and per-tenant options. Please let us know which you are trying to build (or if you are tying to build something else entirely.)\r\n\r\n## Per-User Persistent Options\r\n\r\nSuppose the goal is to let users (individual named humans) persist options. We assume that system-wide settings are set as system options. We are simply avoiding the need for the user to configure their own personal options on each login.\r\n\r\nUsers will want to persist only *some* of their session options. We discussed that this may not work as one might think: we have to think through the issues. The point was that concurrency of user options will be a mess if they work like system options: if changes to user/session options are written to persistent storage immediately. This will screw up queries as I persist \"all-text-mode\" in one session, which breaks a query in another. Point is, user options *must* have semantics different from system options.\r\n\r\n* We need a concurrency guarantee. One choice is \"options are propagated to all active sessions with unknown latency, just like system options.\" Another, more dependable, is \"session options are initialized on session startup, after which they do not reflect changes made in other sessions.\" Whatever it is, the definition has to be stable and explainable.\r\n* Some options apply to queries: we've been using \"all-text-mode\" as an example. Such options will be set frequently. Since these options are per-query, we cannot set the option across all user sessions immediately, as that will break queries. Instead, the user has to *tell us* when they want to persist that setting. Otherwise the setting is per-session (that is, per-query.)\r\n\r\nIs it a bad thing that the behavior of queries depends on session options? Certainly. That was a poor design choice. But, it is how Drill works, and we have to design new features to reflect this choice.\r\n\r\n## Per-Tenant Options\r\n\r\nNow, if the goal is to have \"per-tenant\" options, we have a much different problem. Each *tenant* is an organization which believes it has its own Drill cluster. That the cluster is shared is invisible to the tenant. The tenant reads in the docs that they can change system options, so they decide to do so. Those changes must persist only for that one *tenant* and all that tenant's users.\r\n\r\nI now see that this is probably what you are trying to implement. As a result, the semantics are closer to system options. For now, let's assume that you do not, in fact, need per-user (per-named human) persistent options.\r\n\r\nLet's list some possible requirements:\r\n\r\n* A bootstrap option enables multi-tenant support. The option is off by default, meaning that existing Drill behavior is unchanged by default.\r\n* A tenant is an organization with (a single user? multiple users?)\r\n* Each tenant has a *tenant admin* user who may set its own (subset of) system options. This subset is called *tenant preferences*. Such options persist, like session options, but apply only to sessions started for that tenant. Values set by one tenant cannot be seen by any other tenant.\r\n* Both server options and tenant preferences are system options: changes take effect immediately (after some latency) in all active sessions. Both are changed with the `ALTER SESSION` and related commands.\r\n* A new class of user, \"tenant admin\", is given permission to change tenant preferences. The \"tenant admin\" cannot change server options. When a tenant admin issues an `ALTER SESSION` command, that command alters the tenant preferences.\r\n* The full set of system options include options outside of the tenant preferences set. These are called *server options* and may only be set by a *server admin* user who belongs to the organization that administers the physical Drill cluster.\r\n* In multi-tenant mode, the Drill \"admin\" user becomes the *server admin* who can modify server options. The server admin can also view and change tenant preferences.When the server admin issues an `ALTER SESSION` command, that command alters the server options.\r\n* When not run in multi-tenant mode, server options and tenant preferences are identical, they are just *system options*. In multi-tenant mode, the concepts are distinct: each tenant has their own persistent set of tenant preferences separate from server options.\r\n* Normal users can change neither server options nor tenant preferences; such user can only change session options using the `ALTER SESSION` command.\r\n* The server options, tenant preferences, and session options form a hierarchy, as in present Drill. The server admin can alter any option which \"flows down\" to all other levels. The tenant admin can alter tenant preference which \"flow down\" to sessions.\r\n\r\nCode wise, you will be adding a new system options layer. You should mark options as \"server\", \"tenant\" or \"user\" so the above requirements can be enforced.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/885888891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/885898568","html_url":"https://github.com/apache/drill/pull/2251#issuecomment-885898568","issue_url":"https://api.github.com/repos/apache/drill/issues/2251","id":885898568,"node_id":"IC_kwDOAFa5xc40zb1I","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-23T20:31:28Z","updated_at":"2021-07-23T21:41:30Z","author_association":"CONTRIBUTOR","body":"@vdiravka, on the plugins side, I think the confusion over \"user\" and \"tenant\" has us talking about different designs. Again, let's discuss per-user and per-tenant designs. Tell me which you are trying to build.\r\n\r\nClarifying the desired tenant model may help with the options discussion. I've been equating \"user\" with \"person\". If your tenant model equates \"user\" with \"tenant\", you are actually trying to define per-tenant defaults. Perhaps update the docs to clearly say so. Let's use the term \"tenant\" for a business entity and \"user\" for a human, perhaps within that tenant.\r\n\r\n## Per-User Plugin Configs\r\n\r\nThe goal here is to allow users (humans) to create their own private plugin configs. Since the users work in a common organization, users may wish to share configs without copy/paste reuse.\r\n\r\nRequirements for this case:\r\n\r\n* Provide a bootstrap option to enable the new semantics. The default is off, meaning that Drill behavior will not change by default.\r\n* Retain global plugin configurations. (They allow multiple users to share the same configuration without copy/paste.)\r\n* Add per-user plugin configurations.\r\n* Users can add and change only their own per-user configurations. (No user can \"share\" a config with another user: either the config must be copied to a global config by the admin, or the second user must make their own copy.)\r\n* If a user configuration happens to have the same name as a global configuration, the per-user configuration takes precedence. (If the admin make a global version of a now-shared config, the user must delete his own copy in order to use the now-shared version.)\r\n* No non-admin user can see or change the configuration for another user. (That is, if two people work in the same group, and want to share a config, they must do so via copy/paste, or by asking the admin to make the plugin global to all users.)\r\n* No non-admin user can change a global configuration.\r\n* The admin user can see, add, modify or delete *any* plugin configuration, both global and per-user. (Without this, the system is not maintainable as the admin won't be able to manage per-user configurations.)\r\n\r\n## Per-Tenant Plugin Configs\r\n\r\nThe other way to read your comments is that you want plugin configs per *tenant* (business entity). In this case, as we said earlier, Tenant A should not know that there is a Tenant B on the same cluster. There is likely no shared storage or configs between tenants. The only exception would be system-level configs offered by the organization that owns the Drill cluster, such as the system tables. Maybe some demo data.\r\n\r\nRequirements in this case:\r\n\r\n* Provide a bootstrap option to enable multi-tenant support. The default is off, meaning that Drill behavior will not change by default.\r\n* A set of global plugin configuration is provided by, and can only be changed by, the server admin (as defined in the earlier note.) If no global plugins are to be provided, then delete all global plugin configs.\r\n* The system table is not controlled by a plugin config. If tenants are to be prohibited from using system tables, provide an option to disable system tables. (Or, a per a later note, ensure that system tables do not leak tenant information.)\r\n* Tenants see only their own configs. To the tenant, the per-tenant configs *are* the plugin configs.\r\n* UI and API operations that operate on configs, when run in multi-tenant mode, implicitly apply to the set only for that one tenant. That is, there is no new UI or API; the existing operations simply change meaning to apply to only the active tenant.\r\n* Every user (except the server admin) is associated with a tenant. If the user has permission to modify plugins, then all changes apply to only that one tenant. (Possible refinement: only the tenant admin, as defined earlier, can change tenant plugin configs.)\r\n* A tenant may (may not?) have multiple users. All tenant users see the same set of tenant plugins. There are no \"per-user\" plugins, only per-tenant plugins.\r\n* Tenants can add and change only their own per-tenant configurations. No tenant can \"share\" a config with another tenant.\r\n* If a tenant configuration happens to have the same name as a global configuration, the per-tenant configuration takes precedence.\r\n* No tenant can change a global configuration.\r\n* The server admin user can see, add, modify or delete *any* plugin configuration, both global and per-tenant. (Without this, the system is not maintainable as the admin won't be able to manage per-tenant configurations.)\r\n","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/885898568/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/885928024","html_url":"https://github.com/apache/drill/pull/2251#issuecomment-885928024","issue_url":"https://api.github.com/repos/apache/drill/issues/2251","id":885928024,"node_id":"IC_kwDOAFa5xc40zjBY","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-23T21:41:38Z","updated_at":"2021-07-23T21:41:38Z","author_association":"CONTRIBUTOR","body":"@vdiravka, let's think about your larger goal.  If the goal is a true multi-tenant model, in which tenants are distinct business entities (rather than different departments within a single entity), then we must also ensure each tenant has access to only their own query profiles. Will there be another PR for this? Is there a roll-up Jira ticket for all the issues involved in true multi-tenant operation?\r\n\r\nAlso, the Drill UI assumes a single organization. If the UI is to be exposed to multi-tenant users (so they can monitor queries, see query profiles, etc.), then the UI must change. Tenants should not be able to see details, or change the state of, Drillbits. Session options should reflect tenant values. Probably other changes. Will there be a design or PR for this?\r\n\r\nFurther, each tenant must have guarantees on resources. That is, Tenant A should not be able to run a huge query that denies resources sold to Tenant B. This is a **very hard** problem. If you don't solve the hard problem, the options and plugins are somewhat moot. The option and plugin features are handy, but do not, by themselves, give you multi-tenant support in Drill.\r\n\r\nSystem tables could \"leak\" information between tenants. Should system tables be disabled? What changes would be needed to ensure that no per-tenant information \"leaks\" to another tenant?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/885928024/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/886007823","html_url":"https://github.com/apache/drill/pull/2268#issuecomment-886007823","issue_url":"https://api.github.com/repos/apache/drill/issues/2268","id":886007823,"node_id":"IC_kwDOAFa5xc40z2gP","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-24T06:27:20Z","updated_at":"2021-07-24T07:59:38Z","author_association":"CONTRIBUTOR","body":"Thanks @paul-rogers.  I think we're actually all nearly singing from the same hymn sheet now.  Two last notes from me.\r\n\r\n#### Milliseconds since the \"local epoch\" (1970-01-01 00:00 local time zone).\r\n\r\nThe following yield the same integer.\r\n\r\n1. I tell Drill a zoneless time, Drill regards it as in UTC, Drill converts it to UNIX time (ms since the real, UTC-based epoch).\r\n2. I tell Drill a zoneless time, Drill regards it as in the locally configured time zone, Drill extracts the \"local UNIX time\" (ms since the epoch in local time).\r\n\r\nI conclude that\r\n\r\n1. The design, or spec, is (as you've explained) what is said by (2): Drill timestamps are milliseconds since the \"local epoch\",\r\n2. @oleg-zinovev has nevertheless _not_ found bugs in the examples of (1) that he has presented here and we can keep his new code that does the same (for the TIMESTAMPs `left.value` and `right.value`, not for query start time - see my earlier test)\r\n\r\n#### Bug fix vs Improvement\r\n\r\nWhat do we think about me opening another ticket for us to do a second pass on these date functions?  There is usage of Joda all over the place, tests coverage is spotty in places, there are lots of heap allocations, etc.  Maybe doing this would mean Oleg's patch for a critical bug can remain simple and because we know we're coming back.  Calendar arithmetic is so wicked that perhaps we'll always have libs and heap allocations here.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/886007823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/886014747","html_url":"https://github.com/apache/drill/pull/2268#issuecomment-886014747","issue_url":"https://api.github.com/repos/apache/drill/issues/2268","id":886014747,"node_id":"IC_kwDOAFa5xc40z4Mb","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-24T07:36:40Z","updated_at":"2021-07-24T07:36:40Z","author_association":"CONTRIBUTOR","body":"@dzamo, makes sense. Let's at least get a few good tests for this case, then we can declare victory.\r\n\r\nNote that zoneless times (DATE, TIME) should *never* be UTC, they are always local by definition. They are the reason (I presume) that Drill treats timestamps as local time: so we can convert between DATE, TIME and TIMESTAMP. \r\n\r\nWhat Drill needs to clean up this mess is a UTC_TIMESTAMP type. There are suggestions in the code that the original team wanted to add a \"zoned timestamp\" type. But, such a monster would be too cumbersome for common use since, typically, any given column has a known timezone or, more likely in modern times, is in UTC.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/886014747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/886148585","html_url":"https://github.com/apache/drill/pull/2277#issuecomment-886148585","issue_url":"https://api.github.com/repos/apache/drill/issues/2277","id":886148585,"node_id":"IC_kwDOAFa5xc400Y3p","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-25T05:17:46Z","updated_at":"2021-07-25T05:17:46Z","author_association":"CONTRIBUTOR","body":"> LGTM. +1\r\n> @dzamo It is time to merge. thanks\r\n\r\nBeat me to it! ","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/886148585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/886918399","html_url":"https://github.com/apache/drill/pull/2278#issuecomment-886918399","issue_url":"https://api.github.com/repos/apache/drill/issues/2278","id":886918399,"node_id":"IC_kwDOAFa5xc403Uz_","user":{"login":"vdiravka","id":11904420,"node_id":"MDQ6VXNlcjExOTA0NDIw","avatar_url":"https://avatars.githubusercontent.com/u/11904420?v=4","gravatar_id":"","url":"https://api.github.com/users/vdiravka","html_url":"https://github.com/vdiravka","followers_url":"https://api.github.com/users/vdiravka/followers","following_url":"https://api.github.com/users/vdiravka/following{/other_user}","gists_url":"https://api.github.com/users/vdiravka/gists{/gist_id}","starred_url":"https://api.github.com/users/vdiravka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vdiravka/subscriptions","organizations_url":"https://api.github.com/users/vdiravka/orgs","repos_url":"https://api.github.com/users/vdiravka/repos","events_url":"https://api.github.com/users/vdiravka/events{/privacy}","received_events_url":"https://api.github.com/users/vdiravka/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-26T18:11:37Z","updated_at":"2021-07-26T18:11:37Z","author_association":"MEMBER","body":"> @vdiravka, thanks for making changes, +1\r\n> \r\n> **Let's merge it only after CI jobs passed to ensure that memory changes were fine.**\r\n\r\nMemory changes improved the CI builds a bit, but not fully. I will try to cover it in [DRILL-7973](https://github.com/vdiravka/drill/tree/DRILL-7973)","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/886918399/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/886925937","html_url":"https://github.com/apache/drill/pull/2278#issuecomment-886925937","issue_url":"https://api.github.com/repos/apache/drill/issues/2278","id":886925937,"node_id":"IC_kwDOAFa5xc403Wpx","user":{"login":"vvysotskyi","id":20928429,"node_id":"MDQ6VXNlcjIwOTI4NDI5","avatar_url":"https://avatars.githubusercontent.com/u/20928429?v=4","gravatar_id":"","url":"https://api.github.com/users/vvysotskyi","html_url":"https://github.com/vvysotskyi","followers_url":"https://api.github.com/users/vvysotskyi/followers","following_url":"https://api.github.com/users/vvysotskyi/following{/other_user}","gists_url":"https://api.github.com/users/vvysotskyi/gists{/gist_id}","starred_url":"https://api.github.com/users/vvysotskyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vvysotskyi/subscriptions","organizations_url":"https://api.github.com/users/vvysotskyi/orgs","repos_url":"https://api.github.com/users/vvysotskyi/repos","events_url":"https://api.github.com/users/vvysotskyi/events{/privacy}","received_events_url":"https://api.github.com/users/vvysotskyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-26T18:22:29Z","updated_at":"2021-07-26T18:22:29Z","author_association":"MEMBER","body":"Ok, then let's revert those changes here and address the issue in DRILL-7973, since currently at least the master branch is green.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/886925937/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/887041732","html_url":"https://github.com/apache/drill/pull/2251#issuecomment-887041732","issue_url":"https://api.github.com/repos/apache/drill/issues/2251","id":887041732,"node_id":"IC_kwDOAFa5xc403y7E","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-26T21:31:19Z","updated_at":"2021-07-26T21:31:19Z","author_association":"CONTRIBUTOR","body":"@vdiravka, I had an opportunity to get a bit more background info for this project. I am going out of my way to try to facilitate this PR; normally we'd require that the PR author provide this information so that us reviews can simply review the code, and not have to reverse engineer requirements and design.\r\n\r\nSounds like the requirements are for a very specific light-weight multi-tenant model: one that allows tenants to set options, create storage plugin configs, and run queries, but not access any other part of Drill. Tenants are to be trusted to not make mistakes. Specifically:\r\n\r\n* A *tenant* has a set of \"system\" options (maybe call them *tenant options*) available when that tenant creates a Drill session.\r\n* A tenant can define a set of storage plugin configs which are visible to *only* that tenant. Perhaps call these *tenant plugin configs*.\r\n* A tenant can run queries that use the tenant options and tenant plugin configs.\r\n\r\nThis use case is limited compared to the normal multi-tenant requirements. The following appear to be restrictions for this project:\r\n\r\n* A tenant does not have access to the Drill Web Console or the Drill REST API and thus does not have access to query profiles.\r\n* A tenant does not have access to Zookeeper or the Drill native API. Queries sent by the tenant must go through an intermediate software layer provided by the service provider.\r\n* A tenant does not have access to Drill logs to diagnose failed queries.\r\n\r\nThe above restrictions say that the feature is not useful for open source Drill users who use the Drill-provided UI and APIs. This makes the feature of very limited appeal to the Drill community. So, one of our challenges is to design the feature in a way that users of the \"out-of-the-box\" Drill can benefit.\r\n\r\nAdditional restrictions for this one use case:\r\n\r\n* A tenant cannot start, stop or restart Drillbits, nor can they change startup properties.\r\n* A tenant cannot upload a UDF nor can a tenant provide custom *connectors* (storage plugin classes). (Note that [DRILL-7916](https://github.com/apache/drill/pull/2215) is working at cross-purposes to this PR.)\r\n* Tenants are trusted to not change system-wide performance-related options (queueing, resource allocation, etc.) The resulting behavior, if those options are changed, is undefined and must be dealt with by the service provider if they occur.\r\n* No provision for the Drill admin to view or modify tenant options or plugin configs. If such behavior is desired, a service provider must write tools that work with Drill's persistent storage.\r\n* Tenants are trusted to not consume excess resources, so no resource isolation between tenants. Tenant A might try to sort a trillion rows, which might deny resources to other tenants.\r\n* Tenants cannot (?) create views or a metadata store.\r\n* Parquet metadata caching is either unsupported (?) or must be written to the tenant's S3 bucket; Drill provides no storage for the metadata.\r\n\r\nThe above limit the solution, but leave the door open to eventually providing more general multi-tenant support.\r\n\r\nA final question is the relation between *tenant* and *user*. This PR assumes that they are identical: that \"fred\" is either a normal Drill user in \"normal mode\", or a tenant in \"tenant mode.\" That is, each tenant has a single Drill user (which works in this use case because of the intermediate software layer.) This explains why this PR is labeled as \"instances for different *users*\", the the discussion has revealed the goal to be \"instances for different *tenants*.\"\r\n\r\nSince the \"tenant = user\" model applies to only this one use case, it again is not a general enough feature to add to the Apache Drill code. Instead, Apache Drill must provide a generally useful solution. \r\n\r\nPrior notes have explained how a \"per-user\" model should work (it requires sharing between users). Specifically a, \"config per user\" solution must recognize that users work on a team, allow sharing, and permit admin abilities. Similarly, an \"options per user\" solution must persist only a subset of options (those which are neither system nor per-query options), and must solve the synchronization issue.\r\n\r\nNotes have also explained that the customary definition of \"tenant\" is an organization with multiple users. A true multi-tenant solution must allow multiple users per tenant, and provide a path toward full tenant isolation later.\r\n\r\nThe challenge here is to find a design that balances the very specific, ad-hoc, unusual needs of this one use case, with something that can evolve to become of general use to the Drill community.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/887041732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/887063203","html_url":"https://github.com/apache/drill/pull/2251#issuecomment-887063203","issue_url":"https://api.github.com/repos/apache/drill/issues/2251","id":887063203,"node_id":"IC_kwDOAFa5xc4034Kj","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-26T22:13:45Z","updated_at":"2021-07-26T22:13:45Z","author_association":"CONTRIBUTOR","body":"@vdiravka, here I will suggest the broad outline of a design which meets the very limited goals of this PR while also providing a path forward for a generally useful set of Apache Drill features.\r\n\r\nWe introduce one new concept, the *tenant*. Key concepts:\r\n\r\n* A tenant is a *name space* for options and plugin configs. The tenant level is optional; by default, no tenants exist.\r\n* Each user has an optional associated *tenant ID*. A user with no tenant ID works at the system level. (Example: the Drill admin, or a user who sets up demo configs shared by all users.) A user with an associated tenant ID gives the tenant name space to use. There may be 0, 1 or many users associated with a tenant.\r\n* A persistent *tenant options* name space sits between the system options and the session options in the option hierarchy. Users \"inherit\" options from the system layer, unless overridden at the tenant layer, unless overridden at the session layer.\r\n* Queries and plugin config-related API calls resolve plugin configs within the *tenant plugin config name space*. On lookups, if the config is not found in the tenant name space, repeat the search in the global name space. (Allows system-wide configs for such things as demo data.)\r\n\r\nNow we can decide how much of the above to implement in this PR, leaving the rest to future PRs. Given your goals, it would seem the minimum is:\r\n\r\n* Provide an API or other means to define tenants and to associate tenants with users.\r\n* Provide documentation for how to inspect or remove per-tenant name spaces (e.g. if the tenant cancels service or is moved to another cluster.)\r\n* Tenant membership is enforced for the native and REST query APIs.\r\n* Tenant users can see the Drill Console, but features that are not \"tenant-ready\" should be disabled. That is, a tenant user might only be able to run a query, and see their options, but not see query profiles, etc.\r\n\r\nSQL semantics:\r\n\r\n* The `ALTER SYSTEM` command affects the tenant option store given by the user's tenant ID, if any. *System* (e.g. server-wide) options are set using the same command issued by a user with no tenant ID.\r\n* System tables are not available to users associated with a tenant ID. (Later, this can be modified to filter system table contents to include only information for that tenant.)\r\n\r\nAn possible code design might be:\r\n\r\n* Add a tenant registry which can be as simple as the known, valid tenant IDs. This \"registry\" can simply be an API, with a default implementation that does nothing.\r\n* Add a field to the user to hold the tenant ID. When resolving a user name, obtain the tenant ID along with the admin/normal-user access level.\r\n* Unfortunately, Drill does not have a `User` object, we assume the only information for a user is the user name. Define a new `User` object which holds the user ID and tenant ID. (Ideally, it would also hold the security level, etc.)\r\n* We know that the system must determine if the user is an admin. Extend that mechanism to also provide the tenant ID. Modify that code to provide a new method which returns the `User` object. A storage plugin manager client can either use an existing `User` object, or obtain a new one by calling to this new `User` factory method.\r\n* Introduce the tenant option manager which acts like the system option manager, and persists to a location that includes the tenant ID in the name. Persistence is to a location which includes the tenant ID in the name.\r\n* When a session starts, if the user has a tenant ID, add the tenant option manager to the session option manager stack. This one change should ensure that the option solution \"just works\" everywhere else.\r\n* Modify the storage plugin manager to require a `User` object for every config CRUD method. The `User` says which tenant store to read from or write to.\r\n* The storage plugin registry currently uses keys to locate configs. This key is extended with the tenant ID. Modify config resolution to use the tenant ID. If the config is not found in the tenant store, or the tenant ID is not set for the user, repeat the search with the default \"system\" config store. When modifying configs, write to the persistent store given by the tenant ID.\r\n* Modify all clients of the storage plugin manager to pass along the `User` object, creating one if needed.\r\n* System tables do not have an associated config. For system tables (only), enforce the rule above: if a plugin lookup resolves to the system plugin, and the user has an associated tenant ID, act as if the plugin is not found.\r\n\r\nThis proposed design accomplishes two goals. First, it is limited in scope to only the limited needs of the PR author. Second, it is constructed in a way that others can extend the solution toward a full multi-tenant solution in the future without breaking backward compatibility.\r\n\r\nNote that this design is a *multi-tenant* solution, not a *per-user* solution. I would suggest changing the title of the PR to match the intent to (partially) solve the multi-tenant problem.\r\n\r\nThe good news is that this is more-or-less in line with some of the code in this PR.\r\n\r\n@vdiravka, please review these suggestions, and the need to offer a solution that is of general interest to the Drill community. Feel free to use the above, or to modify them, to propose a revised set of requirements and designs. Once we're on the same page at the design level, attention can return to review of the code itself. ","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/887063203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/889246337","html_url":"https://github.com/apache/drill/pull/2281#issuecomment-889246337","issue_url":"https://api.github.com/repos/apache/drill/issues/2281","id":889246337,"node_id":"IC_kwDOAFa5xc41ANKB","user":{"login":"luocooong","id":50079619,"node_id":"MDQ6VXNlcjUwMDc5NjE5","avatar_url":"https://avatars.githubusercontent.com/u/50079619?v=4","gravatar_id":"","url":"https://api.github.com/users/luocooong","html_url":"https://github.com/luocooong","followers_url":"https://api.github.com/users/luocooong/followers","following_url":"https://api.github.com/users/luocooong/following{/other_user}","gists_url":"https://api.github.com/users/luocooong/gists{/gist_id}","starred_url":"https://api.github.com/users/luocooong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luocooong/subscriptions","organizations_url":"https://api.github.com/users/luocooong/orgs","repos_url":"https://api.github.com/users/luocooong/repos","events_url":"https://api.github.com/users/luocooong/events{/privacy}","received_events_url":"https://api.github.com/users/luocooong/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-29T15:33:00Z","updated_at":"2021-07-29T15:33:00Z","author_association":"MEMBER","body":"@dzamo \nError: Failed to execute goal org.apache.rat:apache-rat-plugin:0.13:check (rat-checks) on project drill-root: Too many files with unapproved license: 1 See RAT report in: /home/runner/work/drill/drill/target/rat.txt -> [Help 1]","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/889246337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/889696045","html_url":"https://github.com/apache/drill/pull/2281#issuecomment-889696045","issue_url":"https://api.github.com/repos/apache/drill/issues/2281","id":889696045,"node_id":"IC_kwDOAFa5xc41B68t","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-07-30T07:37:26Z","updated_at":"2021-07-30T07:37:26Z","author_association":"CONTRIBUTOR","body":"Thanks, I've added the Apache license.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/889696045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/891086769","html_url":"https://github.com/apache/drill/pull/2283#issuecomment-891086769","issue_url":"https://api.github.com/repos/apache/drill/issues/2283","id":891086769,"node_id":"IC_kwDOAFa5xc41HOex","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-02T14:46:23Z","updated_at":"2021-08-02T15:25:42Z","author_association":"CONTRIBUTOR","body":"Perhaps we should be trying for consistency with what Drill does with analogous JSON data.  Querying this document\r\n```json\r\n[\r\n\t{\r\n\t\t\"foo\": null\r\n\t},\r\n\t{\r\n\t\t\"foo\": { \"bar\": 0 }\r\n\t}\r\n]\r\n```\r\ngives you \r\n```\r\nfoo      |\r\n---------|\r\n{}       |\r\n{\"bar\":0}|\r\n```\r\n.  The null value becomes an empty map, as I proposed for empty XML elements, but things are otherwise different.  Adding an object with an int property `{\"foo\": 2}` returns an error, not a map with a special key `{'__value__' : 2 }`.  Changing that second object hold `\"foo\": [ 1, 2, 3 ]` makes the foo column an array.  Somehow Drill is able to delay its decision on the column type until the ocurrence of the first non-null value.  Is this something that's possible with Easy format plugins?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/891086769/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/891119762","html_url":"https://github.com/apache/drill/pull/2283#issuecomment-891119762","issue_url":"https://api.github.com/repos/apache/drill/issues/2283","id":891119762,"node_id":"IC_kwDOAFa5xc41HWiS","user":{"login":"cgivre","id":5513150,"node_id":"MDQ6VXNlcjU1MTMxNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5513150?v=4","gravatar_id":"","url":"https://api.github.com/users/cgivre","html_url":"https://github.com/cgivre","followers_url":"https://api.github.com/users/cgivre/followers","following_url":"https://api.github.com/users/cgivre/following{/other_user}","gists_url":"https://api.github.com/users/cgivre/gists{/gist_id}","starred_url":"https://api.github.com/users/cgivre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgivre/subscriptions","organizations_url":"https://api.github.com/users/cgivre/orgs","repos_url":"https://api.github.com/users/cgivre/repos","events_url":"https://api.github.com/users/cgivre/events{/privacy}","received_events_url":"https://api.github.com/users/cgivre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-02T15:29:04Z","updated_at":"2021-08-02T15:29:04Z","author_association":"CONTRIBUTOR","body":"> I started out adding specific, implementation-level comments but I've paused that to back off and ask: is this really a _self-closing tag_ thing, or is the situation the same for _any empty element_ that also occurs as a parent element? In my tests on `master`. the problem is the same for either of the following, which I believe are also equivalent in the XML spec.\r\n> \r\n> ```\r\n> <!-- self-closing -->\r\n> <foo/>\r\n> \r\n> <!-- just empty -->\r\n> <foo></foo>\r\n> ```\r\n> \r\n> If I've got right end of the stick here then I suggest that we adjust all the naming to refer to the \"empty element\" case, rather than the \"self-closing\" case.\r\n> \r\n> Next, following on from our comments on Jira and the idea of using maps for this case, what do you think of the following approach?\r\n> \r\n> 1. When our first encounter with an element `foo` is empty, and therefore ambiguous in terms of type, we default to the non-leaf case and make it a map.\r\n> 2. For subsequent parent `foo` elements we return populated maps.  For subsequent empty `foo` elements we return empty maps.\r\n> 3. For subsequent leaf elements `<foo>bar</foo>`, which we would normally map to varchar but where we find that we've already got a map from step 1, we put the element value into the map under a hardcoded special key, e.g. `{ '__value__': 'bar' }`.\r\n> \r\n> The above will also work in the case when the first element encountered is empty but has attributes `<foo a='b' />` while the element discarding logic in the present patch does not discard such elements. If you're not crazy about this it's no problem and I've probably got a couple more specific remarks to add on the implementation.\r\n\r\n@dzamo Thanks for the response.  The real issue is that we don't know the schema as we're scanning the file, so we have to do the best we can.  The issue is that with the empty fields (self-closing or otherwise) we don't really know what they are until we see real data.  For instance, if we decide to make them an empty map, we'll get an error if the next record shows up as a scalar.  The current approach was to treat empty fields as scalars which then causes issues if we encounter a map in the next row.\r\nYou asked in an other comment about perhaps treating all empty elements in the same manner.  There was a specific challenge as to how the self closing tags which is why I made this PR.  I'm actually working on another project to get the XML reader to download a provided schema (the XSD link) which would actually solve a lot of issues reading XML.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/891119762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/891185264","html_url":"https://github.com/apache/drill/pull/2283#issuecomment-891185264","issue_url":"https://api.github.com/repos/apache/drill/issues/2283","id":891185264,"node_id":"IC_kwDOAFa5xc41Hmhw","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-02T17:04:19Z","updated_at":"2021-08-02T17:04:19Z","author_association":"CONTRIBUTOR","body":"Yes, I think I did grok the unknown schema problem.  The thought above, which somehow escaped all the striking out I did to it after thinking a bit more, was to take advantage of the fact that scalar string can be embedded into a single element map.  The tuple generating code would need to become aware when it should do this.\r\n\r\nMy second comment's comparison of the situation with a JSON property that is first null, then an object, is also a bit dubious because empty XML elements do not represent nulls (from I what read) so much as zero length strings.  \r\n\r\nIf there is an effort to make querying XML behave in a more similar way to querying equivalent JSON, for some definition of equivalent, it should probably wait for another PR.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/891185264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/891377214","html_url":"https://github.com/apache/drill/pull/2283#issuecomment-891377214","issue_url":"https://api.github.com/repos/apache/drill/issues/2283","id":891377214,"node_id":"IC_kwDOAFa5xc41IVY-","user":{"login":"cgivre","id":5513150,"node_id":"MDQ6VXNlcjU1MTMxNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5513150?v=4","gravatar_id":"","url":"https://api.github.com/users/cgivre","html_url":"https://github.com/cgivre","followers_url":"https://api.github.com/users/cgivre/followers","following_url":"https://api.github.com/users/cgivre/following{/other_user}","gists_url":"https://api.github.com/users/cgivre/gists{/gist_id}","starred_url":"https://api.github.com/users/cgivre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgivre/subscriptions","organizations_url":"https://api.github.com/users/cgivre/orgs","repos_url":"https://api.github.com/users/cgivre/repos","events_url":"https://api.github.com/users/cgivre/events{/privacy}","received_events_url":"https://api.github.com/users/cgivre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-02T22:31:12Z","updated_at":"2021-08-02T22:31:12Z","author_association":"CONTRIBUTOR","body":"> Yes, I think I did grok the unknown schema problem. The thought above, which somehow escaped all the striking out I did to it after thinking a bit more, was to take advantage of the fact that scalar string can be embedded into a single element map. The tuple generating code would need to become aware when it should do this.\r\n> \r\n> My second comment's comparison of the situation with a JSON property that is first null, then an object, is also a bit dubious because empty XML elements do not represent nulls (from I what read) so much as zero length strings.\r\n> \r\n> If there is an effort to make querying XML behave in a more similar way to querying equivalent JSON, for some definition of equivalent, it should probably wait for another PR.\r\n\r\nI think you're right about that.  From what I remember, there is an option for Drill's JSON parser to treat `NaN` and something else as `null`.   For XML I don't know how you'd distinguish between an empty string and `null`.  \r\n\r\nThis was also an issue with some data I was working on.  The JSON version used empty strings to denote `null` then subsequent rows would contain maps which would cause SchemaChange exceptions.  The only way to fix that was to use the `UNION` data type.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/891377214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/891397172","html_url":"https://github.com/apache/drill/pull/2283#issuecomment-891397172","issue_url":"https://api.github.com/repos/apache/drill/issues/2283","id":891397172,"node_id":"IC_kwDOAFa5xc41IaQ0","user":{"login":"cgivre","id":5513150,"node_id":"MDQ6VXNlcjU1MTMxNTA=","avatar_url":"https://avatars.githubusercontent.com/u/5513150?v=4","gravatar_id":"","url":"https://api.github.com/users/cgivre","html_url":"https://github.com/cgivre","followers_url":"https://api.github.com/users/cgivre/followers","following_url":"https://api.github.com/users/cgivre/following{/other_user}","gists_url":"https://api.github.com/users/cgivre/gists{/gist_id}","starred_url":"https://api.github.com/users/cgivre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cgivre/subscriptions","organizations_url":"https://api.github.com/users/cgivre/orgs","repos_url":"https://api.github.com/users/cgivre/repos","events_url":"https://api.github.com/users/cgivre/events{/privacy}","received_events_url":"https://api.github.com/users/cgivre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-02T23:21:54Z","updated_at":"2021-08-02T23:21:54Z","author_association":"CONTRIBUTOR","body":"@dzamo Are we good to go on this PR?","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/891397172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/891687681","html_url":"https://github.com/apache/drill/pull/2283#issuecomment-891687681","issue_url":"https://api.github.com/repos/apache/drill/issues/2283","id":891687681,"node_id":"IC_kwDOAFa5xc41JhMB","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-03T09:25:34Z","updated_at":"2021-08-03T09:25:34Z","author_association":"CONTRIBUTOR","body":"Now that I test master again after this merge, both the self-closing and long form empty XML element cases work perfectly.  As with the JSON example above, an empty `<foo></foo>` followed by a parent `<foo><bar>1</bar></foo>` results in a empty map for the `<foo></foo>`, while before the merge I got an error.  I have to confess that I couldn't see all of this getting sorted about by this PR, which seemed focussed on self-closing tags only, but perhaps I was testing an old build in the first place.  Nice one!","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/891687681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/892035292","html_url":"https://github.com/apache/drill/pull/2284#issuecomment-892035292","issue_url":"https://api.github.com/repos/apache/drill/issues/2284","id":892035292,"node_id":"IC_kwDOAFa5xc41K2Dc","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-03T17:39:36Z","updated_at":"2021-08-04T03:15:02Z","author_association":"CONTRIBUTOR","body":"@paul-rogers. I think we lost Oleg on #2268.  I've closed that and opened this PR based on where he got to, plus some fixes relating to his assumptions of UTC and Unix times.  The fixes take care of the problem revealed by `select age(current_date)`, but other tests reveal another problem with java.time code used, in that intervals that span midnight are reported to be a whole day long, even when they're a few minutes.\r\n\r\nI'll request a review once the problem above is fixed and the tests are expanded.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/892035292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/892036558","html_url":"https://github.com/apache/drill/pull/2268#issuecomment-892036558","issue_url":"https://api.github.com/repos/apache/drill/issues/2268","id":892036558,"node_id":"IC_kwDOAFa5xc41K2XO","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-03T17:41:39Z","updated_at":"2021-08-03T17:41:39Z","author_association":"CONTRIBUTOR","body":"Closing in favour of #2284 where development continues.  @oleg-zinovev thanks for everything you contributed towards this fix and sorry it turned out to be far from a straightforward patch. ","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/892036558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/892222987","html_url":"https://github.com/apache/drill/pull/2284#issuecomment-892222987","issue_url":"https://api.github.com/repos/apache/drill/issues/2284","id":892222987,"node_id":"IC_kwDOAFa5xc41Lj4L","user":{"login":"oleg-zinovev","id":17238766,"node_id":"MDQ6VXNlcjE3MjM4NzY2","avatar_url":"https://avatars.githubusercontent.com/u/17238766?v=4","gravatar_id":"","url":"https://api.github.com/users/oleg-zinovev","html_url":"https://github.com/oleg-zinovev","followers_url":"https://api.github.com/users/oleg-zinovev/followers","following_url":"https://api.github.com/users/oleg-zinovev/following{/other_user}","gists_url":"https://api.github.com/users/oleg-zinovev/gists{/gist_id}","starred_url":"https://api.github.com/users/oleg-zinovev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oleg-zinovev/subscriptions","organizations_url":"https://api.github.com/users/oleg-zinovev/orgs","repos_url":"https://api.github.com/users/oleg-zinovev/repos","events_url":"https://api.github.com/users/oleg-zinovev/events{/privacy}","received_events_url":"https://api.github.com/users/oleg-zinovev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-03T23:06:16Z","updated_at":"2021-08-03T23:06:16Z","author_association":"CONTRIBUTOR","body":"@dzamo \r\n\r\nThank you for continuing to fix the age function. Unfortunately, my work is no longer connected with Apache Drill, and it is not always possible to find personal time.","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/892222987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/892380195","html_url":"https://github.com/apache/drill/pull/2284#issuecomment-892380195","issue_url":"https://api.github.com/repos/apache/drill/issues/2284","id":892380195,"node_id":"IC_kwDOAFa5xc41MKQj","user":{"login":"paul-rogers","id":3248881,"node_id":"MDQ6VXNlcjMyNDg4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/3248881?v=4","gravatar_id":"","url":"https://api.github.com/users/paul-rogers","html_url":"https://github.com/paul-rogers","followers_url":"https://api.github.com/users/paul-rogers/followers","following_url":"https://api.github.com/users/paul-rogers/following{/other_user}","gists_url":"https://api.github.com/users/paul-rogers/gists{/gist_id}","starred_url":"https://api.github.com/users/paul-rogers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paul-rogers/subscriptions","organizations_url":"https://api.github.com/users/paul-rogers/orgs","repos_url":"https://api.github.com/users/paul-rogers/repos","events_url":"https://api.github.com/users/paul-rogers/events{/privacy}","received_events_url":"https://api.github.com/users/paul-rogers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-04T05:44:14Z","updated_at":"2021-08-04T05:44:14Z","author_association":"CONTRIBUTOR","body":"@dzamo, sounds like a good plan. Thanks for taking this on! Drill date handling is a bit of a pain - I appreciate your efforts to get things right. Just ping me when you're ready for a review. ","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/892380195/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/drill/issues/comments/892550419","html_url":"https://github.com/apache/drill/pull/2284#issuecomment-892550419","issue_url":"https://api.github.com/repos/apache/drill/issues/2284","id":892550419,"node_id":"IC_kwDOAFa5xc41Mz0T","user":{"login":"jnturton","id":9107319,"node_id":"MDQ6VXNlcjkxMDczMTk=","avatar_url":"https://avatars.githubusercontent.com/u/9107319?v=4","gravatar_id":"","url":"https://api.github.com/users/jnturton","html_url":"https://github.com/jnturton","followers_url":"https://api.github.com/users/jnturton/followers","following_url":"https://api.github.com/users/jnturton/following{/other_user}","gists_url":"https://api.github.com/users/jnturton/gists{/gist_id}","starred_url":"https://api.github.com/users/jnturton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnturton/subscriptions","organizations_url":"https://api.github.com/users/jnturton/orgs","repos_url":"https://api.github.com/users/jnturton/repos","events_url":"https://api.github.com/users/jnturton/events{/privacy}","received_events_url":"https://api.github.com/users/jnturton/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-08-04T10:34:15Z","updated_at":"2021-08-05T06:49:06Z","author_association":"CONTRIBUTOR","body":"Okay...\r\n\r\n1. I converted the `AGE` function to a Freemarker template, removing duplicated code.\r\n2. I got rid of some unnecessary time zone wrangling.  I was trying to do everything using ZonedDateTimes in the configured time zone, because of worries about edge cases like daylight savings transitions and what effect people might expect those to have on `AGE`, but I then reviewed the `TIMESTAMPDIFF` implementation, a function that tackles a similar problem, and ended up calculating only with LocalDateTimes, consistent with `TIMESTAMPDIFF`.\r\n3. The basic solution is Oleg's final Java Time API one which is, I think, very clean, and it works.  The issue I thought it had over midnights was a red herring due to the string literals I was testing with getting truncated to round dates for lacking a `timestamp` prefix.  So really the only thing wrong with where Oleg got to was the time zone handling of the query start time used in the unary form of `AGE`.\r\n4. I've added tests, mainly for the unary form.\r\n5. The Java Time techniques used here present an opportunity to considerably simplify the Java Time part of `TIMESTAMPDIFF`, so I did that.  It's in a separate commit and doesn't have to be part of this PR if that would be cheating on paperwork.\r\n\r\nping @paul-rogers ","reactions":{"url":"https://api.github.com/repos/apache/drill/issues/comments/892550419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]